{"sha": "67fcaaaa7a9c393926e25db600a9976137425d68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZmNhYWFhN2E5YzM5MzkyNmUyNWRiNjAwYTk5NzYxMzc0MjVkNjg=", "commit": {"author": {"name": "Andrea Nall", "email": "anall@andreanall.com", "date": "2021-02-16T02:32:21Z"}, "committer": {"name": "Andrea Nall", "email": "anall@andreanall.com", "date": "2021-02-16T02:32:21Z"}, "message": "a few more diagnostic items", "tree": {"sha": "200bffeac102eef6010cfe328b8ce914991e8558", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/200bffeac102eef6010cfe328b8ce914991e8558"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67fcaaaa7a9c393926e25db600a9976137425d68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67fcaaaa7a9c393926e25db600a9976137425d68", "html_url": "https://github.com/rust-lang/rust/commit/67fcaaaa7a9c393926e25db600a9976137425d68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67fcaaaa7a9c393926e25db600a9976137425d68/comments", "author": {"login": "anall", "id": 12371, "node_id": "MDQ6VXNlcjEyMzcx", "avatar_url": "https://avatars.githubusercontent.com/u/12371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anall", "html_url": "https://github.com/anall", "followers_url": "https://api.github.com/users/anall/followers", "following_url": "https://api.github.com/users/anall/following{/other_user}", "gists_url": "https://api.github.com/users/anall/gists{/gist_id}", "starred_url": "https://api.github.com/users/anall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anall/subscriptions", "organizations_url": "https://api.github.com/users/anall/orgs", "repos_url": "https://api.github.com/users/anall/repos", "events_url": "https://api.github.com/users/anall/events{/privacy}", "received_events_url": "https://api.github.com/users/anall/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anall", "id": 12371, "node_id": "MDQ6VXNlcjEyMzcx", "avatar_url": "https://avatars.githubusercontent.com/u/12371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anall", "html_url": "https://github.com/anall", "followers_url": "https://api.github.com/users/anall/followers", "following_url": "https://api.github.com/users/anall/following{/other_user}", "gists_url": "https://api.github.com/users/anall/gists{/gist_id}", "starred_url": "https://api.github.com/users/anall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anall/subscriptions", "organizations_url": "https://api.github.com/users/anall/orgs", "repos_url": "https://api.github.com/users/anall/repos", "events_url": "https://api.github.com/users/anall/events{/privacy}", "received_events_url": "https://api.github.com/users/anall/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6bb62810ae226b35e0181d8c4efc6d0377d196d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bb62810ae226b35e0181d8c4efc6d0377d196d", "html_url": "https://github.com/rust-lang/rust/commit/c6bb62810ae226b35e0181d8c4efc6d0377d196d"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "1137a83bc77da57c6cabb8ea19753b07ec5b1dfb", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/67fcaaaa7a9c393926e25db600a9976137425d68/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67fcaaaa7a9c393926e25db600a9976137425d68/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=67fcaaaa7a9c393926e25db600a9976137425d68", "patch": "@@ -169,11 +169,13 @@ symbols! {\n         Option,\n         Ord,\n         Ordering,\n+        OsStr,\n         OsString,\n         Output,\n         Param,\n         PartialEq,\n         PartialOrd,\n+        Path,\n         PathBuf,\n         Pending,\n         Pin,\n@@ -201,6 +203,7 @@ symbols! {\n         Sync,\n         Target,\n         ToOwned,\n+        ToString,\n         Try,\n         Ty,\n         TyCtxt,"}, {"sha": "bdb2d67347e432af641d67de844c57104da83be3", "filename": "library/alloc/src/borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67fcaaaa7a9c393926e25db600a9976137425d68/library%2Falloc%2Fsrc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67fcaaaa7a9c393926e25db600a9976137425d68/library%2Falloc%2Fsrc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fborrow.rs?ref=67fcaaaa7a9c393926e25db600a9976137425d68", "patch": "@@ -31,8 +31,8 @@ where\n /// implementing the `Clone` trait. But `Clone` works only for going from `&T`\n /// to `T`. The `ToOwned` trait generalizes `Clone` to construct owned data\n /// from any borrow of a given type.\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"ToOwned\")]\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait ToOwned {\n     /// The resulting type after obtaining ownership.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "00fd1c2908b82264ef4cae38f6c0ba888d1f9a5b", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67fcaaaa7a9c393926e25db600a9976137425d68/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67fcaaaa7a9c393926e25db600a9976137425d68/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=67fcaaaa7a9c393926e25db600a9976137425d68", "patch": "@@ -2174,6 +2174,7 @@ impl FromStr for String {\n /// implementation for free.\n ///\n /// [`Display`]: fmt::Display\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"ToString\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait ToString {\n     /// Converts the given value to a `String`."}, {"sha": "13c8022820bc3ed04057c776af19a1905d733859", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67fcaaaa7a9c393926e25db600a9976137425d68/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67fcaaaa7a9c393926e25db600a9976137425d68/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=67fcaaaa7a9c393926e25db600a9976137425d68", "patch": "@@ -90,6 +90,7 @@ pub struct OsString {\n ///\n /// [`&str`]: str\n /// [conversions]: super#conversions\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"OsStr\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n // FIXME:\n // `OsStr::from_inner` current implementation relies"}, {"sha": "afb28518b727d9773f65e44e893ed44bb2bfea81", "filename": "library/std/src/path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67fcaaaa7a9c393926e25db600a9976137425d68/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67fcaaaa7a9c393926e25db600a9976137425d68/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=67fcaaaa7a9c393926e25db600a9976137425d68", "patch": "@@ -1720,6 +1720,7 @@ impl AsRef<OsStr> for PathBuf {\n /// let extension = path.extension();\n /// assert_eq!(extension, Some(OsStr::new(\"txt\")));\n /// ```\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"Path\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n // FIXME:\n // `Path::new` current implementation relies"}]}