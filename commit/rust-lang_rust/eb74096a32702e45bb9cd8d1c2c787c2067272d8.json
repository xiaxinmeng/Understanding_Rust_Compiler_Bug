{"sha": "eb74096a32702e45bb9cd8d1c2c787c2067272d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNzQwOTZhMzI3MDJlNDViYjljZDhkMWMyYzc4N2MyMDY3MjcyZDg=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-09T21:56:19Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-09T21:56:57Z"}, "message": "Avoid calling `fn_sig` query during `is_const_fn_raw`", "tree": {"sha": "9aa24803a52be28b0283ef386f17dff56791578d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9aa24803a52be28b0283ef386f17dff56791578d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb74096a32702e45bb9cd8d1c2c787c2067272d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb74096a32702e45bb9cd8d1c2c787c2067272d8", "html_url": "https://github.com/rust-lang/rust/commit/eb74096a32702e45bb9cd8d1c2c787c2067272d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb74096a32702e45bb9cd8d1c2c787c2067272d8/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8b270a4b6d711b7dcd99b474b0866e6e3531c93", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8b270a4b6d711b7dcd99b474b0866e6e3531c93", "html_url": "https://github.com/rust-lang/rust/commit/e8b270a4b6d711b7dcd99b474b0866e6e3531c93"}], "stats": {"total": 27, "additions": 10, "deletions": 17}, "files": [{"sha": "bf438ead840791a5727fb7e1313ddd69b9c891dc", "filename": "src/librustc_mir/const_eval/fn_queries.rs", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/eb74096a32702e45bb9cd8d1c2c787c2067272d8/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb74096a32702e45bb9cd8d1c2c787c2067272d8/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs?ref=eb74096a32702e45bb9cd8d1c2c787c2067272d8", "patch": "@@ -99,8 +99,16 @@ fn is_const_fn_raw(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n \n     let node = tcx.hir().get(hir_id);\n \n-    if let Some(whitelisted) = is_const_intrinsic(tcx, def_id) {\n-        whitelisted\n+    if let hir::Node::ForeignItem(hir::ForeignItem { kind: hir::ForeignItemKind::Fn(..), .. }) =\n+        node\n+    {\n+        // Intrinsics use `rustc_const_{un,}stable` attributes to indicate constness. All other\n+        // foreign items cannot be evaluated at compile-time.\n+        if let Abi::RustIntrinsic | Abi::PlatformIntrinsic = tcx.hir().get_foreign_abi(hir_id) {\n+            tcx.lookup_const_stability(def_id).is_some()\n+        } else {\n+            false\n+        }\n     } else if let Some(fn_like) = FnLikeNode::from_node(node) {\n         if fn_like.constness() == hir::Constness::Const {\n             return true;\n@@ -116,21 +124,6 @@ fn is_const_fn_raw(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n     }\n }\n \n-/// Const evaluability whitelist is here to check evaluability at the\n-/// top level beforehand.\n-fn is_const_intrinsic(tcx: TyCtxt<'_>, def_id: DefId) -> Option<bool> {\n-    if tcx.is_closure(def_id) {\n-        return None;\n-    }\n-\n-    match tcx.fn_sig(def_id).abi() {\n-        Abi::RustIntrinsic | Abi::PlatformIntrinsic => {\n-            Some(tcx.lookup_const_stability(def_id).is_some())\n-        }\n-        _ => None,\n-    }\n-}\n-\n /// Checks whether the given item is an `impl` that has a `const` modifier.\n fn is_const_impl_raw(tcx: TyCtxt<'_>, def_id: LocalDefId) -> bool {\n     let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);"}]}