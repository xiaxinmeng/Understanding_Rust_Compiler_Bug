{"sha": "326556b09078a398e641dd221ab870ee0fe47f68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNjU1NmIwOTA3OGEzOThlNjQxZGQyMjFhYjg3MGVlMGZlNDdmNjg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-17T20:24:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-17T20:24:13Z"}, "message": "Merge #3203\n\n3203: vscode: press ; to respect semicolons r=matklad a=Veetaha\n\n\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>", "tree": {"sha": "c57aa6800df7d6ba702c3256921b714a222a37d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c57aa6800df7d6ba702c3256921b714a222a37d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/326556b09078a398e641dd221ab870ee0fe47f68", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeSvZtCRBK7hj4Ov3rIwAAdHIIACtYIRTbEQnTGCP3whmMUDZm\n6JCxWgStjWI3MajXZ/sM/VgH894f/EzyIaYqNAqfY/wdcgVSnFB7RrJZ0PtARHfg\nYHQdneJC3036e09H/J5RoDDW0HnHYl8p4BK8cgL6kj3vXJvt6jIGXd4AE/IYP6zB\nS/wI+CIuFCYc3dPkTXWs0TiZdyILK3g8TG4uzbDvkx2dpuUEJEgUfoDvFbNXZCjq\no4U0oefwwK8xFo/w7sA7H7dGbHjBfnTl5lxMPxrnqRICiPZmsnH6rFXeIHh9mqTO\nuB+r2YJJ48HHvoX1LXxWw29GkLnPOpSB8vrwtZkNeCWjtZ+Zt7K96KTnPhAXizQ=\n=2xo4\n-----END PGP SIGNATURE-----\n", "payload": "tree c57aa6800df7d6ba702c3256921b714a222a37d1\nparent 9053003e3b298b38f6029b860efc5baed1996385\nparent 73799640481c269a5aad408c99a22592d914fb1b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581971053 +0000\ncommitter GitHub <noreply@github.com> 1581971053 +0000\n\nMerge #3203\n\n3203: vscode: press ; to respect semicolons r=matklad a=Veetaha\n\n\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/326556b09078a398e641dd221ab870ee0fe47f68", "html_url": "https://github.com/rust-lang/rust/commit/326556b09078a398e641dd221ab870ee0fe47f68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/326556b09078a398e641dd221ab870ee0fe47f68/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9053003e3b298b38f6029b860efc5baed1996385", "url": "https://api.github.com/repos/rust-lang/rust/commits/9053003e3b298b38f6029b860efc5baed1996385", "html_url": "https://github.com/rust-lang/rust/commit/9053003e3b298b38f6029b860efc5baed1996385"}, {"sha": "73799640481c269a5aad408c99a22592d914fb1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/73799640481c269a5aad408c99a22592d914fb1b", "html_url": "https://github.com/rust-lang/rust/commit/73799640481c269a5aad408c99a22592d914fb1b"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "bebd99ca931fd0275213afd1284286e4dedce569", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=326556b09078a398e641dd221ab870ee0fe47f68", "patch": "@@ -16,7 +16,7 @@ export * from './ssr';\n \n export function collectGarbage(ctx: Ctx): Cmd {\n     return async () => {\n-        ctx.client?.sendRequest<null>('rust-analyzer/collectGarbage', null);\n+        await ctx.client?.sendRequest<null>('rust-analyzer/collectGarbage', null);\n     };\n }\n "}, {"sha": "9b814612aaabd6fbadb7fc959c392663af68147c", "filename": "editors/code/src/commands/ssr.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fcommands%2Fssr.ts", "raw_url": "https://github.com/rust-lang/rust/raw/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fcommands%2Fssr.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fssr.ts?ref=326556b09078a398e641dd221ab870ee0fe47f68", "patch": "@@ -14,9 +14,9 @@ export function ssr(ctx: Ctx): Cmd {\n                 if (x.includes('==>>')) {\n                     return null;\n                 }\n-                return \"Enter request: pattern ==>> template\"\n+                return \"Enter request: pattern ==>> template\";\n             }\n-        }\n+        };\n         const request = await vscode.window.showInputBox(options);\n \n         if (!request) return;"}, {"sha": "c4d286aefe4e76a7aa6bf94e3d47b4af18cb8410", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=326556b09078a398e641dd221ab870ee0fe47f68", "patch": "@@ -29,7 +29,7 @@ export function activateHighlighting(ctx: Ctx) {\n                 highlighter.setHighlights(targetEditor, params.decorations);\n             },\n         );\n-    };\n+    }\n \n     vscode.workspace.onDidChangeConfiguration(\n         _ => highlighter.removeHighlights(),"}, {"sha": "26705067aec16c1c6d00105382b71d44120633c6", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=326556b09078a398e641dd221ab870ee0fe47f68", "patch": "@@ -29,13 +29,13 @@ export function activateInlayHints(ctx: Ctx) {\n \n     ctx.pushCleanup({\n         dispose() {\n-            hintsUpdater.clear()\n+            hintsUpdater.clear();\n         }\n-    })\n+    });\n \n     // XXX: we don't await this, thus Promise rejections won't be handled, but\n     // this should never throw in fact...\n-    hintsUpdater.setEnabled(ctx.config.displayInlayHints)\n+    void hintsUpdater.setEnabled(ctx.config.displayInlayHints);\n }\n \n interface InlayHintsParams {\n@@ -57,7 +57,7 @@ const typeHintDecorationType = vscode.window.createTextEditorDecorationType({\n const parameterHintDecorationType = vscode.window.createTextEditorDecorationType({\n     before: {\n         color: new vscode.ThemeColor('rust_analyzer.inlayHint'),\n-    }\n+    },\n });\n \n class HintsUpdater {"}, {"sha": "9996c556fc4c358aa31d2dd9c140c3b0666bf861", "filename": "editors/code/src/installation/download_artifact.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts", "raw_url": "https://github.com/rust-lang/rust/raw/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts?ref=326556b09078a398e641dd221ab870ee0fe47f68", "patch": "@@ -15,15 +15,15 @@ import { throttle } from \"throttle-debounce\";\n  * of the artifact as `displayName`.\n  */\n export async function downloadArtifact(\n-    {downloadUrl, releaseName}: ArtifactReleaseInfo,\n+    { downloadUrl, releaseName }: ArtifactReleaseInfo,\n     artifactFileName: string,\n     installationDir: string,\n     displayName: string,\n ) {\n     await fs.mkdir(installationDir).catch(err => assert.strictEqual(\n         err?.code,\n         \"EEXIST\",\n-        `Couldn't create directory \"${installationDir}\" to download `+\n+        `Couldn't create directory \"${installationDir}\" to download ` +\n         `${artifactFileName} artifact: ${err.message}`\n     ));\n "}, {"sha": "a22e0bc66601630e1334948e091e20fdfb7adffd", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=326556b09078a398e641dd221ab870ee0fe47f68", "patch": "@@ -11,7 +11,7 @@ import { Config } from './config';\n let ctx: Ctx | undefined;\n \n export async function activate(context: vscode.ExtensionContext) {\n-    const config = new Config(context)\n+    const config = new Config(context);\n \n     const serverPath = await ensureServerBinary(config.serverSource);\n     if (serverPath == null) {\n@@ -33,17 +33,17 @@ export async function activate(context: vscode.ExtensionContext) {\n             vscode.window.showInformationMessage('Reloading rust-analyzer...');\n             // @DanTup maneuver\n             // https://github.com/microsoft/vscode/issues/45774#issuecomment-373423895\n-            await deactivate()\n+            await deactivate();\n             for (const sub of ctx.subscriptions) {\n                 try {\n                     sub.dispose();\n                 } catch (e) {\n                     console.error(e);\n                 }\n             }\n-            await activate(context)\n-        }\n-    })\n+            await activate(context);\n+        };\n+    });\n \n     ctx.registerCommand('analyzerStatus', commands.analyzerStatus);\n     ctx.registerCommand('collectGarbage', commands.collectGarbage);\n@@ -54,7 +54,7 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('expandMacro', commands.expandMacro);\n     ctx.registerCommand('run', commands.run);\n     ctx.registerCommand('onEnter', commands.onEnter);\n-    ctx.registerCommand('ssr', commands.ssr)\n+    ctx.registerCommand('ssr', commands.ssr);\n \n     // Internal commands which are invoked by the server.\n     ctx.registerCommand('runSingle', commands.runSingle);"}, {"sha": "0f5f6ef99e64c0fd1744de1c0820cc5a99ec409f", "filename": "editors/code/src/status_display.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "raw_url": "https://github.com/rust-lang/rust/raw/326556b09078a398e641dd221ab870ee0fe47f68/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fstatus_display.ts?ref=326556b09078a398e641dd221ab870ee0fe47f68", "patch": "@@ -15,7 +15,7 @@ export function activateStatusDisplay(ctx: Ctx) {\n             WorkDoneProgress.type,\n             'rustAnalyzer/cargoWatcher',\n             params => statusDisplay.handleProgressNotification(params)\n-        ))\n+        ));\n     }\n }\n "}]}