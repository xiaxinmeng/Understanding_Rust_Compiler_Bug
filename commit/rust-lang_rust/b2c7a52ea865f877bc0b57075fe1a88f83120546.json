{"sha": "b2c7a52ea865f877bc0b57075fe1a88f83120546", "node_id": "C_kwDOAAsO6NoAKGIyYzdhNTJlYTg2NWY4NzdiYzBiNTcwNzVmZTFhODhmODMxMjA1NDY", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2022-01-31T22:45:30Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-02-04T00:56:53Z"}, "message": "Fix import_granularity option when the use tree has an alias", "tree": {"sha": "388150aeb91b23768eff7c4ff6a285802fad2e75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/388150aeb91b23768eff7c4ff6a285802fad2e75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2c7a52ea865f877bc0b57075fe1a88f83120546", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c7a52ea865f877bc0b57075fe1a88f83120546", "html_url": "https://github.com/rust-lang/rust/commit/b2c7a52ea865f877bc0b57075fe1a88f83120546", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2c7a52ea865f877bc0b57075fe1a88f83120546/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "url": "https://api.github.com/repos/rust-lang/rust/commits/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5", "html_url": "https://github.com/rust-lang/rust/commit/606894eb0b1dcc3a4616aff4b54dbd19a2a46ba5"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "c60bec6d4a2014cb677fcd6f5d0c83169de3b271", "filename": "src/imports.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b2c7a52ea865f877bc0b57075fe1a88f83120546/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2c7a52ea865f877bc0b57075fe1a88f83120546/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=b2c7a52ea865f877bc0b57075fe1a88f83120546", "patch": "@@ -238,7 +238,8 @@ impl fmt::Display for UseSegment {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match *self {\n             UseSegment::Glob => write!(f, \"*\"),\n-            UseSegment::Ident(ref s, _) => write!(f, \"{}\", s),\n+            UseSegment::Ident(ref s, Some(ref alias)) => write!(f, \"{} as {}\", s, alias),\n+            UseSegment::Ident(ref s, None) => write!(f, \"{}\", s),\n             UseSegment::Slf(..) => write!(f, \"self\"),\n             UseSegment::Super(..) => write!(f, \"super\"),\n             UseSegment::Crate(..) => write!(f, \"crate\"),\n@@ -622,7 +623,8 @@ impl UseTree {\n     fn merge(&mut self, other: &UseTree, merge_by: SharedPrefix) {\n         let mut prefix = 0;\n         for (a, b) in self.path.iter().zip(other.path.iter()) {\n-            if a.equal_except_alias(b) {\n+            // only discard the alias at the root of the tree\n+            if (prefix == 0 && a.equal_except_alias(b)) || a == b {\n                 prefix += 1;\n             } else {\n                 break;"}, {"sha": "3e9139177c56ed5df57c2aeb1d73985344581687", "filename": "tests/source/5131.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/b2c7a52ea865f877bc0b57075fe1a88f83120546/tests%2Fsource%2F5131.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2c7a52ea865f877bc0b57075fe1a88f83120546/tests%2Fsource%2F5131.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2F5131.rs?ref=b2c7a52ea865f877bc0b57075fe1a88f83120546", "patch": "@@ -0,0 +1,33 @@\n+// rustfmt-imports_granularity: Module\n+\n+#![allow(dead_code)]\n+\n+mod a {\n+    pub mod b {\n+        pub struct Data {\n+            pub a: i32,\n+        }\n+    }\n+\n+    use crate::a::b::Data;\n+    use crate::a::b::Data as Data2;\n+\n+    pub fn data(a: i32) -> Data {\n+        Data { a }\n+    }\n+\n+    pub fn data2(a: i32) -> Data2 {\n+        Data2 { a }\n+    }\n+\n+    #[cfg(test)]\n+    mod tests {\n+        use super::*;\n+\n+        #[test]\n+        pub fn test() {\n+            data(1);\n+            data2(1);\n+        }\n+    }\n+}"}, {"sha": "763024d6fa4959d5db34f2fbd19f08d29cc96a9c", "filename": "tests/target/5131.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b2c7a52ea865f877bc0b57075fe1a88f83120546/tests%2Ftarget%2F5131.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2c7a52ea865f877bc0b57075fe1a88f83120546/tests%2Ftarget%2F5131.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2F5131.rs?ref=b2c7a52ea865f877bc0b57075fe1a88f83120546", "patch": "@@ -0,0 +1,32 @@\n+// rustfmt-imports_granularity: Module\n+\n+#![allow(dead_code)]\n+\n+mod a {\n+    pub mod b {\n+        pub struct Data {\n+            pub a: i32,\n+        }\n+    }\n+\n+    use crate::a::b::{Data, Data as Data2};\n+\n+    pub fn data(a: i32) -> Data {\n+        Data { a }\n+    }\n+\n+    pub fn data2(a: i32) -> Data2 {\n+        Data2 { a }\n+    }\n+\n+    #[cfg(test)]\n+    mod tests {\n+        use super::*;\n+\n+        #[test]\n+        pub fn test() {\n+            data(1);\n+            data2(1);\n+        }\n+    }\n+}"}]}