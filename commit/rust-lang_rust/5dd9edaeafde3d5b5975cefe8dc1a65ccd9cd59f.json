{"sha": "5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZDllZGFlYWZkZTNkNWI1OTc1Y2VmZThkYzFhNjVjY2Q5Y2Q1OWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T14:20:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T14:23:55Z"}, "message": "Move matching brace to new Ctx", "tree": {"sha": "12032141b5a113aca0a05ce2ebb3da55ce87f7f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12032141b5a113aca0a05ce2ebb3da55ce87f7f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f", "html_url": "https://github.com/rust-lang/rust/commit/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57df9bed703bd0f8b7a7cc593152b65b543ad121", "url": "https://api.github.com/repos/rust-lang/rust/commits/57df9bed703bd0f8b7a7cc593152b65b543ad121", "html_url": "https://github.com/rust-lang/rust/commit/57df9bed703bd0f8b7a7cc593152b65b543ad121"}], "stats": {"total": 67, "additions": 35, "deletions": 32}, "files": [{"sha": "9d9b9c5754994360a550f99483a1d908b96d3d26", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f", "patch": "@@ -1,11 +1,11 @@\n import { Ctx, Cmd } from '../ctx'\n \n import { analyzerStatus } from './analyzer_status';\n+import { matchingBrace } from './matching_brace';\n import * as applySourceChange from './apply_source_change';\n import * as expandMacro from './expand_macro';\n import * as inlayHints from './inlay_hints';\n import * as joinLines from './join_lines';\n-import * as matchingBrace from './matching_brace';\n import * as onEnter from './on_enter';\n import * as parentModule from './parent_module';\n import * as runnables from './runnables';"}, {"sha": "665b0c33cc412fd62784082fa2a7d1fc2c37817f", "filename": "editors/code/src/commands/matching_brace.ts", "status": "modified", "additions": 26, "deletions": 27, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f/editors%2Fcode%2Fsrc%2Fcommands%2Fmatching_brace.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f/editors%2Fcode%2Fsrc%2Fcommands%2Fmatching_brace.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fmatching_brace.ts?ref=5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f", "patch": "@@ -1,34 +1,33 @@\n import * as vscode from 'vscode';\n-\n import { Position, TextDocumentIdentifier } from 'vscode-languageclient';\n-import { Server } from '../server';\n+import { Ctx, Cmd } from '../ctx';\n+\n+export function matchingBrace(ctx: Ctx): Cmd {\n+    return async () => {\n+        const editor = ctx.activeRustEditor;\n+        if (!editor) {\n+            return;\n+        }\n+        const request: FindMatchingBraceParams = {\n+            textDocument: { uri: editor.document.uri.toString() },\n+            offsets: editor.selections.map(s => ctx.client.code2ProtocolConverter.asPosition(s.active)),\n+        };\n+        const response = await ctx.client.sendRequest<Position[]>(\n+            'rust-analyzer/findMatchingBrace',\n+            request,\n+        );\n+        editor.selections = editor.selections.map((sel, idx) => {\n+            const active = ctx.client.protocol2CodeConverter.asPosition(\n+                response[idx],\n+            );\n+            const anchor = sel.isEmpty ? active : sel.anchor;\n+            return new vscode.Selection(anchor, active);\n+        });\n+        editor.revealRange(editor.selection);\n+    }\n+}\n \n interface FindMatchingBraceParams {\n     textDocument: TextDocumentIdentifier;\n     offsets: Position[];\n }\n-\n-export async function handle() {\n-    const editor = vscode.window.activeTextEditor;\n-    if (editor == null || editor.document.languageId !== 'rust') {\n-        return;\n-    }\n-    const request: FindMatchingBraceParams = {\n-        textDocument: { uri: editor.document.uri.toString() },\n-        offsets: editor.selections.map(s => {\n-            return Server.client.code2ProtocolConverter.asPosition(s.active);\n-        }),\n-    };\n-    const response = await Server.client.sendRequest<Position[]>(\n-        'rust-analyzer/findMatchingBrace',\n-        request,\n-    );\n-    editor.selections = editor.selections.map((sel, idx) => {\n-        const active = Server.client.protocol2CodeConverter.asPosition(\n-            response[idx],\n-        );\n-        const anchor = sel.isEmpty ? active : sel.anchor;\n-        return new vscode.Selection(anchor, active);\n-    });\n-    editor.revealRange(editor.selection);\n-}"}, {"sha": "712337fe71c582c92cf6d48220e6b8e44f56c530", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f", "patch": "@@ -13,6 +13,13 @@ export class Ctx {\n         return Server.client;\n     }\n \n+    get activeRustEditor(): vscode.TextEditor | undefined {\n+        const editor = vscode.window.activeTextEditor;\n+        return editor && editor.document.languageId === 'rust'\n+            ? editor\n+            : undefined;\n+    }\n+\n     registerCommand(name: string, factory: (ctx: Ctx) => Cmd) {\n         const fullName = `rust-analyzer.${name}`;\n         const cmd = factory(this);"}, {"sha": "a4149a0599900debe59db2b20fe76300abf1aed3", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=5dd9edaeafde3d5b5975cefe8dc1a65ccd9cd59f", "patch": "@@ -17,6 +17,7 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx = new Ctx(context);\n     ctx.registerCommand('analyzerStatus', commands.analyzerStatus);\n     ctx.registerCommand('collectGarbage', commands.collectGarbage);\n+    ctx.registerCommand('matchingBrace', commands.matchingBrace);\n \n     function disposeOnDeactivation(disposable: vscode.Disposable) {\n         context.subscriptions.push(disposable);\n@@ -55,10 +56,6 @@ export async function activate(context: vscode.ExtensionContext) {\n     }\n \n     // Commands are requests from vscode to the language server\n-    registerCommand(\n-        'rust-analyzer.matchingBrace',\n-        commands.matchingBrace.handle,\n-    );\n     registerCommand('rust-analyzer.joinLines', commands.joinLines.handle);\n     registerCommand('rust-analyzer.parentModule', commands.parentModule.handle);\n     registerCommand('rust-analyzer.run', commands.runnables.handle);"}]}