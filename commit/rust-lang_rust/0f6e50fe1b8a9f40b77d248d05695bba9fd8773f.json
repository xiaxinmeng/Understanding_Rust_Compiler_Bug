{"sha": "0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "node_id": "C_kwDOAAsO6NoAKDBmNmU1MGZlMWI4YTlmNDBiNzdkMjQ4ZDA1Njk1YmJhOWZkODc3M2Y", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-06T10:58:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-06T10:58:33Z"}, "message": "Auto merge of #8933 - DennisOSRM:needless_braces_range_literal, r=dswij\n\nAdd new lint [`needless_parens_on_range_literals`]\n\nchangelog: Adds a new lint [`needless_parens_on_range_literals`] to warn on needless braces on literals in a range statement\n\nFor example, the lint would catch\n\n```log\nerror: needless parenthesis on range literals can be removed\n  --> $DIR/needless_parens_on_range_literals.rs:8:13\n   |\nLL |     let _ = ('a')..=('z');\n   |             ^^^^^ help: try: `'a'`\n   |\n   = note: `-D clippy::needless-parens-on-range-literals` implied by `-D warnings`\n```", "tree": {"sha": "69453061644b7c09a915ddacb4fbd4674baa3790", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69453061644b7c09a915ddacb4fbd4674baa3790"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "html_url": "https://github.com/rust-lang/rust/commit/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e771624e1e0de266ae4720354cf4534f010d39d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e771624e1e0de266ae4720354cf4534f010d39d", "html_url": "https://github.com/rust-lang/rust/commit/3e771624e1e0de266ae4720354cf4534f010d39d"}, {"sha": "61d7dd2af08c995283eda6580cbbcad15897fa57", "url": "https://api.github.com/repos/rust-lang/rust/commits/61d7dd2af08c995283eda6580cbbcad15897fa57", "html_url": "https://github.com/rust-lang/rust/commit/61d7dd2af08c995283eda6580cbbcad15897fa57"}], "stats": {"total": 187, "additions": 175, "deletions": 12}, "files": [{"sha": "462e56892fd990941699779e648055539051234d", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -3605,6 +3605,7 @@ Released 2018-09-13\n [`needless_match`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_match\n [`needless_option_as_deref`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_option_as_deref\n [`needless_option_take`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_option_take\n+[`needless_parens_on_range_literals`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_parens_on_range_literals\n [`needless_pass_by_value`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value\n [`needless_question_mark`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_question_mark\n [`needless_range_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop"}, {"sha": "4691f957cb4ed88547af1b3b041d5ff5b2c22716", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -242,6 +242,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(needless_bool::NEEDLESS_BOOL),\n     LintId::of(needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE),\n     LintId::of(needless_late_init::NEEDLESS_LATE_INIT),\n+    LintId::of(needless_parens_on_range_literals::NEEDLESS_PARENS_ON_RANGE_LITERALS),\n     LintId::of(needless_question_mark::NEEDLESS_QUESTION_MARK),\n     LintId::of(needless_update::NEEDLESS_UPDATE),\n     LintId::of(neg_cmp_op_on_partial_ord::NEG_CMP_OP_ON_PARTIAL_ORD),"}, {"sha": "efb073af6b6e9ffe142ee319b68b9a03a10b8522", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -408,6 +408,7 @@ store.register_lints(&[\n     needless_continue::NEEDLESS_CONTINUE,\n     needless_for_each::NEEDLESS_FOR_EACH,\n     needless_late_init::NEEDLESS_LATE_INIT,\n+    needless_parens_on_range_literals::NEEDLESS_PARENS_ON_RANGE_LITERALS,\n     needless_pass_by_value::NEEDLESS_PASS_BY_VALUE,\n     needless_question_mark::NEEDLESS_QUESTION_MARK,\n     needless_update::NEEDLESS_UPDATE,"}, {"sha": "b6992ae0ad25f5168a3d50f8099d194c8e2c0aab", "filename": "clippy_lints/src/lib.register_style.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Flib.register_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Flib.register_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_style.rs?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -91,6 +91,7 @@ store.register_group(true, \"clippy::style\", Some(\"clippy_style\"), vec![\n     LintId::of(mut_mutex_lock::MUT_MUTEX_LOCK),\n     LintId::of(mut_reference::UNNECESSARY_MUT_PASSED),\n     LintId::of(needless_late_init::NEEDLESS_LATE_INIT),\n+    LintId::of(needless_parens_on_range_literals::NEEDLESS_PARENS_ON_RANGE_LITERALS),\n     LintId::of(neg_multiply::NEG_MULTIPLY),\n     LintId::of(new_without_default::NEW_WITHOUT_DEFAULT),\n     LintId::of(non_copy_const::BORROW_INTERIOR_MUTABLE_CONST),"}, {"sha": "a0a6bab407c39b28a1d66018f640c1331b9bde30", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -315,6 +315,7 @@ mod needless_borrowed_ref;\n mod needless_continue;\n mod needless_for_each;\n mod needless_late_init;\n+mod needless_parens_on_range_literals;\n mod needless_pass_by_value;\n mod needless_question_mark;\n mod needless_update;\n@@ -746,6 +747,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| Box::new(collapsible_if::CollapsibleIf));\n     store.register_early_pass(|| Box::new(items_after_statements::ItemsAfterStatements));\n     store.register_early_pass(|| Box::new(precedence::Precedence));\n+    store.register_late_pass(|| Box::new(needless_parens_on_range_literals::NeedlessParensOnRangeLiterals));\n     store.register_early_pass(|| Box::new(needless_continue::NeedlessContinue));\n     store.register_early_pass(|| Box::new(redundant_else::RedundantElse));\n     store.register_late_pass(|| Box::new(create_dir::CreateDir));"}, {"sha": "6e54b243c0371d386001a66223bbbf605e690532", "filename": "clippy_lints/src/needless_parens_on_range_literals.rs", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Fneedless_parens_on_range_literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/clippy_lints%2Fsrc%2Fneedless_parens_on_range_literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_parens_on_range_literals.rs?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -0,0 +1,87 @@\n+use clippy_utils::{\n+    diagnostics::span_lint_and_then,\n+    higher,\n+    source::{snippet, snippet_with_applicability},\n+};\n+\n+use rustc_ast::ast;\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind};\n+\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+  /// ### What it does\n+  /// The lint checks for parenthesis on literals in range statements that are\n+  /// superfluous.\n+  ///\n+  /// ### Why is this bad?\n+  /// Having superfluous parenthesis makes the code less readable\n+  /// overhead when reading.\n+  ///\n+  /// ### Example\n+  ///\n+  /// ```rust\n+  /// for i in (0)..10 {\n+  ///   println!(\"{i}\");\n+  /// }\n+  /// ```\n+  ///\n+  /// Use instead:\n+  ///\n+  /// ```rust\n+  /// for i in 0..10 {\n+  ///   println!(\"{i}\");\n+  /// }\n+  /// ```\n+  #[clippy::version = \"1.63.0\"]\n+  pub NEEDLESS_PARENS_ON_RANGE_LITERALS,\n+  style,\n+  \"needless parenthesis on range literals can be removed\"\n+}\n+\n+declare_lint_pass!(NeedlessParensOnRangeLiterals => [NEEDLESS_PARENS_ON_RANGE_LITERALS]);\n+\n+fn snippet_enclosed_in_parenthesis(snippet: &str) -> bool {\n+    snippet.starts_with('(') && snippet.ends_with(')')\n+}\n+\n+fn check_for_parens(cx: &LateContext<'_>, e: &Expr<'_>, is_start: bool) {\n+    if is_start &&\n+    let ExprKind::Lit(ref literal) = e.kind &&\n+    let ast::LitKind::Float(_sym, ast::LitFloatType::Unsuffixed) = literal.node\n+    {\n+        // don't check floating point literals on the start expression of a range\n+        return;\n+    }\n+    if_chain! {\n+        if let ExprKind::Lit(ref literal) = e.kind;\n+        // the indicator that parenthesis surround the literal is that the span of the expression and the literal differ\n+        if (literal.span.data().hi - literal.span.data().lo) != (e.span.data().hi - e.span.data().lo);\n+        // inspect the source code of the expression for parenthesis\n+        if snippet_enclosed_in_parenthesis(&snippet(cx, e.span, \"\"));\n+        then {\n+            let mut applicability = Applicability::MachineApplicable;\n+            span_lint_and_then(cx, NEEDLESS_PARENS_ON_RANGE_LITERALS, e.span,\n+                \"needless parenthesis on range literals can be removed\",\n+                |diag| {\n+                    let suggestion = snippet_with_applicability(cx, literal.span, \"_\", &mut applicability);\n+                    diag.span_suggestion(e.span, \"try\", suggestion, applicability);\n+                });\n+        }\n+    }\n+}\n+\n+impl<'tcx> LateLintPass<'tcx> for NeedlessParensOnRangeLiterals {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n+        if let Some(higher::Range { start, end, .. }) = higher::Range::hir(expr) {\n+            if let Some(start) = start {\n+                check_for_parens(cx, start, true);\n+            }\n+            if let Some(end) = end {\n+                check_for_parens(cx, end, false);\n+            }\n+        }\n+    }\n+}"}, {"sha": "e69b40f35f4c6baf0cc841a6ed9c543fed5694b2", "filename": "tests/ui/almost_complete_letter_range.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Falmost_complete_letter_range.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Falmost_complete_letter_range.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.fixed?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -6,6 +6,7 @@\n #![feature(stmt_expr_attributes)]\n #![warn(clippy::almost_complete_letter_range)]\n #![allow(ellipsis_inclusive_range_patterns)]\n+#![allow(clippy::needless_parens_on_range_literals)]\n \n macro_rules! a {\n     () => {"}, {"sha": "f2240981d45fa34baf23694176a80c73e1d06835", "filename": "tests/ui/almost_complete_letter_range.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Falmost_complete_letter_range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Falmost_complete_letter_range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.rs?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -6,6 +6,7 @@\n #![feature(stmt_expr_attributes)]\n #![warn(clippy::almost_complete_letter_range)]\n #![allow(ellipsis_inclusive_range_patterns)]\n+#![allow(clippy::needless_parens_on_range_literals)]\n \n macro_rules! a {\n     () => {"}, {"sha": "5b5dc40ee54d0ab6da23e65905ffb5865a5f2b34", "filename": "tests/ui/almost_complete_letter_range.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Falmost_complete_letter_range.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Falmost_complete_letter_range.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.stderr?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -1,5 +1,5 @@\n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:19:17\n+  --> $DIR/almost_complete_letter_range.rs:20:17\n    |\n LL |         let _ = ('a') ..'z';\n    |                 ^^^^^^--^^^\n@@ -9,87 +9,87 @@ LL |         let _ = ('a') ..'z';\n    = note: `-D clippy::almost-complete-letter-range` implied by `-D warnings`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:20:17\n+  --> $DIR/almost_complete_letter_range.rs:21:17\n    |\n LL |         let _ = 'A' .. ('Z');\n    |                 ^^^^--^^^^^^\n    |                     |\n    |                     help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:26:13\n+  --> $DIR/almost_complete_letter_range.rs:27:13\n    |\n LL |     let _ = (b'a')..(b'z');\n    |             ^^^^^^--^^^^^^\n    |                   |\n    |                   help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:27:13\n+  --> $DIR/almost_complete_letter_range.rs:28:13\n    |\n LL |     let _ = b'A'..b'Z';\n    |             ^^^^--^^^^\n    |                 |\n    |                 help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:32:13\n+  --> $DIR/almost_complete_letter_range.rs:33:13\n    |\n LL |     let _ = a!()..'z';\n    |             ^^^^--^^^\n    |                 |\n    |                 help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:35:9\n+  --> $DIR/almost_complete_letter_range.rs:36:9\n    |\n LL |         b'a'..b'z' if true => 1,\n    |         ^^^^--^^^^\n    |             |\n    |             help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:36:9\n+  --> $DIR/almost_complete_letter_range.rs:37:9\n    |\n LL |         b'A'..b'Z' if true => 2,\n    |         ^^^^--^^^^\n    |             |\n    |             help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:43:9\n+  --> $DIR/almost_complete_letter_range.rs:44:9\n    |\n LL |         'a'..'z' if true => 1,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:44:9\n+  --> $DIR/almost_complete_letter_range.rs:45:9\n    |\n LL |         'A'..'Z' if true => 2,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:54:9\n+  --> $DIR/almost_complete_letter_range.rs:55:9\n    |\n LL |         'a'..'z' => 1,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `...`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:61:13\n+  --> $DIR/almost_complete_letter_range.rs:62:13\n    |\n LL |     let _ = 'a'..'z';\n    |             ^^^--^^^\n    |                |\n    |                help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:63:9\n+  --> $DIR/almost_complete_letter_range.rs:64:9\n    |\n LL |         'a'..'z' => 1,\n    |         ^^^--^^^"}, {"sha": "1bd75c806bc94378acadd7f86e5bc533de7548e1", "filename": "tests/ui/needless_parens_on_range_literals.fixed", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Fneedless_parens_on_range_literals.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Fneedless_parens_on_range_literals.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_parens_on_range_literals.fixed?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+// edition:2018\n+\n+#![warn(clippy::needless_parens_on_range_literals)]\n+#![allow(clippy::almost_complete_letter_range)]\n+\n+fn main() {\n+    let _ = 'a'..='z';\n+    let _ = 'a'..'z';\n+    let _ = (1.)..2.;\n+    let _ = (1.)..2.;\n+    let _ = 'a'..;\n+    let _ = ..'z';\n+}"}, {"sha": "7abb8a1adc1bcc4f0178599adc3391c748f73f5b", "filename": "tests/ui/needless_parens_on_range_literals.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Fneedless_parens_on_range_literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Fneedless_parens_on_range_literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_parens_on_range_literals.rs?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+// edition:2018\n+\n+#![warn(clippy::needless_parens_on_range_literals)]\n+#![allow(clippy::almost_complete_letter_range)]\n+\n+fn main() {\n+    let _ = ('a')..=('z');\n+    let _ = 'a'..('z');\n+    let _ = (1.)..2.;\n+    let _ = (1.)..(2.);\n+    let _ = ('a')..;\n+    let _ = ..('z');\n+}"}, {"sha": "505f7ac916ddaf381a3339c455ac45fee6501057", "filename": "tests/ui/needless_parens_on_range_literals.stderr", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Fneedless_parens_on_range_literals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f6e50fe1b8a9f40b77d248d05695bba9fd8773f/tests%2Fui%2Fneedless_parens_on_range_literals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_parens_on_range_literals.stderr?ref=0f6e50fe1b8a9f40b77d248d05695bba9fd8773f", "patch": "@@ -0,0 +1,40 @@\n+error: needless parenthesis on range literals can be removed\n+  --> $DIR/needless_parens_on_range_literals.rs:8:13\n+   |\n+LL |     let _ = ('a')..=('z');\n+   |             ^^^^^ help: try: `'a'`\n+   |\n+   = note: `-D clippy::needless-parens-on-range-literals` implied by `-D warnings`\n+\n+error: needless parenthesis on range literals can be removed\n+  --> $DIR/needless_parens_on_range_literals.rs:8:21\n+   |\n+LL |     let _ = ('a')..=('z');\n+   |                     ^^^^^ help: try: `'z'`\n+\n+error: needless parenthesis on range literals can be removed\n+  --> $DIR/needless_parens_on_range_literals.rs:9:18\n+   |\n+LL |     let _ = 'a'..('z');\n+   |                  ^^^^^ help: try: `'z'`\n+\n+error: needless parenthesis on range literals can be removed\n+  --> $DIR/needless_parens_on_range_literals.rs:11:19\n+   |\n+LL |     let _ = (1.)..(2.);\n+   |                   ^^^^ help: try: `2.`\n+\n+error: needless parenthesis on range literals can be removed\n+  --> $DIR/needless_parens_on_range_literals.rs:12:13\n+   |\n+LL |     let _ = ('a')..;\n+   |             ^^^^^ help: try: `'a'`\n+\n+error: needless parenthesis on range literals can be removed\n+  --> $DIR/needless_parens_on_range_literals.rs:13:15\n+   |\n+LL |     let _ = ..('z');\n+   |               ^^^^^ help: try: `'z'`\n+\n+error: aborting due to 6 previous errors\n+"}]}