{"sha": "28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef", "node_id": "C_kwDOAAsO6NoAKDI4YWEyZGQzYjQyOTVjNjRiOGMzOGE3ODYzYmZhZWZkNjc5MGU2ZWY", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-07T02:03:42Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-08T16:00:10Z"}, "message": "remove some uses of visit_all_item_likes in typeck, symbol_mangling and passes crates\n\nSigned-off-by: Miguel Guarniz <mi9uel9@gmail.com>", "tree": {"sha": "49608c699b93f9c87a2057850c4901d3e5b35377", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49608c699b93f9c87a2057850c4901d3e5b35377"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef", "html_url": "https://github.com/rust-lang/rust/commit/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0baf85e8b6588ea24af710c981c91930e01f5a19", "url": "https://api.github.com/repos/rust-lang/rust/commits/0baf85e8b6588ea24af710c981c91930e01f5a19", "html_url": "https://github.com/rust-lang/rust/commit/0baf85e8b6588ea24af710c981c91930e01f5a19"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "3107b6d1811a2a60930cd05f75e8773a3fd2f33e", "filename": "compiler/rustc_passes/src/lang_items.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef/compiler%2Frustc_passes%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef/compiler%2Frustc_passes%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flang_items.rs?ref=28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef", "patch": "@@ -259,7 +259,22 @@ fn get_lang_items(tcx: TyCtxt<'_>, (): ()) -> LanguageItems {\n     }\n \n     // Collect lang items in this crate.\n-    tcx.hir().visit_all_item_likes(&mut collector);\n+    let crate_items = tcx.hir_crate_items(());\n+\n+    for id in crate_items.items() {\n+        let item = tcx.hir().item(id);\n+        collector.visit_item(item);\n+    }\n+\n+    for id in crate_items.trait_items() {\n+        let item = tcx.hir().trait_item(id);\n+        collector.visit_trait_item(item);\n+    }\n+\n+    for id in crate_items.impl_items() {\n+        let item = tcx.hir().impl_item(id);\n+        collector.visit_impl_item(item);\n+    }\n \n     // Extract out the found lang items.\n     let LanguageItemCollector { mut items, .. } = collector;"}, {"sha": "1f66c717f28c1f017edf09aa4e4dad516ce5d35b", "filename": "compiler/rustc_symbol_mangling/src/test.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs?ref=28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef", "patch": "@@ -6,6 +6,7 @@\n \n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n+use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{subst::InternalSubsts, Instance, TyCtxt};\n use rustc_span::symbol::{sym, Symbol};\n@@ -23,7 +24,27 @@ pub fn report_symbol_names(tcx: TyCtxt<'_>) {\n \n     tcx.dep_graph.with_ignore(|| {\n         let mut visitor = SymbolNamesTest { tcx };\n-        tcx.hir().visit_all_item_likes(&mut visitor);\n+        let crate_items = tcx.hir_crate_items(());\n+\n+        for id in crate_items.items() {\n+            let item = tcx.hir().item(id);\n+            visitor.visit_item(item);\n+        }\n+\n+        for id in crate_items.trait_items() {\n+            let item = tcx.hir().trait_item(id);\n+            visitor.visit_trait_item(item);\n+        }\n+\n+        for id in crate_items.impl_items() {\n+            let item = tcx.hir().impl_item(id);\n+            visitor.visit_impl_item(item);\n+        }\n+\n+        for id in crate_items.foreign_items() {\n+            let item = tcx.hir().foreign_item(id);\n+            visitor.visit_foreign_item(item);\n+        }\n     })\n }\n "}, {"sha": "94b7ff96c3c7cdf93eb4f46b01d8a62eb9ca714b", "filename": "compiler/rustc_typeck/src/check_unused.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef/compiler%2Frustc_typeck%2Fsrc%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef/compiler%2Frustc_typeck%2Fsrc%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck_unused.rs?ref=28aa2dd3b4295c64b8c38a7863bfaefd6790e6ef", "patch": "@@ -16,7 +16,11 @@ pub fn check_crate(tcx: TyCtxt<'_>) {\n     }\n \n     let mut visitor = CheckVisitor { tcx, used_trait_imports };\n-    tcx.hir().visit_all_item_likes(&mut visitor);\n+\n+    for id in tcx.hir().items() {\n+        let item = tcx.hir().item(id);\n+        visitor.visit_item(item);\n+    }\n \n     unused_crates_lint(tcx);\n }\n@@ -110,9 +114,12 @@ fn unused_crates_lint(tcx: TyCtxt<'_>) {\n \n     // Collect all the extern crates (in a reliable order).\n     let mut crates_to_lint = vec![];\n-    tcx.hir().visit_all_item_likes(&mut CollectExternCrateVisitor {\n-        crates_to_lint: &mut crates_to_lint,\n-    });\n+    let mut visitor = CollectExternCrateVisitor { crates_to_lint: &mut crates_to_lint };\n+\n+    for id in tcx.hir().items() {\n+        let item = tcx.hir().item(id);\n+        visitor.visit_item(item);\n+    }\n \n     let extern_prelude = &tcx.resolutions(()).extern_prelude;\n "}]}