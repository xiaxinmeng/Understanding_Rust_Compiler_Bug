{"sha": "5e324bdc91415ae222becf362f68ffdebf3ec804", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMzI0YmRjOTE0MTVhZTIyMmJlY2YzNjJmNjhmZmRlYmYzZWM4MDQ=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-17T06:00:58Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-17T06:00:58Z"}, "message": "Style fixups", "tree": {"sha": "412cd16aaacab0f7b05300e472100829022503ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/412cd16aaacab0f7b05300e472100829022503ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e324bdc91415ae222becf362f68ffdebf3ec804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e324bdc91415ae222becf362f68ffdebf3ec804", "html_url": "https://github.com/rust-lang/rust/commit/5e324bdc91415ae222becf362f68ffdebf3ec804", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e324bdc91415ae222becf362f68ffdebf3ec804/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0a5b9d746cb7083a849773dc84f9e0a8e1e5621", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0a5b9d746cb7083a849773dc84f9e0a8e1e5621", "html_url": "https://github.com/rust-lang/rust/commit/e0a5b9d746cb7083a849773dc84f9e0a8e1e5621"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "d21e5719ea2b1a4fc94afbf8a1713cb3e56cb7f0", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5e324bdc91415ae222becf362f68ffdebf3ec804/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/5e324bdc91415ae222becf362f68ffdebf3ec804/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=5e324bdc91415ae222becf362f68ffdebf3ec804", "patch": "@@ -89,6 +89,7 @@ def verify(path, sha_path, verbose):\n                \"    expected: {}\".format(found, expected))\n     return verified\n \n+\n def unpack(tarball, dst, verbose=False, match=None):\n     print(\"extracting \" + tarball)\n     fname = os.path.basename(tarball).replace(\".tar.gz\", \"\")\n@@ -208,13 +209,13 @@ def fix_executable(self, fname):\n             return\n \n         # At this point we're pretty sure the user is running NixOS\n-        print(\"Info: you seem to be running NixOS. Attempting to patch \" + fname)\n+        print(\"info: you seem to be running NixOS. Attempting to patch \" + fname)\n \n         try:\n             interpreter = subprocess.check_output([\"patchelf\", \"--print-interpreter\", fname])\n             interpreter = interpreter.strip().decode(default_encoding)\n         except subprocess.CalledProcessError as e:\n-            print(\"Warning: failed to call patchelf: %s\" % e)\n+            print(\"warning: failed to call patchelf: %s\" % e)\n             return\n \n         loader = interpreter.split(\"/\")[-1]\n@@ -223,7 +224,7 @@ def fix_executable(self, fname):\n             ldd_output = subprocess.check_output(['ldd', '/run/current-system/sw/bin/sh'])\n             ldd_output = ldd_output.strip().decode(default_encoding)\n         except subprocess.CalledProcessError as e:\n-            print(\"Warning: unable to call ldd: %s\" % e)\n+            print(\"warning: unable to call ldd: %s\" % e)\n             return\n \n         for line in ldd_output.splitlines():\n@@ -232,15 +233,15 @@ def fix_executable(self, fname):\n                 loader_path = libname[:len(libname) - len(loader)]\n                 break\n         else:\n-            print(\"Warning: unable to find the path to the dynamic linker\")\n+            print(\"warning: unable to find the path to the dynamic linker\")\n             return\n \n         correct_interpreter = loader_path + loader\n \n         try:\n             subprocess.check_output([\"patchelf\", \"--set-interpreter\", correct_interpreter, fname])\n         except subprocess.CalledProcessError as e:\n-            print(\"Warning: failed to call patchelf: %s\" % e)\n+            print(\"warning: failed to call patchelf: %s\" % e)\n             return\n \n     def stage0_cargo_rev(self):"}]}