{"sha": "505d68e7399aad5079f3acf969db9d372da9de41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNWQ2OGU3Mzk5YWFkNTA3OWYzYWNmOTY5ZGI5ZDM3MmRhOWRlNDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-06T06:17:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-06T06:17:45Z"}, "message": "Rollup merge of #63287 - Mark-Simulacrum:span-no-ref, r=Centril\n\nDon't store &Span\n\nThis is just needless indirection.", "tree": {"sha": "6e8faf3f15f74aba987f5ef23da99272f9ed2d4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e8faf3f15f74aba987f5ef23da99272f9ed2d4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/505d68e7399aad5079f3acf969db9d372da9de41", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdSRuKCRBK7hj4Ov3rIwAAdHIIABRaDnJhkxoVKFvJrLBwsZMv\noUd/cgqE6CB5V/yn35upRr9tTTkrQvi5U4Kf9sMhNdqmmNc9oEXtnID5PWfjKTo6\ni0QNdQy9KaISc/UsySvPu0RyquL8K9vAC9VqDaFsT4TqvX3S6ePsndOJaNaOdI3t\nLBfN/ct+wc0p1zbtVAzMWWAy7XIDzTqUChtm0MZtLJEF8s0ZPAuNdufTCP5KmabC\ny00JoJBT1OaEAtx04F8uZhkxjhKM26gW5jXPjCVRoEW+Z7g5rQyt5J4HJ0AzTgnc\nbX1+kHEkngC4nxC2o2CrEQsdyV+eGSzLZZJXQ92cU9tkMFYKg3oqIp1RgnQqxys=\n=PJTD\n-----END PGP SIGNATURE-----\n", "payload": "tree 6e8faf3f15f74aba987f5ef23da99272f9ed2d4f\nparent 2301ecd4293e1d127ed661a9202ea4430601307f\nparent 288b4e90780d827b0bca2b63b25b4a3056986111\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565072265 +0200\ncommitter GitHub <noreply@github.com> 1565072265 +0200\n\nRollup merge of #63287 - Mark-Simulacrum:span-no-ref, r=Centril\n\nDon't store &Span\n\nThis is just needless indirection.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/505d68e7399aad5079f3acf969db9d372da9de41", "html_url": "https://github.com/rust-lang/rust/commit/505d68e7399aad5079f3acf969db9d372da9de41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/505d68e7399aad5079f3acf969db9d372da9de41/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2301ecd4293e1d127ed661a9202ea4430601307f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2301ecd4293e1d127ed661a9202ea4430601307f", "html_url": "https://github.com/rust-lang/rust/commit/2301ecd4293e1d127ed661a9202ea4430601307f"}, {"sha": "288b4e90780d827b0bca2b63b25b4a3056986111", "url": "https://api.github.com/repos/rust-lang/rust/commits/288b4e90780d827b0bca2b63b25b4a3056986111", "html_url": "https://github.com/rust-lang/rust/commit/288b4e90780d827b0bca2b63b25b4a3056986111"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "fad9fafbb08037519360e105fb14e54260fa6a29", "filename": "src/librustc_mir/interpret/snapshot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/505d68e7399aad5079f3acf969db9d372da9de41/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/505d68e7399aad5079f3acf969db9d372da9de41/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs?ref=505d68e7399aad5079f3acf969db9d372da9de41", "patch": "@@ -305,7 +305,7 @@ impl_stable_hash_for!(enum crate::interpret::eval_context::StackPopCleanup {\n #[derive(Eq, PartialEq)]\n struct FrameSnapshot<'a, 'tcx> {\n     instance: &'a ty::Instance<'tcx>,\n-    span: &'a Span,\n+    span: Span,\n     return_to_block: &'a StackPopCleanup,\n     return_place: Option<Place<(), AllocIdSnapshot<'a>>>,\n     locals: IndexVec<mir::Local, LocalValue<(), AllocIdSnapshot<'a>>>,\n@@ -345,7 +345,7 @@ impl<'a, 'mir, 'tcx, Ctx> Snapshot<'a, Ctx> for &'a Frame<'mir, 'tcx>\n \n         FrameSnapshot {\n             instance,\n-            span,\n+            span: *span,\n             return_to_block,\n             block,\n             stmt: *stmt,"}, {"sha": "1908d85e4ff2a561daf94ad90262e7c64e1f76ea", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/505d68e7399aad5079f3acf969db9d372da9de41/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/505d68e7399aad5079f3acf969db9d372da9de41/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=505d68e7399aad5079f3acf969db9d372da9de41", "patch": "@@ -171,7 +171,7 @@ enum ResolutionError<'a> {\n     GenericParamsFromOuterFunction(Res),\n     /// Error E0403: the name is already used for a type or const parameter in this generic\n     /// parameter list.\n-    NameAlreadyUsedInParameterList(Name, &'a Span),\n+    NameAlreadyUsedInParameterList(Name, Span),\n     /// Error E0407: method is not a member of trait.\n     MethodNotMemberOfTrait(Name, &'a str),\n     /// Error E0437: type is not a member of trait.\n@@ -297,7 +297,7 @@ fn resolve_struct_error<'sess, 'a>(resolver: &'sess Resolver<'_>,\n                                             parameter in this list of generic parameters\",\n                                             name);\n              err.span_label(span, \"already used\");\n-             err.span_label(first_use_span.clone(), format!(\"first use of `{}`\", name));\n+             err.span_label(first_use_span, format!(\"first use of `{}`\", name));\n              err\n         }\n         ResolutionError::MethodNotMemberOfTrait(method, trait_) => {\n@@ -2853,7 +2853,7 @@ impl<'a> Resolver<'a> {\n                                 let span = seen_bindings.get(&ident).unwrap();\n                                 let err = ResolutionError::NameAlreadyUsedInParameterList(\n                                     ident.name,\n-                                    span,\n+                                    *span,\n                                 );\n                                 resolve_error(self, param.ident.span, err);\n                             }\n@@ -2875,7 +2875,7 @@ impl<'a> Resolver<'a> {\n                                 let span = seen_bindings.get(&ident).unwrap();\n                                 let err = ResolutionError::NameAlreadyUsedInParameterList(\n                                     ident.name,\n-                                    span,\n+                                    *span,\n                                 );\n                                 resolve_error(self, param.ident.span, err);\n                             }"}]}