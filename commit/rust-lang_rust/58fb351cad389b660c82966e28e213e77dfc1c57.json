{"sha": "58fb351cad389b660c82966e28e213e77dfc1c57", "node_id": "C_kwDOAAsO6NoAKDU4ZmIzNTFjYWQzODliNjYwYzgyOTY2ZTI4ZTIxM2U3N2RmYzFjNTc", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-10-07T00:42:02Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-10-07T01:05:27Z"}, "message": "let-else: test else block with non-never uninhabited type", "tree": {"sha": "63900b7b20bae9d9e64cb9ecc11fde40c1017656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63900b7b20bae9d9e64cb9ecc11fde40c1017656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58fb351cad389b660c82966e28e213e77dfc1c57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58fb351cad389b660c82966e28e213e77dfc1c57", "html_url": "https://github.com/rust-lang/rust/commit/58fb351cad389b660c82966e28e213e77dfc1c57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58fb351cad389b660c82966e28e213e77dfc1c57/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ca356586fed56002b10920fd21ddf6fb12de797", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ca356586fed56002b10920fd21ddf6fb12de797", "html_url": "https://github.com/rust-lang/rust/commit/0ca356586fed56002b10920fd21ddf6fb12de797"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "58d2c09776f985494c0c47b6eaad26309a139e58", "filename": "src/test/ui/let-else/let-else-non-diverging.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/58fb351cad389b660c82966e28e213e77dfc1c57/src%2Ftest%2Fui%2Flet-else%2Flet-else-non-diverging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fb351cad389b660c82966e28e213e77dfc1c57/src%2Ftest%2Fui%2Flet-else%2Flet-else-non-diverging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Flet-else-non-diverging.rs?ref=58fb351cad389b660c82966e28e213e77dfc1c57", "patch": "@@ -8,4 +8,15 @@ fn main() {\n         }\n     };\n     let Some(x) = Some(1) else { Some(2) }; //~ ERROR does not diverge\n+\n+    // Ensure that uninhabited types do not \"diverge\".\n+    // This might be relaxed in the future, but when it is,\n+    // it should be an explicitly wanted descision.\n+    let Some(x) = Some(1) else { foo::<Uninhabited>() }; //~ ERROR does not diverge\n+}\n+\n+enum Uninhabited {}\n+\n+fn foo<T>() -> T {\n+    panic!()\n }"}, {"sha": "78551fcc434a86f81c5b763b4f4805f885724d1b", "filename": "src/test/ui/let-else/let-else-non-diverging.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/58fb351cad389b660c82966e28e213e77dfc1c57/src%2Ftest%2Fui%2Flet-else%2Flet-else-non-diverging.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58fb351cad389b660c82966e28e213e77dfc1c57/src%2Ftest%2Fui%2Flet-else%2Flet-else-non-diverging.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Flet-else-non-diverging.stderr?ref=58fb351cad389b660c82966e28e213e77dfc1c57", "patch": "@@ -39,6 +39,17 @@ LL |     let Some(x) = Some(1) else { Some(2) };\n    = help: try adding a diverging expression, such as `return` or `panic!(..)`\n    = help: ...or use `match` instead of `let...else`\n \n-error: aborting due to 3 previous errors\n+error[E0308]: `else` clause of `let...else` does not diverge\n+  --> $DIR/let-else-non-diverging.rs:15:32\n+   |\n+LL |     let Some(x) = Some(1) else { foo::<Uninhabited>() };\n+   |                                ^^^^^^^^^^^^^^^^^^^^^^^^ expected `!`, found enum `Uninhabited`\n+   |\n+   = note: expected type `!`\n+              found enum `Uninhabited`\n+   = help: try adding a diverging expression, such as `return` or `panic!(..)`\n+   = help: ...or use `match` instead of `let...else`\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}]}