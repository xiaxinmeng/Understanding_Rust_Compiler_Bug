{"sha": "d92cfff43b2dc1ce43fdac172855a8d34bb79c8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MmNmZmY0M2IyZGMxY2U0M2ZkYWMxNzI4NTVhOGQzNGJiNzljOGM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-23T03:38:34Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-23T03:38:34Z"}, "message": "Align post comments with items when the it starts with newline", "tree": {"sha": "8b2de0be5bcfd0a4716c0c838bd41c4c4d5c0516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b2de0be5bcfd0a4716c0c838bd41c4c4d5c0516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d92cfff43b2dc1ce43fdac172855a8d34bb79c8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d92cfff43b2dc1ce43fdac172855a8d34bb79c8c", "html_url": "https://github.com/rust-lang/rust/commit/d92cfff43b2dc1ce43fdac172855a8d34bb79c8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d92cfff43b2dc1ce43fdac172855a8d34bb79c8c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53d7489221e4d6fa25bf624b78a80608c27aedf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/53d7489221e4d6fa25bf624b78a80608c27aedf5", "html_url": "https://github.com/rust-lang/rust/commit/53d7489221e4d6fa25bf624b78a80608c27aedf5"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "bf0d276574eb4ad8a176f28d780fe462ad25900d", "filename": "src/lists.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d92cfff43b2dc1ce43fdac172855a8d34bb79c8c/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d92cfff43b2dc1ce43fdac172855a8d34bb79c8c/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=d92cfff43b2dc1ce43fdac172855a8d34bb79c8c", "patch": "@@ -410,7 +410,9 @@ where\n                         formatting.config.max_width(),\n                     ));\n                 }\n-                let overhead = if let Some(max_width) = *item_max_width {\n+                let overhead = if starts_with_newline(comment) {\n+                    0\n+                } else if let Some(max_width) = *item_max_width {\n                     max_width + 2\n                 } else {\n                     // 1 = space between item and comment.\n@@ -425,12 +427,17 @@ where\n                     || comment.trim().contains('\\n')\n                     || comment.trim().len() > width;\n \n-                rewrite_comment(comment, block_style, comment_shape, formatting.config)\n+                rewrite_comment(\n+                    comment.trim_left(),\n+                    block_style,\n+                    comment_shape,\n+                    formatting.config,\n+                )\n             };\n \n             let mut formatted_comment = rewrite_post_comment(&mut item_max_width)?;\n \n-            if !starts_with_newline(&formatted_comment) {\n+            if !starts_with_newline(&comment) {\n                 let mut comment_alignment =\n                     post_comment_alignment(item_max_width, inner_item.len());\n                 if first_line_width(&formatted_comment) + last_line_width(&result)\n@@ -448,6 +455,9 @@ where\n                 {\n                     result.push(' ');\n                 }\n+            } else {\n+                result.push('\\n');\n+                result.push_str(&indent_str);\n             }\n             if formatted_comment.contains('\\n') {\n                 item_max_width = None;"}]}