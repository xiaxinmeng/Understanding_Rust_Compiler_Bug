{"sha": "0bd9bd6b8acfcd102bbc31ac407f1883480accbc", "node_id": "C_kwDOAAsO6NoAKDBiZDliZDZiOGFjZmNkMTAyYmJjMzFhYzQwN2YxODgzNDgwYWNjYmM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-26T18:42:41Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-09T17:59:35Z"}, "message": "Explicit performance concern.", "tree": {"sha": "8e706028804fd8e0f4eeb7b43894c506a351ac1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e706028804fd8e0f4eeb7b43894c506a351ac1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bd9bd6b8acfcd102bbc31ac407f1883480accbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd9bd6b8acfcd102bbc31ac407f1883480accbc", "html_url": "https://github.com/rust-lang/rust/commit/0bd9bd6b8acfcd102bbc31ac407f1883480accbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bd9bd6b8acfcd102bbc31ac407f1883480accbc/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38612f5ec7a464709f2dabde4edb843695ec84b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/38612f5ec7a464709f2dabde4edb843695ec84b2", "html_url": "https://github.com/rust-lang/rust/commit/38612f5ec7a464709f2dabde4edb843695ec84b2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "bdb008efe1e841e310e72e1e8feef39f1b70ace6", "filename": "compiler/rustc_mir_transform/src/ref_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bd9bd6b8acfcd102bbc31ac407f1883480accbc/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bd9bd6b8acfcd102bbc31ac407f1883480accbc/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs?ref=0bd9bd6b8acfcd102bbc31ac407f1883480accbc", "patch": "@@ -131,8 +131,8 @@ fn compute_replacement<'tcx>(\n         let maybe_dead = maybe_dead.contains(target.local);\n \n         if target.projection.first() == Some(&PlaceElem::Deref) {\n-            // We are creating a reborrow. As `place.local` is a reference, removing the\n-            // `StorageDead` is fine.\n+            // We are creating a reborrow. As `place.local` is a reference, removing the storage\n+            // statements should not make it much harder for LLVM to optimize.\n             if maybe_dead {\n                 storage_to_remove.insert(target.local);\n             }"}]}