{"sha": "70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYWE3ODFjMmQ4ZjRlYmUwZTgyNmQyY2RlYjhmY2QzNzE2NzZhODg=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-09T17:07:13Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-13T18:44:14Z"}, "message": "Change control flow error to delay span bug", "tree": {"sha": "6eec0fd1ef82bfde511837202893c68730118d94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6eec0fd1ef82bfde511837202893c68730118d94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88", "html_url": "https://github.com/rust-lang/rust/commit/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0123cbdc31a994033cffd505a758beba20709de0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0123cbdc31a994033cffd505a758beba20709de0", "html_url": "https://github.com/rust-lang/rust/commit/0123cbdc31a994033cffd505a758beba20709de0"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "88f16299dc0f7cf3c482d8857570fc1a81dbce64", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88", "patch": "@@ -461,7 +461,14 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n                 self.super_statement(statement, location);\n             }\n             StatementKind::FakeRead(FakeReadCause::ForMatchedPlace, _) => {\n-                self.check_op(ops::IfOrMatch);\n+                // FIXME: make this the `emit_error` impl of `ops::IfOrMatch` once the const\n+                // checker is no longer run in compatability mode.\n+                if !self.tcx.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n+                    self.tcx.sess.delay_span_bug(\n+                        self.span,\n+                        \"complex control flow is forbidden in a const context\",\n+                    );\n+                }\n             }\n             // FIXME(eddyb) should these really do nothing?\n             StatementKind::FakeRead(..) |"}, {"sha": "255e71db89d555325ea7a6c1217951db6bc90b87", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88", "patch": "@@ -723,8 +723,12 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n                     bb = target;\n                 }\n                 _ => {\n-                    self.not_const(ops::Loop);\n-                    validator.check_op(ops::Loop);\n+                    if !self.tcx.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n+                        self.tcx.sess.delay_span_bug(\n+                            self.span,\n+                            \"complex control flow is forbidden in a const context\",\n+                        );\n+                    }\n                     break;\n                 }\n             }\n@@ -1253,7 +1257,12 @@ impl<'a, 'tcx> Visitor<'tcx> for Checker<'a, 'tcx> {\n                 self.super_statement(statement, location);\n             }\n             StatementKind::FakeRead(FakeReadCause::ForMatchedPlace, _) => {\n-                self.not_const(ops::IfOrMatch);\n+                if !self.tcx.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n+                    self.tcx.sess.delay_span_bug(\n+                        self.span,\n+                        \"complex control flow is forbidden in a const context\",\n+                    );\n+                }\n             }\n             // FIXME(eddyb) should these really do nothing?\n             StatementKind::FakeRead(..) |"}, {"sha": "3263ee512a950c57ebcec9cde9374a0fc5354706", "filename": "src/librustc_passes/check_const.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88/src%2Flibrustc_passes%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88/src%2Flibrustc_passes%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_const.rs?ref=70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88", "patch": "@@ -60,10 +60,6 @@ impl fmt::Display for ConstKind {\n }\n \n fn check_mod_const_bodies(tcx: TyCtxt<'_>, module_def_id: DefId) {\n-    if tcx.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n-        return;\n-    }\n-\n     let mut vis = CheckConstVisitor::new(tcx);\n     tcx.hir().visit_item_likes_in_module(module_def_id, &mut vis.as_deep_visitor());\n }\n@@ -93,6 +89,11 @@ impl<'tcx> CheckConstVisitor<'tcx> {\n \n     /// Emits an error when an unsupported expression is found in a const context.\n     fn const_check_violated(&self, bad_op: &str, span: Span) {\n+        if self.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n+            self.sess.span_warn(span, \"skipping const checks\");\n+            return;\n+        }\n+\n         let const_kind = self.const_kind\n             .expect(\"`const_check_violated` may only be called inside a const context\");\n "}]}