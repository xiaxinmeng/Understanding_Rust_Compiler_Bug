{"sha": "ff17b0ba48fbf80d9672909e4c5f9f833257336e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMTdiMGJhNDhmYmY4MGQ5NjcyOTA5ZTRjNWY5ZjgzMzI1NzMzNmU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-04T16:01:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-04T16:01:38Z"}, "message": "Deindent YAML", "tree": {"sha": "175da328f87a2ff31716f43fdf5d3732850f0025", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/175da328f87a2ff31716f43fdf5d3732850f0025"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff17b0ba48fbf80d9672909e4c5f9f833257336e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff17b0ba48fbf80d9672909e4c5f9f833257336e", "html_url": "https://github.com/rust-lang/rust/commit/ff17b0ba48fbf80d9672909e4c5f9f833257336e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff17b0ba48fbf80d9672909e4c5f9f833257336e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51c358f9cc95fc30bb7703f493f9a960b84ca2d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/51c358f9cc95fc30bb7703f493f9a960b84ca2d1", "html_url": "https://github.com/rust-lang/rust/commit/51c358f9cc95fc30bb7703f493f9a960b84ca2d1"}], "stats": {"total": 519, "additions": 261, "deletions": 258}, "files": [{"sha": "74ce147ae34c8e294f5acb410a33dca7680898c1", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 78, "deletions": 76, "changes": 154, "blob_url": "https://github.com/rust-lang/rust/blob/ff17b0ba48fbf80d9672909e4c5f9f833257336e/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/ff17b0ba48fbf80d9672909e4c5f9f833257336e/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=ff17b0ba48fbf80d9672909e4c5f9f833257336e", "patch": "@@ -3,91 +3,93 @@ on:\n   pull_request:\n   push:\n     branches:\n-      - master\n-      - staging\n-      - trying\n+    - master\n+    - staging\n+    - trying\n \n jobs:\n   rust-audit:\n     name: Audit Rust vulnerabilities\n     runs-on: ubuntu-latest\n     steps:\n-        - name: Checkout repository\n-          uses: actions/checkout@v1\n+    - name: Checkout repository\n+      uses: actions/checkout@v1\n \n-        - run: cargo install cargo-audit\n-        - run: cargo audit\n+    - run: cargo install cargo-audit\n+    - run: cargo audit\n \n   rust:\n     name: Rust\n     runs-on: ${{ matrix.os }}\n+\n     strategy:\n       fail-fast: false\n       matrix:\n         os: [ubuntu-latest, windows-latest, macos-latest]\n+\n     env:\n       RUSTFLAGS: -D warnings\n       CC: deny_c\n       CARGO_INCREMENTAL: 0\n       RUN_SLOW_TESTS: 1\n       RUSTUP_MAX_RETRIES: 10\n       CARGO_NET_RETRY: 10\n-    steps:\n \n-      - name: Checkout repository\n-        uses: actions/checkout@v1\n-\n-      # We need to disable the existing toolchain to avoid updating rust-docs\n-      # which takes a long time. The fastest way to do this is to rename the\n-      # existing folder, as deleting it takes about as much time as not doing\n-      # anything and just updating rust-docs.\n-      - name: Rename existing rust toolchain (Windows)\n-        if: matrix.os == 'windows-latest'\n-        run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n-\n-      - name: Install Rust toolchain\n-        uses: actions-rs/toolchain@v1\n-        with:\n-          toolchain: stable\n-          profile: minimal\n-          override: true\n-          components: rustfmt, rust-src\n-\n-      - name: Cache cargo registry\n-        uses: actions/cache@v1\n-        with:\n-          path: ~/.cargo/registry\n-          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}\n-\n-      - name: Cache cargo index\n-        uses: actions/cache@v1\n-        with:\n-          path: ~/.cargo/git\n-          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}\n-\n-      - name: Cache cargo target dir\n-        uses: actions/cache@v1\n-        with:\n-          path: target\n-          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}\n-\n-      - name: Compile\n-        uses: actions-rs/cargo@v1\n-        with:\n-          command: test\n-          args: --no-run\n-\n-      - name: Test\n-        uses: actions-rs/cargo@v1\n-        with:\n-          command: test\n-\n-      - name: Prepare cache\n-        run: cargo xtask pre-cache\n-\n-      - name: Prepare cache 2\n-        if: matrix.os == 'windows-latest'\n-        run: Remove-Item ./target/debug/xtask.exe, ./target/debug/deps/xtask.exe\n+    steps:\n+    - name: Checkout repository\n+      uses: actions/checkout@v1\n+\n+    # We need to disable the existing toolchain to avoid updating rust-docs\n+    # which takes a long time. The fastest way to do this is to rename the\n+    # existing folder, as deleting it takes about as much time as not doing\n+    # anything and just updating rust-docs.\n+    - name: Rename existing rust toolchain (Windows)\n+      if: matrix.os == 'windows-latest'\n+      run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n+\n+    - name: Install Rust toolchain\n+      uses: actions-rs/toolchain@v1\n+      with:\n+        toolchain: stable\n+        profile: minimal\n+        override: true\n+        components: rustfmt, rust-src\n+\n+    - name: Cache cargo registry\n+      uses: actions/cache@v1\n+      with:\n+        path: ~/.cargo/registry\n+        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}\n+\n+    - name: Cache cargo index\n+      uses: actions/cache@v1\n+      with:\n+        path: ~/.cargo/git\n+        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}\n+\n+    - name: Cache cargo target dir\n+      uses: actions/cache@v1\n+      with:\n+        path: target\n+        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}\n+\n+    - name: Compile\n+      uses: actions-rs/cargo@v1\n+      with:\n+        command: test\n+        args: --no-run\n+\n+    - name: Test\n+      uses: actions-rs/cargo@v1\n+      with:\n+        command: test\n+\n+    - name: Prepare cache\n+      run: cargo xtask pre-cache\n+\n+    - name: Prepare cache 2\n+      if: matrix.os == 'windows-latest'\n+      run: Remove-Item ./target/debug/xtask.exe, ./target/debug/deps/xtask.exe\n \n   typescript:\n     name: TypeScript\n@@ -96,22 +98,22 @@ jobs:\n       CXX: g++-4.9\n       CC: gcc-4.9\n     steps:\n-      - name: Checkout repository\n-        uses: actions/checkout@v1\n+    - name: Checkout repository\n+      uses: actions/checkout@v1\n \n-      - name: Install Nodejs\n-        uses: actions/setup-node@v1\n-        with:\n-          node-version: 12.x\n+    - name: Install Nodejs\n+      uses: actions/setup-node@v1\n+      with:\n+        node-version: 12.x\n \n-      - run: npm ci\n-        working-directory: ./editors/code\n+    - run: npm ci\n+      working-directory: ./editors/code\n \n-      - run: npm audit\n-        working-directory: ./editors/code\n+    - run: npm audit\n+      working-directory: ./editors/code\n \n-      - run: npm run lint\n-        working-directory: ./editors/code\n+    - run: npm run lint\n+      working-directory: ./editors/code\n \n-      - run: npm run package --scripts-prepend-node-path\n-        working-directory: ./editors/code\n+    - run: npm run package --scripts-prepend-node-path\n+      working-directory: ./editors/code"}, {"sha": "fe893e00510ae5de44c3d11fd8757e56fc06877a", "filename": ".github/workflows/release.yaml", "status": "modified", "additions": 160, "deletions": 159, "changes": 319, "blob_url": "https://github.com/rust-lang/rust/blob/ff17b0ba48fbf80d9672909e4c5f9f833257336e/.github%2Fworkflows%2Frelease.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/ff17b0ba48fbf80d9672909e4c5f9f833257336e/.github%2Fworkflows%2Frelease.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yaml?ref=ff17b0ba48fbf80d9672909e4c5f9f833257336e", "patch": "@@ -2,7 +2,7 @@ name: release\n on:\n   push:\n     branches:\n-      - release\n+    - release\n \n jobs:\n   build-server:\n@@ -11,183 +11,184 @@ jobs:\n     strategy:\n       matrix:\n         os: [ubuntu-latest, windows-latest, macos-latest]\n+\n     env:\n       RUSTFLAGS: -D warnings\n       CARGO_INCREMENTAL: 0\n       RUSTUP_MAX_RETRIES: 10\n       CARGO_NET_RETRY: 10\n-    steps:\n \n-      - name: Checkout repository\n-        uses: actions/checkout@v1\n-\n-      # We need to disable the existing toolchain to avoid updating rust-docs\n-      # which takes a long time. The fastest way to do this is to rename the\n-      # existing folder, as deleting it takes about as much time as not doing\n-      # anything and just updating rust-docs.\n-      - name: Rename existing rust toolchain (Windows)\n-        if: matrix.os == 'windows-latest'\n-        run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n-\n-      - name: Install Rust toolchain\n-        uses: actions-rs/toolchain@v1\n-        with:\n-          toolchain: stable\n-          profile: minimal\n-          target: x86_64-unknown-linux-musl\n-          override: true\n-\n-      - name: Build\n-        if: matrix.os == 'ubuntu-latest'\n-        uses: actions-rs/cargo@v1\n-        env:\n-          CC: clang\n-        with:\n-          command: build\n-          args: --package rust-analyzer --bin rust-analyzer --release --target x86_64-unknown-linux-musl\n-\n-      - name: Build\n-        if: matrix.os != 'ubuntu-latest'\n-        uses: actions-rs/cargo@v1\n-        with:\n-          command: build\n-          args: --package rust-analyzer --bin rust-analyzer --release\n-\n-      - name: Create distribution dir\n-        run: mkdir ./dist\n-\n-      - name: Copy binary\n-        if: matrix.os == 'ubuntu-latest'\n-        run: cp ./target/x86_64-unknown-linux-musl/release/rust-analyzer ./dist/rust-analyzer-linux && strip ./dist/rust-analyzer-linux\n-\n-      - name: Copy binary\n-        if: matrix.os == 'macos-latest'\n-        run: cp ./target/release/rust-analyzer ./dist/rust-analyzer-mac\n-\n-      - name: Copy binary\n-        if: matrix.os == 'windows-latest'\n-        run: copy ./target/release/rust-analyzer.exe ./dist/rust-analyzer-windows.exe\n-\n-      - name: Upload artifacts\n-        uses: actions/upload-artifact@v1\n-        with:\n-          name: server-${{ matrix.os }}\n-          path: ./dist\n+    steps:\n+    - name: Checkout repository\n+      uses: actions/checkout@v1\n+\n+    # We need to disable the existing toolchain to avoid updating rust-docs\n+    # which takes a long time. The fastest way to do this is to rename the\n+    # existing folder, as deleting it takes about as much time as not doing\n+    # anything and just updating rust-docs.\n+    - name: Rename existing rust toolchain (Windows)\n+      if: matrix.os == 'windows-latest'\n+      run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n+\n+    - name: Install Rust toolchain\n+      uses: actions-rs/toolchain@v1\n+      with:\n+        toolchain: stable\n+        profile: minimal\n+        target: x86_64-unknown-linux-musl\n+        override: true\n+\n+    - name: Build\n+      if: matrix.os == 'ubuntu-latest'\n+      uses: actions-rs/cargo@v1\n+      env:\n+        CC: clang\n+      with:\n+        command: build\n+        args: --package rust-analyzer --bin rust-analyzer --release --target x86_64-unknown-linux-musl\n+\n+    - name: Build\n+      if: matrix.os != 'ubuntu-latest'\n+      uses: actions-rs/cargo@v1\n+      with:\n+        command: build\n+        args: --package rust-analyzer --bin rust-analyzer --release\n+\n+    - name: Create distribution dir\n+      run: mkdir ./dist\n+\n+    - name: Copy binary\n+      if: matrix.os == 'ubuntu-latest'\n+      run: cp ./target/x86_64-unknown-linux-musl/release/rust-analyzer ./dist/rust-analyzer-linux && strip ./dist/rust-analyzer-linux\n+\n+    - name: Copy binary\n+      if: matrix.os == 'macos-latest'\n+      run: cp ./target/release/rust-analyzer ./dist/rust-analyzer-mac\n+\n+    - name: Copy binary\n+      if: matrix.os == 'windows-latest'\n+      run: copy ./target/release/rust-analyzer.exe ./dist/rust-analyzer-windows.exe\n+\n+    - name: Upload artifacts\n+      uses: actions/upload-artifact@v1\n+      with:\n+        name: server-${{ matrix.os }}\n+        path: ./dist\n \n   build-clients:\n     name: build-clients\n     runs-on: ubuntu-latest\n     steps:\n-      - name: Checkout repository\n-        uses: actions/checkout@v1\n+    - name: Checkout repository\n+      uses: actions/checkout@v1\n \n-      - name: Install Nodejs\n-        uses: actions/setup-node@v1\n-        with:\n-          node-version: 12.x\n+    - name: Install Nodejs\n+      uses: actions/setup-node@v1\n+      with:\n+        node-version: 12.x\n \n-      - run: npm ci\n-        working-directory: ./editors/code\n+    - run: npm ci\n+      working-directory: ./editors/code\n \n-      - run: npm run package --scripts-prepend-node-path\n-        working-directory: ./editors/code\n+    - run: npm run package --scripts-prepend-node-path\n+      working-directory: ./editors/code\n \n-      - name: Copy vscode extension\n-        run: mkdir -p ./dist/code && cp ./editors/code/rust-analyzer.vsix ./dist/\n+    - name: Copy vscode extension\n+      run: mkdir -p ./dist/code && cp ./editors/code/rust-analyzer.vsix ./dist/\n \n-      - name: Upload artifacts\n-        uses: actions/upload-artifact@v1\n-        with:\n-          name: editor-plugins\n-          path: ./dist\n+    - name: Upload artifacts\n+      uses: actions/upload-artifact@v1\n+      with:\n+        name: editor-plugins\n+        path: ./dist\n \n   make-release:\n     name: make-release\n     runs-on: ubuntu-latest\n     needs: ['build-server', 'build-clients']\n     steps:\n-      - name: Install Nodejs\n-        uses: actions/setup-node@v1\n-        with:\n-          node-version: 12.x\n-\n-      - run: echo \"::set-env name=TAG::$(date --iso)\"\n-      - run: 'echo \"TAG: $TAG\"'\n-\n-      - name: Checkout repository\n-        uses: actions/checkout@v1\n-\n-      - uses: actions/download-artifact@v1\n-        with:\n-          name: editor-plugins\n-          path: dist\n-      - uses: actions/download-artifact@v1\n-        with:\n-          name: server-macos-latest\n-          path: dist\n-      - uses: actions/download-artifact@v1\n-        with:\n-          name: server-ubuntu-latest\n-          path: dist\n-      - uses: actions/download-artifact@v1\n-        with:\n-          name: server-windows-latest\n-          path: dist\n-      - run: ls -all ./dist\n-\n-      - name: Create Release\n-        id: create_release\n-        # uses: actions/create-release@v1\n-        # https://github.com/actions/create-release/pull/32\n-        uses: fleskesvor/create-release@1a72e235c178bf2ae6c51a8ae36febc24568c5fe\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-        with:\n-          tag_name: ${{ env.TAG }}\n-          release_name: ${{ env.TAG }}\n-          draft: false\n-          prerelease: false\n-\n-      - uses: actions/upload-release-asset@v1.0.1\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-        with:\n-          upload_url: ${{ steps.create_release.outputs.upload_url }}\n-          asset_path: ./dist/rust-analyzer-linux\n-          asset_name: rust-analyzer-linux\n-          asset_content_type: application/octet-stream\n-\n-      - uses: actions/upload-release-asset@v1.0.1\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-        with:\n-          upload_url: ${{ steps.create_release.outputs.upload_url }}\n-          asset_path: ./dist/rust-analyzer-mac\n-          asset_name: rust-analyzer-mac\n-          asset_content_type: application/octet-stream\n-\n-      - uses: actions/upload-release-asset@v1.0.1\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-        with:\n-          upload_url: ${{ steps.create_release.outputs.upload_url }}\n-          asset_path: ./dist/rust-analyzer-windows.exe\n-          asset_name: rust-analyzer-windows.exe\n-          asset_content_type: application/octet-stream\n-\n-      - uses: actions/upload-release-asset@v1.0.1\n-        env:\n-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-        with:\n-          upload_url: ${{ steps.create_release.outputs.upload_url }}\n-          asset_path: ./dist/rust-analyzer.vsix\n-          asset_name: rust-analyzer.vsix\n-          asset_content_type: application/octet-stream\n-\n-      - run: npm ci\n-        working-directory: ./editors/code\n-\n-      - name: Publish Extension\n-        working-directory: ./editors/code\n-        # token from https://dev.azure.com/rust-analyzer/\n-        run: npx vsce publish 0.1.$(date +%Y%m%d) --pat ${{ secrets.MARKETPLACE_TOKEN }}\n+    - name: Install Nodejs\n+      uses: actions/setup-node@v1\n+      with:\n+        node-version: 12.x\n+\n+    - run: echo \"::set-env name=TAG::$(date --iso)\"\n+    - run: 'echo \"TAG: $TAG\"'\n+\n+    - name: Checkout repository\n+      uses: actions/checkout@v1\n+\n+    - uses: actions/download-artifact@v1\n+      with:\n+        name: editor-plugins\n+        path: dist\n+    - uses: actions/download-artifact@v1\n+      with:\n+        name: server-macos-latest\n+        path: dist\n+    - uses: actions/download-artifact@v1\n+      with:\n+        name: server-ubuntu-latest\n+        path: dist\n+    - uses: actions/download-artifact@v1\n+      with:\n+        name: server-windows-latest\n+        path: dist\n+    - run: ls -all ./dist\n+\n+    - name: Create Release\n+      id: create_release\n+      # uses: actions/create-release@v1\n+      # https://github.com/actions/create-release/pull/32\n+      uses: fleskesvor/create-release@1a72e235c178bf2ae6c51a8ae36febc24568c5fe\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        tag_name: ${{ env.TAG }}\n+        release_name: ${{ env.TAG }}\n+        draft: false\n+        prerelease: false\n+\n+    - uses: actions/upload-release-asset@v1.0.1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }}\n+        asset_path: ./dist/rust-analyzer-linux\n+        asset_name: rust-analyzer-linux\n+        asset_content_type: application/octet-stream\n+\n+    - uses: actions/upload-release-asset@v1.0.1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }}\n+        asset_path: ./dist/rust-analyzer-mac\n+        asset_name: rust-analyzer-mac\n+        asset_content_type: application/octet-stream\n+\n+    - uses: actions/upload-release-asset@v1.0.1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }}\n+        asset_path: ./dist/rust-analyzer-windows.exe\n+        asset_name: rust-analyzer-windows.exe\n+        asset_content_type: application/octet-stream\n+\n+    - uses: actions/upload-release-asset@v1.0.1\n+      env:\n+        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      with:\n+        upload_url: ${{ steps.create_release.outputs.upload_url }}\n+        asset_path: ./dist/rust-analyzer.vsix\n+        asset_name: rust-analyzer.vsix\n+        asset_content_type: application/octet-stream\n+\n+    - run: npm ci\n+      working-directory: ./editors/code\n+\n+    - name: Publish Extension\n+      working-directory: ./editors/code\n+      # token from https://dev.azure.com/rust-analyzer/\n+      run: npx vsce publish 0.1.$(date +%Y%m%d) --pat ${{ secrets.MARKETPLACE_TOKEN }}"}, {"sha": "66c8887ad003c3dbd80f6a6e905cc23f5dc601e3", "filename": ".github/workflows/rustdoc.yaml", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/ff17b0ba48fbf80d9672909e4c5f9f833257336e/.github%2Fworkflows%2Frustdoc.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/ff17b0ba48fbf80d9672909e4c5f9f833257336e/.github%2Fworkflows%2Frustdoc.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frustdoc.yaml?ref=ff17b0ba48fbf80d9672909e4c5f9f833257336e", "patch": "@@ -2,7 +2,7 @@ name: rustdoc\n on:\n   push:\n    branches:\n-     - master\n+   - master\n \n jobs:\n   rustdoc:\n@@ -12,28 +12,28 @@ jobs:\n       CARGO_INCREMENTAL: 0\n \n     steps:\n-      - name: Checkout repository\n-        uses: actions/checkout@v1\n+    - name: Checkout repository\n+      uses: actions/checkout@v1\n \n-      - name: Install Rust toolchain\n-        uses: actions-rs/toolchain@v1\n-        with:\n-          toolchain: stable\n-          profile: minimal\n-          override: true\n-          components: rustfmt, rust-src\n+    - name: Install Rust toolchain\n+      uses: actions-rs/toolchain@v1\n+      with:\n+        toolchain: stable\n+        profile: minimal\n+        override: true\n+        components: rustfmt, rust-src\n \n-      - name: Build Documentation\n-        uses: actions-rs/cargo@v1\n-        with:\n-          command: doc\n-          args: --all --no-deps\n+    - name: Build Documentation\n+      uses: actions-rs/cargo@v1\n+      with:\n+        command: doc\n+        args: --all --no-deps\n \n-      - name: Deploy Docs\n-        uses: peaceiris/actions-gh-pages@v2.6.0-rc0\n-        env:\n-          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}\n-          PUBLISH_BRANCH: gh-pages\n-          PUBLISH_DIR: ./target/doc\n-        with:\n-          forceOrphan: true\n+    - name: Deploy Docs\n+      uses: peaceiris/actions-gh-pages@v2.6.0-rc0\n+      env:\n+        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}\n+        PUBLISH_BRANCH: gh-pages\n+        PUBLISH_DIR: ./target/doc\n+      with:\n+        forceOrphan: true"}]}