{"sha": "4ffff6697b144b346cc3853a82f1056b593ef58d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZmZmNjY5N2IxNDRiMzQ2Y2MzODUzYTgyZjEwNTZiNTkzZWY1OGQ=", "commit": {"author": {"name": "oncemoreification", "email": "jjweber@gmail.com", "date": "2013-02-19T07:55:37Z"}, "committer": {"name": "oncemoreification", "email": "jjweber@gmail.com", "date": "2013-02-22T10:19:41Z"}, "message": "Fix vector syntax in error messages", "tree": {"sha": "187d0ba2ee114e00ee3a77e695916f9144637462", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/187d0ba2ee114e00ee3a77e695916f9144637462"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ffff6697b144b346cc3853a82f1056b593ef58d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ffff6697b144b346cc3853a82f1056b593ef58d", "html_url": "https://github.com/rust-lang/rust/commit/4ffff6697b144b346cc3853a82f1056b593ef58d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ffff6697b144b346cc3853a82f1056b593ef58d/comments", "author": {"login": "jjjjw", "id": 1996632, "node_id": "MDQ6VXNlcjE5OTY2MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1996632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjjjw", "html_url": "https://github.com/jjjjw", "followers_url": "https://api.github.com/users/jjjjw/followers", "following_url": "https://api.github.com/users/jjjjw/following{/other_user}", "gists_url": "https://api.github.com/users/jjjjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjjjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjjjw/subscriptions", "organizations_url": "https://api.github.com/users/jjjjw/orgs", "repos_url": "https://api.github.com/users/jjjjw/repos", "events_url": "https://api.github.com/users/jjjjw/events{/privacy}", "received_events_url": "https://api.github.com/users/jjjjw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jjjjw", "id": 1996632, "node_id": "MDQ6VXNlcjE5OTY2MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1996632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjjjw", "html_url": "https://github.com/jjjjw", "followers_url": "https://api.github.com/users/jjjjw/followers", "following_url": "https://api.github.com/users/jjjjw/following{/other_user}", "gists_url": "https://api.github.com/users/jjjjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjjjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjjjw/subscriptions", "organizations_url": "https://api.github.com/users/jjjjw/orgs", "repos_url": "https://api.github.com/users/jjjjw/repos", "events_url": "https://api.github.com/users/jjjjw/events{/privacy}", "received_events_url": "https://api.github.com/users/jjjjw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cec1f38c309b743b29a386ce71db1b1035ccd89d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cec1f38c309b743b29a386ce71db1b1035ccd89d", "html_url": "https://github.com/rust-lang/rust/commit/cec1f38c309b743b29a386ce71db1b1035ccd89d"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "55a9527213848fd0dd68ef01fc306b8d9ff450e7", "filename": "src/librustc/middle/typeck/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4ffff6697b144b346cc3853a82f1056b593ef58d/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffff6697b144b346cc3853a82f1056b593ef58d/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs?ref=4ffff6697b144b346cc3853a82f1056b593ef58d", "patch": "@@ -733,10 +733,10 @@ impl @mut InferCtxt {\n \n     fn report_mismatched_types(sp: span, e: ty::t, a: ty::t,\n                                err: &ty::type_err) {\n-        // Don't report an error if expected is ty_err\n         let resolved_expected =\n             self.resolve_type_vars_if_possible(e);\n         let mk_msg = match ty::get(resolved_expected).sty {\n+            // Don't report an error if expected is ty_err\n             ty::ty_err => return,\n             _ => {\n                 // if I leave out : ~str, it infers &str and complains\n@@ -779,4 +779,3 @@ impl @mut InferCtxt {\n     }\n \n }\n-"}, {"sha": "924574a4c0c01b2a69b8d3c1df02dac8c6bdea43", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4ffff6697b144b346cc3853a82f1056b593ef58d/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffff6697b144b346cc3853a82f1056b593ef58d/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=4ffff6697b144b346cc3853a82f1056b593ef58d", "patch": "@@ -238,19 +238,21 @@ pub fn vstore_to_str(cx: ctxt, vs: ty::vstore) -> ~str {\n       ty::vstore_fixed(n) => fmt!(\"%u\", n),\n       ty::vstore_uniq => ~\"~\",\n       ty::vstore_box => ~\"@\",\n+      /* FIXME(#4517) slice fmt */\n       ty::vstore_slice(r) => region_to_str(cx, r)\n     }\n }\n \n pub fn vstore_ty_to_str(cx: ctxt, ty: ~str, vs: ty::vstore) -> ~str {\n     match vs {\n       ty::vstore_fixed(_) => {\n-        fmt!(\"%s/%s\", ty, vstore_to_str(cx, vs))\n+        fmt!(\"[%s * %s]\", ty, vstore_to_str(cx, vs))\n       }\n+      /* FIXME(#4517) slice fmt */\n       ty::vstore_slice(_) => {\n         fmt!(\"%s/%s\", vstore_to_str(cx, vs), ty)\n       }\n-      _ => fmt!(\"%s%s\", vstore_to_str(cx, vs), ty)\n+      _ => fmt!(\"%s[%s]\", vstore_to_str(cx, vs), ty)\n     }\n }\n \n@@ -453,13 +455,13 @@ pub fn ty_to_str(cx: ctxt, typ: t) -> ~str {\n       ty_trait(did, ref substs, vs) => {\n         let path = ty::item_path(cx, did);\n         let base = ast_map::path_to_str(path, cx.sess.intr());\n-        let result = parameterized(cx, base, substs.self_r, substs.tps);\n-        vstore_ty_to_str(cx, result, vs)\n+        let ty = parameterized(cx, base, substs.self_r, substs.tps);\n+        fmt!(\"%s%s\", vstore_to_str(cx, vs), ty)\n       }\n       ty_evec(mt, vs) => {\n-        vstore_ty_to_str(cx, fmt!(\"[%s]\", mt_to_str(cx, mt)), vs)\n+        vstore_ty_to_str(cx, fmt!(\"%s\", mt_to_str(cx, mt)), vs)\n       }\n-      ty_estr(vs) => vstore_ty_to_str(cx, ~\"str\", vs),\n+      ty_estr(vs) => fmt!(\"%s%s\", vstore_to_str(cx, vs), ~\"str\"),\n       ty_opaque_box => ~\"@?\",\n       ty_opaque_closure_ptr(ast::BorrowedSigil) => ~\"closure&\",\n       ty_opaque_closure_ptr(ast::ManagedSigil) => ~\"closure@\","}, {"sha": "b3820939f8a9e2dc279ab905883e1617ec61ce39", "filename": "src/test/compile-fail/issue-2149.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ffff6697b144b346cc3853a82f1056b593ef58d/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffff6697b144b346cc3853a82f1056b593ef58d/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs?ref=4ffff6697b144b346cc3853a82f1056b593ef58d", "patch": "@@ -22,6 +22,6 @@ impl<A> vec_monad<A> for ~[A] {\n }\n fn main() {\n     [\"hi\"].bind(|x| [x] );\n-    //~^ ERROR type `[&static/str]/1` does not implement any method in scope named `bind`\n+    //~^ ERROR type `[&staticstr * 1]` does not implement any method in scope named `bind`\n     //~^^ ERROR Unconstrained region variable\n }"}, {"sha": "18caaa697a17dffd705b7f0ccc3c89318eb53e5b", "filename": "src/test/compile-fail/issue-4517.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ffff6697b144b346cc3853a82f1056b593ef58d/src%2Ftest%2Fcompile-fail%2Fissue-4517.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffff6697b144b346cc3853a82f1056b593ef58d/src%2Ftest%2Fcompile-fail%2Fissue-4517.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4517.rs?ref=4ffff6697b144b346cc3853a82f1056b593ef58d", "patch": "@@ -0,0 +1,6 @@\n+fn bar(int_param: int) {}\n+\n+fn main() {\n+     let foo: [u8 * 4] = [1u8, ..4u8];\n+     bar(foo); //~ ERROR mismatched types: expected `int` but found `[u8 * 4]` (expected int but found vector)\n+}"}]}