{"sha": "db97c93c9982f106c6eae1f7754a332f094b5647", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOTdjOTNjOTk4MmYxMDZjNmVhZTFmNzc1NGEzMzJmMDk0YjU2NDc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-11-18T02:44:39Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-11-19T00:23:29Z"}, "message": "Add comment explaining why it is called `intravisit`", "tree": {"sha": "2f272da8fbe4a4998c29f85809d0cc49d52ede58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f272da8fbe4a4998c29f85809d0cc49d52ede58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db97c93c9982f106c6eae1f7754a332f094b5647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db97c93c9982f106c6eae1f7754a332f094b5647", "html_url": "https://github.com/rust-lang/rust/commit/db97c93c9982f106c6eae1f7754a332f094b5647", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db97c93c9982f106c6eae1f7754a332f094b5647/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e941f8e978bf868ff5fee21cf54afb3a0644eb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e941f8e978bf868ff5fee21cf54afb3a0644eb9", "html_url": "https://github.com/rust-lang/rust/commit/1e941f8e978bf868ff5fee21cf54afb3a0644eb9"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "3a43feb8ba74bc1899e8fce343f999af39055004", "filename": "src/librustc_front/intravisit.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/db97c93c9982f106c6eae1f7754a332f094b5647/src%2Flibrustc_front%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db97c93c9982f106c6eae1f7754a332f094b5647/src%2Flibrustc_front%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fintravisit.rs?ref=db97c93c9982f106c6eae1f7754a332f094b5647", "patch": "@@ -13,15 +13,17 @@\n //! call `visit::walk_*` to apply the default traversal algorithm, or prevent\n //! deeper traversal by doing nothing.\n //!\n-//! Note: it is an important invariant that the default visitor walks the body\n-//! of a function in \"execution order\" (more concretely, reverse post-order\n-//! with respect to the CFG implied by the AST), meaning that if AST node A may\n-//! execute before AST node B, then A is visited first.  The borrow checker in\n-//! particular relies on this property.\n+//! When visiting the HIR, the contents of nested items are NOT visited\n+//! by default. This is different from the AST visitor, which does a deep walk.\n+//! Hence this module is called `intravisit`; see the method `visit_nested_item`\n+//! for more details.\n //!\n-//! Note: walking an AST before macro expansion is probably a bad idea. For\n-//! instance, a walker looking for item names in a module will miss all of\n-//! those that are created by the expansion of a macro.\n+//! Note: it is an important invariant that the default visitor walks\n+//! the body of a function in \"execution order\" (more concretely,\n+//! reverse post-order with respect to the CFG implied by the AST),\n+//! meaning that if AST node A may execute before AST node B, then A\n+//! is visited first.  The borrow checker in particular relies on this\n+//! property.\n \n use syntax::abi::Abi;\n use syntax::ast::{Ident, NodeId, CRATE_NODE_ID, Name, Attribute};\n@@ -45,8 +47,10 @@ pub enum FnKind<'a> {\n /// the substructure of the input via the corresponding `walk` method;\n /// e.g. the `visit_mod` method by default calls `visit::walk_mod`.\n ///\n-/// Note that this visitor does NOT visit nested items by default. If\n-/// you simply want to visit all items in the crate in some order, you\n+/// Note that this visitor does NOT visit nested items by default\n+/// (this is why the module is called `intravisit`, to distinguish it\n+/// from the AST's `visit` module, which acts differently). If you\n+/// simply want to visit all items in the crate in some order, you\n /// should call `Crate::visit_all_items`. Otherwise, see the comment\n /// on `visit_nested_item` for details on how to visit nested items.\n ///"}]}