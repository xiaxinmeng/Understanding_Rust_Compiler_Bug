{"sha": "a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMzc3Y2NmOTExNThjZTVjOWRhMmU1ZDBjYzFmNTZmYTU2MmIyZmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-29T05:42:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-29T05:42:38Z"}, "message": "stdlib: Add vec::init. Returns all but the last element.\n\nPer haskell, to go with head/tail, and last.", "tree": {"sha": "8030b1abf93ea7d57f4e71dea05de8c3d4fe2259", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8030b1abf93ea7d57f4e71dea05de8c3d4fe2259"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe", "html_url": "https://github.com/rust-lang/rust/commit/a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5415a39739758e6e06e476e3bcb8c3b9466d7e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5415a39739758e6e06e476e3bcb8c3b9466d7e8", "html_url": "https://github.com/rust-lang/rust/commit/d5415a39739758e6e06e476e3bcb8c3b9466d7e8"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "548afaa73bc993c17673f752178a9ecc5e0ed770", "filename": "src/lib/vec.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe/src%2Flib%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe/src%2Flib%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fvec.rs?ref=a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe", "patch": "@@ -193,10 +193,26 @@ fn tail<T>(v: [mutable? T]) : is_not_empty(v) -> [T] {\n     ret slice(v, 1u, len(v));\n }\n \n+// FIXME: This name is sort of confusing next to init_fn, etc\n+// but this is the name haskell uses for this function,\n+// along with head/tail/last.\n+/*\n+Function: init\n+\n+Returns all but the last elemnt of a vector\n+\n+Preconditions:\n+`v` is not empty\n+*/\n+fn init<T>(v: [mutable? T]) -> [T] {\n+    assert len(v) != 0u;\n+    slice(v, 0u, len(v) - 1u)\n+}\n+\n /*\n Function: last\n \n-Returns the last element of `v`\n+Returns the last element of a vector\n \n Returns:\n "}, {"sha": "5f644c450b6dadfce1aeb088ff6bbaf04bb13846", "filename": "src/test/stdtest/vec.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe/src%2Ftest%2Fstdtest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe/src%2Ftest%2Fstdtest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fvec.rs?ref=a2377ccf91158ce5c9da2e5d0cc1f56fa562b2fe", "patch": "@@ -5,6 +5,7 @@ import std::vec::*;\n import std::option;\n import std::option::none;\n import std::option::some;\n+import std::task;\n \n fn square(n: uint) -> uint { ret n * n; }\n \n@@ -443,6 +444,31 @@ fn reversed_mut() {\n     assert (v2[1] == 10);\n }\n \n+#[test]\n+fn init() {\n+    let v = vec::init([1, 2, 3]);\n+    assert v == [1, 2];\n+}\n+\n+#[cfg(target_os = \"linux\")]\n+#[cfg(target_os = \"mac\")]\n+#[test]\n+fn init_empty() {\n+\n+    let r = task::join(\n+        task::spawn_joinable((), fn (&&_i: ()) {\n+            task::unsupervise();\n+            vec::init::<int>([]);\n+        }));\n+    assert r == task::tr_failure\n+}\n+\n+// FIXME: Windows can't undwind\n+#[cfg(target_os = \"win32\")]\n+#[test]\n+#[ignore]\n+fn init_empty() { }\n+\n // Local Variables:\n // mode: rust;\n // fill-column: 78;"}]}