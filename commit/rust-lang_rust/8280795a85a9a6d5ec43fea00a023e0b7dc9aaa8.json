{"sha": "8280795a85a9a6d5ec43fea00a023e0b7dc9aaa8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyODA3OTVhODVhOWE2ZDVlYzQzZmVhMDBhMDIzZTBiN2RjOWFhYTg=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-29T16:39:44Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-29T16:39:44Z"}, "message": "Remove unused hard-coded paths", "tree": {"sha": "299c31f7ff88c9c50385a6d010a4fa0977aa3424", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/299c31f7ff88c9c50385a6d010a4fa0977aa3424"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8280795a85a9a6d5ec43fea00a023e0b7dc9aaa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8280795a85a9a6d5ec43fea00a023e0b7dc9aaa8", "html_url": "https://github.com/rust-lang/rust/commit/8280795a85a9a6d5ec43fea00a023e0b7dc9aaa8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8280795a85a9a6d5ec43fea00a023e0b7dc9aaa8/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fad8e897a8d3a5c2e55d3a00fb8465fb87f86bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fad8e897a8d3a5c2e55d3a00fb8465fb87f86bb", "html_url": "https://github.com/rust-lang/rust/commit/8fad8e897a8d3a5c2e55d3a00fb8465fb87f86bb"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "82cfa67a9a451658127e83a2c04c0ed19ae06b03", "filename": "crates/ra_hir_def/src/path.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8280795a85a9a6d5ec43fea00a023e0b7dc9aaa8/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8280795a85a9a6d5ec43fea00a023e0b7dc9aaa8/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath.rs?ref=8280795a85a9a6d5ec43fea00a023e0b7dc9aaa8", "patch": "@@ -260,12 +260,8 @@ macro_rules! __known_path {\n     (std::ops::RangeTo) => {};\n     (std::ops::RangeToInclusive) => {};\n     (std::ops::RangeInclusive) => {};\n-    (std::boxed::Box) => {};\n     (std::future::Future) => {};\n     (std::ops::Try) => {};\n-    (std::ops::Neg) => {};\n-    (std::ops::Not) => {};\n-    (std::ops::Index) => {};\n     ($path:path) => {\n         compile_error!(\"Please register your known path in the path module\")\n     };"}]}