{"sha": "e76e0e843df1293dca40baa3790bfc7db993008d", "node_id": "C_kwDOAAsO6NoAKGU3NmUwZTg0M2RmMTI5M2RjYTQwYmFhMzc5MGJmYzdkYjk5MzAwOGQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-21T17:25:50Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-21T17:28:04Z"}, "message": "Simplify", "tree": {"sha": "7026973346ebfbbeb2b603802abd8e67bdabce25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7026973346ebfbbeb2b603802abd8e67bdabce25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e76e0e843df1293dca40baa3790bfc7db993008d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e76e0e843df1293dca40baa3790bfc7db993008d", "html_url": "https://github.com/rust-lang/rust/commit/e76e0e843df1293dca40baa3790bfc7db993008d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e76e0e843df1293dca40baa3790bfc7db993008d/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b1c434d5321addbdecd5c908ad82bb626cc7cbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1c434d5321addbdecd5c908ad82bb626cc7cbb", "html_url": "https://github.com/rust-lang/rust/commit/0b1c434d5321addbdecd5c908ad82bb626cc7cbb"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "5e91a3df0a2b84d052b2747b90caad62834e8b54", "filename": "crates/hir_def/src/import_map.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e76e0e843df1293dca40baa3790bfc7db993008d/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e76e0e843df1293dca40baa3790bfc7db993008d/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fimport_map.rs?ref=e76e0e843df1293dca40baa3790bfc7db993008d", "patch": "@@ -72,29 +72,33 @@ impl ImportMap {\n \n         let mut import_map = collect_import_map(db, krate);\n \n-        let mut importables = import_map.map.iter().collect::<Vec<_>>();\n-        importables.sort_by_cached_key(|(_, import_info)| fst_path(&import_info.path));\n+        let mut importables = import_map\n+            .map\n+            .iter()\n+            .map(|(item, info)| (item, fst_path(&info.path)))\n+            .collect::<Vec<_>>();\n+        importables.sort_by(|(_, fst_path), (_, fst_path2)| fst_path.cmp(fst_path2));\n \n         // Build the FST, taking care not to insert duplicate values.\n \n         let mut builder = fst::MapBuilder::memory();\n         let mut last_batch_start = 0;\n \n         for idx in 0..importables.len() {\n-            let key = fst_path(&importables[last_batch_start].1.path);\n-            if let Some((_, next_import_info)) = importables.get(idx + 1) {\n-                if key == fst_path(&next_import_info.path) {\n+            let key = &importables[last_batch_start].1;\n+            if let Some((_, fst_path)) = importables.get(idx + 1) {\n+                if key == fst_path {\n                     continue;\n                 }\n             }\n \n-            builder.insert(key, last_batch_start as u64).unwrap();\n+            let _ = builder.insert(key, last_batch_start as u64);\n \n             last_batch_start = idx + 1;\n         }\n \n-        import_map.fst = fst::Map::new(builder.into_inner().unwrap()).unwrap();\n-        import_map.importables = importables.iter().map(|(item, _)| **item).collect();\n+        import_map.fst = builder.into_map();\n+        import_map.importables = importables.iter().map(|&(&item, _)| item).collect();\n \n         Arc::new(import_map)\n     }"}, {"sha": "2a1891c76b238eb0410ac2c4267caf9366326927", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e76e0e843df1293dca40baa3790bfc7db993008d/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e76e0e843df1293dca40baa3790bfc7db993008d/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=e76e0e843df1293dca40baa3790bfc7db993008d", "patch": "@@ -302,6 +302,7 @@ impl<'a> CompletionContext<'a> {\n \n     /// A version of [`SemanticsScope::process_all_names`] that filters out `#[doc(hidden)]` items.\n     pub(crate) fn process_all_names(&self, f: &mut dyn FnMut(Name, ScopeDef)) {\n+        let _p = profile::span(\"CompletionContext::process_all_names\");\n         self.scope.process_all_names(&mut |name, def| {\n             if self.is_scope_def_hidden(def) {\n                 return;\n@@ -422,6 +423,7 @@ impl<'a> CompletionContext<'a> {\n         mut offset: TextSize,\n         mut fake_ident_token: SyntaxToken,\n     ) {\n+        let _p = profile::span(\"CompletionContext::expand_and_fill\");\n         loop {\n             // Expand attributes\n             if let (Some(actual_item), Some(item_with_fake_ident)) = ("}]}