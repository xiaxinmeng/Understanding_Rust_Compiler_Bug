{"sha": "95bc72052c65e22cbf23f80bfa314528abcb981b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YmM3MjA1MmM2NWUyMmNiZjIzZjgwYmZhMzE0NTI4YWJjYjk4MWI=", "commit": {"author": {"name": "Christian Poveda", "email": "cpovedar@fnal.gov", "date": "2019-06-29T12:59:45Z"}, "committer": {"name": "Christian Poveda", "email": "cpovedar@fnal.gov", "date": "2019-06-29T12:59:45Z"}, "message": "Use pointer size as the source size", "tree": {"sha": "d4e990ee8ac284f2cd2803ef083b99972b7f2a5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4e990ee8ac284f2cd2803ef083b99972b7f2a5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95bc72052c65e22cbf23f80bfa314528abcb981b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95bc72052c65e22cbf23f80bfa314528abcb981b", "html_url": "https://github.com/rust-lang/rust/commit/95bc72052c65e22cbf23f80bfa314528abcb981b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95bc72052c65e22cbf23f80bfa314528abcb981b/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f1e160e02112d4d23a72e52b2ab23860e6a956f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f1e160e02112d4d23a72e52b2ab23860e6a956f", "html_url": "https://github.com/rust-lang/rust/commit/7f1e160e02112d4d23a72e52b2ab23860e6a956f"}], "stats": {"total": 19, "additions": 3, "deletions": 16}, "files": [{"sha": "73ef0bd6dacb61f2217df5052faaa889cab28328", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/95bc72052c65e22cbf23f80bfa314528abcb981b/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95bc72052c65e22cbf23f80bfa314528abcb981b/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=95bc72052c65e22cbf23f80bfa314528abcb981b", "patch": "@@ -244,37 +244,24 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpretCx<'mir, 'tcx, M> {\n     ) -> InterpResult<'tcx, Scalar<M::PointerTag>> {\n         use rustc::ty::TyKind::*;\n \n-        fn int_size<'tcx>(layout: TyLayout<'tcx>) -> Option<usize> {\n-            match layout.ty.sty {\n-                Int(i) => i.bit_width(),\n-                Uint(i) => i.bit_width(),\n-                _ => bug!(\"Not an integer\"),\n-            }\n-        }\n-\n         match dest_layout.ty.sty {\n             // Casting to a reference or fn pointer is not permitted by rustc,\n             // no need to support it here.\n             RawPtr(_) => Ok(ptr.into()),\n             Int(IntTy::Isize) | Uint(UintTy::Usize) => {\n-                let size = self.memory.pointer_size();\n-                \n-                if let Ok(bits) = self.force_bits(Scalar::Ptr(ptr), size) {\n+                if let Ok(bits) = self.force_bits(Scalar::Ptr(ptr), self.memory.pointer_size()) {\n                     self.cast_from_int(bits, src_layout, dest_layout)\n                 } else {\n                     Ok(ptr.into())\n                 }\n             }\n             Int(_) | Uint(_) => {\n-                let size = Size::from_bits(int_size(dest_layout).unwrap() as u64);\n-                \n-                if let Ok(bits) = self.force_bits(Scalar::Ptr(ptr), size) {\n+                if let Ok(bits) = self.force_bits(Scalar::Ptr(ptr), self.memory.pointer_size()) {\n                     self.cast_from_int(bits, src_layout, dest_layout)\n                 } else {\n                     err!(ReadPointerAsBytes)\n                 }\n-            },\n-            // Casting to any other type is not implemented\n+            }\n             _ => return err!(Unimplemented(format!(\"ptr to {:?} cast\", dest_layout.ty))),\n         }\n     }"}]}