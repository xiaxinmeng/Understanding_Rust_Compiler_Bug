{"sha": "806d973adcc1459df50dadd088928503f44be24f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNmQ5NzNhZGNjMTQ1OWRmNTBkYWRkMDg4OTI4NTAzZjQ0YmUyNGY=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-04-25T20:49:06Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-04-25T20:52:19Z"}, "message": "map_clone: avoid suggesting `copied()` for &mut", "tree": {"sha": "4a79ccc0ef4f8e54ae034bd9d30d9f48a2e8189c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a79ccc0ef4f8e54ae034bd9d30d9f48a2e8189c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/806d973adcc1459df50dadd088928503f44be24f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/806d973adcc1459df50dadd088928503f44be24f", "html_url": "https://github.com/rust-lang/rust/commit/806d973adcc1459df50dadd088928503f44be24f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/806d973adcc1459df50dadd088928503f44be24f/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ffe725bbcbcbad4caf4b10e546687c13c1d2ac7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ffe725bbcbcbad4caf4b10e546687c13c1d2ac7", "html_url": "https://github.com/rust-lang/rust/commit/6ffe725bbcbcbad4caf4b10e546687c13c1d2ac7"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "0b346393ac3892cede0117ea618d13ab9f803d65", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/806d973adcc1459df50dadd088928503f44be24f/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/806d973adcc1459df50dadd088928503f44be24f/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=806d973adcc1459df50dadd088928503f44be24f", "patch": "@@ -7,6 +7,7 @@ use rustc_ast::ast::Ident;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::mir::Mutability;\n use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n@@ -58,7 +59,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MapClone {\n             let closure_expr = remove_blocks(&closure_body.value);\n             then {\n                 match closure_body.params[0].pat.kind {\n-                    hir::PatKind::Ref(ref inner, _) => if let hir::PatKind::Binding(\n+                    hir::PatKind::Ref(ref inner, hir::Mutability::Not) => if let hir::PatKind::Binding(\n                         hir::BindingAnnotation::Unannotated, .., name, None\n                     ) = inner.kind {\n                         if ident_eq(name, closure_expr) {\n@@ -69,7 +70,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MapClone {\n                         match closure_expr.kind {\n                             hir::ExprKind::Unary(hir::UnOp::UnDeref, ref inner) => {\n                                 if ident_eq(name, inner) {\n-                                    if let ty::Ref(..) = cx.tables.expr_ty(inner).kind {\n+                                    if let ty::Ref(.., Mutability::Not) = cx.tables.expr_ty(inner).kind {\n                                         lint(cx, e.span, args[0].span, true);\n                                     }\n                                 }"}, {"sha": "81c7f659efb1fed41dbbd9433b9dd5a8c3d79ffe", "filename": "tests/ui/map_clone.fixed", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/806d973adcc1459df50dadd088928503f44be24f/tests%2Fui%2Fmap_clone.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/806d973adcc1459df50dadd088928503f44be24f/tests%2Fui%2Fmap_clone.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.fixed?ref=806d973adcc1459df50dadd088928503f44be24f", "patch": "@@ -4,6 +4,7 @@\n #![allow(clippy::clone_on_copy, clippy::redundant_clone)]\n #![allow(clippy::missing_docs_in_private_items)]\n #![allow(clippy::redundant_closure_for_method_calls)]\n+#![allow(clippy::many_single_char_names)]\n \n fn main() {\n     let _: Vec<i8> = vec![5_i8; 6].iter().copied().collect();\n@@ -33,4 +34,14 @@ fn main() {\n         let v: Vec<Rc<u32>> = vec![Rc::new(0_u32)];\n         let _: Vec<u32> = v.into_iter().map(|x| *x).collect();\n     }\n+\n+    // Issue #5524 mutable references\n+    {\n+        let mut c = 42;\n+        let v = vec![&mut c];\n+        let _: Vec<u32> = v.into_iter().map(|x| *x).collect();\n+        let mut d = 21;\n+        let v = vec![&mut d];\n+        let _: Vec<u32> = v.into_iter().map(|&mut x| x).collect();\n+    }\n }"}, {"sha": "8ed164f0ed51dabcf0d6e449351e427f6a1576d5", "filename": "tests/ui/map_clone.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/806d973adcc1459df50dadd088928503f44be24f/tests%2Fui%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/806d973adcc1459df50dadd088928503f44be24f/tests%2Fui%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.rs?ref=806d973adcc1459df50dadd088928503f44be24f", "patch": "@@ -4,6 +4,7 @@\n #![allow(clippy::clone_on_copy, clippy::redundant_clone)]\n #![allow(clippy::missing_docs_in_private_items)]\n #![allow(clippy::redundant_closure_for_method_calls)]\n+#![allow(clippy::many_single_char_names)]\n \n fn main() {\n     let _: Vec<i8> = vec![5_i8; 6].iter().map(|x| *x).collect();\n@@ -33,4 +34,14 @@ fn main() {\n         let v: Vec<Rc<u32>> = vec![Rc::new(0_u32)];\n         let _: Vec<u32> = v.into_iter().map(|x| *x).collect();\n     }\n+\n+    // Issue #5524 mutable references\n+    {\n+        let mut c = 42;\n+        let v = vec![&mut c];\n+        let _: Vec<u32> = v.into_iter().map(|x| *x).collect();\n+        let mut d = 21;\n+        let v = vec![&mut d];\n+        let _: Vec<u32> = v.into_iter().map(|&mut x| x).collect();\n+    }\n }"}, {"sha": "9eec6928e8cee331d0b71086069eb322007877e1", "filename": "tests/ui/map_clone.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/806d973adcc1459df50dadd088928503f44be24f/tests%2Fui%2Fmap_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/806d973adcc1459df50dadd088928503f44be24f/tests%2Fui%2Fmap_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.stderr?ref=806d973adcc1459df50dadd088928503f44be24f", "patch": "@@ -1,37 +1,37 @@\n error: You are using an explicit closure for copying elements\n-  --> $DIR/map_clone.rs:9:22\n+  --> $DIR/map_clone.rs:10:22\n    |\n LL |     let _: Vec<i8> = vec![5_i8; 6].iter().map(|x| *x).collect();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `copied` method: `vec![5_i8; 6].iter().copied()`\n    |\n    = note: `-D clippy::map-clone` implied by `-D warnings`\n \n error: You are using an explicit closure for cloning elements\n-  --> $DIR/map_clone.rs:10:26\n+  --> $DIR/map_clone.rs:11:26\n    |\n LL |     let _: Vec<String> = vec![String::new()].iter().map(|x| x.clone()).collect();\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `cloned` method: `vec![String::new()].iter().cloned()`\n \n error: You are using an explicit closure for copying elements\n-  --> $DIR/map_clone.rs:11:23\n+  --> $DIR/map_clone.rs:12:23\n    |\n LL |     let _: Vec<u32> = vec![42, 43].iter().map(|&x| x).collect();\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `copied` method: `vec![42, 43].iter().copied()`\n \n error: You are using an explicit closure for copying elements\n-  --> $DIR/map_clone.rs:13:26\n+  --> $DIR/map_clone.rs:14:26\n    |\n LL |     let _: Option<u64> = Some(&16).map(|b| *b);\n    |                          ^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `copied` method: `Some(&16).copied()`\n \n error: You are using an explicit closure for copying elements\n-  --> $DIR/map_clone.rs:14:25\n+  --> $DIR/map_clone.rs:15:25\n    |\n LL |     let _: Option<u8> = Some(&1).map(|x| x.clone());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `copied` method: `Some(&1).copied()`\n \n error: You are needlessly cloning iterator elements\n-  --> $DIR/map_clone.rs:25:29\n+  --> $DIR/map_clone.rs:26:29\n    |\n LL |     let _ = std::env::args().map(|v| v.clone());\n    |                             ^^^^^^^^^^^^^^^^^^^ help: Remove the `map` call"}]}