{"sha": "2aabccc3ba7d4cf4da622761b266da1d6836ec3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYWJjY2MzYmE3ZDRjZjRkYTYyMjc2MWIyNjZkYTFkNjgzNmVjM2Q=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-21T03:57:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-21T03:57:47Z"}, "message": "doc: Remove extract-tests.js and run-tests.sh\n\nThe tutorial tests are run as part of the test suite now.", "tree": {"sha": "dfd7583be2ab0eeb4266dfbdf26a8b0e2c787c0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfd7583be2ab0eeb4266dfbdf26a8b0e2c787c0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2aabccc3ba7d4cf4da622761b266da1d6836ec3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2aabccc3ba7d4cf4da622761b266da1d6836ec3d", "html_url": "https://github.com/rust-lang/rust/commit/2aabccc3ba7d4cf4da622761b266da1d6836ec3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2aabccc3ba7d4cf4da622761b266da1d6836ec3d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "327c8bc7335e24633b24e7bfdbb23f76078c886f", "url": "https://api.github.com/repos/rust-lang/rust/commits/327c8bc7335e24633b24e7bfdbb23f76078c886f", "html_url": "https://github.com/rust-lang/rust/commit/327c8bc7335e24633b24e7bfdbb23f76078c886f"}], "stats": {"total": 52, "additions": 0, "deletions": 52}, "files": [{"sha": "88de3f563fb519fd8fa1f4858bcbec34570dfdfa", "filename": "doc/extract-tests.js", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/327c8bc7335e24633b24e7bfdbb23f76078c886f/doc%2Fextract-tests.js", "raw_url": "https://github.com/rust-lang/rust/raw/327c8bc7335e24633b24e7bfdbb23f76078c886f/doc%2Fextract-tests.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fextract-tests.js?ref=327c8bc7335e24633b24e7bfdbb23f76078c886f", "patch": "@@ -1,44 +0,0 @@\n-#!/usr/local/bin/node\n-\n-/***\n- * Script for extracting compilable fragments from markdown\n- * documentation. See prep.js for a description of the format\n- * recognized by this tool. Expects a directory fragements/ to exist\n- * under the current directory, and writes the fragments in there as\n- * individual .rs files.\n- */\n-\n-var fs = require(\"fs\");\n-\n-if (!process.argv[2]) {\n-  console.log(\"Please provide an input file name.\");\n-  process.exit(1);\n-}\n-\n-var lines = fs.readFileSync(process.argv[2]).toString().split(/\\n\\r?/g);\n-var cur = 0, line, chapter, chapter_n;\n-\n-while ((line = lines[cur++]) != null) {\n-  var chap = line.match(/^# (.*)/);\n-  if (chap) {\n-    chapter = chap[1].toLowerCase().replace(/\\W/g, \"_\");\n-    chapter_n = 1;\n-  } else if (/^~~~/.test(line)) {\n-    var block = \"\", ignore = false;\n-    while ((line = lines[cur++]) != null) {\n-      if (/^\\s*## (?:notrust|ignore)/.test(line)) ignore = true;\n-      else if (/^~~~/.test(line)) break;\n-      else block += line.replace(/^# /, \"\") + \"\\n\";\n-    }\n-    if (!ignore) {\n-      if (!/\\bfn main\\b/.test(block)) {\n-        if (/(^|\\n) *(native|use|mod|import|export)\\b/.test(block))\n-          block += \"\\nfn main() {}\\n\";\n-        else block = \"fn main() {\\n\" + block + \"\\n}\\n\";\n-      }\n-      if (!/\\buse std\\b/.test(block)) block = \"use std;\\n\" + block;\n-      var filename = \"fragments/\" + chapter + \"_\" + (chapter_n++) + \".rs\";\n-      fs.writeFileSync(filename, block);\n-    }\n-  }\n-}"}, {"sha": "a878570f4a9a1ba8e7cc512e55872b94a578d281", "filename": "doc/run-tests.sh", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/327c8bc7335e24633b24e7bfdbb23f76078c886f/doc%2Frun-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/327c8bc7335e24633b24e7bfdbb23f76078c886f/doc%2Frun-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frun-tests.sh?ref=327c8bc7335e24633b24e7bfdbb23f76078c886f", "patch": "@@ -1,8 +0,0 @@\n-#!/bin/bash\n-rm -f fragments/*.rs\n-mkdir -p fragments\n-node extract-tests.js $1\n-for F in `ls fragments/*.rs`; do\n-  $RUSTC $F > /dev/null\n-  if [[ $? != 0 ]] ; then echo $F; fi\n-done"}]}