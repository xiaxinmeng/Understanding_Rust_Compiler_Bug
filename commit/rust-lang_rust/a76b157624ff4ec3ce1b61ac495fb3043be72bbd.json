{"sha": "a76b157624ff4ec3ce1b61ac495fb3043be72bbd", "node_id": "C_kwDOAAsO6NoAKGE3NmIxNTc2MjRmZjRlYzNjZTFiNjFhYzQ5NWZiMzA0M2JlNzJiYmQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-17T16:13:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-17T16:13:36Z"}, "message": "Rollup merge of #110434 - compiler-errors:issue-110171, r=oli-obk\n\nCheck freeze with right param-env in `deduced_param_attrs`\n\nWe're checking if a trait (`Freeze`) holds in a polymorphic function, but not using that function's own (reveal-all) param-env. This causes us to try to eagerly normalize a specializable projection type that has no default value, which causes an ICE.\n\nFixes #110171", "tree": {"sha": "9973d39b1c04ab349ea028b32953e3701bab10da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9973d39b1c04ab349ea028b32953e3701bab10da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a76b157624ff4ec3ce1b61ac495fb3043be72bbd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkPXAwCRBK7hj4Ov3rIwAAHN0IAAoW8+mUIOuLpJghvGwxcY4s\n4P7rJ9ujFYWWml/G8igi8/4Lijx7UD93zmM6rnlf01cq+7Okneox+6CFYFmywBy4\nOoNW4Q81HRZks9fZQT9Pz7fa8sQ6iI6bynnPCp43EkO0jpywZhE0xWsH7kryirlK\n+XwULW6oE1pzXU2EHMsgDvU9EOcZEINXte4riVFumVojvW1l/V6TfpFaBojVAw3i\neuV/IjBbPNBVsgsovUh6iv9yMS688mfEKxwXqFlYZ+KfoBYxycdWrrQA8lr50/JF\nPrq3UF1TF2pBSfC4Ir6bbOOWrBsJcy3rFqkHV056tfKFO/QTnMCaCWd2PgLy0yk=\n=YZWC\n-----END PGP SIGNATURE-----\n", "payload": "tree 9973d39b1c04ab349ea028b32953e3701bab10da\nparent d01c62bcef9ed70f308cc151b6a714f27af1caf8\nparent e28e19034ffd49a50499e96da884be3ea9a950aa\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681748016 +0200\ncommitter GitHub <noreply@github.com> 1681748016 +0200\n\nRollup merge of #110434 - compiler-errors:issue-110171, r=oli-obk\n\nCheck freeze with right param-env in `deduced_param_attrs`\n\nWe're checking if a trait (`Freeze`) holds in a polymorphic function, but not using that function's own (reveal-all) param-env. This causes us to try to eagerly normalize a specializable projection type that has no default value, which causes an ICE.\n\nFixes #110171\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a76b157624ff4ec3ce1b61ac495fb3043be72bbd", "html_url": "https://github.com/rust-lang/rust/commit/a76b157624ff4ec3ce1b61ac495fb3043be72bbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a76b157624ff4ec3ce1b61ac495fb3043be72bbd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d01c62bcef9ed70f308cc151b6a714f27af1caf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d01c62bcef9ed70f308cc151b6a714f27af1caf8", "html_url": "https://github.com/rust-lang/rust/commit/d01c62bcef9ed70f308cc151b6a714f27af1caf8"}, {"sha": "e28e19034ffd49a50499e96da884be3ea9a950aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e28e19034ffd49a50499e96da884be3ea9a950aa", "html_url": "https://github.com/rust-lang/rust/commit/e28e19034ffd49a50499e96da884be3ea9a950aa"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "8ee08c5be3419b085febe0ed8a4b1d4a2071a101", "filename": "compiler/rustc_mir_transform/src/deduce_param_attrs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a76b157624ff4ec3ce1b61ac495fb3043be72bbd/compiler%2Frustc_mir_transform%2Fsrc%2Fdeduce_param_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76b157624ff4ec3ce1b61ac495fb3043be72bbd/compiler%2Frustc_mir_transform%2Fsrc%2Fdeduce_param_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdeduce_param_attrs.rs?ref=a76b157624ff4ec3ce1b61ac495fb3043be72bbd", "patch": "@@ -9,7 +9,7 @@ use rustc_hir::def_id::LocalDefId;\n use rustc_index::bit_set::BitSet;\n use rustc_middle::mir::visit::{NonMutatingUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::{Body, Local, Location, Operand, Terminator, TerminatorKind, RETURN_PLACE};\n-use rustc_middle::ty::{self, DeducedParamAttrs, ParamEnv, Ty, TyCtxt};\n+use rustc_middle::ty::{self, DeducedParamAttrs, Ty, TyCtxt};\n use rustc_session::config::OptLevel;\n \n /// A visitor that determines which arguments have been mutated. We can't use the mutability field\n@@ -198,11 +198,12 @@ pub fn deduced_param_attrs<'tcx>(\n     // see [1].\n     //\n     // [1]: https://github.com/rust-lang/rust/pull/103172#discussion_r999139997\n+    let param_env = tcx.param_env_reveal_all_normalized(def_id);\n     let mut deduced_param_attrs = tcx.arena.alloc_from_iter(\n         body.local_decls.iter().skip(1).take(body.arg_count).enumerate().map(\n             |(arg_index, local_decl)| DeducedParamAttrs {\n                 read_only: !deduce_read_only.mutable_args.contains(arg_index)\n-                    && local_decl.ty.is_freeze(tcx, ParamEnv::reveal_all()),\n+                    && local_decl.ty.is_freeze(tcx, param_env),\n             },\n         ),\n     );"}, {"sha": "edc79f8fd94bd61ed525f7ea23aee41941eb4226", "filename": "tests/ui/codegen/freeze-on-polymorphic-projection.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a76b157624ff4ec3ce1b61ac495fb3043be72bbd/tests%2Fui%2Fcodegen%2Ffreeze-on-polymorphic-projection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76b157624ff4ec3ce1b61ac495fb3043be72bbd/tests%2Fui%2Fcodegen%2Ffreeze-on-polymorphic-projection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcodegen%2Ffreeze-on-polymorphic-projection.rs?ref=a76b157624ff4ec3ce1b61ac495fb3043be72bbd", "patch": "@@ -0,0 +1,19 @@\n+// build-pass\n+// compile-flags: -Copt-level=1 --crate-type=lib\n+\n+#![feature(specialization)]\n+//~^ WARN the feature `specialization` is incomplete\n+\n+pub unsafe trait Storage {\n+    type Handle;\n+}\n+\n+pub unsafe trait MultipleStorage: Storage {}\n+\n+default unsafe impl<S> Storage for S where S: MultipleStorage {}\n+\n+// Make sure that we call is_freeze on `(S::Handle,)` in the param-env of `ice`,\n+// instead of in an empty, reveal-all param-env.\n+pub fn ice<S: Storage>(boxed: (S::Handle,)) -> (S::Handle,) {\n+    boxed\n+}"}, {"sha": "903cb2ff6aa9874d0e24f1637fe1939bcf3e86e9", "filename": "tests/ui/codegen/freeze-on-polymorphic-projection.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a76b157624ff4ec3ce1b61ac495fb3043be72bbd/tests%2Fui%2Fcodegen%2Ffreeze-on-polymorphic-projection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a76b157624ff4ec3ce1b61ac495fb3043be72bbd/tests%2Fui%2Fcodegen%2Ffreeze-on-polymorphic-projection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcodegen%2Ffreeze-on-polymorphic-projection.stderr?ref=a76b157624ff4ec3ce1b61ac495fb3043be72bbd", "patch": "@@ -0,0 +1,12 @@\n+warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/freeze-on-polymorphic-projection.rs:4:12\n+   |\n+LL | #![feature(specialization)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\n+   = help: consider using `min_specialization` instead, which is more stable and complete\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}