{"sha": "34155a87f6898f29106d4c6095b6e8f77b2290d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MTU1YTg3ZjY4OThmMjkxMDZkNGM2MDk1YjZlOGY3N2IyMjkwZDA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2016-09-28T23:11:54Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2016-09-28T23:11:54Z"}, "message": "Change the `local` prefix to `_`\n\nThere's no need for a long prefix, since there's nothing to distinguish\nanymore.", "tree": {"sha": "4b00ec119f9bff1e4dd44434f42c5771bdf4d711", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b00ec119f9bff1e4dd44434f42c5771bdf4d711"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34155a87f6898f29106d4c6095b6e8f77b2290d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34155a87f6898f29106d4c6095b6e8f77b2290d0", "html_url": "https://github.com/rust-lang/rust/commit/34155a87f6898f29106d4c6095b6e8f77b2290d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34155a87f6898f29106d4c6095b6e8f77b2290d0/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "168a0795c636273129d7b2395efcbe6660d53290", "url": "https://api.github.com/repos/rust-lang/rust/commits/168a0795c636273129d7b2395efcbe6660d53290", "html_url": "https://github.com/rust-lang/rust/commit/168a0795c636273129d7b2395efcbe6660d53290"}], "stats": {"total": 78, "additions": 39, "deletions": 39}, "files": [{"sha": "5da2e2f6fda5444d763ad1c1ffe515fa033d4a00", "filename": "src/librustc/mir/repr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=34155a87f6898f29106d4c6095b6e8f77b2290d0", "patch": "@@ -85,7 +85,7 @@ pub struct Mir<'tcx> {\n \n     /// Number of arguments this function takes.\n     ///\n-    /// Starting at local1, `arg_count` locals will be provided by the caller\n+    /// Starting at local 1, `arg_count` locals will be provided by the caller\n     /// and can be assumed to be initialized.\n     ///\n     /// If this MIR was built for a constant, this will be 0.\n@@ -323,7 +323,7 @@ pub enum BorrowKind {\n ///////////////////////////////////////////////////////////////////////////\n // Variables and temps\n \n-newtype_index!(Local, \"local\");\n+newtype_index!(Local, \"_\");\n \n pub const RETURN_POINTER: Local = Local(0);\n "}, {"sha": "c0e7af845ec4f5c4b9d71902410bf3df9e1e6aa7", "filename": "src/librustc_trans/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fconstant.rs?ref=34155a87f6898f29106d4c6095b6e8f77b2290d0", "patch": "@@ -230,7 +230,7 @@ impl<'a, 'tcx> MirConstContext<'a, 'tcx> {\n             locals: (0..mir.local_decls.len()).map(|_| None).collect(),\n         };\n         for (i, arg) in args.into_iter().enumerate() {\n-            // Locals after local0 are the function arguments\n+            // Locals after local 0 are the function arguments\n             let index = mir::Local::new(i + 1);\n             context.locals[index] = Some(arg);\n         }"}, {"sha": "81f6cf309da50f3ee84e58a062dae5b6361d33f5", "filename": "src/test/codegen/lifetime_start_end.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Ftest%2Fcodegen%2Flifetime_start_end.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Ftest%2Fcodegen%2Flifetime_start_end.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Flifetime_start_end.rs?ref=34155a87f6898f29106d4c6095b6e8f77b2290d0", "patch": "@@ -30,11 +30,11 @@ pub fn test() {\n // CHECK: [[S_b:%[0-9]+]] = bitcast %\"2.std::option::Option<i32>\"** %b to i8*\n // CHECK: call void @llvm.lifetime.start(i{{[0-9 ]+}}, i8* [[S_b]])\n \n-// CHECK: [[S_local5:%[0-9]+]] = bitcast %\"2.std::option::Option<i32>\"* %local5 to i8*\n-// CHECK: call void @llvm.lifetime.start(i{{[0-9 ]+}}, i8* [[S_local5]])\n+// CHECK: [[S__5:%[0-9]+]] = bitcast %\"2.std::option::Option<i32>\"* %_5 to i8*\n+// CHECK: call void @llvm.lifetime.start(i{{[0-9 ]+}}, i8* [[S__5]])\n \n-// CHECK: [[E_local5:%[0-9]+]] = bitcast %\"2.std::option::Option<i32>\"* %local5 to i8*\n-// CHECK: call void @llvm.lifetime.end(i{{[0-9 ]+}}, i8* [[E_local5]])\n+// CHECK: [[E__5:%[0-9]+]] = bitcast %\"2.std::option::Option<i32>\"* %_5 to i8*\n+// CHECK: call void @llvm.lifetime.end(i{{[0-9 ]+}}, i8* [[E__5]])\n \n // CHECK: [[E_b:%[0-9]+]] = bitcast %\"2.std::option::Option<i32>\"** %b to i8*\n // CHECK: call void @llvm.lifetime.end(i{{[0-9 ]+}}, i8* [[E_b]])"}, {"sha": "36738ba1f7d84fdbd42617953ce37718f2fce56b", "filename": "src/test/mir-opt/deaggregator_test.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Ftest%2Fmir-opt%2Fdeaggregator_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Ftest%2Fmir-opt%2Fdeaggregator_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdeaggregator_test.rs?ref=34155a87f6898f29106d4c6095b6e8f77b2290d0", "patch": "@@ -23,19 +23,19 @@ fn main() {}\n // END RUST SOURCE\n // START rustc.node13.Deaggregator.before.mir\n // bb0: {\n-//     local2 = local1;                     // scope 0 at main.rs:8:8: 8:9\n-//     local3 = local2;                     // scope 1 at main.rs:9:14: 9:15\n-//     local0 = Baz { x: local3, y: const F32(0), z: const false }; // scope ...\n+//     _2 = _1;                     // scope 0 at main.rs:8:8: 8:9\n+//     _3 = _2;                     // scope 1 at main.rs:9:14: 9:15\n+//     _0 = Baz { x: _3, y: const F32(0), z: const false }; // scope ...\n //     goto -> bb1;                     // scope 1 at main.rs:8:1: 10:2\n // }\n // END rustc.node13.Deaggregator.before.mir\n // START rustc.node13.Deaggregator.after.mir\n // bb0: {\n-//     local2 = local1;                     // scope 0 at main.rs:8:8: 8:9\n-//     local3 = local2;                     // scope 1 at main.rs:9:14: 9:15\n-//     (local0.0: usize) = local3;        // scope 1 at main.rs:9:5: 9:34\n-//     (local0.1: f32) = const F32(0);  // scope 1 at main.rs:9:5: 9:34\n-//     (local0.2: bool) = const false;  // scope 1 at main.rs:9:5: 9:34\n+//     _2 = _1;                     // scope 0 at main.rs:8:8: 8:9\n+//     _3 = _2;                     // scope 1 at main.rs:9:14: 9:15\n+//     (_0.0: usize) = _3;        // scope 1 at main.rs:9:5: 9:34\n+//     (_0.1: f32) = const F32(0);  // scope 1 at main.rs:9:5: 9:34\n+//     (_0.2: bool) = const false;  // scope 1 at main.rs:9:5: 9:34\n //     goto -> bb1;                     // scope 1 at main.rs:8:1: 10:2\n // }\n // END rustc.node13.Deaggregator.after.mir"}, {"sha": "f5426e410cfe534e196a56c019bf02ea3c9c170c", "filename": "src/test/mir-opt/deaggregator_test_enum.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Ftest%2Fmir-opt%2Fdeaggregator_test_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Ftest%2Fmir-opt%2Fdeaggregator_test_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdeaggregator_test_enum.rs?ref=34155a87f6898f29106d4c6095b6e8f77b2290d0", "patch": "@@ -28,18 +28,18 @@ fn main() {\n // END RUST SOURCE\n // START rustc.node10.Deaggregator.before.mir\n // bb0: {\n-//     local2 = local1;                     // scope 0 at main.rs:7:8: 7:9\n-//     local3 = local2;                     // scope 1 at main.rs:8:19: 8:20\n-//     local0 = Baz::Foo { x: local3 };   // scope 1 at main.rs:8:5: 8:21\n+//     _2 = _1;                     // scope 0 at main.rs:7:8: 7:9\n+//     _3 = _2;                     // scope 1 at main.rs:8:19: 8:20\n+//     _0 = Baz::Foo { x: _3 };   // scope 1 at main.rs:8:5: 8:21\n //     goto -> bb1;                     // scope 1 at main.rs:7:1: 9:2\n // }\n // END rustc.node10.Deaggregator.before.mir\n // START rustc.node10.Deaggregator.after.mir\n // bb0: {\n-//     local2 = local1;                     // scope 0 at main.rs:7:8: 7:9\n-//     local3 = local2;                     // scope 1 at main.rs:8:19: 8:20\n-//     ((local0 as Foo).0: usize) = local3; // scope 1 at main.rs:8:5: 8:21\n-//     discriminant(local0) = 1;         // scope 1 at main.rs:8:5: 8:21\n+//     _2 = _1;                     // scope 0 at main.rs:7:8: 7:9\n+//     _3 = _2;                     // scope 1 at main.rs:8:19: 8:20\n+//     ((_0 as Foo).0: usize) = _3; // scope 1 at main.rs:8:5: 8:21\n+//     discriminant(_0) = 1;         // scope 1 at main.rs:8:5: 8:21\n //     goto -> bb1;                     // scope 1 at main.rs:7:1: 9:2\n // }\n // END rustc.node10.Deaggregator.after.mir"}, {"sha": "aa798231b34a39ed664ab578ad4793e2ff0e1d16", "filename": "src/test/mir-opt/storage_ranges.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Ftest%2Fmir-opt%2Fstorage_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34155a87f6898f29106d4c6095b6e8f77b2290d0/src%2Ftest%2Fmir-opt%2Fstorage_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fstorage_ranges.rs?ref=34155a87f6898f29106d4c6095b6e8f77b2290d0", "patch": "@@ -21,23 +21,23 @@ fn main() {\n // END RUST SOURCE\n // START rustc.node4.TypeckMir.before.mir\n //     bb0: {\n-//         StorageLive(local1);             // scope 0 at storage_ranges.rs:12:9: 12:10\n-//         local1 = const 0i32;             // scope 0 at storage_ranges.rs:12:13: 12:14\n-//         StorageLive(local3);             // scope 1 at storage_ranges.rs:14:13: 14:14\n-//         StorageLive(local4);             // scope 1 at storage_ranges.rs:14:18: 14:25\n-//         StorageLive(local5);             // scope 1 at storage_ranges.rs:14:23: 14:24\n-//         local5 = local1;                 // scope 1 at storage_ranges.rs:14:23: 14:24\n-//         local4 = std::option::Option<i32>::Some(local5,); // scope 1 at storage_ranges.rs:14:18: 14:25\n-//         local3 = &local4;                // scope 1 at storage_ranges.rs:14:17: 14:25\n-//         StorageDead(local5);             // scope 1 at storage_ranges.rs:14:23: 14:24\n-//         local2 = ();                     // scope 2 at storage_ranges.rs:13:5: 15:6\n-//         StorageDead(local4);             // scope 1 at storage_ranges.rs:14:18: 14:25\n-//         StorageDead(local3);             // scope 1 at storage_ranges.rs:14:13: 14:14\n-//         StorageLive(local6);             // scope 1 at storage_ranges.rs:16:9: 16:10\n-//         local6 = const 1i32;             // scope 1 at storage_ranges.rs:16:13: 16:14\n-//         local0 = ();                     // scope 3 at storage_ranges.rs:11:11: 17:2\n-//         StorageDead(local6);             // scope 1 at storage_ranges.rs:16:9: 16:10\n-//         StorageDead(local1);             // scope 0 at storage_ranges.rs:14:9: 14:10\n+//         StorageLive(_1);             // scope 0 at storage_ranges.rs:12:9: 12:10\n+//         _1 = const 0i32;             // scope 0 at storage_ranges.rs:12:13: 12:14\n+//         StorageLive(_3);             // scope 1 at storage_ranges.rs:14:13: 14:14\n+//         StorageLive(_4);             // scope 1 at storage_ranges.rs:14:18: 14:25\n+//         StorageLive(_5);             // scope 1 at storage_ranges.rs:14:23: 14:24\n+//         _5 = _1;                 // scope 1 at storage_ranges.rs:14:23: 14:24\n+//         _4 = std::option::Option<i32>::Some(_5,); // scope 1 at storage_ranges.rs:14:18: 14:25\n+//         _3 = &_4;                // scope 1 at storage_ranges.rs:14:17: 14:25\n+//         StorageDead(_5);             // scope 1 at storage_ranges.rs:14:23: 14:24\n+//         _2 = ();                     // scope 2 at storage_ranges.rs:13:5: 15:6\n+//         StorageDead(_4);             // scope 1 at storage_ranges.rs:14:18: 14:25\n+//         StorageDead(_3);             // scope 1 at storage_ranges.rs:14:13: 14:14\n+//         StorageLive(_6);             // scope 1 at storage_ranges.rs:16:9: 16:10\n+//         _6 = const 1i32;             // scope 1 at storage_ranges.rs:16:13: 16:14\n+//         _0 = ();                     // scope 3 at storage_ranges.rs:11:11: 17:2\n+//         StorageDead(_6);             // scope 1 at storage_ranges.rs:16:9: 16:10\n+//         StorageDead(_1);             // scope 0 at storage_ranges.rs:14:9: 14:10\n //         goto -> bb1;                     // scope 0 at storage_ranges.rs:11:1: 17:2\n //     }\n //"}]}