{"sha": "c8599191e874ffced8035f4e899505a7e2dafbfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NTk5MTkxZTg3NGZmY2VkODAzNWY0ZTg5OTUwNWE3ZTJkYWZiZmE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-25T13:11:59Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-03T13:31:09Z"}, "message": "Remove rustc_metadata_utils, which contains only one function", "tree": {"sha": "04f991e37455bf7704a5538e93e8ba6ffd38688f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04f991e37455bf7704a5538e93e8ba6ffd38688f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8599191e874ffced8035f4e899505a7e2dafbfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8599191e874ffced8035f4e899505a7e2dafbfa", "html_url": "https://github.com/rust-lang/rust/commit/c8599191e874ffced8035f4e899505a7e2dafbfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8599191e874ffced8035f4e899505a7e2dafbfa/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d46246b14adb519a80cf00d36e72a49a26484eee", "url": "https://api.github.com/repos/rust-lang/rust/commits/d46246b14adb519a80cf00d36e72a49a26484eee", "html_url": "https://github.com/rust-lang/rust/commit/d46246b14adb519a80cf00d36e72a49a26484eee"}], "stats": {"total": 111, "additions": 35, "deletions": 76}, "files": [{"sha": "b4317864502cee0fd48979f54fb6f057b47c0bcf", "filename": "src/Cargo.lock", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=c8599191e874ffced8035f4e899505a7e2dafbfa", "patch": "@@ -2144,7 +2144,7 @@ dependencies = [\n  \"rustc_allocator 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_incremental 0.0.0\",\n- \"rustc_metadata_utils 0.0.0\",\n+ \"rustc_metadata 0.0.0\",\n  \"rustc_mir 0.0.0\",\n  \"rustc_target 0.0.0\",\n  \"serialize 0.0.0\",\n@@ -2291,23 +2291,13 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n- \"rustc_metadata_utils 0.0.0\",\n  \"rustc_target 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_ext 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]\n \n-[[package]]\n-name = \"rustc_metadata_utils\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"rustc 0.0.0\",\n- \"syntax 0.0.0\",\n- \"syntax_pos 0.0.0\",\n-]\n-\n [[package]]\n name = \"rustc_mir\"\n version = \"0.0.0\""}, {"sha": "4c57e97841409a0d8a344eb797b823ce87177510", "filename": "src/librustc_codegen_utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_codegen_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_codegen_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2FCargo.toml?ref=c8599191e874ffced8035f4e899505a7e2dafbfa", "patch": "@@ -20,6 +20,6 @@ rustc = { path = \"../librustc\" }\n rustc_allocator = { path = \"../librustc_allocator\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_metadata = { path = \"../librustc_metadata\" }\n rustc_mir = { path = \"../librustc_mir\" }\n rustc_incremental = { path = \"../librustc_incremental\" }\n-rustc_metadata_utils = { path = \"../librustc_metadata_utils\" }"}, {"sha": "f0ce1e9b0efab2021377b8f52f57b2e18f724b47", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=c8599191e874ffced8035f4e899505a7e2dafbfa", "patch": "@@ -35,12 +35,12 @@ extern crate serialize;\n extern crate rustc;\n extern crate rustc_allocator;\n extern crate rustc_target;\n+extern crate rustc_metadata;\n extern crate rustc_mir;\n extern crate rustc_incremental;\n extern crate syntax;\n extern crate syntax_pos;\n #[macro_use] extern crate rustc_data_structures;\n-extern crate rustc_metadata_utils;\n \n use std::path::PathBuf;\n "}, {"sha": "b11aa687326f2536b846d10f79270bf009ab8467", "filename": "src/librustc_codegen_utils/link.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_codegen_utils%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_codegen_utils%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flink.rs?ref=c8599191e874ffced8035f4e899505a7e2dafbfa", "patch": "@@ -13,7 +13,6 @@ use rustc::session::Session;\n use std::path::{Path, PathBuf};\n use syntax::{ast, attr};\n use syntax_pos::Span;\n-use rustc_metadata_utils::validate_crate_name;\n \n pub fn out_filename(sess: &Session,\n                 crate_type: config::CrateType,\n@@ -52,7 +51,7 @@ pub fn find_crate_name(sess: Option<&Session>,\n                        attrs: &[ast::Attribute],\n                        input: &Input) -> String {\n     let validate = |s: String, span: Option<Span>| {\n-        validate_crate_name(sess, &s, span);\n+        ::rustc_metadata::validate_crate_name(sess, &s, span);\n         s\n     };\n "}, {"sha": "338824d5efe4caa862256121941b11a7e38bdbce", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=c8599191e874ffced8035f4e899505a7e2dafbfa", "patch": "@@ -20,4 +20,3 @@ serialize = { path = \"../libserialize\" }\n syntax = { path = \"../libsyntax\" }\n syntax_ext = { path = \"../libsyntax_ext\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n-rustc_metadata_utils = { path = \"../librustc_metadata_utils\" }"}, {"sha": "7733ab2e246d1135fa3fac808b73ce98c0375852", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=c8599191e874ffced8035f4e899505a7e2dafbfa", "patch": "@@ -30,8 +30,6 @@ use rustc::util::common::record_time;\n use rustc::util::nodemap::FxHashSet;\n use rustc::hir::map::Definitions;\n \n-use rustc_metadata_utils::validate_crate_name;\n-\n use std::ops::Deref;\n use std::path::PathBuf;\n use std::{cmp, fs};\n@@ -1106,7 +1104,7 @@ impl<'a> CrateLoader<'a> {\n                        item.ident, orig_name);\n                 let orig_name = match orig_name {\n                     Some(orig_name) => {\n-                        validate_crate_name(Some(self.sess), &orig_name.as_str(),\n+                        ::validate_crate_name(Some(self.sess), &orig_name.as_str(),\n                                             Some(item.span));\n                         orig_name\n                     }"}, {"sha": "0cc0707a3a51f263bcdf0f5ca347ed71c41f56af", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8599191e874ffced8035f4e899505a7e2dafbfa/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=c8599191e874ffced8035f4e899505a7e2dafbfa", "patch": "@@ -38,7 +38,6 @@ extern crate serialize as rustc_serialize; // used by deriving\n extern crate rustc_errors as errors;\n extern crate syntax_ext;\n extern crate proc_macro;\n-extern crate rustc_metadata_utils;\n \n #[macro_use]\n extern crate rustc;\n@@ -64,4 +63,34 @@ pub mod cstore;\n pub mod dynamic_lib;\n pub mod locator;\n \n+pub fn validate_crate_name(\n+    sess: Option<&rustc::session::Session>,\n+    s: &str,\n+    sp: Option<syntax_pos::Span>\n+) {\n+    let mut err_count = 0;\n+    {\n+        let mut say = |s: &str| {\n+            match (sp, sess) {\n+                (_, None) => bug!(\"{}\", s),\n+                (Some(sp), Some(sess)) => sess.span_err(sp, s),\n+                (None, Some(sess)) => sess.err(s),\n+            }\n+            err_count += 1;\n+        };\n+        if s.is_empty() {\n+            say(\"crate name must not be empty\");\n+        }\n+        for c in s.chars() {\n+            if c.is_alphanumeric() { continue }\n+            if c == '_'  { continue }\n+            say(&format!(\"invalid character `{}` in crate name: `{}`\", c, s));\n+        }\n+    }\n+\n+    if err_count > 0 {\n+        sess.unwrap().abort_if_errors();\n+    }\n+}\n+\n __build_diagnostic_array! { librustc_metadata, DIAGNOSTICS }"}, {"sha": "4a5e20376bfb546e23e52091395abd5135cb0409", "filename": "src/librustc_metadata_utils/Cargo.toml", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d46246b14adb519a80cf00d36e72a49a26484eee/src%2Flibrustc_metadata_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d46246b14adb519a80cf00d36e72a49a26484eee/src%2Flibrustc_metadata_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata_utils%2FCargo.toml?ref=d46246b14adb519a80cf00d36e72a49a26484eee", "patch": "@@ -1,14 +0,0 @@\n-[package]\n-authors = [\"The Rust Project Developers\"]\n-name = \"rustc_metadata_utils\"\n-version = \"0.0.0\"\n-\n-[lib]\n-name = \"rustc_metadata_utils\"\n-path = \"lib.rs\"\n-crate-type = [\"dylib\"]\n-\n-[dependencies]\n-rustc = { path = \"../librustc\" }\n-syntax = { path = \"../libsyntax\" }\n-syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "a1e5150390ac1bfd3c36dda01427fd9054947b9d", "filename": "src/librustc_metadata_utils/lib.rs", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/d46246b14adb519a80cf00d36e72a49a26484eee/src%2Flibrustc_metadata_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d46246b14adb519a80cf00d36e72a49a26484eee/src%2Flibrustc_metadata_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata_utils%2Flib.rs?ref=d46246b14adb519a80cf00d36e72a49a26484eee", "patch": "@@ -1,42 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[macro_use]\n-extern crate rustc;\n-extern crate syntax_pos;\n-\n-use rustc::session::Session;\n-use syntax_pos::Span;\n-\n-pub fn validate_crate_name(sess: Option<&Session>, s: &str, sp: Option<Span>) {\n-    let mut err_count = 0;\n-    {\n-        let mut say = |s: &str| {\n-            match (sp, sess) {\n-                (_, None) => bug!(\"{}\", s),\n-                (Some(sp), Some(sess)) => sess.span_err(sp, s),\n-                (None, Some(sess)) => sess.err(s),\n-            }\n-            err_count += 1;\n-        };\n-        if s.is_empty() {\n-            say(\"crate name must not be empty\");\n-        }\n-        for c in s.chars() {\n-            if c.is_alphanumeric() { continue }\n-            if c == '_'  { continue }\n-            say(&format!(\"invalid character `{}` in crate name: `{}`\", c, s));\n-        }\n-    }\n-\n-    if err_count > 0 {\n-        sess.unwrap().abort_if_errors();\n-    }\n-}"}]}