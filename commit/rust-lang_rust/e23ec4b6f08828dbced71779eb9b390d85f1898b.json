{"sha": "e23ec4b6f08828dbced71779eb9b390d85f1898b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyM2VjNGI2ZjA4ODI4ZGJjZWQ3MTc3OWViOWIzOTBkODVmMTg5OGI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-05-10T16:35:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-10T16:35:27Z"}, "message": "Rollup merge of #50565 - nnethercote:try_mark_green, r=michaelwoerister\n\nUse SmallVec for DepNodeIndex within dep_graph.\n\nThis avoids a decent number of allocations, enough to speed up\nincremental runs of many rustc-benchmarks, the best by 2%.\n\nHere are the rustc-perf benchmarks that showed an improvement of at least 1% on one run:\n```\nunused-warnings-check\n\tavg: -1.7%\tmin: -2.4%\tmax: 0.0%\nunused-warnings-opt\n\tavg: -1.4%\tmin: -2.0%\tmax: 0.0%\nunused-warnings\n\tavg: -1.4%\tmin: -2.0%\tmax: -0.0%\ntokio-webpush-simple-check\n\tavg: -1.0%\tmin: -1.7%\tmax: 0.0%\nfutures-opt\n\tavg: -0.9%\tmin: -1.6%\tmax: 0.0%\nencoding\n\tavg: -1.2%\tmin: -1.6%\tmax: -0.6%\nencoding-check\n\tavg: -0.9%\tmin: -1.6%\tmax: 0.0%\nencoding-opt\n\tavg: -0.8%\tmin: -1.6%\tmax: -0.1%\nfutures\n\tavg: -0.9%\tmin: -1.5%\tmax: 0.0%\nfutures-check\n\tavg: -0.9%\tmin: -1.5%\tmax: 0.1%\nregression-31157-check\n\tavg: -0.9%\tmin: -1.5%\tmax: 0.0%\nregex\n\tavg: -0.6%\tmin: -1.4%\tmax: 0.0%\nregression-31157-opt\n\tavg: -0.5%\tmin: -1.4%\tmax: 0.1%\nregression-31157\n\tavg: -0.7%\tmin: -1.4%\tmax: 0.2%\nregex-opt\n\tavg: -0.6%\tmin: -1.4%\tmax: 0.1%\nhyper-check\n\tavg: -0.8%\tmin: -1.4%\tmax: -0.1%\nregex-check\n\tavg: -1.0%\tmin: -1.4%\tmax: 0.0%\nhyper-opt\n\tavg: -0.7%\tmin: -1.4%\tmax: -0.1%\nhyper\n\tavg: -0.7%\tmin: -1.3%\tmax: 0.1%\npiston-image-opt\n\tavg: -0.4%\tmin: -1.3%\tmax: 0.0%\ntokio-webpush-simple-opt\n\tavg: -0.3%\tmin: -1.3%\tmax: 0.0%\npiston-image-check\n\tavg: -0.5%\tmin: -1.3%\tmax: -0.0%\nsyn-opt\n\tavg: -0.5%\tmin: -1.3%\tmax: 0.0%\nclap-rs-check\n\tavg: -0.3%\tmin: -1.3%\tmax: 0.2%\npiston-image\n\tavg: -0.5%\tmin: -1.2%\tmax: 0.1%\nsyn\n\tavg: -0.5%\tmin: -1.2%\tmax: 0.1%\nsyn-check\n\tavg: -0.6%\tmin: -1.2%\tmax: -0.1%\nissue-46449-opt\n\tavg: -0.4%\tmin: -1.2%\tmax: -0.1%\nparser-check\n\tavg: -0.7%\tmin: -1.2%\tmax: 0.1%\nissue-46449\n\tavg: -0.5%\tmin: -1.2%\tmax: -0.0%\n```", "tree": {"sha": "d2eb7ccfac60c573b57c161453a974642b7aa2c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2eb7ccfac60c573b57c161453a974642b7aa2c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e23ec4b6f08828dbced71779eb9b390d85f1898b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa9HTPCRBK7hj4Ov3rIwAAdHIIADWhlOl7QkffqLBn6S0kuq3z\ne6d89sKskDI/VbYUnWVjBmvtkWv8tlXxzPyVMYNQE3Wwd4ORT4YgiDmmG6ClpSUY\nxq1kFAbCZSCT1T12ts5V2Vfl9ga6PfFAp/JeFkoxiUb5MJalF1HU42Eg7w0ce5WS\ncA8NMvtGhcDiLzTWYQzsv+LNuE8TJQhwS50MOnNj/2WGMpNBXYw+S1/MP0EVKeUT\n9L6QW06qDu25KCYQck46Xec/S3zbj0ZfdJxRm70c1UDCA7Ssg2N4chXBwgt6i0zg\n8sR674xjwjmROqgSpPKEtHQtMo8ifnu0np18YWUZN+Kzdl6qdoMsAAa4Aru/MCY=\n=Ttma\n-----END PGP SIGNATURE-----\n", "payload": "tree d2eb7ccfac60c573b57c161453a974642b7aa2c8\nparent a77ba86424cae163edf36415a2933c6a8b703ee3\nparent 78262e700dc6a7b57e376742f344e80115d2d3f2\nauthor Alex Crichton <alex@alexcrichton.com> 1525970127 -0500\ncommitter GitHub <noreply@github.com> 1525970127 -0500\n\nRollup merge of #50565 - nnethercote:try_mark_green, r=michaelwoerister\n\nUse SmallVec for DepNodeIndex within dep_graph.\n\nThis avoids a decent number of allocations, enough to speed up\nincremental runs of many rustc-benchmarks, the best by 2%.\n\nHere are the rustc-perf benchmarks that showed an improvement of at least 1% on one run:\n```\nunused-warnings-check\n\tavg: -1.7%\tmin: -2.4%\tmax: 0.0%\nunused-warnings-opt\n\tavg: -1.4%\tmin: -2.0%\tmax: 0.0%\nunused-warnings\n\tavg: -1.4%\tmin: -2.0%\tmax: -0.0%\ntokio-webpush-simple-check\n\tavg: -1.0%\tmin: -1.7%\tmax: 0.0%\nfutures-opt\n\tavg: -0.9%\tmin: -1.6%\tmax: 0.0%\nencoding\n\tavg: -1.2%\tmin: -1.6%\tmax: -0.6%\nencoding-check\n\tavg: -0.9%\tmin: -1.6%\tmax: 0.0%\nencoding-opt\n\tavg: -0.8%\tmin: -1.6%\tmax: -0.1%\nfutures\n\tavg: -0.9%\tmin: -1.5%\tmax: 0.0%\nfutures-check\n\tavg: -0.9%\tmin: -1.5%\tmax: 0.1%\nregression-31157-check\n\tavg: -0.9%\tmin: -1.5%\tmax: 0.0%\nregex\n\tavg: -0.6%\tmin: -1.4%\tmax: 0.0%\nregression-31157-opt\n\tavg: -0.5%\tmin: -1.4%\tmax: 0.1%\nregression-31157\n\tavg: -0.7%\tmin: -1.4%\tmax: 0.2%\nregex-opt\n\tavg: -0.6%\tmin: -1.4%\tmax: 0.1%\nhyper-check\n\tavg: -0.8%\tmin: -1.4%\tmax: -0.1%\nregex-check\n\tavg: -1.0%\tmin: -1.4%\tmax: 0.0%\nhyper-opt\n\tavg: -0.7%\tmin: -1.4%\tmax: -0.1%\nhyper\n\tavg: -0.7%\tmin: -1.3%\tmax: 0.1%\npiston-image-opt\n\tavg: -0.4%\tmin: -1.3%\tmax: 0.0%\ntokio-webpush-simple-opt\n\tavg: -0.3%\tmin: -1.3%\tmax: 0.0%\npiston-image-check\n\tavg: -0.5%\tmin: -1.3%\tmax: -0.0%\nsyn-opt\n\tavg: -0.5%\tmin: -1.3%\tmax: 0.0%\nclap-rs-check\n\tavg: -0.3%\tmin: -1.3%\tmax: 0.2%\npiston-image\n\tavg: -0.5%\tmin: -1.2%\tmax: 0.1%\nsyn\n\tavg: -0.5%\tmin: -1.2%\tmax: 0.1%\nsyn-check\n\tavg: -0.6%\tmin: -1.2%\tmax: -0.1%\nissue-46449-opt\n\tavg: -0.4%\tmin: -1.2%\tmax: -0.1%\nparser-check\n\tavg: -0.7%\tmin: -1.2%\tmax: 0.1%\nissue-46449\n\tavg: -0.5%\tmin: -1.2%\tmax: -0.0%\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e23ec4b6f08828dbced71779eb9b390d85f1898b", "html_url": "https://github.com/rust-lang/rust/commit/e23ec4b6f08828dbced71779eb9b390d85f1898b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e23ec4b6f08828dbced71779eb9b390d85f1898b/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a77ba86424cae163edf36415a2933c6a8b703ee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a77ba86424cae163edf36415a2933c6a8b703ee3", "html_url": "https://github.com/rust-lang/rust/commit/a77ba86424cae163edf36415a2933c6a8b703ee3"}, {"sha": "78262e700dc6a7b57e376742f344e80115d2d3f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/78262e700dc6a7b57e376742f344e80115d2d3f2", "html_url": "https://github.com/rust-lang/rust/commit/78262e700dc6a7b57e376742f344e80115d2d3f2"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "4efb2b61e2b082e85839626b0d5c71bd392a7e87", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e23ec4b6f08828dbced71779eb9b390d85f1898b/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e23ec4b6f08828dbced71779eb9b390d85f1898b/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=e23ec4b6f08828dbced71779eb9b390d85f1898b", "patch": "@@ -12,6 +12,7 @@ use errors::DiagnosticBuilder;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n+use rustc_data_structures::small_vec::SmallVec;\n use rustc_data_structures::sync::{Lrc, RwLock, ReadGuard, Lock};\n use std::env;\n use std::hash::Hash;\n@@ -132,7 +133,7 @@ impl DepGraph {\n         let mut edges = Vec::new();\n         for (index, edge_targets) in current_dep_graph.edges.iter_enumerated() {\n             let from = current_dep_graph.nodes[index];\n-            for &edge_target in edge_targets {\n+            for &edge_target in edge_targets.iter() {\n                 let to = current_dep_graph.nodes[edge_target];\n                 edges.push((from, to));\n             }\n@@ -210,7 +211,7 @@ impl DepGraph {\n         self.with_task_impl(key, cx, arg, false, task,\n             |key| OpenTask::Regular(Lock::new(RegularOpenTask {\n                 node: key,\n-                reads: Vec::new(),\n+                reads: SmallVec::new(),\n                 read_set: FxHashSet(),\n             })),\n             |data, key, task| data.borrow_mut().complete_task(key, task))\n@@ -231,7 +232,7 @@ impl DepGraph {\n \n         self.with_task_impl(key, cx, input, true, identity_fn,\n             |_| OpenTask::Ignore,\n-            |data, key, _| data.borrow_mut().alloc_node(key, Vec::new()))\n+            |data, key, _| data.borrow_mut().alloc_node(key, SmallVec::new()))\n     }\n \n     fn with_task_impl<'gcx, C, A, R>(\n@@ -354,7 +355,7 @@ impl DepGraph {\n         if let Some(ref data) = self.data {\n             let (result, open_task) = ty::tls::with_context(|icx| {\n                 let task = OpenTask::Anon(Lock::new(AnonOpenTask {\n-                    reads: Vec::new(),\n+                    reads: SmallVec::new(),\n                     read_set: FxHashSet(),\n                 }));\n \n@@ -614,7 +615,7 @@ impl DepGraph {\n \n         debug_assert!(data.colors.borrow().get(prev_dep_node_index).is_none());\n \n-        let mut current_deps = Vec::new();\n+        let mut current_deps = SmallVec::new();\n \n         for &dep_dep_node_index in prev_deps {\n             let dep_dep_node_color = data.colors.borrow().get(dep_dep_node_index);\n@@ -911,7 +912,7 @@ pub enum WorkProductFileKind {\n \n pub(super) struct CurrentDepGraph {\n     nodes: IndexVec<DepNodeIndex, DepNode>,\n-    edges: IndexVec<DepNodeIndex, Vec<DepNodeIndex>>,\n+    edges: IndexVec<DepNodeIndex, SmallVec<[DepNodeIndex; 8]>>,\n     node_to_node_index: FxHashMap<DepNode, DepNodeIndex>,\n     forbidden_edge: Option<EdgeFilter>,\n \n@@ -1049,7 +1050,7 @@ impl CurrentDepGraph {\n         } = task {\n             debug_assert_eq!(node, key);\n             let krate_idx = self.node_to_node_index[&DepNode::new_no_params(DepKind::Krate)];\n-            self.alloc_node(node, vec![krate_idx])\n+            self.alloc_node(node, SmallVec::one(krate_idx))\n         } else {\n             bug!(\"complete_eval_always_task() - Expected eval always task to be popped\");\n         }\n@@ -1095,7 +1096,7 @@ impl CurrentDepGraph {\n \n     fn alloc_node(&mut self,\n                   dep_node: DepNode,\n-                  edges: Vec<DepNodeIndex>)\n+                  edges: SmallVec<[DepNodeIndex; 8]>)\n                   -> DepNodeIndex {\n         debug_assert_eq!(self.edges.len(), self.nodes.len());\n         debug_assert_eq!(self.node_to_node_index.len(), self.nodes.len());\n@@ -1110,12 +1111,12 @@ impl CurrentDepGraph {\n \n pub struct RegularOpenTask {\n     node: DepNode,\n-    reads: Vec<DepNodeIndex>,\n+    reads: SmallVec<[DepNodeIndex; 8]>,\n     read_set: FxHashSet<DepNodeIndex>,\n }\n \n pub struct AnonOpenTask {\n-    reads: Vec<DepNodeIndex>,\n+    reads: SmallVec<[DepNodeIndex; 8]>,\n     read_set: FxHashSet<DepNodeIndex>,\n }\n "}]}