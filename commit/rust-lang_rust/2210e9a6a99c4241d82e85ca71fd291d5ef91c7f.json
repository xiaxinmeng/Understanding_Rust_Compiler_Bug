{"sha": "2210e9a6a99c4241d82e85ca71fd291d5ef91c7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMTBlOWE2YTk5YzQyNDFkODJlODVjYTcxZmQyOTFkNWVmOTFjN2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-22T11:18:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-22T11:18:11Z"}, "message": "Auto merge of #59035 - estebank:closure-instacall, r=davidtwco\n\nWhen encountering `||{}()`, suggest the likely intended `(||{})()`\n\nFix #55851.", "tree": {"sha": "d1a301a5517ae79083d40ef1300afe285ca1f641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1a301a5517ae79083d40ef1300afe285ca1f641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f", "html_url": "https://github.com/rust-lang/rust/commit/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f166314b88318617e24bb7aadeb86d6662661a0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f166314b88318617e24bb7aadeb86d6662661a0a", "html_url": "https://github.com/rust-lang/rust/commit/f166314b88318617e24bb7aadeb86d6662661a0a"}, {"sha": "9aa89b25232b79b93dc122e86b8071fb14fc4e04", "url": "https://api.github.com/repos/rust-lang/rust/commits/9aa89b25232b79b93dc122e86b8071fb14fc4e04", "html_url": "https://github.com/rust-lang/rust/commit/9aa89b25232b79b93dc122e86b8071fb14fc4e04"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "15ae39600f6b4ea40bd99be809263ba7752a46c5", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=2210e9a6a99c4241d82e85ca71fd291d5ef91c7f", "patch": "@@ -2,7 +2,7 @@ use super::autoderef::Autoderef;\n use super::method::MethodCallee;\n use super::{Expectation, FnCtxt, Needs, TupleArgumentsFlag};\n \n-use errors::Applicability;\n+use errors::{Applicability, DiagnosticBuilder};\n use hir::def::Def;\n use hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n@@ -232,6 +232,32 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         None\n     }\n \n+    /// Give appropriate suggestion when encountering `||{/* not callable */}()`, where the\n+    /// likely intention is to call the closure, suggest `(||{})()`. (#55851)\n+    fn identify_bad_closure_def_and_call(\n+        &self,\n+        err: &mut DiagnosticBuilder<'a>,\n+        hir_id: hir::HirId,\n+        callee_node: &hir::ExprKind,\n+        callee_span: Span,\n+    ) {\n+        let hir_id = self.tcx.hir().get_parent_node_by_hir_id(hir_id);\n+        let parent_node = self.tcx.hir().get_by_hir_id(hir_id);\n+        if let (\n+            hir::Node::Expr(hir::Expr { node: hir::ExprKind::Closure(_, _, _, sp, ..), .. }),\n+            hir::ExprKind::Block(..),\n+        ) = (parent_node, callee_node) {\n+            let start = sp.shrink_to_lo();\n+            let end = self.tcx.sess.source_map().next_point(callee_span);\n+            err.multipart_suggestion(\n+                \"if you meant to create this closure and immediately call it, surround the \\\n+                closure with parenthesis\",\n+                vec![(start, \"(\".to_string()), (end, \")\".to_string())],\n+                Applicability::MaybeIncorrect,\n+            );\n+        }\n+    }\n+\n     fn confirm_builtin_call(\n         &self,\n         call_expr: &hir::Expr,\n@@ -268,6 +294,13 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         }\n                     );\n \n+                    self.identify_bad_closure_def_and_call(\n+                        &mut err,\n+                        call_expr.hir_id,\n+                        &callee.node,\n+                        callee.span,\n+                    );\n+\n                     if let Some(ref path) = unit_variant {\n                         err.span_suggestion(\n                             call_expr.span,"}, {"sha": "355708c08ec2fa382311710534b95f7c0137ac12", "filename": "src/test/ui/suggestions/suggest-on-bare-closure-call.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.rs?ref=2210e9a6a99c4241d82e85ca71fd291d5ef91c7f", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let _ = ||{}();\n+    //~^ ERROR expected function, found `()`\n+}"}, {"sha": "17001e3974c6d88ddf7c686beff153b8d0421b5f", "filename": "src/test/ui/suggestions/suggest-on-bare-closure-call.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2210e9a6a99c4241d82e85ca71fd291d5ef91c7f/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-on-bare-closure-call.stderr?ref=2210e9a6a99c4241d82e85ca71fd291d5ef91c7f", "patch": "@@ -0,0 +1,15 @@\n+error[E0618]: expected function, found `()`\n+  --> $DIR/suggest-on-bare-closure-call.rs:2:15\n+   |\n+LL |     let _ = ||{}();\n+   |               ^^--\n+   |               |\n+   |               call expression requires function\n+help: if you meant to create this closure and immediately call it, surround the closure with parenthesis\n+   |\n+LL |     let _ = (||{})();\n+   |             ^    ^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0618`."}]}