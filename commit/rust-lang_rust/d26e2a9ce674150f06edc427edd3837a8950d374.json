{"sha": "d26e2a9ce674150f06edc427edd3837a8950d374", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNmUyYTljZTY3NDE1MGYwNmVkYzQyN2VkZDM4MzdhODk1MGQzNzQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-26T17:53:01Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-26T23:30:38Z"}, "message": "Switch a use of `unchecked` to `unsafe`.", "tree": {"sha": "fb5e5ae58602c979d89ff03c2b277ff2a8d24d54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb5e5ae58602c979d89ff03c2b277ff2a8d24d54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d26e2a9ce674150f06edc427edd3837a8950d374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d26e2a9ce674150f06edc427edd3837a8950d374", "html_url": "https://github.com/rust-lang/rust/commit/d26e2a9ce674150f06edc427edd3837a8950d374", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d26e2a9ce674150f06edc427edd3837a8950d374/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbf362809b89a97512c049ba7e4091ff3d404c58", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbf362809b89a97512c049ba7e4091ff3d404c58", "html_url": "https://github.com/rust-lang/rust/commit/fbf362809b89a97512c049ba7e4091ff3d404c58"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5d22379bfe92a9a9fbb274e7f63fda8534a4cb92", "filename": "doc/rust.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26e2a9ce674150f06edc427edd3837a8950d374/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/d26e2a9ce674150f06edc427edd3837a8950d374/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=d26e2a9ce674150f06edc427edd3837a8950d374", "patch": "@@ -1001,7 +1001,7 @@ pure fn pure_length<T>(ls: List<T>) -> uint {\n Despite its name, `pure_foldl` is a `fn`, not a `pure fn`, because there is no\n way in Rust to specify that the higher-order function argument `f` is a pure\n function. So, to use `foldl` in a pure list length function that a pure function\n-could then use, we must use an `unchecked` block wrapped around the call to\n+could then use, we must use an `unsafe` block wrapped around the call to\n `pure_foldl` in the definition of `pure_length`.\n \n #### Generic functions"}]}