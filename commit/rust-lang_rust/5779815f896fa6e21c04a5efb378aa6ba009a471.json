{"sha": "5779815f896fa6e21c04a5efb378aa6ba009a471", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3Nzk4MTVmODk2ZmE2ZTIxYzA0YTVlZmIzNzhhYTZiYTAwOWE0NzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-07T01:20:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-07T01:20:11Z"}, "message": "Auto merge of #74194 - mbrubeck:slice-eq, r=sfackler\n\nAdd PartialEq impls for Vec <-> slice\n\nThis is a follow-up to #71660 and rust-lang/rfcs#2917 to add two more missing vec/slice PartialEq impls:\n\n```\nimpl<A, B> PartialEq<[B]> for Vec<A> where A: PartialEq<B> { .. }\nimpl<A, B> PartialEq<Vec<B>> for [A] where A: PartialEq<B> { .. }\n```\n\nSince this is insta-stable, it should go through the `@rust-lang/libs` FCP process.  Note that I used version 1.47.0 for the `stable` attribute because I assume this will not merge before the 1.46.0 branch is cut next week.", "tree": {"sha": "2d6407177968a53ea460e74e83e3b99a49392bff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d6407177968a53ea460e74e83e3b99a49392bff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5779815f896fa6e21c04a5efb378aa6ba009a471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5779815f896fa6e21c04a5efb378aa6ba009a471", "html_url": "https://github.com/rust-lang/rust/commit/5779815f896fa6e21c04a5efb378aa6ba009a471", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5779815f896fa6e21c04a5efb378aa6ba009a471/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59dafb876e125c49fca93820c5ef22da3fcb8644", "url": "https://api.github.com/repos/rust-lang/rust/commits/59dafb876e125c49fca93820c5ef22da3fcb8644", "html_url": "https://github.com/rust-lang/rust/commit/59dafb876e125c49fca93820c5ef22da3fcb8644"}, {"sha": "b4b383981abac7ca8aa180c7ae3e28876615b887", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4b383981abac7ca8aa180c7ae3e28876615b887", "html_url": "https://github.com/rust-lang/rust/commit/b4b383981abac7ca8aa180c7ae3e28876615b887"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "e8e52299d0b70c562484597d9cf79dc38fee8c79", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5779815f896fa6e21c04a5efb378aa6ba009a471/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5779815f896fa6e21c04a5efb378aa6ba009a471/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=5779815f896fa6e21c04a5efb378aa6ba009a471", "patch": "@@ -2591,6 +2591,8 @@ __impl_slice_eq1! { [] Vec<A>, &[B], #[stable(feature = \"rust1\", since = \"1.0.0\"\n __impl_slice_eq1! { [] Vec<A>, &mut [B], #[stable(feature = \"rust1\", since = \"1.0.0\")] }\n __impl_slice_eq1! { [] &[A], Vec<B>, #[stable(feature = \"partialeq_vec_for_ref_slice\", since = \"1.46.0\")] }\n __impl_slice_eq1! { [] &mut [A], Vec<B>, #[stable(feature = \"partialeq_vec_for_ref_slice\", since = \"1.46.0\")] }\n+__impl_slice_eq1! { [] Vec<A>, [B], #[stable(feature = \"partialeq_vec_for_slice\", since = \"1.48.0\")]  }\n+__impl_slice_eq1! { [] [A], Vec<B>, #[stable(feature = \"partialeq_vec_for_slice\", since = \"1.48.0\")]  }\n __impl_slice_eq1! { [] Cow<'_, [A]>, Vec<B> where A: Clone, #[stable(feature = \"rust1\", since = \"1.0.0\")] }\n __impl_slice_eq1! { [] Cow<'_, [A]>, &[B] where A: Clone, #[stable(feature = \"rust1\", since = \"1.0.0\")] }\n __impl_slice_eq1! { [] Cow<'_, [A]>, &mut [B] where A: Clone, #[stable(feature = \"rust1\", since = \"1.0.0\")] }"}, {"sha": "771a293b8e5d43848ef1c0dd2b61ff5cacf9623e", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5779815f896fa6e21c04a5efb378aa6ba009a471/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5779815f896fa6e21c04a5efb378aa6ba009a471/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=5779815f896fa6e21c04a5efb378aa6ba009a471", "patch": "@@ -1799,7 +1799,7 @@ fn partialeq_vec_and_prim() {\n }\n \n macro_rules! assert_partial_eq_valid {\n-    ($a2:ident, $a3:ident; $b2:ident, $b3: ident) => {\n+    ($a2:expr, $a3:expr; $b2:expr, $b3: expr) => {\n         assert!($a2 == $b2);\n         assert!($a2 != $b3);\n         assert!($a3 != $b2);\n@@ -1831,6 +1831,7 @@ fn partialeq_vec_full() {\n     assert_partial_eq_valid!(slicemut2,slicemut3; vec2,vec3);\n     assert_partial_eq_valid!(vec2,vec3; array2,array3);\n     assert_partial_eq_valid!(vec2,vec3; arrayref2,arrayref3);\n+    assert_partial_eq_valid!(vec2,vec3; arrayref2[..],arrayref3[..]);\n }\n \n #[test]"}]}