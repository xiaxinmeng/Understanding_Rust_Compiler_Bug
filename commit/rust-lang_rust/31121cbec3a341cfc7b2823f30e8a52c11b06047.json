{"sha": "31121cbec3a341cfc7b2823f30e8a52c11b06047", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMTIxY2JlYzNhMzQxY2ZjN2IyODIzZjMwZThhNTJjMTFiMDYwNDc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-16T07:01:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-16T07:01:02Z"}, "message": "Rollup merge of #73421 - janikrabe:master, r=joshtriplett\n\nClarify effect of orphan rule changes on From/Into\n\nUpdated documentation for `std::convert` and `std::convert::From` to reflect changes to orphan rule in Rust 1.41. It should no longer be necessary to implement `Into` directly, unless targeting an older version.\n\nr? @steveklabnik", "tree": {"sha": "672736dc2367fb80253bec7a71e5063a347c830a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/672736dc2367fb80253bec7a71e5063a347c830a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31121cbec3a341cfc7b2823f30e8a52c11b06047", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfD/suCRBK7hj4Ov3rIwAAdHIIADChfJU4q1IO4SOcXS+KrFPi\nK7Fa9wzhQeU+tR02rk5n5ELPgz+OyhYtOJF9fe/kEHrQfQhc4oBgANc0jeVT4Q2a\ndgrNNUjc/ZVBlAWbxnHwqEKOlNtDCpPlk2lvrHtfE0EIp47COJY0Qi6Gn+uBm4+k\noLGB3IOTIyHOqnNv0ImO7siIMf13tWxi0IxKgqtV67Y8ZEUVqVZK5Z1cH8nvkKID\nuJ9sb+M1Ab/nmhcr3ZjZskE75uA3Z0+u71lwlGXNXHi1qwb1fw6UiGMPszyGtbQb\nF+JsidExE/dL9UY0LZmw2hlY6d/i7KaDA/nFfknmwUiX+zn3ko0C/n1W3z+4LWQ=\n=cmP9\n-----END PGP SIGNATURE-----\n", "payload": "tree 672736dc2367fb80253bec7a71e5063a347c830a\nparent e2e29de5e8a2908260d54182638241ff086a26c2\nparent d2fe7a7c761d625051a875e320b6e50fe7e33c41\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594882862 -0700\ncommitter GitHub <noreply@github.com> 1594882862 -0700\n\nRollup merge of #73421 - janikrabe:master, r=joshtriplett\n\nClarify effect of orphan rule changes on From/Into\n\nUpdated documentation for `std::convert` and `std::convert::From` to reflect changes to orphan rule in Rust 1.41. It should no longer be necessary to implement `Into` directly, unless targeting an older version.\n\nr? @steveklabnik\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31121cbec3a341cfc7b2823f30e8a52c11b06047", "html_url": "https://github.com/rust-lang/rust/commit/31121cbec3a341cfc7b2823f30e8a52c11b06047", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31121cbec3a341cfc7b2823f30e8a52c11b06047/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2e29de5e8a2908260d54182638241ff086a26c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e29de5e8a2908260d54182638241ff086a26c2", "html_url": "https://github.com/rust-lang/rust/commit/e2e29de5e8a2908260d54182638241ff086a26c2"}, {"sha": "d2fe7a7c761d625051a875e320b6e50fe7e33c41", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2fe7a7c761d625051a875e320b6e50fe7e33c41", "html_url": "https://github.com/rust-lang/rust/commit/d2fe7a7c761d625051a875e320b6e50fe7e33c41"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "94f7ff5c1f7fe7864f6bf1fd0399ae7d8b568eef", "filename": "src/libcore/convert/mod.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/31121cbec3a341cfc7b2823f30e8a52c11b06047/src%2Flibcore%2Fconvert%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31121cbec3a341cfc7b2823f30e8a52c11b06047/src%2Flibcore%2Fconvert%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert%2Fmod.rs?ref=31121cbec3a341cfc7b2823f30e8a52c11b06047", "patch": "@@ -18,8 +18,9 @@\n //! [`TryFrom<T>`][`TryFrom`] rather than [`Into<U>`][`Into`] or [`TryInto<U>`][`TryInto`],\n //! as [`From`] and [`TryFrom`] provide greater flexibility and offer\n //! equivalent [`Into`] or [`TryInto`] implementations for free, thanks to a\n-//! blanket implementation in the standard library. Only implement [`Into`] or [`TryInto`]\n-//! when a conversion to a type outside the current crate is required.\n+//! blanket implementation in the standard library. When targeting a version prior to Rust 1.41, it\n+//! may be necessary to implement [`Into`] or [`TryInto`] directly when converting to a type\n+//! outside the current crate.\n //!\n //! # Generic Implementations\n //!\n@@ -298,8 +299,10 @@ pub trait Into<T>: Sized {\n /// because implementing `From` automatically provides one with an implementation of [`Into`]\n /// thanks to the blanket implementation in the standard library.\n ///\n-/// Only implement [`Into`] if a conversion to a type outside the current crate is required.\n-/// `From` cannot do these type of conversions because of Rust's orphaning rules.\n+/// Only implement [`Into`] when targeting a version prior to Rust 1.41 and converting to a type\n+/// outside the current crate.\n+/// `From` was not able to do these types of conversions in earlier versions because of Rust's\n+/// orphaning rules.\n /// See [`Into`] for more details.\n ///\n /// Prefer using [`Into`] over using `From` when specifying trait bounds on a generic function."}]}