{"sha": "82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZWY4NTE5YzNjZTljMmJmMTE3NmE2MzE5Y2NjYmIzYTUzNzZiZDI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-05T19:01:10Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-05T23:21:55Z"}, "message": "Fix some path handling in std::fs on win32", "tree": {"sha": "52785c3fa386bbe797b314d333abfe5d619519ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52785c3fa386bbe797b314d333abfe5d619519ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2", "html_url": "https://github.com/rust-lang/rust/commit/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b4601e08eb0ac54f4c8c12b4dd762b89248abca", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b4601e08eb0ac54f4c8c12b4dd762b89248abca", "html_url": "https://github.com/rust-lang/rust/commit/8b4601e08eb0ac54f4c8c12b4dd762b89248abca"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "ec389593f5beeceebf91012cb1abbc93b854fb0a", "filename": "src/lib/fs.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2/src%2Flib%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2/src%2Flib%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ffs.rs?ref=82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2", "patch": "@@ -144,6 +144,8 @@ fn normalize(p: path) -> path {\n         ret t;\n     }\n \n+    #[cfg(target_os = \"linux\")]\n+    #[cfg(target_os = \"macos\")]\n     fn reabsolute(orig: path, new: path) -> path {\n         if path_is_absolute(orig) {\n             path_sep() + new\n@@ -152,6 +154,15 @@ fn normalize(p: path) -> path {\n         }\n     }\n \n+    #[cfg(target_os = \"win32\")]\n+    fn reabsolute(orig: path, new: path) -> path {\n+       if path_is_absolute(orig) && orig[0] == os_fs::path_sep as u8 {\n+           str::from_char(os_fs::path_sep) + new\n+       } else {\n+           new\n+       }\n+    }\n+\n     fn reterminate(orig: path, new: path) -> path {\n         let last = orig[str::byte_len(orig) - 1u];\n         if last == os_fs::path_sep as u8"}, {"sha": "dcd8a905d2effe590913e075f0e2e638c8d594f7", "filename": "src/lib/win32_fs.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2/src%2Flib%2Fwin32_fs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2/src%2Flib%2Fwin32_fs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fwin32_fs.rs?ref=82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2", "patch": "@@ -12,7 +12,9 @@ fn list_dir(path: str) -> [str] {\n \n fn path_is_absolute(p: str) -> bool {\n     ret str::char_at(p, 0u) == '/' ||\n-            str::char_at(p, 1u) == ':' && str::char_at(p, 2u) == '\\\\';\n+            str::char_at(p, 1u) == ':'\n+            && (str::char_at(p, 2u) == path_sep\n+            || str::char_at(p, 2u) == alt_path_sep);\n }\n \n /* FIXME: win32 path handling actually accepts '/' or '\\' and has subtly"}, {"sha": "14467ea59a6585fb4d4cd039b508bcb686b40c8a", "filename": "src/test/stdtest/fs.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2/src%2Ftest%2Fstdtest%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2/src%2Ftest%2Fstdtest%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ffs.rs?ref=82ef8519c3ce9c2bf1176a6319cccbb3a5376bd2", "patch": "@@ -132,6 +132,7 @@ fn normalize9() {\n fn normalize10() {\n     let actual = fs::normalize(\"/a/b/c/../d/./../../e/\");\n     let expected = \"/a/e/\";\n+    log_err actual;\n     assert actual == expected;\n }\n \n@@ -140,4 +141,19 @@ fn normalize11() {\n     let actual = fs::normalize(\"/a/..\");\n     let expected = \"/\";\n     assert actual == expected;\n+}\n+\n+#[test]\n+#[cfg(target_os = \"win32\")]\n+fn normalize12() {\n+   let actual = fs::normalize(\"C:/whatever\");\n+   let expected = \"C:/whatever\";\n+   log_err actual;\n+   assert actual == expected;\n+}\n+\n+#[test]\n+#[cfg(target_os = \"win32\")]\n+fn path_is_absolute_win32() {\n+   assert fs::path_is_absolute(\"C:/whatever\");\n }\n\\ No newline at end of file"}]}