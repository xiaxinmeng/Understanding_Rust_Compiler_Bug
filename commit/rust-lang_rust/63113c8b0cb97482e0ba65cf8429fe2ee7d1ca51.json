{"sha": "63113c8b0cb97482e0ba65cf8429fe2ee7d1ca51", "node_id": "C_kwDOAAsO6NoAKDYzMTEzYzhiMGNiOTc0ODJlMGJhNjVjZjg0MjlmZTJlZTdkMWNhNTE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-14T13:31:03Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-15T16:54:12Z"}, "message": "unwind: don't build dependency when building for Miri", "tree": {"sha": "13940568483c60d278fa8769794b1825860a282e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13940568483c60d278fa8769794b1825860a282e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63113c8b0cb97482e0ba65cf8429fe2ee7d1ca51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63113c8b0cb97482e0ba65cf8429fe2ee7d1ca51", "html_url": "https://github.com/rust-lang/rust/commit/63113c8b0cb97482e0ba65cf8429fe2ee7d1ca51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63113c8b0cb97482e0ba65cf8429fe2ee7d1ca51/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fbc08e2ce64dee45a29cb6133da6b32366268aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fbc08e2ce64dee45a29cb6133da6b32366268aa", "html_url": "https://github.com/rust-lang/rust/commit/2fbc08e2ce64dee45a29cb6133da6b32366268aa"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "31af390253b6f108c64d26c057295a482b992b84", "filename": "library/unwind/build.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/63113c8b0cb97482e0ba65cf8429fe2ee7d1ca51/library%2Funwind%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63113c8b0cb97482e0ba65cf8429fe2ee7d1ca51/library%2Funwind%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fbuild.rs?ref=63113c8b0cb97482e0ba65cf8429fe2ee7d1ca51", "patch": "@@ -2,8 +2,14 @@ use std::env;\n \n fn main() {\n     println!(\"cargo:rerun-if-changed=build.rs\");\n-    let target = env::var(\"TARGET\").expect(\"TARGET was not set\");\n+    println!(\"cargo:rerun-if-env-changed=CARGO_CFG_MIRI\");\n+\n+    if env::var_os(\"CARGO_CFG_MIRI\").is_some() {\n+        // Miri doesn't need the linker flags or a libunwind build.\n+        return;\n+    }\n \n+    let target = env::var(\"TARGET\").expect(\"TARGET was not set\");\n     if target.contains(\"android\") {\n         let build = cc::Build::new();\n "}]}