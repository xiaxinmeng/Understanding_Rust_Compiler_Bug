{"sha": "556b7baca2cd45a78b1a9a762b4bf66b69747e53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NmI3YmFjYTJjZDQ1YTc4YjFhOWE3NjJiNGJmNjZiNjk3NDdlNTM=", "commit": {"author": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2020-04-06T10:00:42Z"}, "committer": {"name": "jumbatm", "email": "30644300+jumbatm@users.noreply.github.com", "date": "2020-06-20T06:54:32Z"}, "message": "Update existing test cases.\n\n- Allow ClashingExternDecl for lint-dead-code-3\n- Update test case for #5791\n- Update test case for #1866\n- Update extern-abi-from-macro test case", "tree": {"sha": "a34552260014b7852bf1ab1ccd399c2f1e37a2a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a34552260014b7852bf1ab1ccd399c2f1e37a2a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/556b7baca2cd45a78b1a9a762b4bf66b69747e53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/556b7baca2cd45a78b1a9a762b4bf66b69747e53", "html_url": "https://github.com/rust-lang/rust/commit/556b7baca2cd45a78b1a9a762b4bf66b69747e53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/556b7baca2cd45a78b1a9a762b4bf66b69747e53/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f079522e43d4e09eee9c72fd06668323ff7cc58", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f079522e43d4e09eee9c72fd06668323ff7cc58", "html_url": "https://github.com/rust-lang/rust/commit/8f079522e43d4e09eee9c72fd06668323ff7cc58"}], "stats": {"total": 94, "additions": 70, "deletions": 24}, "files": [{"sha": "668baefa5e4adbfe173f2a6c69e0b0d302713b24", "filename": "src/test/ui/issues/issue-1866.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fissues%2Fissue-1866.rs", "raw_url": "https://github.com/rust-lang/rust/raw/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fissues%2Fissue-1866.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-1866.rs?ref=556b7baca2cd45a78b1a9a762b4bf66b69747e53", "patch": "@@ -1,6 +1,7 @@\n // build-pass\n #![allow(dead_code)]\n #![allow(non_camel_case_types)]\n+#![warn(clashing_extern_decl)]\n \n // pretty-expanded FIXME #23616\n \n@@ -20,6 +21,7 @@ mod b {\n         use super::rust_task;\n         extern {\n             pub fn rust_task_is_unwinding(rt: *const rust_task) -> bool;\n+            //~^ WARN `rust_task_is_unwinding` redeclared with a different signature\n         }\n     }\n }"}, {"sha": "13c08ebd373edf4d425eb694dd82f673ac538976", "filename": "src/test/ui/issues/issue-1866.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fissues%2Fissue-1866.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fissues%2Fissue-1866.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-1866.stderr?ref=556b7baca2cd45a78b1a9a762b4bf66b69747e53", "patch": "@@ -0,0 +1,19 @@\n+warning: `rust_task_is_unwinding` redeclared with a different signature\n+  --> $DIR/issue-1866.rs:23:13\n+   |\n+LL |             pub fn rust_task_is_unwinding(rt: *const rust_task) -> bool;\n+   |             ------------------------------------------------------------ `rust_task_is_unwinding` previously declared here\n+...\n+LL |             pub fn rust_task_is_unwinding(rt: *const rust_task) -> bool;\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-1866.rs:4:9\n+   |\n+LL | #![warn(clashing_extern_decl)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: expected `unsafe extern \"C\" fn(*const usize) -> bool`\n+              found `unsafe extern \"C\" fn(*const bool) -> bool`\n+\n+warning: 1 warning emitted\n+"}, {"sha": "fda72a1b20e4a1c7627d4f7a75d72723541576ff", "filename": "src/test/ui/issues/issue-5791.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fissues%2Fissue-5791.rs", "raw_url": "https://github.com/rust-lang/rust/raw/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fissues%2Fissue-5791.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5791.rs?ref=556b7baca2cd45a78b1a9a762b4bf66b69747e53", "patch": "@@ -1,11 +1,13 @@\n // run-pass\n #![allow(dead_code)]\n+#![warn(clashing_extern_decl)]\n // pretty-expanded FIXME #23616\n \n extern {\n     #[link_name = \"malloc\"]\n     fn malloc1(len: i32) -> *const u8;\n     #[link_name = \"malloc\"]\n+    //~^ WARN `malloc2` redeclares `malloc` with a different signature\n     fn malloc2(len: i32, foo: i32) -> *const u8;\n }\n "}, {"sha": "7ae83c43f13394141faa366fa1c6a7dbf3f8509b", "filename": "src/test/ui/issues/issue-5791.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fissues%2Fissue-5791.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fissues%2Fissue-5791.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5791.stderr?ref=556b7baca2cd45a78b1a9a762b4bf66b69747e53", "patch": "@@ -0,0 +1,21 @@\n+warning: `malloc2` redeclares `malloc` with a different signature\n+  --> $DIR/issue-5791.rs:9:5\n+   |\n+LL | /     #[link_name = \"malloc\"]\n+LL | |     fn malloc1(len: i32) -> *const u8;\n+   | |______________________________________- `malloc` previously declared here\n+LL | /     #[link_name = \"malloc\"]\n+LL | |\n+LL | |     fn malloc2(len: i32, foo: i32) -> *const u8;\n+   | |________________________________________________^ this signature doesn't match the previous declaration\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-5791.rs:3:9\n+   |\n+LL | #![warn(clashing_extern_decl)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+   = note: expected `unsafe extern \"C\" fn(i32) -> *const u8`\n+              found `unsafe extern \"C\" fn(i32, i32) -> *const u8`\n+\n+warning: 1 warning emitted\n+"}, {"sha": "fb7bf135f538c701f5449ada947d215cf8aa6f62", "filename": "src/test/ui/lint/clashing-extern-fn.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Flint%2Fclashing-extern-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Flint%2Fclashing-extern-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fclashing-extern-fn.stderr?ref=556b7baca2cd45a78b1a9a762b4bf66b69747e53", "patch": "@@ -12,8 +12,8 @@ note: the lint level is defined here\n    |\n LL | #![warn(clashing_extern_decl)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n-   = note: expected  `unsafe extern \"C\" fn(u8)`\n-              found  `unsafe extern \"C\" fn(u64)`\n+   = note: expected `unsafe extern \"C\" fn(u8)`\n+              found `unsafe extern \"C\" fn(u64)`\n \n warning: `extern_fn` redeclared with a different signature\n   --> $DIR/clashing-extern-fn.rs:39:9\n@@ -24,8 +24,8 @@ LL |     fn extern_fn(x: u64);\n LL |         fn extern_fn(x: u32);\n    |         ^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration\n    |\n-   = note: expected  `unsafe extern \"C\" fn(u64)`\n-              found  `unsafe extern \"C\" fn(u32)`\n+   = note: expected `unsafe extern \"C\" fn(u64)`\n+              found `unsafe extern \"C\" fn(u32)`\n \n warning: `extern_link_name` redeclared with a different signature\n   --> $DIR/clashing-extern-fn.rs:64:9\n@@ -37,8 +37,8 @@ LL | |     fn some_new_name(x: i16);\n LL |           fn extern_link_name(x: u32);\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration\n    |\n-   = note: expected  `unsafe extern \"C\" fn(i16)`\n-              found  `unsafe extern \"C\" fn(u32)`\n+   = note: expected `unsafe extern \"C\" fn(i16)`\n+              found `unsafe extern \"C\" fn(u32)`\n \n warning: `some_other_extern_link_name` redeclares `some_other_new_name` with a different signature\n   --> $DIR/clashing-extern-fn.rs:67:9\n@@ -51,8 +51,8 @@ LL | |\n LL | |         fn some_other_extern_link_name(x: u32);\n    | |_______________________________________________^ this signature doesn't match the previous declaration\n    |\n-   = note: expected  `unsafe extern \"C\" fn(i16)`\n-              found  `unsafe extern \"C\" fn(u32)`\n+   = note: expected `unsafe extern \"C\" fn(i16)`\n+              found `unsafe extern \"C\" fn(u32)`\n \n warning: `other_both_names_different` redeclares `link_name_same` with a different signature\n   --> $DIR/clashing-extern-fn.rs:71:9\n@@ -66,8 +66,8 @@ LL | |\n LL | |         fn other_both_names_different(x: u32);\n    | |______________________________________________^ this signature doesn't match the previous declaration\n    |\n-   = note: expected  `unsafe extern \"C\" fn(i16)`\n-              found  `unsafe extern \"C\" fn(u32)`\n+   = note: expected `unsafe extern \"C\" fn(i16)`\n+              found `unsafe extern \"C\" fn(u32)`\n \n warning: `different_mod` redeclared with a different signature\n   --> $DIR/clashing-extern-fn.rs:84:9\n@@ -78,8 +78,8 @@ LL |         fn different_mod(x: u8);\n LL |         fn different_mod(x: u64);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration\n    |\n-   = note: expected  `unsafe extern \"C\" fn(u8)`\n-              found  `unsafe extern \"C\" fn(u64)`\n+   = note: expected `unsafe extern \"C\" fn(u8)`\n+              found `unsafe extern \"C\" fn(u64)`\n \n warning: `variadic_decl` redeclared with a different signature\n   --> $DIR/clashing-extern-fn.rs:94:9\n@@ -90,8 +90,8 @@ LL |     fn variadic_decl(x: u8, ...);\n LL |         fn variadic_decl(x: u8);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration\n    |\n-   = note: expected  `unsafe extern \"C\" fn(u8, ...)`\n-              found  `unsafe extern \"C\" fn(u8)`\n+   = note: expected `unsafe extern \"C\" fn(u8, ...)`\n+              found `unsafe extern \"C\" fn(u8)`\n \n warning: `weigh_banana` redeclared with a different signature\n   --> $DIR/clashing-extern-fn.rs:137:22\n@@ -102,8 +102,8 @@ LL |         extern \"C\" { fn weigh_banana(count: *const Banana) -> u64; }\n LL |         extern \"C\" { fn weigh_banana(count: *const Banana) -> u64; }\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration\n    |\n-   = note: expected  `unsafe extern \"C\" fn(*const banana::one::Banana) -> u64`\n-              found  `unsafe extern \"C\" fn(*const banana::three::Banana) -> u64`\n+   = note: expected `unsafe extern \"C\" fn(*const banana::one::Banana) -> u64`\n+              found `unsafe extern \"C\" fn(*const banana::three::Banana) -> u64`\n \n warning: `draw_point` redeclared with a different signature\n   --> $DIR/clashing-extern-fn.rs:157:22\n@@ -114,8 +114,8 @@ LL |         extern \"C\" { fn draw_point(p: Point); }\n LL |         extern \"C\" { fn draw_point(p: Point); }\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^ this signature doesn't match the previous declaration\n    |\n-   = note: expected  `unsafe extern \"C\" fn(sameish_members::a::Point)`\n-              found  `unsafe extern \"C\" fn(sameish_members::b::Point)`\n+   = note: expected `unsafe extern \"C\" fn(sameish_members::a::Point)`\n+              found `unsafe extern \"C\" fn(sameish_members::b::Point)`\n \n warning: 9 warnings emitted\n "}, {"sha": "ff33abfa64586356a1caec0ad316193404a4075a", "filename": "src/test/ui/lint/dead-code/lint-dead-code-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.rs?ref=556b7baca2cd45a78b1a9a762b4bf66b69747e53", "patch": "@@ -1,5 +1,6 @@\n #![allow(unused_variables)]\n #![allow(non_camel_case_types)]\n+#![allow(clashing_extern_decl)]\n #![deny(dead_code)]\n \n #![crate_type=\"lib\"]"}, {"sha": "cf8f01ea19f0cd1409fc79570895589967209a9a", "filename": "src/test/ui/lint/dead-code/lint-dead-code-3.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.stderr?ref=556b7baca2cd45a78b1a9a762b4bf66b69747e53", "patch": "@@ -1,35 +1,35 @@\n error: struct is never constructed: `Foo`\n-  --> $DIR/lint-dead-code-3.rs:13:8\n+  --> $DIR/lint-dead-code-3.rs:14:8\n    |\n LL | struct Foo;\n    |        ^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-dead-code-3.rs:3:9\n+  --> $DIR/lint-dead-code-3.rs:4:9\n    |\n LL | #![deny(dead_code)]\n    |         ^^^^^^^^^\n \n error: associated function is never used: `foo`\n-  --> $DIR/lint-dead-code-3.rs:15:8\n+  --> $DIR/lint-dead-code-3.rs:16:8\n    |\n LL |     fn foo(&self) {\n    |        ^^^\n \n error: function is never used: `bar`\n-  --> $DIR/lint-dead-code-3.rs:20:4\n+  --> $DIR/lint-dead-code-3.rs:21:4\n    |\n LL | fn bar() {\n    |    ^^^\n \n error: enum is never used: `c_void`\n-  --> $DIR/lint-dead-code-3.rs:59:6\n+  --> $DIR/lint-dead-code-3.rs:60:6\n    |\n LL | enum c_void {}\n    |      ^^^^^^\n \n error: function is never used: `free`\n-  --> $DIR/lint-dead-code-3.rs:61:5\n+  --> $DIR/lint-dead-code-3.rs:62:5\n    |\n LL |     fn free(p: *const c_void);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "a516aa44c657637732155b57ff57efac74ad3674", "filename": "src/test/ui/parser/extern-abi-from-mac-literal-frag.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fparser%2Fextern-abi-from-mac-literal-frag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/556b7baca2cd45a78b1a9a762b4bf66b69747e53/src%2Ftest%2Fui%2Fparser%2Fextern-abi-from-mac-literal-frag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-abi-from-mac-literal-frag.rs?ref=556b7baca2cd45a78b1a9a762b4bf66b69747e53", "patch": "@@ -1,3 +1,4 @@\n+#![allow(clashing_extern_decl)]\n // check-pass\n \n // In this test we check that the parser accepts an ABI string when it"}]}