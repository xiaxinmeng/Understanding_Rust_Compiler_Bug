{"sha": "7e3132adb375480aebff297217e3125165cc56b2", "node_id": "C_kwDOAAsO6NoAKDdlMzEzMmFkYjM3NTQ4MGFlYmZmMjk3MjE3ZTMxMjUxNjVjYzU2YjI", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-06T01:51:27Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-06T19:48:47Z"}, "message": "Extract function for reporting feature gate error", "tree": {"sha": "a00c53260ac2a8ab987b43e3ee3b7de0dbf264d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a00c53260ac2a8ab987b43e3ee3b7de0dbf264d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e3132adb375480aebff297217e3125165cc56b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e3132adb375480aebff297217e3125165cc56b2", "html_url": "https://github.com/rust-lang/rust/commit/7e3132adb375480aebff297217e3125165cc56b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e3132adb375480aebff297217e3125165cc56b2/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a324fc19d4b4bd6ecb34abf318aea2e65f98c241", "url": "https://api.github.com/repos/rust-lang/rust/commits/a324fc19d4b4bd6ecb34abf318aea2e65f98c241", "html_url": "https://github.com/rust-lang/rust/commit/a324fc19d4b4bd6ecb34abf318aea2e65f98c241"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "ddb9f53c695f69a248d28b26cc708258f04696ec", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7e3132adb375480aebff297217e3125165cc56b2/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e3132adb375480aebff297217e3125165cc56b2/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=7e3132adb375480aebff297217e3125165cc56b2", "patch": "@@ -1370,22 +1370,7 @@ impl LinkCollector<'_, '_> {\n                         && item.def_id.is_local()\n                         && !self.cx.tcx.features().intra_doc_pointers\n                     {\n-                        let span = super::source_span_for_markdown_range(\n-                            self.cx.tcx,\n-                            dox,\n-                            &ori_link.range,\n-                            &item.attrs,\n-                        )\n-                        .unwrap_or_else(|| item.attr_span(self.cx.tcx));\n-\n-                        rustc_session::parse::feature_err(\n-                            &self.cx.tcx.sess.parse_sess,\n-                            sym::intra_doc_pointers,\n-                            span,\n-                            \"linking to associated items of raw pointers is experimental\",\n-                        )\n-                        .note(\"rustdoc does not allow disambiguating between `*const` and `*mut`, and pointers are unstable until it does\")\n-                        .emit();\n+                        self.report_rawptr_assoc_feature_gate(dox, &ori_link, item);\n                     }\n                 } else {\n                     match disambiguator {\n@@ -1412,6 +1397,20 @@ impl LinkCollector<'_, '_> {\n         }\n     }\n \n+    fn report_rawptr_assoc_feature_gate(&self, dox: &str, ori_link: &MarkdownLink, item: &Item) {\n+        let span =\n+            super::source_span_for_markdown_range(self.cx.tcx, dox, &ori_link.range, &item.attrs)\n+                .unwrap_or_else(|| item.attr_span(self.cx.tcx));\n+        rustc_session::parse::feature_err(\n+            &self.cx.tcx.sess.parse_sess,\n+            sym::intra_doc_pointers,\n+            span,\n+            \"linking to associated items of raw pointers is experimental\",\n+        )\n+        .note(\"rustdoc does not allow disambiguating between `*const` and `*mut`, and pointers are unstable until it does\")\n+        .emit();\n+    }\n+\n     fn resolve_with_disambiguator_cached(\n         &mut self,\n         key: ResolutionInfo,"}]}