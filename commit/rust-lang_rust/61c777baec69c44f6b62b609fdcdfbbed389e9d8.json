{"sha": "61c777baec69c44f6b62b609fdcdfbbed389e9d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYzc3N2JhZWM2OWM0NGY2YjYyYjYwOWZkY2RmYmJlZDM4OWU5ZDg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-10-14T14:09:59Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-11-01T18:08:56Z"}, "message": "introduce new origin for `Trait+'b`\n\nThis helps us to preserve the existing errors.", "tree": {"sha": "3488eb538eedffa523a48ee3fa06d0e5aab2fb7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3488eb538eedffa523a48ee3fa06d0e5aab2fb7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61c777baec69c44f6b62b609fdcdfbbed389e9d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61c777baec69c44f6b62b609fdcdfbbed389e9d8", "html_url": "https://github.com/rust-lang/rust/commit/61c777baec69c44f6b62b609fdcdfbbed389e9d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61c777baec69c44f6b62b609fdcdfbbed389e9d8/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20b062663e9e5be40708609d16125d159dbbda0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20b062663e9e5be40708609d16125d159dbbda0", "html_url": "https://github.com/rust-lang/rust/commit/a20b062663e9e5be40708609d16125d159dbbda0"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "89c8162456c427e7e80a7de27190bfa33e1ce4b8", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/61c777baec69c44f6b62b609fdcdfbbed389e9d8/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c777baec69c44f6b62b609fdcdfbbed389e9d8/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=61c777baec69c44f6b62b609fdcdfbbed389e9d8", "patch": "@@ -868,6 +868,11 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                 err.note(&format!(\"required so that reference `{}` does not outlive its referent\",\n                                   ref_ty));\n             }\n+            ObligationCauseCode::ObjectTypeBound(object_ty, region) => {\n+                err.note(&format!(\"required so that the lifetime bound of `{}` for `{}` \\\n+                                   is satisfied\",\n+                                  region, object_ty));\n+            }\n             ObligationCauseCode::ItemObligation(item_def_id) => {\n                 let item_name = tcx.item_path_str(item_def_id);\n                 err.note(&format!(\"required by `{}`\", item_name));"}, {"sha": "017b34d914f803b635965f03666d1f53cebcd167", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/61c777baec69c44f6b62b609fdcdfbbed389e9d8/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c777baec69c44f6b62b609fdcdfbbed389e9d8/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=61c777baec69c44f6b62b609fdcdfbbed389e9d8", "patch": "@@ -111,6 +111,9 @@ pub enum ObligationCauseCode<'tcx> {\n     /// A type like `&'a T` is WF only if `T: 'a`.\n     ReferenceOutlivesReferent(Ty<'tcx>),\n \n+    /// A type like `Box<Foo<'a> + 'b>` is WF only if `'b: 'a`.\n+    ObjectTypeBound(Ty<'tcx>, &'tcx ty::Region),\n+\n     /// Obligation incurred due to an object cast.\n     ObjectCastObligation(/* Object type */ Ty<'tcx>),\n "}, {"sha": "d33e8b5675f55a4e655e6a1b820c0b7558441f82", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/61c777baec69c44f6b62b609fdcdfbbed389e9d8/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c777baec69c44f6b62b609fdcdfbbed389e9d8/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=61c777baec69c44f6b62b609fdcdfbbed389e9d8", "patch": "@@ -175,6 +175,13 @@ impl<'a, 'tcx> Lift<'tcx> for traits::ObligationCauseCode<'a> {\n             super::ReferenceOutlivesReferent(ty) => {\n                 tcx.lift(&ty).map(super::ReferenceOutlivesReferent)\n             }\n+            super::ObjectTypeBound(ty, r) => {\n+                tcx.lift(&ty).and_then(|ty| {\n+                    tcx.lift(&r).and_then(|r| {\n+                        Some(super::ObjectTypeBound(ty, r))\n+                    })\n+                })\n+            }\n             super::ObjectCastObligation(ty) => {\n                 tcx.lift(&ty).map(super::ObjectCastObligation)\n             }\n@@ -473,6 +480,9 @@ impl<'tcx> TypeFoldable<'tcx> for traits::ObligationCauseCode<'tcx> {\n             super::ReferenceOutlivesReferent(ty) => {\n                 super::ReferenceOutlivesReferent(ty.fold_with(folder))\n             }\n+            super::ObjectTypeBound(ty, r) => {\n+                super::ObjectTypeBound(ty.fold_with(folder), r.fold_with(folder))\n+            }\n             super::ObjectCastObligation(ty) => {\n                 super::ObjectCastObligation(ty.fold_with(folder))\n             }\n@@ -504,6 +514,7 @@ impl<'tcx> TypeFoldable<'tcx> for traits::ObligationCauseCode<'tcx> {\n \n             super::ProjectionWf(proj) => proj.visit_with(visitor),\n             super::ReferenceOutlivesReferent(ty) => ty.visit_with(visitor),\n+            super::ObjectTypeBound(ty, r) => ty.visit_with(visitor) || r.visit_with(visitor),\n             super::ObjectCastObligation(ty) => ty.visit_with(visitor),\n             super::BuiltinDerivedObligation(ref cause) => cause.visit_with(visitor),\n             super::ImplDerivedObligation(ref cause) => cause.visit_with(visitor)"}, {"sha": "155fa4989ea3cb716452b7b5bda64d89ae7e6207", "filename": "src/librustc/ty/wf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61c777baec69c44f6b62b609fdcdfbbed389e9d8/src%2Flibrustc%2Fty%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c777baec69c44f6b62b609fdcdfbbed389e9d8/src%2Flibrustc%2Fty%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fwf.rs?ref=61c777baec69c44f6b62b609fdcdfbbed389e9d8", "patch": "@@ -498,7 +498,7 @@ impl<'a, 'gcx, 'tcx> WfPredicates<'a, 'gcx, 'tcx> {\n             let explicit_bound = data.region_bound;\n \n             for implicit_bound in implicit_bounds {\n-                let cause = self.cause(traits::ReferenceOutlivesReferent(ty));\n+                let cause = self.cause(traits::ObjectTypeBound(ty, explicit_bound));\n                 let outlives = ty::Binder(ty::OutlivesPredicate(explicit_bound, implicit_bound));\n                 self.out.push(traits::Obligation::new(cause, outlives.to_predicate()));\n             }"}]}