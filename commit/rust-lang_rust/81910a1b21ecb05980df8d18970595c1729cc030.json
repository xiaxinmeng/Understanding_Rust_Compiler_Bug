{"sha": "81910a1b21ecb05980df8d18970595c1729cc030", "node_id": "C_kwDOAAsO6NoAKDgxOTEwYTFiMjFlY2IwNTk4MGRmOGQxODk3MDU5NWMxNzI5Y2MwMzA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-04-29T05:57:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-29T05:57:56Z"}, "message": "Rollup merge of #110965 - compiler-errors:anon-lt-dupe-oops, r=cjgillot\n\nDon't duplicate anonymous lifetimes for async fn in traits\n\n`record_lifetime_params_for_async` needs to be called outside of the scope of the function, or else it'll end up collecting anonymous lifetimes twice (those on the function and those within the `AnonymousCreateParameter` rib). This matches how `record_lifetime_params_for_async` is being used for functions with bodies below.\n\nThis fixes (partially) #110963 when the lifetimes are late-bound, but does not do so when the lifetimes are early-bound (as seen from the known-bug that I added).", "tree": {"sha": "7e0605d54f2d79e843fcacde49c3c51ccd478f21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e0605d54f2d79e843fcacde49c3c51ccd478f21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81910a1b21ecb05980df8d18970595c1729cc030", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkTLHkCRBK7hj4Ov3rIwAAJjYIABx8zBapYteb4ebpTzAE1aZa\nAw8DUdXbQOASNtanGjnisYwhRh9omdgXD2i/g3pNdgfCun4iBOSPOG9VnjjUVubN\nj3ug5JR56bVephzXV3/u1MpWEh/IxwYZJHbVP1wn+HZe7ijTBNKZgXdOj8Gdot7S\nB72IVlGTwOJ1X9K1gIkGiDM3pe5Ui+YqSxcUk+dmI8gfUcnWRaC3cIW/TLGcDJIH\nqzkz15S6OtuQ8MceU4taeMuedHNXvsum791YAissbAphK2bvMODBU1geyz/HLHuB\nbLEiFg6wU/HzvfKrlBxcuPW+niqgLVGExqmz4mJj/ZEu7bFKh9rl0Iq/c/fJxWg=\n=VfGG\n-----END PGP SIGNATURE-----\n", "payload": "tree 7e0605d54f2d79e843fcacde49c3c51ccd478f21\nparent 7721c7319d84f1a639a61f4b931303bf24953c27\nparent 4e05cfb5ff5f6c27cc02ca76f7c4809c310371a4\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1682747876 +0530\ncommitter GitHub <noreply@github.com> 1682747876 +0530\n\nRollup merge of #110965 - compiler-errors:anon-lt-dupe-oops, r=cjgillot\n\nDon't duplicate anonymous lifetimes for async fn in traits\n\n`record_lifetime_params_for_async` needs to be called outside of the scope of the function, or else it'll end up collecting anonymous lifetimes twice (those on the function and those within the `AnonymousCreateParameter` rib). This matches how `record_lifetime_params_for_async` is being used for functions with bodies below.\n\nThis fixes (partially) #110963 when the lifetimes are late-bound, but does not do so when the lifetimes are early-bound (as seen from the known-bug that I added).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81910a1b21ecb05980df8d18970595c1729cc030", "html_url": "https://github.com/rust-lang/rust/commit/81910a1b21ecb05980df8d18970595c1729cc030", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81910a1b21ecb05980df8d18970595c1729cc030/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7721c7319d84f1a639a61f4b931303bf24953c27", "url": "https://api.github.com/repos/rust-lang/rust/commits/7721c7319d84f1a639a61f4b931303bf24953c27", "html_url": "https://github.com/rust-lang/rust/commit/7721c7319d84f1a639a61f4b931303bf24953c27"}, {"sha": "4e05cfb5ff5f6c27cc02ca76f7c4809c310371a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e05cfb5ff5f6c27cc02ca76f7c4809c310371a4", "html_url": "https://github.com/rust-lang/rust/commit/4e05cfb5ff5f6c27cc02ca76f7c4809c310371a4"}], "stats": {"total": 172, "additions": 164, "deletions": 8}, "files": [{"sha": "5c02e7193a216af6219dd6367c27fd41c89a3ea6", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81910a1b21ecb05980df8d18970595c1729cc030/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81910a1b21ecb05980df8d18970595c1729cc030/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=81910a1b21ecb05980df8d18970595c1729cc030", "patch": "@@ -859,13 +859,9 @@ impl<'a: 'ast, 'ast, 'tcx> Visitor<'ast> for LateResolutionVisitor<'a, '_, 'ast,\n                             sig.decl.inputs.iter().map(|Param { ty, .. }| (None, &**ty)),\n                             &sig.decl.output,\n                         );\n-\n-                        this.record_lifetime_params_for_async(\n-                            fn_id,\n-                            sig.header.asyncness.opt_return_id(),\n-                        );\n                     },\n                 );\n+                self.record_lifetime_params_for_async(fn_id, sig.header.asyncness.opt_return_id());\n                 return;\n             }\n             FnKind::Fn(..) => {"}, {"sha": "9cdc23bbc7809e877a267ad357156832d71dbafe", "filename": "tests/ui/async-await/in-trait/nested-rpit.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Fin-trait%2Fnested-rpit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Fin-trait%2Fnested-rpit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fin-trait%2Fnested-rpit.rs?ref=81910a1b21ecb05980df8d18970595c1729cc030", "patch": "@@ -1,7 +1,5 @@\n // edition: 2021\n-// known-bug: #105197\n-// failure-status:101\n-// dont-check-compiler-stderr\n+// check-pass\n \n #![feature(async_fn_in_trait)]\n #![feature(return_position_impl_trait_in_trait)]"}, {"sha": "0ecbca5c13bdd9062caa1bda2aeccf605024f220", "filename": "tests/ui/async-await/return-type-notation/issue-110963-early.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-early.rs?ref=81910a1b21ecb05980df8d18970595c1729cc030", "patch": "@@ -0,0 +1,48 @@\n+// edition: 2021\n+// known-bug: #110963\n+\n+#![feature(return_type_notation)]\n+#![feature(async_fn_in_trait)]\n+\n+trait HealthCheck {\n+    async fn check<'a: 'a>(&'a mut self) -> bool;\n+}\n+\n+async fn do_health_check_par<HC>(hc: HC)\n+where\n+    HC: HealthCheck<check(): Send> + Send + 'static,\n+{\n+    spawn(async move {\n+        let mut hc = hc;\n+        if !hc.check().await {\n+            log_health_check_failure().await;\n+        }\n+    });\n+}\n+\n+async fn log_health_check_failure() {}\n+\n+fn main() {}\n+\n+// Fake tokio spawn\n+\n+use std::future::Future;\n+use std::pin::Pin;\n+use std::task::{Context, Poll};\n+\n+fn spawn<F>(future: F) -> JoinHandle\n+where\n+    F: Future + Send + 'static,\n+    F::Output: Send + 'static,\n+{\n+    loop {}\n+}\n+\n+struct JoinHandle;\n+\n+impl Future for JoinHandle {\n+    type Output = ();\n+    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {\n+        loop {}\n+    }\n+}"}, {"sha": "b4a3924d8dab9ff30a67b776491684bbd0f60967", "filename": "tests/ui/async-await/return-type-notation/issue-110963-early.stderr", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-early.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-early.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-early.stderr?ref=81910a1b21ecb05980df8d18970595c1729cc030", "patch": "@@ -0,0 +1,45 @@\n+warning: the feature `return_type_notation` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-110963-early.rs:4:12\n+   |\n+LL | #![feature(return_type_notation)]\n+   |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #109417 <https://github.com/rust-lang/rust/issues/109417> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: the feature `async_fn_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-110963-early.rs:5:12\n+   |\n+LL | #![feature(async_fn_in_trait)]\n+   |            ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+\n+error: higher-ranked lifetime error\n+  --> $DIR/issue-110963-early.rs:15:5\n+   |\n+LL | /     spawn(async move {\n+LL | |         let mut hc = hc;\n+LL | |         if !hc.check().await {\n+LL | |             log_health_check_failure().await;\n+LL | |         }\n+LL | |     });\n+   | |______^\n+   |\n+   = note: could not prove `[async block@$DIR/issue-110963-early.rs:15:11: 20:6]: Send`\n+\n+error: higher-ranked lifetime error\n+  --> $DIR/issue-110963-early.rs:15:5\n+   |\n+LL | /     spawn(async move {\n+LL | |         let mut hc = hc;\n+LL | |         if !hc.check().await {\n+LL | |             log_health_check_failure().await;\n+LL | |         }\n+LL | |     });\n+   | |______^\n+   |\n+   = note: could not prove `[async block@$DIR/issue-110963-early.rs:15:11: 20:6]: Send`\n+\n+error: aborting due to 2 previous errors; 2 warnings emitted\n+"}, {"sha": "2a35922eaa1b5c7414aa96b808ed302295b99dd4", "filename": "tests/ui/async-await/return-type-notation/issue-110963-late.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-late.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-late.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-late.rs?ref=81910a1b21ecb05980df8d18970595c1729cc030", "patch": "@@ -0,0 +1,50 @@\n+// edition: 2021\n+// check-pass\n+\n+#![feature(return_type_notation)]\n+//~^ WARN the feature `return_type_notation` is incomplete\n+#![feature(async_fn_in_trait)]\n+//~^ WARN the feature `async_fn_in_trait` is incomplete\n+\n+trait HealthCheck {\n+    async fn check(&mut self) -> bool;\n+}\n+\n+async fn do_health_check_par<HC>(hc: HC)\n+where\n+    HC: HealthCheck<check(): Send> + Send + 'static,\n+{\n+    spawn(async move {\n+        let mut hc = hc;\n+        if !hc.check().await {\n+            log_health_check_failure().await;\n+        }\n+    });\n+}\n+\n+async fn log_health_check_failure() {}\n+\n+fn main() {}\n+\n+// Fake tokio spawn\n+\n+use std::future::Future;\n+use std::pin::Pin;\n+use std::task::{Context, Poll};\n+\n+fn spawn<F>(future: F) -> JoinHandle\n+where\n+    F: Future + Send + 'static,\n+    F::Output: Send + 'static,\n+{\n+    loop {}\n+}\n+\n+struct JoinHandle;\n+\n+impl Future for JoinHandle {\n+    type Output = ();\n+    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {\n+        loop {}\n+    }\n+}"}, {"sha": "36ef3ad0a4c82121d1858034c05108c570fbdaef", "filename": "tests/ui/async-await/return-type-notation/issue-110963-late.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-late.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81910a1b21ecb05980df8d18970595c1729cc030/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-late.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Freturn-type-notation%2Fissue-110963-late.stderr?ref=81910a1b21ecb05980df8d18970595c1729cc030", "patch": "@@ -0,0 +1,19 @@\n+warning: the feature `return_type_notation` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-110963-late.rs:4:12\n+   |\n+LL | #![feature(return_type_notation)]\n+   |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #109417 <https://github.com/rust-lang/rust/issues/109417> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: the feature `async_fn_in_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-110963-late.rs:6:12\n+   |\n+LL | #![feature(async_fn_in_trait)]\n+   |            ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+\n+warning: 2 warnings emitted\n+"}]}