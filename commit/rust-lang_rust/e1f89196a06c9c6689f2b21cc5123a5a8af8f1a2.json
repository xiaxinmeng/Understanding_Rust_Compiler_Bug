{"sha": "e1f89196a06c9c6689f2b21cc5123a5a8af8f1a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZjg5MTk2YTA2YzljNjY4OWYyYjIxY2M1MTIzYTVhOGFmOGYxYTI=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-03T12:50:06Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-03T12:50:06Z"}, "message": "take mapped function by mutable reference", "tree": {"sha": "02da57ec1fcac8ee247fe25f1940df9919e6634a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02da57ec1fcac8ee247fe25f1940df9919e6634a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1f89196a06c9c6689f2b21cc5123a5a8af8f1a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1f89196a06c9c6689f2b21cc5123a5a8af8f1a2", "html_url": "https://github.com/rust-lang/rust/commit/e1f89196a06c9c6689f2b21cc5123a5a8af8f1a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1f89196a06c9c6689f2b21cc5123a5a8af8f1a2/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6a397888689a22803bb364f74177e855b64c680", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a397888689a22803bb364f74177e855b64c680", "html_url": "https://github.com/rust-lang/rust/commit/b6a397888689a22803bb364f74177e855b64c680"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "97dcb2475a3cf3dfc95927d6c4cf930a8c8da582", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e1f89196a06c9c6689f2b21cc5123a5a8af8f1a2/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1f89196a06c9c6689f2b21cc5123a5a8af8f1a2/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=e1f89196a06c9c6689f2b21cc5123a5a8af8f1a2", "patch": "@@ -1683,7 +1683,7 @@ impl<B, I: Iterator, F> Iterator for Map<I, F> where F: FnMut(I::Item) -> B {\n \n     #[inline]\n     fn next(&mut self) -> Option<B> {\n-        self.iter.next().map(self.f)\n+        self.iter.next().map(&mut self.f)\n     }\n \n     #[inline]\n@@ -1698,7 +1698,7 @@ impl<B, I: DoubleEndedIterator, F> DoubleEndedIterator for Map<I, F> where\n {\n     #[inline]\n     fn next_back(&mut self) -> Option<B> {\n-        self.iter.next_back().map(self.f)\n+        self.iter.next_back().map(&mut self.f)\n     }\n }\n \n@@ -2210,7 +2210,7 @@ impl<I: Iterator, U: IntoIterator, F> Iterator for FlatMap<I, U, F>\n                     return Some(x)\n                 }\n             }\n-            match self.iter.next().map(self.f) {\n+            match self.iter.next().map(&mut self.f) {\n                 None => return self.backiter.as_mut().and_then(|it| it.next()),\n                 next => self.frontiter = next.map(IntoIterator::into_iter),\n             }\n@@ -2243,7 +2243,7 @@ impl<I: DoubleEndedIterator, U, F> DoubleEndedIterator for FlatMap<I, U, F> wher\n                     return Some(y)\n                 }\n             }\n-            match self.iter.next_back().map(self.f) {\n+            match self.iter.next_back().map(&mut self.f) {\n                 None => return self.frontiter.as_mut().and_then(|it| it.next_back()),\n                 next => self.backiter = next.map(IntoIterator::into_iter),\n             }"}]}