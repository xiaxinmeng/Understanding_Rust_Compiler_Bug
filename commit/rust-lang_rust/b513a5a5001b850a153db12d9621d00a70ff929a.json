{"sha": "b513a5a5001b850a153db12d9621d00a70ff929a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MTNhNWE1MDAxYjg1MGExNTNkYjEyZDk2MjFkMDBhNzBmZjkyOWE=", "commit": {"author": {"name": "Austin Seipp", "email": "as@hacks.yi.org", "date": "2011-12-06T07:11:11Z"}, "committer": {"name": "Austin Seipp", "email": "as@hacks.yi.org", "date": "2011-12-06T07:15:29Z"}, "message": "Make valgrind usage more consistent and less error prone.\n\nI was still having issues with the build system somehow getting confused\nas to which set of valgrind headers to use when compiling rt.\n\nThis commit moves all the valgrind headers into their own directory\nunder rt and makes the usage more consistent. The compiler is now passed\nthe -DNVALGRIND flag when valgrind is not installed, as opposed to\npassing -DHAVE_VALGRIND.\n\nWe also pass -I src/rt to the compiler when building rt so you can more\neasily import what you want. I also cleaned up some erroneous #includes\nalong the way.\n\nIt should be safe to always just import the local valgrind headers and use\nthem without question. NVALGRIND turns the operations to no-ops when it\nis active, and the build and tests run cleanly with or without.", "tree": {"sha": "83f22cf7a06a30d827ddea7e9b537aeabfc8d7de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83f22cf7a06a30d827ddea7e9b537aeabfc8d7de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b513a5a5001b850a153db12d9621d00a70ff929a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b513a5a5001b850a153db12d9621d00a70ff929a", "html_url": "https://github.com/rust-lang/rust/commit/b513a5a5001b850a153db12d9621d00a70ff929a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b513a5a5001b850a153db12d9621d00a70ff929a/comments", "author": null, "committer": null, "parents": [{"sha": "8d8148f1f740ce80a07a19830cfae8a1851a7c4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d8148f1f740ce80a07a19830cfae8a1851a7c4f", "html_url": "https://github.com/rust-lang/rust/commit/8d8148f1f740ce80a07a19830cfae8a1851a7c4f"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "430a835ba86aa71ae5e4ea70ab8bd29c8fac4062", "filename": "mk/platform.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b513a5a5001b850a153db12d9621d00a70ff929a/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b513a5a5001b850a153db12d9621d00a70ff929a/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=b513a5a5001b850a153db12d9621d00a70ff929a", "patch": "@@ -17,8 +17,8 @@ CFG_GCCISH_LINK_FLAGS :=\n # embedded into the executable, so use a no-op command.\n CFG_DSYMUTIL := true\n \n-ifneq ($(CFG_VALGRIND),)\n-  CFG_GCCISH_CFLAGS += -DHAVE_VALGRIND\n+ifeq ($(CFG_VALGRIND),)\n+  CFG_GCCISH_CFLAGS += -DNVALGRIND\n endif\n \n ifneq ($(findstring freebsd,$(CFG_OSTYPE)),)"}, {"sha": "0d9bb5c34086b0edcf9fd8b54ae94fe9b55c2cd4", "filename": "mk/rt.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b513a5a5001b850a153db12d9621d00a70ff929a/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b513a5a5001b850a153db12d9621d00a70ff929a/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=b513a5a5001b850a153db12d9621d00a70ff929a", "patch": "@@ -125,7 +125,7 @@ else\n endif\n \n RUNTIME_DEF_$(1) := rt/rustrt$$(CFG_DEF_SUFFIX)\n-RUNTIME_INCS_$(1) := -I $$(S)src/rt/isaac -I $$(S)src/rt/uthash \\\n+RUNTIME_INCS_$(1) := -I $$(S)src/rt -I $$(S)src/rt/isaac -I $$(S)src/rt/uthash \\\n                 -I $$(S)src/rt/arch/$$(HOST_$(1)) \\\n \t\t\t\t-I $$(S)src/libuv/include\n RUNTIME_OBJS_$(1) := $$(RUNTIME_CS_$(1):rt/%.cpp=rt/$(1)/%.o) \\"}, {"sha": "03b97fa7b517774d61d3c268fc2f7a6ff5a989c5", "filename": "src/rt/arch/i386/context.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Farch%2Fi386%2Fcontext.h", "raw_url": "https://github.com/rust-lang/rust/raw/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Farch%2Fi386%2Fcontext.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fcontext.h?ref=b513a5a5001b850a153db12d9621d00a70ff929a", "patch": "@@ -7,7 +7,7 @@\n #include <inttypes.h>\n #include <stdint.h>\n \n-#include \"../../memcheck.h\"\n+#include \"vg/memcheck.h\"\n \n template<typename T>\n T align_down(T sp)\n@@ -51,9 +51,7 @@ class context {\n     uint32_t bot = regs.esp;\n     uint32_t top = align_down(bot - nbytes);\n \n-#ifdef HAVE_VALGRIND\n     (void)VALGRIND_MAKE_MEM_UNDEFINED(top - 4, bot - top + 4);\n-#endif\n \n     return reinterpret_cast<void *>(top);\n   }"}, {"sha": "59d7bfa51f33740ffe49f23014b8d31e69655621", "filename": "src/rt/arch/x86_64/context.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Farch%2Fx86_64%2Fcontext.h", "raw_url": "https://github.com/rust-lang/rust/raw/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Farch%2Fx86_64%2Fcontext.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fcontext.h?ref=b513a5a5001b850a153db12d9621d00a70ff929a", "patch": "@@ -8,9 +8,7 @@\n #include <stdint.h>\n #include <xmmintrin.h>\n \n-#ifdef HAVE_VALGRIND\n-#include <valgrind/memcheck.h>\n-#endif\n+#include \"vg/memcheck.h\"\n \n template<typename T>\n T align_down(T sp)\n@@ -51,9 +49,7 @@ class context {\n         uint64_t bot = regs.data[RUSTRT_RSP];\n         uint64_t top = align_down(bot - nbytes);\n \n-#ifdef HAVE_VALGRIND\n         (void)VALGRIND_MAKE_MEM_UNDEFINED(top - 4, bot - top + 4);\n-#endif\n \n         return reinterpret_cast<void *>(top);\n     }"}, {"sha": "b540225243f93efd2b3f5793d9f80afdead34a0f", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=b513a5a5001b850a153db12d9621d00a70ff929a", "patch": "@@ -2,8 +2,8 @@\n #include \"rust_internal.h\"\n #include \"rust_cc.h\"\n \n-#include \"valgrind.h\"\n-#include \"memcheck.h\"\n+#include \"vg/valgrind.h\"\n+#include \"vg/memcheck.h\"\n \n #ifndef __WIN32__\n #include <execinfo.h>"}, {"sha": "ffa9876676375fd882631bfbe4c2376fe7e0e7ee", "filename": "src/rt/rust_timer.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Frust_timer.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Frust_timer.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_timer.cpp?ref=b513a5a5001b850a153db12d9621d00a70ff929a", "patch": "@@ -1,5 +1,5 @@\n #include \"rust_internal.h\"\n-#include \"valgrind.h\"\n+#include \"vg/valgrind.h\"\n \n // The mechanism in this file is very crude; every domain (thread) spawns its\n // own secondary timer thread, and that timer thread *never idles*. It"}, {"sha": "58480256e19dcf080829ebb2a274d9639c6c92bf", "filename": "src/rt/vg/memcheck.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Fvg%2Fmemcheck.h", "raw_url": "https://github.com/rust-lang/rust/raw/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Fvg%2Fmemcheck.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fvg%2Fmemcheck.h?ref=b513a5a5001b850a153db12d9621d00a70ff929a", "previous_filename": "src/rt/memcheck.h"}, {"sha": "737cc2a8b42241d4dfed5242adf20420a369efd0", "filename": "src/rt/vg/valgrind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Fvg%2Fvalgrind.h", "raw_url": "https://github.com/rust-lang/rust/raw/b513a5a5001b850a153db12d9621d00a70ff929a/src%2Frt%2Fvg%2Fvalgrind.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fvg%2Fvalgrind.h?ref=b513a5a5001b850a153db12d9621d00a70ff929a", "previous_filename": "src/rt/valgrind.h"}]}