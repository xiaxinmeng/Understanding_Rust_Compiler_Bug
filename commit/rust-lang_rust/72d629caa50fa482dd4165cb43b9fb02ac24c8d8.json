{"sha": "72d629caa50fa482dd4165cb43b9fb02ac24c8d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZDYyOWNhYTUwZmE0ODJkZDQxNjVjYjQzYjlmYjAyYWMyNGM4ZDg=", "commit": {"author": {"name": "James Miller", "email": "james@aatch.net", "date": "2016-08-23T06:23:31Z"}, "committer": {"name": "James Miller", "email": "james@aatch.net", "date": "2016-08-23T06:23:31Z"}, "message": "Improve error message when failing to parse a block\n\nWe want to catch this error:\n\n```\nif (foo)\n    bar;\n```\n\nas it's valid syntax in other languages, and say how to fix it.\nUnfortunately it didn't care if the suggestion made sense and just\nhighlighted the unexpected token.\n\nNow it attempts to parse a statement, and if it succeeds, it shows the\nhelp message.\n\nFixes #35907", "tree": {"sha": "1c140a34db4fa49bd2d6a59150a8cb5faa18e884", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c140a34db4fa49bd2d6a59150a8cb5faa18e884"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72d629caa50fa482dd4165cb43b9fb02ac24c8d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72d629caa50fa482dd4165cb43b9fb02ac24c8d8", "html_url": "https://github.com/rust-lang/rust/commit/72d629caa50fa482dd4165cb43b9fb02ac24c8d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72d629caa50fa482dd4165cb43b9fb02ac24c8d8/comments", "author": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd", "html_url": "https://github.com/rust-lang/rust/commit/3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "1646246069eadf196251a113fcfb36b772e0f02d", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/72d629caa50fa482dd4165cb43b9fb02ac24c8d8/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d629caa50fa482dd4165cb43b9fb02ac24c8d8/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=72d629caa50fa482dd4165cb43b9fb02ac24c8d8", "patch": "@@ -4087,9 +4087,30 @@ impl<'a> Parser<'a> {\n         if !self.eat(&token::OpenDelim(token::Brace)) {\n             let sp = self.span;\n             let tok = self.this_token_to_string();\n-            return Err(self.span_fatal_help(sp,\n-                                 &format!(\"expected `{{`, found `{}`\", tok),\n-                                 \"place this code inside a block\"));\n+            let mut e = self.span_fatal(sp, &format!(\"expected `{{`, found `{}`\", tok));\n+\n+            // Check to see if the user has written something like\n+            //\n+            //    if (cond)\n+            //      bar;\n+            //\n+            // Which is valid in other languages, but not Rust.\n+            match self.parse_stmt_without_recovery(false) {\n+                Ok(Some(stmt)) => {\n+                    let mut stmt_span = stmt.span;\n+                    // expand the span to include the semicolon, if it exists\n+                    if self.eat(&token::Semi) {\n+                        stmt_span.hi = self.last_span.hi;\n+                    }\n+                    e.span_help(stmt_span, \"try placing this code inside a block\");\n+                }\n+                Err(mut e) => {\n+                    self.recover_stmt_(SemiColonMode::Break);\n+                    e.cancel();\n+                }\n+                _ => ()\n+            }\n+            return Err(e);\n         }\n \n         self.parse_block_tail(lo, BlockCheckMode::Default)"}, {"sha": "1f29ff4e05c09811ed29ff33b914baee6b070f8f", "filename": "src/test/compile-fail/missing-block-hint.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/72d629caa50fa482dd4165cb43b9fb02ac24c8d8/src%2Ftest%2Fcompile-fail%2Fmissing-block-hint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d629caa50fa482dd4165cb43b9fb02ac24c8d8/src%2Ftest%2Fcompile-fail%2Fmissing-block-hint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-block-hint.rs?ref=72d629caa50fa482dd4165cb43b9fb02ac24c8d8", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    {\n+        if (foo) => {} //~ ERROR expected `{`, found `=>`\n+    }\n+    {\n+        if (foo)\n+            bar; //~ ERROR expected `{`, found `bar`\n+                 //^ HELP try placing this code inside a block\n+    }\n+}"}]}