{"sha": "dbc2466f09269dd86285b0f52a31360d087a379b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiYzI0NjZmMDkyNjlkZDg2Mjg1YjBmNTJhMzEzNjBkMDg3YTM3OWI=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-10T08:57:21Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-13T07:01:41Z"}, "message": "Only consider a module to be a directory owner if it is located within a directory owner", "tree": {"sha": "c608f0894dbc412a5629b2aee65f06804c140723", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c608f0894dbc412a5629b2aee65f06804c140723"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbc2466f09269dd86285b0f52a31360d087a379b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbc2466f09269dd86285b0f52a31360d087a379b", "html_url": "https://github.com/rust-lang/rust/commit/dbc2466f09269dd86285b0f52a31360d087a379b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbc2466f09269dd86285b0f52a31360d087a379b/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97842f54c9f98d0ed97eb4becad8906b9c1ba2da", "url": "https://api.github.com/repos/rust-lang/rust/commits/97842f54c9f98d0ed97eb4becad8906b9c1ba2da", "html_url": "https://github.com/rust-lang/rust/commit/97842f54c9f98d0ed97eb4becad8906b9c1ba2da"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "16426a437227a558a2371f231aecb02185f0303b", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dbc2466f09269dd86285b0f52a31360d087a379b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbc2466f09269dd86285b0f52a31360d087a379b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=dbc2466f09269dd86285b0f52a31360d087a379b", "patch": "@@ -5096,11 +5096,8 @@ impl<'a> Parser<'a> {\n             self.push_mod_path(id, outer_attrs);\n             try!(self.expect(&token::OpenDelim(token::Brace)));\n             let mod_inner_lo = self.span.lo;\n-            let old_owns_directory = self.owns_directory;\n-            self.owns_directory = true;\n             let attrs = try!(self.parse_inner_attributes());\n             let m = try!(self.parse_mod_items(&token::CloseDelim(token::Brace), mod_inner_lo));\n-            self.owns_directory = old_owns_directory;\n             self.pop_mod_path();\n             Ok((id, ItemKind::Mod(m), Some(attrs)))\n         }"}]}