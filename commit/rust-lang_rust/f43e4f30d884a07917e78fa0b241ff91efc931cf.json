{"sha": "f43e4f30d884a07917e78fa0b241ff91efc931cf", "node_id": "C_kwDOAAsO6NoAKGY0M2U0ZjMwZDg4NGEwNzkxN2U3OGZhMGIyNDFmZjkxZWZjOTMxY2Y", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-15T12:04:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-15T12:04:30Z"}, "message": "Auto merge of #9927 - xFrednet:0000-rustc-tool-macro-update, r=matthiaskrgr\n\nCleanup `rustc_tool_util` and add a convenient macro for `build.rs`\n\nchangelog: none\n<!-- changelog_checked -->\n\nIf possible, I'd like to have a new release for this, maybe `v0.3.0` to use the changes in another project. Then we can also remove the `path = \"./rustc_tools_util\"` from `Cargo.toml`. I'd be happy to help with the release on crates.io if you'd like the help :)\n\nr? `@matthiaskrgr`", "tree": {"sha": "7abc2402100335d0ac2be1a13fa4b9c257d38174", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7abc2402100335d0ac2be1a13fa4b9c257d38174"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f43e4f30d884a07917e78fa0b241ff91efc931cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f43e4f30d884a07917e78fa0b241ff91efc931cf", "html_url": "https://github.com/rust-lang/rust/commit/f43e4f30d884a07917e78fa0b241ff91efc931cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f43e4f30d884a07917e78fa0b241ff91efc931cf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be15e60d0042500595eb133e804a1ba8e6a4789e", "url": "https://api.github.com/repos/rust-lang/rust/commits/be15e60d0042500595eb133e804a1ba8e6a4789e", "html_url": "https://github.com/rust-lang/rust/commit/be15e60d0042500595eb133e804a1ba8e6a4789e"}, {"sha": "004b885c0afe34d6f8e6649f1faa8bbef656172c", "url": "https://api.github.com/repos/rust-lang/rust/commits/004b885c0afe34d6f8e6649f1faa8bbef656172c", "html_url": "https://github.com/rust-lang/rust/commit/004b885c0afe34d6f8e6649f1faa8bbef656172c"}], "stats": {"total": 115, "additions": 60, "deletions": 55}, "files": [{"sha": "4400f4c0aadb3b5f3c31d3491d5482612ed163e0", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f43e4f30d884a07917e78fa0b241ff91efc931cf/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f43e4f30d884a07917e78fa0b241ff91efc931cf/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=f43e4f30d884a07917e78fa0b241ff91efc931cf", "patch": "@@ -23,7 +23,7 @@ path = \"src/driver.rs\"\n [dependencies]\n clippy_lints = { path = \"clippy_lints\" }\n semver = \"1.0\"\n-rustc_tools_util = \"0.2.1\"\n+rustc_tools_util = \"0.3.0\"\n tempfile = { version = \"3.2\", optional = true }\n termize = \"0.1\"\n \n@@ -56,7 +56,7 @@ tokio = { version = \"1\", features = [\"io-util\"] }\n rustc-semver = \"1.1\"\n \n [build-dependencies]\n-rustc_tools_util = \"0.2.1\"\n+rustc_tools_util = \"0.3.0\"\n \n [features]\n deny-warnings = [\"clippy_lints/deny-warnings\"]"}, {"sha": "b79d09b0dd2d2776e98a4ae73de9c2884e722677", "filename": "build.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f43e4f30d884a07917e78fa0b241ff91efc931cf/build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f43e4f30d884a07917e78fa0b241ff91efc931cf/build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.rs?ref=f43e4f30d884a07917e78fa0b241ff91efc931cf", "patch": "@@ -3,17 +3,5 @@ fn main() {\n     println!(\"cargo:rustc-env=PROFILE={}\", std::env::var(\"PROFILE\").unwrap());\n     // Don't rebuild even if nothing changed\n     println!(\"cargo:rerun-if-changed=build.rs\");\n-    // forward git repo hashes we build at\n-    println!(\n-        \"cargo:rustc-env=GIT_HASH={}\",\n-        rustc_tools_util::get_commit_hash().unwrap_or_default()\n-    );\n-    println!(\n-        \"cargo:rustc-env=COMMIT_DATE={}\",\n-        rustc_tools_util::get_commit_date().unwrap_or_default()\n-    );\n-    println!(\n-        \"cargo:rustc-env=RUSTC_RELEASE_CHANNEL={}\",\n-        rustc_tools_util::get_channel()\n-    );\n+    rustc_tools_util::setup_version_info!();\n }"}, {"sha": "1b351da2e7bceecb8f1985da3ad0a2cfe772e563", "filename": "rustc_tools_util/CHANGELOG.md", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f43e4f30d884a07917e78fa0b241ff91efc931cf/rustc_tools_util%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/f43e4f30d884a07917e78fa0b241ff91efc931cf/rustc_tools_util%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2FCHANGELOG.md?ref=f43e4f30d884a07917e78fa0b241ff91efc931cf", "patch": "@@ -0,0 +1,6 @@\n+# Changelog\n+\n+## Version 0.3.0\n+\n+* Added `setup_version_info!();` macro for automated scripts.\n+* `get_version_info!()` no longer requires the user to import `rustc_tools_util::VersionInfo` and `std::env`"}, {"sha": "877049ae7d0ebd92d8d11d95698f89ded3698a93", "filename": "rustc_tools_util/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f43e4f30d884a07917e78fa0b241ff91efc931cf/rustc_tools_util%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f43e4f30d884a07917e78fa0b241ff91efc931cf/rustc_tools_util%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2FCargo.toml?ref=f43e4f30d884a07917e78fa0b241ff91efc931cf", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"rustc_tools_util\"\n-version = \"0.2.1\"\n+version = \"0.3.0\"\n description = \"small helper to generate version information for git packages\"\n repository = \"https://github.com/rust-lang/rust-clippy\"\n readme = \"README.md\""}, {"sha": "eefc661f96352e04d182fe016702674df122880f", "filename": "rustc_tools_util/README.md", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f43e4f30d884a07917e78fa0b241ff91efc931cf/rustc_tools_util%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/f43e4f30d884a07917e78fa0b241ff91efc931cf/rustc_tools_util%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2FREADME.md?ref=f43e4f30d884a07917e78fa0b241ff91efc931cf", "patch": "@@ -13,43 +13,39 @@ build = \"build.rs\"\n List rustc_tools_util as regular AND build dependency.\n ````toml\n [dependencies]\n-rustc_tools_util = \"0.2.1\"\n+rustc_tools_util = \"0.3.0\"\n \n [build-dependencies]\n-rustc_tools_util = \"0.2.1\"\n+rustc_tools_util = \"0.3.0\"\n ````\n \n In `build.rs`, generate the data in your `main()`\n-````rust\n+\n+```rust\n fn main() {\n-    println!(\n-        \"cargo:rustc-env=GIT_HASH={}\",\n-        rustc_tools_util::get_commit_hash().unwrap_or_default()\n-    );\n-    println!(\n-        \"cargo:rustc-env=COMMIT_DATE={}\",\n-        rustc_tools_util::get_commit_date().unwrap_or_default()\n-    );\n-    println!(\n-        \"cargo:rustc-env=RUSTC_RELEASE_CHANNEL={}\",\n-        rustc_tools_util::get_channel().unwrap_or_default()\n-    );\n+    rustc_tools_util::setup_version_info!();\n }\n-\n-````\n+```\n \n Use the version information in your main.rs\n-````rust\n-use rustc_tools_util::*;\n \n+```rust\n fn show_version() {\n     let version_info = rustc_tools_util::get_version_info!();\n     println!(\"{}\", version_info);\n }\n-````\n+```\n+\n This gives the following output in clippy:\n-`clippy 0.0.212 (a416c5e 2018-12-14)`\n+`clippy 0.1.66 (a28f3c8 2022-11-20)`\n+\n+## Repository\n+\n+This project is part of the rust-lang/rust-clippy repository. The source code\n+can be found under `./rustc_tools_util/`.\n \n+The changelog for `rustc_tools_util` is available under:\n+[`rustc_tools_util/CHANGELOG.md`](https://github.com/rust-lang/rust-clippy/blob/master/rustc_tools_util/CHANGELOG.md)\n \n ## License\n "}, {"sha": "4c1d8c3733df61b97582e3780118d9b2446b8de7", "filename": "rustc_tools_util/src/lib.rs", "status": "modified", "additions": 33, "deletions": 15, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/f43e4f30d884a07917e78fa0b241ff91efc931cf/rustc_tools_util%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f43e4f30d884a07917e78fa0b241ff91efc931cf/rustc_tools_util%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2Fsrc%2Flib.rs?ref=f43e4f30d884a07917e78fa0b241ff91efc931cf", "patch": "@@ -1,20 +1,20 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n \n-use std::env;\n-\n+/// This macro creates the version string during compilation from the\n+/// current environment\n #[macro_export]\n macro_rules! get_version_info {\n     () => {{\n-        let major = env!(\"CARGO_PKG_VERSION_MAJOR\").parse::<u8>().unwrap();\n-        let minor = env!(\"CARGO_PKG_VERSION_MINOR\").parse::<u8>().unwrap();\n-        let patch = env!(\"CARGO_PKG_VERSION_PATCH\").parse::<u16>().unwrap();\n-        let crate_name = String::from(env!(\"CARGO_PKG_NAME\"));\n+        let major = std::env!(\"CARGO_PKG_VERSION_MAJOR\").parse::<u8>().unwrap();\n+        let minor = std::env!(\"CARGO_PKG_VERSION_MINOR\").parse::<u8>().unwrap();\n+        let patch = std::env!(\"CARGO_PKG_VERSION_PATCH\").parse::<u16>().unwrap();\n+        let crate_name = String::from(std::env!(\"CARGO_PKG_NAME\"));\n \n-        let host_compiler = option_env!(\"RUSTC_RELEASE_CHANNEL\").map(str::to_string);\n-        let commit_hash = option_env!(\"GIT_HASH\").map(str::to_string);\n-        let commit_date = option_env!(\"COMMIT_DATE\").map(str::to_string);\n+        let host_compiler = std::option_env!(\"RUSTC_RELEASE_CHANNEL\").map(str::to_string);\n+        let commit_hash = std::option_env!(\"GIT_HASH\").map(str::to_string);\n+        let commit_date = std::option_env!(\"COMMIT_DATE\").map(str::to_string);\n \n-        VersionInfo {\n+        $crate::VersionInfo {\n             major,\n             minor,\n             patch,\n@@ -26,6 +26,24 @@ macro_rules! get_version_info {\n     }};\n }\n \n+/// This macro can be used in `build.rs` to automatically set the needed\n+/// environment values, namely `GIT_HASH`, `COMMIT_DATE` and\n+/// `RUSTC_RELEASE_CHANNEL`\n+#[macro_export]\n+macro_rules! setup_version_info {\n+    () => {{\n+        println!(\n+            \"cargo:rustc-env=GIT_HASH={}\",\n+            $crate::get_commit_hash().unwrap_or_default()\n+        );\n+        println!(\n+            \"cargo:rustc-env=COMMIT_DATE={}\",\n+            $crate::get_commit_date().unwrap_or_default()\n+        );\n+        println!(\"cargo:rustc-env=RUSTC_RELEASE_CHANNEL={}\", $crate::get_channel());\n+    }};\n+}\n+\n // some code taken and adapted from RLS and cargo\n pub struct VersionInfo {\n     pub major: u8,\n@@ -101,7 +119,7 @@ pub fn get_commit_date() -> Option<String> {\n \n #[must_use]\n pub fn get_channel() -> String {\n-    match env::var(\"CFG_RELEASE_CHANNEL\") {\n+    match std::env::var(\"CFG_RELEASE_CHANNEL\") {\n         Ok(channel) => channel,\n         Err(_) => {\n             // if that failed, try to ask rustc -V, do some parsing and find out\n@@ -136,8 +154,8 @@ mod test {\n     fn test_struct_local() {\n         let vi = get_version_info!();\n         assert_eq!(vi.major, 0);\n-        assert_eq!(vi.minor, 2);\n-        assert_eq!(vi.patch, 1);\n+        assert_eq!(vi.minor, 3);\n+        assert_eq!(vi.patch, 0);\n         assert_eq!(vi.crate_name, \"rustc_tools_util\");\n         // hard to make positive tests for these since they will always change\n         assert!(vi.commit_hash.is_none());\n@@ -147,7 +165,7 @@ mod test {\n     #[test]\n     fn test_display_local() {\n         let vi = get_version_info!();\n-        assert_eq!(vi.to_string(), \"rustc_tools_util 0.2.1\");\n+        assert_eq!(vi.to_string(), \"rustc_tools_util 0.3.0\");\n     }\n \n     #[test]\n@@ -156,7 +174,7 @@ mod test {\n         let s = format!(\"{vi:?}\");\n         assert_eq!(\n             s,\n-            \"VersionInfo { crate_name: \\\"rustc_tools_util\\\", major: 0, minor: 2, patch: 1 }\"\n+            \"VersionInfo { crate_name: \\\"rustc_tools_util\\\", major: 0, minor: 3, patch: 0 }\"\n         );\n     }\n }"}, {"sha": "bcc096c570e1b7013524d3b20048903cc3d85780", "filename": "src/driver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f43e4f30d884a07917e78fa0b241ff91efc931cf/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f43e4f30d884a07917e78fa0b241ff91efc931cf/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=f43e4f30d884a07917e78fa0b241ff91efc931cf", "patch": "@@ -19,7 +19,6 @@ extern crate rustc_span;\n use rustc_interface::interface;\n use rustc_session::parse::ParseSess;\n use rustc_span::symbol::Symbol;\n-use rustc_tools_util::VersionInfo;\n \n use std::borrow::Cow;\n use std::env;"}, {"sha": "7a78b32620d0bf41301fa50cf781b6a5c658bb45", "filename": "src/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f43e4f30d884a07917e78fa0b241ff91efc931cf/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f43e4f30d884a07917e78fa0b241ff91efc931cf/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=f43e4f30d884a07917e78fa0b241ff91efc931cf", "patch": "@@ -2,7 +2,6 @@\n // warn on lints, that are included in `rust-lang/rust`s bootstrap\n #![warn(rust_2018_idioms, unused_lifetimes)]\n \n-use rustc_tools_util::VersionInfo;\n use std::env;\n use std::path::PathBuf;\n use std::process::{self, Command};"}, {"sha": "c721e9969c9aa67497c32ab03d2510e6e6ecaf11", "filename": "tests/versioncheck.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f43e4f30d884a07917e78fa0b241ff91efc931cf/tests%2Fversioncheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f43e4f30d884a07917e78fa0b241ff91efc931cf/tests%2Fversioncheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fversioncheck.rs?ref=f43e4f30d884a07917e78fa0b241ff91efc931cf", "patch": "@@ -2,7 +2,6 @@\n #![warn(rust_2018_idioms, unused_lifetimes)]\n #![allow(clippy::single_match_else)]\n \n-use rustc_tools_util::VersionInfo;\n use std::fs;\n \n #[test]"}]}