{"sha": "ef6df7e814329e05e369c6e9ed2833571be2e75a", "node_id": "C_kwDOAAsO6NoAKGVmNmRmN2U4MTQzMjllMDVlMzY5YzZlOWVkMjgzMzU3MWJlMmU3NWE", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-19T17:41:08Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-19T17:41:08Z"}, "message": "Handle wrappers around dyn* in receiver types\n\nFixes #1324", "tree": {"sha": "591b5aa5f8933ff60005388e0513c6853630ff11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/591b5aa5f8933ff60005388e0513c6853630ff11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef6df7e814329e05e369c6e9ed2833571be2e75a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef6df7e814329e05e369c6e9ed2833571be2e75a", "html_url": "https://github.com/rust-lang/rust/commit/ef6df7e814329e05e369c6e9ed2833571be2e75a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef6df7e814329e05e369c6e9ed2833571be2e75a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e6dfba38392febcd2be1322a4f90455c1187067", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e6dfba38392febcd2be1322a4f90455c1187067", "html_url": "https://github.com/rust-lang/rust/commit/9e6dfba38392febcd2be1322a4f90455c1187067"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "8d922f220659c5065ce2fb554dfc3209e5b9de50", "filename": "scripts/test_rustc_tests.sh", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef6df7e814329e05e369c6e9ed2833571be2e75a/scripts%2Ftest_rustc_tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ef6df7e814329e05e369c6e9ed2833571be2e75a/scripts%2Ftest_rustc_tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftest_rustc_tests.sh?ref=ef6df7e814329e05e369c6e9ed2833571be2e75a", "patch": "@@ -113,8 +113,6 @@ rm tests/ui/simd/intrinsic/generic-reduction-pass.rs # simd_reduce_add_unordered\n rm tests/ui/simd/intrinsic/generic-as.rs # crash when accessing vector type filed (#1318)\n rm tests/ui/simd/simd-bitmask.rs # crash\n \n-rm tests/ui/dyn-star/dispatch-on-pin-mut.rs\n-\n # bugs in the test suite\n # ======================\n rm tests/ui/backtrace.rs # TODO warning"}, {"sha": "b7bfd8fd395264352a56413706579ffac91a393b", "filename": "src/vtable.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ef6df7e814329e05e369c6e9ed2833571be2e75a/src%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6df7e814329e05e369c6e9ed2833571be2e75a/src%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvtable.rs?ref=ef6df7e814329e05e369c6e9ed2833571be2e75a", "patch": "@@ -43,10 +43,29 @@ pub(crate) fn min_align_of_obj(fx: &mut FunctionCx<'_, '_, '_>, vtable: Value) -\n \n pub(crate) fn get_ptr_and_method_ref<'tcx>(\n     fx: &mut FunctionCx<'_, '_, 'tcx>,\n-    arg: CValue<'tcx>,\n+    mut arg: CValue<'tcx>,\n     idx: usize,\n ) -> (Pointer, Value) {\n     let (ptr, vtable) = 'block: {\n+        if let Abi::Scalar(_) = arg.layout().abi {\n+            'descend_newtypes: while !arg.layout().ty.is_unsafe_ptr()\n+                && !arg.layout().ty.is_region_ptr()\n+            {\n+                for i in 0..arg.layout().fields.count() {\n+                    let field = arg.value_field(fx, mir::Field::new(i));\n+                    if !field.layout().is_zst() {\n+                        // we found the one non-zero-sized field that is allowed\n+                        // now find *its* non-zero-sized field, or stop if it's a\n+                        // pointer\n+                        arg = field;\n+                        continue 'descend_newtypes;\n+                    }\n+                }\n+\n+                bug!(\"receiver has no non-zero-sized fields {:?}\", arg);\n+            }\n+        }\n+\n         if let ty::Ref(_, ty, _) = arg.layout().ty.kind() {\n             if ty.is_dyn_star() {\n                 let inner_layout = fx.layout_of(arg.layout().ty.builtin_deref(true).unwrap().ty);"}]}