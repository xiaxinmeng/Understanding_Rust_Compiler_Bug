{"sha": "0450cde37b70e7c32a2d5d359836b737c5fdc657", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NTBjZGUzN2I3MGU3YzMyYTJkNWQzNTk4MzZiNzM3YzVmZGM2NTc=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-08-16T20:55:26Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-08-16T21:12:06Z"}, "message": "Remove obsolete error message regarding do-blocks with internal iters\n\nWhen using a `do` block to call an internal iterator, if you forgot to\nreturn a value from the body, it would tell you\n\n    error: Do-block body must return bool, but returns () here. Perhaps\n    you meant to write a `for`-loop?\n\nThis advice no longer applies as `for` loops are now for external\niterators. Delete this message outright and let it use the default error\nmessage\n\n    error: mismatched types: expected `bool` but found `()`", "tree": {"sha": "dfb33488486de493a43e907cbdb7c905dcb8699c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfb33488486de493a43e907cbdb7c905dcb8699c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0450cde37b70e7c32a2d5d359836b737c5fdc657", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0450cde37b70e7c32a2d5d359836b737c5fdc657", "html_url": "https://github.com/rust-lang/rust/commit/0450cde37b70e7c32a2d5d359836b737c5fdc657", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0450cde37b70e7c32a2d5d359836b737c5fdc657/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "680eb71564ebba5e76ce1e1a8287b30042332cc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/680eb71564ebba5e76ce1e1a8287b30042332cc5", "html_url": "https://github.com/rust-lang/rust/commit/680eb71564ebba5e76ce1e1a8287b30042332cc5"}], "stats": {"total": 51, "additions": 1, "deletions": 50}, "files": [{"sha": "e6d54879181db6c137e2e5b809c6c27b7556feb7", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0450cde37b70e7c32a2d5d359836b737c5fdc657/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0450cde37b70e7c32a2d5d359836b737c5fdc657/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=0450cde37b70e7c32a2d5d359836b737c5fdc657", "patch": "@@ -942,15 +942,7 @@ impl FnCtxt {\n         if ty::type_is_error(e) || ty::type_is_error(a) {\n             return;\n         }\n-        match self.fn_kind {\n-            DoBlock if ty::type_is_bool(e) && ty::type_is_nil(a) =>\n-                // If we expected bool and got ()...\n-                    self.tcx().sess.span_err(sp, fmt!(\"Do-block body must \\\n-                        return %s, but returns () here. Perhaps you meant \\\n-                        to write a `for`-loop?\",\n-                        ppaux::ty_to_str(self.tcx(), e))),\n-            _ => self.infcx().report_mismatched_types(sp, e, a, err)\n-        }\n+        self.infcx().report_mismatched_types(sp, e, a, err)\n     }\n \n     pub fn report_mismatched_types(&self,"}, {"sha": "384b2cc843b0e17a0d5bfc1a9fae705bb988a249", "filename": "src/test/compile-fail/issue-2817.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/680eb71564ebba5e76ce1e1a8287b30042332cc5/src%2Ftest%2Fcompile-fail%2Fissue-2817.rs", "raw_url": "https://github.com/rust-lang/rust/raw/680eb71564ebba5e76ce1e1a8287b30042332cc5/src%2Ftest%2Fcompile-fail%2Fissue-2817.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2817.rs?ref=680eb71564ebba5e76ce1e1a8287b30042332cc5", "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use std::uint;\n-\n-fn uuid() -> uint { fail!(); }\n-\n-fn from_str(s: ~str) -> uint { fail!(); }\n-fn to_str(u: uint) -> ~str { fail!(); }\n-fn uuid_random() -> uint { fail!(); }\n-\n-fn main() {\n-    do range(0u, 100000).advance |_i| { //~ ERROR Do-block body must return bool, but\n-    };\n-    // should get a more general message if the callback\n-    // doesn't return nil\n-    do range(0u, 100000).advance |_i| { //~ ERROR mismatched types\n-        ~\"str\"\n-    };\n-}"}, {"sha": "bcd8e86d1d3bb18fb0e4a3e7a4fee6c76fca3e00", "filename": "src/test/compile-fail/issue-3651-2.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/680eb71564ebba5e76ce1e1a8287b30042332cc5/src%2Ftest%2Fcompile-fail%2Fissue-3651-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/680eb71564ebba5e76ce1e1a8287b30042332cc5/src%2Ftest%2Fcompile-fail%2Fissue-3651-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3651-2.rs?ref=680eb71564ebba5e76ce1e1a8287b30042332cc5", "patch": "@@ -1,14 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn main() {\n-    fn take_block(f: &fn() -> bool) -> bool { f() }\n-    do take_block {}; //~ ERROR Do-block body must return bool, but returns () here. Perhaps\n-}"}]}