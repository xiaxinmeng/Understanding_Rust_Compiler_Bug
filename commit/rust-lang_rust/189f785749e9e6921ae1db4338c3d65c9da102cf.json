{"sha": "189f785749e9e6921ae1db4338c3d65c9da102cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4OWY3ODU3NDllOWU2OTIxYWUxZGI0MzM4YzNkNjVjOWRhMTAyY2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-07T18:46:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-07T18:46:25Z"}, "message": "minor: standard snippet", "tree": {"sha": "3aec5f7ac38c5195c7b06ce75268f09a32e9e2b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3aec5f7ac38c5195c7b06ce75268f09a32e9e2b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/189f785749e9e6921ae1db4338c3d65c9da102cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/189f785749e9e6921ae1db4338c3d65c9da102cf", "html_url": "https://github.com/rust-lang/rust/commit/189f785749e9e6921ae1db4338c3d65c9da102cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/189f785749e9e6921ae1db4338c3d65c9da102cf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8da2ca3a189a3f9a422c38d0a26298dc0a9ce6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8da2ca3a189a3f9a422c38d0a26298dc0a9ce6f", "html_url": "https://github.com/rust-lang/rust/commit/a8da2ca3a189a3f9a422c38d0a26298dc0a9ce6f"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "aceab82d9b07559a5cbe56adb375504d0750eaae", "filename": "crates/rust-analyzer/build.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/189f785749e9e6921ae1db4338c3d65c9da102cf/crates%2Frust-analyzer%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/189f785749e9e6921ae1db4338c3d65c9da102cf/crates%2Frust-analyzer%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fbuild.rs?ref=189f785749e9e6921ae1db4338c3d65c9da102cf", "patch": "@@ -51,16 +51,23 @@ fn rev() -> String {\n }\n \n fn commit_hash() -> Option<String> {\n-    output_to_string(\"git rev-parse --short HEAD\")\n+    exec(\"git rev-parse --short HEAD\").ok()\n }\n \n fn build_date() -> Option<String> {\n-    output_to_string(\"date -u +%Y-%m-%d\")\n+    exec(\"date -u +%Y-%m-%d\").ok()\n }\n \n-fn output_to_string(command: &str) -> Option<String> {\n+fn exec(command: &str) -> std::io::Result<String> {\n     let args = command.split_ascii_whitespace().collect::<Vec<_>>();\n-    let output = Command::new(args[0]).args(&args[1..]).output().ok()?;\n-    let stdout = String::from_utf8(output.stdout).ok()?;\n-    Some(stdout.trim().to_string())\n+    let output = Command::new(args[0]).args(&args[1..]).output()?;\n+    if !output.status.success() {\n+        return Err(std::io::Error::new(\n+            std::io::ErrorKind::InvalidData,\n+            format!(\"command {:?} returned non-zero code\", command,),\n+        ));\n+    }\n+    let stdout = String::from_utf8(output.stdout)\n+        .map_err(|err| std::io::Error::new(std::io::ErrorKind::InvalidData, err))?;\n+    Ok(stdout.trim().to_string())\n }"}]}