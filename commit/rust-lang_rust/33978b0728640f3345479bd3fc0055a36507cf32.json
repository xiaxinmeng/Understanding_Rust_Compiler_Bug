{"sha": "33978b0728640f3345479bd3fc0055a36507cf32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzOTc4YjA3Mjg2NDBmMzM0NTQ3OWJkM2ZjMDA1NWEzNjUwN2NmMzI=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-10T05:29:13Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-10T07:54:52Z"}, "message": "Refactor `hir::lowering` API", "tree": {"sha": "0ed68d954a0e7610fe58f4a9cc7d26d7efcd2ff5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ed68d954a0e7610fe58f4a9cc7d26d7efcd2ff5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33978b0728640f3345479bd3fc0055a36507cf32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33978b0728640f3345479bd3fc0055a36507cf32", "html_url": "https://github.com/rust-lang/rust/commit/33978b0728640f3345479bd3fc0055a36507cf32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33978b0728640f3345479bd3fc0055a36507cf32/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3927ff4fecea17f56a57c59253afce3acdc89bec", "url": "https://api.github.com/repos/rust-lang/rust/commits/3927ff4fecea17f56a57c59253afce3acdc89bec", "html_url": "https://github.com/rust-lang/rust/commit/3927ff4fecea17f56a57c59253afce3acdc89bec"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "5ca99a7db67f5f9e48eec6230ad6d0a0551fa310", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/33978b0728640f3345479bd3fc0055a36507cf32/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33978b0728640f3345479bd3fc0055a36507cf32/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=33978b0728640f3345479bd3fc0055a36507cf32", "patch": "@@ -91,30 +91,33 @@ impl Resolver for DummyResolver {\n     }\n }\n \n-impl<'a> LoweringContext<'a> {\n-    pub fn new(id_assigner: &'a NodeIdAssigner,\n-               c: Option<&Crate>,\n-               resolver: &'a mut Resolver)\n-               -> LoweringContext<'a> {\n-        let crate_root = c.and_then(|c| {\n-            if std_inject::no_core(c) {\n-                None\n-            } else if std_inject::no_std(c) {\n-                Some(\"core\")\n-            } else {\n-                Some(\"std\")\n-            }\n-        });\n+pub fn lower_crate(krate: &Crate, id_assigner: &NodeIdAssigner, resolver: &mut Resolver)\n+                   -> hir::Crate {\n+    LoweringContext {\n+        crate_root: if std_inject::no_core(krate) {\n+            None\n+        } else if std_inject::no_std(krate) {\n+            Some(\"core\")\n+        } else {\n+            Some(\"std\")\n+        },\n+        id_assigner: id_assigner,\n+        parent_def: None,\n+        resolver: resolver,\n+    }.lower_crate(krate)\n+}\n \n+impl<'a> LoweringContext<'a> {\n+    pub fn testing_context(id_assigner: &'a NodeIdAssigner, resolver: &'a mut Resolver) -> Self {\n         LoweringContext {\n-            crate_root: crate_root,\n+            crate_root: None,\n             id_assigner: id_assigner,\n             parent_def: None,\n             resolver: resolver,\n         }\n     }\n \n-    pub fn lower_crate(&mut self, c: &Crate) -> hir::Crate {\n+    fn lower_crate(&mut self, c: &Crate) -> hir::Crate {\n         struct ItemLowerer<'lcx, 'interner: 'lcx> {\n             items: BTreeMap<NodeId, hir::Item>,\n             lctx: &'lcx mut LoweringContext<'interner>,"}, {"sha": "01e2b410c1b24b70161cf4bc25e2356443c5b766", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/33978b0728640f3345479bd3fc0055a36507cf32/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33978b0728640f3345479bd3fc0055a36507cf32/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=33978b0728640f3345479bd3fc0055a36507cf32", "patch": "@@ -37,7 +37,7 @@ use rustc_typeck as typeck;\n use rustc_privacy;\n use rustc_plugin::registry::Registry;\n use rustc_plugin as plugin;\n-use rustc::hir::lowering::LoweringContext;\n+use rustc::hir::lowering::lower_crate;\n use rustc_passes::{no_asm, loops, consts, rvalues, static_recursion};\n use rustc_const_eval::check_match;\n use super::Compilation;\n@@ -787,8 +787,7 @@ pub fn lower_and_resolve<'a>(sess: &Session,\n \n         // Lower ast -> hir.\n         let hir_forest = time(sess.time_passes(), \"lowering ast -> hir\", || {\n-            let krate = LoweringContext::new(sess, Some(krate), &mut resolver).lower_crate(krate);\n-            hir_map::Forest::new(krate, dep_graph)\n+            hir_map::Forest::new(lower_crate(krate, sess, &mut resolver), dep_graph)\n         });\n \n         (ty::CrateAnalysis {"}, {"sha": "2a847c4c19538c20f86447de3a8964e75761b566", "filename": "src/librustc_metadata/astencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33978b0728640f3345479bd3fc0055a36507cf32/src%2Flibrustc_metadata%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33978b0728640f3345479bd3fc0055a36507cf32/src%2Flibrustc_metadata%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fastencode.rs?ref=33978b0728640f3345479bd3fc0055a36507cf32", "patch": "@@ -1329,7 +1329,7 @@ fn mk_ctxt() -> parse::ParseSess {\n fn with_testing_context<T, F: FnOnce(&mut LoweringContext) -> T>(f: F) -> T {\n     let assigner = FakeNodeIdAssigner;\n     let mut resolver = DummyResolver;\n-    let mut lcx = LoweringContext::new(&assigner, None, &mut resolver);\n+    let mut lcx = LoweringContext::testing_context(&assigner, &mut resolver);\n     f(&mut lcx)\n }\n "}, {"sha": "44c3ded4a115a891611da3d639715bc84ad585e5", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33978b0728640f3345479bd3fc0055a36507cf32/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33978b0728640f3345479bd3fc0055a36507cf32/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=33978b0728640f3345479bd3fc0055a36507cf32", "patch": "@@ -28,7 +28,7 @@ use rustc::hir::map as hir_map;\n use rustc::session::{self, config};\n use rustc::session::config::{get_unstable_features_setting, OutputType};\n use rustc::session::search_paths::{SearchPaths, PathKind};\n-use rustc::hir::lowering::{LoweringContext, DummyResolver};\n+use rustc::hir::lowering::{lower_crate, DummyResolver};\n use rustc_back::dynamic_lib::DynamicLibrary;\n use rustc_back::tempdir::TempDir;\n use rustc_driver::{driver, Compilation};\n@@ -98,7 +98,7 @@ pub fn run(input: &str,\n     let defs = &RefCell::new(hir_map::collect_definitions(&krate));\n \n     let mut dummy_resolver = DummyResolver;\n-    let krate = LoweringContext::new(&sess, Some(&krate), &mut dummy_resolver).lower_crate(&krate);\n+    let krate = lower_crate(&krate, &sess, &mut dummy_resolver);\n \n     let opts = scrape_test_config(&krate);\n "}]}