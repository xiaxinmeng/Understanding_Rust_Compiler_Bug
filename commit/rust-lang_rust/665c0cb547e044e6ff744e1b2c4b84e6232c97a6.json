{"sha": "665c0cb547e044e6ff744e1b2c4b84e6232c97a6", "node_id": "C_kwDOAAsO6NoAKDY2NWMwY2I1NDdlMDQ0ZTZmZjc0NGUxYjJjNGI4NGU2MjMyYzk3YTY", "commit": {"author": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2023-05-06T13:59:03Z"}, "committer": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2023-05-06T14:00:04Z"}, "message": "Forward `Iterator::{count,last,nth}` for `IdxRange` random access", "tree": {"sha": "a65c783e29d10b4fbceb35ecf9dd9664ef414b86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a65c783e29d10b4fbceb35ecf9dd9664ef414b86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/665c0cb547e044e6ff744e1b2c4b84e6232c97a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/665c0cb547e044e6ff744e1b2c4b84e6232c97a6", "html_url": "https://github.com/rust-lang/rust/commit/665c0cb547e044e6ff744e1b2c4b84e6232c97a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/665c0cb547e044e6ff744e1b2c4b84e6232c97a6/comments", "author": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86eaf536004ef348df4b3490a81ccf16aeba440f", "url": "https://api.github.com/repos/rust-lang/rust/commits/86eaf536004ef348df4b3490a81ccf16aeba440f", "html_url": "https://github.com/rust-lang/rust/commit/86eaf536004ef348df4b3490a81ccf16aeba440f"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "63827e0ba964e5f18e0c6e3491c7c599cfe4da7b", "filename": "lib/la-arena/src/lib.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/665c0cb547e044e6ff744e1b2c4b84e6232c97a6/lib%2Fla-arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/665c0cb547e044e6ff744e1b2c4b84e6232c97a6/lib%2Fla-arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fla-arena%2Fsrc%2Flib.rs?ref=665c0cb547e044e6ff744e1b2c4b84e6232c97a6", "patch": "@@ -184,6 +184,24 @@ impl<T> Iterator for IdxRange<T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.range.size_hint()\n     }\n+\n+    fn count(self) -> usize\n+    where\n+        Self: Sized,\n+    {\n+        self.range.count()\n+    }\n+\n+    fn last(self) -> Option<Self::Item>\n+    where\n+        Self: Sized,\n+    {\n+        self.range.last().map(|raw| Idx::from_raw(raw.into()))\n+    }\n+\n+    fn nth(&mut self, n: usize) -> Option<Self::Item> {\n+        self.range.nth(n).map(|raw| Idx::from_raw(raw.into()))\n+    }\n }\n \n impl<T> DoubleEndedIterator for IdxRange<T> {"}]}