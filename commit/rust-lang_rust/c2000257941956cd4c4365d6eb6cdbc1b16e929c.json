{"sha": "c2000257941956cd4c4365d6eb6cdbc1b16e929c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMDAwMjU3OTQxOTU2Y2Q0YzQzNjVkNmViNmNkYmMxYjE2ZTkyOWM=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-02-21T22:07:29Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-02-22T10:09:21Z"}, "message": "Fix shift_bound_vars\n\nIt should only shift free vars (maybe the name isn't the best...)", "tree": {"sha": "a27ef5bdc8452e89d44255cee8999df8477e136a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a27ef5bdc8452e89d44255cee8999df8477e136a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2000257941956cd4c4365d6eb6cdbc1b16e929c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2000257941956cd4c4365d6eb6cdbc1b16e929c", "html_url": "https://github.com/rust-lang/rust/commit/c2000257941956cd4c4365d6eb6cdbc1b16e929c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2000257941956cd4c4365d6eb6cdbc1b16e929c/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "463df6720cc8d2c7176a48a0ca8f4e333016a16a", "url": "https://api.github.com/repos/rust-lang/rust/commits/463df6720cc8d2c7176a48a0ca8f4e333016a16a", "html_url": "https://github.com/rust-lang/rust/commit/463df6720cc8d2c7176a48a0ca8f4e333016a16a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "182f847f1756c21d6b279aa6acb71804ab1373f5", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c2000257941956cd4c4365d6eb6cdbc1b16e929c/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2000257941956cd4c4365d6eb6cdbc1b16e929c/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=c2000257941956cd4c4365d6eb6cdbc1b16e929c", "patch": "@@ -814,13 +814,13 @@ pub trait TypeWalk {\n     where\n         Self: Sized,\n     {\n-        self.fold(&mut |ty| match ty {\n-            Ty::Bound(idx) => {\n+        self.fold_binders(&mut |ty, binders| match ty {\n+            Ty::Bound(idx) if idx as usize >= binders => {\n                 assert!(idx as i32 >= -n);\n                 Ty::Bound((idx as i32 + n) as u32)\n             }\n             ty => ty,\n-        })\n+        }, 0)\n     }\n }\n "}]}