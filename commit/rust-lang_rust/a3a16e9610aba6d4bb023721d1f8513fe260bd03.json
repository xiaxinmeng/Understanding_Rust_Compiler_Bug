{"sha": "a3a16e9610aba6d4bb023721d1f8513fe260bd03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYTE2ZTk2MTBhYmE2ZDRiYjAyMzcyMWQxZjg1MTNmZTI2MGJkMDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-07T08:32:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-07T08:32:46Z"}, "message": "auto merge of #20620 : brson/rust/relnotes, r=huonw\n\nA whole lot happened this cycle. I tried to highlight the best stuff. Please review and note important stuff I'm missing or foolish mistakes.", "tree": {"sha": "d40a2184820fd833456b80d0c0dd624a6a5d9be5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d40a2184820fd833456b80d0c0dd624a6a5d9be5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3a16e9610aba6d4bb023721d1f8513fe260bd03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3a16e9610aba6d4bb023721d1f8513fe260bd03", "html_url": "https://github.com/rust-lang/rust/commit/a3a16e9610aba6d4bb023721d1f8513fe260bd03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3a16e9610aba6d4bb023721d1f8513fe260bd03/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e4e524e0eb17c8f463e731f23b544003e8709c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e4e524e0eb17c8f463e731f23b544003e8709c6", "html_url": "https://github.com/rust-lang/rust/commit/9e4e524e0eb17c8f463e731f23b544003e8709c6"}, {"sha": "9d8de1f42c1fa8cf16bcfa61e9cea0783157d642", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d8de1f42c1fa8cf16bcfa61e9cea0783157d642", "html_url": "https://github.com/rust-lang/rust/commit/9d8de1f42c1fa8cf16bcfa61e9cea0783157d642"}], "stats": {"total": 349, "additions": 332, "deletions": 17}, "files": [{"sha": "bc8dbc878baa3a0f59f3a5276866d2e726ecd990", "filename": "AUTHORS.txt", "status": "modified", "additions": 148, "deletions": 15, "changes": 163, "blob_url": "https://github.com/rust-lang/rust/blob/a3a16e9610aba6d4bb023721d1f8513fe260bd03/AUTHORS.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a3a16e9610aba6d4bb023721d1f8513fe260bd03/AUTHORS.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/AUTHORS.txt?ref=a3a16e9610aba6d4bb023721d1f8513fe260bd03", "patch": "@@ -1,17 +1,25 @@\n Rust was written by these fine people:\n \n+A.J. Gardner <mrhota@users.noreply.github.com>\n+Aaron Friel <mayreply@aaronfriel.com>\n Aaron Laursen <aaronlaursen@gmail.com>\n+Aaron Liblong <liblonga@physics.utoronto.ca>\n Aaron Raimist <aaron@aaronraimist.com>\n Aaron Todd <github@opprobrio.us>\n Aaron Turon <aturon@mozilla.com>\n+Aaron Weiss <aaronweiss74@gmail.com>\n Adam Bozanich <adam.boz@gmail.com>\n+Adam Szkoda <adaszko@gmail.com>\n Adolfo Ochagav\u00eda <aochagavia92@gmail.com>\n Adrien Brault <adrien.brault@gmail.com>\n Adrien T\u00e9tar <adri-from-59@hotmail.fr>\n Ahmed Charles <ahmedcharles@gmail.com>\n+Aidan Cully <github@aidan.users.panix.com>\n+Akos Kiss <akiss@inf.u-szeged.hu>\n Alan Andrade <alan.andradec@gmail.com>\n Alan Williams <mralert@gmail.com>\n Aleksander Balicki <balicki.aleksander@gmail.com>\n+Aleksandr Koshlo <sash7ko@gmail.com>\n Alex Crichton <alex@alexcrichton.com>\n Alex Gaynor <alex.gaynor@gmail.com>\n Alex Lyon <arcterus@mail.com>\n@@ -30,55 +38,62 @@ Aljaz\u030c \"g5pw\" Srebrnic\u030c <a2piratesoft@gmail.com>\n Amy Unger <amy.e.unger@gmail.com>\n Anders Kaseorg <andersk@mit.edu>\n Andre Arko <andre@arko.net>\n+Andrea Canciani <ranma42@gmail.com>\n Andreas Gal <gal@mozilla.com>\n Andreas Martens <andreasm@fastmail.fm>\n Andreas Neuhaus <zargony@zargony.com>\n Andreas Ots <andreasots@gmail.com>\n Andreas Tolfsen <ato@mozilla.com>\n Andrei Formiga <archimedes_siracusa@hotmail.com>\n+Andrew Cann <shum@canndrew.org>\n Andrew Chin <achin@eminence32.net>\n Andrew Dunham <andrew@du.nham.ca>\n Andrew Gallant <jamslam@gmail.com>\n Andrew Paseltiner <apaseltiner@gmail.com>\n Andrew Poelstra <asp11@sfu.ca>\n+Andrew Wagner <drewm1980@gmail.com>\n Angus Lees <gus@inodes.org>\n Anthony Juckel <ajuckel@gmail.com>\n-Anton Lofgren <alofgren@op5.com>\n Anton L\u00f6fgren <anton.lofgren@gmail.com>\n Arcterus <Arcterus@mail.com>\n-Ariel Ben-Yehuda <arielb1@mail.tau.ac.il>\n+Ariel Ben-Yehuda <ariel.byd@gmail.com>\n Arjan Topolovec <arjan.top@gmail.com>\n Arkaitz Jimenez <arkaitzj@gmail.com>\n Armin Ronacher <armin.ronacher@active-4.com>\n Arpad Borsos <arpad.borsos@googlemail.com>\n+Artem <artemciy@gmail.com>\n+Arthur Liao <arthurtw8@gmail.com>\n Ashok Gautham <ScriptDevil@gmail.com>\n Austin Bonander <austin.bonander@gmail.com>\n Austin King <shout@ozten.com>\n Austin Seipp <mad.one@gmail.com>\n Axel Viala <axel.viala@darnuria.eu>\n Aydin Kim <ladinjin@hanmail.net>\n+Barosl Lee <vcs@barosl.com>\n Ben Alpert <ben@benalpert.com>\n Ben Blum <bblum@andrew.cmu.edu>\n+Ben Foppa <benjamin.foppa@gmail.com>\n Ben Gamari <bgamari.foss@gmail.com>\n Ben Harris <mail@bharr.is>\n Ben Kelly <ben@wanderview.com>\n Ben Noordhuis <info@bnoordhuis.nl>\n+Ben S <ogham@bsago.me>\n Ben Striegel <ben.striegel@gmail.com>\n Benjamin Adamson <adamson.benjamin@gmail.com>\n Benjamin Herr <ben@0x539.de>\n Benjamin Jackman <ben@jackman.biz>\n Benjamin Kircher <benjamin.kircher@gmail.com>\n Benjamin Peterson <benjamin@python.org>\n-Bheesham Persaud <bheesham.persaud@live.ca>\n+Bheesham Persaud <bheesham123@hotmail.com>\n Bilal Husain <bilal@bilalhusain.com>\n Bill Fallon <bill.fallon@robos.li>\n Bill Myers <bill_myers@outlook.com>\n Bill Wendling <wendling@apple.com>\n Birunthan Mohanathas <birunthan@mohanathas.com>\n Bj\u00f6rn Steinbrink <bsteinbr@gmail.com>\n-Boris Egorov <jightuse@gmail.com>\n+Boris Egorov <egorov@linux.com>\n Bouke van der Bijl <boukevanderbijl@gmail.com>\n-Brandon Sanderson <singingboyo@hotmail.com>\n+Brandon Sanderson <singingboyo@gmail.com>\n Brandon Waskiewicz <brandon.waskiewicz@gmail.com>\n Branimir <branimir@volomp.com>\n Brendan Cully <brendan@kublai.com>\n@@ -88,6 +103,7 @@ Brendan Zabarauskas <bjzaba@yahoo.com.au>\n Brett Cannon <brett@python.org>\n Brian Anderson <banderson@mozilla.com>\n Brian Dawn <brian.t.dawn@gmail.com>\n+Brian J Brennan <brianloveswords@gmail.com>\n Brian J. Burg <burg@cs.washington.edu>\n Brian Koropoff <bkoropoff@gmail.com>\n Brian Leibig <brian.leibig@gmail.com>\n@@ -99,9 +115,10 @@ Caitlin Potter <snowball@defpixel.com>\n Cameron Zwarich <zwarich@mozilla.com>\n Carl-Anton Ingmarsson <mail@carlanton.se>\n Carlos <toqueteos@gmail.com>\n-Carol Nichols <carol.nichols@gmail.com>\n+Carol Nichols <cnichols@thinkthroughmath.com>\n Carol Willing <carolcode@willingconsulting.com>\n Carter Tazio Schonwald <carter.schonwald@gmail.com>\n+Chase Southwood <chase.southwood@gmail.com>\n Chris Double <chris.double@double.co.nz>\n Chris Morgan <me@chrismorgan.info>\n Chris Nixon <chris.nixon@sigma.me.uk>\n@@ -116,6 +133,7 @@ Christopher Kendell <ckendell@outlook.com>\n Chuck Ries <chuck.ries@gmail.com>\n Clark Gaebel <cg.wowus.cg@gmail.com>\n Clinton Ryan <clint.ryan3@gmail.com>\n+Cody P Schafer <dev@codyps.com>\n Cody Schroeder <codys@cs.washington.edu>\n Cole Mickens <cole.mickens@gmail.com>\n Colin Davidson <colrdavidson@gmail.com>\n@@ -124,6 +142,7 @@ Conrad Kleinespel <conradk@conradk.com>\n Corey Farwell <coreyf+rust@rwell.org>\n Corey Ford <corey@coreyford.name>\n Corey Richardson <corey@octayn.net>\n+Cristi Burc\u0103 <scribu@gmail.com>\n DJUrsus <colinvh@divitu.com>\n Damian Gryski <damian@gryski.com>\n Damien Grassart <damien@grassart.com>\n@@ -159,9 +178,11 @@ Derecho <derecho@sector5d.org>\n Derek Chiang <derekchiang93@gmail.com>\n Derek Guenther <dguenther9@gmail.com>\n Derek Harland <derek.harland@finq.co.nz>\n+Diego Giagio <diego@giagio.com>\n Diego Ongaro <ongaro@cs.stanford.edu>\n Diggory Hardy <diggory.hardy@gmail.com>\n Dimitri Krassovski <labria@startika.com>\n+Dirk Gadsden <dirk@esherido.com>\n Dirk Leifeld <leifeld@posteo.de>\n Dirkjan Bussink <d.bussink@gmail.com>\n Div Shekhar <div@pagerduty.com>\n@@ -174,6 +195,7 @@ Douglas Young <rcxdude@gmail.com>\n Drew Willcoxon <adw@mozilla.com>\n Dylan Braithwaite <dylanbraithwaite1@gmail.com>\n Dzmitry Malyshau <kvarkus@gmail.com>\n+Earl St Sauver <estsauver@gmail.com>\n Eduard Bopp <eduard.bopp@aepsil0n.de>\n Eduard Burtescu <edy.burt@gmail.com>\n Eduardo Bautista <me@eduardobautista.com>\n@@ -183,22 +205,26 @@ Ehsanul Hoque <ehsanul@ehsanul.com>\n Elliott Slaughter <elliottslaughter@gmail.com>\n Elly Fong-Jones <elly@leptoquark.net>\n Emanuel Rylke <ema-fox@web.de>\n+Eric Allen <ericpallen@gmail.com>\n Eric Biggers <ebiggers3@gmail.com>\n Eric Holk <eric.holk@gmail.com>\n Eric Holmes <eric@ejholmes.net>\n+Eric Kidd <git@randomhacks.net>\n Eric Martin <e.a.martin1337@gmail.com>\n Eric Reed <ecreed@cs.washington.edu>\n Erick Tryzelaar <erick.tryzelaar@gmail.com>\n Erik Lyon <elyon001@local.fake>\n Erik Price <erik.price16@gmail.com>\n Erik Rose <erik@mozilla.com>\n+Erwan <erwan.ricq@gmail.com>\n Etienne Millon <me@emillon.org>\n Eunchong Yu <kroisse@gmail.com>\n Evan Klitzke <evan@eklitzke.org>\n Evan McClanahan <evan@evanmcc.com>\n Evgeny Sologubov\n Fabian Deutsch <fabian.deutsch@gmx.de>\n Fabrice Desr\u00e9 <fabrice@desre.org>\n+FakeKane <andrewyli@gmail.com>\n Falco Hirschenberger <falco.hirschenberger@gmail.com>\n Fedor Indutny <fedor.indutny@gmail.com>\n Felix Crux <felixc@felixcrux.com>\n@@ -209,6 +235,7 @@ Flavio Percoco <flaper87@gmail.com>\n Florian Gilcher <florian.gilcher@asquera.de>\n Florian Hahn <flo@fhahn.com>\n Florian Hartwig <florian.j.hartwig@gmail.com>\n+Florian Wilkens <floya@live.de>\n Florian Zeitz <florob@babelmonkeys.de>\n Francisco Souza <f@souza.cc>\n Franklin Chen <franklinchen@franklinchen.com>\n@@ -221,10 +248,12 @@ Geoff Hill <geoff@geoffhill.org>\n Geoffroy Couprie <geo.couprie@gmail.com>\n George Papanikolaou <g3orge.app@gmail.com>\n Georges Dubus <georges.dubus@gmail.com>\n+Gil Cottle <rc@redtown.org>\n Gioele Barabucci <gioele@svario.it>\n+Gleb Kozyrev <gleb@gkoz.com>\n Glenn Willen <gwillen@nerdnet.org>\n Gon\u00e7alo Cabrita <_@gmcabrita.com>\n-Graham Fawcett <fawcett@uwindsor.ca>\n+Graham Fawcett <graham.fawcett@gmail.com>\n Grahame Bowland <grahame@angrygoats.net>\n Graydon Hoare <graydon@mozilla.com>\n Grigoriy <ohaistarlight@gmail.com>\n@@ -242,6 +271,7 @@ Hong Chulju <ang0123dev@gmail.com>\n Honza Strnad <hanny.strnad@gmail.com>\n Hugo Jobling <hello@thisishugo.com>\n Huon Wilson <dbau.pp+github@gmail.com>\n+Ian Connolly <iconnolly@mozilla.com>\n Ian D. Bollinger <ian.bollinger@gmail.com>\n Ian Daniher <it.daniher@gmail.com>\n Igor Bukanov <igor@mir2.org>\n@@ -251,31 +281,39 @@ Isaac Aggrey <isaac.aggrey@gmail.com>\n Isaac Dupree <antispam@idupree.com>\n Ivan Enderlin <ivan.enderlin@hoa-project.net>\n Ivan Petkov <ivanppetkov@gmail.com>\n+Ivan Ukhov <ivan.ukhov@gmail.com>\n Ivano Coppola <rgbfirefox@gmail.com>\n J. J. Weber <jjweber@gmail.com>\n J.C. Moyer <jmoyer1992@gmail.com>\n+JONNALAGADDA Srinivas <js@ojuslabs.com>\n Jack Heizer <jack.heizer@gmail.com>\n Jack Moffitt <jack@metajack.im>\n+Jacob Edelman <edelman.jd@gmail.com>\n Jacob Harris Cryer Kragh <jhckragh@gmail.com>\n Jacob Hegna <jacobhegna@gmail.com>\n Jacob Parker <j3parker@csclub.uwaterloo.ca>\n Jaemin Moon <jaemin.moon@samsung.com>\n Jag Talon <talon.jag@gmail.com>\n+Jake Goulding <jake.goulding@gmail.com>\n Jake Kaufman <theevocater@gmail.com>\n Jake Kerr <kodafox@gmail.com>\n Jake Scott <jake.net@gmail.com>\n+Jakub Bukaj <jakub@jakub.cc>\n Jakub Wieczorek <jakubw@jakubw.net>\n James Deng <cnjamesdeng@gmail.com>\n James Hurst <jamesrhurst@users.noreply.github.com>\n James Lal <james@lightsofapollo.com>\n James Laverack <james@jameslaverack.com>\n-James Miller <bladeon@gmail.com>\n+James Miller <james@aatch.net>\n James Rowe <jroweboy@gmail.com>\n James Sanders <sanderjd@gmail.com>\n James Tranovich <james@openhorizonlabs.com>\n Jan Kobler <eng1@koblersystems.de>\n Jan Niklas Hasse <jhasse@gmail.com>\n Jannis Harder <jix@jixco.de>\n+Jared Roesch <roeschinc@gmail.com>\n+Jarod Liu <liuyuanzhi@gmail.com>\n+Jashank Jeremy <jashank@rulingia.com>\n Jason Fager <jfager@gmail.com>\n Jason Orendorff <jorendorff@mozilla.com>\n Jason Thompson <jason@jthompson.ca>\n@@ -287,7 +325,9 @@ Jed Estep <aje@jhu.edu>\n Jeff Balogh <jbalogh@mozilla.com>\n Jeff Muizelaar <jmuizelaar@mozilla.com>\n Jeff Olson <olson.jeffery@gmail.com>\n+Jeff Parsons <jeffdougson@gmail.com>\n Jeffrey Yasskin <jyasskin@gmail.com>\n+Jelte Fennema <github-tech@jeltef.nl>\n Jens Nockert <jens@nockert.se>\n Jeong YunWon <jeong@youknowone.org>\n Jeremy Letang <letang.jeremy@gmail.com>\n@@ -296,36 +336,45 @@ Jesse Luehrs <doy@tozt.net>\n Jesse Ray <jesse@localhost.localdomain>\n Jesse Ruderman <jruderman@gmail.com>\n Jihyun Yu <jihyun@nclab.kaist.ac.kr>\n+Jim Apple <jbapple+rust@google.com>\n Jim Blandy <jimb@red-bean.com>\n Jim Radford <radford@blackbean.org>\n Jimmie Elvenmark <flugsio@gmail.com>\n Jimmy Lu <jimmy.lu.2011@gmail.com>\n Jimmy Zelinskie <jimmyzelinskie@gmail.com>\n Joe Pletcher <joepletcher@gmail.com>\n Joe Schafer <joe@jschaf.com>\n+Johannes Hoff <johshoff@gmail.com>\n Johannes L\u00f6thberg <johannes@kyriasis.com>\n Johannes Muenzel <jmuenzel@gmail.com>\n+John Albietz <inthecloud247@gmail.com>\n John Barker <jebarker@gmail.com>\n John Clements <clements@racket-lang.org>\n John Fresco <john.fresco@utah.edu>\n John Gallagher <jgallagher@bignerdranch.com>\n+John Kleint <jk@hinge.co>\n John K\u00e5re Alsaker <john.kare.alsaker@gmail.com>\n John Louis Walker <injyuw@gmail.com>\n John Schmidt <john.schmidt.h@gmail.com>\n John Simon <john@johnsoft.com>\n+Jon Haddad <jon@jonhaddad.com>\n Jon Morton <jonanin@gmail.com>\n Jonas Hietala <tradet.h@gmail.com>\n Jonathan Bailey <jbailey@mozilla.com>\n Jonathan Boyett <jonathan@failingservers.com>\n Jonathan Reem <jonathan.reem@gmail.com>\n Jonathan S <gereeter@gmail.com>\n Jonathan Sternberg <jonathansternberg@gmail.com>\n+Joonas Javanainen <joonas.javanainen@gmail.com>\n Jordi Boggiano <j.boggiano@seld.be>\n-Jorge Aparicio <japaric@linux.com>\n+Jorge Aparicio <japaricious@gmail.com>\n Joris Rehm <joris.rehm@wakusei.fr>\n Joseph Crail <jbcrail@gmail.com>\n Joseph Martin <pythoner6@gmail.com>\n+Joseph Rushton Wakeling <joe@webdrake.net>\n+Josh Haberman <jhaberman@gmail.com>\n Josh Matthews <josh@joshmatthews.net>\n+Josh Stone <cuviper@gmail.com>\n Joshua Clark <joshua.clark@txstate.edu>\n Joshua Wise <joshua@joshuawise.com>\n Joshua Yanovski <pythonesque@gmail.com>\n@@ -336,9 +385,11 @@ JustAPerson <jpriest8@ymail.com>\n Justin Noah <justinnoah@gmail.com>\n Jyun-Yan You <jyyou.tw@gmail.com>\n Kang Seonghoon <kang.seonghoon@mearie.org>\n+Kang Seonghoon <public+git@mearie.org>\n Kasey Carrothers <kaseyc.808@gmail.com>\n Keegan McAllister <kmcallister@mozilla.com>\n Kelly Wilson <wilsonk@cpsc.ucalgary.ca>\n+Ken Tossell <ken@tossell.net>\n Keshav Kini <keshav.kini@gmail.com>\n Kevin Atkinson <kevina@cs.utah.edu>\n Kevin Ballard <kevin@sb.org>\n@@ -347,9 +398,11 @@ Kevin Cantu <me@kevincantu.org>\n Kevin Mehall <km@kevinmehall.net>\n Kevin Murphy <kemurphy.cmu@gmail.com>\n Kevin Walter <kevin.walter.private@googlemail.com>\n+Kevin Yap <me@kevinyap.ca>\n Kiet Tran <ktt3ja@gmail.com>\n Kyeongwoon Lee <kyeongwoon.lee@samsung.com>\n Lars Bergstrom <lbergstrom@mozilla.com>\n+Laurence Tratt <laurie@tratt.net>\n Laurent Bonnans <bonnans.l@gmail.com>\n Lawrence Vela\u0301zquez <larryv@alum.mit.edu>\n Leah Hanson <astrieanna@gmail.com>\n@@ -359,8 +412,10 @@ Lennart Kudling <github@kudling.de>\n Le\u0301o Testard <leo.testard@gmail.com>\n Liigo Zhuang <com.liigo@gmail.com>\n Lindsey Kuper <lindsey@composition.al>\n+Lionel Flandrin <lionel.flandrin@parrot.com>\n Luca Bruno <lucab@debian.org>\n Luis de Bethencourt <luis@debethencourt.com>\n+Luke Metz <luke.metz@students.olin.edu>\n Luqman Aden <me@luqman.ca>\n Magnus Auvinen <magnus.auvinen@gmail.com>\n Mahmut Bulut <mahmutbulut0@gmail.com>\n@@ -373,17 +428,23 @@ Mark Lacey <641@rudkx.com>\n Mark Rowe <mrowe@bdash.net.nz>\n Mark Sinclair <mark.edward.x@gmail.com>\n Mark Vian <mrv.caseus@gmail.com>\n+Markus Siemens <siemens1993@gmail.com>\n Markus Unterwaditzer <markus@unterwaditzer.net>\n Marti Raudsepp <marti@juffo.org>\n Martin DeMello <martindemello@gmail.com>\n Martin Olsson <martin@minimum.se>\n+Martin Pool <mbp@sourcefrog.net>\n Marvin L\u00f6bel <loebel.marvin@gmail.com>\n Matej Lach <matej.lach@gmail.com>\n Mateusz Czapli\u0144ski <czapkofan@gmail.com>\n+Mathieu Poumeyrol <kali@zoy.org>\n Mathijs van de Nes <git@mathijs.vd-nes.nl>\n Matt Brubeck <mbrubeck@limpet.net>\n Matt Carberry <carberry.matt@gmail.com>\n Matt Coffin <mcoffin13@gmail.com>\n+Matt McPherrin <git@mcpherrin.ca>\n+Matt Murphy <matthew.john.murphy@gmail.com>\n+Matt Windsor <mattwindsor@btinternet.com>\n Matthew Auld <matthew.auld@intel.com>\n Matthew Iselin <matthew@theiselins.net>\n Matthew McPherrin <matthew@mcpherrin.ca>\n@@ -393,13 +454,17 @@ Matthijs Hofstra <thiezz@gmail.com>\n Matthijs van der Vleuten <git@zr40.nl>\n Max Penet <max.penet@gmail.com>\n Maxim Kolganov <kolganov.mv@gmail.com>\n+Maxime Quandalle <maxime@quandalle.com>\n+Maximilian Haack <mxhaack@gmail.com>\n+Maya Nitu <maya_nitu@yahoo.com>\n Meyer S. Jacobs <meyermagic@gmail.com>\n Micah Chalmer <micah@micahchalmer.net>\n Michael Arntzenius <daekharel@gmail.com>\n Michael Bebenita <mbebenita@mozilla.com>\n Michael Dagitses <dagitses@google.com>\n Michael Darakananda <pongad@gmail.com>\n Michael Fairley <michaelfairley@gmail.com>\n+Michael Gehring <mg@ebfe.org>\n Michael Kainer <kaini1123@gmail.com>\n Michael Letterle <michael.letterle@gmail.com>\n Michael Matuzak <mmatuzak@gmail.com>\n@@ -415,19 +480,28 @@ Mick Koch <kchmck@gmail.com>\n Micka\u00ebl Delahaye <mickael.delahaye@gmail.com>\n Mihnea Dobrescu-Balaur <mihnea@linux.com>\n Mike Boutin <mike.boutin@gmail.com>\n+Mike Dilger <mike@efx.co.nz>\n+Mike Pedersen <noctune9@gmail.com>\n Mike Robinson <mikeprobinsonuk@gmail.com>\n Mikko Perttunen <cyndis@kapsi.fi>\n Ms2ger <ms2ger@gmail.com>\n Mukilan Thiagarajan <mukilanthiagarajan@gmail.com>\n+Mukilan Thiyagarajan <mukilanthiagarajan@gmail.com>\n+Murarth <murarth@gmail.com>\n NODA, Kai <nodakai@gmail.com>\n+Nafis <nhoss2@gmail.com>\n Nathan Froyd <froydnj@gmail.com>\n Nathan Typanski <ntypanski@gmail.com>\n+Nathan Zadoks <nathan@nathan7.eu>\n Nathaniel Herman <nherman@college.harvard.edu>\n+Neil Pankey <npankey@gmail.com>\n NiccosSystem <niccossystem@gmail.com>\n+Nicholas Bishop <nicholasbishop@gmail.com>\n Nick Cameron <ncameron@mozilla.com>\n Nick Desaulniers <ndesaulniers@mozilla.com>\n Nick Howell <howellnick@gmail.com>\n Nicolas Silva <nical.silva@gmail.com>\n+Niels Egberts <git@nielsegberts.nl>\n Niels langager Ellegaard <niels.ellegaard@gmail.com>\n Nif Ward <nif.ward@gmail.com>\n Nikita Pekin <contact@nikitapek.in>\n@@ -437,6 +511,7 @@ Noam Yorav-Raphael <noamraph@gmail.com>\n Noufal Ibrahim <noufal@nibrahim.net.in>\n O S K Chaitanya <osk@medhas.org>\n OGINO Masanori <masanori.ogino@gmail.com>\n+Oliver Schneider <oliver.schneider@kit.edu>\n Olivier Saut <osaut@airpost.net>\n Olle Jonsson <olle.jonsson@gmail.com>\n Or Brostovski <tohava@gmail.com>\n@@ -446,28 +521,33 @@ P1start <rewi-github@whanau.org>\n Pablo Brasero <pablo@pablobm.com>\n Palmer Cox <p@lmercox.com>\n Paolo Falabella <paolo.falabella@gmail.com>\n+Pascal Hertleif <killercup@gmail.com>\n Patrick Reisert <kpreisert@gmail.com>\n Patrick Walton <pcwalton@mimiga.net>\n Patrick Yevsukov <patrickyevsukov@users.noreply.github.com>\n Patrik K\u00e5rlin <patrik.karlin@gmail.com>\n-Paul Collins <paul@ondioline.org>\n+Paul Collier <paul@paulcollier.ca>\n Paul Stansifer <paul.stansifer@gmail.com>\n Paul Woolcock <pwoolcoc+github@gmail.com>\n Pavel Panchekha <me@pavpanchekha.com>\n Pawel Olzacki <p.olzacki2@samsung.com>\n+Pedro Larroy <pedro.larroy@here.com>\n Peer Aramillo Irizar <peer.aramillo.irizar@gmail.com>\n Peter Atashian <retep998@gmail.com>\n+Peter Elmers <peter.elmers@yahoo.com>\n Peter Hull <peterhull90@gmail.com>\n Peter Marheine <peter@taricorp.net>\n Peter Williams <peter@newton.cx>\n Peter Zotov <whitequark@whitequark.org>\n Petter Remen <petter.remen@gmail.com>\n-Phil Dawes <phil@phildawes.net>\n+Phil Dawes <pdawes@drw.com>\n Phil Ruffwind <rf@rufflewind.com>\n+Philip Munksgaard <pmunksgaard@gmail.com>\n Philipp Br\u00fcschweiler <blei42@gmail.com>\n Philipp Gesang <phg42.2a@gmail.com>\n Piotr Czarnecki <pioczarn@gmail.com>\n Piotr Jawniak <sawyer47@gmail.com>\n+Piotr Szotkowski <chastell@chastell.net>\n Piotr Zolnierek <pz@anixe.pl>\n Pradeep Kumar <gohanpra@gmail.com>\n Prudhvi Krishna Surapaneni <me@prudhvi.net>\n@@ -480,6 +560,7 @@ Ramkumar Ramachandra <artagnon@gmail.com>\n Randati <anttivan@gmail.com>\n Raphael Catolino <raphael.catolino@gmail.com>\n Raphael Speyer <rspeyer@gmail.com>\n+Ray Clanan <rclanan@utopianconcept.com>\n Reilly Watson <reillywatson@gmail.com>\n Renato Riccieri Santos Zannon <renato@rrsz.com.br>\n Renato Zannon <renato@rrsz.com.br>\n@@ -489,6 +570,7 @@ Rich Lane <rlane@club.cc.cmu.edu>\n Richard Diamond <wichard@vitalitystudios.com>\n Richo Healey <richo@psych0tik.net>\n Rick Waldron <waldron.rick@gmail.com>\n+Ricky Taylor <rickytaylor26@gmail.com>\n Rob Arnold <robarnold@cs.cmu.edu>\n Rob Hoelz <rob@hoelz.ro>\n Robert Buonpastore <robert.buonpastore@gmail.com>\n@@ -497,9 +579,14 @@ Robert Gawdzik <rgawdzik@hotmail.com>\n Robert Irelan <rirelan@gmail.com>\n Robert Knight <robertknight@gmail.com>\n Robert Millar <robert.millar@cantab.net>\n+Robin Gloster <robin@loc-com.de>\n+Robin Stocker <robin@nibor.org>\n+Rohit Joshi <rohit.joshi@capitalone.com>\n Roland Tanglao <roland@rolandtanglao.com>\n-Rolf Timmermans <r.w.timmermans@gmail.com>\n+Rolf Timmermans <rolftimmermans@voormedia.com>\n+Rolf van de Krol <info@rolfvandekrol.nl>\n Ron Dahlgren <ronald.dahlgren@gmail.com>\n+Roy Crihfield <rscrihf@gmail.com>\n Roy Frostig <rfrostig@mozilla.com>\n Russell <rpjohnst@gmail.com>\n Ruud van Asseldonk <dev@veniogames.com>\n@@ -520,23 +607,31 @@ Saurabh Anand <saurabhanandiit@gmail.com>\n Scott Jenkins <scottdjwales@gmail.com>\n Scott Lawrence <bytbox@gmail.com>\n Sean Chalmers <sclhiannan@gmail.com>\n+Sean Collins <sean@cllns.com>\n Sean Gillespie <sean.william.g@gmail.com>\n+Sean Jensen-Grey <seanj@xyke.com>\n Sean McArthur <sean.monstar@gmail.com>\n Sean Moon <ssamoon@ucla.edu>\n Sean Stangl <sstangl@mozilla.com>\n+Sean T Allen <sean@monkeysnatchbanana.com>\n Sebastian N. Fernandez <cachobot@gmail.com>\n Sebastian Zaha <sebastian.zaha@gmail.com>\n Sebastien Martini <seb@dbzteam.org>\n Seo Sanghyeon <sanxiyn@gmail.com>\n Seonghyun Kim <sh8281.kim@samsung.com>\n Sergio Benitez <sbenitez@mit.edu>\n Seth Pink <sethpink@gmail.com>\n+Seth Pollack <sethpollack@users.noreply.github.com>\n Shamir Khodzha <khodzha.sh@gmail.com>\n SiegeLord <slabode@aim.com>\n Simon Barber-Dueck <sbarberdueck@gmail.com>\n Simon Persson <simon@flaskpost.org>\n-Simon Sapin <simon@exyr.org>\n+Simon Sapin <simon.sapin@exyr.org>\n+Simon Wollwage <mail.wollwage@gmail.com>\n+Simonas Kazlauskas <git@kazlauskas.me>\n+Son <leson.phung@gmail.com>\n Squeaky <squeaky_pl@gmx.com>\n+Stefan Bucur <stefan.bucur@epfl.ch>\n Stefan Plantikow <stefan.plantikow@googlemail.com>\n Stepan Koltsov <stepan.koltsov@gmail.com>\n Sterling Greene <sterling.greene@gmail.com>\n@@ -546,12 +641,15 @@ Steven Fackler <sfackler@gmail.com>\n Steven Sheldon <steven@sasheldon.com>\n Steven Stewart-Gallus <sstewartgallus00@langara.bc.ca>\n Strahinja Val Markovic <val@markovic.io>\n-Stuart Pernsteiner <spernsteiner@mozilla.com>\n+Stuart Pernsteiner <stuart@pernsteiner.org>\n+Subhash Bhushan <subhash.bhushan@kaybus.com>\n Sylvestre Ledru <sylvestre@debian.org>\n S\u00e9bastien Chauvel <eichi237@mailoo.org>\n S\u00e9bastien Crozet <developer@crozet.re>\n S\u00e9bastien Paolacci <sebastien.paolacci@gmail.com>\n+Tamir Duberstein <tamird@squareup.com>\n Taras Shpot <mrshpot@gmail.com>\n+Taylor Hutchison <seanthutchison@gmail.com>\n Ted Horst <ted.horst@earthlink.net>\n Thad Guidry <thadguidry@gmail.com>\n Thomas Backman <serenity@exscape.org>\n@@ -562,7 +660,9 @@ Tim Chevalier <chevalier@alum.wellesley.edu>\n Tim Joseph Dumol <tim@timdumol.com>\n Tim Kuehn <tkuehn@cmu.edu>\n Tim Taubert <tim@timtaubert.de>\n+Timon Rapp <timon@zaeda.net>\n Timoth\u00e9e Ravier <tim@siosm.fr>\n+Titouan Vervack <tivervac@gmail.com>\n Tobba <tobias.haegermarck@gmail.com>\n Tobias Bucher <tobiasbucher5991@gmail.com>\n Tohava <tohava@tohava-laptop.(none)>\n@@ -581,27 +681,35 @@ TyOverby <ty@pre-alpha.com>\n Tycho Sci <tychosci@gmail.com>\n Tyler Bindon <martica@martica.org>\n U-NOV2010\\eugals\n+Ulysse Carion <ulysse@ulysse.io>\n Utkarsh Kukreti <utkarshkukreti@gmail.com>\n Uwe Dauernheim <uwe@dauernheim.net>\n Vadim Chugunov <vadimcn@gmail.com>\n+Vadim Petrochenkov <vadim.petrochenkov@gmail.com>\n Valentin Tsatskin <vtsatskin@mozilla.com>\n Valerii Hiora <valerii.hiora@gmail.com>\n Victor Berger <victor.berger@m4x.org>\n+Victor van den Elzen <victor.vde@gmail.com>\n Vijay Korapaty <rust@korapaty.com>\n Viktor Dahl <pazaconyoman@gmail.com>\n Vincent Belliard <vincent@famillebelliard.fr>\n Vinzent Steinberg <Vinzent.Steinberg@gmail.com>\n Virgile Andreani <virgile.andreani@anbuco.fr>\n+Vitali Haravy <HumaneProgrammer@gmail.com>\n Vivek Galatage <vivekgalatage@gmail.com>\n+Vladimir Matveev <vladimir.matweev@gmail.com>\n Vladimir Pouzanov <farcaller@gmail.com>\n+Vladimir Smola <smola.vladimir@gmail.com>\n Volker Mische <volker.mische@gmail.com>\n Wade Mealing <wmealing@gmail.com>\n WebeWizard <webewizard@gmail.com>\n Wendell Smith <wendell.smith@yale.edu>\n William Ting <io@williamting.com>\n Yasuhiro Fujii <y-fujii@mimosa-pudica.net>\n+YawarRaza7349 <YawarRaza7349@gmail.com>\n Yazhong Liu <yorkiefixer@gmail.com>\n Yehuda Katz <wycats@gmail.com>\n+York Xiang <bombless@126.com>\n Young-il Choi <duddlf.choi@samsung.com>\n Youngmin Yoo <youngmin.yoo@samsung.com>\n Youngsoo Son <ysson83@gmail.com>\n@@ -611,22 +719,29 @@ Zach Kamsler <smoo.master@gmail.com>\n Zach Pomerantz <zmp@umich.edu>\n Zack Corr <zack@z0w0.me>\n Zack Slayton <zack.slayton@gmail.com>\n-Zbigniew Siciarz <antyqjon@gmail.com>\n+Zbigniew Siciarz <zbigniew@siciarz.net>\n Ziad Hatahet <hatahet@gmail.com>\n Zooko Wilcox-O'Hearn <zooko@zooko.com>\n aochagavia <aochagavia92@gmail.com>\n+areski <areski@gmail.com>\n+arturo <arturo@openframeworks.cc>\n auREAX <mark@xn--hwg34fba.ws>\n b1nd <clint.ryan3@gmail.com>\n bachm <Ab@vapor.com>\n blake2-ppc <ulrik.sverdrup@gmail.com>\n+bluss <bluss>\n+bombless <bombless@126.com>\n bors <bors@rust-lang.org>\n chitra\n chromatic <chromatic@wgz.org>\n comex <comexk@gmail.com>\n+crhino <piraino.chris@gmail.com>\n+dan@daramos.com <dan@daramos.com>\n darkf <lw9k123@gmail.com>\n dgoon <dgoon@dgoon.net>\n donkopotamus <general@chocolate-fish.com>\n eliovir <eliovir@gmail.com>\n+elszben <notgonna@tellyou>\n flo-l <lacknerflo@gmail.com>\n fort <e@mail.com>\n free-Runner <aali07@students.poly.edu>\n@@ -638,10 +753,17 @@ hansjorg <hansjorg@gmail.com>\n iancormac84 <wilnathan@gmail.com>\n inrustwetrust <inrustwetrust@users.noreply.github.com>\n jamesluke <jamesluke@users.noreply.github.com>\n+jbranchaud <jbranchaud@gmail.com>\n+jfager <jfager@gmail.com>\n jmgrosen <jmgrosen@gmail.com>\n+jmu303 <muj@bc.edu>\n joaoxsouls <joaoxsouls@gmail.com>\n+jrincayc <jrincayc@users.noreply.github.com>\n+juxiliary <juxiliary@gmail.com>\n+jxv <joevargas@hush.com>\n klutzy <klutzytheklutzy@gmail.com>\n korenchkin <korenchkin2@gmail.com>\n+kulakowski <george.kulakowski@gmail.com>\n kvark <kvarkus@gmail.com>\n kwantam <kwantam@gmail.com>\n lpy <pylaurent1314@gmail.com>\n@@ -650,6 +772,7 @@ lyuts <dioxinu@gmail.com>\n m-r-r <raybaudroigm@gmail.com>\n maikklein <maikklein@googlemail.com>\n masklinn <github.com@masklinn.net>\n+mchaput <matt@whoosh.ca>\n mdinger <mdinger.bugzilla@gmail.com>\n mitchmindtree <mitchell.nordine@gmail.com>\n moonglum <moonglum@moonbeamlabs.com>\n@@ -659,15 +782,25 @@ musitdev <philippe.delrieu@free.fr>\n nham <hamann.nick@gmail.com>\n noam <noam@clusterfoo.com>\n novalis <novalis@novalis.org>\n+oli-obk <github6541940@oli-obk.de>\n+olivren <o.renaud@gmx.fr>\n osa1 <omeragacan@gmail.com>\n+qwitwa <qwitwa@gmail.com>\n reedlepee <reedlepee123@gmail.com>\n+rjz <rj@rjzaworski.com>\n sevrak <sevrak@rediffmail.com>\n+sheroze1123 <mss385@cornell.edu>\n smenardpw <sebastien@knoglr.com>\n sp3d <sp3d@github>\n startling <tdixon51793@gmail.com>\n+th0114nd <th0114nd@gmail.com>\n theptrk <patrick.tran06@gmail.com>\n+thiagopnts <thiagopnts@gmail.com>\n tinaun <tinagma@gmail.com>\n+tshakah <tshakah@gmail.com>\n ville-h <ville3.14159@gmail.com>\n+we <vadim.petrochenkov@gmail.com>\n+whataloadofwhat <unusualmoniker@gmail.com>\n wickerwaka <martin.donlon@gmail.com>\n xales <xales@naveria.com>\n zofrex <zofrex@gmail.com>"}, {"sha": "f7c385cbe7c1fb0c561bf93b37822e6cd9f4d845", "filename": "RELEASES.md", "status": "modified", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/rust-lang/rust/blob/a3a16e9610aba6d4bb023721d1f8513fe260bd03/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/a3a16e9610aba6d4bb023721d1f8513fe260bd03/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=a3a16e9610aba6d4bb023721d1f8513fe260bd03", "patch": "@@ -1,3 +1,185 @@\n+Version 1.0.0-alpha (January 2015)\n+----------------------------------\n+\n+  * ~2400 changes, numerous bugfixes\n+\n+  * Highlights\n+\n+    * The language itself is considered feature complete for 1.0,\n+      though there will be many usability improvements and bugfixes\n+      before the final release.\n+    * Nearly 50% of the public API surface of the standard library has\n+      been declared 'stable'. Those interfaces are unlikely to change\n+      before 1.0.\n+    * The long-running debate over integer types has been\n+      [settled][ints]: Rust will ship with types named `isize` and\n+      `usize`, rather than `int` and `uint`, for pointer-sized\n+      integers. Guidelines will be rolled out during the alpha cycle.\n+    * Most crates that are not `std` have been moved out of the Rust\n+      distribution into the Cargo ecosystem so they can evolve\n+      separately and don't need to be stabilized as quickly, including\n+      'time', 'getopts', 'num', 'regex', and 'term'.\n+    * Documentation continues to be expanded with more guides, more\n+      API coverage and more examples.\n+    * All official Rust binary installers now come with [Cargo], the\n+      Rust package manager.\n+\n+* Language\n+\n+    * Closures have been [completely redesigned][unboxed] to be\n+      implemented in terms of traits, can now be used as generic type\n+      bounds and thus monomorphized and inlined, or via an opaque\n+      pointer (boxed) as in the old system. The new system is often\n+      referred to as 'unboxed' closures.\n+    * Traits now support [associated types][assoc], allowing families\n+      of related types to be defined together and used generically in\n+      powerful ways.\n+    * Enum variants are [namespaced by their type names][enum].\n+    * [`where` clauses][where] provide a more versatile and attractive\n+      syntax for specifying generic bounds, though the previous syntax\n+      remains valid.\n+    * Rust again picks a [fallback][fb] (either i32 or f64) for uninferred\n+      numeric types.\n+    * Rust [no longer has a runtime][rt] of any description, and only\n+      supports OS threads, not green threads.\n+    * At long last, Rust has been overhauled for 'dynamically-sized\n+      types' ([DST]), which integrates 'fat pointers' (object types,\n+      arrays, and `str`) more deeply into the type system, making it\n+      more consistent.\n+    * Rust now has a general [range syntax][range], `i..j`, `i..`, and\n+      `..j` that produce range types and which, when combined with the\n+      `Index` operator and multidispatch, leads to a convenient slice\n+      notation, `[i..j]`.\n+    * The new range syntax revealed an ambiguity in the fixed-length\n+      array syntax, so now fixed length arrays [are written `[T;\n+      N]`][arrays].\n+    * The `Copy` trait is no longer implemented automatically. Unsafe\n+      pointers no longer implement `Sync` and `Send` so types\n+      containing them don't automatically either. `Sync` and `Send`\n+      are now 'unsafe traits' so one can \"forcibly\" implement them via\n+      `unsafe impl` if a type confirms to the requirements for them\n+      even though the internals do not (e.g. structs containing unsafe\n+      pointers like `Arc`). These changes are intended to prevent some\n+      footguns and are collectively known as [opt-in built-in\n+      traits][oibit] (though `Sync` and `Send` will soon become pure\n+      library types unknown to the compiler).\n+    * Operator traits now take their operands [by value][ops], and\n+      comparison traits can use multidispatch to compare one type\n+      against multiple other types, allowing e.g. `String` to be\n+      compared with `&str`.\n+    * `if let` and `while let` are no longer feature-gated.\n+    * Rust has adopted a more [uniform syntax for escaping unicode\n+      characters][unicode].\n+    * `macro_rules!` [has been declared stable][mac]. Though it is a\n+      flawed system it is sufficiently popular that it must be usable\n+      for 1.0. Effort has gone into [future-proofing][mac-future] it\n+      in ways that will allow other macro systems to be developed in\n+      parallel, and won't otherwise impact the evolution of the\n+      language.\n+    * The prelude has been [pared back significantly][prelude] such\n+      that it is the minimum necessary to support the most pervasive\n+      code patterns, and through [generalized where clauses][where]\n+      many of the prelude extension traits have been consolidated.\n+    * Rust's rudimentary reflection [has been removed][refl], as it\n+      incurred too much code generation for little benefit.\n+    * [Struct variants][structvars] are no longer feature-gated.\n+    * Trait bounds can be [polymorphic over lifetimes][hrtb]. Also\n+      known as 'higher-ranked trait bounds', this crucially allows\n+      unboxed closures to work.\n+    * Macros invocations surrounded by parens or square brackets and\n+      not terminated by a semicolon are [parsed as\n+      expressions][macros], which makes expressions like `vec![1i32,\n+      2, 3].len()` work as expected.\n+    * Trait objects now implement their traits automatically, and\n+      traits that can be coerced to objects now must be [object\n+      safe][objsafe].\n+    * Automatically deriving traits is now done with `#[derive(...)]`\n+      not `#[deriving(...)]` for [consistency with other naming\n+      conventions][derive].\n+    * Importing the containing module or enum at the same time as\n+      items or variants they contain is [now done with `self` instead\n+      of `mod`][self], as in use `foo::{self, bar}`\n+    * Glob imports are no longer feature-gated.\n+    * The `box` operator and `box` patterns have been feature-gated\n+      pending a redesign. For now unique boxes should be allocated\n+      like other containers, with `Box::new`.\n+\n+* Libraries\n+\n+    * A [series][coll1] of [efforts][coll2] to establish\n+      [conventions][coll3] for collections types has resulted in API\n+      improvements throughout the standard library.\n+    * New [APIs for error handling][err] provide ergonomic interop\n+      between error types, and [new conventions][err-conv] describe\n+      more clearly the recommended error handling strategies in Rust.\n+    * The `fail!` macro has been renamed to [`panic!`][panic] so that\n+      it is easier to discuss failure in the context of error handling\n+      without making clarifications as to whether you are referring to\n+      the 'fail' macro or failure more generally.\n+    * On Linux, `OsRng` prefers the new, more reliable `getrandom`\n+      syscall when available.\n+    * The 'serialize' crate has been renamed 'rustc-serialize' and\n+      moved out of the distribution to Cargo. Although it is widely\n+      used now, it is expected to be superceded in the near future.\n+    * The `Show` formatter, typically implemented with\n+      `#[derive(Show)]` is [now requested with the `{:?}`\n+      specifier][show] and is intended for use by all types, for uses\n+      such as `println!` debugging. The new `String` formatter must be\n+      implemented by hand, uses the `{}` specifier, and is intended\n+      for full-fidelity conversions of things that can logically be\n+      represented as strings.\n+\n+* Tooling\n+\n+    * [Flexible target specification][flex] allows rustc's code\n+      generation to be configured to support otherwise-unsupported\n+      platforms.\n+    * Rust comes with rust-gdb and rust-lldb scripts that launch their\n+      respective debuggers with Rust-appropriate pretty-printing.\n+    * The Windows installation of Rust is distributed with the the\n+      MinGW components currently required to link binaries on that\n+      platform.\n+\n+* Misc\n+\n+    * Nullable enum optimizations have been extended to more types so\n+      that e.g. `Option<Vec<T>>` and `Option<String>` take up no more\n+      space than the inner types themselves.\n+    * Work has begun on supporting AArch64.\n+\n+[Cargo]: https://crates.io\n+[unboxed]: http://smallcultfollowing.com/babysteps/blog/2014/11/26/purging-proc/\n+[enum]: https://github.com/rust-lang/rfcs/blob/master/text/0390-enum-namespacing.md\n+[flex]: https://github.com/rust-lang/rfcs/blob/master/text/0131-target-specification.md\n+[err]: https://github.com/rust-lang/rfcs/blob/master/text/0201-error-chaining.md\n+[err-conv]: https://github.com/rust-lang/rfcs/blob/master/text/0236-error-conventions.md\n+[rt]: https://github.com/rust-lang/rfcs/blob/master/text/0230-remove-runtime.md\n+[mac]: https://github.com/rust-lang/rfcs/blob/master/text/0453-macro-reform.md\n+[mac-future]: https://github.com/rust-lang/rfcs/pull/550\n+[DST]: http://smallcultfollowing.com/babysteps/blog/2014/01/05/dst-take-5/\n+[coll1]: https://github.com/rust-lang/rfcs/blob/master/text/0235-collections-conventions.md\n+[coll2]: https://github.com/rust-lang/rfcs/blob/master/text/0509-collections-reform-part-2.md\n+[coll3]: https://github.com/rust-lang/rfcs/blob/master/text/0216-collection-views.md\n+[ops]: https://github.com/rust-lang/rfcs/blob/master/text/0439-cmp-ops-reform.md\n+[prelude]: https://github.com/rust-lang/rfcs/blob/master/text/0503-prelude-stabilization.md\n+[where]: https://github.com/rust-lang/rfcs/blob/master/text/0135-where.md\n+[refl]: https://github.com/rust-lang/rfcs/blob/master/text/0379-remove-reflection.md\n+[panic]: https://github.com/rust-lang/rfcs/blob/master/text/0221-panic.md\n+[structvars]: https://github.com/rust-lang/rfcs/blob/master/text/0418-struct-variants.md\n+[hrtb]: https://github.com/rust-lang/rfcs/blob/master/text/0387-higher-ranked-trait-bounds.md\n+[unicode]: https://github.com/rust-lang/rfcs/blob/master/text/0446-es6-unicode-escapes.md\n+[oibit]: https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md\n+[macros]: https://github.com/rust-lang/rfcs/blob/master/text/0378-expr-macros.md\n+[range]: https://github.com/rust-lang/rfcs/blob/master/text/0439-cmp-ops-reform.md#indexing-and-slicing\n+[arrays]: https://github.com/rust-lang/rfcs/blob/master/text/0520-new-array-repeat-syntax.md\n+[show]: https://github.com/rust-lang/rfcs/blob/master/text/0504-show-stabilization.md\n+[derive]: https://github.com/rust-lang/rfcs/blob/master/text/0534-deriving2derive.md\n+[self]: https://github.com/rust-lang/rfcs/blob/master/text/0532-self-in-use.md\n+[fb]: https://github.com/rust-lang/rfcs/blob/master/text/0212-restore-int-fallback.md\n+[objsafe]: https://github.com/rust-lang/rfcs/blob/master/text/0255-object-safety.md\n+[assoc]: https://github.com/rust-lang/rfcs/blob/master/text/0195-associated-items.md\n+[ints]: https://github.com/rust-lang/rfcs/pull/544#issuecomment-68760871\n+\n Version 0.12.0 (October 2014)\n -----------------------------\n "}, {"sha": "fce0e6ed578d3de10ecc6d3c0e010a0080f340cf", "filename": "src/doc/guide.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3a16e9610aba6d4bb023721d1f8513fe260bd03/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/a3a16e9610aba6d4bb023721d1f8513fe260bd03/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=a3a16e9610aba6d4bb023721d1f8513fe260bd03", "patch": "@@ -90,7 +90,7 @@ $ rustc --version\n You should see some output that looks something like this:\n \n ```bash\n-rustc 0.12.0-nightly (b7aa03a3c 2014-09-28 11:38:01 +0000)\n+rustc 1.0.0-nightly (f11f3e7ba 2015-01-04 20:02:14 +0000)\n ```\n \n If you did, Rust has been installed successfully! Congrats!"}, {"sha": "41dc2d1fbda065622e28442934854e98b7e3507e", "filename": "src/etc/kate/rust.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3a16e9610aba6d4bb023721d1f8513fe260bd03/src%2Fetc%2Fkate%2Frust.xml", "raw_url": "https://github.com/rust-lang/rust/raw/a3a16e9610aba6d4bb023721d1f8513fe260bd03/src%2Fetc%2Fkate%2Frust.xml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fkate%2Frust.xml?ref=a3a16e9610aba6d4bb023721d1f8513fe260bd03", "patch": "@@ -7,7 +7,7 @@\n \t<!ENTITY rustIdent \"[a-zA-Z_][a-zA-Z_0-9]*\">\n \t<!ENTITY rustIntSuf \"([iu](8|16|32|64)?)?\">\n ]>\n-<language name=\"Rust\" version=\"0.13.0\" kateversion=\"2.4\" section=\"Sources\" extensions=\"*.rs\" mimetype=\"text/x-rust\" priority=\"15\">\n+<language name=\"Rust\" version=\"1.0.0\" kateversion=\"2.4\" section=\"Sources\" extensions=\"*.rs\" mimetype=\"text/x-rust\" priority=\"15\">\n <highlighting>\n \t<list name=\"fn\">\n \t\t<item> fn </item>"}]}