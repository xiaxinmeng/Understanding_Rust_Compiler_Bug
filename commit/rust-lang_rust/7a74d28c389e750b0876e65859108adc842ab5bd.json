{"sha": "7a74d28c389e750b0876e65859108adc842ab5bd", "node_id": "C_kwDOAAsO6NoAKDdhNzRkMjhjMzg5ZTc1MGIwODc2ZTY1ODU5MTA4YWRjODQyYWI1YmQ", "commit": {"author": {"name": "Sebastian Humenda", "email": "shumenda@gmx.de", "date": "2020-06-18T16:46:43Z"}, "committer": {"name": "Benjamin Lamowski", "email": "benjamin.lamowski@kernkonzept.com", "date": "2022-03-09T10:53:27Z"}, "message": "fix return values in L4Re networking stub\n\n[Benjamin Lamowski: Reworded commit message after split commit.]", "tree": {"sha": "bfba244df2ad4758171e5381319a5757585da625", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfba244df2ad4758171e5381319a5757585da625"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a74d28c389e750b0876e65859108adc842ab5bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a74d28c389e750b0876e65859108adc842ab5bd", "html_url": "https://github.com/rust-lang/rust/commit/7a74d28c389e750b0876e65859108adc842ab5bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a74d28c389e750b0876e65859108adc842ab5bd/comments", "author": {"login": "humenda", "id": 4473821, "node_id": "MDQ6VXNlcjQ0NzM4MjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4473821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/humenda", "html_url": "https://github.com/humenda", "followers_url": "https://api.github.com/users/humenda/followers", "following_url": "https://api.github.com/users/humenda/following{/other_user}", "gists_url": "https://api.github.com/users/humenda/gists{/gist_id}", "starred_url": "https://api.github.com/users/humenda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/humenda/subscriptions", "organizations_url": "https://api.github.com/users/humenda/orgs", "repos_url": "https://api.github.com/users/humenda/repos", "events_url": "https://api.github.com/users/humenda/events{/privacy}", "received_events_url": "https://api.github.com/users/humenda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atopia", "id": 1710873, "node_id": "MDQ6VXNlcjE3MTA4NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1710873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atopia", "html_url": "https://github.com/atopia", "followers_url": "https://api.github.com/users/atopia/followers", "following_url": "https://api.github.com/users/atopia/following{/other_user}", "gists_url": "https://api.github.com/users/atopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/atopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atopia/subscriptions", "organizations_url": "https://api.github.com/users/atopia/orgs", "repos_url": "https://api.github.com/users/atopia/repos", "events_url": "https://api.github.com/users/atopia/events{/privacy}", "received_events_url": "https://api.github.com/users/atopia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6045c34f15d463c7d51104b968c1eabc5275b9c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6045c34f15d463c7d51104b968c1eabc5275b9c1", "html_url": "https://github.com/rust-lang/rust/commit/6045c34f15d463c7d51104b968c1eabc5275b9c1"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "cf101f934e12176067f00ec1470e162012da44ca", "filename": "library/std/src/sys/unix/l4re.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7a74d28c389e750b0876e65859108adc842ab5bd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a74d28c389e750b0876e65859108adc842ab5bd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs?ref=7a74d28c389e750b0876e65859108adc842ab5bd", "patch": "@@ -59,7 +59,7 @@ pub mod net {\n         }\n \n         pub fn is_read_vectored(&self) -> bool {\n-            unimpl!();\n+            false\n         }\n \n         pub fn peek(&self, _: &mut [u8]) -> io::Result<usize> {\n@@ -83,7 +83,7 @@ pub mod net {\n         }\n \n         pub fn is_write_vectored(&self) -> bool {\n-            unimpl!();\n+            false\n         }\n \n         pub fn set_timeout(&self, _: Option<Duration>, _: libc::c_int) -> io::Result<()> {\n@@ -191,7 +191,7 @@ pub mod net {\n         }\n \n         pub fn is_read_vectored(&self) -> bool {\n-            unimpl!();\n+            false\n         }\n \n         pub fn write(&self, _: &[u8]) -> io::Result<usize> {\n@@ -203,7 +203,7 @@ pub mod net {\n         }\n \n         pub fn is_write_vectored(&self) -> bool {\n-            unimpl!();\n+            false\n         }\n \n         pub fn peer_addr(&self) -> io::Result<SocketAddr> {"}]}