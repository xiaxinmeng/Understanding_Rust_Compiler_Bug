{"sha": "91cb422e1a3cd96926af9203ab925ac6a90192b5", "node_id": "C_kwDOAAsO6NoAKDkxY2I0MjJlMWEzY2Q5NjkyNmFmOTIwM2FiOTI1YWM2YTkwMTkyYjU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-25T15:35:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-25T15:35:18Z"}, "message": "Merge #10859\n\n10859: fix: Prioritize tuple fields in highlight_related r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "92553648a58c57e55b44df871116326393a4ea91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92553648a58c57e55b44df871116326393a4ea91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91cb422e1a3cd96926af9203ab925ac6a90192b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhn602CRBK7hj4Ov3rIwAAc24IAI0+JLWIqImWMza8nNPbM38i\nXHd5qF3+WT65RMApXF6np9TlDJsR4P59Pbx9+7H36x/MtofX33mfEkjLKLUDgnoM\nVIzD1xyEu/giS78i8CVTjdll/f3e20uDzfbHwMV0qsaCTvM+qJUX1hxvRmPjAjZA\nt7pgUsTeTFHeW7MXc8YuWCOYb2qCLqr7eyEdnpOLDCw5pj8EYx3fRj4H69x586pU\nVB9wjRMrp7Yi7YWh6abY+KQ6NFC6N8hZwgbULe/6ctmgmkljT14x16eDrR7vKVJW\n5sRgfTHaZvW659/fE4k7JjMeWiOWOMTw/EZYuxGQhgBN2lSTqJx1Cu/MYEdDeWE=\n=MTQV\n-----END PGP SIGNATURE-----\n", "payload": "tree 92553648a58c57e55b44df871116326393a4ea91\nparent 870e730dc8a8a15f98468c08a5a7ec0e44dfc40d\nparent 4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1637854518 +0000\ncommitter GitHub <noreply@github.com> 1637854518 +0000\n\nMerge #10859\n\n10859: fix: Prioritize tuple fields in highlight_related r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91cb422e1a3cd96926af9203ab925ac6a90192b5", "html_url": "https://github.com/rust-lang/rust/commit/91cb422e1a3cd96926af9203ab925ac6a90192b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91cb422e1a3cd96926af9203ab925ac6a90192b5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "870e730dc8a8a15f98468c08a5a7ec0e44dfc40d", "url": "https://api.github.com/repos/rust-lang/rust/commits/870e730dc8a8a15f98468c08a5a7ec0e44dfc40d", "html_url": "https://github.com/rust-lang/rust/commit/870e730dc8a8a15f98468c08a5a7ec0e44dfc40d"}, {"sha": "4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61", "html_url": "https://github.com/rust-lang/rust/commit/4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "aac23be777ffc83d0806f8d7dc0b2427074b2895", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/91cb422e1a3cd96926af9203ab925ac6a90192b5/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91cb422e1a3cd96926af9203ab925ac6a90192b5/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=91cb422e1a3cd96926af9203ab925ac6a90192b5", "patch": "@@ -10,7 +10,7 @@ use rustc_hash::FxHashSet;\n use syntax::{\n     ast::{self, HasLoopBody},\n     match_ast, AstNode,\n-    SyntaxKind::IDENT,\n+    SyntaxKind::{IDENT, INT_NUMBER},\n     SyntaxNode, SyntaxToken, TextRange, T,\n };\n \n@@ -54,10 +54,9 @@ pub(crate) fn highlight_related(\n         T![?] => 4, // prefer `?` when the cursor is sandwiched like in `await$0?`\n         T![->] => 3,\n         kind if kind.is_keyword() => 2,\n-        IDENT => 1,\n+        IDENT | INT_NUMBER => 1,\n         _ => 0,\n     })?;\n-\n     match token.kind() {\n         T![?] if config.exit_points && token.parent().and_then(ast::TryExpr::cast).is_some() => {\n             highlight_exit_points(sema, token)\n@@ -346,6 +345,22 @@ mod tests {\n         assert_eq!(expected, actual);\n     }\n \n+    #[test]\n+    fn test_hl_tuple_fields() {\n+        check(\n+            r#\"\n+struct Tuple(u32, u32);\n+\n+fn foo(t: Tuple) {\n+    t.0$0;\n+   // ^ read\n+    t.0;\n+   // ^ read\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_hl_module() {\n         check("}]}