{"sha": "9096b3e44f6261791e79af851172eebf89a0c2cc", "node_id": "C_kwDOAAsO6NoAKDkwOTZiM2U0NGY2MjYxNzkxZTc5YWY4NTExNzJlZWJmODlhMGMyY2M", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-02-16T09:56:01Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-06-14T14:07:11Z"}, "message": "implement valtrees as the type-system representation for constant values", "tree": {"sha": "2db3d10cb3baf2042349f49e971bd98d7da448e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2db3d10cb3baf2042349f49e971bd98d7da448e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9096b3e44f6261791e79af851172eebf89a0c2cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9096b3e44f6261791e79af851172eebf89a0c2cc", "html_url": "https://github.com/rust-lang/rust/commit/9096b3e44f6261791e79af851172eebf89a0c2cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9096b3e44f6261791e79af851172eebf89a0c2cc/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce2b3a9b4c6084eddc4d1c61436b9d41bb1483e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce2b3a9b4c6084eddc4d1c61436b9d41bb1483e5", "html_url": "https://github.com/rust-lang/rust/commit/ce2b3a9b4c6084eddc4d1c61436b9d41bb1483e5"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "ef72e6efb946b3cabe8a9881ea9ab2438018791e", "filename": "src/constant.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9096b3e44f6261791e79af851172eebf89a0c2cc/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9096b3e44f6261791e79af851172eebf89a0c2cc/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=9096b3e44f6261791e79af851172eebf89a0c2cc", "patch": "@@ -127,7 +127,7 @@ pub(crate) fn codegen_constant<'tcx>(\n         ConstantKind::Val(val, ty) => return codegen_const_value(fx, val, ty),\n     };\n     let const_val = match const_.kind() {\n-        ConstKind::Value(const_val) => const_val,\n+        ConstKind::Value(valtree) => fx.tcx.valtree_to_const_val((const_.ty(), valtree)),\n         ConstKind::Unevaluated(ty::Unevaluated { def, substs, promoted })\n             if fx.tcx.is_static(def.did) =>\n         {\n@@ -468,9 +468,10 @@ pub(crate) fn mir_operand_get_const_val<'tcx>(\n ) -> Option<ConstValue<'tcx>> {\n     match operand {\n         Operand::Constant(const_) => match const_.literal {\n-            ConstantKind::Ty(const_) => {\n-                fx.monomorphize(const_).eval(fx.tcx, ParamEnv::reveal_all()).kind().try_to_value()\n-            }\n+            ConstantKind::Ty(const_) => fx\n+                .monomorphize(const_)\n+                .eval_for_mir(fx.tcx, ParamEnv::reveal_all())\n+                .try_to_value(fx.tcx),\n             ConstantKind::Val(val, _) => Some(val),\n         },\n         // FIXME(rust-lang/rust#85105): Casts like `IMM8 as u32` result in the const being stored"}]}