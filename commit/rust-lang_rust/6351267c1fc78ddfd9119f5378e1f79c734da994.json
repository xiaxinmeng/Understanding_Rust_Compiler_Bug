{"sha": "6351267c1fc78ddfd9119f5378e1f79c734da994", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNTEyNjdjMWZjNzhkZGZkOTExOWY1Mzc4ZTFmNzljNzM0ZGE5OTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-30T08:52:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-30T08:52:53Z"}, "message": "Rollup merge of #61231 - pnkfelix:issue-59548-linkage-diagnostic, r=petrochenkov\n\nFix linkage diagnostic so it doesn't ICE for external crates\n\nFix linkage diagnostic so it doesn't ICE for external crates\n\n(As a drive-by improvement, improved the diagnostic to indicate *why* `*const T` or `*mut T` is required.)\n\nFix #59548\nFix #61232", "tree": {"sha": "4fdff09a0c079a9053d33915e8b4d169a0ed9ad5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fdff09a0c079a9053d33915e8b4d169a0ed9ad5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6351267c1fc78ddfd9119f5378e1f79c734da994", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc75nlCRBK7hj4Ov3rIwAAdHIIAEALB+U3opRsHLJUOQ0aOWG2\nA0VIc4gYS4NPcR/kqdojqqGKwCkhcbQ1WbZ2Bs1UMpSJUVJSNEvtZ2cQnOV8n+JS\n+PVdMNUT9XjzPNyR60rXW/jScrIqfO4p4C9/Pi36GdClgCBFALVyq95+1e7e9wKl\nbtjHPQFaGxE+QQsSgBhhA6Gnol7qBwNXjp1VIc149KyewICVcbxr2RHy5W/f/EPW\n0mqYlNQoU/oYk/GL1B6o5rvX7HAZoCzAKNveul3aBXwd+LGs/PJ63Ius4VWDqXog\n41VRTyBJF5wkfHt2upHg1KyAN8oDazhG75TNiPiJgDPefihp9X2/VvN3D49ZVPQ=\n=0+Oz\n-----END PGP SIGNATURE-----\n", "payload": "tree 4fdff09a0c079a9053d33915e8b4d169a0ed9ad5\nparent 74b359373c262506d88fa546c595551c7a4e4277\nparent c8887abf20f72631eeeb72eaf14fa27fc4e550fa\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1559206373 +0200\ncommitter GitHub <noreply@github.com> 1559206373 +0200\n\nRollup merge of #61231 - pnkfelix:issue-59548-linkage-diagnostic, r=petrochenkov\n\nFix linkage diagnostic so it doesn't ICE for external crates\n\nFix linkage diagnostic so it doesn't ICE for external crates\n\n(As a drive-by improvement, improved the diagnostic to indicate *why* `*const T` or `*mut T` is required.)\n\nFix #59548\nFix #61232\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6351267c1fc78ddfd9119f5378e1f79c734da994", "html_url": "https://github.com/rust-lang/rust/commit/6351267c1fc78ddfd9119f5378e1f79c734da994", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6351267c1fc78ddfd9119f5378e1f79c734da994/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b359373c262506d88fa546c595551c7a4e4277", "url": "https://api.github.com/repos/rust-lang/rust/commits/74b359373c262506d88fa546c595551c7a4e4277", "html_url": "https://github.com/rust-lang/rust/commit/74b359373c262506d88fa546c595551c7a4e4277"}, {"sha": "c8887abf20f72631eeeb72eaf14fa27fc4e550fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8887abf20f72631eeeb72eaf14fa27fc4e550fa", "html_url": "https://github.com/rust-lang/rust/commit/c8887abf20f72631eeeb72eaf14fa27fc4e550fa"}], "stats": {"total": 117, "additions": 99, "deletions": 18}, "files": [{"sha": "99b5cf42551faff6d56c991e7174c3180c905d7d", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -102,7 +102,7 @@ fn check_and_apply_linkage(\n     attrs: &CodegenFnAttrs,\n     ty: Ty<'tcx>,\n     sym: LocalInternedString,\n-    span: Option<Span>\n+    span: Span\n ) -> &'ll Value {\n     let llty = cx.layout_of(ty).llvm_type(cx);\n     if let Some(linkage) = attrs.linkage {\n@@ -116,11 +116,8 @@ fn check_and_apply_linkage(\n         let llty2 = if let ty::RawPtr(ref mt) = ty.sty {\n             cx.layout_of(mt.ty).llvm_type(cx)\n         } else {\n-            if let Some(span) = span {\n-                cx.sess().span_fatal(span, \"must have type `*const T` or `*mut T`\")\n-            } else {\n-                bug!(\"must have type `*const T` or `*mut T`\")\n-            }\n+            cx.sess().span_fatal(\n+                span, \"must have type `*const T` or `*mut T` due to `#[linkage]` attribute\")\n         };\n         unsafe {\n             // Declare a symbol `foo` with the desired linkage.\n@@ -136,14 +133,7 @@ fn check_and_apply_linkage(\n             let mut real_name = \"_rust_extern_with_linkage_\".to_string();\n             real_name.push_str(&sym);\n             let g2 = cx.define_global(&real_name, llty).unwrap_or_else(||{\n-                if let Some(span) = span {\n-                    cx.sess().span_fatal(\n-                        span,\n-                        &format!(\"symbol `{}` is already defined\", &sym)\n-                    )\n-                } else {\n-                    bug!(\"symbol `{}` is already defined\", &sym)\n-                }\n+                cx.sess().span_fatal(span, &format!(\"symbol `{}` is already defined\", &sym))\n             });\n             llvm::LLVMRustSetLinkage(g2, llvm::Linkage::InternalLinkage);\n             llvm::LLVMSetInitializer(g2, g1);\n@@ -240,7 +230,7 @@ impl CodegenCx<'ll, 'tcx> {\n                     ref attrs, span, node: hir::ForeignItemKind::Static(..), ..\n                 }) => {\n                     let fn_attrs = self.tcx.codegen_fn_attrs(def_id);\n-                    (check_and_apply_linkage(&self, &fn_attrs, ty, sym, Some(span)), attrs)\n+                    (check_and_apply_linkage(&self, &fn_attrs, ty, sym, span), attrs)\n                 }\n \n                 item => bug!(\"get_static: expected static, found {:?}\", item)\n@@ -260,7 +250,8 @@ impl CodegenCx<'ll, 'tcx> {\n             debug!(\"get_static: sym={} item_attr={:?}\", sym, self.tcx.item_attrs(def_id));\n \n             let attrs = self.tcx.codegen_fn_attrs(def_id);\n-            let g = check_and_apply_linkage(&self, &attrs, ty, sym, None);\n+            let span = self.tcx.def_span(def_id);\n+            let g = check_and_apply_linkage(&self, &attrs, ty, sym, span);\n \n             // Thread-local statics in some other crate need to *always* be linked\n             // against in a thread-local fashion, so we need to be sure to apply the"}, {"sha": "bbbfc4857918df61e6904e2777584cce50f85f26", "filename": "src/test/ui/linkage-attr/auxiliary/def_colliding_external.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Fauxiliary%2Fdef_colliding_external.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Fauxiliary%2Fdef_colliding_external.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Fauxiliary%2Fdef_colliding_external.rs?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -0,0 +1,7 @@\n+#![feature(linkage)]\n+#![crate_type = \"lib\"]\n+\n+extern {\n+    #[linkage=\"external\"]\n+    pub static collision: *const i32;\n+}"}, {"sha": "2300930e513afb95497a6c244db6baa60e1c4102", "filename": "src/test/ui/linkage-attr/auxiliary/def_illtyped_external.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Fauxiliary%2Fdef_illtyped_external.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Fauxiliary%2Fdef_illtyped_external.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Fauxiliary%2Fdef_illtyped_external.rs?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -0,0 +1,5 @@\n+#![feature(linkage)]\n+#![crate_type = \"lib\"]\n+\n+#[linkage=\"external\"]\n+pub static EXTERN: u32 = 0;"}, {"sha": "85a9a336b0d643f5cb6ad97ef838c9145c54ff57", "filename": "src/test/ui/linkage-attr/linkage-detect-extern-generated-name-collision.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-extern-generated-name-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-extern-generated-name-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-extern-generated-name-collision.rs?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -0,0 +1,21 @@\n+// rust-lang/rust#61232: We used to ICE when trying to detect a\n+// collision on the symbol generated for the external linkage item in\n+// an extern crate.\n+\n+// aux-build:def_colliding_external.rs\n+\n+extern crate def_colliding_external as dep1;\n+\n+#[no_mangle]\n+pub static _rust_extern_with_linkage_collision: i32 = 0;\n+\n+mod dep2 {\n+    #[no_mangle]\n+    pub static collision: usize = 0;\n+}\n+\n+fn main() {\n+    unsafe {\n+       println!(\"{:p}\", &dep1::collision);\n+    }\n+}"}, {"sha": "dcb954a4bc0c15afc8d8002358f11da2812665ee", "filename": "src/test/ui/linkage-attr/linkage-detect-extern-generated-name-collision.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-extern-generated-name-collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-extern-generated-name-collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-extern-generated-name-collision.stderr?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -0,0 +1,8 @@\n+error: symbol `collision` is already defined\n+  --> $DIR/auxiliary/def_colliding_external.rs:6:5\n+   |\n+LL |     pub static collision: *const i32;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "dc15798e16a6acaaae4fdb6a66bb4508bf830927", "filename": "src/test/ui/linkage-attr/linkage-detect-local-generated-name-collision.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.rs?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -0,0 +1,23 @@\n+#![feature(linkage)]\n+\n+mod dep1 {\n+    extern {\n+        #[linkage=\"external\"]\n+        #[no_mangle]\n+        pub static collision: *const i32; //~ ERROR symbol `collision` is already defined\n+    }\n+}\n+\n+#[no_mangle]\n+pub static _rust_extern_with_linkage_collision: i32 = 0;\n+\n+mod dep2 {\n+    #[no_mangle]\n+    pub static collision: usize = 0;\n+}\n+\n+fn main() {\n+    unsafe {\n+       println!(\"{:p}\", &dep1::collision);\n+    }\n+}"}, {"sha": "117c76f7f26c7a886145f69b7faa145aa22a7385", "filename": "src/test/ui/linkage-attr/linkage-detect-local-generated-name-collision.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-detect-local-generated-name-collision.stderr?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -0,0 +1,8 @@\n+error: symbol `collision` is already defined\n+  --> $DIR/linkage-detect-local-generated-name-collision.rs:7:9\n+   |\n+LL |         pub static collision: *const i32;\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "014c715be0d3b1d21c1a401f4e76677e5fbdf59b", "filename": "src/test/ui/linkage-attr/linkage-requires-raw-ptr.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-requires-raw-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-requires-raw-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-requires-raw-ptr.rs?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -0,0 +1,10 @@\n+// rust-lang/rust#59548: We used to ICE when trying to use a static\n+// with a type that violated its own `#[linkage]`.\n+\n+// aux-build:def_illtyped_external.rs\n+\n+extern crate def_illtyped_external as dep;\n+\n+fn main() {\n+    println!(\"{:p}\", &dep::EXTERN);\n+}"}, {"sha": "a80b495f97fa33c378d168308ac6376ee15fffb6", "filename": "src/test/ui/linkage-attr/linkage-requires-raw-ptr.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-requires-raw-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-requires-raw-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage-requires-raw-ptr.stderr?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -0,0 +1,8 @@\n+error: must have type `*const T` or `*mut T` due to `#[linkage]` attribute\n+  --> $DIR/auxiliary/def_illtyped_external.rs:5:1\n+   |\n+LL | pub static EXTERN: u32 = 0;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "c8af1a69979a089451fc329067c89ecee5a695c6", "filename": "src/test/ui/linkage-attr/linkage2.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage2.rs?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -7,7 +7,7 @@\n \n extern {\n     #[linkage = \"extern_weak\"] static foo: i32;\n-    //~^ ERROR: must have type `*const T` or `*mut T`\n+    //~^ ERROR: must have type `*const T` or `*mut T` due to `#[linkage]` attribute\n }\n \n fn main() {", "previous_filename": "src/test/ui/linkage2.rs"}, {"sha": "2654ffd67b67860771b4664dfaadde861b899c1d", "filename": "src/test/ui/linkage-attr/linkage2.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage2.stderr?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "patch": "@@ -1,4 +1,4 @@\n-error: must have type `*const T` or `*mut T`\n+error: must have type `*const T` or `*mut T` due to `#[linkage]` attribute\n   --> $DIR/linkage2.rs:9:32\n    |\n LL |     #[linkage = \"extern_weak\"] static foo: i32;", "previous_filename": "src/test/ui/linkage2.stderr"}, {"sha": "1462079acf7e73dc79eda280c1e37c4630100787", "filename": "src/test/ui/linkage-attr/linkage3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage3.rs?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "previous_filename": "src/test/ui/linkage3.rs"}, {"sha": "b74fdc91429e28e755ae3fff36b0b9971c90b958", "filename": "src/test/ui/linkage-attr/linkage3.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage3.stderr?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "previous_filename": "src/test/ui/linkage3.stderr"}, {"sha": "3b935f9723dc18000173bd523c45adcb945a8034", "filename": "src/test/ui/linkage-attr/linkage4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage4.rs?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "previous_filename": "src/test/ui/linkage4.rs"}, {"sha": "f2aab164bd7fa3fe23ef80114a8efc6054640a15", "filename": "src/test/ui/linkage-attr/linkage4.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6351267c1fc78ddfd9119f5378e1f79c734da994/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage4.stderr?ref=6351267c1fc78ddfd9119f5378e1f79c734da994", "previous_filename": "src/test/ui/linkage4.stderr"}]}