{"sha": "fef7fb347315857d1ee78912ef8045a12c148097", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZjdmYjM0NzMxNTg1N2QxZWU3ODkxMmVmODA0NWExMmMxNDgwOTc=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-04-02T10:12:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-02T10:12:02Z"}, "message": "Merge pull request #2611 from phansch/improve_readme\n\nReadme: Explain nightly install and clippy update", "tree": {"sha": "6fba91065b3adeed24ffe41324701a248ebc60da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fba91065b3adeed24ffe41324701a248ebc60da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fef7fb347315857d1ee78912ef8045a12c148097", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJawgHyCRBK7hj4Ov3rIwAAdHIIABPRkU/mKMjPyAgWJIAvw9Oj\niu8RvlhJAo73dGyL1LV3JItGU/k0mfLI8D6CweguSdQqnvDeK28XWITpb8xHJx/Q\n0lBN9TSRyKNxB9z4LThVxVfQQ9WNa+2nHujcmNzxlk7jM1PjrgEoWlGpDHZlGNcw\nx+V8jepJAn/0bKtBX4alVmFp6YXJvHhY6YlI7XKpuFnVaecM7ny9g7lPYTPTb+8J\nRFW0Ak6xFhadeRtCdDSe2c5UbKOUOSaXF/67eBTfqjvao2UxqnM/PyiLP9iETqm3\nXgXmUv56Tilv+WLgV/UrvAq8IukT+5uOCQRnsP6CjWE1nu5Szuh54TGkTafAJWA=\n=RPSv\n-----END PGP SIGNATURE-----\n", "payload": "tree 6fba91065b3adeed24ffe41324701a248ebc60da\nparent c5559c1648b0810e5dff9f94935fba52e9a9e833\nparent fe8ba21962652e91a556fde596a19b6903c0000a\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1522663922 +0200\ncommitter GitHub <noreply@github.com> 1522663922 +0200\n\nMerge pull request #2611 from phansch/improve_readme\n\nReadme: Explain nightly install and clippy update"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fef7fb347315857d1ee78912ef8045a12c148097", "html_url": "https://github.com/rust-lang/rust/commit/fef7fb347315857d1ee78912ef8045a12c148097", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fef7fb347315857d1ee78912ef8045a12c148097/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5559c1648b0810e5dff9f94935fba52e9a9e833", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5559c1648b0810e5dff9f94935fba52e9a9e833", "html_url": "https://github.com/rust-lang/rust/commit/c5559c1648b0810e5dff9f94935fba52e9a9e833"}, {"sha": "fe8ba21962652e91a556fde596a19b6903c0000a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe8ba21962652e91a556fde596a19b6903c0000a", "html_url": "https://github.com/rust-lang/rust/commit/fe8ba21962652e91a556fde596a19b6903c0000a"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "f3320b0e2600a1621885d14b9ef74322bdb44d62", "filename": "README.md", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fef7fb347315857d1ee78912ef8045a12c148097/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/fef7fb347315857d1ee78912ef8045a12c148097/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=fef7fb347315857d1ee78912ef8045a12c148097", "patch": "@@ -35,6 +35,12 @@ as an included feature during build. All of these options are detailed below.\n \n As a general rule clippy will only work with the *latest* Rust nightly for now.\n \n+To install Rust nightly, the recommended way is to use [rustup](https://rustup.rs/):\n+\n+```terminal\n+rustup install nightly\n+```\n+\n ### As a cargo subcommand (`cargo clippy`)\n \n One way to use clippy is by installing clippy through cargo as a cargo\n@@ -48,6 +54,13 @@ cargo +nightly install clippy\n \n Now you can run clippy by invoking `cargo +nightly clippy`.\n \n+To update the subcommand together with the latest nightly use the [rust-update](rust-update) script or run:\n+\n+```terminal\n+rustup update nightly\n+cargo +nightly install --force clippy\n+```\n+\n In case you are not using rustup, you need to set the environment flag\n `SYSROOT` during installation so clippy knows where to find `librustc` and\n similar crates.\n@@ -191,7 +204,7 @@ You can add options  to `allow`/`warn`/`deny`:\n Note: `deny` produces errors instead of warnings.\n \n For convenience, `cargo clippy` automatically defines a `cargo-clippy`\n-features. This lets you set lints level and compile with or without clippy\n+feature. This lets you set lint levels and compile with or without clippy\n transparently:\n \n ```rust"}]}