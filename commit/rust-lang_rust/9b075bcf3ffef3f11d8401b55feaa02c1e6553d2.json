{"sha": "9b075bcf3ffef3f11d8401b55feaa02c1e6553d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMDc1YmNmM2ZmZWYzZjExZDg0MDFiNTVmZWFhMDJjMWU2NTUzZDI=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-07T16:59:59Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:47Z"}, "message": "libserialize: use unboxed closures", "tree": {"sha": "7d70e1c8b567f56fa828c931061f8bd56e011a91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d70e1c8b567f56fa828c931061f8bd56e011a91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b075bcf3ffef3f11d8401b55feaa02c1e6553d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b075bcf3ffef3f11d8401b55feaa02c1e6553d2", "html_url": "https://github.com/rust-lang/rust/commit/9b075bcf3ffef3f11d8401b55feaa02c1e6553d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b075bcf3ffef3f11d8401b55feaa02c1e6553d2/comments", "author": null, "committer": null, "parents": [{"sha": "95d0763707956ec6518694ec0fb8b82a7b3a1261", "url": "https://api.github.com/repos/rust-lang/rust/commits/95d0763707956ec6518694ec0fb8b82a7b3a1261", "html_url": "https://github.com/rust-lang/rust/commit/95d0763707956ec6518694ec0fb8b82a7b3a1261"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d34828ccee328e58822e2a6262963d9ce4393b06", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b075bcf3ffef3f11d8401b55feaa02c1e6553d2/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b075bcf3ffef3f11d8401b55feaa02c1e6553d2/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=9b075bcf3ffef3f11d8401b55feaa02c1e6553d2", "patch": "@@ -2680,7 +2680,7 @@ mod tests {\n                    from_str(a.to_pretty_str().as_slice()).unwrap());\n     }\n \n-    fn with_str_writer(f: |&mut io::Writer|) -> string::String {\n+    fn with_str_writer<F>(f: F) -> string::String where F: FnOnce(&mut io::Writer){\n         use std::str;\n \n         let mut m = Vec::new();"}]}