{"sha": "fe6baa9023cf599a7747e13c67d9adebc3161c59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNmJhYTkwMjNjZjU5OWE3NzQ3ZTEzYzY3ZDlhZGViYzMxNjFjNTk=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-05-14T18:34:17Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-06-05T19:01:40Z"}, "message": "added fresh-name fn", "tree": {"sha": "47b0cca12d7e5bebb22a9ddd01086fdb34cb339c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47b0cca12d7e5bebb22a9ddd01086fdb34cb339c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe6baa9023cf599a7747e13c67d9adebc3161c59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe6baa9023cf599a7747e13c67d9adebc3161c59", "html_url": "https://github.com/rust-lang/rust/commit/fe6baa9023cf599a7747e13c67d9adebc3161c59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe6baa9023cf599a7747e13c67d9adebc3161c59/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a158f1d19d93af4223fea2da49209e73a3ed002", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a158f1d19d93af4223fea2da49209e73a3ed002", "html_url": "https://github.com/rust-lang/rust/commit/5a158f1d19d93af4223fea2da49209e73a3ed002"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "ecf83483c21fe680b6c606d72b10b49fa0f0b342", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fe6baa9023cf599a7747e13c67d9adebc3161c59/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe6baa9023cf599a7747e13c67d9adebc3161c59/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=fe6baa9023cf599a7747e13c67d9adebc3161c59", "patch": "@@ -22,6 +22,9 @@ use core::char;\n use core::cmp::Equiv;\n use core::local_data;\n use core::str;\n+use core::hashmap::HashSet;\n+use core::rand;\n+use core::rand::RngUtil;\n use core::to_bytes;\n \n #[deriving(Encodable, Decodable, Eq)]\n@@ -559,6 +562,20 @@ pub fn gensym_ident(str : &str) -> ast::ident {\n     ast::new_ident(gensym(str))\n }\n \n+\n+// create a fresh name. In principle, this is just a\n+// gensym, but for debugging purposes, you'd like the\n+// resulting name to have a suggestive stringify, without\n+// paying the cost of guaranteeing that the name is\n+// truly unique.  I'm going to try to strike a balance\n+// by using a gensym with a name that has a random number\n+// at the end. So, the gensym guarantees the uniqueness,\n+// and the int helps to avoid confusion.\n+pub fn fresh_name(src_name : &str) -> Name {\n+    let num = rand::rng().gen_uint_range(0,0xffff);\n+   gensym(fmt!(\"%s_%u\",src_name,num))\n+}\n+\n /**\n  * All the valid words that have meaning in the Rust language.\n  *\n@@ -691,3 +708,14 @@ pub fn is_reserved_keyword(tok: &Token) -> bool {\n         _ => false,\n     }\n }\n+\n+#[cfg(test)]\n+mod test {\n+    use super::*;\n+    use std::io;\n+    #[test] fn t1() {\n+        let a = fresh_name(\"ghi\");\n+        io::println(fmt!(\"interned name: %u,\\ntextual name: %s\\n\",\n+                         a,*interner_get(a)));\n+    }\n+}"}]}