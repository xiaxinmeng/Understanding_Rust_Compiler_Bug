{"sha": "3dbac7882e27d680112cf172b789f9741c7ab25d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYmFjNzg4MmUyN2Q2ODAxMTJjZjE3MmI3ODlmOTc0MWM3YWIyNWQ=", "commit": {"author": {"name": "blackbeam", "email": "aikorsky@gmail.com", "date": "2015-01-22T09:29:49Z"}, "committer": {"name": "blackbeam", "email": "aikorsky@gmail.com", "date": "2015-01-22T09:29:49Z"}, "message": "libsyntax: fix for `has_test_signature`", "tree": {"sha": "5c2eaa18d397df0209d42dd525426d2d3d545b86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c2eaa18d397df0209d42dd525426d2d3d545b86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dbac7882e27d680112cf172b789f9741c7ab25d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dbac7882e27d680112cf172b789f9741c7ab25d", "html_url": "https://github.com/rust-lang/rust/commit/3dbac7882e27d680112cf172b789f9741c7ab25d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dbac7882e27d680112cf172b789f9741c7ab25d/comments", "author": {"login": "blackbeam", "id": 155883, "node_id": "MDQ6VXNlcjE1NTg4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/155883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blackbeam", "html_url": "https://github.com/blackbeam", "followers_url": "https://api.github.com/users/blackbeam/followers", "following_url": "https://api.github.com/users/blackbeam/following{/other_user}", "gists_url": "https://api.github.com/users/blackbeam/gists{/gist_id}", "starred_url": "https://api.github.com/users/blackbeam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blackbeam/subscriptions", "organizations_url": "https://api.github.com/users/blackbeam/orgs", "repos_url": "https://api.github.com/users/blackbeam/repos", "events_url": "https://api.github.com/users/blackbeam/events{/privacy}", "received_events_url": "https://api.github.com/users/blackbeam/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blackbeam", "id": 155883, "node_id": "MDQ6VXNlcjE1NTg4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/155883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blackbeam", "html_url": "https://github.com/blackbeam", "followers_url": "https://api.github.com/users/blackbeam/followers", "following_url": "https://api.github.com/users/blackbeam/following{/other_user}", "gists_url": "https://api.github.com/users/blackbeam/gists{/gist_id}", "starred_url": "https://api.github.com/users/blackbeam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blackbeam/subscriptions", "organizations_url": "https://api.github.com/users/blackbeam/orgs", "repos_url": "https://api.github.com/users/blackbeam/repos", "events_url": "https://api.github.com/users/blackbeam/events{/privacy}", "received_events_url": "https://api.github.com/users/blackbeam/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d2056a7e3e52b2aec41662cfd960e0eafe8494c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2056a7e3e52b2aec41662cfd960e0eafe8494c", "html_url": "https://github.com/rust-lang/rust/commit/5d2056a7e3e52b2aec41662cfd960e0eafe8494c"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "8933d3a966957c7496a7e466f8b61469f1d9a62f", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3dbac7882e27d680112cf172b789f9741c7ab25d/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dbac7882e27d680112cf172b789f9741c7ab25d/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=3dbac7882e27d680112cf172b789f9741c7ab25d", "patch": "@@ -295,6 +295,7 @@ fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n           &ast::ItemFn(ref decl, _, _, ref generics, _) => {\n             let no_output = match decl.output {\n                 ast::DefaultReturn(..) => true,\n+                ast::Return(ref t) if t.node == ast::TyTup(vec![]) => true,\n                 _ => false\n             };\n             if decl.inputs.is_empty()\n@@ -331,6 +332,7 @@ fn is_bench_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n                 let input_cnt = decl.inputs.len();\n                 let no_output = match decl.output {\n                     ast::DefaultReturn(..) => true,\n+                    ast::Return(ref t) if t.node == ast::TyTup(vec![]) => true,\n                     _ => false\n                 };\n                 let tparm_cnt = generics.ty_params.len();"}]}