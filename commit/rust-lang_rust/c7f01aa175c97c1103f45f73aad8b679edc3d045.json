{"sha": "c7f01aa175c97c1103f45f73aad8b679edc3d045", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZjAxYWExNzVjOTdjMTEwM2Y0NWY3M2FhZDhiNjc5ZWRjM2QwNDU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-29T11:11:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-29T11:11:01Z"}, "message": "invalid_const_promotion: check if we get the right signal", "tree": {"sha": "59203fa28d537aa7c90d5e8162a97beaf1bc52e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59203fa28d537aa7c90d5e8162a97beaf1bc52e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7f01aa175c97c1103f45f73aad8b679edc3d045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7f01aa175c97c1103f45f73aad8b679edc3d045", "html_url": "https://github.com/rust-lang/rust/commit/c7f01aa175c97c1103f45f73aad8b679edc3d045", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7f01aa175c97c1103f45f73aad8b679edc3d045/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6998b369faf3daf849f538d636bac9eda659fa5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6998b369faf3daf849f538d636bac9eda659fa5a", "html_url": "https://github.com/rust-lang/rust/commit/6998b369faf3daf849f538d636bac9eda659fa5a"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "53cb4c4b009e5c870c43f9e13ee76fc30f3dc58c", "filename": "src/test/run-pass/invalid_const_promotion.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c7f01aa175c97c1103f45f73aad8b679edc3d045/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7f01aa175c97c1103f45f73aad8b679edc3d045/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs?ref=c7f01aa175c97c1103f45f73aad8b679edc3d045", "patch": "@@ -11,18 +11,37 @@\n // ignore-wasm32\n // ignore-emscripten\n \n-#![feature(const_fn)]\n+#![feature(const_fn, libc)]\n #![allow(const_err)]\n \n+extern crate libc;\n+\n use std::env;\n use std::process::{Command, Stdio};\n \n+// this will panic in debug mode\n const fn bar() -> usize { 0 - 1 }\n \n fn foo() {\n     let _: &'static _ = &bar();\n }\n \n+#[cfg(unix)]\n+fn check_status(status: std::process::ExitStatus)\n+{\n+    use libc;\n+    use std::os::unix::process::ExitStatusExt;\n+\n+    assert!(status.signal() == Some(libc::SIGILL)\n+            || status.signal() == Some(libc::SIGABRT));\n+}\n+\n+#[cfg(not(unix))]\n+fn check_status(status: std::process::ExitStatus)\n+{\n+    assert!(!status.success());\n+}\n+\n fn main() {\n     let args: Vec<String> = env::args().collect();\n     if args.len() > 1 && args[1] == \"test\" {\n@@ -34,5 +53,5 @@ fn main() {\n         .stdout(Stdio::piped())\n         .stdin(Stdio::piped())\n         .arg(\"test\").output().unwrap();\n-    assert!(!p.status.success());\n+    check_status(p.status);\n }"}]}