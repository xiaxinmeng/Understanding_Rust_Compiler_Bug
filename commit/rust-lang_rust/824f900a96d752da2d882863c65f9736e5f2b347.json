{"sha": "824f900a96d752da2d882863c65f9736e5f2b347", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNGY5MDBhOTZkNzUyZGEyZDg4Mjg2M2M2NWY5NzM2ZTVmMmIzNDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-27T07:10:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-27T07:10:55Z"}, "message": "Auto merge of #77317 - varkor:break-diverging-value, r=nikomatsakis\n\nFix control flow check for breaking with diverging values\n\nFixes https://github.com/rust-lang/rust/issues/77156.", "tree": {"sha": "3a41011b5e1f023cc93c8a54468be0c59514b9d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a41011b5e1f023cc93c8a54468be0c59514b9d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/824f900a96d752da2d882863c65f9736e5f2b347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/824f900a96d752da2d882863c65f9736e5f2b347", "html_url": "https://github.com/rust-lang/rust/commit/824f900a96d752da2d882863c65f9736e5f2b347", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/824f900a96d752da2d882863c65f9736e5f2b347/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9b606ed679dd94f3f920ad339c0d2be0952b16c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b606ed679dd94f3f920ad339c0d2be0952b16c", "html_url": "https://github.com/rust-lang/rust/commit/c9b606ed679dd94f3f920ad339c0d2be0952b16c"}, {"sha": "d1c2815d6aa131182aa93603de215d63c52d0c53", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1c2815d6aa131182aa93603de215d63c52d0c53", "html_url": "https://github.com/rust-lang/rust/commit/d1c2815d6aa131182aa93603de215d63c52d0c53"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "b0417fca253101f81607aed6621e213a45febd0c", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/824f900a96d752da2d882863c65f9736e5f2b347/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/824f900a96d752da2d882863c65f9736e5f2b347/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=824f900a96d752da2d882863c65f9736e5f2b347", "patch": "@@ -627,7 +627,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 assert!(expr_opt.is_none() || self.tcx.sess.has_errors());\n             }\n \n-            ctxt.may_break = true;\n+            // If we encountered a `break`, then (no surprise) it may be possible to break from the\n+            // loop... unless the value being returned from the loop diverges itself, e.g.\n+            // `break return 5` or `break loop {}`.\n+            ctxt.may_break |= !self.diverges.get().is_always();\n \n             // the type of a `break` is always `!`, since it diverges\n             tcx.types.never"}, {"sha": "d070fddaffc195d58775446dcd3c44e8a9cef561", "filename": "src/test/ui/break-diverging-value.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/824f900a96d752da2d882863c65f9736e5f2b347/src%2Ftest%2Fui%2Fbreak-diverging-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/824f900a96d752da2d882863c65f9736e5f2b347/src%2Ftest%2Fui%2Fbreak-diverging-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbreak-diverging-value.rs?ref=824f900a96d752da2d882863c65f9736e5f2b347", "patch": "@@ -0,0 +1,37 @@\n+#![feature(never_type)]\n+\n+fn loop_break_return() -> i32 {\n+    let loop_value = loop { break return 0 }; // ok\n+}\n+\n+fn loop_break_loop() -> i32 {\n+    let loop_value = loop { break loop {} }; // ok\n+}\n+\n+fn loop_break_break() -> i32 { //~ ERROR mismatched types\n+    let loop_value = loop { break break };\n+}\n+\n+fn loop_break_return_2() -> i32 {\n+    let loop_value = loop { break { return 0; () } }; // ok\n+}\n+\n+enum Void {}\n+\n+fn get_void() -> Void {\n+    panic!()\n+}\n+\n+fn loop_break_void() -> i32 { //~ ERROR mismatched types\n+    let loop_value = loop { break get_void() };\n+}\n+\n+fn get_never() -> ! {\n+    panic!()\n+}\n+\n+fn loop_break_never() -> i32 {\n+    let loop_value = loop { break get_never() }; // ok\n+}\n+\n+fn main() {}"}, {"sha": "69edcd240800222081f7eddcaeb9b55107101345", "filename": "src/test/ui/break-diverging-value.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/824f900a96d752da2d882863c65f9736e5f2b347/src%2Ftest%2Fui%2Fbreak-diverging-value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/824f900a96d752da2d882863c65f9736e5f2b347/src%2Ftest%2Fui%2Fbreak-diverging-value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbreak-diverging-value.stderr?ref=824f900a96d752da2d882863c65f9736e5f2b347", "patch": "@@ -0,0 +1,19 @@\n+error[E0308]: mismatched types\n+  --> $DIR/break-diverging-value.rs:11:26\n+   |\n+LL | fn loop_break_break() -> i32 {\n+   |    ----------------      ^^^ expected `i32`, found `()`\n+   |    |\n+   |    implicitly returns `()` as its body has no tail or `return` expression\n+\n+error[E0308]: mismatched types\n+  --> $DIR/break-diverging-value.rs:25:25\n+   |\n+LL | fn loop_break_void() -> i32 {\n+   |    ---------------      ^^^ expected `i32`, found `()`\n+   |    |\n+   |    implicitly returns `()` as its body has no tail or `return` expression\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}