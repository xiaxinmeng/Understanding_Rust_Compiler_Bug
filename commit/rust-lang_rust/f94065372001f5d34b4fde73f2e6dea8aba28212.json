{"sha": "f94065372001f5d34b4fde73f2e6dea8aba28212", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NDA2NTM3MjAwMWY1ZDM0YjRmZGU3M2YyZTZkZWE4YWJhMjgyMTI=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-03T01:07:33Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-07-06T01:09:31Z"}, "message": "Update the new macro demo.", "tree": {"sha": "e0c5508c8f1a4cf1693a8e5f5cdc00d28983a8fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0c5508c8f1a4cf1693a8e5f5cdc00d28983a8fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f94065372001f5d34b4fde73f2e6dea8aba28212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f94065372001f5d34b4fde73f2e6dea8aba28212", "html_url": "https://github.com/rust-lang/rust/commit/f94065372001f5d34b4fde73f2e6dea8aba28212", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f94065372001f5d34b4fde73f2e6dea8aba28212/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c6fe6470e6a19899bd32add0a282d3ae2a97b8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c6fe6470e6a19899bd32add0a282d3ae2a97b8a", "html_url": "https://github.com/rust-lang/rust/commit/0c6fe6470e6a19899bd32add0a282d3ae2a97b8a"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "c36acc572ab759756dfbf39782d1c3dad4dcc792", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f94065372001f5d34b4fde73f2e6dea8aba28212/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f94065372001f5d34b4fde73f2e6dea8aba28212/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f94065372001f5d34b4fde73f2e6dea8aba28212", "patch": "@@ -1114,22 +1114,36 @@ class parser {\n \n     /* temporary */\n     fn parse_tt_mac_demo() -> @expr {\n+\n+        let name_idx = @mut 0u;\n         let ms = self.parse_seq(token::LBRACE, token::RBRACE,\n                                 common::seq_sep_none(),\n-                                |p| p.parse_matcher(@mut 0u)).node;\n-        let tt = self.parse_token_tree();\n-        //let tt_rhs = self.parse_token_tree();\n-        alt tt {\n-          tt_delim(tts) {\n+                                |p| p.parse_matcher(name_idx)).node;\n+        self.quote_depth += 1u;\n+        let tt_rhs= self.parse_token_tree();\n+        self.quote_depth -= 1u;\n+        let tt_readme = self.parse_token_tree();\n+        alt (tt_readme, tt_rhs) {\n+          (tt_delim(tts), tt_delim(tts_rhs)) {\n             let rdr = lexer::new_tt_reader(self.reader.span_diag(),\n                                            self.reader.interner(), none, tts)\n                 as reader;\n-            ext::tt::earley_parser::parse(self.sess, self.cfg, rdr, ms);\n+\n+            let matches = ext::tt::earley_parser::parse\n+                (self.sess, self.cfg, rdr, ms);\n+\n+            let transcriber = ext::tt::transcribe::new_tt_reader\n+                (self.reader.span_diag(), self.reader.interner(),\n+                 some(matches), tts_rhs);\n+            let res_parser = parser(self.sess, self.cfg,\n+                                    transcriber as reader,\n+                                    SOURCE_FILE);\n+\n+            ret res_parser.parse_expr();\n           }\n           _ { fail; }\n         }\n \n-        ret self.mk_expr(0u, 0u, expr_break);\n     }\n \n     fn parse_matcher(name_idx: @mut uint) -> matcher {"}]}