{"sha": "071d8b14dab01f636aa4c8ec707a59a00bfa356d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MWQ4YjE0ZGFiMDFmNjM2YWE0YzhlYzcwN2E1OWEwMGJmYTM1NmQ=", "commit": {"author": {"name": "Hannah McLaughlin", "email": "h@mcla.ug", "date": "2020-11-15T20:45:52Z"}, "committer": {"name": "Hannah McLaughlin", "email": "h@mcla.ug", "date": "2020-11-18T21:20:51Z"}, "message": "Fix rustdoc: Referencing methods on extern_types does not resolve #78777: handle DefKind::ForeignTy variant", "tree": {"sha": "fc294dfe7eed32bb40d2bad9e0d133cf2567f2a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc294dfe7eed32bb40d2bad9e0d133cf2567f2a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/071d8b14dab01f636aa4c8ec707a59a00bfa356d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/071d8b14dab01f636aa4c8ec707a59a00bfa356d", "html_url": "https://github.com/rust-lang/rust/commit/071d8b14dab01f636aa4c8ec707a59a00bfa356d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/071d8b14dab01f636aa4c8ec707a59a00bfa356d/comments", "author": {"login": "lochsh", "id": 5368222, "node_id": "MDQ6VXNlcjUzNjgyMjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5368222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lochsh", "html_url": "https://github.com/lochsh", "followers_url": "https://api.github.com/users/lochsh/followers", "following_url": "https://api.github.com/users/lochsh/following{/other_user}", "gists_url": "https://api.github.com/users/lochsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lochsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lochsh/subscriptions", "organizations_url": "https://api.github.com/users/lochsh/orgs", "repos_url": "https://api.github.com/users/lochsh/repos", "events_url": "https://api.github.com/users/lochsh/events{/privacy}", "received_events_url": "https://api.github.com/users/lochsh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lochsh", "id": 5368222, "node_id": "MDQ6VXNlcjUzNjgyMjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5368222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lochsh", "html_url": "https://github.com/lochsh", "followers_url": "https://api.github.com/users/lochsh/followers", "following_url": "https://api.github.com/users/lochsh/following{/other_user}", "gists_url": "https://api.github.com/users/lochsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lochsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lochsh/subscriptions", "organizations_url": "https://api.github.com/users/lochsh/orgs", "repos_url": "https://api.github.com/users/lochsh/repos", "events_url": "https://api.github.com/users/lochsh/events{/privacy}", "received_events_url": "https://api.github.com/users/lochsh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d2d0014922e9f541694bfe87642749239990e0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d2d0014922e9f541694bfe87642749239990e0e", "html_url": "https://github.com/rust-lang/rust/commit/8d2d0014922e9f541694bfe87642749239990e0e"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "fd09ba04b3db92fdac4e636827ca3cac0c73bbae", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/071d8b14dab01f636aa4c8ec707a59a00bfa356d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/071d8b14dab01f636aa4c8ec707a59a00bfa356d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=071d8b14dab01f636aa4c8ec707a59a00bfa356d", "patch": "@@ -492,7 +492,14 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n             Res::PrimTy(prim) => Some(\n                 self.resolve_primitive_associated_item(prim, ns, module_id, item_name, item_str),\n             ),\n-            Res::Def(DefKind::Struct | DefKind::Union | DefKind::Enum | DefKind::TyAlias, did) => {\n+            Res::Def(\n+                DefKind::Struct\n+                | DefKind::Union\n+                | DefKind::Enum\n+                | DefKind::TyAlias\n+                | DefKind::ForeignTy,\n+                did,\n+            ) => {\n                 debug!(\"looking for associated item named {} for item {:?}\", item_name, did);\n                 // Checks if item_name belongs to `impl SomeItem`\n                 let assoc_item = cx"}]}