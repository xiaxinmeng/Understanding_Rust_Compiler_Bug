{"sha": "e9cc540ab5606f3c3ce3e298e78df610ede3f7bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5Y2M1NDBhYjU2MDZmM2MzY2UzZTI5OGU3OGRmNjEwZWRlM2Y3YmI=", "commit": {"author": {"name": "Grzegorz", "email": "grzegorz.bartoszek@thaumatec.com", "date": "2019-02-26T11:12:27Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-04-19T04:32:34Z"}, "message": "do not trigger redundant_closure when there is a difference in borrow level between closure parameter and \"self\"", "tree": {"sha": "94bbee45dc15e251f68063d5a9d263807006ee86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94bbee45dc15e251f68063d5a9d263807006ee86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9cc540ab5606f3c3ce3e298e78df610ede3f7bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9cc540ab5606f3c3ce3e298e78df610ede3f7bb", "html_url": "https://github.com/rust-lang/rust/commit/e9cc540ab5606f3c3ce3e298e78df610ede3f7bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9cc540ab5606f3c3ce3e298e78df610ede3f7bb/comments", "author": null, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d7c24f9b7eeee8e1d24e509785bacb070666baa", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d7c24f9b7eeee8e1d24e509785bacb070666baa", "html_url": "https://github.com/rust-lang/rust/commit/5d7c24f9b7eeee8e1d24e509785bacb070666baa"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "59e6ec768fbc271660d5cf1bba64f3698cf97971", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e9cc540ab5606f3c3ce3e298e78df610ede3f7bb/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9cc540ab5606f3c3ce3e298e78df610ede3f7bb/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=e9cc540ab5606f3c3ce3e298e78df610ede3f7bb", "patch": "@@ -129,25 +129,30 @@ fn get_ufcs_type_name(\n     let actual_type_of_self = &cx.tables.node_type(self_arg.hir_id).sty;\n \n     if let Some(trait_id) = cx.tcx.trait_of_item(method_def_id) {\n-        //if the method expectes &self, ufcs requires explicit borrowing so closure can't be removed\n-        return match (expected_type_of_self, actual_type_of_self) {\n-            (ty::Ref(_, _, _), ty::Ref(_, _, _)) => Some(cx.tcx.item_path_str(trait_id)),\n-            (l, r) => match (l, r) {\n-                (ty::Ref(_, _, _), _) | (_, ty::Ref(_, _, _)) => None,\n-                (_, _) => Some(cx.tcx.item_path_str(trait_id)),\n-            },\n-        };\n+        if match_borrow_depth(expected_type_of_self, actual_type_of_self) {\n+            return Some(cx.tcx.item_path_str(trait_id));\n+        }\n     }\n \n     cx.tcx.impl_of_method(method_def_id).and_then(|_| {\n-        //a type may implicitly implement other types methods (e.g. Deref)\n+        //a type may implicitly implement other type's methods (e.g. Deref)\n         if match_types(expected_type_of_self, actual_type_of_self) {\n             return Some(get_type_name(cx, &actual_type_of_self));\n         }\n         None\n     })\n }\n \n+fn match_borrow_depth(lhs: &ty::TyKind<'_>, rhs: &ty::TyKind<'_>) -> bool {\n+    match (lhs, rhs) {\n+        (ty::Ref(_, t1, _), ty::Ref(_, t2, _)) => match_borrow_depth(&t1.sty, &t2.sty),\n+        (l, r) => match (l, r) {\n+            (ty::Ref(_, _, _), _) | (_, ty::Ref(_, _, _)) => false,\n+            (_, _) => true,\n+        },\n+    }\n+}\n+\n fn match_types(lhs: &ty::TyKind<'_>, rhs: &ty::TyKind<'_>) -> bool {\n     match (lhs, rhs) {\n         (ty::Bool, ty::Bool)"}, {"sha": "f777939c67d2f11261f32ebbafa88c6f1f061920", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e9cc540ab5606f3c3ce3e298e78df610ede3f7bb/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9cc540ab5606f3c3ce3e298e78df610ede3f7bb/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=e9cc540ab5606f3c3ce3e298e78df610ede3f7bb", "patch": "@@ -88,6 +88,14 @@ fn test_redundant_closures_containing_method_calls() {\n     let c = Some(TestStruct { some_ref: &i })\n         .as_ref()\n         .map(|c| c.to_ascii_uppercase());\n+\n+    fn test_different_borrow_levels<T>(t: &[&T])\n+    where\n+        T: TestTrait,\n+    {\n+        t.iter().filter(|x| x.trait_foo_ref());\n+        t.iter().map(|x| x.trait_foo_ref());\n+    }\n }\n \n fn meta<F>(f: F)"}]}