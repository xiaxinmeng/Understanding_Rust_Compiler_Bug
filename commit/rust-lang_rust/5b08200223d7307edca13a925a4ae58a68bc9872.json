{"sha": "5b08200223d7307edca13a925a4ae58a68bc9872", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMDgyMDAyMjNkNzMwN2VkY2ExM2E5MjVhNGFlNThhNjhiYzk4NzI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-01T09:49:33Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-01T09:49:33Z"}, "message": "Rollup merge of #54676 - pnkfelix:issue-15287-kill-zflag-disabling-ast-check, r=alexcrichton\n\nRemove `-Z disable_ast_check_for_mutation_in_guard`\n\nOne should use `#![feature(bind_by_move_pattern_guards)]` over `-Z disable_ast_check_for_mutation_in_guard`\n\ncc #15287", "tree": {"sha": "867c17d68b0dce674e3ed4905b07d726ec4171ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/867c17d68b0dce674e3ed4905b07d726ec4171ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b08200223d7307edca13a925a4ae58a68bc9872", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlux7a0ACgkQ/vbIBR0O\nATyJzQ//dQ1SgNoMTfSqCwvgUR4f+G6RaEc7Ep2llGfE0RiuNg6O85PdDk8PDkh1\nPXRLKi6JLXNWLRu+3bk9t4lKW4TPC3M0mzbowzIE5wNq39IL/qQ5v8QDaqzBxDpu\nK9wuTKM9rPXnjIx8ydAQ+8HPQyAS9n+4aP5JGbNA38t8UrxbuaApau5vFUFiLLyi\nq9FFDRxSFeZCq5zDuH2FQ+r1+W2MZrwBEehyZ1Ydb8fmCuolIpYD2PEhIo3LKJf3\nkEihDs3zBjtCiENYg6uLPGmc5PPc83dfzr3qIiw9XwglTSq/Ku8errhFydkLp/Cy\nN4JavIefxy2QXDQGPcj0+PkN47xeXzENBB6zmgPxTdzOxmMy8rokdpi6MeR9PKAZ\n4WKe7aJoaClkKAm+Aj87mda+jrZK6+/yCtC60qTUzwNrRmBEROLzlQb5kEzYSDcM\nfLJodZTMOI4ml3XLpHfbURVQPEVfOe0uuvJ2xBAnPB2NgLdvfQ/WUkk12/TYBleR\nklinZeoEigq4c709HAprkIsFa8glDQ6AXipMF+Dxc5o+0d4JVYBEO4rsnSF7oEbz\ncDVsjTSXeGlo5V7c21E4X2r+1l0mRhcsWuzcjHsO4WzE45kZxzber+XESj77i4yL\ndGmTf59hXQmCO2tUBjmmTEeQtc6PtHTkQjNedyp5xpX986Y5Grk=\n=cFTJ\n-----END PGP SIGNATURE-----", "payload": "tree 867c17d68b0dce674e3ed4905b07d726ec4171ce\nparent 4433116da136e2e5ef388402b8e9d21f9787034c\nparent f9ff7b7336fef738caba56f1eabe72a299f2e136\nauthor kennytm <kennytm@gmail.com> 1538387373 +0800\ncommitter kennytm <kennytm@gmail.com> 1538387373 +0800\n\nRollup merge of #54676 - pnkfelix:issue-15287-kill-zflag-disabling-ast-check, r=alexcrichton\n\nRemove `-Z disable_ast_check_for_mutation_in_guard`\n\nOne should use `#![feature(bind_by_move_pattern_guards)]` over `-Z disable_ast_check_for_mutation_in_guard`\n\ncc #15287\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b08200223d7307edca13a925a4ae58a68bc9872", "html_url": "https://github.com/rust-lang/rust/commit/5b08200223d7307edca13a925a4ae58a68bc9872", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b08200223d7307edca13a925a4ae58a68bc9872/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4433116da136e2e5ef388402b8e9d21f9787034c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4433116da136e2e5ef388402b8e9d21f9787034c", "html_url": "https://github.com/rust-lang/rust/commit/4433116da136e2e5ef388402b8e9d21f9787034c"}, {"sha": "f9ff7b7336fef738caba56f1eabe72a299f2e136", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9ff7b7336fef738caba56f1eabe72a299f2e136", "html_url": "https://github.com/rust-lang/rust/commit/f9ff7b7336fef738caba56f1eabe72a299f2e136"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "c532b5ee56f47d2d908cf442795842f84b0182e5", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=5b08200223d7307edca13a925a4ae58a68bc9872", "patch": "@@ -1322,8 +1322,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         useful for profiling / PGO.\"),\n     relro_level: Option<RelroLevel> = (None, parse_relro_level, [TRACKED],\n         \"choose which RELRO level to use\"),\n-    disable_ast_check_for_mutation_in_guard: bool = (false, parse_bool, [UNTRACKED],\n-        \"skip AST-based mutation-in-guard check (mir-borrowck provides more precise check)\"),\n     nll_subminimal_causes: bool = (false, parse_bool, [UNTRACKED],\n         \"when tracking region error causes, accept subminimal results for faster execution.\"),\n     nll_facts: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "64e9d15092eb8d0aa74524ec0931bfdbc9531f39", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=5b08200223d7307edca13a925a4ae58a68bc9872", "patch": "@@ -1467,11 +1467,6 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     /// If true, we should use a naive AST walk to determine if match\n     /// guard could perform bad mutations (or mutable-borrows).\n     pub fn check_for_mutation_in_guard_via_ast_walk(self) -> bool {\n-        // If someone passes the `-Z` flag, they're asking for the footgun.\n-        if self.sess.opts.debugging_opts.disable_ast_check_for_mutation_in_guard {\n-            return false;\n-        }\n-\n         // If someone requests the feature, then be a little more\n         // careful and ensure that MIR-borrowck is enabled (which can\n         // happen via edition selection, via `feature(nll)`, or via an"}, {"sha": "10a4678107e1c88cb44f69313055f20ced709ac8", "filename": "src/test/run-pass/issues/issue-24535-allow-mutable-borrow-in-match-guard.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Ftest%2Frun-pass%2Fissues%2Fissue-24535-allow-mutable-borrow-in-match-guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Ftest%2Frun-pass%2Fissues%2Fissue-24535-allow-mutable-borrow-in-match-guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-24535-allow-mutable-borrow-in-match-guard.rs?ref=5b08200223d7307edca13a925a4ae58a68bc9872", "patch": "@@ -12,12 +12,11 @@\n // This test illustrates that under NLL, we can remove our overly\n // conservative approach for disallowing mutations of match inputs.\n \n-// See further discussion on rust-lang/rust#24535 and\n-// rust-lang/rfcs#1006.\n-\n-// compile-flags: -Z disable-ast-check-for-mutation-in-guard\n+// See further discussion on rust-lang/rust#24535,\n+// rust-lang/rfcs#1006, and rust-lang/rfcs#107\n \n #![feature(nll)]\n+#![feature(bind_by_move_pattern_guards)]\n \n fn main() {\n     rust_issue_24535();"}, {"sha": "6cbd493b9918207623952629ac01f00eb983f83b", "filename": "src/test/ui/issues/issue-27282-reborrow-ref-mut-in-guard.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Ftest%2Fui%2Fissues%2Fissue-27282-reborrow-ref-mut-in-guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Ftest%2Fui%2Fissues%2Fissue-27282-reborrow-ref-mut-in-guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27282-reborrow-ref-mut-in-guard.rs?ref=5b08200223d7307edca13a925a4ae58a68bc9872", "patch": "@@ -15,8 +15,8 @@\n // reject it. But I want to make sure that we continue to reject it\n // (under NLL) even when that conservaive check goes away.\n \n-// compile-flags: -Z disable-ast-check-for-mutation-in-guard\n \n+#![feature(bind_by_move_pattern_guards)]\n #![feature(nll)]\n \n fn main() {"}, {"sha": "f359800812c87a733ccf55b00b75a79cbcd0a041", "filename": "src/test/ui/nll/match-guards-partially-borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-partially-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b08200223d7307edca13a925a4ae58a68bc9872/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-partially-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-partially-borrow.rs?ref=5b08200223d7307edca13a925a4ae58a68bc9872", "patch": "@@ -5,8 +5,8 @@\n // Test that we don't allow mutating the value being matched on in a way that\n // changes which patterns it matches, until we have chosen an arm.\n \n-// compile-flags: -Zdisable-ast-check-for-mutation-in-guard\n \n+#![feature(bind_by_move_pattern_guards)]\n #![feature(nll)]\n \n fn ok_mutation_in_guard(mut q: i32) {"}]}