{"sha": "68a649d547c844cb44ee619b7f45d1193dad2b02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4YTY0OWQ1NDdjODQ0Y2I0NGVlNjE5YjdmNDVkMTE5M2RhZDJiMDI=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-27T16:00:46Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-27T16:00:46Z"}, "message": "Simplify unsafe expr collection match", "tree": {"sha": "c5da78ae4eff38e88a7dace20a5dcbd913b6224a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5da78ae4eff38e88a7dace20a5dcbd913b6224a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68a649d547c844cb44ee619b7f45d1193dad2b02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68a649d547c844cb44ee619b7f45d1193dad2b02", "html_url": "https://github.com/rust-lang/rust/commit/68a649d547c844cb44ee619b7f45d1193dad2b02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68a649d547c844cb44ee619b7f45d1193dad2b02/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7e25ba854a5ca0f1dee7082c113170876358632", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7e25ba854a5ca0f1dee7082c113170876358632", "html_url": "https://github.com/rust-lang/rust/commit/b7e25ba854a5ca0f1dee7082c113170876358632"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "c512c4f8e9cb0204b161493186af0c88ef3f066c", "filename": "crates/ra_hir_ty/src/unsafe_validation.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/68a649d547c844cb44ee619b7f45d1193dad2b02/crates%2Fra_hir_ty%2Fsrc%2Funsafe_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68a649d547c844cb44ee619b7f45d1193dad2b02/crates%2Fra_hir_ty%2Fsrc%2Funsafe_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Funsafe_validation.rs?ref=68a649d547c844cb44ee619b7f45d1193dad2b02", "patch": "@@ -108,13 +108,12 @@ fn walk_unsafe(\n                 unsafe_exprs.push(UnsafeExpr { expr: current, inside_unsafe_block });\n             }\n         }\n+        Expr::Unsafe { body: child } => {\n+            return walk_unsafe(unsafe_exprs, db, infer, body, *child, true);\n+        }\n         _ => {}\n     }\n \n-    if let &Expr::Unsafe { body: child } = expr {\n-        return walk_unsafe(unsafe_exprs, db, infer, body, child, true);\n-    }\n-\n     expr.walk_child_exprs(|child| {\n         walk_unsafe(unsafe_exprs, db, infer, body, child, inside_unsafe_block);\n     });"}]}