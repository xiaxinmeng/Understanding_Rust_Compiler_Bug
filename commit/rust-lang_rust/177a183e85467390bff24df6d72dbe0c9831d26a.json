{"sha": "177a183e85467390bff24df6d72dbe0c9831d26a", "node_id": "C_kwDOAAsO6NoAKDE3N2ExODNlODU0NjczOTBiZmYyNGRmNmQ3MmRiZTBjOTgzMWQyNmE", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T13:51:17Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T13:52:15Z"}, "message": "minor: simplify", "tree": {"sha": "e889c1daedc53edbc621b67d1fc1fb0e266328f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e889c1daedc53edbc621b67d1fc1fb0e266328f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/177a183e85467390bff24df6d72dbe0c9831d26a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/177a183e85467390bff24df6d72dbe0c9831d26a", "html_url": "https://github.com/rust-lang/rust/commit/177a183e85467390bff24df6d72dbe0c9831d26a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/177a183e85467390bff24df6d72dbe0c9831d26a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56b51852c239effd266fa3853ba5eb5da367cbf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/56b51852c239effd266fa3853ba5eb5da367cbf1", "html_url": "https://github.com/rust-lang/rust/commit/56b51852c239effd266fa3853ba5eb5da367cbf1"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "1070a26c26efa632f45ffd3e1510d37bc33036b1", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/177a183e85467390bff24df6d72dbe0c9831d26a/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177a183e85467390bff24df6d72dbe0c9831d26a/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=177a183e85467390bff24df6d72dbe0c9831d26a", "patch": "@@ -448,8 +448,8 @@ impl<'db> SemanticsImpl<'db> {\n     }\n \n     fn resolve_derive_macro(&self, attr: &ast::Attr) -> Option<Vec<MacroDef>> {\n-        let macro_call_ids = self.derive_macro_calls(attr)?;\n-        let res = macro_call_ids\n+        let res = self\n+            .derive_macro_calls(attr)?\n             .iter()\n             .map(|&call| {\n                 let loc: MacroCallLoc = self.db.lookup_intern_macro_call(call);\n@@ -460,9 +460,8 @@ impl<'db> SemanticsImpl<'db> {\n     }\n \n     fn expand_derive_macro(&self, attr: &ast::Attr) -> Option<Vec<SyntaxNode>> {\n-        let macro_call_ids = self.derive_macro_calls(attr)?;\n-\n-        let expansions: Vec<_> = macro_call_ids\n+        let res: Vec<_> = self\n+            .derive_macro_calls(attr)?\n             .iter()\n             .map(|call| call.as_file())\n             .flat_map(|file_id| {\n@@ -471,12 +470,7 @@ impl<'db> SemanticsImpl<'db> {\n                 Some(node)\n             })\n             .collect();\n-\n-        if expansions.is_empty() {\n-            None\n-        } else {\n-            Some(expansions)\n-        }\n+        Some(res)\n     }\n \n     fn derive_macro_calls(&self, attr: &ast::Attr) -> Option<Vec<MacroCallId>> {"}]}