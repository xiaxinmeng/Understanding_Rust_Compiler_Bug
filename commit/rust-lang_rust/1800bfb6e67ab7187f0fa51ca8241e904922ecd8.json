{"sha": "1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MDBiZmI2ZTY3YWI3MTg3ZjBmYTUxY2E4MjQxZTkwNDkyMmVjZDg=", "commit": {"author": {"name": "Andrew Ross", "email": "rossirsa@gmail.com", "date": "2019-01-18T10:59:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-19T12:36:54Z"}, "message": "Config for raLspServerPath will be overwritten if __RA_LSP_SERVER_DEBUG is set\nChanged presentation from clear to reveal silent\nRemoved the vscode gitignore entry\nAdded debugging documentation\nAdded tasks and launch configs", "tree": {"sha": "50b642b7cd89beca48a622b4380ebd183da9e462", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50b642b7cd89beca48a622b4380ebd183da9e462"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "html_url": "https://github.com/rust-lang/rust/commit/1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/comments", "author": {"login": "andrew-w-ross", "id": 14924726, "node_id": "MDQ6VXNlcjE0OTI0NzI2", "avatar_url": "https://avatars.githubusercontent.com/u/14924726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-w-ross", "html_url": "https://github.com/andrew-w-ross", "followers_url": "https://api.github.com/users/andrew-w-ross/followers", "following_url": "https://api.github.com/users/andrew-w-ross/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-w-ross/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-w-ross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-w-ross/subscriptions", "organizations_url": "https://api.github.com/users/andrew-w-ross/orgs", "repos_url": "https://api.github.com/users/andrew-w-ross/repos", "events_url": "https://api.github.com/users/andrew-w-ross/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-w-ross/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "168c46ab777f6e3263bb2e58f0ce9b0b1619114e", "url": "https://api.github.com/repos/rust-lang/rust/commits/168c46ab777f6e3263bb2e58f0ce9b0b1619114e", "html_url": "https://github.com/rust-lang/rust/commit/168c46ab777f6e3263bb2e58f0ce9b0b1619114e"}], "stats": {"total": 477, "additions": 470, "deletions": 7}, "files": [{"sha": "25e2b01b41cea7beb6bb9e5e6a75bafcb116f290", "filename": ".gitignore", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "patch": "@@ -2,6 +2,5 @@\n crates/*/target\n **/*.rs.bk\n .idea/*\n-.vscode/*\n *.log\n *.iml"}, {"sha": "027eeabc4c3e50e9002a85343397d5fe271efdf8", "filename": ".vscode/extensions.json", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/.vscode%2Fextensions.json", "raw_url": "https://github.com/rust-lang/rust/raw/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/.vscode%2Fextensions.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.vscode%2Fextensions.json?ref=1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "patch": "@@ -0,0 +1,9 @@\n+{\n+  // See http://go.microsoft.com/fwlink/?LinkId=827846 to learn about workspace recommendations.\n+  // Extension identifier format: ${publisher}.${name}. Example: vscode.csharp\n+\n+  // List of extensions which should be recommended for users of this workspace.\n+  \"recommendations\": [\"vadimcn.vscode-lldb\"],\n+  // List of extensions recommended by VS Code that should not be recommended for users of this workspace.\n+  \"unwantedRecommendations\": []\n+}"}, {"sha": "9aafc8bd3358e83b2753077e881b2a401db39b38", "filename": ".vscode/launch.json", "status": "added", "additions": 340, "deletions": 0, "changes": 340, "blob_url": "https://github.com/rust-lang/rust/blob/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/.vscode%2Flaunch.json", "raw_url": "https://github.com/rust-lang/rust/raw/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/.vscode%2Flaunch.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.vscode%2Flaunch.json?ref=1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "patch": "@@ -0,0 +1,340 @@\n+{\n+  // Use IntelliSense to learn about possible attributes.\n+  // Hover to view descriptions of existing attributes.\n+  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n+  \"version\": \"0.2.0\",\n+  \"configurations\": [\n+    {\n+      \"name\": \"Debug Extension\",\n+      \"type\": \"extensionHost\",\n+      \"request\": \"launch\",\n+      \"runtimeExecutable\": \"${execPath}\",\n+      \"args\": [\n+        \"--extensionDevelopmentPath=${workspaceFolder}/editors/code\",\n+        \"--disable-extensions\"\n+      ],\n+      \"env\": {\n+        \"__RA_LSP_SERVER_DEBUG\": \"${workspaceFolder}/target/debug/ra_lsp_server\"\n+      },\n+      \"outFiles\": [\"${workspaceFolder}/editors/code/out/**/*.js\"],\n+      \"preLaunchTask\": \"Build All\"\n+    },\n+    {\n+      \"name\": \"Debug Lsp Server\",\n+      \"type\": \"lldb\",\n+      \"request\": \"attach\",\n+      \"program\": \"${workspaceFolder}/target/debug/ra_lsp_server\",\n+      \"pid\": \"${command:pickMyProcess}\",\n+      \"sourceLanguages\": [\"rust\"]\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in library 'gen_lsp_server'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--lib\", \"--package=gen_lsp_server\"],\n+        \"filter\": {\n+          \"kind\": \"lib\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in library 'ra_analysis'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--lib\", \"--package=ra_analysis\"],\n+        \"filter\": {\n+          \"kind\": \"lib\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug test 'tests'\",\n+      \"cargo\": {\n+        \"args\": [\"build\", \"--test=tests\", \"--package=ra_analysis\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in test 'tests'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--test=tests\", \"--package=ra_analysis\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in library 'ra_hir'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--lib\", \"--package=ra_hir\"],\n+        \"filter\": {\n+          \"kind\": \"lib\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in library 'ra_db'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--lib\", \"--package=ra_db\"],\n+        \"filter\": {\n+          \"kind\": \"lib\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in library 'ra_editor'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--lib\", \"--package=ra_editor\"],\n+        \"filter\": {\n+          \"kind\": \"lib\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in library 'ra_syntax'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--lib\", \"--package=ra_syntax\"],\n+        \"filter\": {\n+          \"kind\": \"lib\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug test 'test'\",\n+      \"cargo\": {\n+        \"args\": [\"build\", \"--test=test\", \"--package=ra_syntax\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in test 'test'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--test=test\", \"--package=ra_syntax\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in library 'test_utils'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--lib\", \"--package=test_utils\"],\n+        \"filter\": {\n+          \"kind\": \"lib\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug executable 'ra_cli'\",\n+      \"cargo\": {\n+        \"args\": [\"build\", \"--bin=ra_cli\", \"--package=ra_cli\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in executable 'ra_cli'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--bin=ra_cli\", \"--package=ra_cli\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in library 'tools'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--lib\", \"--package=tools\"],\n+        \"filter\": {\n+          \"kind\": \"lib\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug executable 'tools'\",\n+      \"cargo\": {\n+        \"args\": [\"build\", \"--bin=tools\", \"--package=tools\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in executable 'tools'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--bin=tools\", \"--package=tools\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug test 'cli'\",\n+      \"cargo\": {\n+        \"args\": [\"build\", \"--test=cli\", \"--package=tools\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in test 'cli'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--test=cli\", \"--package=tools\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in library 'ra_lsp_server'\",\n+      \"cargo\": {\n+        \"args\": [\"test\", \"--no-run\", \"--lib\", \"--package=ra_lsp_server\"],\n+        \"filter\": {\n+          \"kind\": \"lib\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug executable 'ra_lsp_server'\",\n+      \"cargo\": {\n+        \"args\": [\"build\", \"--bin=ra_lsp_server\", \"--package=ra_lsp_server\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in executable 'ra_lsp_server'\",\n+      \"cargo\": {\n+        \"args\": [\n+          \"test\",\n+          \"--no-run\",\n+          \"--bin=ra_lsp_server\",\n+          \"--package=ra_lsp_server\"\n+        ],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug test 'heavy_tests'\",\n+      \"cargo\": {\n+        \"args\": [\"build\", \"--test=heavy_tests\", \"--package=ra_lsp_server\"],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    },\n+    {\n+      \"type\": \"lldb\",\n+      \"request\": \"launch\",\n+      \"name\": \"Debug unit tests in test 'heavy_tests'\",\n+      \"cargo\": {\n+        \"args\": [\n+          \"test\",\n+          \"--no-run\",\n+          \"--test=heavy_tests\",\n+          \"--package=ra_lsp_server\"\n+        ],\n+        \"filter\": {\n+          \"kind\": \"bin\"\n+        }\n+      },\n+      \"args\": [],\n+      \"cwd\": \"${workspaceFolder}\"\n+    }\n+  ]\n+}"}, {"sha": "045cee3266a278b62b0a22fe21452d00cd064e9c", "filename": ".vscode/tasks.json", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/.vscode%2Ftasks.json", "raw_url": "https://github.com/rust-lang/rust/raw/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/.vscode%2Ftasks.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.vscode%2Ftasks.json?ref=1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "patch": "@@ -0,0 +1,47 @@\n+// See https://go.microsoft.com/fwlink/?LinkId=733558\n+// for the documentation about the tasks.json format\n+{\n+  \"version\": \"2.0.0\",\n+  \"tasks\": [\n+    {\n+      \"type\": \"npm\",\n+      \"script\": \"compile\",\n+      \"label\": \"Build Extension\",\n+      \"problemMatcher\": {\n+        \"owner\": \"typescript\",\n+        \"pattern\": \"$tsc\",\n+        \"fileLocation\": [\"relative\", \"${workspaceRoot}/editors/code\"]\n+      },\n+      \"path\": \"editors/code/\"\n+    },\n+    {\n+      \"label\": \"Build Lsp\",\n+      \"type\": \"shell\",\n+      \"command\": \"cargo build\",\n+      \"problemMatcher\": {\n+        \"owner\": \"rust\",\n+        \"fileLocation\": [\"relative\", \"${workspaceRoot}\"],\n+        \"pattern\": [\n+          {\n+            \"regexp\": \"^(warning|warn|error)(?:\\\\[(.*?)\\\\])?: (.*)$\",\n+            \"severity\": 1,\n+            \"code\": 2,\n+            \"message\": 3\n+          },\n+          {\n+            \"regexp\": \"^[\\\\s->=]*(.*?):(\\\\d*):(\\\\d*)\\\\s*$\",\n+            \"file\": 1,\n+            \"line\": 2,\n+            \"column\": 3\n+          }\n+        ]\n+      }\n+    },\n+    {\n+      \"label\": \"Build All\",\n+      \"group\": \"build\",\n+      \"dependsOn\": [\"Build Extension\", \"Build Lsp\"],\n+      \"problemMatcher\": []\n+    }\n+  ]\n+}"}, {"sha": "0fa8ae29ce7780f4f8e7ffac17d006c0b5472be7", "filename": "DEBUGGING.md", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/DEBUGGING.md", "raw_url": "https://github.com/rust-lang/rust/raw/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/DEBUGGING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/DEBUGGING.md?ref=1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "patch": "@@ -0,0 +1,62 @@\n+# Debugging vs Code plugin and the Language Server\n+\n+Install [LLDB](https://lldb.llvm.org/) and the [LLDB Extension](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb).\n+\n+Checkout rust rust-analyzer and open it in vscode.\n+\n+```\n+$ git clone https://github.com/rust-analyzer/rust-analyzer.git --depth 1\n+$ cd rust-analyzer\n+$ code .\n+```\n+\n+- To attach to the `lsp server` in linux you'll have to run:\n+\n+  `echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope`\n+\n+  This enables ptrace on non forked processes\n+\n+- Ensure the dependencies for the extension are installed, run the `npm: install - editors/code` task in vscode.\n+\n+- Launch the `Debug Extension`, this will build the extension and the `lsp server`.\n+\n+- A new instance of vscode with `[Extension Development Host]` in the title.\n+\n+  Don't worry about disabling `rls` all other extensions will be disabled but this one.\n+\n+- In the new vscode instance open a rust project, and navigate to a rust file\n+\n+- In the original vscode start an additional debug session (the three periods in the launch) and select `Debug Lsp Server`.\n+\n+- A list of running processes should appear select the `ra_lsp_server` from this repo.\n+\n+- Navigate to `crates/ra_lsp_server/src/main_loop.rs` and add a breakpoint to the `on_task` function.\n+\n+- Go back to the `[Extension Development Host]` instance and hover over a rust variable and your breakpoint should hit.\n+\n+## Demo\n+\n+![demonstration of debugging](./images/Rls_Debug.gif)\n+\n+## Troubleshooting\n+\n+### Can't find the `ra_lsp_server` process\n+\n+It could be a case of just jumping the gun.\n+\n+The `ra_lsp_server` is only started once the `onLanguage:rust` activation.\n+\n+Make sure you open a rust file in the `[Extension Development Host]` and try again.\n+\n+### Can't connect to `ra_lsp_server`\n+\n+Make sure you have run `echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope`.\n+\n+By default this should reset back to 1 everytime you log in.\n+\n+### Breakpoints are never being hit\n+\n+Check your version of `lldb` if it's version 6 and lower use the `classic` adapter type.\n+It's `lldb.adapterType` in settings file.\n+\n+If you're running `lldb` version 7 change the lldb adapter type to `bundled` or `native`."}, {"sha": "304c2620a030ad5e956a74a1b8cb470cfaee8bbf", "filename": "README.md", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "patch": "@@ -14,7 +14,6 @@ Work on the Rust Analyzer is sponsored by\n \n [![Ferrous Systems](https://ferrous-systems.com/images/ferrous-logo-text.svg)](https://ferrous-systems.com/)\n \n-\n ## Quick Start\n \n Rust analyzer builds on Rust >= 1.31.0 and uses the 2018 edition.\n@@ -36,6 +35,11 @@ $ cargo install --path crates/ra_lsp_server\n See [these instructions](./editors/README.md) for VS Code setup and the list of\n features (some of which are VS Code specific).\n \n+## Debugging\n+\n+See [these instructions](./DEBUGGING.md) for VS Code setup and the list of\n+features (some of which are VS Code specific).\n+\n ## Current Status and Plans\n \n Rust analyzer aims to fill the same niche as the official [Rust Language\n@@ -53,11 +57,11 @@ The near/mid term plan is to work independently of the main rustc compiler and\n implement at least simplistic versions of name resolution, macro expansion and\n type inference. The purpose is two fold:\n \n-* to quickly bootstrap usable and useful language server: solution that covers\n+- to quickly bootstrap usable and useful language server: solution that covers\n   80% of Rust code will be useful for IDEs, and will be vastly simpler than 100%\n   solution.\n \n-* to understand how the consumer-side of compiler API should look like\n+- to understand how the consumer-side of compiler API should look like\n   (especially it's on-demand aspects). If you have `get_expression_type`\n   function, you can write a ton of purely-IDE features on top of it, even if the\n   function is only partially correct. Pluging in the precise function afterwards\n@@ -77,7 +81,6 @@ implemented in Rust: [https://discord.gg/sx3RQZB](https://discord.gg/sx3RQZB).\n \n See [CONTRIBUTING.md](./CONTRIBUTING.md) and [ARCHITECTURE.md](./ARCHITECTURE.md)\n \n-\n ## License\n \n Rust analyzer is primarily distributed under the terms of both the MIT"}, {"sha": "cc7a10f76cf54d2dd51ab7a32c99ed33f424a27e", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1800bfb6e67ab7187f0fa51ca8241e904922ecd8/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=1800bfb6e67ab7187f0fa51ca8241e904922ecd8", "patch": "@@ -2,9 +2,11 @@ import * as vscode from 'vscode';\n \n import { Server } from './server';\n \n+const RA_LSP_DEBUG = process.env.__RA_LSP_SERVER_DEBUG;\n+\n export class Config {\n     public highlightingOn = true;\n-    public raLspServerPath = 'ra_lsp_server';\n+    public raLspServerPath = RA_LSP_DEBUG || 'ra_lsp_server';\n \n     constructor() {\n         vscode.workspace.onDidChangeConfiguration(_ =>\n@@ -24,7 +26,8 @@ export class Config {\n         }\n \n         if (config.has('raLspServerPath')) {\n-            this.raLspServerPath = config.get('raLspServerPath') as string;\n+            this.raLspServerPath =\n+                RA_LSP_DEBUG || (config.get('raLspServerPath') as string);\n         }\n     }\n }"}]}