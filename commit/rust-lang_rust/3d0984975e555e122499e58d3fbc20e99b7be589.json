{"sha": "3d0984975e555e122499e58d3fbc20e99b7be589", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMDk4NDk3NWU1NTVlMTIyNDk5ZTU4ZDNmYmMyMGU5OWI3YmU1ODk=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-06-15T22:21:13Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-06-25T09:17:00Z"}, "message": "Print cargo dev help on missing arg and updated setup documentation", "tree": {"sha": "5cbcc406b96cff6bbdb5bf68e0937e295c61ecac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cbcc406b96cff6bbdb5bf68e0937e295c61ecac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d0984975e555e122499e58d3fbc20e99b7be589", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmDVnwwACgkQHKDfKvWd\naKXgCw/+JDYuZ/d2zK4rKJ4EBuUUs6Wcpi/GKb1TRPXp6IvfKCI/5ROoBu7PStmF\niVvgUzzpg4vjDvGQ+ZHJzvWNjN8Tx4JAgCXmg3zvzJsOfwb5Dk3DcayFBNySeeVA\nr2du/iKsMyw+R/T/qA00ZMpe1qjWZbg4HFYVnFeUVf6bHB2hTLeSn42HQpTIjKAP\nnfh70591EliDp6gtRzwghf5ppkbDP0AAh/vlcvWbxREK3XB3Gj9efN2Vabbx7ilh\nIwnDRgvClVohKYd+nP/tu7+wSUKKffq2yhvZ4/XImeC06JA34K3EdwaFdlT2VGHI\nkhGsV7QMUG9uQSJ7Yo9LGvw6j2ZZbfBOpyHKlZLcL9/x1TyCHb8nKiv40roSF5FU\niNc4MyrB881I2lkzmRHTZsJzGPNVOByTyGLOyGn7Z6CwRaIua4vwuYbf2RSSHLnw\n59NwO3U7I65ikklbd9Y7vAkiCi9ZuG3TJPwtjCMJr00E5i3Y0tXbhp6fCgPMEksD\nArf84MvnTzB2QVBXuaCvrpvqETBHGJ+N6rCqe7HZQJVypPo0pim27yifdZhZgEVE\nMXRMMEURq9RhAhUqvgyDjFZ1bHU+jITPkJy2RclJ+XuLYyBhRpq+NFAj8v+GfUDu\nu/V296rYXijREKL1L+9TAQx7m60qSNczXlnF7liRkOvwFWntV1s=\n=H0Gk\n-----END PGP SIGNATURE-----", "payload": "tree 5cbcc406b96cff6bbdb5bf68e0937e295c61ecac\nparent 41bc0f4d4d3cdacc97de6c803ff7bdf1c120f315\nauthor xFrednet <xFrednet@gmail.com> 1623795673 +0200\ncommitter flip1995 <philipp.krones@embecosm.com> 1624612620 +0200\n\nPrint cargo dev help on missing arg and updated setup documentation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d0984975e555e122499e58d3fbc20e99b7be589", "html_url": "https://github.com/rust-lang/rust/commit/3d0984975e555e122499e58d3fbc20e99b7be589", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d0984975e555e122499e58d3fbc20e99b7be589/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41bc0f4d4d3cdacc97de6c803ff7bdf1c120f315", "url": "https://api.github.com/repos/rust-lang/rust/commits/41bc0f4d4d3cdacc97de6c803ff7bdf1c120f315", "html_url": "https://github.com/rust-lang/rust/commit/41bc0f4d4d3cdacc97de6c803ff7bdf1c120f315"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "b202fc4f281cbfe949778163ecf5a80cd317eb67", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d0984975e555e122499e58d3fbc20e99b7be589/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/3d0984975e555e122499e58d3fbc20e99b7be589/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=3d0984975e555e122499e58d3fbc20e99b7be589", "patch": "@@ -115,7 +115,7 @@ To work around this, you need to have a copy of the [rustc-repo][rustc_repo] ava\n `git clone https://github.com/rust-lang/rust/`.\n Then you can run a `cargo dev` command to automatically make Clippy use the rustc-repo via path-dependencies\n which `IntelliJ Rust` will be able to understand.\n-Run `cargo dev ide_setup --repo-path <repo-path>` where `<repo-path>` is a path to the rustc repo\n+Run `cargo dev setup intellij --repo-path <repo-path>` where `<repo-path>` is a path to the rustc repo\n you just cloned.\n The command will add path-dependencies pointing towards rustc-crates inside the rustc repo to\n Clippys `Cargo.toml`s and should allow `IntelliJ Rust` to understand most of the types that Clippy uses."}, {"sha": "c81eb40d52f3551ffc698db36acf7767b5c3874e", "filename": "clippy_dev/src/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d0984975e555e122499e58d3fbc20e99b7be589/clippy_dev%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d0984975e555e122499e58d3fbc20e99b7be589/clippy_dev%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Ffmt.rs?ref=3d0984975e555e122499e58d3fbc20e99b7be589", "patch": "@@ -86,7 +86,7 @@ pub fn run(check: bool, verbose: bool) {\n             },\n             CliError::RaSetupActive => {\n                 eprintln!(\n-                    \"error: a local rustc repo is enabled as path dependency via `cargo dev ide_setup`.\n+                    \"error: a local rustc repo is enabled as path dependency via `cargo dev setup intellij`.\n Not formatting because that would format the local repo as well!\n Please revert the changes to Cargo.tomls first.\"\n                 );"}, {"sha": "faf8700f55ab2b2bcb9772d1e2451883dbc355b7", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d0984975e555e122499e58d3fbc20e99b7be589/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d0984975e555e122499e58d3fbc20e99b7be589/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=3d0984975e555e122499e58d3fbc20e99b7be589", "patch": "@@ -2,7 +2,7 @@\n // warn on lints, that are included in `rust-lang/rust`s bootstrap\n #![warn(rust_2018_idioms, unused_lifetimes)]\n \n-use clap::{App, Arg, ArgMatches, SubCommand};\n+use clap::{App, AppSettings, Arg, ArgMatches, SubCommand};\n use clippy_dev::{bless, fmt, new_lint, serve, setup, stderr_length_check, update_lints};\n fn main() {\n     let matches = get_clap_config();\n@@ -52,6 +52,7 @@ fn main() {\n \n fn get_clap_config<'a>() -> ArgMatches<'a> {\n     App::new(\"Clippy developer tooling\")\n+        .setting(AppSettings::ArgRequiredElseHelp)\n         .subcommand(\n             SubCommand::with_name(\"bless\")\n                 .about(\"bless the test output changes\")\n@@ -146,6 +147,7 @@ fn get_clap_config<'a>() -> ArgMatches<'a> {\n         .subcommand(\n             SubCommand::with_name(\"setup\")\n                 .about(\"Support for setting up your personal development environment\")\n+                .setting(AppSettings::ArgRequiredElseHelp)\n                 .subcommand(\n                     SubCommand::with_name(\"intellij\")\n                         .about(\"Alter dependencies so Intellij Rust can find rustc internals\")"}, {"sha": "9b084f52466e40bf77742f636fb92a7e5d4410cd", "filename": "clippy_dev/src/setup/intellij.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d0984975e555e122499e58d3fbc20e99b7be589/clippy_dev%2Fsrc%2Fsetup%2Fintellij.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d0984975e555e122499e58d3fbc20e99b7be589/clippy_dev%2Fsrc%2Fsetup%2Fintellij.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fsetup%2Fintellij.rs?ref=3d0984975e555e122499e58d3fbc20e99b7be589", "patch": "@@ -55,7 +55,7 @@ fn inject_deps_into_manifest(\n     // do not inject deps if we have aleady done so\n     if cargo_toml.contains(\"[target.'cfg(NOT_A_PLATFORM)'.dependencies]\") {\n         eprintln!(\n-            \"cargo dev ide_setup: warning: deps already found inside {}, doing nothing.\",\n+            \"cargo dev setup intellij: warning: deps already found inside {}, doing nothing.\",\n             manifest_path\n         );\n         return Ok(());"}, {"sha": "89d572ad93128431d4e47255601e400368957ea0", "filename": "doc/basics.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d0984975e555e122499e58d3fbc20e99b7be589/doc%2Fbasics.md", "raw_url": "https://github.com/rust-lang/rust/raw/3d0984975e555e122499e58d3fbc20e99b7be589/doc%2Fbasics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fbasics.md?ref=3d0984975e555e122499e58d3fbc20e99b7be589", "patch": "@@ -90,8 +90,10 @@ cargo dev fmt\n cargo dev update_lints\n # create a new lint and register it\n cargo dev new_lint\n+# automatically formatting all code before each commit\n+cargo dev setup git-hook\n # (experimental) Setup Clippy to work with IntelliJ-Rust\n-cargo dev ide_setup\n+cargo dev setup intellij\n ```\n \n ## lintcheck"}]}