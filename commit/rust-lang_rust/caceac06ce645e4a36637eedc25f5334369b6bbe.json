{"sha": "caceac06ce645e4a36637eedc25f5334369b6bbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhY2VhYzA2Y2U2NDVlNGEzNjYzN2VlZGMyNWY1MzM0MzY5YjZiYmU=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-23T18:52:56Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-23T20:54:25Z"}, "message": "Remove old-moded atomic intrinsics (#3200)", "tree": {"sha": "e19d8a450f27df469fd8b4fdbcc303d3729e47ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e19d8a450f27df469fd8b4fdbcc303d3729e47ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/caceac06ce645e4a36637eedc25f5334369b6bbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/caceac06ce645e4a36637eedc25f5334369b6bbe", "html_url": "https://github.com/rust-lang/rust/commit/caceac06ce645e4a36637eedc25f5334369b6bbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/caceac06ce645e4a36637eedc25f5334369b6bbe/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c47342e7c2271c32651725b0f026fb24822eb828", "url": "https://api.github.com/repos/rust-lang/rust/commits/c47342e7c2271c32651725b0f026fb24822eb828", "html_url": "https://github.com/rust-lang/rust/commit/c47342e7c2271c32651725b0f026fb24822eb828"}], "stats": {"total": 40, "additions": 11, "deletions": 29}, "files": [{"sha": "10e657af0f4e60c0649e7e89a9a6966312c523e1", "filename": "src/rustc/middle/trans/foreign.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/caceac06ce645e4a36637eedc25f5334369b6bbe/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caceac06ce645e4a36637eedc25f5334369b6bbe/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=caceac06ce645e4a36637eedc25f5334369b6bbe", "patch": "@@ -800,65 +800,63 @@ fn trans_intrinsic(ccx: @crate_ctxt, decl: ValueRef, item: @ast::foreign_item,\n                                some(substs), some(item.span));\n     let mut bcx = top_scope_block(fcx, none), lltop = bcx.llbb;\n     match ccx.sess.str_of(item.ident) {\n-      // NB: Transitionary, de-mode-ing. Remove the first string of each\n-      // pattern when the old intrinsics are gone.\n-      ~\"atomic_xchng\" | ~\"atomic_xchg\" => {\n+      ~\"atomic_xchg\" => {\n         let old = AtomicRMW(bcx, Xchg,\n                   get_param(decl, first_real_arg),\n                   get_param(decl, first_real_arg + 1u),\n                   SequentiallyConsistent);\n         Store(bcx, old, fcx.llretptr);\n       }\n-      ~\"atomic_xchng_acq\" | ~\"atomic_xchg_acq\" => {\n+      ~\"atomic_xchg_acq\" => {\n         let old = AtomicRMW(bcx, Xchg,\n                   get_param(decl, first_real_arg),\n                   get_param(decl, first_real_arg + 1u),\n                   Acquire);\n         Store(bcx, old, fcx.llretptr);\n       }\n-      ~\"atomic_xchng_rel\" | ~\"atomic_xchg_rel\" => {\n+      ~\"atomic_xchg_rel\" => {\n         let old = AtomicRMW(bcx, Xchg,\n                   get_param(decl, first_real_arg),\n                   get_param(decl, first_real_arg + 1u),\n                   Release);\n         Store(bcx, old, fcx.llretptr);\n       }\n-      ~\"atomic_add\" | ~\"atomic_xadd\" => {\n+      ~\"atomic_xadd\" => {\n         let old = AtomicRMW(bcx, lib::llvm::Add,\n                   get_param(decl, first_real_arg),\n                   get_param(decl, first_real_arg + 1u),\n                   SequentiallyConsistent);\n         Store(bcx, old, fcx.llretptr);\n       }\n-      ~\"atomic_add_acq\" | ~\"atomic_xadd_acq\" => {\n+      ~\"atomic_xadd_acq\" => {\n         let old = AtomicRMW(bcx, lib::llvm::Add,\n                   get_param(decl, first_real_arg),\n                   get_param(decl, first_real_arg + 1u),\n                   Acquire);\n         Store(bcx, old, fcx.llretptr);\n       }\n-      ~\"atomic_add_rel\" | ~\"atomic_xadd_rel\" => {\n+      ~\"atomic_xadd_rel\" => {\n         let old = AtomicRMW(bcx, lib::llvm::Add,\n                   get_param(decl, first_real_arg),\n                   get_param(decl, first_real_arg + 1u),\n                   Release);\n         Store(bcx, old, fcx.llretptr);\n       }\n-      ~\"atomic_sub\" | ~\"atomic_xsub\" => {\n+      ~\"atomic_xsub\" => {\n         let old = AtomicRMW(bcx, lib::llvm::Sub,\n                   get_param(decl, first_real_arg),\n                   get_param(decl, first_real_arg + 1u),\n                   SequentiallyConsistent);\n         Store(bcx, old, fcx.llretptr);\n       }\n-      ~\"atomic_sub_acq\" | ~\"atomic_xsub_acq\" => {\n+      ~\"atomic_xsub_acq\" => {\n         let old = AtomicRMW(bcx, lib::llvm::Sub,\n                   get_param(decl, first_real_arg),\n                   get_param(decl, first_real_arg + 1u),\n                   Acquire);\n         Store(bcx, old, fcx.llretptr);\n       }\n-      ~\"atomic_sub_rel\" | ~\"atomic_xsub_rel\" => {\n+      ~\"atomic_xsub_rel\" => {\n         let old = AtomicRMW(bcx, lib::llvm::Sub,\n                   get_param(decl, first_real_arg),\n                   get_param(decl, first_real_arg + 1u),"}, {"sha": "004de82e064d7b8ba1a7c147f84313b97046206c", "filename": "src/rustc/middle/trans/type_use.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/caceac06ce645e4a36637eedc25f5334369b6bbe/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caceac06ce645e4a36637eedc25f5334369b6bbe/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=caceac06ce645e4a36637eedc25f5334369b6bbe", "patch": "@@ -90,16 +90,10 @@ fn type_uses_for(ccx: @crate_ctxt, fn_id: def_id, n_tps: uint)\n               ~\"get_tydesc\" | ~\"needs_drop\" => {\n                 use_tydesc\n               }\n-              // NB: new intrinsics\n               ~\"atomic_xchg\"     | ~\"atomic_xadd\"     | ~\"atomic_xsub\" |\n               ~\"atomic_xchg_acq\" | ~\"atomic_xadd_acq\" | ~\"atomic_xsub_acq\" |\n-              ~\"atomic_xchg_rel\" | ~\"atomic_xadd_rel\" | ~\"atomic_xsub_rel\" |\n-              // old intrinsics\n-              ~\"atomic_xchng\" | ~\"atomic_add\" | ~\"atomic_sub\" |\n-              ~\"atomic_xchng_acq\" | ~\"atomic_add_acq\" | ~\"atomic_sub_acq\" |\n-              ~\"atomic_xchng_rel\" | ~\"atomic_add_rel\" | ~\"atomic_sub_rel\" => {\n-                0u\n-              }\n+              ~\"atomic_xchg_rel\" | ~\"atomic_xadd_rel\" | ~\"atomic_xsub_rel\" =>\n+              { 0u }\n               ~\"visit_tydesc\" | ~\"forget\" | ~\"addr_of\" => {\n                 0u\n               }"}, {"sha": "7b71c59bf26e88034ca3462eedce6839c99055d1", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/caceac06ce645e4a36637eedc25f5334369b6bbe/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caceac06ce645e4a36637eedc25f5334369b6bbe/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=caceac06ce645e4a36637eedc25f5334369b6bbe", "patch": "@@ -2508,16 +2508,6 @@ fn check_intrinsic_type(ccx: @crate_ctxt, it: @ast::foreign_item) {\n       }\n       ~\"needs_drop\" => (1u, ~[], ty::mk_bool(tcx)),\n \n-      // NB: Old intrinsics.\n-      ~\"atomic_xchng\" | ~\"atomic_add\" | ~\"atomic_sub\" |\n-      ~\"atomic_xchng_acq\" | ~\"atomic_add_acq\" | ~\"atomic_sub_acq\" |\n-      ~\"atomic_xchng_rel\" | ~\"atomic_add_rel\" | ~\"atomic_sub_rel\" => {\n-        (0u, ~[arg(ast::by_mutbl_ref, ty::mk_int(tcx)),\n-               arg(ast::by_val, ty::mk_int(tcx))],\n-         ty::mk_int(tcx))\n-      }\n-\n-      // NB: Transitionary, de-mode-ing.\n       ~\"atomic_xchg\"     | ~\"atomic_xadd\"     | ~\"atomic_xsub\" |\n       ~\"atomic_xchg_acq\" | ~\"atomic_xadd_acq\" | ~\"atomic_xsub_acq\" |\n       ~\"atomic_xchg_rel\" | ~\"atomic_xadd_rel\" | ~\"atomic_xsub_rel\" => {"}]}