{"sha": "1dc4b4001fe3809535b9405b55e281a42608fb77", "node_id": "C_kwDOAAsO6NoAKDFkYzRiNDAwMWZlMzgwOTUzNWI5NDA1YjU1ZTI4MWE0MjYwOGZiNzc", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-06-07T12:31:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-07T12:31:30Z"}, "message": "Rollup merge of #112359 - Nilstrieb:i-can-only-handle-so-many-backtraces, r=compiler-errors\n\nRespect `RUST_BACKTRACE` for delayed bugs\n\nSometimes, especially with MIR validation, the backtraces from delayed bugs are noise and make it harder to look at them. Respect the environment variable and don't print it when the user doesn't want it.", "tree": {"sha": "ded3d9aa1b15505eec73ee4e82930ea4d2988ff9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded3d9aa1b15505eec73ee4e82930ea4d2988ff9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dc4b4001fe3809535b9405b55e281a42608fb77", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkgHiiCRBK7hj4Ov3rIwAAc90IAGb5vxwYyeVks1Niy/mPhN94\nTmrDUZjmaU/p2qfVSPmlPVAkrvYQplrOGpPOYPwSFxuK48l0IRrSCfFumncWfd0Q\nXn4ZR9Jpt27+VVThV18q0Uz+JnhAL0toJqlPIQXAWcVbO57XO975fN9OanK6g2z4\nrnqa/PzffE2tvqmitLTeC8ITRAvV1D3EV0JdUxzGezRwtL60xCtFeIX3iLUqXqcF\nT2VeOLkmh++kDCRqxJknKnEbzGR25dD1iVsc39tzp8AW+hD4uR0zOEJ2rK9vPP2z\n3un27ozEWpfyo4bxlYNCRYVDzqwDMNeI7tV6liDfgbaMk4w5zDjI0+rmV1ZxEso=\n=sQR6\n-----END PGP SIGNATURE-----\n", "payload": "tree ded3d9aa1b15505eec73ee4e82930ea4d2988ff9\nparent 42cf6da6af4dd738bacf851fc6361a8e3dfb8138\nparent 70980929b480d6c13e23d79ad8de2ff0afbce60c\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1686141090 +0530\ncommitter GitHub <noreply@github.com> 1686141090 +0530\n\nRollup merge of #112359 - Nilstrieb:i-can-only-handle-so-many-backtraces, r=compiler-errors\n\nRespect `RUST_BACKTRACE` for delayed bugs\n\nSometimes, especially with MIR validation, the backtraces from delayed bugs are noise and make it harder to look at them. Respect the environment variable and don't print it when the user doesn't want it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc4b4001fe3809535b9405b55e281a42608fb77", "html_url": "https://github.com/rust-lang/rust/commit/1dc4b4001fe3809535b9405b55e281a42608fb77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dc4b4001fe3809535b9405b55e281a42608fb77/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "url": "https://api.github.com/repos/rust-lang/rust/commits/42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "html_url": "https://github.com/rust-lang/rust/commit/42cf6da6af4dd738bacf851fc6361a8e3dfb8138"}, {"sha": "70980929b480d6c13e23d79ad8de2ff0afbce60c", "url": "https://api.github.com/repos/rust-lang/rust/commits/70980929b480d6c13e23d79ad8de2ff0afbce60c", "html_url": "https://github.com/rust-lang/rust/commit/70980929b480d6c13e23d79ad8de2ff0afbce60c"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "7a297ea0d5f8285c18a54395ade361965c9a4bd7", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1dc4b4001fe3809535b9405b55e281a42608fb77/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc4b4001fe3809535b9405b55e281a42608fb77/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=1dc4b4001fe3809535b9405b55e281a42608fb77", "patch": "@@ -383,7 +383,7 @@ pub use diagnostic_builder::{DiagnosticBuilder, EmissionGuarantee, Noted};\n pub use diagnostic_impls::{\n     DiagnosticArgFromDisplay, DiagnosticSymbolList, LabelKind, SingleLabelManySpans,\n };\n-use std::backtrace::Backtrace;\n+use std::backtrace::{Backtrace, BacktraceStatus};\n \n /// A handler deals with errors and other compiler output.\n /// Certain errors (fatal, bug, unimpl) may cause immediate exit,\n@@ -1331,7 +1331,7 @@ impl HandlerInner {\n             // once *any* errors were emitted (and truncate `delayed_span_bugs`\n             // when an error is first emitted, also), but maybe there's a case\n             // in which that's not sound? otherwise this is really inefficient.\n-            let backtrace = std::backtrace::Backtrace::force_capture();\n+            let backtrace = std::backtrace::Backtrace::capture();\n             self.delayed_span_bugs\n                 .push(DelayedDiagnostic::with_backtrace(diagnostic.clone(), backtrace));\n \n@@ -1620,7 +1620,7 @@ impl HandlerInner {\n         if self.flags.report_delayed_bugs {\n             self.emit_diagnostic(&mut diagnostic);\n         }\n-        let backtrace = std::backtrace::Backtrace::force_capture();\n+        let backtrace = std::backtrace::Backtrace::capture();\n         self.delayed_good_path_bugs.push(DelayedDiagnostic::with_backtrace(diagnostic, backtrace));\n     }\n \n@@ -1739,7 +1739,17 @@ impl DelayedDiagnostic {\n     }\n \n     fn decorate(mut self) -> Diagnostic {\n-        self.inner.note(format!(\"delayed at {}\\n{}\", self.inner.emitted_at, self.note));\n+        match self.note.status() {\n+            BacktraceStatus::Captured => {\n+                self.inner.note(format!(\"delayed at {}\\n{}\", self.inner.emitted_at, self.note));\n+            }\n+            // Avoid the needless newline when no backtrace has been captured,\n+            // the display impl should just be a single line.\n+            _ => {\n+                self.inner.note(format!(\"delayed at {} - {}\", self.inner.emitted_at, self.note));\n+            }\n+        }\n+\n         self.inner\n     }\n }"}]}