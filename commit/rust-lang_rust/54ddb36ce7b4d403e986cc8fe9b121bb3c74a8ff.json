{"sha": "54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ZGRiMzZjZTdiNGQ0MDNlOTg2Y2M4ZmU5YjEyMWJiM2M3NGE4ZmY=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-08T06:34:01Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:14:21Z"}, "message": "Test move errors for index expressions", "tree": {"sha": "9f6c343e313644a1e2c0beb8d137ebf83a4e7341", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f6c343e313644a1e2c0beb8d137ebf83a4e7341"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff", "html_url": "https://github.com/rust-lang/rust/commit/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e87908c5284bd9d9d952a0ce98bfac2c0339a40", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e87908c5284bd9d9d952a0ce98bfac2c0339a40", "html_url": "https://github.com/rust-lang/rust/commit/1e87908c5284bd9d9d952a0ce98bfac2c0339a40"}], "stats": {"total": 393, "additions": 313, "deletions": 80}, "files": [{"sha": "c9a5985b8bb6d76687ac58c200fea07c95c0141e", "filename": "src/test/ui/suggestions/dont-suggest-ref.rs", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs?ref=54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff", "patch": "@@ -32,6 +32,16 @@ pub fn main() {\n     let s = &x;\n     let sm = &mut X(Y);\n \n+    let ve = vec![Either::One(X(Y))];\n+\n+    let vr = &ve;\n+    let vrm = &mut vec![Either::One(X(Y))];\n+\n+    let vx = vec![X(Y)];\n+\n+    let vs_ = &vx;\n+    let vsm = &mut vec![X(Y)];\n+\n     // --------\n \n     let X(_t) = *s;\n@@ -98,6 +108,70 @@ pub fn main() {\n         // TODO: should suggest removing `ref mut` too\n     }\n \n+    let X(_t) = vs_[0];\n+    //~^ ERROR cannot move\n+    //~| HELP consider using a reference instead\n+    //~| SUGGESTION &vs_[0]\n+    if let Either::One(_t) = vr[0] { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider using a reference instead\n+    //~| SUGGESTION &vr[0]\n+    while let Either::One(_t) = vr[0] { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider using a reference instead\n+    //~| SUGGESTION &vr[0]\n+    match vr[0] {\n+        //~^ ERROR cannot move\n+        //~| HELP consider using a reference instead\n+        //~| SUGGESTION &vr[0]\n+        Either::One(_t)\n+        | Either::Two(_t) => (),\n+    }\n+    match vr[0] {\n+        //~^ ERROR cannot move\n+        //~| HELP consider using a reference instead\n+        //~| SUGGESTION &vr[0]\n+        Either::One(_t) => (),\n+        Either::Two(ref _t) => (),\n+        // TODO: should suggest removing `ref` too\n+    }\n+\n+    let X(_t) = vsm[0];\n+    //~^ ERROR cannot move\n+    //~| HELP consider using a reference instead\n+    //~| SUGGESTION &vsm[0]\n+    if let Either::One(_t) = vrm[0] { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider using a reference instead\n+    //~| SUGGESTION &vrm[0]\n+    while let Either::One(_t) = vrm[0] { }\n+    //~^ ERROR cannot move\n+    //~| HELP consider using a reference instead\n+    //~| SUGGESTION &vrm[0]\n+    match vrm[0] {\n+        //~^ ERROR cannot move\n+        //~| HELP consider using a reference instead\n+        //~| SUGGESTION &vrm[0]\n+        Either::One(_t)\n+        | Either::Two(_t) => (),\n+    }\n+    match vrm[0] {\n+        //~^ ERROR cannot move\n+        //~| HELP consider using a reference instead\n+        //~| SUGGESTION &vrm[0]\n+        Either::One(_t) => (),\n+        Either::Two(ref _t) => (),\n+        // TODO: should suggest removing `ref` too\n+    }\n+    match vrm[0] {\n+        //~^ ERROR cannot move\n+        //~| HELP consider using a reference instead\n+        //~| SUGGESTION &vrm[0]\n+        Either::One(_t) => (),\n+        Either::Two(ref mut _t) => (),\n+        // TODO: should suggest removing `ref mut` too\n+    }\n+\n     // --------\n \n     let &X(_t) = s;"}, {"sha": "d27c028fe47d3d0c1e0e0e64791390fd490ec507", "filename": "src/test/ui/suggestions/dont-suggest-ref.stderr", "status": "modified", "additions": 239, "deletions": 80, "changes": 319, "blob_url": "https://github.com/rust-lang/rust/blob/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr?ref=54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff", "patch": "@@ -1,5 +1,5 @@\n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:37:17\n+  --> $DIR/dont-suggest-ref.rs:47:17\n    |\n LL |     let X(_t) = *s;\n    |           --    ^^\n@@ -9,13 +9,13 @@ LL |     let X(_t) = *s;\n    |           data moved here\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:37:11\n+  --> $DIR/dont-suggest-ref.rs:47:11\n    |\n LL |     let X(_t) = *s;\n    |           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:41:30\n+  --> $DIR/dont-suggest-ref.rs:51:30\n    |\n LL |     if let Either::One(_t) = *r { }\n    |                        --    ^^\n@@ -25,13 +25,13 @@ LL |     if let Either::One(_t) = *r { }\n    |                        data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:41:24\n+  --> $DIR/dont-suggest-ref.rs:51:24\n    |\n LL |     if let Either::One(_t) = *r { }\n    |                        ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:45:33\n+  --> $DIR/dont-suggest-ref.rs:55:33\n    |\n LL |     while let Either::One(_t) = *r { }\n    |                           --    ^^\n@@ -41,13 +41,13 @@ LL |     while let Either::One(_t) = *r { }\n    |                           data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:45:27\n+  --> $DIR/dont-suggest-ref.rs:55:27\n    |\n LL |     while let Either::One(_t) = *r { }\n    |                           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:49:11\n+  --> $DIR/dont-suggest-ref.rs:59:11\n    |\n LL |     match *r {\n    |           ^^\n@@ -59,13 +59,13 @@ LL |         Either::One(_t)\n    |                     -- data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:53:21\n+  --> $DIR/dont-suggest-ref.rs:63:21\n    |\n LL |         Either::One(_t)\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:56:11\n+  --> $DIR/dont-suggest-ref.rs:66:11\n    |\n LL |     match *r {\n    |           ^^\n@@ -77,13 +77,13 @@ LL |         Either::One(_t) => (),\n    |                     -- data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:61:21\n+  --> $DIR/dont-suggest-ref.rs:70:21\n    |\n LL |         Either::One(_t) => (),\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:65:17\n+  --> $DIR/dont-suggest-ref.rs:75:17\n    |\n LL |     let X(_t) = *sm;\n    |           --    ^^^\n@@ -93,13 +93,13 @@ LL |     let X(_t) = *sm;\n    |           data moved here\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:65:11\n+  --> $DIR/dont-suggest-ref.rs:75:11\n    |\n LL |     let X(_t) = *sm;\n    |           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:69:30\n+  --> $DIR/dont-suggest-ref.rs:79:30\n    |\n LL |     if let Either::One(_t) = *rm { }\n    |                        --    ^^^\n@@ -109,13 +109,13 @@ LL |     if let Either::One(_t) = *rm { }\n    |                        data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:69:24\n+  --> $DIR/dont-suggest-ref.rs:79:24\n    |\n LL |     if let Either::One(_t) = *rm { }\n    |                        ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:73:33\n+  --> $DIR/dont-suggest-ref.rs:83:33\n    |\n LL |     while let Either::One(_t) = *rm { }\n    |                           --    ^^^\n@@ -125,13 +125,13 @@ LL |     while let Either::One(_t) = *rm { }\n    |                           data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:73:27\n+  --> $DIR/dont-suggest-ref.rs:83:27\n    |\n LL |     while let Either::One(_t) = *rm { }\n    |                           ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:77:11\n+  --> $DIR/dont-suggest-ref.rs:87:11\n    |\n LL |     match *rm {\n    |           ^^^\n@@ -143,13 +143,13 @@ LL |         Either::One(_t)\n    |                     -- data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:81:21\n+  --> $DIR/dont-suggest-ref.rs:91:21\n    |\n LL |         Either::One(_t)\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:84:11\n+  --> $DIR/dont-suggest-ref.rs:94:11\n    |\n LL |     match *rm {\n    |           ^^^\n@@ -161,13 +161,13 @@ LL |         Either::One(_t) => (),\n    |                     -- data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:89:21\n+  --> $DIR/dont-suggest-ref.rs:98:21\n    |\n LL |         Either::One(_t) => (),\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:92:11\n+  --> $DIR/dont-suggest-ref.rs:102:11\n    |\n LL |     match *rm {\n    |           ^^^\n@@ -179,13 +179,172 @@ LL |         Either::One(_t) => (),\n    |                     -- data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:97:21\n+  --> $DIR/dont-suggest-ref.rs:106:21\n    |\n LL |         Either::One(_t) => (),\n    |                     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:103:18\n+  --> $DIR/dont-suggest-ref.rs:111:17\n+   |\n+LL |     let X(_t) = vs_[0];\n+   |           --    ^^^^^^ cannot move out of borrowed content\n+   |           |\n+   |           data moved here\n+   |\n+note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:111:11\n+   |\n+LL |     let X(_t) = vs_[0];\n+   |           ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:115:30\n+   |\n+LL |     if let Either::One(_t) = vr[0] { }\n+   |                        --    ^^^^^ cannot move out of borrowed content\n+   |                        |\n+   |                        data moved here\n+   |\n+note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:115:24\n+   |\n+LL |     if let Either::One(_t) = vr[0] { }\n+   |                        ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:119:33\n+   |\n+LL |     while let Either::One(_t) = vr[0] { }\n+   |                           --    ^^^^^ cannot move out of borrowed content\n+   |                           |\n+   |                           data moved here\n+   |\n+note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:119:27\n+   |\n+LL |     while let Either::One(_t) = vr[0] { }\n+   |                           ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:123:11\n+   |\n+LL |     match vr[0] {\n+   |           ^^^^^ cannot move out of borrowed content\n+...\n+LL |         Either::One(_t)\n+   |                     -- data moved here\n+   |\n+note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:127:21\n+   |\n+LL |         Either::One(_t)\n+   |                     ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:130:11\n+   |\n+LL |     match vr[0] {\n+   |           ^^^^^ cannot move out of borrowed content\n+...\n+LL |         Either::One(_t) => (),\n+   |                     -- data moved here\n+   |\n+note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:134:21\n+   |\n+LL |         Either::One(_t) => (),\n+   |                     ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:139:17\n+   |\n+LL |     let X(_t) = vsm[0];\n+   |           --    ^^^^^^ cannot move out of borrowed content\n+   |           |\n+   |           data moved here\n+   |\n+note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:139:11\n+   |\n+LL |     let X(_t) = vsm[0];\n+   |           ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:143:30\n+   |\n+LL |     if let Either::One(_t) = vrm[0] { }\n+   |                        --    ^^^^^^ cannot move out of borrowed content\n+   |                        |\n+   |                        data moved here\n+   |\n+note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:143:24\n+   |\n+LL |     if let Either::One(_t) = vrm[0] { }\n+   |                        ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:147:33\n+   |\n+LL |     while let Either::One(_t) = vrm[0] { }\n+   |                           --    ^^^^^^ cannot move out of borrowed content\n+   |                           |\n+   |                           data moved here\n+   |\n+note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:147:27\n+   |\n+LL |     while let Either::One(_t) = vrm[0] { }\n+   |                           ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:151:11\n+   |\n+LL |     match vrm[0] {\n+   |           ^^^^^^ cannot move out of borrowed content\n+...\n+LL |         Either::One(_t)\n+   |                     -- data moved here\n+   |\n+note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:155:21\n+   |\n+LL |         Either::One(_t)\n+   |                     ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:158:11\n+   |\n+LL |     match vrm[0] {\n+   |           ^^^^^^ cannot move out of borrowed content\n+...\n+LL |         Either::One(_t) => (),\n+   |                     -- data moved here\n+   |\n+note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:162:21\n+   |\n+LL |         Either::One(_t) => (),\n+   |                     ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:166:11\n+   |\n+LL |     match vrm[0] {\n+   |           ^^^^^^ cannot move out of borrowed content\n+...\n+LL |         Either::One(_t) => (),\n+   |                     -- data moved here\n+   |\n+note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:170:21\n+   |\n+LL |         Either::One(_t) => (),\n+   |                     ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:177:18\n    |\n LL |     let &X(_t) = s;\n    |         ------   ^ cannot move out of borrowed content\n@@ -194,13 +353,13 @@ LL |     let &X(_t) = s;\n    |         help: consider removing this borrow operator: `X(_t)`\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:103:12\n+  --> $DIR/dont-suggest-ref.rs:177:12\n    |\n LL |     let &X(_t) = s;\n    |            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:107:31\n+  --> $DIR/dont-suggest-ref.rs:181:31\n    |\n LL |     if let &Either::One(_t) = r { }\n    |            ----------------   ^ cannot move out of borrowed content\n@@ -209,13 +368,13 @@ LL |     if let &Either::One(_t) = r { }\n    |            help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:107:25\n+  --> $DIR/dont-suggest-ref.rs:181:25\n    |\n LL |     if let &Either::One(_t) = r { }\n    |                         ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:111:34\n+  --> $DIR/dont-suggest-ref.rs:185:34\n    |\n LL |     while let &Either::One(_t) = r { }\n    |               ----------------   ^ cannot move out of borrowed content\n@@ -224,13 +383,13 @@ LL |     while let &Either::One(_t) = r { }\n    |               help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:111:28\n+  --> $DIR/dont-suggest-ref.rs:185:28\n    |\n LL |     while let &Either::One(_t) = r { }\n    |                            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:115:11\n+  --> $DIR/dont-suggest-ref.rs:189:11\n    |\n LL |     match r {\n    |           ^ cannot move out of borrowed content\n@@ -242,13 +401,13 @@ LL |         &Either::One(_t)\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:117:22\n+  --> $DIR/dont-suggest-ref.rs:191:22\n    |\n LL |         &Either::One(_t)\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:123:11\n+  --> $DIR/dont-suggest-ref.rs:197:11\n    |\n LL |     match r {\n    |           ^ cannot move out of borrowed content\n@@ -260,13 +419,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:125:22\n+  --> $DIR/dont-suggest-ref.rs:199:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:130:11\n+  --> $DIR/dont-suggest-ref.rs:204:11\n    |\n LL |     match r {\n    |           ^ cannot move out of borrowed content\n@@ -278,13 +437,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:132:22\n+  --> $DIR/dont-suggest-ref.rs:206:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:142:22\n+  --> $DIR/dont-suggest-ref.rs:216:22\n    |\n LL |     let &mut X(_t) = sm;\n    |         ----------   ^^ cannot move out of borrowed content\n@@ -293,13 +452,13 @@ LL |     let &mut X(_t) = sm;\n    |         help: consider removing this borrow operator: `X(_t)`\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:142:16\n+  --> $DIR/dont-suggest-ref.rs:216:16\n    |\n LL |     let &mut X(_t) = sm;\n    |                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:146:35\n+  --> $DIR/dont-suggest-ref.rs:220:35\n    |\n LL |     if let &mut Either::One(_t) = rm { }\n    |            --------------------   ^^ cannot move out of borrowed content\n@@ -308,13 +467,13 @@ LL |     if let &mut Either::One(_t) = rm { }\n    |            help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:146:29\n+  --> $DIR/dont-suggest-ref.rs:220:29\n    |\n LL |     if let &mut Either::One(_t) = rm { }\n    |                             ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:150:38\n+  --> $DIR/dont-suggest-ref.rs:224:38\n    |\n LL |     while let &mut Either::One(_t) = rm { }\n    |               --------------------   ^^ cannot move out of borrowed content\n@@ -323,13 +482,13 @@ LL |     while let &mut Either::One(_t) = rm { }\n    |               help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:150:32\n+  --> $DIR/dont-suggest-ref.rs:224:32\n    |\n LL |     while let &mut Either::One(_t) = rm { }\n    |                                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:154:11\n+  --> $DIR/dont-suggest-ref.rs:228:11\n    |\n LL |     match rm {\n    |           ^^ cannot move out of borrowed content\n@@ -341,12 +500,12 @@ LL |         &mut Either::Two(_t) => (),\n    |                          -- ... and here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:156:26\n+  --> $DIR/dont-suggest-ref.rs:230:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:159:26\n+  --> $DIR/dont-suggest-ref.rs:233:26\n    |\n LL |         &mut Either::Two(_t) => (),\n    |                          ^^\n@@ -360,7 +519,7 @@ LL |         Either::Two(_t) => (),\n    |         ^^^^^^^^^^^^^^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:163:11\n+  --> $DIR/dont-suggest-ref.rs:237:11\n    |\n LL |     match rm {\n    |           ^^ cannot move out of borrowed content\n@@ -372,13 +531,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:165:26\n+  --> $DIR/dont-suggest-ref.rs:239:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:170:11\n+  --> $DIR/dont-suggest-ref.rs:244:11\n    |\n LL |     match rm {\n    |           ^^ cannot move out of borrowed content\n@@ -390,13 +549,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:172:26\n+  --> $DIR/dont-suggest-ref.rs:246:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:177:11\n+  --> $DIR/dont-suggest-ref.rs:251:11\n    |\n LL |     match rm {\n    |           ^^ cannot move out of borrowed content\n@@ -408,13 +567,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:179:26\n+  --> $DIR/dont-suggest-ref.rs:253:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:191:18\n+  --> $DIR/dont-suggest-ref.rs:265:18\n    |\n LL |     let &X(_t) = &x;\n    |         ------   ^^ cannot move out of borrowed content\n@@ -423,13 +582,13 @@ LL |     let &X(_t) = &x;\n    |         help: consider removing this borrow operator: `X(_t)`\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:191:12\n+  --> $DIR/dont-suggest-ref.rs:265:12\n    |\n LL |     let &X(_t) = &x;\n    |            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:195:31\n+  --> $DIR/dont-suggest-ref.rs:269:31\n    |\n LL |     if let &Either::One(_t) = &e { }\n    |            ----------------   ^^ cannot move out of borrowed content\n@@ -438,13 +597,13 @@ LL |     if let &Either::One(_t) = &e { }\n    |            help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:195:25\n+  --> $DIR/dont-suggest-ref.rs:269:25\n    |\n LL |     if let &Either::One(_t) = &e { }\n    |                         ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:199:34\n+  --> $DIR/dont-suggest-ref.rs:273:34\n    |\n LL |     while let &Either::One(_t) = &e { }\n    |               ----------------   ^^ cannot move out of borrowed content\n@@ -453,13 +612,13 @@ LL |     while let &Either::One(_t) = &e { }\n    |               help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:199:28\n+  --> $DIR/dont-suggest-ref.rs:273:28\n    |\n LL |     while let &Either::One(_t) = &e { }\n    |                            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:203:11\n+  --> $DIR/dont-suggest-ref.rs:277:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -471,13 +630,13 @@ LL |         &Either::One(_t)\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:205:22\n+  --> $DIR/dont-suggest-ref.rs:279:22\n    |\n LL |         &Either::One(_t)\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:211:11\n+  --> $DIR/dont-suggest-ref.rs:285:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -489,13 +648,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:213:22\n+  --> $DIR/dont-suggest-ref.rs:287:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:218:11\n+  --> $DIR/dont-suggest-ref.rs:292:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -507,13 +666,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:220:22\n+  --> $DIR/dont-suggest-ref.rs:294:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:226:22\n+  --> $DIR/dont-suggest-ref.rs:300:22\n    |\n LL |     let &mut X(_t) = &mut xm;\n    |         ----------   ^^^^^^^ cannot move out of borrowed content\n@@ -522,13 +681,13 @@ LL |     let &mut X(_t) = &mut xm;\n    |         help: consider removing this borrow operator: `X(_t)`\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:226:16\n+  --> $DIR/dont-suggest-ref.rs:300:16\n    |\n LL |     let &mut X(_t) = &mut xm;\n    |                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:230:35\n+  --> $DIR/dont-suggest-ref.rs:304:35\n    |\n LL |     if let &mut Either::One(_t) = &mut em { }\n    |            --------------------   ^^^^^^^ cannot move out of borrowed content\n@@ -537,13 +696,13 @@ LL |     if let &mut Either::One(_t) = &mut em { }\n    |            help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:230:29\n+  --> $DIR/dont-suggest-ref.rs:304:29\n    |\n LL |     if let &mut Either::One(_t) = &mut em { }\n    |                             ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:234:38\n+  --> $DIR/dont-suggest-ref.rs:308:38\n    |\n LL |     while let &mut Either::One(_t) = &mut em { }\n    |               --------------------   ^^^^^^^ cannot move out of borrowed content\n@@ -552,13 +711,13 @@ LL |     while let &mut Either::One(_t) = &mut em { }\n    |               help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:234:32\n+  --> $DIR/dont-suggest-ref.rs:308:32\n    |\n LL |     while let &mut Either::One(_t) = &mut em { }\n    |                                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:238:11\n+  --> $DIR/dont-suggest-ref.rs:312:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -570,13 +729,13 @@ LL |         &mut Either::One(_t)\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:240:26\n+  --> $DIR/dont-suggest-ref.rs:314:26\n    |\n LL |         &mut Either::One(_t)\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:246:11\n+  --> $DIR/dont-suggest-ref.rs:320:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -588,13 +747,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:248:26\n+  --> $DIR/dont-suggest-ref.rs:322:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:253:11\n+  --> $DIR/dont-suggest-ref.rs:327:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -606,13 +765,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:255:26\n+  --> $DIR/dont-suggest-ref.rs:329:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:260:11\n+  --> $DIR/dont-suggest-ref.rs:334:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -624,13 +783,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing this borrow operator: `Either::One(_t)`\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:262:26\n+  --> $DIR/dont-suggest-ref.rs:336:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:137:11\n+  --> $DIR/dont-suggest-ref.rs:211:11\n    |\n LL |     fn f1(&X(_t): &X) { }\n    |           ^^^--^\n@@ -640,13 +799,13 @@ LL |     fn f1(&X(_t): &X) { }\n    |           help: consider removing this borrow operator: `X(_t)`\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:137:14\n+  --> $DIR/dont-suggest-ref.rs:211:14\n    |\n LL |     fn f1(&X(_t): &X) { }\n    |              ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:184:11\n+  --> $DIR/dont-suggest-ref.rs:258:11\n    |\n LL |     fn f2(&mut X(_t): &mut X) { }\n    |           ^^^^^^^--^\n@@ -656,11 +815,11 @@ LL |     fn f2(&mut X(_t): &mut X) { }\n    |           help: consider removing this borrow operator: `X(_t)`\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:184:18\n+  --> $DIR/dont-suggest-ref.rs:258:18\n    |\n LL |     fn f2(&mut X(_t): &mut X) { }\n    |                  ^^\n \n-error: aborting due to 39 previous errors\n+error: aborting due to 50 previous errors\n \n For more information about this error, try `rustc --explain E0507`."}]}