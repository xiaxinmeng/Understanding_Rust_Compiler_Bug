{"sha": "57958d1a04d12dbd3ea51904c2f38fbc3b40d246", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3OTU4ZDFhMDRkMTJkYmQzZWE1MTkwNGMyZjM4ZmJjM2I0MGQyNDY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-28T22:16:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-30T08:11:59Z"}, "message": "Add tests for emitting validation statements", "tree": {"sha": "e93b071c7d4689a8714e6531635169ec41afe78a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e93b071c7d4689a8714e6531635169ec41afe78a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57958d1a04d12dbd3ea51904c2f38fbc3b40d246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57958d1a04d12dbd3ea51904c2f38fbc3b40d246", "html_url": "https://github.com/rust-lang/rust/commit/57958d1a04d12dbd3ea51904c2f38fbc3b40d246", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57958d1a04d12dbd3ea51904c2f38fbc3b40d246/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ec50dfee3f2c2562586a59d80d3d1e9d2d0c0cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec50dfee3f2c2562586a59d80d3d1e9d2d0c0cd", "html_url": "https://github.com/rust-lang/rust/commit/7ec50dfee3f2c2562586a59d80d3d1e9d2d0c0cd"}], "stats": {"total": 130, "additions": 121, "deletions": 9}, "files": [{"sha": "d999ff97551606478161d6e6ff85150cba695ce7", "filename": "src/test/mir-opt/README.md", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/57958d1a04d12dbd3ea51904c2f38fbc3b40d246/src%2Ftest%2Fmir-opt%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/57958d1a04d12dbd3ea51904c2f38fbc3b40d246/src%2Ftest%2Fmir-opt%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2FREADME.md?ref=57958d1a04d12dbd3ea51904c2f38fbc3b40d246", "patch": "@@ -57,13 +57,6 @@ the lines being too long.\n \n compiletest handles dumping the MIR before and after every pass for you.  The\n test writer only has to specify the file names of the dumped files (not the\n-full path to the file) and what lines to expect.  I added an option to rustc\n+full path to the file) and what lines to expect.  There is an option to rustc\n that tells it to dump the mir into some directly (rather then always dumping to\n-the current directory).  \n-\n-Lines match ignoring whitespace, and the prefix \"//\" is removed of course.\n-\n-It also currently strips trailing comments -- partly because the full file path\n-in \"scope comments\" is unpredictable and partly because tidy complains about\n-the lines being too long.\n-\n+the current directory)."}, {"sha": "0059fc930620887eeb424e7b80382ea22362aba0", "filename": "src/test/mir-opt/validate_1.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/57958d1a04d12dbd3ea51904c2f38fbc3b40d246/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57958d1a04d12dbd3ea51904c2f38fbc3b40d246/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs?ref=57958d1a04d12dbd3ea51904c2f38fbc3b40d246", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z verbose -Z mir-emit-validate\n+\n+fn foo(_x: &mut i32) {}\n+\n+fn main() {\n+    let mut x = 0;\n+    foo(&mut x);\n+}\n+\n+// END RUST SOURCE\n+// START rustc.node4.EraseRegions.after.mir\n+// fn foo(_1: &ReErased mut i32) -> () {\n+//     bb0: {\n+//         Validate(Acquire, [_1@&ReFree(DefId { krate: CrateNum(0), node: DefIndex(3) => validate_1/8cd878b::foo[0] }, BrAnon(0)) mut i32]);\n+//         return;\n+//     }\n+// }\n+// END rustc.node4.EraseRegions.after.mir\n+// START rustc.node11.EraseRegions.after.mir\n+// fn main() -> () {\n+//     bb0: {\n+//         Validate(Suspend(ReScope(Misc(NodeId(20)))), [_1@i32]);\n+//         _4 = &ReErased mut _1;\n+//         Validate(Acquire, [(*_4)@i32/ReScope(Misc(NodeId(20)))]);\n+//         Validate(Suspend(ReScope(Misc(NodeId(20)))), [(*_4)@i32/ReScope(Misc(NodeId(20)))]);\n+//         _3 = &ReErased mut (*_4);\n+//         Validate(Acquire, [(*_3)@i32/ReScope(Misc(NodeId(20)))]);\n+//         Validate(Release, [_3@&ReScope(Misc(NodeId(20))) mut i32]);\n+//         _2 = const foo(_3) -> bb1;\n+//     }\n+//\n+//     bb1: {\n+//         Validate(Acquire, [_2@()]);\n+//         EndRegion(ReScope(Misc(NodeId(20))));\n+//         return;\n+//     }\n+// }\n+// END rustc.node11.EraseRegions.after.mir"}, {"sha": "f1562c8c34cea4db1f0a3a9b77020e7a8f9f345b", "filename": "src/test/mir-opt/validate_2.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/57958d1a04d12dbd3ea51904c2f38fbc3b40d246/src%2Ftest%2Fmir-opt%2Fvalidate_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57958d1a04d12dbd3ea51904c2f38fbc3b40d246/src%2Ftest%2Fmir-opt%2Fvalidate_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_2.rs?ref=57958d1a04d12dbd3ea51904c2f38fbc3b40d246", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z verbose -Z mir-emit-validate\n+\n+fn main() {\n+    let _x : Box<[i32]> = Box::new([1, 2, 3]);\n+}\n+\n+// END RUST SOURCE\n+// START rustc.node4.EraseRegions.after.mir\n+// fn main() -> () {\n+//     bb1: {\n+//         Validate(Release, [_2@std::boxed::Box<[i32; 3]>]);\n+//         _1 = _2 as std::boxed::Box<[i32]> (Unsize);\n+//         Validate(Acquire, [_1@std::boxed::Box<[i32]>]);\n+//     }\n+// }\n+// END rustc.node4.EraseRegions.after.mir"}, {"sha": "6990167b4e1c98fe746f7af392fc1236ae95305f", "filename": "src/test/mir-opt/validate_3.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/57958d1a04d12dbd3ea51904c2f38fbc3b40d246/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57958d1a04d12dbd3ea51904c2f38fbc3b40d246/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs?ref=57958d1a04d12dbd3ea51904c2f38fbc3b40d246", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z verbose -Z mir-emit-validate\n+\n+struct Test {\n+    x: i32\n+}\n+\n+fn foo(_x: &i32) {}\n+\n+fn main() {\n+    let t = Test { x: 0 };\n+    let t = &t;\n+    foo(&t.x);\n+}\n+\n+// END RUST SOURCE\n+// START rustc.node16.EraseRegions.after.mir\n+// fn main() -> () {\n+//     let mut _5: &ReErased i32;\n+//     bb0: {\n+//         Validate(Suspend(ReScope(Misc(NodeId(31)))), [((*_2).0: i32)@i32/ReScope(Remainder(BlockRemainder { block: NodeId(18), first_statement_index: 1 })) (imm)]);\n+//         _5 = &ReErased ((*_2).0: i32);\n+//         Validate(Acquire, [(*_5)@i32/ReScope(Misc(NodeId(31))) (imm)]);\n+//         Validate(Suspend(ReScope(Misc(NodeId(31)))), [(*_5)@i32/ReScope(Misc(NodeId(31))) (imm)]);\n+//         _4 = &ReErased (*_5);\n+//         Validate(Acquire, [(*_4)@i32/ReScope(Misc(NodeId(31))) (imm)]);\n+//         Validate(Release, [_4@&ReScope(Misc(NodeId(31))) i32]);\n+//         _3 = const foo(_4) -> bb1;\n+//     }\n+//     bb1: {\n+//         EndRegion(ReScope(Misc(NodeId(31))));\n+//         EndRegion(ReScope(Remainder(BlockRemainder { block: NodeId(18), first_statement_index: 1 })));\n+//         return;\n+//     }\n+// }\n+// END rustc.node16.EraseRegions.after.mir"}]}