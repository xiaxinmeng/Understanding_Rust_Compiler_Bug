{"sha": "00821ca937ab400e465a008eecdef60e985665ad", "node_id": "C_kwDOAAsO6NoAKDAwODIxY2E5MzdhYjQwMGU0NjVhMDA4ZWVjZGVmNjBlOTg1NjY1YWQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-28T14:43:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-28T14:43:40Z"}, "message": "Auto merge of #7810 - camsteffen:if-then-panic-pedantic, r=flip1995\n\nMove if_then_panic to pedantic and rename to manual_assert\n\nCloses #7718\n\nchangelog: none (lint added since last release)", "tree": {"sha": "41e23df9cb6204a0397bcb7bcc72d0693307035f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41e23df9cb6204a0397bcb7bcc72d0693307035f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00821ca937ab400e465a008eecdef60e985665ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00821ca937ab400e465a008eecdef60e985665ad", "html_url": "https://github.com/rust-lang/rust/commit/00821ca937ab400e465a008eecdef60e985665ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00821ca937ab400e465a008eecdef60e985665ad/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7788af9c47de03a8c7ff854cbdfbb6696042d4ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/7788af9c47de03a8c7ff854cbdfbb6696042d4ab", "html_url": "https://github.com/rust-lang/rust/commit/7788af9c47de03a8c7ff854cbdfbb6696042d4ab"}, {"sha": "022146d2c3c4e1baa65f19c45205152af1a8b997", "url": "https://api.github.com/repos/rust-lang/rust/commits/022146d2c3c4e1baa65f19c45205152af1a8b997", "html_url": "https://github.com/rust-lang/rust/commit/022146d2c3c4e1baa65f19c45205152af1a8b997"}], "stats": {"total": 93, "additions": 43, "deletions": 50}, "files": [{"sha": "c78aa5908de903df91cb6a55b6575cbff50acd79", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -34,7 +34,7 @@ Current beta, release 2021-12-02\n   [#7610](https://github.com/rust-lang/rust-clippy/pull/7610)\n * [`same_name_method`]\n   [#7653](https://github.com/rust-lang/rust-clippy/pull/7653)\n-* [`if_then_panic`] [#7669](https://github.com/rust-lang/rust-clippy/pull/7669)\n+* [`manual_assert`] [#7669](https://github.com/rust-lang/rust-clippy/pull/7669)\n * [`non_send_fields_in_send_ty`]\n   [#7709](https://github.com/rust-lang/rust-clippy/pull/7709)\n * [`equatable_if_let`]\n@@ -139,7 +139,7 @@ Current beta, release 2021-12-02\n   `rsplitn` is used [#7663](https://github.com/rust-lang/rust-clippy/pull/7663)\n * [`while_let_on_iterator`]: Produce correct suggestion when using `&mut`\n   [#7690](https://github.com/rust-lang/rust-clippy/pull/7690)\n-* [`if_then_panic`]: No better handles complex conditions\n+* [`manual_assert`]: No better handles complex conditions\n   [#7741](https://github.com/rust-lang/rust-clippy/pull/7741)\n * Correctly handle signs in exponents in numeric literals lints\n   [#7747](https://github.com/rust-lang/rust-clippy/pull/7747)\n@@ -2895,7 +2895,6 @@ Released 2018-09-13\n [`if_let_redundant_pattern_matching`]: https://rust-lang.github.io/rust-clippy/master/index.html#if_let_redundant_pattern_matching\n [`if_not_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else\n [`if_same_then_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n-[`if_then_panic`]: https://rust-lang.github.io/rust-clippy/master/index.html#if_then_panic\n [`if_then_some_else_none`]: https://rust-lang.github.io/rust-clippy/master/index.html#if_then_some_else_none\n [`ifs_same_cond`]: https://rust-lang.github.io/rust-clippy/master/index.html#ifs_same_cond\n [`implicit_clone`]: https://rust-lang.github.io/rust-clippy/master/index.html#implicit_clone\n@@ -2953,6 +2952,7 @@ Released 2018-09-13\n [`lossy_float_literal`]: https://rust-lang.github.io/rust-clippy/master/index.html#lossy_float_literal\n [`macro_use_imports`]: https://rust-lang.github.io/rust-clippy/master/index.html#macro_use_imports\n [`main_recursion`]: https://rust-lang.github.io/rust-clippy/master/index.html#main_recursion\n+[`manual_assert`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_assert\n [`manual_async_fn`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_async_fn\n [`manual_filter_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_filter_map\n [`manual_find_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_find_map"}, {"sha": "15edb79d36c24d613653e870f38dc66ff94ca3e3", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -76,7 +76,6 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(get_last_with_len::GET_LAST_WITH_LEN),\n     LintId::of(identity_op::IDENTITY_OP),\n     LintId::of(if_let_mutex::IF_LET_MUTEX),\n-    LintId::of(if_then_panic::IF_THEN_PANIC),\n     LintId::of(indexing_slicing::OUT_OF_BOUNDS_INDEXING),\n     LintId::of(infinite_iter::INFINITE_ITER),\n     LintId::of(inherent_to_string::INHERENT_TO_STRING),"}, {"sha": "9b2107915746378bf496dcd3e882606b3cbd3ce4", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -159,7 +159,6 @@ store.register_lints(&[\n     identity_op::IDENTITY_OP,\n     if_let_mutex::IF_LET_MUTEX,\n     if_not_else::IF_NOT_ELSE,\n-    if_then_panic::IF_THEN_PANIC,\n     if_then_some_else_none::IF_THEN_SOME_ELSE_NONE,\n     implicit_hasher::IMPLICIT_HASHER,\n     implicit_return::IMPLICIT_RETURN,\n@@ -216,6 +215,7 @@ store.register_lints(&[\n     loops::WHILE_LET_ON_ITERATOR,\n     macro_use::MACRO_USE_IMPORTS,\n     main_recursion::MAIN_RECURSION,\n+    manual_assert::MANUAL_ASSERT,\n     manual_async_fn::MANUAL_ASYNC_FN,\n     manual_map::MANUAL_MAP,\n     manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE,"}, {"sha": "63ab7f1ca6f67d3367b4006d95ebca532d328ede", "filename": "clippy_lints/src/lib.register_pedantic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_pedantic.rs?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -48,6 +48,7 @@ store.register_group(true, \"clippy::pedantic\", Some(\"clippy_pedantic\"), vec![\n     LintId::of(loops::EXPLICIT_INTO_ITER_LOOP),\n     LintId::of(loops::EXPLICIT_ITER_LOOP),\n     LintId::of(macro_use::MACRO_USE_IMPORTS),\n+    LintId::of(manual_assert::MANUAL_ASSERT),\n     LintId::of(manual_ok_or::MANUAL_OK_OR),\n     LintId::of(match_on_vec_items::MATCH_ON_VEC_ITEMS),\n     LintId::of(matches::MATCH_BOOL),"}, {"sha": "744880bda3e69c2a83763dc5d9b1a38ade7b6ec5", "filename": "clippy_lints/src/lib.register_style.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.register_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.register_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_style.rs?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -27,7 +27,6 @@ store.register_group(true, \"clippy::style\", Some(\"clippy_style\"), vec![\n     LintId::of(functions::DOUBLE_MUST_USE),\n     LintId::of(functions::MUST_USE_UNIT),\n     LintId::of(functions::RESULT_UNIT_ERR),\n-    LintId::of(if_then_panic::IF_THEN_PANIC),\n     LintId::of(inherent_to_string::INHERENT_TO_STRING),\n     LintId::of(len_zero::COMPARISON_TO_EMPTY),\n     LintId::of(len_zero::LEN_WITHOUT_IS_EMPTY),"}, {"sha": "fd5f164e7a1bd2987edf47f9993038674c52b347", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -228,7 +228,6 @@ mod get_last_with_len;\n mod identity_op;\n mod if_let_mutex;\n mod if_not_else;\n-mod if_then_panic;\n mod if_then_some_else_none;\n mod implicit_hasher;\n mod implicit_return;\n@@ -255,6 +254,7 @@ mod literal_representation;\n mod loops;\n mod macro_use;\n mod main_recursion;\n+mod manual_assert;\n mod manual_async_fn;\n mod manual_map;\n mod manual_non_exhaustive;\n@@ -772,7 +772,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(move || Box::new(self_named_constructors::SelfNamedConstructors));\n     store.register_late_pass(move || Box::new(feature_name::FeatureName));\n     store.register_late_pass(move || Box::new(iter_not_returning_iterator::IterNotReturningIterator));\n-    store.register_late_pass(move || Box::new(if_then_panic::IfThenPanic));\n+    store.register_late_pass(move || Box::new(manual_assert::ManualAssert));\n     let enable_raw_pointer_heuristic_for_send = conf.enable_raw_pointer_heuristic_for_send;\n     store.register_late_pass(move || Box::new(non_send_fields_in_send_ty::NonSendFieldInSendTy::new(enable_raw_pointer_heuristic_for_send)));\n     store.register_late_pass(move || Box::new(undocumented_unsafe_blocks::UndocumentedUnsafeBlocks::default()));"}, {"sha": "c639be1bccba4645fd9f088713d8d66044583319", "filename": "clippy_lints/src/manual_assert.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/clippy_lints%2Fsrc%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_assert.rs?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -26,14 +26,14 @@ declare_clippy_lint! {\n     /// let sad_people: Vec<&str> = vec![];\n     /// assert!(sad_people.is_empty(), \"there are sad people: {:?}\", sad_people);\n     /// ```\n-    pub IF_THEN_PANIC,\n-    style,\n+    pub MANUAL_ASSERT,\n+    pedantic,\n     \"`panic!` and only a `panic!` in `if`-then statement\"\n }\n \n-declare_lint_pass!(IfThenPanic => [IF_THEN_PANIC]);\n+declare_lint_pass!(ManualAssert => [MANUAL_ASSERT]);\n \n-impl LateLintPass<'_> for IfThenPanic {\n+impl LateLintPass<'_> for ManualAssert {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n         if_chain! {\n             if let Expr {\n@@ -86,7 +86,7 @@ impl LateLintPass<'_> for IfThenPanic {\n \n                 span_lint_and_sugg(\n                     cx,\n-                    IF_THEN_PANIC,\n+                    MANUAL_ASSERT,\n                     expr.span,\n                     \"only a `panic!` in `if`-then statement\",\n                     \"try\",", "previous_filename": "clippy_lints/src/if_then_panic.rs"}, {"sha": "5d5af4e4632970afe821f9b42b82eae5bd445e08", "filename": "tests/ui/fallible_impl_from.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.rs?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -1,5 +1,4 @@\n #![deny(clippy::fallible_impl_from)]\n-#![allow(clippy::if_then_panic)]\n \n // docs example\n struct Foo(i32);"}, {"sha": "5772ff055084f4691d5bbc51eeaf9627578cc178", "filename": "tests/ui/fallible_impl_from.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Ffallible_impl_from.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Ffallible_impl_from.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.stderr?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -1,5 +1,5 @@\n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:6:1\n+  --> $DIR/fallible_impl_from.rs:5:1\n    |\n LL | / impl From<String> for Foo {\n LL | |     fn from(s: String) -> Self {\n@@ -15,13 +15,13 @@ LL | #![deny(clippy::fallible_impl_from)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:8:13\n+  --> $DIR/fallible_impl_from.rs:7:13\n    |\n LL |         Foo(s.parse().unwrap())\n    |             ^^^^^^^^^^^^^^^^^^\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:27:1\n+  --> $DIR/fallible_impl_from.rs:26:1\n    |\n LL | / impl From<usize> for Invalid {\n LL | |     fn from(i: usize) -> Invalid {\n@@ -34,14 +34,14 @@ LL | | }\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:30:13\n+  --> $DIR/fallible_impl_from.rs:29:13\n    |\n LL |             panic!();\n    |             ^^^^^^^^\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:36:1\n+  --> $DIR/fallible_impl_from.rs:35:1\n    |\n LL | / impl From<Option<String>> for Invalid {\n LL | |     fn from(s: Option<String>) -> Invalid {\n@@ -54,7 +54,7 @@ LL | | }\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:38:17\n+  --> $DIR/fallible_impl_from.rs:37:17\n    |\n LL |         let s = s.unwrap();\n    |                 ^^^^^^^^^^\n@@ -68,7 +68,7 @@ LL |             panic!(\"{:?}\", s);\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:54:1\n+  --> $DIR/fallible_impl_from.rs:53:1\n    |\n LL | / impl<'a> From<&'a mut <Box<u32> as ProjStrTrait>::ProjString> for Invalid {\n LL | |     fn from(s: &'a mut <Box<u32> as ProjStrTrait>::ProjString) -> Invalid {\n@@ -81,7 +81,7 @@ LL | | }\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:56:12\n+  --> $DIR/fallible_impl_from.rs:55:12\n    |\n LL |         if s.parse::<u32>().ok().unwrap() != 42 {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "9d461cff68d8806a78a1ef47536331b6abce3a52", "filename": "tests/ui/manual_assert.fixed", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fmanual_assert.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fmanual_assert.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.fixed?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![warn(clippy::if_then_panic)]\n+#![warn(clippy::manual_assert)]\n \n fn main() {\n     let a = vec![1, 2, 3];", "previous_filename": "tests/ui/if_then_panic.fixed"}, {"sha": "6aadff887ca8dadfd8a55ac81009f90cae16e87d", "filename": "tests/ui/manual_assert.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.rs?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![warn(clippy::if_then_panic)]\n+#![warn(clippy::manual_assert)]\n \n fn main() {\n     let a = vec![1, 2, 3];", "previous_filename": "tests/ui/if_then_panic.rs"}, {"sha": "ab2786247b1debc3274f8afa80c3f6baf3f3ff33", "filename": "tests/ui/manual_assert.stderr", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fmanual_assert.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fmanual_assert.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.stderr?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -1,55 +1,55 @@\n error: only a `panic!` in `if`-then statement\n-  --> $DIR/if_then_panic.rs:19:5\n+  --> $DIR/manual_assert.rs:19:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qaqaq{:?}\", a);\n LL | |     }\n    | |_____^ help: try: `assert!(a.is_empty(), \"qaqaq{:?}\", a);`\n    |\n-   = note: `-D clippy::if-then-panic` implied by `-D warnings`\n+   = note: `-D clippy::manual-assert` implied by `-D warnings`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/if_then_panic.rs:22:5\n+  --> $DIR/manual_assert.rs:22:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qwqwq\");\n LL | |     }\n    | |_____^ help: try: `assert!(a.is_empty(), \"qwqwq\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/if_then_panic.rs:39:5\n+  --> $DIR/manual_assert.rs:39:5\n    |\n LL | /     if b.is_empty() {\n LL | |         panic!(\"panic1\");\n LL | |     }\n    | |_____^ help: try: `assert!(!b.is_empty(), \"panic1\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/if_then_panic.rs:42:5\n+  --> $DIR/manual_assert.rs:42:5\n    |\n LL | /     if b.is_empty() && a.is_empty() {\n LL | |         panic!(\"panic2\");\n LL | |     }\n    | |_____^ help: try: `assert!(!(b.is_empty() && a.is_empty()), \"panic2\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/if_then_panic.rs:45:5\n+  --> $DIR/manual_assert.rs:45:5\n    |\n LL | /     if a.is_empty() && !b.is_empty() {\n LL | |         panic!(\"panic3\");\n LL | |     }\n    | |_____^ help: try: `assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/if_then_panic.rs:48:5\n+  --> $DIR/manual_assert.rs:48:5\n    |\n LL | /     if b.is_empty() || a.is_empty() {\n LL | |         panic!(\"panic4\");\n LL | |     }\n    | |_____^ help: try: `assert!(!(b.is_empty() || a.is_empty()), \"panic4\");`\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/if_then_panic.rs:51:5\n+  --> $DIR/manual_assert.rs:51:5\n    |\n LL | /     if a.is_empty() || !b.is_empty() {\n LL | |         panic!(\"panic5\");", "previous_filename": "tests/ui/if_then_panic.stderr"}, {"sha": "06370dfce65188899dda939fb0dbee8e561c7170", "filename": "tests/ui/ptr_arg.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fptr_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fptr_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.rs?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -1,9 +1,4 @@\n-#![allow(\n-    unused,\n-    clippy::many_single_char_names,\n-    clippy::redundant_clone,\n-    clippy::if_then_panic\n-)]\n+#![allow(unused, clippy::many_single_char_names, clippy::redundant_clone)]\n #![warn(clippy::ptr_arg)]\n \n use std::borrow::Cow;"}, {"sha": "64594eb870c2c5067b413095f6eabdeded968ebc", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00821ca937ab400e465a008eecdef60e985665ad/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=00821ca937ab400e465a008eecdef60e985665ad", "patch": "@@ -1,31 +1,31 @@\n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices\n-  --> $DIR/ptr_arg.rs:12:14\n+  --> $DIR/ptr_arg.rs:7:14\n    |\n LL | fn do_vec(x: &Vec<i64>) {\n    |              ^^^^^^^^^ help: change this to: `&[i64]`\n    |\n    = note: `-D clippy::ptr-arg` implied by `-D warnings`\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do\n-  --> $DIR/ptr_arg.rs:21:14\n+  --> $DIR/ptr_arg.rs:16:14\n    |\n LL | fn do_str(x: &String) {\n    |              ^^^^^^^ help: change this to: `&str`\n \n error: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\n-  --> $DIR/ptr_arg.rs:30:15\n+  --> $DIR/ptr_arg.rs:25:15\n    |\n LL | fn do_path(x: &PathBuf) {\n    |               ^^^^^^^^ help: change this to: `&Path`\n \n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices\n-  --> $DIR/ptr_arg.rs:43:18\n+  --> $DIR/ptr_arg.rs:38:18\n    |\n LL |     fn do_vec(x: &Vec<i64>);\n    |                  ^^^^^^^^^ help: change this to: `&[i64]`\n \n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices\n-  --> $DIR/ptr_arg.rs:56:14\n+  --> $DIR/ptr_arg.rs:51:14\n    |\n LL | fn cloned(x: &Vec<u8>) -> Vec<u8> {\n    |              ^^^^^^^^\n@@ -44,7 +44,7 @@ LL |     x.to_owned()\n    |\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do\n-  --> $DIR/ptr_arg.rs:65:18\n+  --> $DIR/ptr_arg.rs:60:18\n    |\n LL | fn str_cloned(x: &String) -> String {\n    |                  ^^^^^^^\n@@ -67,7 +67,7 @@ LL |     x.to_string()\n    |\n \n error: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\n-  --> $DIR/ptr_arg.rs:73:19\n+  --> $DIR/ptr_arg.rs:68:19\n    |\n LL | fn path_cloned(x: &PathBuf) -> PathBuf {\n    |                   ^^^^^^^^\n@@ -90,7 +90,7 @@ LL |     x.to_path_buf()\n    |\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do\n-  --> $DIR/ptr_arg.rs:81:44\n+  --> $DIR/ptr_arg.rs:76:44\n    |\n LL | fn false_positive_capacity(x: &Vec<u8>, y: &String) {\n    |                                            ^^^^^^^\n@@ -109,13 +109,13 @@ LL |     let c = y;\n    |             ~\n \n error: using a reference to `Cow` is not recommended\n-  --> $DIR/ptr_arg.rs:95:25\n+  --> $DIR/ptr_arg.rs:90:25\n    |\n LL | fn test_cow_with_ref(c: &Cow<[i32]>) {}\n    |                         ^^^^^^^^^^^ help: change this to: `&[i32]`\n \n error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices\n-  --> $DIR/ptr_arg.rs:148:21\n+  --> $DIR/ptr_arg.rs:143:21\n    |\n LL |     fn foo_vec(vec: &Vec<u8>) {\n    |                     ^^^^^^^^\n@@ -134,7 +134,7 @@ LL |         let _ = vec.to_owned().clone();\n    |                 ~~~~~~~~~~~~~~\n \n error: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\n-  --> $DIR/ptr_arg.rs:153:23\n+  --> $DIR/ptr_arg.rs:148:23\n    |\n LL |     fn foo_path(path: &PathBuf) {\n    |                       ^^^^^^^^\n@@ -153,7 +153,7 @@ LL |         let _ = path.to_path_buf().clone();\n    |                 ~~~~~~~~~~~~~~~~~~\n \n error: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\n-  --> $DIR/ptr_arg.rs:158:21\n+  --> $DIR/ptr_arg.rs:153:21\n    |\n LL |     fn foo_str(str: &PathBuf) {\n    |                     ^^^^^^^^"}]}