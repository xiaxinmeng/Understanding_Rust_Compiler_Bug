{"sha": "6bc69fa342630e72dd5afecc7d24b2aa8f7e6043", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYzY5ZmEzNDI2MzBlNzJkZDVhZmVjYzdkMjRiMmFhOGY3ZTYwNDM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-11T19:14:51Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-11T19:14:51Z"}, "message": "Merge pull request #127 from birkenfeld/better-helptext-if-let\n\nbetter help text for \"match -> if let\" lint", "tree": {"sha": "c360c1a977852941a9a0e7ba44d44ec98c72ab2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c360c1a977852941a9a0e7ba44d44ec98c72ab2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043", "html_url": "https://github.com/rust-lang/rust/commit/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cadd9bb954edf23dcfb7002f9174b61228de5010", "url": "https://api.github.com/repos/rust-lang/rust/commits/cadd9bb954edf23dcfb7002f9174b61228de5010", "html_url": "https://github.com/rust-lang/rust/commit/cadd9bb954edf23dcfb7002f9174b61228de5010"}, {"sha": "cab9905705a56df245cce9e0f71ebeddf9daad89", "url": "https://api.github.com/repos/rust-lang/rust/commits/cab9905705a56df245cce9e0f71ebeddf9daad89", "html_url": "https://github.com/rust-lang/rust/commit/cab9905705a56df245cce9e0f71ebeddf9daad89"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "444062a5919fc9f35eb5459e5de42c9b2be199a3", "filename": "src/misc.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=6bc69fa342630e72dd5afecc7d24b2aa8f7e6043", "patch": "@@ -43,13 +43,20 @@ impl LintPass for MiscPass {\n                     // an enum is extended. So we only consider cases where a `_` wildcard is used\n                     if arms[1].pats[0].node == PatWild(PatWildSingle) &&\n                             arms[0].pats.len() == 1 {\n+                        let body_code = snippet(cx, arms[0].body.span, \"..\");\n+                        let suggestion = if let ExprBlock(_) = arms[0].body.node {\n+                            body_code.into_owned()\n+                        } else {\n+                            format!(\"{{ {} }}\", body_code)\n+                        };\n                         span_help_and_lint(cx, SINGLE_MATCH, expr.span,\n                               \"You seem to be trying to use match for \\\n-                              destructuring a single type. Did you mean to \\\n+                              destructuring a single pattern. Did you mean to \\\n                               use `if let`?\",\n-                              &*format!(\"Try if let {} = {} {{ ... }}\",\n-                                      snippet(cx, arms[0].pats[0].span, \"..\"),\n-                                      snippet(cx, ex.span, \"..\"))\n+                              &*format!(\"Try\\nif let {} = {} {}\",\n+                                        snippet(cx, arms[0].pats[0].span, \"..\"),\n+                                        snippet(cx, ex.span, \"..\"),\n+                                        suggestion)\n                         );\n                     }\n                 }"}, {"sha": "9b3b94e113e7daefde05eba0a9b499650967afc1", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=6bc69fa342630e72dd5afecc7d24b2aa8f7e6043", "patch": "@@ -81,6 +81,6 @@ pub fn span_help_and_lint(cx: &Context, lint: &'static Lint, span: Span,\n         msg: &str, help: &str) {\n     span_lint(cx, lint, span, msg);\n     if cx.current_level(lint) != Level::Allow {\n-        cx.sess().span_help(span, help);\n+        cx.sess().fileline_help(span, help);\n     }\n }"}, {"sha": "47b8b18a5ecc03341212cc3d3a330457d38297dd", "filename": "tests/compile-fail/match_if_let.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043/tests%2Fcompile-fail%2Fmatch_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc69fa342630e72dd5afecc7d24b2aa8f7e6043/tests%2Fcompile-fail%2Fmatch_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmatch_if_let.rs?ref=6bc69fa342630e72dd5afecc7d24b2aa8f7e6043", "patch": "@@ -6,8 +6,10 @@\n fn main(){\n     let x = Some(1u8);\n     match x {  //~ ERROR You seem to be trying to use match\n-               //~^ HELP Try if let Some(y) = x { ... }\n-        Some(y) => println!(\"{:?}\", y),\n+               //~^ HELP Try\n+        Some(y) => {\n+            println!(\"{:?}\", y);\n+        }\n         _ => ()\n     }\n     // Not linted\n@@ -17,7 +19,7 @@ fn main(){\n     }\n     let z = (1u8,1u8);\n     match z { //~ ERROR You seem to be trying to use match\n-              //~^ HELP Try if let (2...3, 7...9) = z { ... }\n+              //~^ HELP Try\n         (2...3, 7...9) => println!(\"{:?}\", z),\n         _ => {}\n     }"}]}