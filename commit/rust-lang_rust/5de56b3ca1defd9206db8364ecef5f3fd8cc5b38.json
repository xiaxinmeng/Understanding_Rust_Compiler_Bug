{"sha": "5de56b3ca1defd9206db8364ecef5f3fd8cc5b38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZTU2YjNjYTFkZWZkOTIwNmRiODM2NGVjZWY1ZjNmZDhjYzViMzg=", "commit": {"author": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2014-11-11T08:13:10Z"}, "committer": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2014-11-18T20:31:45Z"}, "message": "Make os::change_dir() return IoResult<()>\n\nos::change_dir() returns bool, without a meaningful error message.\nChange it to return IoResult<()> to indicate what IoError caused the\nfailure.\n\nFixes #16315.\n\n[breaking-change]", "tree": {"sha": "c43f443927adb46f158f5b1499b81ee67aac7a98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c43f443927adb46f158f5b1499b81ee67aac7a98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38", "html_url": "https://github.com/rust-lang/rust/commit/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38/comments", "author": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f422c4c05f4d108ba6429a174aa0c2ef3b183fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f422c4c05f4d108ba6429a174aa0c2ef3b183fa", "html_url": "https://github.com/rust-lang/rust/commit/6f422c4c05f4d108ba6429a174aa0c2ef3b183fa"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "cf22b8014ca7ae8cbb62e43340b384248920a8f7", "filename": "src/libstd/os.rs", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=5de56b3ca1defd9206db8364ecef5f3fd8cc5b38", "patch": "@@ -867,32 +867,33 @@ pub fn make_absolute(p: &Path) -> IoResult<Path> {\n /// use std::path::Path;\n ///\n /// let root = Path::new(\"/\");\n-/// assert!(os::change_dir(&root));\n+/// assert!(os::change_dir(&root).is_ok());\n /// println!(\"Successfully changed working directory to {}!\", root.display());\n /// ```\n-pub fn change_dir(p: &Path) -> bool {\n+pub fn change_dir(p: &Path) -> IoResult<()> {\n     return chdir(p);\n \n     #[cfg(windows)]\n-    fn chdir(p: &Path) -> bool {\n-        let p = match p.as_str() {\n-            Some(s) => {\n-                let mut p = s.utf16_units().collect::<Vec<u16>>();\n-                p.push(0);\n-                p\n-            }\n-            None => return false,\n-        };\n+    fn chdir(p: &Path) -> IoResult<()> {\n+        let mut p = p.as_str().unwrap().utf16_units().collect::<Vec<u16>>();\n+        p.push(0);\n+\n         unsafe {\n-            libc::SetCurrentDirectoryW(p.as_ptr()) != (0 as libc::BOOL)\n+            match libc::SetCurrentDirectoryW(p.as_ptr()) != (0 as libc::BOOL) {\n+                true => Ok(()),\n+                false => Err(IoError::last_error()),\n+            }\n         }\n     }\n \n     #[cfg(unix)]\n-    fn chdir(p: &Path) -> bool {\n+    fn chdir(p: &Path) -> IoResult<()> {\n         p.with_c_str(|buf| {\n             unsafe {\n-                libc::chdir(buf) == (0 as c_int)\n+                match libc::chdir(buf) == (0 as c_int) {\n+                    true => Ok(()),\n+                    false => Err(IoError::last_error()),\n+                }\n             }\n         })\n     }"}, {"sha": "7400c52a73b4abf4d7d61bf074a63f398b3aa2b0", "filename": "src/test/run-pass/tempfile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38/src%2Ftest%2Frun-pass%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38/src%2Ftest%2Frun-pass%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftempfile.rs?ref=5de56b3ca1defd9206db8364ecef5f3fd8cc5b38", "patch": "@@ -190,7 +190,7 @@ pub fn dont_double_panic() {\n \n fn in_tmpdir(f: ||) {\n     let tmpdir = TempDir::new(\"test\").ok().expect(\"can't make tmpdir\");\n-    assert!(os::change_dir(tmpdir.path()));\n+    assert!(os::change_dir(tmpdir.path()).is_ok());\n \n     f();\n }"}]}