{"sha": "e41023ce46b36d57fd920a4520555d1067170e30", "node_id": "C_kwDOAAsO6NoAKGU0MTAyM2NlNDZiMzZkNTdmZDkyMGE0NTIwNTU1ZDEwNjcxNzBlMzA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-10-17T14:32:47Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-10-17T14:32:47Z"}, "message": "Make flycheck workdone progress reports cancellable", "tree": {"sha": "c2ef9b98a2f6c0c14f51619038cba123e6d9da8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2ef9b98a2f6c0c14f51619038cba123e6d9da8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e41023ce46b36d57fd920a4520555d1067170e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e41023ce46b36d57fd920a4520555d1067170e30", "html_url": "https://github.com/rust-lang/rust/commit/e41023ce46b36d57fd920a4520555d1067170e30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e41023ce46b36d57fd920a4520555d1067170e30/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40cbeb5b3d1ec37e8857844e43c75b6980f588e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/40cbeb5b3d1ec37e8857844e43c75b6980f588e3", "html_url": "https://github.com/rust-lang/rust/commit/40cbeb5b3d1ec37e8857844e43c75b6980f588e3"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "b3cea64d4175e129672af57cf90ba647db346c21", "filename": "crates/rust-analyzer/src/lsp_utils.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e41023ce46b36d57fd920a4520555d1067170e30/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e41023ce46b36d57fd920a4520555d1067170e30/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs?ref=e41023ce46b36d57fd920a4520555d1067170e30", "patch": "@@ -87,6 +87,7 @@ impl GlobalState {\n         state: Progress,\n         message: Option<String>,\n         fraction: Option<f64>,\n+        cancel_token: Option<String>,\n     ) {\n         if !self.config.work_done_progress() {\n             return;\n@@ -95,7 +96,10 @@ impl GlobalState {\n             assert!((0.0..=1.0).contains(&f));\n             (f * 100.0) as u32\n         });\n-        let token = lsp_types::ProgressToken::String(format!(\"rustAnalyzer/{}\", title));\n+        let cancellable = Some(cancel_token.is_some());\n+        let token = lsp_types::ProgressToken::String(\n+            cancel_token.unwrap_or_else(|| format!(\"rustAnalyzer/{}\", title)),\n+        );\n         let work_done_progress = match state {\n             Progress::Begin => {\n                 self.send_request::<lsp_types::request::WorkDoneProgressCreate>(\n@@ -105,14 +109,14 @@ impl GlobalState {\n \n                 lsp_types::WorkDoneProgress::Begin(lsp_types::WorkDoneProgressBegin {\n                     title: title.into(),\n-                    cancellable: None,\n+                    cancellable,\n                     message,\n                     percentage,\n                 })\n             }\n             Progress::Report => {\n                 lsp_types::WorkDoneProgress::Report(lsp_types::WorkDoneProgressReport {\n-                    cancellable: None,\n+                    cancellable,\n                     message,\n                     percentage,\n                 })"}, {"sha": "3a379993ad650308c2056ddc37b410ef36f23c2a", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e41023ce46b36d57fd920a4520555d1067170e30/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e41023ce46b36d57fd920a4520555d1067170e30/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=e41023ce46b36d57fd920a4520555d1067170e30", "patch": "@@ -257,7 +257,7 @@ impl GlobalState {\n                         }\n                     };\n \n-                    self.report_progress(\"Indexing\", state, message, Some(fraction));\n+                    self.report_progress(\"Indexing\", state, message, Some(fraction), None);\n                 }\n             }\n             Event::Vfs(message) => {\n@@ -465,7 +465,7 @@ impl GlobalState {\n                     }\n                 };\n \n-                self.report_progress(\"Fetching\", state, msg, None);\n+                self.report_progress(\"Fetching\", state, msg, None, None);\n             }\n             Task::FetchBuildData(progress) => {\n                 let (state, msg) = match progress {\n@@ -481,7 +481,7 @@ impl GlobalState {\n                 };\n \n                 if let Some(state) = state {\n-                    self.report_progress(\"Loading\", state, msg, None);\n+                    self.report_progress(\"Loading\", state, msg, None, None);\n                 }\n             }\n         }\n@@ -518,6 +518,7 @@ impl GlobalState {\n                     state,\n                     Some(format!(\"{}/{}\", n_done, n_total)),\n                     Some(Progress::fraction(n_done, n_total)),\n+                    None,\n                 )\n             }\n         }\n@@ -584,7 +585,13 @@ impl GlobalState {\n                 } else {\n                     format!(\"cargo check (#{})\", id + 1)\n                 };\n-                self.report_progress(&title, state, message, None);\n+                self.report_progress(\n+                    &title,\n+                    state,\n+                    message,\n+                    None,\n+                    Some(format!(\"rust-analyzer/checkOnSave/{}\", id)),\n+                );\n             }\n         }\n     }\n@@ -698,7 +705,16 @@ impl GlobalState {\n                 this.cancel(id);\n                 Ok(())\n             })?\n-            .on::<lsp_types::notification::WorkDoneProgressCancel>(|_this, _params| {\n+            .on::<lsp_types::notification::WorkDoneProgressCancel>(|this, params| {\n+                if let lsp_types::NumberOrString::String(s) = &params.token {\n+                    if let Some(id) = s.strip_prefix(\"rust-analyzer/checkOnSave/\") {\n+                        if let Ok(id) = u32::from_str_radix(id, 10) {\n+                            if let Some(flycheck) = this.flycheck.get(id as usize) {\n+                                flycheck.cancel();\n+                            }\n+                        }\n+                    }\n+                }\n                 // Just ignore this. It is OK to continue sending progress\n                 // notifications for this token, as the client can't know when\n                 // we accepted notification."}]}