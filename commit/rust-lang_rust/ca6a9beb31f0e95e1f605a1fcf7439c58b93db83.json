{"sha": "ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNmE5YmViMzFmMGU5NWUxZjYwNWExZmNmNzQzOWM1OGI5M2RiODM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-05T09:44:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-05T09:44:45Z"}, "message": "Auto merge of #4338 - flip1995:rollup-9cm4jbr, r=flip1995\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #4329 (Doctests: Enable running doc tests for pedantic lints)\n - #4330 (Doctests: Enable running doc tests for nursery lints)\n - #4331 (Doctests: Enable running doc tests for restriction lints)\n - #4332 (Split up cast.rs tests, run-rustfix for unnecessary_cast)\n\nFailed merges:\n\nr? @ghost\n\nchangelog: none", "tree": {"sha": "5a191066f4579fea765cfd9cc60b6339739fcf70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a191066f4579fea765cfd9cc60b6339739fcf70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "html_url": "https://github.com/rust-lang/rust/commit/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a90b3ba3011582616c5353ab160b0aa4dffd41c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a90b3ba3011582616c5353ab160b0aa4dffd41c2", "html_url": "https://github.com/rust-lang/rust/commit/a90b3ba3011582616c5353ab160b0aa4dffd41c2"}, {"sha": "9259eeb68935144e20710262b6953be3756535a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9259eeb68935144e20710262b6953be3756535a8", "html_url": "https://github.com/rust-lang/rust/commit/9259eeb68935144e20710262b6953be3756535a8"}], "stats": {"total": 381, "additions": 261, "deletions": 120}, "files": [{"sha": "9e0d114569e8af86572acb51e3e5a5a449c3e5be", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -16,7 +16,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// a + 1\n+    /// # let a = 0;\n+    /// a + 1;\n     /// ```\n     pub INTEGER_ARITHMETIC,\n     restriction,\n@@ -33,7 +34,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// a + 1.0\n+    /// # let a = 0.0;\n+    /// a + 1.0;\n     /// ```\n     pub FLOAT_ARITHMETIC,\n     restriction,"}, {"sha": "64c8a715d5efc51548280fe44ec94c1259045a34", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -113,19 +113,19 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// // Bad\n-    /// #[inline(always)]\n-    ///\n-    /// fn not_quite_good_code(..) { ... }\n-    ///\n     /// // Good (as inner attribute)\n     /// #![inline(always)]\n     ///\n-    /// fn this_is_fine(..) { ... }\n+    /// fn this_is_fine() { }\n+    ///\n+    /// // Bad\n+    /// #[inline(always)]\n+    ///\n+    /// fn not_quite_good_code() { }\n     ///\n     /// // Good (as outer attribute)\n     /// #[inline(always)]\n-    /// fn this_is_fine_too(..) { ... }\n+    /// fn this_is_fine_too() { }\n     /// ```\n     pub EMPTY_LINE_AFTER_OUTER_ATTR,\n     nursery,"}, {"sha": "10ba0b9bf5612fb259c7993e505d78cb5209a774", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -27,6 +27,8 @@ declare_clippy_lint! {\n     /// Could be written:\n     ///\n     /// ```rust\n+    /// # use std::convert::TryFrom;\n+    /// # let foo = 1;\n     /// # let _ =\n     /// i32::try_from(foo).is_ok()\n     /// # ;"}, {"sha": "3c2a328b9acbf75752976b96fb60e019dcdd8a4a", "filename": "clippy_lints/src/copy_iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopy_iterator.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -13,7 +13,7 @@ declare_clippy_lint! {\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n-    /// ```rust\n+    /// ```rust,ignore\n     /// #[derive(Copy, Clone)]\n     /// struct Countdown(u8);\n     ///"}, {"sha": "d50a47f8fc5f69e7ec33584e1a5c882f1cd37ae8", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -49,12 +49,12 @@ declare_clippy_lint! {\n     /// **Known problems:** Bounds of generic types are sometimes wrong: https://github.com/rust-lang/rust/issues/26925\n     ///\n     /// **Example:**\n-    /// ```rust\n+    /// ```rust,ignore\n     /// #[derive(Copy)]\n     /// struct Foo;\n     ///\n     /// impl Clone for Foo {\n-    ///     ..\n+    ///     // ..\n     /// }\n     /// ```\n     pub EXPL_IMPL_CLONE_ON_COPY,"}, {"sha": "4950212a4b5d145f2e5c41ebd6413a3e8c76b2e6", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -27,7 +27,7 @@ declare_clippy_lint! {\n     /// /// Do something with the foo_bar parameter. See also\n     /// /// that::other::module::foo.\n     /// // ^ `foo_bar` and `that::other::module::foo` should be ticked.\n-    /// fn doit(foo_bar) { .. }\n+    /// fn doit(foo_bar: usize) {}\n     /// ```\n     pub DOC_MARKDOWN,\n     pedantic,"}, {"sha": "6daf204a5f187587644bab1c255baba8de62b262", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -16,6 +16,9 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # fn a() {}\n+    /// # fn b() {}\n+    /// # let x: i32 = 1;\n     /// if x.is_positive() {\n     ///     a();\n     /// } else if x.is_negative() {\n@@ -26,6 +29,9 @@ declare_clippy_lint! {\n     /// Could be written:\n     ///\n     /// ```rust\n+    /// # fn a() {}\n+    /// # fn b() {}\n+    /// # let x: i32 = 1;\n     /// if x.is_positive() {\n     ///     a();\n     /// } else if x.is_negative() {"}, {"sha": "af9647dc0d692da629f3b7324129d26ad2005ff3", "filename": "clippy_lints/src/if_not_else.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_not_else.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -17,6 +17,9 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # let v: Vec<usize> = vec![];\n+    /// # fn a() {}\n+    /// # fn b() {}\n     /// if !v.is_empty() {\n     ///     a()\n     /// } else {\n@@ -27,6 +30,9 @@ declare_clippy_lint! {\n     /// Could be written:\n     ///\n     /// ```rust\n+    /// # let v: Vec<usize> = vec![];\n+    /// # fn a() {}\n+    /// # fn b() {}\n     /// if v.is_empty() {\n     ///     b()\n     /// } else {"}, {"sha": "06e5458c185efa25eab8ac50d9e1b634eb4a6f64", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -47,7 +47,7 @@ declare_clippy_lint! {\n     /// **Known problems:** Hopefully none.\n     ///\n     /// **Example:**\n-    /// ```rust\n+    /// ```rust,no_run\n     /// // Vector\n     /// let x = vec![0; 5];\n     ///"}, {"sha": "48767aa2710d6d12a0ba3d1c4d7db60807a7bed6", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -34,7 +34,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// [0..].iter().zip(infinite_iter.take_while(|x| x > 5))\n+    /// let infinite_iter = 0..;\n+    /// [0..].iter().zip(infinite_iter.take_while(|x| *x > 5));\n     /// ```\n     pub MAYBE_INFINITE_ITER,\n     pedantic,"}, {"sha": "8e2340175415dd7a52b54b4915d02e3c443cbd2a", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -110,12 +110,12 @@ macro_rules! declare_clippy_lint {\n     };\n     { $(#[$attr:meta])* pub $name:tt, pedantic, $description:tt } => {\n         declare_tool_lint! {\n-            pub clippy::$name, Allow, $description, report_in_external_macro: true\n+            $(#[$attr])* pub clippy::$name, Allow, $description, report_in_external_macro: true\n         }\n     };\n     { $(#[$attr:meta])* pub $name:tt, restriction, $description:tt } => {\n         declare_tool_lint! {\n-            pub clippy::$name, Allow, $description, report_in_external_macro: true\n+            $(#[$attr])* pub clippy::$name, Allow, $description, report_in_external_macro: true\n         }\n     };\n     { $(#[$attr:meta])* pub $name:tt, cargo, $description:tt } => {\n@@ -125,7 +125,7 @@ macro_rules! declare_clippy_lint {\n     };\n     { $(#[$attr:meta])* pub $name:tt, nursery, $description:tt } => {\n         declare_tool_lint! {\n-            pub clippy::$name, Allow, $description, report_in_external_macro: true\n+            $(#[$attr])* pub clippy::$name, Allow, $description, report_in_external_macro: true\n         }\n     };\n     { $(#[$attr:meta])* pub $name:tt, internal, $description:tt } => {"}, {"sha": "7a5ac47b6e75291299a1bcd640b98e20b024213d", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -91,16 +91,18 @@ declare_clippy_lint! {\n     /// types.\n     ///\n     /// **Example:**\n-    /// ```ignore\n+    /// ```rust\n     /// // with `y` a `Vec` or slice:\n+    /// # let y = vec![1];\n     /// for x in y.iter() {\n-    ///     ..\n+    ///     // ..\n     /// }\n     /// ```\n     /// can be rewritten to\n     /// ```rust\n+    /// # let y = vec![1];\n     /// for x in &y {\n-    ///     ..\n+    ///     // ..\n     /// }\n     /// ```\n     pub EXPLICIT_ITER_LOOP,\n@@ -117,16 +119,18 @@ declare_clippy_lint! {\n     /// **Known problems:** None\n     ///\n     /// **Example:**\n-    /// ```ignore\n+    /// ```rust\n+    /// # let y = vec![1];\n     /// // with `y` a `Vec` or slice:\n     /// for x in y.into_iter() {\n-    ///     ..\n+    ///     // ..\n     /// }\n     /// ```\n     /// can be rewritten to\n-    /// ```ignore\n+    /// ```rust\n+    /// # let y = vec![1];\n     /// for x in y {\n-    ///     ..\n+    ///     // ..\n     /// }\n     /// ```\n     pub EXPLICIT_INTO_ITER_LOOP,"}, {"sha": "8a6f6970e1bc68e00727d9b6973fd9af30fbce09", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -53,19 +53,25 @@ declare_clippy_lint! {\n     /// Using `match`:\n     ///\n     /// ```rust\n+    /// # fn bar(foo: &usize) {}\n+    /// # let other_ref: usize = 1;\n+    /// # let x: Option<&usize> = Some(&1);\n     /// match x {\n     ///     Some(ref foo) => bar(foo),\n-    ///     _ => bar(other_ref),\n+    ///     _ => bar(&other_ref),\n     /// }\n     /// ```\n     ///\n     /// Using `if let` with `else`:\n     ///\n     /// ```rust\n+    /// # fn bar(foo: &usize) {}\n+    /// # let other_ref: usize = 1;\n+    /// # let x: Option<&usize> = Some(&1);\n     /// if let Some(ref foo) = x {\n     ///     bar(foo);\n     /// } else {\n-    ///     bar(other_ref);\n+    ///     bar(&other_ref);\n     /// }\n     /// ```\n     pub SINGLE_MATCH_ELSE,\n@@ -205,6 +211,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # enum Foo { A(usize), B(usize) }\n+    /// # let x = Foo::B(1);\n     /// match x {\n     ///     A => {},\n     ///     _ => {},"}, {"sha": "54b0a61937e7eb54f3bd3a3e0c571710828d4177", "filename": "clippy_lints/src/mem_forget.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_forget.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -14,6 +14,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # use std::mem;\n+    /// # use std::rc::Rc;\n     /// mem::forget(Rc::new(55))\n     /// ```\n     pub MEM_FORGET,"}, {"sha": "5bb5ebc83a4dc128a94a69c594dd1feb957bb39a", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 43, "deletions": 12, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -40,8 +40,19 @@ declare_clippy_lint! {\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n+    ///\n+    /// Using unwrap on an `Option`:\n+    ///\n     /// ```rust\n-    /// x.unwrap()\n+    /// let opt = Some(1);\n+    /// opt.unwrap();\n+    /// ```\n+    ///\n+    /// Better:\n+    ///\n+    /// ```rust\n+    /// let opt = Some(1);\n+    /// opt.expect(\"more helpful message\");\n     /// ```\n     pub OPTION_UNWRAP_USED,\n     restriction,\n@@ -62,8 +73,18 @@ declare_clippy_lint! {\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n+    /// Using unwrap on an `Option`:\n+    ///\n     /// ```rust\n-    /// x.unwrap()\n+    /// let res: Result<usize, ()> = Ok(1);\n+    /// res.unwrap();\n+    /// ```\n+    ///\n+    /// Better:\n+    ///\n+    /// ```rust\n+    /// let res: Result<usize, ()> = Ok(1);\n+    /// res.expect(\"more helpful message\");\n     /// ```\n     pub RESULT_UNWRAP_USED,\n     restriction,\n@@ -141,9 +162,10 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// impl X {\n-    ///     pub fn as_str(self) -> &str {\n-    ///         ..\n+    /// # struct X;\n+    /// impl<'a> X {\n+    ///     pub fn as_str(self) -> &'a str {\n+    ///         \"foo\"\n     ///     }\n     /// }\n     /// ```\n@@ -179,7 +201,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// x.map(|a| a + 1).unwrap_or(0)\n+    /// # let x = Some(1);\n+    /// x.map(|a| a + 1).unwrap_or(0);\n     /// ```\n     pub OPTION_MAP_UNWRAP_OR,\n     pedantic,\n@@ -196,7 +219,9 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// x.map(|a| a + 1).unwrap_or_else(some_function)\n+    /// # let x = Some(1);\n+    /// # fn some_function() -> usize { 1 }\n+    /// x.map(|a| a + 1).unwrap_or_else(some_function);\n     /// ```\n     pub OPTION_MAP_UNWRAP_OR_ELSE,\n     pedantic,\n@@ -213,7 +238,9 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// x.map(|a| a + 1).unwrap_or_else(some_function)\n+    /// # let x: Result<usize, ()> = Ok(1);\n+    /// # fn some_function(foo: ()) -> usize { 1 }\n+    /// x.map(|a| a + 1).unwrap_or_else(some_function);\n     /// ```\n     pub RESULT_MAP_UNWRAP_OR_ELSE,\n     pedantic,\n@@ -265,7 +292,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// iter.map(|x| x.iter()).flatten()\n+    /// let vec = vec![vec![1]];\n+    /// vec.iter().map(|x| x.iter()).flatten();\n     /// ```\n     pub MAP_FLATTEN,\n     pedantic,\n@@ -284,7 +312,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// iter.filter(|x| x == 0).map(|x| x * 2)\n+    /// let vec = vec![1];\n+    /// vec.iter().filter(|x| **x == 0).map(|x| *x * 2);\n     /// ```\n     pub FILTER_MAP,\n     pedantic,\n@@ -324,7 +353,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    ///  (0..3).find(|x| x == 2).map(|x| x * 2);\n+    ///  (0..3).find(|x| *x == 2).map(|x| x * 2);\n     /// ```\n     /// Can be written as\n     /// ```rust\n@@ -467,7 +496,9 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// x.clone()\n+    /// # use std::rc::Rc;\n+    /// let x = Rc::new(1);\n+    /// x.clone();\n     /// ```\n     pub CLONE_ON_REF_PTR,\n     restriction,"}, {"sha": "f8a24982934c736485934c98b786aa327b2b7e34", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -226,8 +226,9 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// const ONE = 1.00f64;\n-    /// x == ONE  // where both are floats\n+    /// let x: f64 = 1.0;\n+    /// const ONE: f64 = 1.00;\n+    /// x == ONE;  // where both are floats\n     /// ```\n     pub FLOAT_CMP_CONST,\n     restriction,"}, {"sha": "89398f82c9e5c702da57309eea22e2a176c2f478", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -40,17 +40,27 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// # struct Foo {\n+    /// #     random_number: usize,\n+    /// # }\n+    /// # impl Foo {\n     /// fn new() -> Self {\n     ///     Self { random_number: 42 }\n     /// }\n+    /// # }\n     /// ```\n     ///\n     /// Could be a const fn:\n     ///\n     /// ```rust\n+    /// # struct Foo {\n+    /// #     random_number: usize,\n+    /// # }\n+    /// # impl Foo {\n     /// const fn new() -> Self {\n     ///     Self { random_number: 42 }\n     /// }\n+    /// # }\n     /// ```\n     pub MISSING_CONST_FOR_FN,\n     nursery,"}, {"sha": "865543ce3d86e9f1f03b229a9d8486843d5bdad2", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -33,7 +33,7 @@ declare_clippy_lint! {\n     ///\n     /// struct Baz;\n     /// impl Baz {\n-    ///    fn priv() {} // ok\n+    ///    fn private() {} // ok\n     /// }\n     ///\n     /// impl Bar for Baz {\n@@ -42,8 +42,8 @@ declare_clippy_lint! {\n     ///\n     /// pub struct PubBaz;\n     /// impl PubBaz {\n-    ///    fn priv() {} // ok\n-    ///    pub not_ptriv() {} // missing #[inline]\n+    ///    fn private() {} // ok\n+    ///    pub fn not_ptrivate() {} // missing #[inline]\n     /// }\n     ///\n     /// impl Bar for PubBaz {"}, {"sha": "decc684b66778bc5b1e022f1f2efc89fb5073afa", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -16,6 +16,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # let mut y = 1;\n     /// let x = &mut &mut y;\n     /// ```\n     pub MUT_MUT,"}, {"sha": "522c4ab52e2ec50b9796b26aa9764fa6445fb07b", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -44,6 +44,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # use std::sync::Mutex;\n     /// let x = Mutex::new(0usize);\n     /// ```\n     pub MUTEX_INTEGER,"}, {"sha": "a5c0652b265b72457d5b5cf235af6a37a43440b1", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -57,6 +57,9 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # fn condition() -> bool { false }\n+    /// # fn update_condition() {}\n+    /// # let x = false;\n     /// while condition() {\n     ///     update_condition();\n     ///     if x {\n@@ -71,6 +74,9 @@ declare_clippy_lint! {\n     /// Could be rewritten as\n     ///\n     /// ```rust\n+    /// # fn condition() -> bool { false }\n+    /// # fn update_condition() {}\n+    /// # let x = false;\n     /// while condition() {\n     ///     update_condition();\n     ///     if x {\n@@ -83,22 +89,26 @@ declare_clippy_lint! {\n     /// As another example, the following code\n     ///\n     /// ```rust\n+    /// # fn waiting() -> bool { false }\n     /// loop {\n     ///     if waiting() {\n     ///         continue;\n     ///     } else {\n     ///         // Do something useful\n     ///     }\n+    ///     # break;\n     /// }\n     /// ```\n     /// Could be rewritten as\n     ///\n     /// ```rust\n+    /// # fn waiting() -> bool { false }\n     /// loop {\n     ///     if waiting() {\n     ///         continue;\n     ///     }\n     ///     // Do something useful\n+    ///     # break;\n     /// }\n     /// ```\n     pub NEEDLESS_CONTINUE,"}, {"sha": "eaca9c42afb93fdcacecee64b32ceb4b05145b2b", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -40,6 +40,9 @@ declare_clippy_lint! {\n     /// fn foo(v: Vec<i32>) {\n     ///     assert_eq!(v.len(), 42);\n     /// }\n+    /// ```\n+    ///\n+    /// ```rust\n     /// // should be\n     /// fn foo(v: &[i32]) {\n     ///     assert_eq!(v.len(), 42);"}, {"sha": "76f3f8fd88fe17585432af650adac69a6a01c149", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -40,6 +40,7 @@ declare_clippy_lint! {\n     /// * False-positive if there is a borrow preventing the value from moving out.\n     ///\n     /// ```rust\n+    /// # fn foo(x: String) {}\n     /// let x = String::new();\n     ///\n     /// let y = &x;\n@@ -49,15 +50,22 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # use std::path::Path;\n+    /// # #[derive(Clone)]\n+    /// # struct Foo;\n+    /// # impl Foo {\n+    /// #     fn new() -> Self { Foo {} }\n+    /// # }\n+    /// # fn call(x: Foo) {}\n     /// {\n     ///     let x = Foo::new();\n     ///     call(x.clone());\n     ///     call(x.clone()); // this can just pass `x`\n     /// }\n     ///\n-    /// [\"lorem\", \"ipsum\"].join(\" \").to_string()\n+    /// [\"lorem\", \"ipsum\"].join(\" \").to_string();\n     ///\n-    /// Path::new(\"/a/b\").join(\"c\").to_path_buf()\n+    /// Path::new(\"/a/b\").join(\"c\").to_path_buf();\n     /// ```\n     pub REDUNDANT_CLONE,\n     nursery,"}, {"sha": "0dbc7f0551780576e7e66751de10999dbdde9c0c", "filename": "clippy_lints/src/replace_consts.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freplace_consts.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -16,12 +16,14 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # use core::sync::atomic::{ATOMIC_ISIZE_INIT, AtomicIsize};\n     /// static FOO: AtomicIsize = ATOMIC_ISIZE_INIT;\n     /// ```\n     ///\n     /// Could be written:\n     ///\n     /// ```rust\n+    /// # use core::sync::atomic::AtomicIsize;\n     /// static FOO: AtomicIsize = AtomicIsize::new(0);\n     /// ```\n     pub REPLACE_CONSTS,"}, {"sha": "0e75f85cccbc8731efe8d3e696e3a41a5f2da495", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -20,6 +20,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # let x = 1;\n     /// let x = &x;\n     /// ```\n     pub SHADOW_SAME,\n@@ -41,10 +42,12 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// let x = 2;\n     /// let x = x + 1;\n     /// ```\n     /// use different variable name:\n     /// ```rust\n+    /// let x = 2;\n     /// let y = x + 1;\n     /// ```\n     pub SHADOW_REUSE,\n@@ -67,6 +70,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # let y = 1;\n+    /// # let z = 2;\n     /// let x = y;\n     /// let x = z; // shadows the earlier binding\n     /// ```"}, {"sha": "0de63b5ff3e568da2fc9c2da15373ca6d370c9c0", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -48,7 +48,7 @@ declare_clippy_lint! {\n     ///\n     /// ```rust\n     /// let x = \"Hello\".to_owned();\n-    /// x + \", World\"\n+    /// x + \", World\";\n     /// ```\n     pub STRING_ADD,\n     restriction,"}, {"sha": "6c184246c10a13be5c838594748bc86ceb5eed26", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -133,7 +133,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// let x = LinkedList::new();\n+    /// # use std::collections::LinkedList;\n+    /// let x: LinkedList<usize> = LinkedList::new();\n     /// ```\n     pub LINKEDLIST,\n     pedantic,\n@@ -662,8 +663,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// let x = u64::MAX;\n-    /// x as f64\n+    /// let x = std::u64::MAX;\n+    /// x as f64;\n     /// ```\n     pub CAST_PRECISION_LOSS,\n     pedantic,\n@@ -684,7 +685,7 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// let y: i8 = -1;\n-    /// y as u128 // will return 18446744073709551615\n+    /// y as u128; // will return 18446744073709551615\n     /// ```\n     pub CAST_SIGN_LOSS,\n     pedantic,\n@@ -729,7 +730,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// u32::MAX as i32 // will yield a value of `-1`\n+    /// std::u32::MAX as i32; // will yield a value of `-1`\n     /// ```\n     pub CAST_POSSIBLE_WRAP,\n     pedantic,\n@@ -1691,7 +1692,8 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n-    /// let x : u8 = ...; (x as u32) > 300\n+    /// let x: u8 = 1;\n+    /// (x as u32) > 300;\n     /// ```\n     pub INVALID_UPCAST_COMPARISONS,\n     pedantic,"}, {"sha": "9e26b3e5b9c1317bf94df86b90d8be34345fa603", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -77,6 +77,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # let foo = \"bar\";\n     /// println!(\"{:?}\", foo);\n     /// ```\n     pub USE_DEBUG,"}, {"sha": "79705071999249b6570967f82de4281633d41172", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -42,32 +42,4 @@ fn main() {\n     i32::max_value() as u32;\n     i64::max_value() as u64;\n     i128::max_value() as u128;\n-    // Extra checks for *size\n-    // Test cast_unnecessary\n-    1i32 as i32;\n-    1f32 as f32;\n-    false as bool;\n-    &1i32 as &i32;\n-    // macro version\n-    macro_rules! foo {\n-        ($a:ident, $b:ident) => {\n-            pub fn $a() -> $b {\n-                1 as $b\n-            }\n-        };\n-    }\n-    foo!(a, i32);\n-    foo!(b, f32);\n-    foo!(c, f64);\n-\n-    // casting integer literal to float is unnecessary\n-    100 as f32;\n-    100 as f64;\n-    100_i32 as f64;\n-    // Should not trigger\n-    #[rustfmt::skip]\n-    let v = vec!(1);\n-    &v as &[i32];\n-    1.0 as f64;\n-    1 as u64;\n }"}, {"sha": "0ebd3a1f184dcade930e41e73263903dc2e64ace", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 1, "deletions": 39, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -138,43 +138,5 @@ error: casting isize to usize may lose the sign of the value\n LL |     -1isize as usize;\n    |     ^^^^^^^^^^^^^^^^\n \n-error: casting to the same type is unnecessary (`i32` -> `i32`)\n-  --> $DIR/cast.rs:47:5\n-   |\n-LL |     1i32 as i32;\n-   |     ^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n-\n-error: casting to the same type is unnecessary (`f32` -> `f32`)\n-  --> $DIR/cast.rs:48:5\n-   |\n-LL |     1f32 as f32;\n-   |     ^^^^^^^^^^^\n-\n-error: casting to the same type is unnecessary (`bool` -> `bool`)\n-  --> $DIR/cast.rs:49:5\n-   |\n-LL |     false as bool;\n-   |     ^^^^^^^^^^^^^\n-\n-error: casting integer literal to f32 is unnecessary\n-  --> $DIR/cast.rs:64:5\n-   |\n-LL |     100 as f32;\n-   |     ^^^^^^^^^^ help: try: `100_f32`\n-\n-error: casting integer literal to f64 is unnecessary\n-  --> $DIR/cast.rs:65:5\n-   |\n-LL |     100 as f64;\n-   |     ^^^^^^^^^^ help: try: `100_f64`\n-\n-error: casting integer literal to f64 is unnecessary\n-  --> $DIR/cast.rs:66:5\n-   |\n-LL |     100_i32 as f64;\n-   |     ^^^^^^^^^^^^^^ help: try: `100_f64`\n-\n-error: aborting due to 28 previous errors\n+error: aborting due to 22 previous errors\n "}, {"sha": "df9b227eeb3f55ad2cc6acb1f69c3ad040d9b11b", "filename": "tests/ui/unnecessary_cast.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -0,0 +1,23 @@\n+#![warn(clippy::unnecessary_cast)]\n+#![allow(clippy::no_effect)]\n+\n+fn main() {\n+    // Test cast_unnecessary\n+    1i32 as i32;\n+    1f32 as f32;\n+    false as bool;\n+    &1i32 as &i32;\n+\n+    // macro version\n+    macro_rules! foo {\n+        ($a:ident, $b:ident) => {\n+            #[allow(unused)]\n+            pub fn $a() -> $b {\n+                1 as $b\n+            }\n+        };\n+    }\n+    foo!(a, i32);\n+    foo!(b, f32);\n+    foo!(c, f64);\n+}"}, {"sha": "8981d13e8eabb61c1e2888f237af5016c8e9ccbe", "filename": "tests/ui/unnecessary_cast.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.stderr?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -0,0 +1,22 @@\n+error: casting to the same type is unnecessary (`i32` -> `i32`)\n+  --> $DIR/unnecessary_cast.rs:6:5\n+   |\n+LL |     1i32 as i32;\n+   |     ^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n+\n+error: casting to the same type is unnecessary (`f32` -> `f32`)\n+  --> $DIR/unnecessary_cast.rs:7:5\n+   |\n+LL |     1f32 as f32;\n+   |     ^^^^^^^^^^^\n+\n+error: casting to the same type is unnecessary (`bool` -> `bool`)\n+  --> $DIR/unnecessary_cast.rs:8:5\n+   |\n+LL |     false as bool;\n+   |     ^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "8c659df831e3d949a1aa558514c08a1dab28ad63", "filename": "tests/ui/unnecessary_cast_fixable.fixed", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.fixed?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_cast)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n+\n+fn main() {\n+    // casting integer literal to float is unnecessary\n+    100_f32;\n+    100_f64;\n+    100_f64;\n+    // Should not trigger\n+    #[rustfmt::skip]\n+    let v = vec!(1);\n+    &v as &[i32];\n+    1.0 as f64;\n+    1 as u64;\n+}"}, {"sha": "7bab5540c42f7f866f55e945fb79b5047364238e", "filename": "tests/ui/unnecessary_cast_fixable.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.rs?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_cast)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n+\n+fn main() {\n+    // casting integer literal to float is unnecessary\n+    100 as f32;\n+    100 as f64;\n+    100_i32 as f64;\n+    // Should not trigger\n+    #[rustfmt::skip]\n+    let v = vec!(1);\n+    &v as &[i32];\n+    1.0 as f64;\n+    1 as u64;\n+}"}, {"sha": "74616bb90822b547670eeeb0118396a1a016880f", "filename": "tests/ui/unnecessary_cast_fixable.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca6a9beb31f0e95e1f605a1fcf7439c58b93db83/tests%2Fui%2Funnecessary_cast_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.stderr?ref=ca6a9beb31f0e95e1f605a1fcf7439c58b93db83", "patch": "@@ -0,0 +1,22 @@\n+error: casting integer literal to f32 is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:8:5\n+   |\n+LL |     100 as f32;\n+   |     ^^^^^^^^^^ help: try: `100_f32`\n+   |\n+   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n+\n+error: casting integer literal to f64 is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:9:5\n+   |\n+LL |     100 as f64;\n+   |     ^^^^^^^^^^ help: try: `100_f64`\n+\n+error: casting integer literal to f64 is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:10:5\n+   |\n+LL |     100_i32 as f64;\n+   |     ^^^^^^^^^^^^^^ help: try: `100_f64`\n+\n+error: aborting due to 3 previous errors\n+"}]}