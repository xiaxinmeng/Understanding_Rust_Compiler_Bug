{"sha": "f0210f8a43efefef93dcb9ce0cf34b083fd3d51a", "node_id": "C_kwDOAAsO6NoAKGYwMjEwZjhhNDNlZmVmZWY5M2RjYjljZTBjZjM0YjA4M2ZkM2Q1MWE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-15T09:36:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-15T09:36:22Z"}, "message": "Merge #11475\n\n11475: Impr mbe: remove unecessary temporary vec r=bellau a=bellau\n\nIt's a micro optimization. I don't know if it's really necessary (less alloc is always better).\n\nCo-authored-by: bellau <laurent.belmonte@gmail.com>", "tree": {"sha": "a88149f5d68d281b72ef4eb62fcbaa44d1aa9612", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a88149f5d68d281b72ef4eb62fcbaa44d1aa9612"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0210f8a43efefef93dcb9ce0cf34b083fd3d51a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiC3QWCRBK7hj4Ov3rIwAA0sgIAIznRDHLMb7XQIpAkaujyz5c\nc1u72W60r4yPwUbN7gxBVgn2bou2GrBM++37QWcOCCSVCp3WsmU30AovnJBRZspe\nKKC9iTfyZlGGJHl8gf+SUdsO2LipNfgtVsTX8QSrNPv2Jrx+oCDjpNo8M0MtD1y4\nXaYhhLfVX3mHPup9re4A/ytWVSyMRaETg/McMXiWGca7aQkcSZqrq4ULhROdt3/q\nEeCoVhY7dFoG+jxmMWJnEK3ibgHm4tadhUJAtpSy2dHaIaGD47ugLMxIm+b4K9UW\nUbAep6rw9gpdX29MUPy5BnpnaK6xd3QVrUtnl36hgVzaGK+JjnY8G2hDxdaCqps=\n=kCWK\n-----END PGP SIGNATURE-----\n", "payload": "tree a88149f5d68d281b72ef4eb62fcbaa44d1aa9612\nparent e5b6020e558c0ed6f4cfa35ee8f9a425097d8e2a\nparent ff4024eebd86c471a9f07f1c90288facb35a3a5a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1644917782 +0000\ncommitter GitHub <noreply@github.com> 1644917782 +0000\n\nMerge #11475\n\n11475: Impr mbe: remove unecessary temporary vec r=bellau a=bellau\n\nIt's a micro optimization. I don't know if it's really necessary (less alloc is always better).\n\nCo-authored-by: bellau <laurent.belmonte@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0210f8a43efefef93dcb9ce0cf34b083fd3d51a", "html_url": "https://github.com/rust-lang/rust/commit/f0210f8a43efefef93dcb9ce0cf34b083fd3d51a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0210f8a43efefef93dcb9ce0cf34b083fd3d51a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5b6020e558c0ed6f4cfa35ee8f9a425097d8e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b6020e558c0ed6f4cfa35ee8f9a425097d8e2a", "html_url": "https://github.com/rust-lang/rust/commit/e5b6020e558c0ed6f4cfa35ee8f9a425097d8e2a"}, {"sha": "ff4024eebd86c471a9f07f1c90288facb35a3a5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff4024eebd86c471a9f07f1c90288facb35a3a5a", "html_url": "https://github.com/rust-lang/rust/commit/ff4024eebd86c471a9f07f1c90288facb35a3a5a"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "b4c6d3bf6187b79ee1f77e471ff4474865bef89a", "filename": "crates/mbe/src/expander/matcher.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f0210f8a43efefef93dcb9ce0cf34b083fd3d51a/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0210f8a43efefef93dcb9ce0cf34b083fd3d51a/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs?ref=f0210f8a43efefef93dcb9ce0cf34b083fd3d51a", "patch": "@@ -437,11 +437,12 @@ fn match_loop_inner<'t>(\n                     let mut new_item = item.clone();\n                     new_item.bindings = bindings_builder.copy(&new_item.bindings);\n                     new_item.dot.next();\n-                    let mut vars = Vec::new();\n-                    collect_vars(&mut vars, tokens);\n-                    for var in vars {\n-                        bindings_builder.push_empty(&mut new_item.bindings, &var);\n-                    }\n+                    collect_vars(\n+                        &mut |s| {\n+                            bindings_builder.push_empty(&mut new_item.bindings, &s);\n+                        },\n+                        tokens,\n+                    );\n                     cur_items.push(new_item);\n                 }\n                 cur_items.push(MatchState {\n@@ -729,17 +730,16 @@ fn match_meta_var(kind: &str, input: &mut TtIter) -> ExpandResult<Option<Fragmen\n     input.expect_fragment(fragment).map(|it| it.map(Fragment::Tokens))\n }\n \n-fn collect_vars(buf: &mut Vec<SmolStr>, pattern: &MetaTemplate) {\n+fn collect_vars(collector_fun: &mut impl FnMut(SmolStr), pattern: &MetaTemplate) {\n     for op in pattern.iter() {\n         match op {\n-            Op::Var { name, .. } => buf.push(name.clone()),\n+            Op::Var { name, .. } => collector_fun(name.clone()),\n             Op::Leaf(_) => (),\n-            Op::Subtree { tokens, .. } => collect_vars(buf, tokens),\n-            Op::Repeat { tokens, .. } => collect_vars(buf, tokens),\n+            Op::Subtree { tokens, .. } => collect_vars(collector_fun, tokens),\n+            Op::Repeat { tokens, .. } => collect_vars(collector_fun, tokens),\n         }\n     }\n }\n-\n impl MetaTemplate {\n     fn iter_delimited<'a>(&'a self, delimited: Option<&'a tt::Delimiter>) -> OpDelimitedIter<'a> {\n         OpDelimitedIter { inner: &self.0, idx: 0, delimited }"}]}