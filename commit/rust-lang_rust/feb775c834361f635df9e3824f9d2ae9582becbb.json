{"sha": "feb775c834361f635df9e3824f9d2ae9582becbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlYjc3NWM4MzQzNjFmNjM1ZGY5ZTM4MjRmOWQyYWU5NTgyYmVjYmI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-22T15:03:24Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-07T08:20:54Z"}, "message": "Drain only needs a shared reference", "tree": {"sha": "70b369f048129684bc66188bf4d16d33929772b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70b369f048129684bc66188bf4d16d33929772b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/feb775c834361f635df9e3824f9d2ae9582becbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/feb775c834361f635df9e3824f9d2ae9582becbb", "html_url": "https://github.com/rust-lang/rust/commit/feb775c834361f635df9e3824f9d2ae9582becbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/feb775c834361f635df9e3824f9d2ae9582becbb/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0c4a35a969aa94f6667cb885eebb184ee318a6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0c4a35a969aa94f6667cb885eebb184ee318a6d", "html_url": "https://github.com/rust-lang/rust/commit/b0c4a35a969aa94f6667cb885eebb184ee318a6d"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "4a3604f202f73505c7c8a82c9ae7ecaee9ffca01", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/feb775c834361f635df9e3824f9d2ae9582becbb/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feb775c834361f635df9e3824f9d2ae9582becbb/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=feb775c834361f635df9e3824f9d2ae9582becbb", "patch": "@@ -1019,19 +1019,17 @@ impl<T> VecDeque<T> {\n         // the drain is complete and the Drain destructor is run.\n         self.head = drain_tail;\n \n-        // `deque` and `ring` overlap in what they point to, so we must make sure\n-        // that `ring` is \"derived-from\" `deque`, or else even just creating ring\n-        // from `self` already invalidates `deque`.\n-        let deque = NonNull::from(&mut *self);\n-\n         Drain {\n-            deque,\n+            deque: NonNull::from(&mut *self),\n             after_tail: drain_head,\n             after_head: head,\n             iter: Iter {\n                 tail: drain_tail,\n                 head: drain_head,\n-                ring: unsafe { (&mut *deque.as_ptr()).buffer_as_mut_slice() },\n+                // Crucially, we only create shared references from `self` here and read from\n+                // it.  We do not write to `self` nor reborrow to a mutable reference.\n+                // Hence the raw pointer we created above, for `deque`, remains valid.\n+                ring: unsafe { self.buffer_as_slice() },\n             },\n         }\n     }"}]}