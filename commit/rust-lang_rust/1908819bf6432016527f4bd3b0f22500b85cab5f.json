{"sha": "1908819bf6432016527f4bd3b0f22500b85cab5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MDg4MTliZjY0MzIwMTY1MjdmNGJkM2IwZjIyNTAwYjg1Y2FiNWY=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-25T18:56:44Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-25T18:56:44Z"}, "message": "Use panic instead of unwrap", "tree": {"sha": "f48081403383b7a00a3c297b2ff24a7c11ddd07e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f48081403383b7a00a3c297b2ff24a7c11ddd07e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1908819bf6432016527f4bd3b0f22500b85cab5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1908819bf6432016527f4bd3b0f22500b85cab5f", "html_url": "https://github.com/rust-lang/rust/commit/1908819bf6432016527f4bd3b0f22500b85cab5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1908819bf6432016527f4bd3b0f22500b85cab5f/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c55a2dbc1de8ba42df57b70f652eb6a0c0bbc9f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c55a2dbc1de8ba42df57b70f652eb6a0c0bbc9f6", "html_url": "https://github.com/rust-lang/rust/commit/c55a2dbc1de8ba42df57b70f652eb6a0c0bbc9f6"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "6255ea304944e54695c7b20b64a9676ed040d649", "filename": "crates/ra_mbe/src/subtree_source.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1908819bf6432016527f4bd3b0f22500b85cab5f/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1908819bf6432016527f4bd3b0f22500b85cab5f/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs?ref=1908819bf6432016527f4bd3b0f22500b85cab5f", "patch": "@@ -438,14 +438,12 @@ fn convert_delim(d: tt::Delimiter, closing: bool) -> TtToken {\n }\n \n fn convert_literal(l: &tt::Literal) -> TtToken {\n-    let kind = classify_literal(&l.text)\n-        .map(|tkn| tkn.kind)\n-        .or_else(|| match l.text.as_ref() {\n-            \"true\" => Some(SyntaxKind::TRUE_KW),\n-            \"false\" => Some(SyntaxKind::FALSE_KW),\n-            _ => None,\n-        })\n-        .unwrap();\n+    let kind =\n+        classify_literal(&l.text).map(|tkn| tkn.kind).unwrap_or_else(|| match l.text.as_ref() {\n+            \"true\" => SyntaxKind::TRUE_KW,\n+            \"false\" => SyntaxKind::FALSE_KW,\n+            _ => panic!(\"Fail to convert given literal {:#?}\", &l),\n+        });\n \n     TtToken { kind, is_joint_to_next: false, text: l.text.clone(), n_tokens: 1 }\n }"}]}