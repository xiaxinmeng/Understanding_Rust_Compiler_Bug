{"sha": "e3283e0331f6301b1dd8fc24d886c29359c49bbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMjgzZTAzMzFmNjMwMWIxZGQ4ZmMyNGQ4ODZjMjkzNTljNDliYmQ=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-06-22T11:13:34Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-08-07T06:03:15Z"}, "message": "Handle new HashMap layout in GDB and LLDB", "tree": {"sha": "0350d603b4e6feb029782a75328414dcae5a6947", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0350d603b4e6feb029782a75328414dcae5a6947"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3283e0331f6301b1dd8fc24d886c29359c49bbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3283e0331f6301b1dd8fc24d886c29359c49bbd", "html_url": "https://github.com/rust-lang/rust/commit/e3283e0331f6301b1dd8fc24d886c29359c49bbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3283e0331f6301b1dd8fc24d886c29359c49bbd/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d51b7b229a09561311de67ef7bb5137204e227dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d51b7b229a09561311de67ef7bb5137204e227dd", "html_url": "https://github.com/rust-lang/rust/commit/d51b7b229a09561311de67ef7bb5137204e227dd"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "67f99ec4e40b923ca315e0d630f63ab22edd6ee5", "filename": "src/etc/gdb_providers.py", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e3283e0331f6301b1dd8fc24d886c29359c49bbd/src%2Fetc%2Fgdb_providers.py", "raw_url": "https://github.com/rust-lang/rust/raw/e3283e0331f6301b1dd8fc24d886c29359c49bbd/src%2Fetc%2Fgdb_providers.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_providers.py?ref=e3283e0331f6301b1dd8fc24d886c29359c49bbd", "patch": "@@ -352,8 +352,13 @@ def __init__(self, valobj, show_values=True):\n         ctrl = table[\"ctrl\"][\"pointer\"]\n \n         self.size = int(table[\"items\"])\n-        self.data_ptr = table[\"data\"][\"pointer\"]\n-        self.pair_type = self.data_ptr.dereference().type\n+        self.pair_type = table.type.template_argument(0)\n+\n+        self.new_layout = not table.type.has_key(\"data\")\n+        if self.new_layout:\n+            self.data_ptr = ctrl.cast(self.pair_type.pointer())\n+        else:\n+            self.data_ptr = table[\"data\"][\"pointer\"]\n \n         self.valid_indices = []\n         for idx in range(capacity):\n@@ -374,6 +379,8 @@ def children(self):\n \n         for index in range(self.size):\n             idx = self.valid_indices[index]\n+            if self.new_layout:\n+                idx = -(idx + 1)\n             element = (pairs_start + idx).dereference()\n             if self.show_values:\n                 yield \"key{}\".format(index), element[ZERO_FIELD]"}, {"sha": "19da75c35b456b4e12efdf826c5d61df852a35c2", "filename": "src/etc/lldb_providers.py", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e3283e0331f6301b1dd8fc24d886c29359c49bbd/src%2Fetc%2Flldb_providers.py", "raw_url": "https://github.com/rust-lang/rust/raw/e3283e0331f6301b1dd8fc24d886c29359c49bbd/src%2Fetc%2Flldb_providers.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_providers.py?ref=e3283e0331f6301b1dd8fc24d886c29359c49bbd", "patch": "@@ -514,6 +514,8 @@ def get_child_at_index(self, index):\n         # type: (int) -> SBValue\n         pairs_start = self.data_ptr.GetValueAsUnsigned()\n         idx = self.valid_indices[index]\n+        if self.new_layout:\n+            idx = -(idx + 1)\n         address = pairs_start + idx * self.pair_type_size\n         element = self.data_ptr.CreateValueFromAddress(\"[%s]\" % index, address, self.pair_type)\n         if self.show_values:\n@@ -529,10 +531,15 @@ def update(self):\n         ctrl = table.GetChildMemberWithName(\"ctrl\").GetChildAtIndex(0)\n \n         self.size = table.GetChildMemberWithName(\"items\").GetValueAsUnsigned()\n-        self.data_ptr = table.GetChildMemberWithName(\"data\").GetChildAtIndex(0)\n-        self.pair_type = self.data_ptr.Dereference().GetType()\n+        self.pair_type = table.type.template_args[0]\n         self.pair_type_size = self.pair_type.GetByteSize()\n \n+        self.new_layout = not table.GetChildMemberWithName(\"data\").IsValid()\n+        if self.new_layout:\n+            self.data_ptr = ctrl.Cast(self.pair_type.GetPointerType())\n+        else:\n+            self.data_ptr = table.GetChildMemberWithName(\"data\").GetChildAtIndex(0)\n+\n         u8_type = self.valobj.GetTarget().GetBasicType(eBasicTypeUnsignedChar)\n         u8_type_size = self.valobj.GetTarget().GetBasicType(eBasicTypeUnsignedChar).GetByteSize()\n "}]}