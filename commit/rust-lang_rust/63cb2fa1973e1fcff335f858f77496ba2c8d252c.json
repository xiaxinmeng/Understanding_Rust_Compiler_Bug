{"sha": "63cb2fa1973e1fcff335f858f77496ba2c8d252c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzY2IyZmExOTczZTFmY2ZmMzM1Zjg1OGY3NzQ5NmJhMmM4ZDI1MmM=", "commit": {"author": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-12T14:47:17Z"}, "committer": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-12T15:00:48Z"}, "message": "compress the function, remove the assert check.", "tree": {"sha": "bdb745ef0d8120517277c579e7db62e6a17cbc70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdb745ef0d8120517277c579e7db62e6a17cbc70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63cb2fa1973e1fcff335f858f77496ba2c8d252c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63cb2fa1973e1fcff335f858f77496ba2c8d252c", "html_url": "https://github.com/rust-lang/rust/commit/63cb2fa1973e1fcff335f858f77496ba2c8d252c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63cb2fa1973e1fcff335f858f77496ba2c8d252c/comments", "author": null, "committer": null, "parents": [{"sha": "e0395341f7e38e804646bce23809b407564e84db", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0395341f7e38e804646bce23809b407564e84db", "html_url": "https://github.com/rust-lang/rust/commit/e0395341f7e38e804646bce23809b407564e84db"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "5e569f9dae378048407b828d186655acd78c47ff", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/63cb2fa1973e1fcff335f858f77496ba2c8d252c/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63cb2fa1973e1fcff335f858f77496ba2c8d252c/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=63cb2fa1973e1fcff335f858f77496ba2c8d252c", "patch": "@@ -878,17 +878,8 @@ impl SourceMap {\n \n     // Returns the index of the `SourceFile` (in `self.files`) that contains `pos`.\n     pub fn lookup_source_file_idx(&self, pos: BytePos) -> usize {\n-        let files = self.files.borrow();\n-        let files = &files.source_files;\n-        let count = files.len();\n-\n-        // (p - 1) below will not underflow, this follows previous implementation's assumption.\n-        assert!(count >= 1);\n-        let ret = files.binary_search_by_key(&pos, |key| key.start_pos).unwrap_or_else(|p| p - 1);\n-\n-        assert!(ret < count, \"position {} does not resolve to a source location\", pos.to_usize());\n-\n-        return ret;\n+        self.files.borrow().source_files.binary_search_by_key(&pos, |key| key.start_pos)\n+            .unwrap_or_else(|p| p - 1)\n     }\n \n     pub fn count_lines(&self) -> usize {"}]}