{"sha": "afd9dfa89d9f7db67f6fe8c3dd0fda87c154fefe", "node_id": "C_kwDOAAsO6NoAKGFmZDlkZmE4OWQ5ZjdkYjY3ZjZmZThjM2RkMGZkYTg3YzE1NGZlZmU", "commit": {"author": {"name": "Alberto Planas", "email": "aplanas@suse.com", "date": "2021-11-11T15:05:32Z"}, "committer": {"name": "Alberto Planas", "email": "aplanas@suse.com", "date": "2021-11-14T16:04:32Z"}, "message": "bootstap: create .cargo/config only if not present\n\nIn some situations we should want on influence into the .cargo/config\nwhen we use vendored source.  One example is #90764, when we want to\nworkaround some references to crates forked and living in git, that are\nmissing in the vendor/ directory.\n\nThis commit will create the .cargo/config file only when the .cargo/\ndirectory needs to be created.", "tree": {"sha": "904102ba7228d1c4f3ad7695ed6e3959d904fc5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/904102ba7228d1c4f3ad7695ed6e3959d904fc5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afd9dfa89d9f7db67f6fe8c3dd0fda87c154fefe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afd9dfa89d9f7db67f6fe8c3dd0fda87c154fefe", "html_url": "https://github.com/rust-lang/rust/commit/afd9dfa89d9f7db67f6fe8c3dd0fda87c154fefe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afd9dfa89d9f7db67f6fe8c3dd0fda87c154fefe/comments", "author": {"login": "aplanas", "id": 645701, "node_id": "MDQ6VXNlcjY0NTcwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/645701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aplanas", "html_url": "https://github.com/aplanas", "followers_url": "https://api.github.com/users/aplanas/followers", "following_url": "https://api.github.com/users/aplanas/following{/other_user}", "gists_url": "https://api.github.com/users/aplanas/gists{/gist_id}", "starred_url": "https://api.github.com/users/aplanas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aplanas/subscriptions", "organizations_url": "https://api.github.com/users/aplanas/orgs", "repos_url": "https://api.github.com/users/aplanas/repos", "events_url": "https://api.github.com/users/aplanas/events{/privacy}", "received_events_url": "https://api.github.com/users/aplanas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aplanas", "id": 645701, "node_id": "MDQ6VXNlcjY0NTcwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/645701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aplanas", "html_url": "https://github.com/aplanas", "followers_url": "https://api.github.com/users/aplanas/followers", "following_url": "https://api.github.com/users/aplanas/following{/other_user}", "gists_url": "https://api.github.com/users/aplanas/gists{/gist_id}", "starred_url": "https://api.github.com/users/aplanas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aplanas/subscriptions", "organizations_url": "https://api.github.com/users/aplanas/orgs", "repos_url": "https://api.github.com/users/aplanas/repos", "events_url": "https://api.github.com/users/aplanas/events{/privacy}", "received_events_url": "https://api.github.com/users/aplanas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62efba8a050c64249dab942951bb28f710208bc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/62efba8a050c64249dab942951bb28f710208bc8", "html_url": "https://github.com/rust-lang/rust/commit/62efba8a050c64249dab942951bb28f710208bc8"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "22f2e405a1e88d29356539b74453b4e71b16c793", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/afd9dfa89d9f7db67f6fe8c3dd0fda87c154fefe/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/afd9dfa89d9f7db67f6fe8c3dd0fda87c154fefe/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=afd9dfa89d9f7db67f6fe8c3dd0fda87c154fefe", "patch": "@@ -1119,17 +1119,22 @@ def check_vendored_status(self):\n                     raise Exception(\"{} not found\".format(vendor_dir))\n \n         if self.use_vendored_sources:\n+            config = (\"[source.crates-io]\\n\"\n+                      \"replace-with = 'vendored-sources'\\n\"\n+                      \"registry = 'https://example.com'\\n\"\n+                      \"\\n\"\n+                      \"[source.vendored-sources]\\n\"\n+                      \"directory = '{}/vendor'\\n\"\n+                      .format(self.rust_root))\n             if not os.path.exists('.cargo'):\n                 os.makedirs('.cargo')\n-            with output('.cargo/config') as cargo_config:\n-                cargo_config.write(\n-                    \"[source.crates-io]\\n\"\n-                    \"replace-with = 'vendored-sources'\\n\"\n-                    \"registry = 'https://example.com'\\n\"\n-                    \"\\n\"\n-                    \"[source.vendored-sources]\\n\"\n-                    \"directory = '{}/vendor'\\n\"\n-                    .format(self.rust_root))\n+                with output('.cargo/config') as cargo_config:\n+                    cargo_config.write(config)\n+            else:\n+                print('info: using vendored source, but .cargo/config is already present.')\n+                print('      Reusing the current configuration file. But you may want to '\n+                      'configure vendoring like this:')\n+                print(config)\n         else:\n             if os.path.exists('.cargo'):\n                 shutil.rmtree('.cargo')"}]}