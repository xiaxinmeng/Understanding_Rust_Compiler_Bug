{"sha": "6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNGQwMjM2OWFiMzA4NzJiZjRmYTg2ZWQyZDJlNmY4OTdkMGNiZDg=", "commit": {"author": {"name": "Martin Finkel", "email": "martin@videolabs.io", "date": "2019-07-31T08:00:34Z"}, "committer": {"name": "Martin Finkel", "email": "martin@videolabs.io", "date": "2019-07-31T09:39:38Z"}, "message": "Add UWP MSVC targets", "tree": {"sha": "ecdae4f95faa459d893873760d712126dddcd3ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecdae4f95faa459d893873760d712126dddcd3ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "html_url": "https://github.com/rust-lang/rust/commit/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/comments", "author": {"login": "mfkl", "id": 3928834, "node_id": "MDQ6VXNlcjM5Mjg4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3928834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfkl", "html_url": "https://github.com/mfkl", "followers_url": "https://api.github.com/users/mfkl/followers", "following_url": "https://api.github.com/users/mfkl/following{/other_user}", "gists_url": "https://api.github.com/users/mfkl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfkl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfkl/subscriptions", "organizations_url": "https://api.github.com/users/mfkl/orgs", "repos_url": "https://api.github.com/users/mfkl/repos", "events_url": "https://api.github.com/users/mfkl/events{/privacy}", "received_events_url": "https://api.github.com/users/mfkl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mfkl", "id": 3928834, "node_id": "MDQ6VXNlcjM5Mjg4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3928834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfkl", "html_url": "https://github.com/mfkl", "followers_url": "https://api.github.com/users/mfkl/followers", "following_url": "https://api.github.com/users/mfkl/following{/other_user}", "gists_url": "https://api.github.com/users/mfkl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfkl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfkl/subscriptions", "organizations_url": "https://api.github.com/users/mfkl/orgs", "repos_url": "https://api.github.com/users/mfkl/repos", "events_url": "https://api.github.com/users/mfkl/events{/privacy}", "received_events_url": "https://api.github.com/users/mfkl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54e268cf5532362ced32329a9327eaee22353829", "url": "https://api.github.com/repos/rust-lang/rust/commits/54e268cf5532362ced32329a9327eaee22353829", "html_url": "https://github.com/rust-lang/rust/commit/54e268cf5532362ced32329a9327eaee22353829"}], "stats": {"total": 120, "additions": 120, "deletions": 0}, "files": [{"sha": "cb1e710ed1872318fccfb50e48e3adbf1c83cb0b", "filename": "src/librustc_target/spec/aarch64_uwp_windows_msvc.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Faarch64_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Faarch64_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_uwp_windows_msvc.rs?ref=6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "patch": "@@ -0,0 +1,29 @@\n+use crate::spec::{LinkerFlavor, Target, TargetResult, PanicStrategy};\n+use std::env;\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::windows_uwp_msvc_base::opts();\n+    base.max_atomic_width = Some(64);\n+    base.has_elf_tls = true;\n+\n+    // FIXME: this shouldn't be panic=abort, it should be panic=unwind\n+    base.panic_strategy = PanicStrategy::Abort;\n+\n+    let lib_root_path = env::var(\"VCToolsInstallDir\").expect(\"VCToolsInstallDir not found in env\");\n+    base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap()\n+            .push(format!(\"{}{}{}\", \"/LIBPATH:\".to_string(), lib_root_path, \"lib\\\\arm64\\\\store\".to_string()));\n+\n+    Ok(Target {\n+        llvm_target: \"aarch64-pc-windows-msvc\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128\".to_string(),\n+        arch: \"aarch64\".to_string(),\n+        target_os: \"windows\".to_string(),\n+        target_env: \"msvc\".to_string(),\n+        target_vendor: \"uwp\".to_string(),\n+        linker_flavor: LinkerFlavor::Msvc,\n+        options: base,\n+    })\n+}"}, {"sha": "d09c9d5d2dbbf346d051d44af6c7c3396ccd882c", "filename": "src/librustc_target/spec/i686_uwp_windows_msvc.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Fi686_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Fi686_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_uwp_windows_msvc.rs?ref=6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "patch": "@@ -0,0 +1,27 @@\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use std::env;\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::windows_uwp_msvc_base::opts();\n+    base.cpu = \"pentium4\".to_string();\n+    base.max_atomic_width = Some(64);\n+    base.has_elf_tls = true;\n+\n+    let lib_root_path = env::var(\"VCToolsInstallDir\").expect(\"VCToolsInstallDir not found in env\");\n+    base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap()\n+            .push(format!(\"{}{}{}\", \"/LIBPATH:\".to_string(), lib_root_path, \"lib\\\\x86\\\\store\".to_string()));\n+\n+    Ok(Target {\n+        llvm_target: \"i686-pc-windows-msvc\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:x-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32\".to_string(),\n+        arch: \"x86\".to_string(),\n+        target_os: \"windows\".to_string(),\n+        target_env: \"msvc\".to_string(),\n+        target_vendor: \"uwp\".to_string(),\n+        linker_flavor: LinkerFlavor::Msvc,\n+        options: base,\n+    })\n+}\n\\ No newline at end of file"}, {"sha": "dbb29c595038a61d5f26bf8e33979ccd30a7cf3a", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "patch": "@@ -61,6 +61,7 @@ mod uefi_base;\n mod windows_base;\n mod windows_msvc_base;\n mod windows_uwp_base;\n+mod windows_uwp_msvc_base;\n mod thumb_base;\n mod l4re_base;\n mod fuchsia_base;\n@@ -439,8 +440,11 @@ supported_targets! {\n     (\"x86_64-uwp-windows-gnu\", x86_64_uwp_windows_gnu),\n \n     (\"aarch64-pc-windows-msvc\", aarch64_pc_windows_msvc),\n+    (\"aarch64-uwp-windows-msvc\", aarch64_uwp_windows_msvc),\n     (\"x86_64-pc-windows-msvc\", x86_64_pc_windows_msvc),\n+    (\"x86_64-uwp-windows-msvc\", x86_64_uwp_windows_msvc),\n     (\"i686-pc-windows-msvc\", i686_pc_windows_msvc),\n+    (\"i686-uwp-windows-msvc\", i686_uwp_windows_msvc),\n     (\"i586-pc-windows-msvc\", i586_pc_windows_msvc),\n     (\"thumbv7a-pc-windows-msvc\", thumbv7a_pc_windows_msvc),\n "}, {"sha": "e643513a1a7fe23694366da13e82c47eafc27837", "filename": "src/librustc_target/spec/windows_uwp_msvc_base.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Fwindows_uwp_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Fwindows_uwp_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_uwp_msvc_base.rs?ref=6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "patch": "@@ -0,0 +1,33 @@\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions};\n+use std::default::Default;\n+\n+pub fn opts() -> TargetOptions {\n+    let mut args = LinkArgs::new();\n+    args.insert(LinkerFlavor::Msvc,\n+                vec![\"/NOLOGO\".to_string(),\n+                     \"/NXCOMPAT\".to_string(),\n+                     \"/APPCONTAINER\".to_string(),\n+                     \"mincore.lib\".to_string()]);\n+\n+    TargetOptions {\n+        function_sections: true,\n+        dynamic_linking: true,\n+        executables: true,\n+        dll_prefix: String::new(),\n+        dll_suffix: \".dll\".to_string(),\n+        exe_suffix: \".exe\".to_string(),\n+        staticlib_prefix: String::new(),\n+        staticlib_suffix: \".lib\".to_string(),\n+        target_family: Some(\"windows\".to_string()),\n+        is_like_windows: true,\n+        is_like_msvc: true,\n+        pre_link_args: args,\n+        crt_static_allows_dylibs: true,\n+        crt_static_respected: true,\n+        abi_return_struct_as_int: true,\n+        emit_debug_gdb_scripts: false,\n+        requires_uwtable: true,\n+\n+        .. Default::default()\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "7d89c73a0e2341cd8f941dd1d241376e44414aff", "filename": "src/librustc_target/spec/x86_64_uwp_windows_msvc.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Fx86_64_uwp_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8/src%2Flibrustc_target%2Fspec%2Fx86_64_uwp_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_uwp_windows_msvc.rs?ref=6e4d02369ab30872bf4fa86ed2d2e6f897d0cbd8", "patch": "@@ -0,0 +1,27 @@\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use std::env;\n+\n+pub fn target() -> TargetResult {\n+    let mut base = super::windows_uwp_msvc_base::opts();\n+    base.cpu = \"x86-64\".to_string();\n+    base.max_atomic_width = Some(64);\n+    base.has_elf_tls = true;\n+\n+    let lib_root_path = env::var(\"VCToolsInstallDir\").expect(\"VCToolsInstallDir not found in env\");\n+    base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap()\n+            .push(format!(\"{}{}{}\", \"/LIBPATH:\".to_string(), lib_root_path, \"lib\\\\x64\\\\store\".to_string()));\n+\n+    Ok(Target {\n+        llvm_target: \"x86_64-pc-windows-msvc\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:w-i64:64-f80:128-n8:16:32:64-S128\".to_string(),\n+        arch: \"x86_64\".to_string(),\n+        target_os: \"windows\".to_string(),\n+        target_env: \"msvc\".to_string(),\n+        target_vendor: \"uwp\".to_string(),\n+        linker_flavor: LinkerFlavor::Msvc,\n+        options: base,\n+    })\n+}\n\\ No newline at end of file"}]}