{"sha": "2a58875fa2eafadf1dfaa0d3f474e3bd937ee671", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNTg4NzVmYTJlYWZhZGYxZGZhYTBkM2Y0NzRlM2JkOTM3ZWU2NzE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-04-26T17:31:24Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-04-26T17:31:24Z"}, "message": "improved debug output", "tree": {"sha": "97218738400936b6c71e406519a37c47ecc217b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97218738400936b6c71e406519a37c47ecc217b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671", "html_url": "https://github.com/rust-lang/rust/commit/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88cd36714c6d62393f18d8efa2ea2724e1ec4a9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/88cd36714c6d62393f18d8efa2ea2724e1ec4a9d", "html_url": "https://github.com/rust-lang/rust/commit/88cd36714c6d62393f18d8efa2ea2724e1ec4a9d"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "5ec2e32b6a4c1f20686ee14a503fd3044e7e486e", "filename": "src/librustc/traits/fulfill.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ffulfill.rs?ref=2a58875fa2eafadf1dfaa0d3f474e3bd937ee671", "patch": "@@ -112,7 +112,7 @@ impl<'a, 'gcx, 'tcx> FulfillmentContext<'tcx> {\n                 selcx,\n                 register_region_obligations: self.register_region_obligations\n             });\n-            debug!(\"select: outcome={:?}\", outcome);\n+            debug!(\"select: outcome={:#?}\", outcome);\n \n             // FIXME: if we kept the original cache key, we could mark projection\n             // obligations as complete for the projection cache here."}, {"sha": "0c35e20324c9ce0a304cd18cdc7f2e1ae60b95f6", "filename": "src/librustc/traits/project.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671/src%2Flibrustc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671/src%2Flibrustc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fproject.rs?ref=2a58875fa2eafadf1dfaa0d3f474e3bd937ee671", "patch": "@@ -196,7 +196,10 @@ pub fn poly_project_and_unify_type<'cx, 'gcx, 'tcx>(\n                 let span = obligation.cause.span;\n                 match infcx.leak_check(false, span, &skol_map, snapshot) {\n                     Ok(()) => Ok(infcx.plug_leaks(skol_map, snapshot, result)),\n-                    Err(e) => Err(MismatchedProjectionTypes { err: e }),\n+                    Err(e) => {\n+                        debug!(\"poly_project_and_unify_type: leak check encountered error {:?}\", e);\n+                        Err(MismatchedProjectionTypes { err: e })\n+                    }\n                 }\n             }\n             Err(e) => {\n@@ -243,7 +246,10 @@ fn project_and_unify_type<'cx, 'gcx, 'tcx>(\n             obligations.extend(inferred_obligations);\n             Ok(Some(obligations))\n         },\n-        Err(err) => Err(MismatchedProjectionTypes { err: err }),\n+        Err(err) => {\n+            debug!(\"project_and_unify_type: equating types encountered error {:?}\", err);\n+            Err(MismatchedProjectionTypes { err: err })\n+        }\n     }\n }\n "}, {"sha": "299433d479dc60d86d69ca5f4cb898482509bb4c", "filename": "src/librustc_traits/normalize_erasing_regions.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671/src%2Flibrustc_traits%2Fnormalize_erasing_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a58875fa2eafadf1dfaa0d3f474e3bd937ee671/src%2Flibrustc_traits%2Fnormalize_erasing_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fnormalize_erasing_regions.rs?ref=2a58875fa2eafadf1dfaa0d3f474e3bd937ee671", "patch": "@@ -17,6 +17,8 @@ crate fn normalize_ty_after_erasing_regions<'tcx>(\n     tcx: TyCtxt<'_, 'tcx, 'tcx>,\n     goal: ParamEnvAnd<'tcx, Ty<'tcx>>,\n ) -> Ty<'tcx> {\n+    debug!(\"normalize_ty_after_erasing_regions(goal={:#?})\", goal);\n+\n     let ParamEnvAnd { param_env, value } = goal;\n     tcx.sess.perf_stats.normalize_ty_after_erasing_regions.fetch_add(1, Ordering::Relaxed);\n     tcx.infer_ctxt().enter(|infcx| {"}]}