{"sha": "47f35c9d34b55d143e5368bd917c013afabeb5a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ZjM1YzlkMzRiNTVkMTQzZTUzNjhiZDkxN2MwMTNhZmFiZWI1YTg=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-09T07:44:53Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-03-15T08:32:53Z"}, "message": "Properly replace iface tps with impl tps in static method calls\n\nUn-xfail iface-generic.rs", "tree": {"sha": "e68777b9680bcbbd75f1b9b5bb455d4bad0ce811", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e68777b9680bcbbd75f1b9b5bb455d4bad0ce811"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47f35c9d34b55d143e5368bd917c013afabeb5a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47f35c9d34b55d143e5368bd917c013afabeb5a8", "html_url": "https://github.com/rust-lang/rust/commit/47f35c9d34b55d143e5368bd917c013afabeb5a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47f35c9d34b55d143e5368bd917c013afabeb5a8/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe90c189f488d336fc34979d6b928555d984a4d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe90c189f488d336fc34979d6b928555d984a4d7", "html_url": "https://github.com/rust-lang/rust/commit/fe90c189f488d336fc34979d6b928555d984a4d7"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "ef4e17bb36809200d6cbdbef51895a571a3458b0", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/47f35c9d34b55d143e5368bd917c013afabeb5a8/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47f35c9d34b55d143e5368bd917c013afabeb5a8/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=47f35c9d34b55d143e5368bd917c013afabeb5a8", "patch": "@@ -2145,12 +2145,11 @@ fn lval_static_fn(bcx: block, fn_id: ast::def_id, id: ast::node_id,\n     // The awkwardness below mostly stems from the fact that we're mixing\n     // monomorphized and non-monomorphized functions at the moment. If\n     // monomorphizing becomes the only approach, this'll be much simpler.\n-    if (option::is_some(substs) || tys.len() > 0u) &&\n-       fn_id.crate == ast::local_crate {\n+    if fn_id.crate == ast::local_crate {\n         let mono = alt substs {\n           some((stys, vtables)) {\n-            if (stys.len() + tys.len()) > 0u {\n-                monomorphic_fn(ccx, fn_id, stys + tys, some(vtables))\n+            if stys.len() > 0u {\n+                monomorphic_fn(ccx, fn_id, stys, some(vtables))\n             } else { none }\n           }\n           none {\n@@ -2160,7 +2159,10 @@ fn lval_static_fn(bcx: block, fn_id: ast::def_id, id: ast::node_id,\n                     bcx.fcx, vtables);\n                 monomorphic_fn(ccx, fn_id, tys, some(rvtables))\n               }\n-              none { monomorphic_fn(ccx, fn_id, tys, none) }\n+              none {\n+                if tys.len() == 0u { none }\n+                else { monomorphic_fn(ccx, fn_id, tys, none) }\n+              }\n             }\n           }\n         };"}, {"sha": "11242c02ca5f68afaf9ba179815416b4a5a937aa", "filename": "src/rustc/middle/trans/impl.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/47f35c9d34b55d143e5368bd917c013afabeb5a8/src%2Frustc%2Fmiddle%2Ftrans%2Fimpl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47f35c9d34b55d143e5368bd917c013afabeb5a8/src%2Frustc%2Fmiddle%2Ftrans%2Fimpl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fimpl.rs?ref=47f35c9d34b55d143e5368bd917c013afabeb5a8", "patch": "@@ -106,17 +106,31 @@ fn method_with_name(ccx: @crate_ctxt, impl_id: ast::def_id,\n     }\n }\n \n+fn method_ty_param_count(ccx: crate_ctxt, m_id: ast::def_id) -> uint {\n+    if m_id.crate == ast::local_crate {\n+        alt check ccx.tcx.items.get(m_id.node) {\n+          ast_map::node_method(m, _, _) { vec::len(m.tps) }\n+        }\n+    } else {\n+        csearch::get_type_param_count(ccx.sess.cstore, m_id)\n+    }\n+}\n+\n fn trans_monomorphized_callee(bcx: block, callee_id: ast::node_id,\n                               base: @ast::expr, iface_id: ast::def_id,\n                               n_method: uint, n_param: uint, n_bound: uint,\n                               substs: param_substs) -> lval_maybe_callee {\n     alt find_vtable_in_fn_ctxt(substs, n_param, n_bound) {\n-      typeck::vtable_static(impl_did, tys, sub_origins) {\n-        let tcx = bcx.tcx();\n-        let mname = ty::iface_methods(tcx, iface_id)[n_method].ident;\n+      typeck::vtable_static(impl_did, impl_substs, sub_origins) {\n+        let ccx = bcx.ccx();\n+        let mname = ty::iface_methods(ccx.tcx, iface_id)[n_method].ident;\n         let mth_id = method_with_name(bcx.ccx(), impl_did, mname);\n+        let n_m_tps = method_ty_param_count(ccx, mth_id);\n+        let node_substs = node_id_type_params(bcx, callee_id);\n+        let ty_substs = impl_substs +\n+            vec::tail_n(node_substs, node_substs.len() - n_m_tps);\n         ret trans_static_callee(bcx, callee_id, base, mth_id,\n-                                some((tys, sub_origins)));\n+                                some((ty_substs, sub_origins)));\n       }\n       typeck::vtable_iface(iid, tps) {\n         ret trans_iface_callee(bcx, base, callee_id, n_method);\n@@ -155,11 +169,11 @@ fn find_vtable_in_fn_ctxt(ps: param_substs, n_param: uint, n_bound: uint)\n     // Vtables are stored in a flat array, finding the right one is\n     // somewhat awkward\n     for bounds in *ps.bounds {\n-        i += 1u;\n         if i >= n_param { break; }\n         for bound in *bounds {\n             alt bound { ty::bound_iface(_) { vtable_off += 1u; } _ {} }\n         }\n+        i += 1u;\n     }\n     option::get(ps.vtables)[vtable_off]\n }"}]}