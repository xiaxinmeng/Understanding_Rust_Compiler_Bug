{"sha": "9e166e09b8e4883ba6b47e190e2e7b8b72126c6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMTY2ZTA5YjhlNDg4M2JhNmI0N2UxOTBlMmU3YjhiNzIxMjZjNmY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-10-01T17:14:15Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-10-01T17:17:29Z"}, "message": "Use new spans for expansion checking in loop lints", "tree": {"sha": "0f1105197eb88f376fbc0d3d4b7509124ba91492", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1105197eb88f376fbc0d3d4b7509124ba91492"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e166e09b8e4883ba6b47e190e2e7b8b72126c6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e166e09b8e4883ba6b47e190e2e7b8b72126c6f", "html_url": "https://github.com/rust-lang/rust/commit/9e166e09b8e4883ba6b47e190e2e7b8b72126c6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e166e09b8e4883ba6b47e190e2e7b8b72126c6f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "406e89a00c3cca86abe619b703f192bf699f92f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/406e89a00c3cca86abe619b703f192bf699f92f6", "html_url": "https://github.com/rust-lang/rust/commit/406e89a00c3cca86abe619b703f192bf699f92f6"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "52477f68cd30291dbbeb584f7eb22d0a99c8fd78", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9e166e09b8e4883ba6b47e190e2e7b8b72126c6f/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e166e09b8e4883ba6b47e190e2e7b8b72126c6f/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=9e166e09b8e4883ba6b47e190e2e7b8b72126c6f", "patch": "@@ -476,15 +476,21 @@ declare_lint_pass!(Loops => [\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Loops {\n     #[allow(clippy::too_many_lines)]\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n+        if let Some((pat, arg, body)) = higher::for_loop(expr) {\n+            // we don't want to check expanded macros\n+            // this check is not at the top of the function\n+            // since higher::for_loop expressions are marked as expansions\n+            if body.span.from_expansion() {\n+                return;\n+            }\n+            check_for_loop(cx, pat, arg, body, expr);\n+        }\n+\n         // we don't want to check expanded macros\n         if expr.span.from_expansion() {\n             return;\n         }\n \n-        if let Some((pat, arg, body)) = higher::for_loop(expr) {\n-            check_for_loop(cx, pat, arg, body, expr);\n-        }\n-\n         // check for never_loop\n         if let ExprKind::Loop(ref block, _, _) = expr.kind {\n             match never_loop_block(block, expr.hir_id) {\n@@ -1039,10 +1045,6 @@ fn check_for_loop_range<'a, 'tcx>(\n     body: &'tcx Expr,\n     expr: &'tcx Expr,\n ) {\n-    if expr.span.from_expansion() {\n-        return;\n-    }\n-\n     if let Some(higher::Range {\n         start: Some(start),\n         ref end,"}]}