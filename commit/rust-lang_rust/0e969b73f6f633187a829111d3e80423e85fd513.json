{"sha": "0e969b73f6f633187a829111d3e80423e85fd513", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlOTY5YjczZjZmNjMzMTg3YTgyOTExMWQzZTgwNDIzZTg1ZmQ1MTM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-14T11:15:37Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T21:50:17Z"}, "message": "Interning even happens when validation of a constant fails", "tree": {"sha": "0dea1f997f1c0b16f3f27a057346586512b7f97b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dea1f997f1c0b16f3f27a057346586512b7f97b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e969b73f6f633187a829111d3e80423e85fd513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e969b73f6f633187a829111d3e80423e85fd513", "html_url": "https://github.com/rust-lang/rust/commit/0e969b73f6f633187a829111d3e80423e85fd513", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e969b73f6f633187a829111d3e80423e85fd513/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0bd1a695d20da88668a4549f71e86d0f976de15", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0bd1a695d20da88668a4549f71e86d0f976de15", "html_url": "https://github.com/rust-lang/rust/commit/a0bd1a695d20da88668a4549f71e86d0f976de15"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "2d66fb463115cd084535b4dc01c6a23db4af0d1c", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0e969b73f6f633187a829111d3e80423e85fd513/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e969b73f6f633187a829111d3e80423e85fd513/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=0e969b73f6f633187a829111d3e80423e85fd513", "patch": "@@ -191,12 +191,18 @@ impl<'rt, 'mir, 'tcx, M: CompileTimeMachine<'mir, 'tcx>> ValueVisitor<'mir, 'tcx\n             if let ty::Dynamic(..) =\n                 self.ecx.tcx.struct_tail_erasing_lifetimes(referenced_ty, self.ecx.param_env).kind\n             {\n-                // Validation has already errored on an invalid vtable pointer so this `assert_ptr`\n-                // will never panic.\n-                let vtable = mplace.meta.unwrap().assert_ptr();\n-                // explitly choose `Immutable` here, since vtables are immutable, even\n-                // if the reference of the fat pointer is mutable\n-                self.intern_shallow(vtable.alloc_id, Mutability::Not, None)?;\n+                // Validation has already errored on an invalid vtable pointer so we can safely not\n+                // do anything if this is not a real pointer\n+                if let Scalar::Ptr(vtable) = mplace.meta.unwrap() {\n+                    // explitly choose `Immutable` here, since vtables are immutable, even\n+                    // if the reference of the fat pointer is mutable\n+                    self.intern_shallow(vtable.alloc_id, Mutability::Not, None)?;\n+                } else {\n+                    self.ecx().tcx.sess.delay_span_bug(\n+                        syntax_pos::DUMMY_SP,\n+                        \"vtables pointers cannot be integer pointers\",\n+                    );\n+                }\n             }\n             // Check if we have encountered this pointer+layout combination before.\n             // Only recurse for allocation-backed pointers."}]}