{"sha": "7bc7c675f2fe1fc9176cd45baa3361037b487dec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiYzdjNjc1ZjJmZTFmYzkxNzZjZDQ1YmFhMzM2MTAzN2I0ODdkZWM=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T18:46:42Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T18:46:42Z"}, "message": "Cleanup, use `matches!` some more", "tree": {"sha": "0ab1f4588e55e4c2e1d074fab2b610df507b924c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab1f4588e55e4c2e1d074fab2b610df507b924c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bc7c675f2fe1fc9176cd45baa3361037b487dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc7c675f2fe1fc9176cd45baa3361037b487dec", "html_url": "https://github.com/rust-lang/rust/commit/7bc7c675f2fe1fc9176cd45baa3361037b487dec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bc7c675f2fe1fc9176cd45baa3361037b487dec/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7211df5a177eaf58a8c328bf6e0448fe772cbd3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7211df5a177eaf58a8c328bf6e0448fe772cbd3e", "html_url": "https://github.com/rust-lang/rust/commit/7211df5a177eaf58a8c328bf6e0448fe772cbd3e"}], "stats": {"total": 35, "additions": 8, "deletions": 27}, "files": [{"sha": "b8f1bb71ad95c57e61e275359ae13216d99f3390", "filename": "clippy_lints/src/block_in_if_condition.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7bc7c675f2fe1fc9176cd45baa3361037b487dec/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bc7c675f2fe1fc9176cd45baa3361037b487dec/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs?ref=7bc7c675f2fe1fc9176cd45baa3361037b487dec", "patch": "@@ -47,10 +47,7 @@ impl<'v> Visitor<'v> for ExVisitor<'v> {\n             let complex = {\n                 if block.stmts.is_empty() {\n                     if let Some(ref ex) = block.expr {\n-                        match ex.node {\n-                            ExprBlock(_) => true,\n-                            _ => false,\n-                        }\n+                        matches!(ex.node, ExprBlock(_))\n                     } else {\n                         false\n                     }"}, {"sha": "c37fbba9250d4dd8e76713dfc56d5c669e00a389", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7bc7c675f2fe1fc9176cd45baa3361037b487dec/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bc7c675f2fe1fc9176cd45baa3361037b487dec/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=7bc7c675f2fe1fc9176cd45baa3361037b487dec", "patch": "@@ -1023,11 +1023,7 @@ impl OutType {\n             (&OutType::Bool, &hir::Return(ref ty)) if is_bool(ty) => true,\n             (&OutType::Any, &hir::Return(ref ty)) if ty.node != hir::TyTup(vec![].into()) => true,\n             (&OutType::Ref, &hir::Return(ref ty)) => {\n-                if let hir::TyRptr(_, _) = ty.node {\n-                    true\n-                } else {\n-                    false\n-                }\n+                matches!(ty.node, hir::TyRptr(_, _))\n             }\n             _ => false,\n         }\n@@ -1036,11 +1032,10 @@ impl OutType {\n \n fn is_bool(ty: &hir::Ty) -> bool {\n     if let hir::TyPath(None, ref p) = ty.node {\n-        if match_path(p, &[\"bool\"]) {\n-            return true;\n-        }\n+        match_path(p, &[\"bool\"])\n+    } else {\n+        false\n     }\n-    false\n }\n \n fn is_copy<'a, 'ctx>(cx: &LateContext<'a, 'ctx>, ty: ty::Ty<'ctx>, item: &hir::Item) -> bool {"}, {"sha": "53f4c972644832a11ee857ceed84ffbd0da1146f", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7bc7c675f2fe1fc9176cd45baa3361037b487dec/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bc7c675f2fe1fc9176cd45baa3361037b487dec/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=7bc7c675f2fe1fc9176cd45baa3361037b487dec", "patch": "@@ -189,11 +189,7 @@ fn is_allowed(cx: &LateContext, expr: &Expr) -> bool {\n }\n \n fn is_float(cx: &LateContext, expr: &Expr) -> bool {\n-    if let ty::TyFloat(_) = walk_ptrs_ty(cx.tcx.expr_ty(expr)).sty {\n-        true\n-    } else {\n-        false\n-    }\n+    matches!(walk_ptrs_ty(cx.tcx.expr_ty(expr)).sty, ty::TyFloat(_))\n }\n \n /// **What it does:** This lint checks for conversions to owned values just for the sake of a comparison.\n@@ -283,11 +279,7 @@ fn check_to_owned(cx: &LateContext, expr: &Expr, other: &Expr, left: bool, op: S\n \n fn is_str_arg(cx: &LateContext, args: &[P<Expr>]) -> bool {\n     args.len() == 1 &&\n-    if let ty::TyStr = walk_ptrs_ty(cx.tcx.expr_ty(&args[0])).sty {\n-        true\n-    } else {\n-        false\n-    }\n+        matches!(walk_ptrs_ty(cx.tcx.expr_ty(&args[0])).sty, ty::TyStr)\n }\n \n /// **What it does:** This lint checks for getting the remainder of a division by one.\n@@ -449,10 +441,7 @@ fn is_used(cx: &LateContext, expr: &Expr) -> bool {\n fn in_attributes_expansion(cx: &LateContext, expr: &Expr) -> bool {\n     cx.sess().codemap().with_expn_info(expr.span.expn_id, |info_opt| {\n         info_opt.map_or(false, |info| {\n-            match info.callee.format {\n-                ExpnFormat::MacroAttribute(_) => true,\n-                _ => false,\n-            }\n+            matches!(info.callee.format, ExpnFormat::MacroAttribute(_))\n         })\n     })\n }"}]}