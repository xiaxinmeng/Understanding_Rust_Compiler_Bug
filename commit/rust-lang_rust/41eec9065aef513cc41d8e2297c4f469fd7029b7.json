{"sha": "41eec9065aef513cc41d8e2297c4f469fd7029b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZWVjOTA2NWFlZjUxM2NjNDFkOGUyMjk3YzRmNDY5ZmQ3MDI5Yjc=", "commit": {"author": {"name": "Avi Dessauer", "email": "avi.the.coder@gmail.com", "date": "2020-07-08T19:31:48Z"}, "committer": {"name": "Jacob Hughes", "email": "j@jacobhughes.me", "date": "2020-09-23T01:55:29Z"}, "message": "Update src/librustc_passes/stability.rs\n\nCo-authored-by: varkor <github@varkor.com>", "tree": {"sha": "1f0aab149d5bad1878be6a3cfb98d11aa365a11e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f0aab149d5bad1878be6a3cfb98d11aa365a11e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41eec9065aef513cc41d8e2297c4f469fd7029b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41eec9065aef513cc41d8e2297c4f469fd7029b7", "html_url": "https://github.com/rust-lang/rust/commit/41eec9065aef513cc41d8e2297c4f469fd7029b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41eec9065aef513cc41d8e2297c4f469fd7029b7/comments", "author": {"login": "Avi-D-coder", "id": 29133776, "node_id": "MDQ6VXNlcjI5MTMzNzc2", "avatar_url": "https://avatars.githubusercontent.com/u/29133776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avi-D-coder", "html_url": "https://github.com/Avi-D-coder", "followers_url": "https://api.github.com/users/Avi-D-coder/followers", "following_url": "https://api.github.com/users/Avi-D-coder/following{/other_user}", "gists_url": "https://api.github.com/users/Avi-D-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avi-D-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avi-D-coder/subscriptions", "organizations_url": "https://api.github.com/users/Avi-D-coder/orgs", "repos_url": "https://api.github.com/users/Avi-D-coder/repos", "events_url": "https://api.github.com/users/Avi-D-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/Avi-D-coder/received_events", "type": "User", "site_admin": false}, "committer": {"login": "exrook", "id": 534850, "node_id": "MDQ6VXNlcjUzNDg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/534850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exrook", "html_url": "https://github.com/exrook", "followers_url": "https://api.github.com/users/exrook/followers", "following_url": "https://api.github.com/users/exrook/following{/other_user}", "gists_url": "https://api.github.com/users/exrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/exrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exrook/subscriptions", "organizations_url": "https://api.github.com/users/exrook/orgs", "repos_url": "https://api.github.com/users/exrook/repos", "events_url": "https://api.github.com/users/exrook/events{/privacy}", "received_events_url": "https://api.github.com/users/exrook/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19e90843a4eb99d528dea62f793ad6d523c4af6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/19e90843a4eb99d528dea62f793ad6d523c4af6c", "html_url": "https://github.com/rust-lang/rust/commit/19e90843a4eb99d528dea62f793ad6d523c4af6c"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "dd453f28554203fbcb9d92a139f4a305fa8f6812", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41eec9065aef513cc41d8e2297c4f469fd7029b7/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41eec9065aef513cc41d8e2297c4f469fd7029b7/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=41eec9065aef513cc41d8e2297c4f469fd7029b7", "patch": "@@ -37,8 +37,12 @@ enum AnnotationKind {\n     Container,\n }\n \n-/// Inheriting deprecations Nested items causes duplicate warnings.\n-/// Inheriting the deprecation of `Foo<T>` onto the parameter `T`, would cause a duplicate warnings.\n+/// Whether to inherit deprecation flags for nested items. In most cases, we do want to inherit\n+/// deprecation, because nested items rarely have individual deprecation attributes, and so\n+/// should be treated as deprecated if their parent is. However, default generic parameters\n+/// have separate deprecation attributes from their parents, so we do not wish to inherit\n+/// deprecation in this case. For example, inheriting deprecation for `T` in `Foo<T>`\n+/// would cause a duplicate warning arising from both `Foo` and `T` being deprecated.\n #[derive(PartialEq, Copy, Clone)]\n enum InheritDeprecation {\n     Yes,"}]}