{"sha": "05ddad37d19bd32b8ef75464640c8b0e6a6e1516", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZGRhZDM3ZDE5YmQzMmI4ZWY3NTQ2NDY0MGM4YjBlNmE2ZTE1MTY=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-08-13T21:12:36Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-08-13T21:12:36Z"}, "message": "use ? to simplify `TransitiveRelation.maybe_map`", "tree": {"sha": "73cf5bdff7d2a1d8c3242f81a85fb646d03ca0c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73cf5bdff7d2a1d8c3242f81a85fb646d03ca0c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05ddad37d19bd32b8ef75464640c8b0e6a6e1516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05ddad37d19bd32b8ef75464640c8b0e6a6e1516", "html_url": "https://github.com/rust-lang/rust/commit/05ddad37d19bd32b8ef75464640c8b0e6a6e1516", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05ddad37d19bd32b8ef75464640c8b0e6a6e1516/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5a448b3f47b22c9cb010198bdcc49d4392b090b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5a448b3f47b22c9cb010198bdcc49d4392b090b", "html_url": "https://github.com/rust-lang/rust/commit/d5a448b3f47b22c9cb010198bdcc49d4392b090b"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "2acc29acb0caafd0325520d054fd1c18969d3127", "filename": "src/librustc_data_structures/transitive_relation.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/05ddad37d19bd32b8ef75464640c8b0e6a6e1516/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05ddad37d19bd32b8ef75464640c8b0e6a6e1516/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Ftransitive_relation.rs?ref=05ddad37d19bd32b8ef75464640c8b0e6a6e1516", "patch": "@@ -97,12 +97,7 @@ impl<T: Clone + Debug + Eq + Hash> TransitiveRelation<T> {\n     {\n         let mut result = TransitiveRelation::new();\n         for edge in &self.edges {\n-            f(&self.elements[edge.source.0]).and_then(|source| {\n-                f(&self.elements[edge.target.0]).and_then(|target| {\n-                    result.add(source, target);\n-                    Some(())\n-                })\n-            })?;\n+            result.add(f(&self.elements[edge.source.0])?, f(&self.elements[edge.target.0])?);\n         }\n         Some(result)\n     }"}]}