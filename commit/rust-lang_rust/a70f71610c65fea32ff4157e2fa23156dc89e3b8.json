{"sha": "a70f71610c65fea32ff4157e2fa23156dc89e3b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MGY3MTYxMGM2NWZlYTMyZmY0MTU3ZTJmYTIzMTU2ZGM4OWUzYjg=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-05-18T04:41:21Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-05-18T04:46:22Z"}, "message": "stabilise `remove_nested_parens` and set default to true", "tree": {"sha": "bf05a9ef4cfdae90fd4c6a4367e8838d636bcb07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf05a9ef4cfdae90fd4c6a4367e8838d636bcb07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a70f71610c65fea32ff4157e2fa23156dc89e3b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a70f71610c65fea32ff4157e2fa23156dc89e3b8", "html_url": "https://github.com/rust-lang/rust/commit/a70f71610c65fea32ff4157e2fa23156dc89e3b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a70f71610c65fea32ff4157e2fa23156dc89e3b8/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8afe367510b7434f11f95cff2e62ebb544325de5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8afe367510b7434f11f95cff2e62ebb544325de5", "html_url": "https://github.com/rust-lang/rust/commit/8afe367510b7434f11f95cff2e62ebb544325de5"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "da07adc6ca0ec18d74c81c166b72319196250830", "filename": "Configurations.md", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a70f71610c65fea32ff4157e2fa23156dc89e3b8/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/a70f71610c65fea32ff4157e2fa23156dc89e3b8/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=a70f71610c65fea32ff4157e2fa23156dc89e3b8", "patch": "@@ -1260,7 +1260,7 @@ Convert /* */ comments to // comments where possible\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: Yes\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1286,21 +1286,22 @@ fn adipiscing() -> usize {}\n \n Remove nested parens.\n \n-- **Defalut value**: `false`,\n+- **Default value**: `true`,\n - **Possible values**: `true`, `false`\n-- **Stable**: No\n+- **Stable**: Yes\n \n-#### `false` (default):\n+\n+#### `true` (default):\n ```rust\n fn main() {\n-    ((((foo()))));\n+    (foo());\n }\n ```\n \n-#### `true`:\n+#### `false`:\n ```rust\n fn main() {\n-    (foo());\n+    ((((foo()))));\n }\n ```\n \n@@ -1312,7 +1313,7 @@ separated by a newline).\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n-- **Stable**: No\n+- **Stable**: Yes\n \n #### `true` (default):\n \n@@ -1339,7 +1340,7 @@ Reorder `mod` declarations alphabetically in group.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n-- **Stable**: No\n+- **Stable**: Yes\n \n #### `true` (default)\n \n@@ -1764,7 +1765,7 @@ Use field initialize shorthand if possible.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No\n+- **Stable**: Yes\n \n #### `false` (default):\n \n@@ -1806,7 +1807,7 @@ Replace uses of the try! macro by the ? shorthand\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No\n+- **Stable**: Yes\n \n #### `false` (default):\n \n@@ -1831,7 +1832,7 @@ Break comments to fit on the line\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: Yes\n+- **Stable**: No\n \n #### `false` (default):\n "}, {"sha": "ac39ae2652ffb824a7f875563a49011f11d5390c", "filename": "src/config/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a70f71610c65fea32ff4157e2fa23156dc89e3b8/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a70f71610c65fea32ff4157e2fa23156dc89e3b8/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=a70f71610c65fea32ff4157e2fa23156dc89e3b8", "patch": "@@ -82,6 +82,7 @@ create_config! {\n         \"Where to put a binary operator when a binary expression goes multiline.\";\n \n     // Misc.\n+    remove_nested_parens: bool, true, true, \"Remove nested parens.\";\n     remove_blank_lines_at_start_or_end_of_block: bool, true, false,\n         \"Remove blank lines at start or end of a block\";\n     combine_control_expr: bool, true, false, \"Combine control expressions with function calls.\";\n@@ -105,8 +106,6 @@ create_config! {\n         \"Maximum number of blank lines which can be put between items.\";\n     blank_lines_lower_bound: usize, 0, false,\n         \"Minimum number of blank lines which must be put between items.\";\n-    remove_nested_parens: bool, false, false,\n-        \"Remove nested parens.\";\n \n     // Options that can change the source code beyond whitespace/blocks (somewhat linty things)\n     merge_derives: bool, true, true, \"Merge multiple `#[derive(...)]` into a single one\";"}]}