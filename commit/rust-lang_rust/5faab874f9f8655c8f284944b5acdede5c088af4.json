{"sha": "5faab874f9f8655c8f284944b5acdede5c088af4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYWFiODc0ZjlmODY1NWM4ZjI4NDk0NGI1YWNkZWRlNWMwODhhZjQ=", "commit": {"author": {"name": "Tim Nielens", "email": "tim.nielens@gmail.com", "date": "2020-05-22T22:07:09Z"}, "committer": {"name": "Tim Nielens", "email": "tim.nielens@gmail.com", "date": "2020-05-30T15:52:10Z"}, "message": "new lint: vec_resize_to_zero", "tree": {"sha": "198d06384b65b3e619d856a5674fc938615f095f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/198d06384b65b3e619d856a5674fc938615f095f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5faab874f9f8655c8f284944b5acdede5c088af4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5faab874f9f8655c8f284944b5acdede5c088af4", "html_url": "https://github.com/rust-lang/rust/commit/5faab874f9f8655c8f284944b5acdede5c088af4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5faab874f9f8655c8f284944b5acdede5c088af4/comments", "author": {"login": "tnielens", "id": 11885535, "node_id": "MDQ6VXNlcjExODg1NTM1", "avatar_url": "https://avatars.githubusercontent.com/u/11885535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnielens", "html_url": "https://github.com/tnielens", "followers_url": "https://api.github.com/users/tnielens/followers", "following_url": "https://api.github.com/users/tnielens/following{/other_user}", "gists_url": "https://api.github.com/users/tnielens/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnielens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnielens/subscriptions", "organizations_url": "https://api.github.com/users/tnielens/orgs", "repos_url": "https://api.github.com/users/tnielens/repos", "events_url": "https://api.github.com/users/tnielens/events{/privacy}", "received_events_url": "https://api.github.com/users/tnielens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tnielens", "id": 11885535, "node_id": "MDQ6VXNlcjExODg1NTM1", "avatar_url": "https://avatars.githubusercontent.com/u/11885535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnielens", "html_url": "https://github.com/tnielens", "followers_url": "https://api.github.com/users/tnielens/followers", "following_url": "https://api.github.com/users/tnielens/following{/other_user}", "gists_url": "https://api.github.com/users/tnielens/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnielens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnielens/subscriptions", "organizations_url": "https://api.github.com/users/tnielens/orgs", "repos_url": "https://api.github.com/users/tnielens/repos", "events_url": "https://api.github.com/users/tnielens/events{/privacy}", "received_events_url": "https://api.github.com/users/tnielens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ea7cd165ad6705603852771bf82cc2fd6560db5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ea7cd165ad6705603852771bf82cc2fd6560db5", "html_url": "https://github.com/rust-lang/rust/commit/7ea7cd165ad6705603852771bf82cc2fd6560db5"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "f7dae3dcfff0f6c0dca0190a725b16bb72e7b2c9", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5faab874f9f8655c8f284944b5acdede5c088af4/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/5faab874f9f8655c8f284944b5acdede5c088af4/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=5faab874f9f8655c8f284944b5acdede5c088af4", "patch": "@@ -1630,6 +1630,7 @@ Released 2018-09-13\n [`useless_transmute`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n [`useless_vec`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec\n [`vec_box`]: https://rust-lang.github.io/rust-clippy/master/index.html#vec_box\n+[`vec_resize_to_zero`]: https://rust-lang.github.io/rust-clippy/master/index.html#vec_resize_to_zero\n [`verbose_bit_mask`]: https://rust-lang.github.io/rust-clippy/master/index.html#verbose_bit_mask\n [`verbose_file_reads`]: https://rust-lang.github.io/rust-clippy/master/index.html#verbose_file_reads\n [`vtable_address_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#vtable_address_comparisons"}, {"sha": "4f0ecab393d03b3c4a6e79583e82ddf9188de32e", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5faab874f9f8655c8f284944b5acdede5c088af4/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5faab874f9f8655c8f284944b5acdede5c088af4/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=5faab874f9f8655c8f284944b5acdede5c088af4", "patch": "@@ -325,6 +325,7 @@ mod unwrap;\n mod use_self;\n mod useless_conversion;\n mod vec;\n+mod vec_resize_to_zero;\n mod verbose_file_reads;\n mod wildcard_dependencies;\n mod wildcard_imports;\n@@ -847,6 +848,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &utils::internal_lints::OUTER_EXPN_EXPN_DATA,\n         &utils::internal_lints::PRODUCE_ICE,\n         &vec::USELESS_VEC,\n+        &vec_resize_to_zero::VEC_RESIZE_TO_ZERO,\n         &verbose_file_reads::VERBOSE_FILE_READS,\n         &wildcard_dependencies::WILDCARD_DEPENDENCIES,\n         &wildcard_imports::ENUM_GLOB_USE,\n@@ -1062,6 +1064,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| box manual_non_exhaustive::ManualNonExhaustive);\n     store.register_late_pass(|| box manual_async_fn::ManualAsyncFn);\n     store.register_early_pass(|| box redundant_field_names::RedundantFieldNames);\n+    store.register_late_pass(|| box vec_resize_to_zero::VecResizeToZero);\n     let single_char_binding_names_threshold = conf.single_char_binding_names_threshold;\n     store.register_early_pass(move || box non_expressive_names::NonExpressiveNames {\n         single_char_binding_names_threshold,\n@@ -1430,6 +1433,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&unwrap::UNNECESSARY_UNWRAP),\n         LintId::of(&useless_conversion::USELESS_CONVERSION),\n         LintId::of(&vec::USELESS_VEC),\n+        LintId::of(&vec_resize_to_zero::VEC_RESIZE_TO_ZERO),\n         LintId::of(&write::PRINTLN_EMPTY_STRING),\n         LintId::of(&write::PRINT_LITERAL),\n         LintId::of(&write::PRINT_WITH_NEWLINE),\n@@ -1677,6 +1681,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&unnamed_address::VTABLE_ADDRESS_COMPARISONS),\n         LintId::of(&unused_io_amount::UNUSED_IO_AMOUNT),\n         LintId::of(&unwrap::PANICKING_UNWRAP),\n+        LintId::of(&vec_resize_to_zero::VEC_RESIZE_TO_ZERO),\n     ]);\n \n     store.register_group(true, \"clippy::perf\", Some(\"clippy_perf\"), vec!["}, {"sha": "3b7e9739211b0520cca61321ff7498bcc90c97ef", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5faab874f9f8655c8f284944b5acdede5c088af4/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5faab874f9f8655c8f284944b5acdede5c088af4/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=5faab874f9f8655c8f284944b5acdede5c088af4", "patch": "@@ -138,5 +138,6 @@ pub const VEC_AS_SLICE: [&str; 4] = [\"alloc\", \"vec\", \"Vec\", \"as_slice\"];\n pub const VEC_DEQUE: [&str; 4] = [\"alloc\", \"collections\", \"vec_deque\", \"VecDeque\"];\n pub const VEC_FROM_ELEM: [&str; 3] = [\"alloc\", \"vec\", \"from_elem\"];\n pub const VEC_NEW: [&str; 4] = [\"alloc\", \"vec\", \"Vec\", \"new\"];\n+pub const VEC_RESIZE: [&str; 4] = [\"alloc\", \"vec\", \"Vec\", \"resize\"];\n pub const WEAK_ARC: [&str; 3] = [\"alloc\", \"sync\", \"Weak\"];\n pub const WEAK_RC: [&str; 3] = [\"alloc\", \"rc\", \"Weak\"];"}, {"sha": "86cbfa8203d54679500f47b854add4b1d18de784", "filename": "clippy_lints/src/vec_resize_to_zero.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/5faab874f9f8655c8f284944b5acdede5c088af4/clippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5faab874f9f8655c8f284944b5acdede5c088af4/clippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec_resize_to_zero.rs?ref=5faab874f9f8655c8f284944b5acdede5c088af4", "patch": "@@ -0,0 +1,59 @@\n+use crate::utils::span_lint_and_then;\n+use if_chain::if_chain;\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::source_map::Spanned;\n+\n+use crate::utils::{match_def_path, paths};\n+use rustc_ast::ast::LitKind;\n+use rustc_hir as hir;\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Finds occurences of `Vec::resize(0, an_int)`\n+    ///\n+    /// **Why is this bad?** This is probably an argument inversion mistake.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    /// ```rust\n+    /// vec!(1, 2, 3, 4, 5).resize(0, 5)\n+    /// ```\n+    pub VEC_RESIZE_TO_ZERO,\n+    correctness,\n+    \"emptying a vector with `resize(0, an_int)` instead of `clear()` is probably an argument inversion mistake\"\n+}\n+\n+declare_lint_pass!(VecResizeToZero => [VEC_RESIZE_TO_ZERO]);\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for VecResizeToZero {\n+    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'_>) {\n+        if_chain! {\n+            if let hir::ExprKind::MethodCall(path_segment, _, ref args) = expr.kind;\n+            if let Some(method_def_id) = cx.tables.type_dependent_def_id(expr.hir_id);\n+            if match_def_path(cx, method_def_id, &paths::VEC_RESIZE) && args.len() == 3;\n+            if let ExprKind::Lit(Spanned { node: LitKind::Int(0, _), .. }) = args[1].kind;\n+            if let ExprKind::Lit(Spanned { node: LitKind::Int(..), .. }) = args[2].kind;\n+            then {\n+                let method_call_span = expr.span.with_lo(path_segment.ident.span.lo());\n+                span_lint_and_then(\n+                    cx,\n+                    VEC_RESIZE_TO_ZERO,\n+                    expr.span,\n+                    \"emptying a vector with `resize`\",\n+                    |db| {\n+                        db.help(\"the arguments may be inverted...\");\n+                        db.span_suggestion(\n+                            method_call_span,\n+                            \"...or you can empty the vector with\",\n+                            \"clear()\".to_string(),\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    },\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "1e94ca00c1457f29ad92b172171e5f6bac2e203e", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5faab874f9f8655c8f284944b5acdede5c088af4/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5faab874f9f8655c8f284944b5acdede5c088af4/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=5faab874f9f8655c8f284944b5acdede5c088af4", "patch": "@@ -2460,6 +2460,13 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n         deprecation: None,\n         module: \"types\",\n     },\n+    Lint {\n+        name: \"vec_resize_to_zero\",\n+        group: \"correctness\",\n+        desc: \"emptying a vector with `resize(0, an_int)` instead of `clear()` is probably an argument inversion mistake\",\n+        deprecation: None,\n+        module: \"vec_resize_to_zero\",\n+    },\n     Lint {\n         name: \"verbose_bit_mask\",\n         group: \"style\","}, {"sha": "0263e2f5f20c113920111ee6b41e62f89a1944ed", "filename": "tests/ui/vec_resize_to_zero.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5faab874f9f8655c8f284944b5acdede5c088af4/tests%2Fui%2Fvec_resize_to_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5faab874f9f8655c8f284944b5acdede5c088af4/tests%2Fui%2Fvec_resize_to_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec_resize_to_zero.rs?ref=5faab874f9f8655c8f284944b5acdede5c088af4", "patch": "@@ -0,0 +1,15 @@\n+#![warn(clippy::vec_resize_to_zero)]\n+\n+fn main() {\n+    // applicable here\n+    vec![1, 2, 3, 4, 5].resize(0, 5);\n+\n+    // not applicable\n+    vec![1, 2, 3, 4, 5].resize(2, 5);\n+\n+    // applicable here, but only implemented for integer litterals for now\n+    vec![\"foo\", \"bar\", \"baz\"].resize(0, \"bar\");\n+\n+    // not applicable\n+    vec![\"foo\", \"bar\", \"baz\"].resize(2, \"bar\")\n+}"}, {"sha": "feb846298c656878246193fd8968b2c67127b260", "filename": "tests/ui/vec_resize_to_zero.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5faab874f9f8655c8f284944b5acdede5c088af4/tests%2Fui%2Fvec_resize_to_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5faab874f9f8655c8f284944b5acdede5c088af4/tests%2Fui%2Fvec_resize_to_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec_resize_to_zero.stderr?ref=5faab874f9f8655c8f284944b5acdede5c088af4", "patch": "@@ -0,0 +1,13 @@\n+error: emptying a vector with `resize`\n+  --> $DIR/vec_resize_to_zero.rs:5:5\n+   |\n+LL |     vec![1, 2, 3, 4, 5].resize(0, 5);\n+   |     ^^^^^^^^^^^^^^^^^^^^------------\n+   |                         |\n+   |                         help: ...or you can empty the vector with: `clear()`\n+   |\n+   = note: `-D clippy::vec-resize-to-zero` implied by `-D warnings`\n+   = help: the arguments may be inverted...\n+\n+error: aborting due to previous error\n+"}]}