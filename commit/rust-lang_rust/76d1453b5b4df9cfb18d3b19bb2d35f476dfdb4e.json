{"sha": "76d1453b5b4df9cfb18d3b19bb2d35f476dfdb4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZDE0NTNiNWI0ZGY5Y2ZiMThkM2IxOWJiMmQzNWY0NzZkZmRiNGU=", "commit": {"author": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2021-07-25T16:38:44Z"}, "committer": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2021-07-25T16:38:44Z"}, "message": "freebsd remove compiler workaround.\n\nrelated issue #43575", "tree": {"sha": "a54ce9724c87a82884968eb46fe0e8e8b19c5a4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a54ce9724c87a82884968eb46fe0e8e8b19c5a4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76d1453b5b4df9cfb18d3b19bb2d35f476dfdb4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76d1453b5b4df9cfb18d3b19bb2d35f476dfdb4e", "html_url": "https://github.com/rust-lang/rust/commit/76d1453b5b4df9cfb18d3b19bb2d35f476dfdb4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76d1453b5b4df9cfb18d3b19bb2d35f476dfdb4e/comments", "author": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6489ee10410f7be70dbefad322d1a3e1533ab282", "url": "https://api.github.com/repos/rust-lang/rust/commits/6489ee10410f7be70dbefad322d1a3e1533ab282", "html_url": "https://github.com/rust-lang/rust/commit/6489ee10410f7be70dbefad322d1a3e1533ab282"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "f2ec6aae9f2e62184f622d94489e2a3d617008c8", "filename": "compiler/rustc_target/src/spec/freebsd_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/76d1453b5b4df9cfb18d3b19bb2d35f476dfdb4e/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1453b5b4df9cfb18d3b19bb2d35f476dfdb4e/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs?ref=76d1453b5b4df9cfb18d3b19bb2d35f476dfdb4e", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{FramePointer, RelroLevel, TargetOptions};\n+use crate::spec::{RelroLevel, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     TargetOptions {\n@@ -8,7 +8,6 @@ pub fn opts() -> TargetOptions {\n         families: vec![\"unix\".to_string()],\n         has_rpath: true,\n         position_independent_executables: true,\n-        frame_pointer: FramePointer::Always, // FIXME 43575: should be MayOmit...\n         relro_level: RelroLevel::Full,\n         abi_return_struct_as_int: true,\n         dwarf_version: Some(2),"}]}