{"sha": "c8f73e79b33428664d8e7e98690612a6a79e3fe7", "node_id": "C_kwDOAAsO6NoAKGM4ZjczZTc5YjMzNDI4NjY0ZDhlN2U5ODY5MDYxMmE2YTc5ZTNmZTc", "commit": {"author": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2022-08-28T09:26:59Z"}, "committer": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2022-08-28T09:43:30Z"}, "message": "fs::get_mode enable getting the data via fcntl/F_GETFL on major BSD\nsupporting this flag.", "tree": {"sha": "b315e2bc7338f61dca458167840a4d8254f24713", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b315e2bc7338f61dca458167840a4d8254f24713"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8f73e79b33428664d8e7e98690612a6a79e3fe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8f73e79b33428664d8e7e98690612a6a79e3fe7", "html_url": "https://github.com/rust-lang/rust/commit/c8f73e79b33428664d8e7e98690612a6a79e3fe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8f73e79b33428664d8e7e98690612a6a79e3fe7/comments", "author": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91f128baf7704a477ab7c499143a160fb069b3ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/91f128baf7704a477ab7c499143a160fb069b3ad", "html_url": "https://github.com/rust-lang/rust/commit/91f128baf7704a477ab7c499143a160fb069b3ad"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "2c2435fd2853de03687327c483a575efc4bdc23b", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c8f73e79b33428664d8e7e98690612a6a79e3fe7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8f73e79b33428664d8e7e98690612a6a79e3fe7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=c8f73e79b33428664d8e7e98690612a6a79e3fe7", "patch": "@@ -1260,7 +1260,14 @@ impl fmt::Debug for File {\n             None\n         }\n \n-        #[cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"vxworks\"))]\n+        #[cfg(any(\n+            target_os = \"linux\",\n+            target_os = \"macos\",\n+            target_os = \"freebsd\",\n+            target_os = \"netbsd\",\n+            target_os = \"openbsd\",\n+            target_os = \"vxworks\"\n+        ))]\n         fn get_mode(fd: c_int) -> Option<(bool, bool)> {\n             let mode = unsafe { libc::fcntl(fd, libc::F_GETFL) };\n             if mode == -1 {\n@@ -1274,7 +1281,14 @@ impl fmt::Debug for File {\n             }\n         }\n \n-        #[cfg(not(any(target_os = \"linux\", target_os = \"macos\", target_os = \"vxworks\")))]\n+        #[cfg(not(any(\n+            target_os = \"linux\",\n+            target_os = \"macos\",\n+            target_os = \"freebsd\",\n+            target_os = \"netbsd\",\n+            target_os = \"openbsd\",\n+            target_os = \"vxworks\"\n+        )))]\n         fn get_mode(_fd: c_int) -> Option<(bool, bool)> {\n             // FIXME(#24570): implement this for other Unix platforms\n             None"}]}