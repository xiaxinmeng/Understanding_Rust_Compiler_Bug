{"sha": "58e923de6ef89f252f350d0d89f7b13798b517bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZTkyM2RlNmVmODlmMjUyZjM1MGQwZDg5ZjdiMTM3OThiNTE3YmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-14T00:36:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-14T00:36:47Z"}, "message": "rt: Perform task notification before killing the parent task", "tree": {"sha": "4e68c04e3acd27844ff348d7472c2f67264f6370", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e68c04e3acd27844ff348d7472c2f67264f6370"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58e923de6ef89f252f350d0d89f7b13798b517bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58e923de6ef89f252f350d0d89f7b13798b517bd", "html_url": "https://github.com/rust-lang/rust/commit/58e923de6ef89f252f350d0d89f7b13798b517bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58e923de6ef89f252f350d0d89f7b13798b517bd/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "138d9ca5d536a67465f8b97bee12a0c24b9e3233", "url": "https://api.github.com/repos/rust-lang/rust/commits/138d9ca5d536a67465f8b97bee12a0c24b9e3233", "html_url": "https://github.com/rust-lang/rust/commit/138d9ca5d536a67465f8b97bee12a0c24b9e3233"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "0df1a1d0ce1d84cf67f7ba454d3be73278ceda9c", "filename": "src/lib/comm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e923de6ef89f252f350d0d89f7b13798b517bd/src%2Flib%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58e923de6ef89f252f350d0d89f7b13798b517bd/src%2Flib%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fcomm.rs?ref=58e923de6ef89f252f350d0d89f7b13798b517bd", "patch": "@@ -81,7 +81,7 @@ resource port_ptr<uniq T>(po: *rustrt::rust_port) {\n     while rustrt::rust_port_size(po) > 0u {\n         // FIXME: For some reason if we don't assign to something here\n         // we end up with invalid reads in the drop glue.\n-        let t = rusti::recv::<T>(po);\n+        let _t = rusti::recv::<T>(po);\n     }\n     rustrt::del_port(po);\n }"}, {"sha": "b215894518202e6bf747c9b13c45ea09564ed6de", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/58e923de6ef89f252f350d0d89f7b13798b517bd/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/58e923de6ef89f252f350d0d89f7b13798b517bd/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=58e923de6ef89f252f350d0d89f7b13798b517bd", "patch": "@@ -126,24 +126,6 @@ rust_task::~rust_task()\n     DLOG(sched, task, \"~rust_task %s @0x%\" PRIxPTR \", refcnt=%d\",\n          name, (uintptr_t)this, ref_count);\n \n-    if(user.notify_enabled) {\n-        rust_task *target_task = kernel->get_task_by_id(user.notify_chan.task);\n-        if (target_task) {\n-            rust_port *target_port =\n-                target_task->get_port_by_id(user.notify_chan.port);\n-            if(target_port) {\n-                task_notification msg;\n-                msg.id = user.id;\n-                msg.result = failed ? tr_failure : tr_success;\n-\n-                target_port->send(&msg);\n-                scoped_lock with(target_task->lock);\n-                target_port->deref();\n-            }\n-            target_task->deref();\n-        }\n-    }\n-\n     if (supervisor) {\n         supervisor->deref();\n     }\n@@ -203,6 +185,8 @@ void task_start_wrapper(spawn_args *a)\n         failed = true;\n     }\n \n+    task->notify(!failed);\n+\n     if (failed) {\n #ifndef __WIN32__\n         task->conclude_failure();\n@@ -605,6 +589,28 @@ rust_task::claim_alloc(void *alloc, const type_desc *tydesc) {\n     lock.unlock();\n }\n \n+void\n+rust_task::notify(bool success) {\n+    // FIXME (1078) Do this in rust code\n+    if(user.notify_enabled) {\n+        rust_task *target_task = kernel->get_task_by_id(user.notify_chan.task);\n+        if (target_task) {\n+            rust_port *target_port =\n+                target_task->get_port_by_id(user.notify_chan.port);\n+            if(target_port) {\n+                task_notification msg;\n+                msg.id = user.id;\n+                msg.result = !success ? tr_failure : tr_success;\n+\n+                target_port->send(&msg);\n+                scoped_lock with(target_task->lock);\n+                target_port->deref();\n+            }\n+            target_task->deref();\n+        }\n+    }\n+}\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "30e0d90b12906b55b7e56152eaabadfa449e4ef1", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58e923de6ef89f252f350d0d89f7b13798b517bd/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/58e923de6ef89f252f350d0d89f7b13798b517bd/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=58e923de6ef89f252f350d0d89f7b13798b517bd", "patch": "@@ -213,6 +213,8 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     // ground. We should never be migrating shared boxes between tasks.\n     const type_desc *release_alloc(void *alloc);\n     void claim_alloc(void *alloc, const type_desc *tydesc);\n+\n+    void notify(bool success);\n };\n \n //"}]}