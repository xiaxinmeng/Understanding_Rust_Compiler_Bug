{"sha": "64a43f45d22d0d49da5363873903e63803457e61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0YTQzZjQ1ZDIyZDBkNDlkYTUzNjM4NzM5MDNlNjM4MDM0NTdlNjE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-10-21T01:31:43Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-11-11T20:14:33Z"}, "message": "A few minor tweaks", "tree": {"sha": "f6f5639283b5106c7c1dbcbf124b59f7570dc54e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6f5639283b5106c7c1dbcbf124b59f7570dc54e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64a43f45d22d0d49da5363873903e63803457e61", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl3JwSkACgkQtAh+UQ6Y\nsWTCXQ/7BG1qJp1IcMzNYD0KP7kTX3TexZYOvehoqvuuFqbrHXsOOF2QhKBe4Rro\neZpoL4t64zZvnsNkwt9fxUSKrc2Pt7mgSrp8RsZbUconYr2vL1eHUBBXc49mF1XN\nhGw4oYVP3j4fJpDc+7Zxp1xDDM8fyYB0gd8Y9FdvPu8/gdQvthRBFyZBOYdE7jTJ\nZvhy7R007G9qnZGGxqtaoNgwrFDJop3L6aDXlrreL822cJtL9L4mjGSgWNc3f5ka\nnK3ws4fWqmwo3ppCb99z81mcLg34TK4y9QLLccDlnkAn5ILlzrf3lsXAL6HpQCIe\nZ9vSk8G9Y9FImzHWoXaWEyaC5daJ/Q2r8i8wgClYXwCXxG3GI9ZZ4zAhZn867HoQ\nYcLAgH9pdD1AlWn0xaYe48apVqRxUjkfmXmRR3vCFd4LfcfQbaVXG/1bv5VJmTUd\nu4YyH9mjBhPaMjNQmmDgoAEjxaEJVVrE+itG3Jo8Lb0Ki7CEZD4KT8ODhCPjNZHu\ndMnYtvpaiBozgEYDMh2sSsldr4eBIXGxM3HwJfx9ENI99tJsFWX53SHgpS3E4WmA\nRbhP2EK16BrWbUShUMLpjsE0M57VZVIkISlgkgHzLFQ5mOeaPexqinxp0K00/nfd\nu9SQJgS2FfwnLaJP9IbPUQ1iLy91RaqSMOoXL8KvQtqKN1RfdCY=\n=+f7D\n-----END PGP SIGNATURE-----", "payload": "tree f6f5639283b5106c7c1dbcbf124b59f7570dc54e\nparent 01c11f9fb501cbaea01bc94fcdae7e1e32f73581\nauthor Aaron Hill <aa1ronham@gmail.com> 1571621503 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1573503273 -0500\n\nA few minor tweaks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64a43f45d22d0d49da5363873903e63803457e61", "html_url": "https://github.com/rust-lang/rust/commit/64a43f45d22d0d49da5363873903e63803457e61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64a43f45d22d0d49da5363873903e63803457e61/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01c11f9fb501cbaea01bc94fcdae7e1e32f73581", "url": "https://api.github.com/repos/rust-lang/rust/commits/01c11f9fb501cbaea01bc94fcdae7e1e32f73581", "html_url": "https://github.com/rust-lang/rust/commit/01c11f9fb501cbaea01bc94fcdae7e1e32f73581"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "c50fae45490775bfc38e1458c7b4fcd008daaa09", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64a43f45d22d0d49da5363873903e63803457e61/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a43f45d22d0d49da5363873903e63803457e61/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=64a43f45d22d0d49da5363873903e63803457e61", "patch": "@@ -474,7 +474,8 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n     /// Called immediately before a stack frame gets popped.\n     #[inline(always)]\n     fn stack_pop(\n-        _ecx: &mut InterpCx<'mir, 'tcx, Self>, _extra: (),\n+        _ecx: &mut InterpCx<'mir, 'tcx, Self>,\n+        _extra: (),\n     ) -> InterpResult<'tcx, StackPopInfo> {\n         // Const-eval mode does not support unwinding from panics\n         Ok(StackPopInfo::Normal)"}, {"sha": "5be8135fee9241f8d657087479e03d5527fcc9d3", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64a43f45d22d0d49da5363873903e63803457e61/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a43f45d22d0d49da5363873903e63803457e61/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=64a43f45d22d0d49da5363873903e63803457e61", "patch": "@@ -98,7 +98,7 @@ pub enum StackPopCleanup {\n     /// Jump to the next block in the caller, or cause UB if None (that's a function\n     /// that may never return). Also store layout of return place so\n     /// we can validate it at that layout.\n-    /// 'ret' stores the block we jump to on a normal return, while 'unwind'\n+    /// `ret` stores the block we jump to on a normal return, while 'unwind'\n     /// stores the block used for cleanup during unwinding\n     Goto { ret: Option<mir::BasicBlock>, unwind: Option<mir::BasicBlock> },\n     /// Just do nohing: Used by Main and for the box_alloc hook in miri."}]}