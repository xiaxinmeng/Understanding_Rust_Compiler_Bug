{"sha": "9ff8ae097e88937a4aa6cf62d73471e479bac1df", "node_id": "C_kwDOAAsO6NoAKDlmZjhhZTA5N2U4ODkzN2E0YWE2Y2Y2MmQ3MzQ3MWU0NzliYWMxZGY", "commit": {"author": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-11T22:20:01Z"}, "committer": {"name": "Mahdi Dibaiee", "email": "mdibaiee@pm.me", "date": "2022-01-13T20:23:24Z"}, "message": "rustdoc: fix intra-link for generic trait impls", "tree": {"sha": "9f08f8138e867666d8489efb66718c3d6972411a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f08f8138e867666d8489efb66718c3d6972411a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ff8ae097e88937a4aa6cf62d73471e479bac1df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYxDoXUzfgu5d8FXXuroRW98MWYoFAmHgijwACgkQuroRW98M\nWYoEGw/8CfvVxQhhUNNm8M8Fz5SevqxqGbP/6wPlEgpH3xMzz9llIG6OV1QaDrsm\ncIau5a7zMRjM2pJJk7w2PxNJszyr59QFKBWoDxNq8XB/0SvyQmcFGwFwcOlVEkKO\nYF1CEY89qSd1lCKaTnARbIlh72TbZ+FUeMjSbdA/LcXkCkyM144zQr+l+RwJ9k5s\ng5JKaltCEdh5iKuEWrRoHbGJXSa3JvRhe9tW6fqmz5Hjjoli+ljh8STTQwOrPgZj\nmqCg4H7Y/v6y4WrEk8jBkKfGe2IKc9S2/+bqKja96dkfB3Q1S//zogt32NtMszJG\nj4QQ9IjoifybZL7qmABhRzu/foL2vooQ2FyqNYEPcupoo5OZdGQObXofh8hc4Y8M\ndBZCUZ2hue9+UIDdT7PBduHbwlUqwZdmXcIBbEajK9+U3P3XqzhnMzBHXU0/U8N1\nOJsX1NoU5alnJ8n7JmDIiNXbGAGW8/Hy4+VRQbqiLz/2ZArW56E4omehKCAzXGTo\ndgyUYl1aCpq+Dr7OxlCtHLssjpwgNroYj6PVbDi+L18T1epyi1NPIcTVDVT31G+6\nSu1Zkrd3q9mlkXywKCxPcJMPhCwooeF+2eXu1Wx9+cV8hJIP4up2acxpdUYy4Gh6\nKMhaGHIQ+QYHN7+FJ/kI6N4Lq57TWaJ9CnLGa8dcdK2GJFpuPsE=\n=kiou\n-----END PGP SIGNATURE-----", "payload": "tree 9f08f8138e867666d8489efb66718c3d6972411a\nparent 1409c015b44a4d4d38bef2250b2a37c17b8b7463\nauthor Mahdi Dibaiee <mdibaiee@pm.me> 1641939601 +0000\ncommitter Mahdi Dibaiee <mdibaiee@pm.me> 1642105404 +0000\n\nrustdoc: fix intra-link for generic trait impls\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff8ae097e88937a4aa6cf62d73471e479bac1df", "html_url": "https://github.com/rust-lang/rust/commit/9ff8ae097e88937a4aa6cf62d73471e479bac1df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ff8ae097e88937a4aa6cf62d73471e479bac1df/comments", "author": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdibaiee", "id": 2807772, "node_id": "MDQ6VXNlcjI4MDc3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2807772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdibaiee", "html_url": "https://github.com/mdibaiee", "followers_url": "https://api.github.com/users/mdibaiee/followers", "following_url": "https://api.github.com/users/mdibaiee/following{/other_user}", "gists_url": "https://api.github.com/users/mdibaiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdibaiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdibaiee/subscriptions", "organizations_url": "https://api.github.com/users/mdibaiee/orgs", "repos_url": "https://api.github.com/users/mdibaiee/repos", "events_url": "https://api.github.com/users/mdibaiee/events{/privacy}", "received_events_url": "https://api.github.com/users/mdibaiee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1409c015b44a4d4d38bef2250b2a37c17b8b7463", "url": "https://api.github.com/repos/rust-lang/rust/commits/1409c015b44a4d4d38bef2250b2a37c17b8b7463", "html_url": "https://github.com/rust-lang/rust/commit/1409c015b44a4d4d38bef2250b2a37c17b8b7463"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "0bc10404dc0f0111a52a8e22e316c76aade277a1", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9ff8ae097e88937a4aa6cf62d73471e479bac1df/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff8ae097e88937a4aa6cf62d73471e479bac1df/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=9ff8ae097e88937a4aa6cf62d73471e479bac1df", "patch": "@@ -903,7 +903,18 @@ fn traits_implemented_by<'a>(\n                 ty\n             );\n             // Fast path: if this is a primitive simple `==` will work\n-            let saw_impl = impl_type == ty;\n+            // NOTE: the `match` is necessary; see #92662.\n+            // this allows us to ignore generics because the user input\n+            // may not include the generic placeholders\n+            // e.g. this allows us to match Foo (user comment) with Foo<T> (actual type)\n+            let saw_impl = impl_type == ty\n+                || match (impl_type.kind(), ty.kind()) {\n+                    (ty::Adt(impl_def, _), ty::Adt(ty_def, _)) => {\n+                        debug!(\"impl def_id: {:?}, ty def_id: {:?}\", impl_def.did, ty_def.did);\n+                        impl_def.did == ty_def.did\n+                    }\n+                    _ => false,\n+                };\n \n             if saw_impl { Some(trait_) } else { None }\n         })"}, {"sha": "c3d3f8b38660783159c07569fd76249cc8859dcb", "filename": "src/test/rustdoc/intra-doc/generic-trait-impl.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9ff8ae097e88937a4aa6cf62d73471e479bac1df/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff8ae097e88937a4aa6cf62d73471e479bac1df/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-trait-impl.rs?ref=9ff8ae097e88937a4aa6cf62d73471e479bac1df", "patch": "@@ -0,0 +1,19 @@\n+#![deny(rustdoc::broken_intra_doc_links)]\n+\n+// Test intra-doc links on trait implementations with generics\n+\n+use std::marker::PhantomData;\n+\n+pub trait Bar<T> {\n+    fn bar(&self);\n+}\n+\n+pub struct Foo<U>(PhantomData<U>);\n+\n+impl<T, U> Bar<T> for Foo<U> {\n+    fn bar(&self) {}\n+}\n+\n+// @has generic_trait_impl/fn.main.html '//a[@href=\"struct.Foo.html#method.bar\"]' 'Foo::bar'\n+/// link to [`Foo::bar`]\n+pub fn main() {}"}]}