{"sha": "6466795a70df56f89405df1ed438c8f8b58fed3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NjY3OTVhNzBkZjU2Zjg5NDA1ZGYxZWQ0MzhjOGY4YjU4ZmVkM2E=", "commit": {"author": {"name": "Rob Arnold", "email": "robarnold@cs.cmu.edu", "date": "2011-02-09T18:23:07Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-09T19:37:10Z"}, "message": "Add FreeBSD_x86_elf target to rustboot", "tree": {"sha": "954e677bb8b3016fda54357dc3ea1ddb951612b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/954e677bb8b3016fda54357dc3ea1ddb951612b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6466795a70df56f89405df1ed438c8f8b58fed3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6466795a70df56f89405df1ed438c8f8b58fed3a", "html_url": "https://github.com/rust-lang/rust/commit/6466795a70df56f89405df1ed438c8f8b58fed3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6466795a70df56f89405df1ed438c8f8b58fed3a/comments", "author": {"login": "robarnold", "id": 326113, "node_id": "MDQ6VXNlcjMyNjExMw==", "avatar_url": "https://avatars.githubusercontent.com/u/326113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robarnold", "html_url": "https://github.com/robarnold", "followers_url": "https://api.github.com/users/robarnold/followers", "following_url": "https://api.github.com/users/robarnold/following{/other_user}", "gists_url": "https://api.github.com/users/robarnold/gists{/gist_id}", "starred_url": "https://api.github.com/users/robarnold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robarnold/subscriptions", "organizations_url": "https://api.github.com/users/robarnold/orgs", "repos_url": "https://api.github.com/users/robarnold/repos", "events_url": "https://api.github.com/users/robarnold/events{/privacy}", "received_events_url": "https://api.github.com/users/robarnold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e39102299eb962ac3c381e73ed7fcca68192f45", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e39102299eb962ac3c381e73ed7fcca68192f45", "html_url": "https://github.com/rust-lang/rust/commit/6e39102299eb962ac3c381e73ed7fcca68192f45"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "00b1b8341f517af5bc8495701dc71eb0b03b7874", "filename": "src/boot/driver/lib.ml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6466795a70df56f89405df1ed438c8f8b58fed3a/src%2Fboot%2Fdriver%2Flib.ml", "raw_url": "https://github.com/rust-lang/rust/raw/6466795a70df56f89405df1ed438c8f8b58fed3a/src%2Fboot%2Fdriver%2Flib.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fdriver%2Flib.ml?ref=6466795a70df56f89405df1ed438c8f8b58fed3a", "patch": "@@ -249,6 +249,7 @@ let get_ar\n               Win32_x86_pe -> Pe.sniff\n             | MacOS_x86_macho -> Macho.sniff\n             | Linux_x86_elf -> Elf.sniff\n+            | FreeBSD_x86_elf -> Elf.sniff\n         in\n           sniff sess filename\n     end\n@@ -270,6 +271,7 @@ let get_sects\n                     Win32_x86_pe -> Pe.get_sections\n                   | MacOS_x86_macho -> Macho.get_sections\n                   | Linux_x86_elf -> Elf.get_sections\n+                  | FreeBSD_x86_elf -> Elf.get_sections\n               in\n                 Some (ar, (get_sections sess ar))\n     end\n@@ -350,6 +352,7 @@ let get_mod\n         Win32_x86_pe -> \".dll\"\n       | MacOS_x86_macho -> \".dylib\"\n       | Linux_x86_elf -> \".so\"\n+      | FreeBSD_x86_elf -> \".so\"\n   in\n   let rec meta_matches i f_meta =\n     if i >= (Array.length meta)\n@@ -447,6 +450,7 @@ let infer_lib_name\n       Win32_x86_pe -> ident ^ \".dll\"\n     | MacOS_x86_macho -> \"lib\" ^ ident ^ \".dylib\"\n     | Linux_x86_elf -> \"lib\" ^ ident ^ \".so\"\n+    | FreeBSD_x86_elf -> \"lib\" ^ ident ^ \".so\"\n ;;\n \n "}, {"sha": "9705f1ee7b11076baefc4cb5500b43272f4fd386", "filename": "src/boot/driver/main.ml", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6466795a70df56f89405df1ed438c8f8b58fed3a/src%2Fboot%2Fdriver%2Fmain.ml", "raw_url": "https://github.com/rust-lang/rust/raw/6466795a70df56f89405df1ed438c8f8b58fed3a/src%2Fboot%2Fdriver%2Fmain.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fdriver%2Fmain.ml?ref=6466795a70df56f89405df1ed438c8f8b58fed3a", "patch": "@@ -8,12 +8,21 @@ let _ =\n \n let (targ:Common.target) =\n   match Sys.os_type with\n-      \"Unix\" when Unix.system \"test `uname -s` = 'Darwin'\" = Unix.WEXITED 0 ->\n-        MacOS_x86_macho\n-    | \"Unix\" -> Linux_x86_elf\n-    | \"Win32\" -> Win32_x86_pe\n+\n+    | \"Win32\"\n     | \"Cygwin\" -> Win32_x86_pe\n-    | _ -> Linux_x86_elf\n+\n+    | \"Unix\"\n+        when Unix.system \"test `uname -s` = 'Linux'\" = Unix.WEXITED 0 ->\n+        Linux_x86_elf\n+    | \"Unix\"\n+        when Unix.system \"test `uname -s` = 'Darwin'\" = Unix.WEXITED 0 ->\n+        MacOS_x86_macho\n+    | \"Unix\"\n+        when Unix.system \"test `uname -s` = 'FreeBSD'\" = Unix.WEXITED 0 ->\n+        FreeBSD_x86_elf\n+    | _ ->\n+        Linux_x86_elf\n ;;\n \n let (abi:Abi.abi) = X86.abi;;\n@@ -96,6 +105,7 @@ let default_output_filename (sess:Session.sess) : filename option =\n           else\n             base ^ (match sess.Session.sess_targ with\n                         Linux_x86_elf -> \"\"\n+                      | FreeBSD_x86_elf -> \"\"\n                       | MacOS_x86_macho -> \"\"\n                       | Win32_x86_pe -> \".exe\")\n         in\n@@ -144,16 +154,21 @@ let flag f opt desc =\n \n let argspecs =\n   [\n-    (\"-t\", Arg.Symbol ([\"linux-x86-elf\"; \"win32-x86-pe\"; \"macos-x86-macho\"],\n+    (\"-t\", Arg.Symbol ([\"linux-x86-elf\";\n+                        \"win32-x86-pe\";\n+                        \"macos-x86-macho\";\n+                        \"freebsd-x86-elf\"],\n                        fun s -> (sess.Session.sess_targ <-\n                                    (match s with\n                                         \"win32-x86-pe\" -> Win32_x86_pe\n                                       | \"macos-x86-macho\" -> MacOS_x86_macho\n+                                      | \"freebsd-x86-elf\" -> FreeBSD_x86_elf\n                                       | _ -> Linux_x86_elf))),\n      (\" target (default: \" ^ (match sess.Session.sess_targ with\n                                   Win32_x86_pe -> \"win32-x86-pe\"\n                                 | Linux_x86_elf -> \"linux-x86-elf\"\n                                 | MacOS_x86_macho -> \"macos-x86-macho\"\n+                                | FreeBSD_x86_elf -> \"freebsd-x86-elf\"\n                              ) ^ \")\"));\n     (\"-o\", Arg.String (fun s -> sess.Session.sess_out <- Some s),\n      \"file to output (default: \"\n@@ -320,6 +335,7 @@ let parse_input_crate\n             let depfile =\n               match sess.Session.sess_targ with\n                   Linux_x86_elf\n+                | FreeBSD_x86_elf\n                 | MacOS_x86_macho -> outfile ^ \".d\"\n                 | Win32_x86_pe -> (Filename.chop_extension outfile) ^ \".d\"\n             in\n@@ -473,6 +489,7 @@ let main_pipeline _ =\n               Win32_x86_pe -> Pe.emit_file\n             | MacOS_x86_macho -> Macho.emit_file\n             | Linux_x86_elf -> Elf.emit_file\n+            | FreeBSD_x86_elf -> Elf.emit_file\n         in\n           Session.time_inner \"emit\" sess\n             (fun _ -> emitter sess crate code data sem_cx dwarf);"}, {"sha": "0f216fc2993704a224ca41377a095dde814433d4", "filename": "src/boot/fe/cexp.ml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6466795a70df56f89405df1ed438c8f8b58fed3a/src%2Fboot%2Ffe%2Fcexp.ml", "raw_url": "https://github.com/rust-lang/rust/raw/6466795a70df56f89405df1ed438c8f8b58fed3a/src%2Fboot%2Ffe%2Fcexp.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fcexp.ml?ref=6466795a70df56f89405df1ed438c8f8b58fed3a", "patch": "@@ -628,6 +628,7 @@ let parse_crate_file\n     let (os, arch, libc) =\n       match sess.Session.sess_targ with\n           Linux_x86_elf -> (\"linux\", \"x86\", \"libc.so.6\")\n+        | FreeBSD_x86_elf -> (\"freebsd\", \"x86\", \"libc.so.7\")\n         | Win32_x86_pe -> (\"win32\", \"x86\", \"msvcrt.dll\")\n         | MacOS_x86_macho -> (\"macos\", \"x86\", \"libc.dylib\")\n     in"}, {"sha": "c76da0de552b020ce8f7da97d725c87794ff721f", "filename": "src/boot/util/common.ml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6466795a70df56f89405df1ed438c8f8b58fed3a/src%2Fboot%2Futil%2Fcommon.ml", "raw_url": "https://github.com/rust-lang/rust/raw/6466795a70df56f89405df1ed438c8f8b58fed3a/src%2Fboot%2Futil%2Fcommon.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Futil%2Fcommon.ml?ref=6466795a70df56f89405df1ed438c8f8b58fed3a", "patch": "@@ -56,6 +56,7 @@ type target =\n     Linux_x86_elf\n   | Win32_x86_pe\n   | MacOS_x86_macho\n+  | FreeBSD_x86_elf\n ;;\n \n type ty_mach ="}]}