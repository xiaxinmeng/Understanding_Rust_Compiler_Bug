{"sha": "2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "node_id": "C_kwDOAAsO6NoAKDJiMzVlZGJiODRjNmRlN2JkZDI1M2Q1NmVhNGE3YjJjNTBhMTUxM2E", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-12-03T16:51:55Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-12-08T10:16:14Z"}, "message": "Update other UI tests as well", "tree": {"sha": "e0c2f825d089e7bb7fb4711524d71d0cf19cc528", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0c2f825d089e7bb7fb4711524d71d0cf19cc528"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "html_url": "https://github.com/rust-lang/rust/commit/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dfb3ec8a45316365f6d950fe7d46e120cd42301", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dfb3ec8a45316365f6d950fe7d46e120cd42301", "html_url": "https://github.com/rust-lang/rust/commit/8dfb3ec8a45316365f6d950fe7d46e120cd42301"}], "stats": {"total": 91, "additions": 48, "deletions": 43}, "files": [{"sha": "f9bc9436b079293e5cf79cbbca4a602853074d2b", "filename": "tests/ui/auxiliary/option_helpers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fauxiliary%2Foption_helpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fauxiliary%2Foption_helpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Foption_helpers.rs?ref=2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "patch": "@@ -1,4 +1,4 @@\n-#![allow(dead_code, unused_variables)]\n+#![allow(dead_code, unused_variables, clippy::return_self_not_must_use)]\n \n /// Utility macro to test linting behavior in `option_methods()`\n /// The lints included in `option_methods()` should not lint if the call to map is partially"}, {"sha": "0029fc673f1107105b110987b20bd6ff236dfab9", "filename": "tests/ui/deref_addrof.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fderef_addrof.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fderef_addrof.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderef_addrof.fixed?ref=2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+#![allow(clippy::return_self_not_must_use)]\n #![warn(clippy::deref_addrof)]\n \n fn get_number() -> usize {"}, {"sha": "f2f02dd5e723d8a78c1918c4f8e597df4239c0aa", "filename": "tests/ui/deref_addrof.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fderef_addrof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fderef_addrof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderef_addrof.rs?ref=2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+#![allow(clippy::return_self_not_must_use)]\n #![warn(clippy::deref_addrof)]\n \n fn get_number() -> usize {"}, {"sha": "5bc1cbfa215100e5bdf0c41648e40dc85722927e", "filename": "tests/ui/deref_addrof.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fderef_addrof.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fderef_addrof.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderef_addrof.stderr?ref=2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "patch": "@@ -1,55 +1,55 @@\n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:18:13\n+  --> $DIR/deref_addrof.rs:19:13\n    |\n LL |     let b = *&a;\n    |             ^^^ help: try this: `a`\n    |\n    = note: `-D clippy::deref-addrof` implied by `-D warnings`\n \n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:20:13\n+  --> $DIR/deref_addrof.rs:21:13\n    |\n LL |     let b = *&get_number();\n    |             ^^^^^^^^^^^^^^ help: try this: `get_number()`\n \n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:25:13\n+  --> $DIR/deref_addrof.rs:26:13\n    |\n LL |     let b = *&bytes[1..2][0];\n    |             ^^^^^^^^^^^^^^^^ help: try this: `bytes[1..2][0]`\n \n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:29:13\n+  --> $DIR/deref_addrof.rs:30:13\n    |\n LL |     let b = *&(a);\n    |             ^^^^^ help: try this: `(a)`\n \n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:31:13\n+  --> $DIR/deref_addrof.rs:32:13\n    |\n LL |     let b = *(&a);\n    |             ^^^^^ help: try this: `a`\n \n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:34:13\n+  --> $DIR/deref_addrof.rs:35:13\n    |\n LL |     let b = *((&a));\n    |             ^^^^^^^ help: try this: `a`\n \n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:36:13\n+  --> $DIR/deref_addrof.rs:37:13\n    |\n LL |     let b = *&&a;\n    |             ^^^^ help: try this: `&a`\n \n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:38:14\n+  --> $DIR/deref_addrof.rs:39:14\n    |\n LL |     let b = **&aref;\n    |              ^^^^^^ help: try this: `aref`\n \n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:44:9\n+  --> $DIR/deref_addrof.rs:45:9\n    |\n LL |         *& $visitor\n    |         ^^^^^^^^^^^ help: try this: `$visitor`\n@@ -60,7 +60,7 @@ LL |         m!(self)\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: immediately dereferencing a reference\n-  --> $DIR/deref_addrof.rs:51:9\n+  --> $DIR/deref_addrof.rs:52:9\n    |\n LL |         *& mut $visitor\n    |         ^^^^^^^^^^^^^^^ help: try this: `$visitor`"}, {"sha": "1ccb0a1d167d23edb4cc1e79648dd691700efc1a", "filename": "tests/ui/should_impl_trait/corner_cases.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fcorner_cases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fcorner_cases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fcorner_cases.rs?ref=2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "patch": "@@ -7,7 +7,8 @@\n     clippy::needless_lifetimes,\n     clippy::missing_safety_doc,\n     clippy::wrong_self_convention,\n-    clippy::missing_panics_doc\n+    clippy::missing_panics_doc,\n+    clippy::return_self_not_must_use\n )]\n \n use std::ops::Mul;"}, {"sha": "20d49f5a9763413100e898613f1f9554704d0325", "filename": "tests/ui/should_impl_trait/method_list_1.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.rs?ref=2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "patch": "@@ -7,7 +7,8 @@\n     clippy::needless_lifetimes,\n     clippy::missing_safety_doc,\n     clippy::wrong_self_convention,\n-    clippy::missing_panics_doc\n+    clippy::missing_panics_doc,\n+    clippy::return_self_not_must_use\n )]\n \n use std::ops::Mul;"}, {"sha": "2b7d4628c3fa02b703e9a58cb98b73d4a1dd6489", "filename": "tests/ui/should_impl_trait/method_list_1.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_1.stderr?ref=2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "patch": "@@ -1,5 +1,5 @@\n error: method `add` can be confused for the standard trait method `std::ops::Add::add`\n-  --> $DIR/method_list_1.rs:24:5\n+  --> $DIR/method_list_1.rs:25:5\n    |\n LL | /     pub fn add(self, other: T) -> T {\n LL | |         unimplemented!()\n@@ -10,7 +10,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Add` or choosing a less ambiguous method name\n \n error: method `as_mut` can be confused for the standard trait method `std::convert::AsMut::as_mut`\n-  --> $DIR/method_list_1.rs:28:5\n+  --> $DIR/method_list_1.rs:29:5\n    |\n LL | /     pub fn as_mut(&mut self) -> &mut T {\n LL | |         unimplemented!()\n@@ -20,7 +20,7 @@ LL | |     }\n    = help: consider implementing the trait `std::convert::AsMut` or choosing a less ambiguous method name\n \n error: method `as_ref` can be confused for the standard trait method `std::convert::AsRef::as_ref`\n-  --> $DIR/method_list_1.rs:32:5\n+  --> $DIR/method_list_1.rs:33:5\n    |\n LL | /     pub fn as_ref(&self) -> &T {\n LL | |         unimplemented!()\n@@ -30,7 +30,7 @@ LL | |     }\n    = help: consider implementing the trait `std::convert::AsRef` or choosing a less ambiguous method name\n \n error: method `bitand` can be confused for the standard trait method `std::ops::BitAnd::bitand`\n-  --> $DIR/method_list_1.rs:36:5\n+  --> $DIR/method_list_1.rs:37:5\n    |\n LL | /     pub fn bitand(self, rhs: T) -> T {\n LL | |         unimplemented!()\n@@ -40,7 +40,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::BitAnd` or choosing a less ambiguous method name\n \n error: method `bitor` can be confused for the standard trait method `std::ops::BitOr::bitor`\n-  --> $DIR/method_list_1.rs:40:5\n+  --> $DIR/method_list_1.rs:41:5\n    |\n LL | /     pub fn bitor(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -50,7 +50,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::BitOr` or choosing a less ambiguous method name\n \n error: method `bitxor` can be confused for the standard trait method `std::ops::BitXor::bitxor`\n-  --> $DIR/method_list_1.rs:44:5\n+  --> $DIR/method_list_1.rs:45:5\n    |\n LL | /     pub fn bitxor(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -60,7 +60,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::BitXor` or choosing a less ambiguous method name\n \n error: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n-  --> $DIR/method_list_1.rs:48:5\n+  --> $DIR/method_list_1.rs:49:5\n    |\n LL | /     pub fn borrow(&self) -> &str {\n LL | |         unimplemented!()\n@@ -70,7 +70,7 @@ LL | |     }\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n \n error: method `borrow_mut` can be confused for the standard trait method `std::borrow::BorrowMut::borrow_mut`\n-  --> $DIR/method_list_1.rs:52:5\n+  --> $DIR/method_list_1.rs:53:5\n    |\n LL | /     pub fn borrow_mut(&mut self) -> &mut str {\n LL | |         unimplemented!()\n@@ -80,7 +80,7 @@ LL | |     }\n    = help: consider implementing the trait `std::borrow::BorrowMut` or choosing a less ambiguous method name\n \n error: method `clone` can be confused for the standard trait method `std::clone::Clone::clone`\n-  --> $DIR/method_list_1.rs:56:5\n+  --> $DIR/method_list_1.rs:57:5\n    |\n LL | /     pub fn clone(&self) -> Self {\n LL | |         unimplemented!()\n@@ -90,7 +90,7 @@ LL | |     }\n    = help: consider implementing the trait `std::clone::Clone` or choosing a less ambiguous method name\n \n error: method `cmp` can be confused for the standard trait method `std::cmp::Ord::cmp`\n-  --> $DIR/method_list_1.rs:60:5\n+  --> $DIR/method_list_1.rs:61:5\n    |\n LL | /     pub fn cmp(&self, other: &Self) -> Self {\n LL | |         unimplemented!()\n@@ -100,7 +100,7 @@ LL | |     }\n    = help: consider implementing the trait `std::cmp::Ord` or choosing a less ambiguous method name\n \n error: method `deref` can be confused for the standard trait method `std::ops::Deref::deref`\n-  --> $DIR/method_list_1.rs:68:5\n+  --> $DIR/method_list_1.rs:69:5\n    |\n LL | /     pub fn deref(&self) -> &Self {\n LL | |         unimplemented!()\n@@ -110,7 +110,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Deref` or choosing a less ambiguous method name\n \n error: method `deref_mut` can be confused for the standard trait method `std::ops::DerefMut::deref_mut`\n-  --> $DIR/method_list_1.rs:72:5\n+  --> $DIR/method_list_1.rs:73:5\n    |\n LL | /     pub fn deref_mut(&mut self) -> &mut Self {\n LL | |         unimplemented!()\n@@ -120,7 +120,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::DerefMut` or choosing a less ambiguous method name\n \n error: method `div` can be confused for the standard trait method `std::ops::Div::div`\n-  --> $DIR/method_list_1.rs:76:5\n+  --> $DIR/method_list_1.rs:77:5\n    |\n LL | /     pub fn div(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -130,7 +130,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Div` or choosing a less ambiguous method name\n \n error: method `drop` can be confused for the standard trait method `std::ops::Drop::drop`\n-  --> $DIR/method_list_1.rs:80:5\n+  --> $DIR/method_list_1.rs:81:5\n    |\n LL | /     pub fn drop(&mut self) {\n LL | |         unimplemented!()"}, {"sha": "3efec1c52023bdb91c14d5483d8fe62c7ddf70b6", "filename": "tests/ui/should_impl_trait/method_list_2.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.rs?ref=2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "patch": "@@ -7,7 +7,8 @@\n     clippy::needless_lifetimes,\n     clippy::missing_safety_doc,\n     clippy::wrong_self_convention,\n-    clippy::missing_panics_doc\n+    clippy::missing_panics_doc,\n+    clippy::return_self_not_must_use\n )]\n \n use std::ops::Mul;"}, {"sha": "b6fd435695698e6ca47adee8a423824472e6b14d", "filename": "tests/ui/should_impl_trait/method_list_2.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_impl_trait%2Fmethod_list_2.stderr?ref=2b35edbb84c6de7bdd253d56ea4a7b2c50a1513a", "patch": "@@ -1,5 +1,5 @@\n error: method `eq` can be confused for the standard trait method `std::cmp::PartialEq::eq`\n-  --> $DIR/method_list_2.rs:25:5\n+  --> $DIR/method_list_2.rs:26:5\n    |\n LL | /     pub fn eq(&self, other: &Self) -> bool {\n LL | |         unimplemented!()\n@@ -10,7 +10,7 @@ LL | |     }\n    = help: consider implementing the trait `std::cmp::PartialEq` or choosing a less ambiguous method name\n \n error: method `from_iter` can be confused for the standard trait method `std::iter::FromIterator::from_iter`\n-  --> $DIR/method_list_2.rs:29:5\n+  --> $DIR/method_list_2.rs:30:5\n    |\n LL | /     pub fn from_iter<T>(iter: T) -> Self {\n LL | |         unimplemented!()\n@@ -20,7 +20,7 @@ LL | |     }\n    = help: consider implementing the trait `std::iter::FromIterator` or choosing a less ambiguous method name\n \n error: method `from_str` can be confused for the standard trait method `std::str::FromStr::from_str`\n-  --> $DIR/method_list_2.rs:33:5\n+  --> $DIR/method_list_2.rs:34:5\n    |\n LL | /     pub fn from_str(s: &str) -> Result<Self, Self> {\n LL | |         unimplemented!()\n@@ -30,7 +30,7 @@ LL | |     }\n    = help: consider implementing the trait `std::str::FromStr` or choosing a less ambiguous method name\n \n error: method `hash` can be confused for the standard trait method `std::hash::Hash::hash`\n-  --> $DIR/method_list_2.rs:37:5\n+  --> $DIR/method_list_2.rs:38:5\n    |\n LL | /     pub fn hash(&self, state: &mut T) {\n LL | |         unimplemented!()\n@@ -40,7 +40,7 @@ LL | |     }\n    = help: consider implementing the trait `std::hash::Hash` or choosing a less ambiguous method name\n \n error: method `index` can be confused for the standard trait method `std::ops::Index::index`\n-  --> $DIR/method_list_2.rs:41:5\n+  --> $DIR/method_list_2.rs:42:5\n    |\n LL | /     pub fn index(&self, index: usize) -> &Self {\n LL | |         unimplemented!()\n@@ -50,7 +50,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Index` or choosing a less ambiguous method name\n \n error: method `index_mut` can be confused for the standard trait method `std::ops::IndexMut::index_mut`\n-  --> $DIR/method_list_2.rs:45:5\n+  --> $DIR/method_list_2.rs:46:5\n    |\n LL | /     pub fn index_mut(&mut self, index: usize) -> &mut Self {\n LL | |         unimplemented!()\n@@ -60,7 +60,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::IndexMut` or choosing a less ambiguous method name\n \n error: method `into_iter` can be confused for the standard trait method `std::iter::IntoIterator::into_iter`\n-  --> $DIR/method_list_2.rs:49:5\n+  --> $DIR/method_list_2.rs:50:5\n    |\n LL | /     pub fn into_iter(self) -> Self {\n LL | |         unimplemented!()\n@@ -70,7 +70,7 @@ LL | |     }\n    = help: consider implementing the trait `std::iter::IntoIterator` or choosing a less ambiguous method name\n \n error: method `mul` can be confused for the standard trait method `std::ops::Mul::mul`\n-  --> $DIR/method_list_2.rs:53:5\n+  --> $DIR/method_list_2.rs:54:5\n    |\n LL | /     pub fn mul(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -80,7 +80,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Mul` or choosing a less ambiguous method name\n \n error: method `neg` can be confused for the standard trait method `std::ops::Neg::neg`\n-  --> $DIR/method_list_2.rs:57:5\n+  --> $DIR/method_list_2.rs:58:5\n    |\n LL | /     pub fn neg(self) -> Self {\n LL | |         unimplemented!()\n@@ -90,7 +90,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Neg` or choosing a less ambiguous method name\n \n error: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n-  --> $DIR/method_list_2.rs:61:5\n+  --> $DIR/method_list_2.rs:62:5\n    |\n LL | /     pub fn next(&mut self) -> Option<Self> {\n LL | |         unimplemented!()\n@@ -100,7 +100,7 @@ LL | |     }\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n \n error: method `not` can be confused for the standard trait method `std::ops::Not::not`\n-  --> $DIR/method_list_2.rs:65:5\n+  --> $DIR/method_list_2.rs:66:5\n    |\n LL | /     pub fn not(self) -> Self {\n LL | |         unimplemented!()\n@@ -110,7 +110,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Not` or choosing a less ambiguous method name\n \n error: method `rem` can be confused for the standard trait method `std::ops::Rem::rem`\n-  --> $DIR/method_list_2.rs:69:5\n+  --> $DIR/method_list_2.rs:70:5\n    |\n LL | /     pub fn rem(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -120,7 +120,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Rem` or choosing a less ambiguous method name\n \n error: method `shl` can be confused for the standard trait method `std::ops::Shl::shl`\n-  --> $DIR/method_list_2.rs:73:5\n+  --> $DIR/method_list_2.rs:74:5\n    |\n LL | /     pub fn shl(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -130,7 +130,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Shl` or choosing a less ambiguous method name\n \n error: method `shr` can be confused for the standard trait method `std::ops::Shr::shr`\n-  --> $DIR/method_list_2.rs:77:5\n+  --> $DIR/method_list_2.rs:78:5\n    |\n LL | /     pub fn shr(self, rhs: Self) -> Self {\n LL | |         unimplemented!()\n@@ -140,7 +140,7 @@ LL | |     }\n    = help: consider implementing the trait `std::ops::Shr` or choosing a less ambiguous method name\n \n error: method `sub` can be confused for the standard trait method `std::ops::Sub::sub`\n-  --> $DIR/method_list_2.rs:81:5\n+  --> $DIR/method_list_2.rs:82:5\n    |\n LL | /     pub fn sub(self, rhs: Self) -> Self {\n LL | |         unimplemented!()"}]}