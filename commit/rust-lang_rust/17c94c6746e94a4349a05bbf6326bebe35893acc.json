{"sha": "17c94c6746e94a4349a05bbf6326bebe35893acc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3Yzk0YzY3NDZlOTRhNDM0OWEwNWJiZjYzMjZiZWJlMzU4OTNhY2M=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-19T23:28:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-19T23:28:49Z"}, "message": "fix FIXME comment\n\nCo-Authored-By: varkor <github@varkor.com>", "tree": {"sha": "7f95041c690dd4eab59576cee2cb3f0fb6b3f9ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f95041c690dd4eab59576cee2cb3f0fb6b3f9ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17c94c6746e94a4349a05bbf6326bebe35893acc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJedAAxCRBK7hj4Ov3rIwAAdHIIAGv3B7T6liT3B/NecRteCxMA\n4PIYLjkXbmvzdYG3O/QXrDCbYCwHn1y/5Yjwx9H13xUGLo++ouJNKvo7QeAulB5H\n5Z9aq5qe8ZazO4y0vcO7946E0vx/1b5Ed9U8qTBLjR1R0dHs5U20/1PJrNJvhemH\nWcsHXHPazUaVbvqterZfWjTUH8lVHRcn2qJ31ccD+/d+JQN8b8HWsevYR544JrdJ\nFF5QpGF9GRfmhJEW7jBkkCkYRrEpEXSYPaE2OtfRIfkdSkxFq8AK9G3+WuF215p7\nOo+bHX87adJgN4paePJrwJlTzyU48V/ULHRaRWnVGsIizgYbGIhfVdeDQrEKz0c=\n=nNOb\n-----END PGP SIGNATURE-----\n", "payload": "tree 7f95041c690dd4eab59576cee2cb3f0fb6b3f9ed\nparent 6cb584608cf3047750c2335325cccaa7521e8e04\nauthor Bastian Kauschke <bastian_kauschke@hotmail.de> 1584660529 +0100\ncommitter GitHub <noreply@github.com> 1584660529 +0100\n\nfix FIXME comment\n\nCo-Authored-By: varkor <github@varkor.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17c94c6746e94a4349a05bbf6326bebe35893acc", "html_url": "https://github.com/rust-lang/rust/commit/17c94c6746e94a4349a05bbf6326bebe35893acc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17c94c6746e94a4349a05bbf6326bebe35893acc/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cb584608cf3047750c2335325cccaa7521e8e04", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cb584608cf3047750c2335325cccaa7521e8e04", "html_url": "https://github.com/rust-lang/rust/commit/6cb584608cf3047750c2335325cccaa7521e8e04"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dadc5b1c129568cdc49f0a4bea0fccd6d777cc62", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17c94c6746e94a4349a05bbf6326bebe35893acc/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17c94c6746e94a4349a05bbf6326bebe35893acc/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=17c94c6746e94a4349a05bbf6326bebe35893acc", "patch": "@@ -1295,7 +1295,7 @@ fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> &ty::Generics {\n     // FIXME(const_generics): a few places in the compiler expect generic params\n     // to be in the order lifetimes, then type params, then const params.\n     //\n-    // To prevent internal errors in case a const params are supplied in front of\n+    // To prevent internal errors in case const parameters are supplied before\n     // type parameters we first add all type params, then all const params.\n     params.extend(ast_generics.params.iter().filter_map(|param| {\n         if let GenericParamKind::Type { ref default, synthetic, .. } = param.kind {"}]}