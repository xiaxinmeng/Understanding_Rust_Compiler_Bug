{"sha": "42726906f7e1d08ce7b3ef78cf3cf2150a8cb1be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNzI2OTA2ZjdlMWQwOGNlN2IzZWY3OGNmM2NmMjE1MGE4Y2IxYmU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-10T12:52:23Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-10T12:52:23Z"}, "message": "Allow struct to be multi-lined in closure's body without block", "tree": {"sha": "8317eef4881db95bb3243a8ce14222a69fd07165", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8317eef4881db95bb3243a8ce14222a69fd07165"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42726906f7e1d08ce7b3ef78cf3cf2150a8cb1be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42726906f7e1d08ce7b3ef78cf3cf2150a8cb1be", "html_url": "https://github.com/rust-lang/rust/commit/42726906f7e1d08ce7b3ef78cf3cf2150a8cb1be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42726906f7e1d08ce7b3ef78cf3cf2150a8cb1be/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd6bef8cfa851728a300f77066de3542ccea9362", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd6bef8cfa851728a300f77066de3542ccea9362", "html_url": "https://github.com/rust-lang/rust/commit/bd6bef8cfa851728a300f77066de3542ccea9362"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "f169a3f4d229f80f9a4ae9218e309df456a67763", "filename": "src/closures.rs", "status": "modified", "additions": 30, "deletions": 9, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/42726906f7e1d08ce7b3ef78cf3cf2150a8cb1be/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42726906f7e1d08ce7b3ef78cf3cf2150a8cb1be/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=42726906f7e1d08ce7b3ef78cf3cf2150a8cb1be", "patch": "@@ -147,15 +147,37 @@ fn rewrite_closure_expr(\n     context: &RewriteContext,\n     shape: Shape,\n ) -> Option<String> {\n-    let mut rewrite = expr.rewrite(context, shape);\n-    rewrite = rewrite.and_then(|rw| {\n-        if context.config.force_multiline_blocks() && rw.contains('\\n') {\n-            None\n-        } else {\n-            Some(rw)\n+    fn allow_multi_line(expr: &ast::Expr) -> bool {\n+        match expr.node {\n+            ast::ExprKind::Match(..)\n+            | ast::ExprKind::Block(..)\n+            | ast::ExprKind::Catch(..)\n+            | ast::ExprKind::Loop(..)\n+            | ast::ExprKind::Struct(..) => true,\n+\n+            ast::ExprKind::AddrOf(_, ref expr)\n+            | ast::ExprKind::Box(ref expr)\n+            | ast::ExprKind::Try(ref expr)\n+            | ast::ExprKind::Unary(_, ref expr)\n+            | ast::ExprKind::Cast(ref expr, _) => allow_multi_line(expr),\n+\n+            _ => false,\n         }\n-    });\n-    rewrite.map(|rw| format!(\"{} {}\", prefix, rw))\n+    }\n+\n+    // When rewriting closure's body without block, we require it to fit in a single line\n+    // unless it is a block-like expression or we are inside macro call.\n+    let veto_multiline = (!allow_multi_line(expr) && !context.inside_macro)\n+        || context.config.force_multiline_blocks();\n+    expr.rewrite(context, shape)\n+        .and_then(|rw| {\n+            if veto_multiline && rw.contains('\\n') {\n+                None\n+            } else {\n+                Some(rw)\n+            }\n+        })\n+        .map(|rw| format!(\"{} {}\", prefix, rw))\n }\n \n // Rewrite closure whose body is block.\n@@ -341,7 +363,6 @@ fn is_block_closure_forced_inner(expr: &ast::Expr) -> bool {\n     match expr.node {\n         ast::ExprKind::If(..)\n         | ast::ExprKind::IfLet(..)\n-        | ast::ExprKind::Loop(..)\n         | ast::ExprKind::While(..)\n         | ast::ExprKind::WhileLet(..)\n         | ast::ExprKind::ForLoop(..) => true,"}]}