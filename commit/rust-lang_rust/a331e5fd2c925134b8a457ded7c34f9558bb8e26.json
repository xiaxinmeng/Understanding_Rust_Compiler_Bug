{"sha": "a331e5fd2c925134b8a457ded7c34f9558bb8e26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMzFlNWZkMmM5MjUxMzRiOGE0NTdkZWQ3YzM0Zjk1NThiYjhlMjY=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-07-11T15:33:39Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-07-11T15:33:39Z"}, "message": "Simplify leading zero checks", "tree": {"sha": "451024bef111edb0c6687c75693129ab0e6e62ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/451024bef111edb0c6687c75693129ab0e6e62ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a331e5fd2c925134b8a457ded7c34f9558bb8e26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a331e5fd2c925134b8a457ded7c34f9558bb8e26", "html_url": "https://github.com/rust-lang/rust/commit/a331e5fd2c925134b8a457ded7c34f9558bb8e26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a331e5fd2c925134b8a457ded7c34f9558bb8e26/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d", "html_url": "https://github.com/rust-lang/rust/commit/b9b97bbb9d3503381de4b1beb5fcbf69e8e4c68d"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "e233d605ce55a0de06bee924e6f900fc95c5080c", "filename": "library/std/src/net/parser.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a331e5fd2c925134b8a457ded7c34f9558bb8e26/library%2Fstd%2Fsrc%2Fnet%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a331e5fd2c925134b8a457ded7c34f9558bb8e26/library%2Fstd%2Fsrc%2Fnet%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fparser.rs?ref=a331e5fd2c925134b8a457ded7c34f9558bb8e26", "patch": "@@ -12,7 +12,7 @@ use crate::fmt;\n use crate::net::{IpAddr, Ipv4Addr, Ipv6Addr, SocketAddr, SocketAddrV4, SocketAddrV6};\n use crate::str::FromStr;\n \n-trait ReadNumberHelper: crate::marker::Sized + crate::cmp::PartialEq {\n+trait ReadNumberHelper: crate::marker::Sized {\n     const ZERO: Self;\n     fn checked_mul(&self, other: u32) -> Option<Self>;\n     fn checked_add(&self, other: u32) -> Option<Self>;\n@@ -131,10 +131,7 @@ impl<'a> Parser<'a> {\n \n             if digit_count == 0 {\n                 None\n-            } else if !allow_zero_prefix\n-                && has_leading_zero\n-                && (result != T::ZERO || result == T::ZERO && digit_count > 1)\n-            {\n+            } else if !allow_zero_prefix && has_leading_zero && digit_count > 1 {\n                 None\n             } else {\n                 Some(result)"}]}