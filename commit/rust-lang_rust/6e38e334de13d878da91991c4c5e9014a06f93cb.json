{"sha": "6e38e334de13d878da91991c4c5e9014a06f93cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMzhlMzM0ZGUxM2Q4NzhkYTkxOTkxYzRjNWU5MDE0YTA2ZjkzY2I=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-11T20:20:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-11T23:00:23Z"}, "message": "Relate the module hierarchy to directory paths in the parser\n\nIntroduces a temporary 'path2' attribute that will replace 'path' after\na snapshot", "tree": {"sha": "581c6d5de44ec9658365602ebcfc3eb8aaf6bb10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/581c6d5de44ec9658365602ebcfc3eb8aaf6bb10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e38e334de13d878da91991c4c5e9014a06f93cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e38e334de13d878da91991c4c5e9014a06f93cb", "html_url": "https://github.com/rust-lang/rust/commit/6e38e334de13d878da91991c4c5e9014a06f93cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e38e334de13d878da91991c4c5e9014a06f93cb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "364f9afb64e7797d0117b95866374bb4d5404141", "url": "https://api.github.com/repos/rust-lang/rust/commits/364f9afb64e7797d0117b95866374bb4d5404141", "html_url": "https://github.com/rust-lang/rust/commit/364f9afb64e7797d0117b95866374bb4d5404141"}], "stats": {"total": 190, "additions": 186, "deletions": 4}, "files": [{"sha": "709d1537d41780e1432e2f17b0233db03272f128", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=6e38e334de13d878da91991c4c5e9014a06f93cb", "patch": "@@ -203,6 +203,7 @@ fn Parser(sess: parse_sess, cfg: ast::crate_cfg,\n         strict_keywords: token::strict_keyword_table(),\n         reserved_keywords: token::reserved_keyword_table(),\n         obsolete_set: std::map::HashMap(),\n+        mod_path_stack: ~[],\n     }\n }\n \n@@ -226,6 +227,8 @@ struct Parser {\n     /// The set of seen errors about obsolete syntax. Used to suppress\n     /// extra detail when the same error is seen twice\n     obsolete_set: HashMap<ObsoleteSyntax, ()>,\n+    /// Used to determine the path to externally loaded source files\n+    mut mod_path_stack: ~[~str],\n \n     drop {} /* do not copy the parser; its state is tied to outside state */\n }\n@@ -3041,10 +3044,12 @@ impl Parser {\n             let (m, attrs) = self.eval_src_mod(id, outer_attrs, id_span);\n             (id, m, Some(move attrs))\n         } else {\n+            self.push_mod_path(id, outer_attrs);\n             self.expect(token::LBRACE);\n             let inner_attrs = self.parse_inner_attrs_and_next();\n             let m = self.parse_mod_items(token::RBRACE, inner_attrs.next);\n             self.expect(token::RBRACE);\n+            self.pop_mod_path();\n             (id, item_mod(m), Some(inner_attrs.inner))\n         };\n \n@@ -3081,20 +3086,40 @@ impl Parser {\n         }\n     }\n \n+    fn push_mod_path(id: ident, attrs: ~[ast::attribute]) {\n+        let default_path = self.sess.interner.get(id);\n+        let file_path = match ::attr::first_attr_value_str_by_name(\n+            attrs, ~\"path2\") {\n+\n+            Some(ref d) => (*d),\n+            None => copy *default_path\n+        };\n+        self.mod_path_stack.push(file_path)\n+    }\n+\n+    fn pop_mod_path() {\n+        self.mod_path_stack.pop();\n+    }\n+\n     fn eval_src_mod(id: ast::ident,\n                     outer_attrs: ~[ast::attribute],\n                     id_sp: span) -> (ast::item_, ~[ast::attribute]) {\n+\n         let prefix = Path(self.sess.cm.span_to_filename(copy self.span));\n         let prefix = prefix.dir_path();\n+        let mod_path = Path(\".\").push_many(self.mod_path_stack);\n         let default_path = self.sess.interner.get(id) + ~\".rs\";\n         let file_path = match ::attr::first_attr_value_str_by_name(\n-            outer_attrs, ~\"path\") {\n+            outer_attrs, ~\"path2\") {\n \n-            Some(ref d) => (*d),\n-            None => default_path\n+            Some(ref d) => mod_path.push(*d),\n+            None => match ::attr::first_attr_value_str_by_name(\n+                outer_attrs, ~\"path\") {\n+                Some(ref d) => Path(*d),\n+                None => mod_path.push(default_path)\n+            }\n         };\n \n-        let file_path = Path(file_path);\n         self.eval_src_mod_from_path(prefix, file_path,\n                                     outer_attrs, id_sp)\n     }"}, {"sha": "14ad18cd09100e06604ba85e545231f85bfcc688", "filename": "src/test/run-pass/mod_dir_path.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path.rs?ref=6e38e334de13d878da91991c4c5e9014a06f93cb", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-pretty\n+// xfail-fast\n+\n+mod mod_dir_simple {\n+    #[path2 = \"test.rs\"]\n+    pub mod syrup;\n+}\n+\n+fn main() {\n+    assert mod_dir_simple::syrup::foo() == 10;\n+}"}, {"sha": "98ed84ec7075fe865832ab71a6d24073f8bbff06", "filename": "src/test/run-pass/mod_dir_path2.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path2.rs?ref=6e38e334de13d878da91991c4c5e9014a06f93cb", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-pretty\n+// xfail-fast\n+\n+#[path2 = \"mod_dir_simple\"]\n+mod pancakes {\n+    #[path2 = \"test.rs\"]\n+    pub mod syrup;\n+}\n+\n+fn main() {\n+    assert pancakes::syrup::foo() == 10;\n+}"}, {"sha": "cc11dbe1fbd368e010e10379aa69e92402302bac", "filename": "src/test/run-pass/mod_dir_path3.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path3.rs?ref=6e38e334de13d878da91991c4c5e9014a06f93cb", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-pretty\n+// xfail-fast\n+\n+#[path2 = \"mod_dir_simple\"]\n+mod pancakes {\n+    pub mod test;\n+}\n+\n+fn main() {\n+    assert pancakes::test::foo() == 10;\n+}"}, {"sha": "ef6b3be6e45b006f5c374ac017831d771ce0b02b", "filename": "src/test/run-pass/mod_dir_path_multi.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_path_multi.rs?ref=6e38e334de13d878da91991c4c5e9014a06f93cb", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-pretty\n+// xfail-fast\n+\n+#[path2 = \"mod_dir_simple\"]\n+mod biscuits {\n+    pub mod test;\n+}\n+\n+#[path2 = \"mod_dir_simple\"]\n+mod gravy {\n+    pub mod test;\n+}\n+\n+fn main() {\n+    assert biscuits::test::foo() == 10;\n+    assert gravy::test::foo() == 10;\n+}"}, {"sha": "b95852f3a31a39f079ed77a9f120f8d6d1d91944", "filename": "src/test/run-pass/mod_dir_recursive.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_recursive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_recursive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_recursive.rs?ref=6e38e334de13d878da91991c4c5e9014a06f93cb", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-pretty\n+// xfail-fast\n+\n+// Testing that the parser for each file tracks its modules\n+// and paths independently. The load_another_mod module should\n+// not try to reuse the 'mod_dir_simple' path.\n+\n+mod mod_dir_simple {\n+    pub mod load_another_mod;\n+}\n+\n+fn main() {\n+    assert mod_dir_simple::load_another_mod::test::foo() == 10;\n+}"}, {"sha": "7f07982a65b5ac6036e19a8ceec241fb54c0f81b", "filename": "src/test/run-pass/mod_dir_simple.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_simple.rs?ref=6e38e334de13d878da91991c4c5e9014a06f93cb", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-pretty\n+// xfail-fast\n+\n+mod mod_dir_simple {\n+    pub mod test;\n+}\n+\n+fn main() {\n+    assert mod_dir_simple::test::foo() == 10;\n+}"}, {"sha": "335da61cd4ebb34eb8a7dc7a23e27a9a4a993f62", "filename": "src/test/run-pass/mod_dir_simple/load_another_mod.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_simple%2Fload_another_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_simple%2Fload_another_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_simple%2Fload_another_mod.rs?ref=6e38e334de13d878da91991c4c5e9014a06f93cb", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod test;"}, {"sha": "a3c1628725a07ed4b8525df1c021d8dcc0da0d50", "filename": "src/test/run-pass/mod_dir_simple/test.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_simple%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e38e334de13d878da91991c4c5e9014a06f93cb/src%2Ftest%2Frun-pass%2Fmod_dir_simple%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod_dir_simple%2Ftest.rs?ref=6e38e334de13d878da91991c4c5e9014a06f93cb", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() -> int { 10 }"}]}