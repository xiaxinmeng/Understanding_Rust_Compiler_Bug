{"sha": "77a3de3b95e74b50a1b62ac80ca90b3cf832f8d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3YTNkZTNiOTVlNzRiNTBhMWI2MmFjODBjYTkwYjNjZjgzMmY4ZDc=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-08-21T20:58:00Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-08-22T22:36:29Z"}, "message": "Implement size_hint() on RangeInclusive", "tree": {"sha": "1eda938f14be2e870c24750e8da6ae6d84d1a1fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1eda938f14be2e870c24750e8da6ae6d84d1a1fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77a3de3b95e74b50a1b62ac80ca90b3cf832f8d7", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77a3de3b95e74b50a1b62ac80ca90b3cf832f8d7", "html_url": "https://github.com/rust-lang/rust/commit/77a3de3b95e74b50a1b62ac80ca90b3cf832f8d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77a3de3b95e74b50a1b62ac80ca90b3cf832f8d7/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "063a005459a3ece4022e1fdb6400548c7ad2358e", "url": "https://api.github.com/repos/rust-lang/rust/commits/063a005459a3ece4022e1fdb6400548c7ad2358e", "html_url": "https://github.com/rust-lang/rust/commit/063a005459a3ece4022e1fdb6400548c7ad2358e"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "1af49ecd208ec2973181279a9412e2b17afa7fac", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/77a3de3b95e74b50a1b62ac80ca90b3cf832f8d7/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77a3de3b95e74b50a1b62ac80ca90b3cf832f8d7/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=77a3de3b95e74b50a1b62ac80ca90b3cf832f8d7", "patch": "@@ -1592,6 +1592,21 @@ impl<A: Add<A, A> + Ord + Clone> Iterator<A> for RangeInclusive<A> {\n             }\n         }\n     }\n+\n+    #[inline]\n+    fn size_hint(&self) -> (uint, Option<uint>) {\n+        let (lo, hi) = self.range.size_hint();\n+        if self.done {\n+            (lo, hi)\n+        } else {\n+            let lo = lo.saturating_add(1);\n+            let hi = match hi {\n+                Some(x) => x.checked_add(&1),\n+                None => None\n+            };\n+            (lo, hi)\n+        }\n+    }\n }\n \n impl<A: Sub<A, A> + Integer + Ord + Clone> DoubleEndedIterator<A> for RangeInclusive<A> {"}]}