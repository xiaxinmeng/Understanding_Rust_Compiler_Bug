{"sha": "b768f248e99688a2d7649731a99b2f2ad962abf5", "node_id": "C_kwDOAAsO6NoAKGI3NjhmMjQ4ZTk5Njg4YTJkNzY0OTczMWE5OWIyZjJhZDk2MmFiZjU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T05:36:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T05:36:26Z"}, "message": "Auto merge of #95999 - Dylan-DPC:rollup-k2r3k11, r=Dylan-DPC\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #95441 (Always use system `python3` on MacOS)\n - #95954 (Fix broken link in coverage tools docs)\n - #95984 (Fix spelling in docs for `can_not_overflow`)\n - #95989 (diagnostics: regression test for spurrious \"help: store this in the heap\")\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "7d1d325394278ae705321e6e2b323b2c9eab06a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d1d325394278ae705321e6e2b323b2c9eab06a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b768f248e99688a2d7649731a99b2f2ad962abf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b768f248e99688a2d7649731a99b2f2ad962abf5", "html_url": "https://github.com/rust-lang/rust/commit/b768f248e99688a2d7649731a99b2f2ad962abf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b768f248e99688a2d7649731a99b2f2ad962abf5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1491e5cc148391f7679542b8e9b4e6d2430a7b69", "url": "https://api.github.com/repos/rust-lang/rust/commits/1491e5cc148391f7679542b8e9b4e6d2430a7b69", "html_url": "https://github.com/rust-lang/rust/commit/1491e5cc148391f7679542b8e9b4e6d2430a7b69"}, {"sha": "2b4c4dfcfdf2e2cc5a17e4165c81399460b3644a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b4c4dfcfdf2e2cc5a17e4165c81399460b3644a", "html_url": "https://github.com/rust-lang/rust/commit/2b4c4dfcfdf2e2cc5a17e4165c81399460b3644a"}], "stats": {"total": 56, "additions": 44, "deletions": 12}, "files": [{"sha": "8b93cd39d5df3c07d064ea611377cad1239ac5ae", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b768f248e99688a2d7649731a99b2f2ad962abf5/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b768f248e99688a2d7649731a99b2f2ad962abf5/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=b768f248e99688a2d7649731a99b2f2ad962abf5", "patch": "@@ -999,7 +999,7 @@ macro_rules! impl_helper_for {\n }\n impl_helper_for! { i8 i16 i32 i64 i128 isize u8 u16 u32 u64 u128 usize }\n \n-/// Determins if a string of text of that length of that radix could be guaranteed to be\n+/// Determines if a string of text of that length of that radix could be guaranteed to be\n /// stored in the given type T.\n /// Note that if the radix is known to the compiler, it is just the check of digits.len that\n /// is done at runtime."}, {"sha": "59102ad9f50b8fdd39ba352c235c823c8342f049", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=b768f248e99688a2d7649731a99b2f2ad962abf5", "patch": "@@ -1176,7 +1176,17 @@ impl Build {\n \n     /// Path to the python interpreter to use\n     fn python(&self) -> &Path {\n-        self.config.python.as_ref().unwrap()\n+        if self.config.build.ends_with(\"apple-darwin\") {\n+            // Force /usr/bin/python3 on macOS for LLDB tests because we're loading the\n+            // LLDB plugin's compiled module which only works with the system python\n+            // (namely not Homebrew-installed python)\n+            Path::new(\"/usr/bin/python3\")\n+        } else {\n+            self.config\n+                .python\n+                .as_ref()\n+                .expect(\"python is required for running LLDB or rustdoc tests\")\n+        }\n     }\n \n     /// Temporary directory that extended error information is emitted to."}, {"sha": "c96e6f9a3678f222937714e4561fa472aae0cbec", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=b768f248e99688a2d7649731a99b2f2ad962abf5", "patch": "@@ -103,7 +103,9 @@ pub fn check(build: &mut Build) {\n         .take()\n         .map(|p| cmd_finder.must_have(p))\n         .or_else(|| env::var_os(\"BOOTSTRAP_PYTHON\").map(PathBuf::from)) // set by bootstrap.py\n-        .or_else(|| Some(cmd_finder.must_have(\"python\")));\n+        .or_else(|| cmd_finder.maybe_have(\"python\"))\n+        .or_else(|| cmd_finder.maybe_have(\"python3\"))\n+        .or_else(|| cmd_finder.maybe_have(\"python2\"));\n \n     build.config.nodejs = build\n         .config"}, {"sha": "f60766bde726ebc1416239005e46318a0689da9f", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=b768f248e99688a2d7649731a99b2f2ad962abf5", "patch": "@@ -1402,14 +1402,7 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n \n         cmd.arg(\"--docck-python\").arg(builder.python());\n \n-        if builder.config.build.ends_with(\"apple-darwin\") {\n-            // Force /usr/bin/python3 on macOS for LLDB tests because we're loading the\n-            // LLDB plugin's compiled module which only works with the system python\n-            // (namely not Homebrew-installed python)\n-            cmd.arg(\"--lldb-python\").arg(\"/usr/bin/python3\");\n-        } else {\n-            cmd.arg(\"--lldb-python\").arg(builder.python());\n-        }\n+        cmd.arg(\"--lldb-python\").arg(builder.python());\n \n         if let Some(ref gdb) = builder.config.gdb {\n             cmd.arg(\"--gdb\").arg(gdb);"}, {"sha": "35f04594347a398ca8321faf85fa018b192fa843", "filename": "src/doc/rustc/src/images/llvm-cov-show-01.png", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fdoc%2Frustc%2Fsrc%2Fimages%2Fllvm-cov-show-01.png", "raw_url": "https://github.com/rust-lang/rust/raw/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fdoc%2Frustc%2Fsrc%2Fimages%2Fllvm-cov-show-01.png", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fimages%2Fllvm-cov-show-01.png?ref=b768f248e99688a2d7649731a99b2f2ad962abf5", "previous_filename": "src/doc/unstable-book/src/compiler-flags/img/llvm-cov-show-01.png"}, {"sha": "108b0ffe99b85c959471a21ff126e2a3ad733664", "filename": "src/doc/rustc/src/instrument-coverage.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fdoc%2Frustc%2Fsrc%2Finstrument-coverage.md", "raw_url": "https://github.com/rust-lang/rust/raw/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Fdoc%2Frustc%2Fsrc%2Finstrument-coverage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Finstrument-coverage.md?ref=b768f248e99688a2d7649731a99b2f2ad962abf5", "patch": "@@ -145,7 +145,7 @@ $ llvm-cov show -Xdemangler=rustfilt target/debug/examples/formatjson5 \\\n     -name=add_quoted_string\n ```\n \n-<img alt=\"Screenshot of sample `llvm-cov show` result, for function add_quoted_string\" src=\"img/llvm-cov-show-01.png\" class=\"center\"/>\n+<img alt=\"Screenshot of sample `llvm-cov show` result, for function add_quoted_string\" src=\"images/llvm-cov-show-01.png\" class=\"center\"/>\n <br/>\n <br/>\n "}, {"sha": "2960f7fbc2121836992a2a05976735d3f4b9dfda", "filename": "src/test/ui/box/issue-82446.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Ftest%2Fui%2Fbox%2Fissue-82446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Ftest%2Fui%2Fbox%2Fissue-82446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbox%2Fissue-82446.rs?ref=b768f248e99688a2d7649731a99b2f2ad962abf5", "patch": "@@ -0,0 +1,15 @@\n+// https://github.com/rust-lang/rust/issues/82446\n+// Spurious 'help: store this in the heap' regression test\n+trait MyTrait {}\n+\n+struct Foo {\n+    val: Box<dyn MyTrait>\n+}\n+\n+fn make_it(val: &Box<dyn MyTrait>) {\n+    Foo {\n+        val //~ ERROR [E0308]\n+    };\n+}\n+\n+fn main() {}"}, {"sha": "0374737957e48a04f2417b6614ebc13978a32e53", "filename": "src/test/ui/box/issue-82446.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Ftest%2Fui%2Fbox%2Fissue-82446.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b768f248e99688a2d7649731a99b2f2ad962abf5/src%2Ftest%2Fui%2Fbox%2Fissue-82446.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbox%2Fissue-82446.stderr?ref=b768f248e99688a2d7649731a99b2f2ad962abf5", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-82446.rs:11:9\n+   |\n+LL |         val\n+   |         ^^^ expected struct `Box`, found reference\n+   |\n+   = note: expected struct `Box<(dyn MyTrait + 'static)>`\n+           found reference `&Box<(dyn MyTrait + 'static)>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}