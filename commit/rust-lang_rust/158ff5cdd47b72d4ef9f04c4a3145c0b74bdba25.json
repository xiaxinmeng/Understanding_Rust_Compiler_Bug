{"sha": "158ff5cdd47b72d4ef9f04c4a3145c0b74bdba25", "node_id": "C_kwDOAAsO6NoAKDE1OGZmNWNkZDQ3YjcyZDRlZjlmMDRjNGEzMTQ1YzBiNzRiZGJhMjU", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-06-08T15:27:32Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-06-08T15:28:36Z"}, "message": "Reword the question in the section header too.\n\nThis adopts the wording suggested in\nhttps://github.com/rust-lang/rust/pull/97837#discussion_r892524129.", "tree": {"sha": "e69bb9137eff408c4a13373f3ed2362d8582e1b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e69bb9137eff408c4a13373f3ed2362d8582e1b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/158ff5cdd47b72d4ef9f04c4a3145c0b74bdba25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/158ff5cdd47b72d4ef9f04c4a3145c0b74bdba25", "html_url": "https://github.com/rust-lang/rust/commit/158ff5cdd47b72d4ef9f04c4a3145c0b74bdba25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/158ff5cdd47b72d4ef9f04c4a3145c0b74bdba25/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e89ec68d5db9aa58b8170b351e730d45304c812b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e89ec68d5db9aa58b8170b351e730d45304c812b", "html_url": "https://github.com/rust-lang/rust/commit/e89ec68d5db9aa58b8170b351e730d45304c812b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "044cfb221b2f59e8c5ef0a2642a6d782c9cc4106", "filename": "library/std/src/os/unix/io/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/158ff5cdd47b72d4ef9f04c4a3145c0b74bdba25/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/158ff5cdd47b72d4ef9f04c4a3145c0b74bdba25/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs?ref=158ff5cdd47b72d4ef9f04c4a3145c0b74bdba25", "patch": "@@ -44,14 +44,14 @@\n //! Like boxes, `OwnedFd` values conceptually own the resource they point to,\n //! and free (close) it when they are dropped.\n //!\n-//! ## What about `/proc/self/mem` and similar OS features?\n+//! ## `/proc/self/mem` and similar OS features\n //!\n //! Some platforms have special files, such as `/proc/self/mem`, which \n //! provide read and write access to the process's memory. Such reads\n //! and writes happen outside the control of the Rust compiler, so they do not\n //! uphold Rust's memory safety guarantees.\n //!\n-//! However, this does not mean that all APIs that might allow `/proc/self/mem`\n+//! This does not mean that all APIs that might allow `/proc/self/mem`\n //! to be opened and read from or written must be `unsafe`. Rust's safety guarantees\n //! only cover what the program itself can do, and not what entities outside\n //! the program can do to it. `/proc/self/mem` is considered to be such an"}]}