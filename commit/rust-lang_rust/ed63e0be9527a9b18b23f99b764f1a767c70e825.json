{"sha": "ed63e0be9527a9b18b23f99b764f1a767c70e825", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNjNlMGJlOTUyN2E5YjE4YjIzZjk5Yjc2NGYxYTc2N2M3MGU4MjU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-06T21:11:16Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-06T21:28:04Z"}, "message": "Add visibility to span for macros 2.0", "tree": {"sha": "61641a5a1c19bada996d481082744840bf582eb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61641a5a1c19bada996d481082744840bf582eb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed63e0be9527a9b18b23f99b764f1a767c70e825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed63e0be9527a9b18b23f99b764f1a767c70e825", "html_url": "https://github.com/rust-lang/rust/commit/ed63e0be9527a9b18b23f99b764f1a767c70e825", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed63e0be9527a9b18b23f99b764f1a767c70e825/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20953906056f85f71896795e762ac242e1891aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20953906056f85f71896795e762ac242e1891aa", "html_url": "https://github.com/rust-lang/rust/commit/a20953906056f85f71896795e762ac242e1891aa"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5721330b8107650dd1818f1926d8538c9af04fb7", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ed63e0be9527a9b18b23f99b764f1a767c70e825/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed63e0be9527a9b18b23f99b764f1a767c70e825/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ed63e0be9527a9b18b23f99b764f1a767c70e825", "patch": "@@ -3789,9 +3789,9 @@ impl<'a> Parser<'a> {\n         is_defaultness\n     }\n \n-    fn eat_macro_def(&mut self, attrs: &[Attribute], vis: &Visibility)\n+    fn eat_macro_def(&mut self, attrs: &[Attribute], vis: &Visibility, lo: Span)\n                      -> PResult<'a, Option<P<Item>>> {\n-        let lo = self.span;\n+        let token_lo = self.span;\n         let (ident, def) = match self.token {\n             token::Ident(ident) if ident.name == keywords::Macro.name() => {\n                 self.bump();\n@@ -3811,7 +3811,7 @@ impl<'a> Parser<'a> {\n                     };\n                     TokenStream::concat(vec![\n                         args.into(),\n-                        TokenTree::Token(lo.to(self.prev_span), token::FatArrow).into(),\n+                        TokenTree::Token(token_lo.to(self.prev_span), token::FatArrow).into(),\n                         body.into(),\n                     ])\n                 } else {\n@@ -3861,7 +3861,7 @@ impl<'a> Parser<'a> {\n                 node: StmtKind::Local(self.parse_local(attrs.into())?),\n                 span: lo.to(self.prev_span),\n             }\n-        } else if let Some(macro_def) = self.eat_macro_def(&attrs, &Visibility::Inherited)? {\n+        } else if let Some(macro_def) = self.eat_macro_def(&attrs, &Visibility::Inherited, lo)? {\n             Stmt {\n                 id: ast::DUMMY_NODE_ID,\n                 node: StmtKind::Item(macro_def),\n@@ -6011,7 +6011,7 @@ impl<'a> Parser<'a> {\n                                     maybe_append(attrs, extra_attrs));\n             return Ok(Some(item));\n         }\n-        if let Some(macro_def) = self.eat_macro_def(&attrs, &visibility)? {\n+        if let Some(macro_def) = self.eat_macro_def(&attrs, &visibility, lo)? {\n             return Ok(Some(macro_def));\n         }\n "}]}