{"sha": "cb867d250ac4f1a1306d3835d461275ea037c065", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiODY3ZDI1MGFjNGYxYTEzMDZkMzgzNWQ0NjEyNzVlYTAzN2MwNjU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-23T16:57:40Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-23T16:57:40Z"}, "message": "Fix casting generic functions to concrete function pointers", "tree": {"sha": "f268579268359f9aca9dd7da1ac28e9be5d37417", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f268579268359f9aca9dd7da1ac28e9be5d37417"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb867d250ac4f1a1306d3835d461275ea037c065", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb867d250ac4f1a1306d3835d461275ea037c065", "html_url": "https://github.com/rust-lang/rust/commit/cb867d250ac4f1a1306d3835d461275ea037c065", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb867d250ac4f1a1306d3835d461275ea037c065/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4ed482c4d153eb61e451129ae48fa9cc39bbeff", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4ed482c4d153eb61e451129ae48fa9cc39bbeff", "html_url": "https://github.com/rust-lang/rust/commit/f4ed482c4d153eb61e451129ae48fa9cc39bbeff"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "5cd790797b471a5c9eec33feb80e5859b44d8e35", "filename": "src/eval_context.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cb867d250ac4f1a1306d3835d461275ea037c065/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb867d250ac4f1a1306d3835d461275ea037c065/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=cb867d250ac4f1a1306d3835d461275ea037c065", "patch": "@@ -825,7 +825,8 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n                     ReifyFnPointer => match self.operand_ty(operand).sty {\n                         ty::TyFnDef(def_id, substs, _) => {\n-                            let fn_ptr = self.memory.create_fn_ptr(def_id, substs);\n+                            let instance = resolve(self.tcx, def_id, substs);\n+                            let fn_ptr = self.memory.create_fn_alloc(instance);\n                             self.write_value(Value::ByVal(PrimVal::Ptr(fn_ptr)), dest, dest_ty)?;\n                         },\n                         ref other => bug!(\"reify fn pointer on {:?}\", other),"}, {"sha": "3d46d710d3dd7501fd7ed5d910affc36045f0de0", "filename": "src/memory.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cb867d250ac4f1a1306d3835d461275ea037c065/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb867d250ac4f1a1306d3835d461275ea037c065/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=cb867d250ac4f1a1306d3835d461275ea037c065", "patch": "@@ -2,9 +2,7 @@ use byteorder::{ReadBytesExt, WriteBytesExt, LittleEndian, BigEndian};\n use std::collections::{btree_map, BTreeMap, HashMap, HashSet, VecDeque, BTreeSet};\n use std::{fmt, iter, ptr, mem, io};\n \n-use rustc::hir::def_id::DefId;\n use rustc::ty;\n-use rustc::ty::subst::Substs;\n use rustc::ty::layout::{self, TargetDataLayout};\n \n use error::{EvalError, EvalResult};\n@@ -176,11 +174,6 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n         self.alloc_map.iter()\n     }\n \n-    pub fn create_fn_ptr(&mut self, def_id: DefId, substs: &'tcx Substs<'tcx>) -> Pointer {\n-        let instance = ty::Instance::new(def_id, substs);\n-        self.create_fn_alloc(instance)\n-    }\n-\n     pub fn create_fn_alloc(&mut self, instance: ty::Instance<'tcx>) -> Pointer {\n         if let Some(&alloc_id) = self.function_alloc_cache.get(&instance) {\n             return Pointer::new(alloc_id, 0);"}, {"sha": "060299983ed45284d443098537e79dc92b98cfa4", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb867d250ac4f1a1306d3835d461275ea037c065/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb867d250ac4f1a1306d3835d461275ea037c065/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=cb867d250ac4f1a1306d3835d461275ea037c065", "patch": "@@ -66,7 +66,9 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     ty::TyFnPtr(sig) => {\n                         let fn_ptr = self.eval_operand_to_primval(func)?.to_ptr()?;\n                         let instance = self.memory.get_fn(fn_ptr.alloc_id)?;\n-                        match instance.def.def_ty(self.tcx).sty {\n+                        let instance_ty = instance.def.def_ty(self.tcx);\n+                        let instance_ty = self.monomorphize(instance_ty, instance.substs);\n+                        match instance_ty.sty {\n                             ty::TyFnDef(_, _, real_sig) => {\n                                 let sig = self.erase_lifetimes(&sig);\n                                 let real_sig = self.erase_lifetimes(&real_sig);"}]}