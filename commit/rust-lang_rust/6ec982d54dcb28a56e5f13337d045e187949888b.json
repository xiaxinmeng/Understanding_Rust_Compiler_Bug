{"sha": "6ec982d54dcb28a56e5f13337d045e187949888b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYzk4MmQ1NGRjYjI4YTU2ZTVmMTMzMzdkMDQ1ZTE4Nzk0OTg4OGI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-12T17:00:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-12T17:02:00Z"}, "message": "Simplify", "tree": {"sha": "2dac44a8b984d342a0248c99af930ec15f60f136", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dac44a8b984d342a0248c99af930ec15f60f136"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ec982d54dcb28a56e5f13337d045e187949888b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ec982d54dcb28a56e5f13337d045e187949888b", "html_url": "https://github.com/rust-lang/rust/commit/6ec982d54dcb28a56e5f13337d045e187949888b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ec982d54dcb28a56e5f13337d045e187949888b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bf669860984a2c058b3bdc3e43b4993a0f25b31", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bf669860984a2c058b3bdc3e43b4993a0f25b31", "html_url": "https://github.com/rust-lang/rust/commit/5bf669860984a2c058b3bdc3e43b4993a0f25b31"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "69940fc36a35847e438b784f6df8a2bc2f566c84", "filename": "crates/ra_ide/src/goto_type_definition.rs", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6ec982d54dcb28a56e5f13337d045e187949888b/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ec982d54dcb28a56e5f13337d045e187949888b/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs?ref=6ec982d54dcb28a56e5f13337d045e187949888b", "patch": "@@ -16,24 +16,16 @@ pub(crate) fn goto_type_definition(\n     let token = pick_best(file.token_at_offset(position.offset))?;\n     let token = descend_into_macros(db, position.file_id, token);\n \n-    let node = token.value.ancestors().find_map(|token| {\n-        token\n-            .ancestors()\n-            .find(|n| ast::Expr::cast(n.clone()).is_some() || ast::Pat::cast(n.clone()).is_some())\n-    })?;\n+    let node = token\n+        .value\n+        .ancestors()\n+        .find(|n| ast::Expr::cast(n.clone()).is_some() || ast::Pat::cast(n.clone()).is_some())?;\n \n     let analyzer = hir::SourceAnalyzer::new(db, token.with_value(&node), None);\n \n-    let ty: hir::Type = if let Some(ty) =\n-        ast::Expr::cast(node.clone()).and_then(|e| analyzer.type_of(db, &e))\n-    {\n-        ty\n-    } else if let Some(ty) = ast::Pat::cast(node.clone()).and_then(|p| analyzer.type_of_pat(db, &p))\n-    {\n-        ty\n-    } else {\n-        return None;\n-    };\n+    let ty: hir::Type = ast::Expr::cast(node.clone())\n+        .and_then(|e| analyzer.type_of(db, &e))\n+        .or_else(|| ast::Pat::cast(node.clone()).and_then(|p| analyzer.type_of_pat(db, &p)))?;\n \n     let adt_def = ty.autoderef(db).find_map(|ty| ty.as_adt())?;\n "}]}