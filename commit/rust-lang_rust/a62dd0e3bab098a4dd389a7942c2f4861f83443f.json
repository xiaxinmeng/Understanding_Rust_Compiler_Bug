{"sha": "a62dd0e3bab098a4dd389a7942c2f4861f83443f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MmRkMGUzYmFiMDk4YTRkZDM4OWE3OTQyYzJmNDg2MWY4MzQ0M2Y=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-02-08T17:07:36Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-03-15T12:44:25Z"}, "message": "Add `min_specialization` feature\n\nCurrently the only difference between it and `specialization` is that\nit only allows specializing functions.", "tree": {"sha": "d8ffe85bca461e17f81cf4f26517bfd12b9d5e00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8ffe85bca461e17f81cf4f26517bfd12b9d5e00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a62dd0e3bab098a4dd389a7942c2f4861f83443f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a62dd0e3bab098a4dd389a7942c2f4861f83443f", "html_url": "https://github.com/rust-lang/rust/commit/a62dd0e3bab098a4dd389a7942c2f4861f83443f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a62dd0e3bab098a4dd389a7942c2f4861f83443f/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cdbc87a49b0b705a41a004a6d486b0952521ae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cdbc87a49b0b705a41a004a6d486b0952521ae7", "html_url": "https://github.com/rust-lang/rust/commit/7cdbc87a49b0b705a41a004a6d486b0952521ae7"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "f9f4c3efeb644a41dfdb55900182bc1508af24a1", "filename": "src/librustc_ast_passes/feature_gate.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a62dd0e3bab098a4dd389a7942c2f4861f83443f/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a62dd0e3bab098a4dd389a7942c2f4861f83443f/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Ffeature_gate.rs?ref=a62dd0e3bab098a4dd389a7942c2f4861f83443f", "patch": "@@ -542,15 +542,12 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n     }\n \n     fn visit_assoc_item(&mut self, i: &'a ast::AssocItem, ctxt: AssocCtxt) {\n-        if let ast::Defaultness::Default(_) = i.kind.defaultness() {\n-            gate_feature_post!(&self, specialization, i.span, \"specialization is unstable\");\n-        }\n-\n-        match i.kind {\n+        let is_fn = match i.kind {\n             ast::AssocItemKind::Fn(_, ref sig, _, _) => {\n                 if let (ast::Const::Yes(_), AssocCtxt::Trait) = (sig.header.constness, ctxt) {\n                     gate_feature_post!(&self, const_fn, i.span, \"const fn is unstable\");\n                 }\n+                true\n             }\n             ast::AssocItemKind::TyAlias(_, ref generics, _, ref ty) => {\n                 if let (Some(_), AssocCtxt::Trait) = (ty, ctxt) {\n@@ -565,8 +562,19 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     self.check_impl_trait(ty);\n                 }\n                 self.check_gat(generics, i.span);\n+                false\n             }\n-            _ => {}\n+            _ => false,\n+        };\n+        if let ast::Defaultness::Default(_) = i.kind.defaultness() {\n+            // Limit `min_specialization` to only specializing functions.\n+            gate_feature_fn!(\n+                &self,\n+                |x: &Features| x.specialization || (is_fn && x.min_specialization),\n+                i.span,\n+                sym::specialization,\n+                \"specialization is unstable\"\n+            );\n         }\n         visit::walk_assoc_item(self, i, ctxt)\n     }"}, {"sha": "9f1fee8fc09d8f31c9a57e7e54d7c17fc5fac63b", "filename": "src/librustc_feature/active.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a62dd0e3bab098a4dd389a7942c2f4861f83443f/src%2Flibrustc_feature%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a62dd0e3bab098a4dd389a7942c2f4861f83443f/src%2Flibrustc_feature%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Factive.rs?ref=a62dd0e3bab098a4dd389a7942c2f4861f83443f", "patch": "@@ -301,6 +301,11 @@ declare_features! (\n     /// Allows specialization of implementations (RFC 1210).\n     (active, specialization, \"1.7.0\", Some(31844), None),\n \n+    /// A minimal, sound subset of specialization intended to be used by the\n+    /// standard library until the soundness issues with specialization\n+    /// are fixed.\n+    (active, min_specialization, \"1.7.0\", Some(31844), None),\n+\n     /// Allows using `#[naked]` on functions.\n     (active, naked_functions, \"1.9.0\", Some(32408), None),\n "}, {"sha": "770253e635eecbd571596c3d26eea82161fc6bb2", "filename": "src/librustc_trait_selection/traits/specialize/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a62dd0e3bab098a4dd389a7942c2f4861f83443f/src%2Flibrustc_trait_selection%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a62dd0e3bab098a4dd389a7942c2f4861f83443f/src%2Flibrustc_trait_selection%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fspecialize%2Fmod.rs?ref=a62dd0e3bab098a4dd389a7942c2f4861f83443f", "patch": "@@ -161,7 +161,9 @@ pub(super) fn specializes(tcx: TyCtxt<'_>, (impl1_def_id, impl2_def_id): (DefId,\n \n     // The feature gate should prevent introducing new specializations, but not\n     // taking advantage of upstream ones.\n-    if !tcx.features().specialization && (impl1_def_id.is_local() || impl2_def_id.is_local()) {\n+    let features = tcx.features();\n+    let specialization_enabled = features.specialization || features.min_specialization;\n+    if !specialization_enabled && (impl1_def_id.is_local() || impl2_def_id.is_local()) {\n         return false;\n     }\n "}]}