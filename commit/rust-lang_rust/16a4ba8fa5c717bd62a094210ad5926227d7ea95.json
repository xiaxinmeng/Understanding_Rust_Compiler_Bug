{"sha": "16a4ba8fa5c717bd62a094210ad5926227d7ea95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YTRiYThmYTVjNzE3YmQ2MmEwOTQyMTBhZDU5MjYyMjdkN2VhOTU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-31T01:32:45Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-01T03:50:26Z"}, "message": "getopts: unbox closures used in let bindings", "tree": {"sha": "526ece984c0a575cf35290f3eb900bceeb8d4921", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/526ece984c0a575cf35290f3eb900bceeb8d4921"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16a4ba8fa5c717bd62a094210ad5926227d7ea95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16a4ba8fa5c717bd62a094210ad5926227d7ea95", "html_url": "https://github.com/rust-lang/rust/commit/16a4ba8fa5c717bd62a094210ad5926227d7ea95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16a4ba8fa5c717bd62a094210ad5926227d7ea95/comments", "author": null, "committer": null, "parents": [{"sha": "ddb4e43fa51de0186b6bab12353cb25f5e785a4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddb4e43fa51de0186b6bab12353cb25f5e785a4f", "html_url": "https://github.com/rust-lang/rust/commit/ddb4e43fa51de0186b6bab12353cb25f5e785a4f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0db0bd413ac949b5aa800db49f09b19265a31cba", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16a4ba8fa5c717bd62a094210ad5926227d7ea95/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16a4ba8fa5c717bd62a094210ad5926227d7ea95/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=16a4ba8fa5c717bd62a094210ad5926227d7ea95", "patch": "@@ -875,7 +875,7 @@ fn each_split_within<F>(ss: &str, lim: uint, mut it: F) -> bool where\n         lim = fake_i;\n     }\n \n-    let machine: |&mut bool, (uint, char)| -> bool = |cont, (i, c)| {\n+    let mut machine = |&mut: cont: &mut bool, (i, c): (uint, char)| -> bool {\n         let whitespace = if c.is_whitespace() { Ws }       else { Cr };\n         let limit      = if (i - slice_start + 1) <= lim  { UnderLim } else { OverLim };\n "}]}