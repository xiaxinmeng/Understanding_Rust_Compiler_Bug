{"sha": "c3778fae6f57d30381476ea0110cb445e52b407a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNzc4ZmFlNmY1N2QzMDM4MTQ3NmVhMDExMGNiNDQ1ZTUyYjQwN2E=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-15T20:35:34Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-15T20:35:34Z"}, "message": "libstd: add a dummy field to `OsRng` to avoid out of module construction", "tree": {"sha": "75b07a60b6c80ab45427b3f668fb85fb596d324e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75b07a60b6c80ab45427b3f668fb85fb596d324e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3778fae6f57d30381476ea0110cb445e52b407a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3778fae6f57d30381476ea0110cb445e52b407a", "html_url": "https://github.com/rust-lang/rust/commit/c3778fae6f57d30381476ea0110cb445e52b407a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3778fae6f57d30381476ea0110cb445e52b407a/comments", "author": null, "committer": null, "parents": [{"sha": "556d971f83ea5950444b0a5b5392cd0040f077f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/556d971f83ea5950444b0a5b5392cd0040f077f6", "html_url": "https://github.com/rust-lang/rust/commit/556d971f83ea5950444b0a5b5392cd0040f077f6"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "c1e426602694a077fb7ed0fa85fd4f38107e06d9", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c3778fae6f57d30381476ea0110cb445e52b407a/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3778fae6f57d30381476ea0110cb445e52b407a/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=c3778fae6f57d30381476ea0110cb445e52b407a", "patch": "@@ -187,7 +187,10 @@ mod imp {\n     /// - iOS: calls SecRandomCopyBytes as /dev/(u)random is sandboxed\n     /// This does not block.\n     #[allow(missing_copy_implementations)]\n-    pub struct OsRng;\n+    pub struct OsRng {\n+        // dummy field to ensure that this struct cannot be constructed outside of this module\n+        _dummy: (),\n+    }\n \n     #[repr(C)]\n     struct SecRandom;\n@@ -204,7 +207,7 @@ mod imp {\n     impl OsRng {\n         /// Create a new `OsRng`.\n         pub fn new() -> IoResult<OsRng> {\n-            Ok(OsRng)\n+            Ok(OsRng { _dummy: () })\n         }\n     }\n "}]}