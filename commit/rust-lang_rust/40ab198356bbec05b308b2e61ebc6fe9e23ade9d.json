{"sha": "40ab198356bbec05b308b2e61ebc6fe9e23ade9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwYWIxOTgzNTZiYmVjMDViMzA4YjJlNjFlYmM2ZmU5ZTIzYWRlOWQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-26T21:03:40Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-27T20:03:58Z"}, "message": "rustc: Use libnative for the compiler\n\nThe compiler itself doesn't necessarily need any features of green threading\nsuch as spawning tasks and lots of I/O, so libnative is slightly more\nappropriate for rustc to use itself.\n\nThis should also help the rusti bot which is currently incompatible with libuv.", "tree": {"sha": "a177fc5faeb60e7d2ca0ab5bc9b45f9f619087b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a177fc5faeb60e7d2ca0ab5bc9b45f9f619087b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40ab198356bbec05b308b2e61ebc6fe9e23ade9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40ab198356bbec05b308b2e61ebc6fe9e23ade9d", "html_url": "https://github.com/rust-lang/rust/commit/40ab198356bbec05b308b2e61ebc6fe9e23ade9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40ab198356bbec05b308b2e61ebc6fe9e23ade9d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd9010c77e764e9348ecd92dc4a285f6514505dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd9010c77e764e9348ecd92dc4a285f6514505dc", "html_url": "https://github.com/rust-lang/rust/commit/cd9010c77e764e9348ecd92dc4a285f6514505dc"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "45b6ed1a058d0c748266af3359aa545b3ad857aa", "filename": "mk/crates.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40ab198356bbec05b308b2e61ebc6fe9e23ade9d/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/40ab198356bbec05b308b2e61ebc6fe9e23ade9d/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=40ab198356bbec05b308b2e61ebc6fe9e23ade9d", "patch": "@@ -81,8 +81,8 @@ DEPS_test := std extra collections getopts serialize term\n DEPS_time := std serialize\n \n TOOL_DEPS_compiletest := test green rustuv getopts\n-TOOL_DEPS_rustdoc := rustdoc green rustuv\n-TOOL_DEPS_rustc := rustc green rustuv\n+TOOL_DEPS_rustdoc := rustdoc native\n+TOOL_DEPS_rustc := rustc native\n TOOL_SOURCE_compiletest := $(S)src/compiletest/compiletest.rs\n TOOL_SOURCE_rustdoc := $(S)src/driver/driver.rs\n TOOL_SOURCE_rustc := $(S)src/driver/driver.rs"}, {"sha": "0ceb12064b0eba316519db707dc9ab387cacee7d", "filename": "src/driver/driver.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/40ab198356bbec05b308b2e61ebc6fe9e23ade9d/src%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ab198356bbec05b308b2e61ebc6fe9e23ade9d/src%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fdriver.rs?ref=40ab198356bbec05b308b2e61ebc6fe9e23ade9d", "patch": "@@ -8,10 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[no_uv];\n+\n #[cfg(rustdoc)]\n extern crate this = \"rustdoc\";\n \n #[cfg(rustc)]\n extern crate this = \"rustc\";\n \n-fn main() { this::main() }\n+extern crate native;\n+\n+#[start]\n+fn start(argc: int, argv: **u8) -> int { native::start(argc, argv, this::main) }"}, {"sha": "e880bd05cf7fccf10935fb4218fb9105331b2482", "filename": "src/libnative/io/file_win32.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/40ab198356bbec05b308b2e61ebc6fe9e23ade9d/src%2Flibnative%2Fio%2Ffile_win32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ab198356bbec05b308b2e61ebc6fe9e23ade9d/src%2Flibnative%2Fio%2Ffile_win32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_win32.rs?ref=40ab198356bbec05b308b2e61ebc6fe9e23ade9d", "patch": "@@ -433,6 +433,7 @@ pub fn readlink(p: &CString) -> IoResult<Path> {\n                                         libc::VOLUME_NAME_DOS)\n     });\n     let ret = match ret {\n+        Some(ref s) if s.starts_with(r\"\\\\?\\\") => Ok(Path::new(s.slice_from(4))),\n         Some(s) => Ok(Path::new(s)),\n         None => Err(super::last_error()),\n     };"}, {"sha": "5f070ef782b4ec87674363f397f7558b9da7a986", "filename": "src/libstd/io/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/40ab198356bbec05b308b2e61ebc6fe9e23ade9d/src%2Flibstd%2Fio%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ab198356bbec05b308b2e61ebc6fe9e23ade9d/src%2Flibstd%2Fio%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ffs.rs?ref=40ab198356bbec05b308b2e61ebc6fe9e23ade9d", "patch": "@@ -1217,6 +1217,6 @@ mod test {\n \n         check!(File::create(&tmpdir.join(\"test\")).write(bytes));\n         let actual = check!(File::open(&tmpdir.join(\"test\")).read_to_end());\n-        assert!(actual.as_slice == bytes);\n+        assert!(actual.as_slice() == bytes);\n     })\n }"}]}