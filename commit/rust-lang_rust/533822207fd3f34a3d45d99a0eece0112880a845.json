{"sha": "533822207fd3f34a3d45d99a0eece0112880a845", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMzgyMjIwN2ZkM2YzNGEzZDQ1ZDk5YTBlZWNlMDExMjg4MGE4NDU=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-12-18T17:17:41Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-12-20T05:11:03Z"}, "message": "rustc: don't allow(non_camel_case_types) in resolve.", "tree": {"sha": "3bb0c83fe49ffcd850add05024b772c3b0a8dc37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bb0c83fe49ffcd850add05024b772c3b0a8dc37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/533822207fd3f34a3d45d99a0eece0112880a845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/533822207fd3f34a3d45d99a0eece0112880a845", "html_url": "https://github.com/rust-lang/rust/commit/533822207fd3f34a3d45d99a0eece0112880a845", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/533822207fd3f34a3d45d99a0eece0112880a845/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c2df5cc3cfc0c9e80adf9fa6504d55056741c5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2df5cc3cfc0c9e80adf9fa6504d55056741c5a", "html_url": "https://github.com/rust-lang/rust/commit/1c2df5cc3cfc0c9e80adf9fa6504d55056741c5a"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "49a8facffd26a802c24b095f5a09ba788cee88f6", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/533822207fd3f34a3d45d99a0eece0112880a845/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/533822207fd3f34a3d45d99a0eece0112880a845/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=533822207fd3f34a3d45d99a0eece0112880a845", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(non_camel_case_types)]\n-\n pub use self::PrivateDep::*;\n pub use self::ImportUse::*;\n pub use self::TraitItemKind::*;\n@@ -90,13 +88,13 @@ use std::uint;\n pub type DefMap = RefCell<NodeMap<Def>>;\n \n #[deriving(Copy)]\n-struct binding_info {\n+struct BindingInfo {\n     span: Span,\n     binding_mode: BindingMode,\n }\n \n // Map from the name in a pattern to its binding mode.\n-type BindingMap = HashMap<Name,binding_info>;\n+type BindingMap = HashMap<Name, BindingInfo>;\n \n // Trait method resolution\n pub type TraitMap = NodeMap<Vec<DefId> >;\n@@ -4809,9 +4807,10 @@ impl<'a> Resolver<'a> {\n         let mut result = HashMap::new();\n         pat_bindings(&self.def_map, pat, |binding_mode, _id, sp, path1| {\n             let name = mtwt::resolve(path1.node);\n-            result.insert(name,\n-                          binding_info {span: sp,\n-                                        binding_mode: binding_mode});\n+            result.insert(name, BindingInfo {\n+                span: sp,\n+                binding_mode: binding_mode\n+            });\n         });\n         return result;\n     }"}]}