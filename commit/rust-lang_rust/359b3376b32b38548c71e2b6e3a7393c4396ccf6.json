{"sha": "359b3376b32b38548c71e2b6e3a7393c4396ccf6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1OWIzMzc2YjMyYjM4NTQ4YzcxZTJiNmUzYTczOTNjNDM5NmNjZjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-29T12:54:40Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-29T12:54:40Z"}, "message": "Merge #1601\n\n1601: Inline snapshots for tests r=matklad a=theotherphil\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/1127.\r\n\r\nThe \"cargo format\" commits are required to get the formatting tests to pass. However, they actually mess up the formatting.\n\nCo-authored-by: Phil Ellison <phil.j.ellison@gmail.com>", "tree": {"sha": "7465f676da27b6ddc1421e901d41a4e44def0059", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7465f676da27b6ddc1421e901d41a4e44def0059"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/359b3376b32b38548c71e2b6e3a7393c4396ccf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/359b3376b32b38548c71e2b6e3a7393c4396ccf6", "html_url": "https://github.com/rust-lang/rust/commit/359b3376b32b38548c71e2b6e3a7393c4396ccf6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/359b3376b32b38548c71e2b6e3a7393c4396ccf6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "9e2925f340bfd109ce31e8e454187df30e609a60", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e2925f340bfd109ce31e8e454187df30e609a60", "html_url": "https://github.com/rust-lang/rust/commit/9e2925f340bfd109ce31e8e454187df30e609a60"}, {"sha": "67e75ca1261863d21b48620e36b1632043ef36f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/67e75ca1261863d21b48620e36b1632043ef36f9", "html_url": "https://github.com/rust-lang/rust/commit/67e75ca1261863d21b48620e36b1632043ef36f9"}], "stats": {"total": 1934, "additions": 870, "deletions": 1064}, "files": [{"sha": "a6b68be75ec83cf21f4db32c75c943f6ffecc2a8", "filename": "crates/ra_ide_api/src/completion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs?ref=359b3376b32b38548c71e2b6e3a7393c4396ccf6", "patch": "@@ -16,7 +16,7 @@ mod complete_postfix;\n use ra_db::SourceDatabase;\n \n #[cfg(test)]\n-use crate::completion::completion_item::{check_completion, do_completion};\n+use crate::completion::completion_item::do_completion;\n use crate::{\n     completion::{\n         completion_context::CompletionContext,"}, {"sha": "2000d953ad426ce46d9aa00143d88b2268182309", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 344, "deletions": 103, "changes": 447, "blob_url": "https://github.com/rust-lang/rust/blob/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=359b3376b32b38548c71e2b6e3a7393c4396ccf6", "patch": "@@ -121,172 +121,413 @@ impl ImportResolver {\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{check_completion, CompletionKind};\n+    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use insta::assert_debug_snapshot_matches;\n \n-    fn check_reference_completion(name: &str, code: &str) {\n-        check_completion(name, code, CompletionKind::Reference);\n+    fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n+        do_completion(code, CompletionKind::Reference)\n     }\n \n     #[test]\n     fn completes_bindings_from_let() {\n-        check_reference_completion(\n-            \"bindings_from_let\",\n-            r\"\n-            fn quux(x: i32) {\n-                let y = 92;\n-                1 + <|>;\n-                let z = ();\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn quux(x: i32) {\n+                    let y = 92;\n+                    1 + <|>;\n+                    let z = ();\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [91; 91),\n+        delete: [91; 91),\n+        insert: \"quux($0)\",\n+        kind: Function,\n+        detail: \"fn quux(x: i32)\",\n+    },\n+    CompletionItem {\n+        label: \"x\",\n+        source_range: [91; 91),\n+        delete: [91; 91),\n+        insert: \"x\",\n+        kind: Binding,\n+        detail: \"i32\",\n+    },\n+    CompletionItem {\n+        label: \"y\",\n+        source_range: [91; 91),\n+        delete: [91; 91),\n+        insert: \"y\",\n+        kind: Binding,\n+        detail: \"i32\",\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_bindings_from_if_let() {\n-        check_reference_completion(\n-            \"bindings_from_if_let\",\n-            r\"\n-            fn quux() {\n-                if let Some(x) = foo() {\n-                    let y = 92;\n-                };\n-                if let Some(a) = bar() {\n-                    let b = 62;\n-                    1 + <|>\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn quux() {\n+                    if let Some(x) = foo() {\n+                        let y = 92;\n+                    };\n+                    if let Some(a) = bar() {\n+                        let b = 62;\n+                        1 + <|>\n+                    }\n                 }\n-            }\n-            \",\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"a\",\n+        source_range: [242; 242),\n+        delete: [242; 242),\n+        insert: \"a\",\n+        kind: Binding,\n+    },\n+    CompletionItem {\n+        label: \"b\",\n+        source_range: [242; 242),\n+        delete: [242; 242),\n+        insert: \"b\",\n+        kind: Binding,\n+        detail: \"i32\",\n+    },\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [242; 242),\n+        delete: [242; 242),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux()\",\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_bindings_from_for() {\n-        check_reference_completion(\n-            \"bindings_from_for\",\n-            r\"\n-            fn quux() {\n-                for x in &[1, 2, 3] {\n-                    <|>\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn quux() {\n+                    for x in &[1, 2, 3] {\n+                        <|>\n+                    }\n                 }\n-            }\n-            \",\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux()\",\n+    },\n+    CompletionItem {\n+        label: \"x\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"x\",\n+        kind: Binding,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_generic_params() {\n-        check_reference_completion(\n-            \"generic_params\",\n-            r\"\n-            fn quux<T>() {\n-                <|>\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn quux<T>() {\n+                    <|>\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"T\",\n+        source_range: [52; 52),\n+        delete: [52; 52),\n+        insert: \"T\",\n+        kind: TypeParam,\n+    },\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [52; 52),\n+        delete: [52; 52),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux<T>()\",\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_generic_params_in_struct() {\n-        check_reference_completion(\n-            \"generic_params_in_struct\",\n-            r\"\n-            struct X<T> {\n-                x: <|>\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                struct X<T> {\n+                    x: <|>\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"T\",\n+        source_range: [54; 54),\n+        delete: [54; 54),\n+        insert: \"T\",\n+        kind: TypeParam,\n+    },\n+    CompletionItem {\n+        label: \"X\",\n+        source_range: [54; 54),\n+        delete: [54; 54),\n+        insert: \"X\",\n+        kind: Struct,\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_module_items() {\n-        check_reference_completion(\n-            \"module_items\",\n+        assert_debug_snapshot_matches!(\n+        do_reference_completion(\n             r\"\n-            struct Foo;\n-            enum Baz {}\n-            fn quux() {\n-                <|>\n-            }\n-            \",\n-        );\n+                struct Foo;\n+                enum Baz {}\n+                fn quux() {\n+                    <|>\n+                }\n+                \"\n+        ),\n+        @r###\"[\n+    CompletionItem {\n+        label: \"Baz\",\n+        source_range: [105; 105),\n+        delete: [105; 105),\n+        insert: \"Baz\",\n+        kind: Enum,\n+    },\n+    CompletionItem {\n+        label: \"Foo\",\n+        source_range: [105; 105),\n+        delete: [105; 105),\n+        insert: \"Foo\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [105; 105),\n+        delete: [105; 105),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux()\",\n+    },\n+]\"###\n+            );\n     }\n \n     #[test]\n     fn completes_extern_prelude() {\n-        check_reference_completion(\n-            \"extern_prelude\",\n-            r\"\n-            //- /lib.rs\n-            use <|>;\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                //- /lib.rs\n+                use <|>;\n \n-            //- /other_crate/lib.rs\n-            // nothing here\n-            \",\n+                //- /other_crate/lib.rs\n+                // nothing here\n+                \"\n+            ),\n+            @r#\"[\n+    CompletionItem {\n+        label: \"other_crate\",\n+        source_range: [4; 4),\n+        delete: [4; 4),\n+        insert: \"other_crate\",\n+        kind: Module,\n+    },\n+]\"#\n         );\n     }\n \n     #[test]\n     fn completes_module_items_in_nested_modules() {\n-        check_reference_completion(\n-            \"module_items_in_nested_modules\",\n-            r\"\n-            struct Foo;\n-            mod m {\n-                struct Bar;\n-                fn quux() { <|> }\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                struct Foo;\n+                mod m {\n+                    struct Bar;\n+                    fn quux() { <|> }\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Bar\",\n+        source_range: [117; 117),\n+        delete: [117; 117),\n+        insert: \"Bar\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [117; 117),\n+        delete: [117; 117),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux()\",\n+    },\n+]\"###\n         );\n     }\n \n     #[test]\n     fn completes_return_type() {\n-        check_reference_completion(\n-            \"return_type\",\n-            r\"\n-            struct Foo;\n-            fn x() -> <|>\n-            \",\n-        )\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                struct Foo;\n+                fn x() -> <|>\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Foo\",\n+        source_range: [55; 55),\n+        delete: [55; 55),\n+        insert: \"Foo\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"x\",\n+        source_range: [55; 55),\n+        delete: [55; 55),\n+        insert: \"x()$0\",\n+        kind: Function,\n+        detail: \"fn x()\",\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn dont_show_both_completions_for_shadowing() {\n-        check_reference_completion(\n-            \"dont_show_both_completions_for_shadowing\",\n-            r\"\n-            fn foo() {\n-                let bar = 92;\n-                {\n-                    let bar = 62;\n-                    <|>\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn foo() {\n+                    let bar = 92;\n+                    {\n+                        let bar = 62;\n+                        <|>\n+                    }\n                 }\n-            }\n-            \",\n-        )\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"bar\",\n+        source_range: [146; 146),\n+        delete: [146; 146),\n+        insert: \"bar\",\n+        kind: Binding,\n+        detail: \"i32\",\n+    },\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [146; 146),\n+        delete: [146; 146),\n+        insert: \"foo()$0\",\n+        kind: Function,\n+        detail: \"fn foo()\",\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn completes_self_in_methods() {\n-        check_reference_completion(\"self_in_methods\", r\"impl S { fn foo(&self) { <|> } }\")\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(r\"impl S { fn foo(&self) { <|> } }\"),\n+            @r#\"[\n+    CompletionItem {\n+        label: \"Self\",\n+        source_range: [25; 25),\n+        delete: [25; 25),\n+        insert: \"Self\",\n+        kind: TypeParam,\n+    },\n+    CompletionItem {\n+        label: \"self\",\n+        source_range: [25; 25),\n+        delete: [25; 25),\n+        insert: \"self\",\n+        kind: Binding,\n+        detail: \"&{unknown}\",\n+    },\n+]\"#\n+        );\n     }\n \n     #[test]\n     fn completes_prelude() {\n-        check_reference_completion(\n-            \"completes_prelude\",\n-            \"\n-            //- /main.rs\n-            fn foo() { let x: <|> }\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /main.rs\n+                fn foo() { let x: <|> }\n \n-            //- /std/lib.rs\n-            #[prelude_import]\n-            use prelude::*;\n+                //- /std/lib.rs\n+                #[prelude_import]\n+                use prelude::*;\n \n-            mod prelude {\n-                struct Option;\n-            }\n-            \",\n+                mod prelude {\n+                    struct Option;\n+                }\n+                \"\n+            ),\n+            @r#\"[\n+    CompletionItem {\n+        label: \"Option\",\n+        source_range: [18; 18),\n+        delete: [18; 18),\n+        insert: \"Option\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [18; 18),\n+        delete: [18; 18),\n+        insert: \"foo()$0\",\n+        kind: Function,\n+        detail: \"fn foo()\",\n+    },\n+    CompletionItem {\n+        label: \"std\",\n+        source_range: [18; 18),\n+        delete: [18; 18),\n+        insert: \"std\",\n+        kind: Module,\n+    },\n+]\"#\n         );\n     }\n }"}, {"sha": "a35f315118c7d0252139cd8259fd943f1444ee89", "filename": "crates/ra_ide_api/src/completion/complete_snippet.rs", "status": "modified", "additions": 57, "deletions": 20, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=359b3376b32b38548c71e2b6e3a7393c4396ccf6", "patch": "@@ -39,39 +39,76 @@ fn ${1:feature}() {\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{check_completion, CompletionKind};\n+    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use insta::assert_debug_snapshot_matches;\n \n-    fn check_snippet_completion(name: &str, code: &str) {\n-        check_completion(name, code, CompletionKind::Snippet);\n+    fn do_snippet_completion(code: &str) -> Vec<CompletionItem> {\n+        do_completion(code, CompletionKind::Snippet)\n     }\n \n     #[test]\n     fn completes_snippets_in_expressions() {\n-        check_snippet_completion(\"snippets_in_expressions\", r\"fn foo(x: i32) { <|> }\");\n+        assert_debug_snapshot_matches!(\n+                    do_snippet_completion(r\"fn foo(x: i32) { <|> }\"),\n+        @r#\"[\n+    CompletionItem {\n+        label: \"pd\",\n+        source_range: [17; 17),\n+        delete: [17; 17),\n+        insert: \"eprintln!(\\\"$0 = {:?}\\\", $0);\",\n+        kind: Snippet,\n+    },\n+    CompletionItem {\n+        label: \"ppd\",\n+        source_range: [17; 17),\n+        delete: [17; 17),\n+        insert: \"eprintln!(\\\"$0 = {:#?}\\\", $0);\",\n+        kind: Snippet,\n+    },\n+]\"#\n+                );\n     }\n \n     #[test]\n     fn should_not_complete_snippets_in_path() {\n-        check_snippet_completion(\n-            \"should_not_complete_snippets_in_path\",\n-            r\"fn foo(x: i32) { ::foo<|> }\",\n-        );\n-        check_snippet_completion(\n-            \"should_not_complete_snippets_in_path2\",\n-            r\"fn foo(x: i32) { ::<|> }\",\n-        );\n+        assert_debug_snapshot_matches!(\n+                    do_snippet_completion(r\"fn foo(x: i32) { ::foo<|> }\"),\n+        @r#\"[]\"#\n+                );\n+        assert_debug_snapshot_matches!(\n+                    do_snippet_completion(r\"fn foo(x: i32) { ::<|> }\"),\n+        @r#\"[]\"#\n+                );\n     }\n \n     #[test]\n     fn completes_snippets_in_items() {\n-        check_snippet_completion(\n-            \"snippets_in_items\",\n-            r\"\n-            #[cfg(test)]\n-            mod tests {\n-                <|>\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_snippet_completion(\n+                r\"\n+                #[cfg(test)]\n+                mod tests {\n+                    <|>\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Test function\",\n+        source_range: [78; 78),\n+        delete: [78; 78),\n+        insert: \"#[test]\\nfn ${1:feature}() {\\n    $0\\n}\",\n+        kind: Snippet,\n+        lookup: \"tfn\",\n+    },\n+    CompletionItem {\n+        label: \"pub(crate)\",\n+        source_range: [78; 78),\n+        delete: [78; 78),\n+        insert: \"pub(crate) $0\",\n+        kind: Snippet,\n+    },\n+]\"###\n         );\n     }\n }"}, {"sha": "d787bb69ed0125e9448bd22a84fc79bf22fb19af", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=359b3376b32b38548c71e2b6e3a7393c4396ccf6", "patch": "@@ -299,10 +299,3 @@ pub(crate) fn do_completion(code: &str, kind: CompletionKind) -> Vec<CompletionI\n     kind_completions.sort_by_key(|c| c.label.clone());\n     kind_completions\n }\n-\n-#[cfg(test)]\n-pub(crate) fn check_completion(test_name: &str, code: &str, kind: CompletionKind) {\n-    use insta::assert_debug_snapshot_matches;\n-    let kind_completions = do_completion(code, kind);\n-    assert_debug_snapshot_matches!(test_name, kind_completions);\n-}"}, {"sha": "6878008d3f0ec661ade9b6db734475341132b3d8", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 146, "deletions": 57, "changes": 203, "blob_url": "https://github.com/rust-lang/rust/blob/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=359b3376b32b38548c71e2b6e3a7393c4396ccf6", "patch": "@@ -182,80 +182,169 @@ impl Completions {\n \n #[cfg(test)]\n mod tests {\n+    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use insta::assert_debug_snapshot_matches;\n     use test_utils::covers;\n \n-    use crate::completion::{check_completion, CompletionKind};\n-\n-    fn check_reference_completion(code: &str, expected_completions: &str) {\n-        check_completion(code, expected_completions, CompletionKind::Reference);\n+    fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n+        do_completion(code, CompletionKind::Reference)\n     }\n \n     #[test]\n     fn inserts_parens_for_function_calls() {\n         covers!(inserts_parens_for_function_calls);\n-        check_reference_completion(\n-            \"inserts_parens_for_function_calls1\",\n-            r\"\n-            fn no_args() {}\n-            fn main() { no_<|> }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn no_args() {}\n+                fn main() { no_<|> }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"main\",\n+        source_range: [61; 64),\n+        delete: [61; 64),\n+        insert: \"main()$0\",\n+        kind: Function,\n+        detail: \"fn main()\",\n+    },\n+    CompletionItem {\n+        label: \"no_args\",\n+        source_range: [61; 64),\n+        delete: [61; 64),\n+        insert: \"no_args()$0\",\n+        kind: Function,\n+        detail: \"fn no_args()\",\n+    },\n+]\"###\n         );\n-        check_reference_completion(\n-            \"inserts_parens_for_function_calls2\",\n-            r\"\n-            fn with_args(x: i32, y: String) {}\n-            fn main() { with_<|> }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn with_args(x: i32, y: String) {}\n+                fn main() { with_<|> }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"main\",\n+        source_range: [80; 85),\n+        delete: [80; 85),\n+        insert: \"main()$0\",\n+        kind: Function,\n+        detail: \"fn main()\",\n+    },\n+    CompletionItem {\n+        label: \"with_args\",\n+        source_range: [80; 85),\n+        delete: [80; 85),\n+        insert: \"with_args($0)\",\n+        kind: Function,\n+        detail: \"fn with_args(x: i32, y: String)\",\n+    },\n+]\"###\n+        );\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                struct S {}\n+                impl S {\n+                    fn foo(&self) {}\n+                }\n+                fn bar(s: &S) {\n+                    s.f<|>\n+                }\n+                \"\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [163; 164),\n+        delete: [163; 164),\n+        insert: \"foo()$0\",\n+        kind: Method,\n+        detail: \"fn foo(&self)\",\n+    },\n+]\"###\n         );\n-        check_reference_completion(\n-            \"inserts_parens_for_function_calls3\",\n-            r\"\n-            struct S {}\n-            impl S {\n-                fn foo(&self) {}\n-            }\n-            fn bar(s: &S) {\n-                s.f<|>\n-            }\n-            \",\n-        )\n     }\n \n     #[test]\n     fn dont_render_function_parens_in_use_item() {\n-        check_reference_completion(\n-            \"dont_render_function_parens_in_use_item\",\n-            \"\n-            //- /lib.rs\n-            mod m { pub fn foo() {} }\n-            use crate::m::f<|>;\n-            \",\n-        )\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                mod m { pub fn foo() {} }\n+                use crate::m::f<|>;\n+                \"\n+            ),\n+            @r#\"[\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [40; 41),\n+        delete: [40; 41),\n+        insert: \"foo\",\n+        kind: Function,\n+        detail: \"pub fn foo()\",\n+    },\n+]\"#\n+        );\n     }\n \n     #[test]\n     fn dont_render_function_parens_if_already_call() {\n-        check_reference_completion(\n-            \"dont_render_function_parens_if_already_call\",\n-            \"\n-            //- /lib.rs\n-            fn frobnicate() {}\n-            fn main() {\n-                frob<|>();\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                fn frobnicate() {}\n+                fn main() {\n+                    frob<|>();\n+                }\n+                \"\n+            ),\n+            @r#\"[\n+    CompletionItem {\n+        label: \"frobnicate\",\n+        source_range: [35; 39),\n+        delete: [35; 39),\n+        insert: \"frobnicate\",\n+        kind: Function,\n+        detail: \"fn frobnicate()\",\n+    },\n+    CompletionItem {\n+        label: \"main\",\n+        source_range: [35; 39),\n+        delete: [35; 39),\n+        insert: \"main\",\n+        kind: Function,\n+        detail: \"fn main()\",\n+    },\n+]\"#\n+        );\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /lib.rs\n+                struct Foo {}\n+                impl Foo { fn new() -> Foo {} }\n+                fn main() {\n+                    Foo::ne<|>();\n+                }\n+                \"\n+            ),\n+            @r#\"[\n+    CompletionItem {\n+        label: \"new\",\n+        source_range: [67; 69),\n+        delete: [67; 69),\n+        insert: \"new\",\n+        kind: Function,\n+        detail: \"fn new() -> Foo\",\n+    },\n+]\"#\n         );\n-        check_reference_completion(\n-            \"dont_render_function_parens_if_already_call_assoc_fn\",\n-            \"\n-            //- /lib.rs\n-            struct Foo {}\n-            impl Foo { fn new() -> Foo {} }\n-            fn main() {\n-                Foo::ne<|>();\n-            }\n-            \",\n-        )\n     }\n-\n }"}, {"sha": "e9b717a45be0e12b4393e6dcbda5f18e64d3a8e9", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__bindings_from_for.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_for.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_for.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_for.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.119822026Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux()\",\n-    },\n-    CompletionItem {\n-        label: \"x\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"x\",\n-        kind: Binding,\n-    },\n-]"}, {"sha": "f94477b438075322ec817b63d69caf0aeec6460e", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__bindings_from_if_let.snap", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_if_let.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_if_let.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_if_let.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,31 +0,0 @@\n----\n-created: \"2019-07-23T16:11:48.828805910Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"a\",\n-        source_range: [214; 214),\n-        delete: [214; 214),\n-        insert: \"a\",\n-        kind: Binding,\n-    },\n-    CompletionItem {\n-        label: \"b\",\n-        source_range: [214; 214),\n-        delete: [214; 214),\n-        insert: \"b\",\n-        kind: Binding,\n-        detail: \"i32\",\n-    },\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [214; 214),\n-        delete: [214; 214),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux()\",\n-    },\n-]"}, {"sha": "590e2a820b00fd27ebb0be31a1052728f24caea8", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__bindings_from_let.snap", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_let.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_let.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_let.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,32 +0,0 @@\n----\n-created: \"2019-07-23T16:11:48.828811567Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [79; 79),\n-        delete: [79; 79),\n-        insert: \"quux($0)\",\n-        kind: Function,\n-        detail: \"fn quux(x: i32)\",\n-    },\n-    CompletionItem {\n-        label: \"x\",\n-        source_range: [79; 79),\n-        delete: [79; 79),\n-        insert: \"x\",\n-        kind: Binding,\n-        detail: \"i32\",\n-    },\n-    CompletionItem {\n-        label: \"y\",\n-        source_range: [79; 79),\n-        delete: [79; 79),\n-        insert: \"y\",\n-        kind: Binding,\n-        detail: \"i32\",\n-    },\n-]"}, {"sha": "b339c6c5f9b220188c917ef4d090bc7c30d67478", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__completes_prelude.snap", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_prelude.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_prelude.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_prelude.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,30 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.139262926Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Option\",\n-        source_range: [18; 18),\n-        delete: [18; 18),\n-        insert: \"Option\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [18; 18),\n-        delete: [18; 18),\n-        insert: \"foo()$0\",\n-        kind: Function,\n-        detail: \"fn foo()\",\n-    },\n-    CompletionItem {\n-        label: \"std\",\n-        source_range: [18; 18),\n-        delete: [18; 18),\n-        insert: \"std\",\n-        kind: Module,\n-    },\n-]"}, {"sha": "46bea2ccd40a23acf3616d0168bf0c45a647e1e6", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_render_function_parens_if_already_call.snap", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_if_already_call.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_if_already_call.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_if_already_call.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,24 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.158296242Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"frobnicate\",\n-        source_range: [35; 39),\n-        delete: [35; 39),\n-        insert: \"frobnicate\",\n-        kind: Function,\n-        detail: \"fn frobnicate()\",\n-    },\n-    CompletionItem {\n-        label: \"main\",\n-        source_range: [35; 39),\n-        delete: [35; 39),\n-        insert: \"main\",\n-        kind: Function,\n-        detail: \"fn main()\",\n-    },\n-]"}, {"sha": "b09a6745e6ad9cc5d2ffbd94c1c24a7fb5924a08", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_render_function_parens_if_already_call_assoc_fn.snap", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_if_already_call_assoc_fn.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_if_already_call_assoc_fn.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_if_already_call_assoc_fn.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,16 +0,0 @@\n----\n-created: \"2019-05-23T22:44:10.920136527Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"new\",\n-        source_range: [67; 69),\n-        delete: [67; 69),\n-        insert: \"new\",\n-        kind: Function,\n-        detail: \"fn new() -> Foo\",\n-    },\n-]"}, {"sha": "84ccc8160625a0bdd59366f8c6d461730a82f8f0", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_render_function_parens_in_use_item.snap", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_in_use_item.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_in_use_item.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_in_use_item.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,16 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.154795561Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [40; 41),\n-        delete: [40; 41),\n-        insert: \"foo\",\n-        kind: Function,\n-        detail: \"pub fn foo()\",\n-    },\n-]"}, {"sha": "158a2e5b934133a660b854126fff6f16bd2c9859", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_show_both_completions_for_shadowing.snap", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_show_both_completions_for_shadowing.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_show_both_completions_for_shadowing.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_show_both_completions_for_shadowing.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,24 +0,0 @@\n----\n-created: \"2019-07-23T16:11:48.860949870Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"bar\",\n-        source_range: [126; 126),\n-        delete: [126; 126),\n-        insert: \"bar\",\n-        kind: Binding,\n-        detail: \"i32\",\n-    },\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [126; 126),\n-        delete: [126; 126),\n-        insert: \"foo()$0\",\n-        kind: Function,\n-        detail: \"fn foo()\",\n-    },\n-]"}, {"sha": "b9449a76c11c9cb4e202ca72585b351aabb1e627", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__extern_prelude.snap", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__extern_prelude.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__extern_prelude.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__extern_prelude.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,15 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.123197049Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"other_crate\",\n-        source_range: [4; 4),\n-        delete: [4; 4),\n-        insert: \"other_crate\",\n-        kind: Module,\n-    },\n-]"}, {"sha": "eb1a4151af6adfa06c960d164edb98126e5541ed", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__generic_params.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.123825399Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"T\",\n-        source_range: [44; 44),\n-        delete: [44; 44),\n-        insert: \"T\",\n-        kind: TypeParam,\n-    },\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [44; 44),\n-        delete: [44; 44),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux<T>()\",\n-    },\n-]"}, {"sha": "52f08267f71d09955b71c73d9084c135a7a23be4", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__generic_params_in_struct.snap", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params_in_struct.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params_in_struct.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params_in_struct.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,22 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.130778739Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"T\",\n-        source_range: [46; 46),\n-        delete: [46; 46),\n-        insert: \"T\",\n-        kind: TypeParam,\n-    },\n-    CompletionItem {\n-        label: \"X\",\n-        source_range: [46; 46),\n-        delete: [46; 46),\n-        insert: \"X\",\n-        kind: Struct,\n-    },\n-]"}, {"sha": "c795b9aaee8be3037ce6eae117fae07f92f53d5f", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__inserts_parens_for_function_calls1.snap", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls1.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,24 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.156115632Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"main\",\n-        source_range: [53; 56),\n-        delete: [53; 56),\n-        insert: \"main()$0\",\n-        kind: Function,\n-        detail: \"fn main()\",\n-    },\n-    CompletionItem {\n-        label: \"no_args\",\n-        source_range: [53; 56),\n-        delete: [53; 56),\n-        insert: \"no_args()$0\",\n-        kind: Function,\n-        detail: \"fn no_args()\",\n-    },\n-]"}, {"sha": "b49a838e0e512bd680d7fb35ae128c01b20c95f4", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__inserts_parens_for_function_calls2.snap", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls2.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,24 +0,0 @@\n----\n-created: \"2019-05-23T22:44:10.916806744Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"main\",\n-        source_range: [72; 77),\n-        delete: [72; 77),\n-        insert: \"main()$0\",\n-        kind: Function,\n-        detail: \"fn main()\",\n-    },\n-    CompletionItem {\n-        label: \"with_args\",\n-        source_range: [72; 77),\n-        delete: [72; 77),\n-        insert: \"with_args($0)\",\n-        kind: Function,\n-        detail: \"fn with_args(x: i32, y: String)\",\n-    },\n-]"}, {"sha": "b62cb7aa1262123075250b627d0677443b204940", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__inserts_parens_for_function_calls3.snap", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls3.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls3.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls3.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,16 +0,0 @@\n----\n-created: \"2019-05-23T22:44:40.543731193Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [139; 140),\n-        delete: [139; 140),\n-        insert: \"foo()$0\",\n-        kind: Method,\n-        detail: \"fn foo(&self)\",\n-    },\n-]"}, {"sha": "cee4898c3e8b48c97cf7b7705db0e599ce931e7d", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__module_items.snap", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,30 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.133106898Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Baz\",\n-        source_range: [89; 89),\n-        delete: [89; 89),\n-        insert: \"Baz\",\n-        kind: Enum,\n-    },\n-    CompletionItem {\n-        label: \"Foo\",\n-        source_range: [89; 89),\n-        delete: [89; 89),\n-        insert: \"Foo\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [89; 89),\n-        delete: [89; 89),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux()\",\n-    },\n-]"}, {"sha": "ce18e5bb7c2d075a9262ee126329e658b0268ea5", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__module_items_in_nested_modules.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items_in_nested_modules.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items_in_nested_modules.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items_in_nested_modules.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.134417551Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Bar\",\n-        source_range: [101; 101),\n-        delete: [101; 101),\n-        insert: \"Bar\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [101; 101),\n-        delete: [101; 101),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux()\",\n-    },\n-]"}, {"sha": "16dd18431b412ac386322f24c66b7db4eaaf495d", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__return_type.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__return_type.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__return_type.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__return_type.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.140648630Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Foo\",\n-        source_range: [47; 47),\n-        delete: [47; 47),\n-        insert: \"Foo\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"x\",\n-        source_range: [47; 47),\n-        delete: [47; 47),\n-        insert: \"x()$0\",\n-        kind: Function,\n-        detail: \"fn x()\",\n-    },\n-]"}, {"sha": "b7bcbe864783eb9b10e650d85eee7af5e41d3306", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__self_in_methods.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__self_in_methods.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__self_in_methods.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__self_in_methods.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-07-23T16:11:48.859812318Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Self\",\n-        source_range: [25; 25),\n-        delete: [25; 25),\n-        insert: \"Self\",\n-        kind: TypeParam,\n-    },\n-    CompletionItem {\n-        label: \"self\",\n-        source_range: [25; 25),\n-        delete: [25; 25),\n-        insert: \"self\",\n-        kind: Binding,\n-        detail: \"&{unknown}\",\n-    },\n-]"}, {"sha": "cb3278edf08664a39b37d1036665906ef6905cec", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__should_not_complete_snippets_in_path.snap", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__should_not_complete_snippets_in_path.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__should_not_complete_snippets_in_path.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__should_not_complete_snippets_in_path.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,5 +0,0 @@\n-Created: 2019-01-23T05:19:36.475253+00:00\n-Creator: insta@0.1.4\n-Source: crates/ra_ide_api/src/completion/completion_item.rs\n-\n-[]"}, {"sha": "62c8e3de9313181f0585d44a8b2abdb3e3f0396e", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__should_not_complete_snippets_in_path2.snap", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__should_not_complete_snippets_in_path2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__should_not_complete_snippets_in_path2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__should_not_complete_snippets_in_path2.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,5 +0,0 @@\n-Created: 2019-01-23T05:19:36.476869+00:00\n-Creator: insta@0.1.4\n-Source: crates/ra_ide_api/src/completion/completion_item.rs\n-\n-[]"}, {"sha": "6f41bf76f9792d9bc0d396057f6c9d8edf37bf7e", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__snippets_in_expressions.snap", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_expressions.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_expressions.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_expressions.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,22 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.141901047Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"pd\",\n-        source_range: [17; 17),\n-        delete: [17; 17),\n-        insert: \"eprintln!(\\\"$0 = {:?}\\\", $0);\",\n-        kind: Snippet,\n-    },\n-    CompletionItem {\n-        label: \"ppd\",\n-        source_range: [17; 17),\n-        delete: [17; 17),\n-        insert: \"eprintln!(\\\"$0 = {:#?}\\\", $0);\",\n-        kind: Snippet,\n-    },\n-]"}, {"sha": "1eb0adebeabde7d1a8aa401fd84ce7d6d86dcbaa", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__snippets_in_items.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_items.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_items.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_items.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.149234118Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Test function\",\n-        source_range: [66; 66),\n-        delete: [66; 66),\n-        insert: \"#[test]\\nfn ${1:feature}() {\\n    $0\\n}\",\n-        kind: Snippet,\n-        lookup: \"tfn\",\n-    },\n-    CompletionItem {\n-        label: \"pub(crate)\",\n-        source_range: [66; 66),\n-        delete: [66; 66),\n-        insert: \"pub(crate) $0\",\n-        kind: Snippet,\n-    },\n-]"}, {"sha": "102efc0267506d39d615094c19dbf229a6126aea", "filename": "crates/ra_ide_api/src/display/snapshots/tests__file_structure.snap", "status": "removed", "additions": 0, "deletions": 191, "changes": 191, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fsnapshots%2Ftests__file_structure.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fsnapshots%2Ftests__file_structure.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fsnapshots%2Ftests__file_structure.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,191 +0,0 @@\n----\n-created: \"2019-06-28T20:46:18.274464142Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/display/structure.rs\n-expression: structure\n----\n-[\n-    StructureNode {\n-        parent: None,\n-        label: \"Foo\",\n-        navigation_range: [8; 11),\n-        node_range: [1; 26),\n-        kind: STRUCT_DEF,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            0,\n-        ),\n-        label: \"x\",\n-        navigation_range: [18; 19),\n-        node_range: [18; 24),\n-        kind: NAMED_FIELD_DEF,\n-        detail: Some(\n-            \"i32\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"m\",\n-        navigation_range: [32; 33),\n-        node_range: [28; 158),\n-        kind: MODULE,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            2,\n-        ),\n-        label: \"bar1\",\n-        navigation_range: [43; 47),\n-        node_range: [40; 52),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn()\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            2,\n-        ),\n-        label: \"bar2\",\n-        navigation_range: [60; 64),\n-        node_range: [57; 81),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn<T>(t: T) -> T\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            2,\n-        ),\n-        label: \"bar3\",\n-        navigation_range: [89; 93),\n-        node_range: [86; 156),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn<A, B>(a: A, b: B) -> Vec< u32 >\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"E\",\n-        navigation_range: [165; 166),\n-        node_range: [160; 180),\n-        kind: ENUM_DEF,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            6,\n-        ),\n-        label: \"X\",\n-        navigation_range: [169; 170),\n-        node_range: [169; 170),\n-        kind: ENUM_VARIANT,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            6,\n-        ),\n-        label: \"Y\",\n-        navigation_range: [172; 173),\n-        node_range: [172; 178),\n-        kind: ENUM_VARIANT,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"T\",\n-        navigation_range: [186; 187),\n-        node_range: [181; 193),\n-        kind: TYPE_ALIAS_DEF,\n-        detail: Some(\n-            \"()\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"S\",\n-        navigation_range: [201; 202),\n-        node_range: [194; 213),\n-        kind: STATIC_DEF,\n-        detail: Some(\n-            \"i32\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"C\",\n-        navigation_range: [220; 221),\n-        node_range: [214; 232),\n-        kind: CONST_DEF,\n-        detail: Some(\n-            \"i32\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"impl E\",\n-        navigation_range: [239; 240),\n-        node_range: [234; 243),\n-        kind: IMPL_BLOCK,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"impl fmt::Debug for E\",\n-        navigation_range: [265; 266),\n-        node_range: [245; 269),\n-        kind: IMPL_BLOCK,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"mc\",\n-        navigation_range: [284; 286),\n-        node_range: [271; 303),\n-        kind: MACRO_CALL,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"obsolete\",\n-        navigation_range: [322; 330),\n-        node_range: [305; 335),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn()\",\n-        ),\n-        deprecated: true,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"very_obsolete\",\n-        navigation_range: [375; 388),\n-        node_range: [337; 393),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn()\",\n-        ),\n-        deprecated: true,\n-    },\n-]"}, {"sha": "b026dfa59df87019734eb468e507f8268e39f005", "filename": "crates/ra_ide_api/src/display/structure.rs", "status": "modified", "additions": 187, "deletions": 1, "changes": 188, "blob_url": "https://github.com/rust-lang/rust/blob/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs?ref=359b3376b32b38548c71e2b6e3a7393c4396ccf6", "patch": "@@ -204,6 +204,192 @@ fn very_obsolete() {}\n         .ok()\n         .unwrap();\n         let structure = file_structure(&file);\n-        assert_debug_snapshot_matches!(\"file_structure\", structure);\n+        assert_debug_snapshot_matches!(structure,\n+        @r#\"[\n+    StructureNode {\n+        parent: None,\n+        label: \"Foo\",\n+        navigation_range: [8; 11),\n+        node_range: [1; 26),\n+        kind: STRUCT_DEF,\n+        detail: None,\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: Some(\n+            0,\n+        ),\n+        label: \"x\",\n+        navigation_range: [18; 19),\n+        node_range: [18; 24),\n+        kind: NAMED_FIELD_DEF,\n+        detail: Some(\n+            \"i32\",\n+        ),\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"m\",\n+        navigation_range: [32; 33),\n+        node_range: [28; 158),\n+        kind: MODULE,\n+        detail: None,\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: Some(\n+            2,\n+        ),\n+        label: \"bar1\",\n+        navigation_range: [43; 47),\n+        node_range: [40; 52),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn()\",\n+        ),\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: Some(\n+            2,\n+        ),\n+        label: \"bar2\",\n+        navigation_range: [60; 64),\n+        node_range: [57; 81),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn<T>(t: T) -> T\",\n+        ),\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: Some(\n+            2,\n+        ),\n+        label: \"bar3\",\n+        navigation_range: [89; 93),\n+        node_range: [86; 156),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn<A, B>(a: A, b: B) -> Vec< u32 >\",\n+        ),\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"E\",\n+        navigation_range: [165; 166),\n+        node_range: [160; 180),\n+        kind: ENUM_DEF,\n+        detail: None,\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: Some(\n+            6,\n+        ),\n+        label: \"X\",\n+        navigation_range: [169; 170),\n+        node_range: [169; 170),\n+        kind: ENUM_VARIANT,\n+        detail: None,\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: Some(\n+            6,\n+        ),\n+        label: \"Y\",\n+        navigation_range: [172; 173),\n+        node_range: [172; 178),\n+        kind: ENUM_VARIANT,\n+        detail: None,\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"T\",\n+        navigation_range: [186; 187),\n+        node_range: [181; 193),\n+        kind: TYPE_ALIAS_DEF,\n+        detail: Some(\n+            \"()\",\n+        ),\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"S\",\n+        navigation_range: [201; 202),\n+        node_range: [194; 213),\n+        kind: STATIC_DEF,\n+        detail: Some(\n+            \"i32\",\n+        ),\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"C\",\n+        navigation_range: [220; 221),\n+        node_range: [214; 232),\n+        kind: CONST_DEF,\n+        detail: Some(\n+            \"i32\",\n+        ),\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"impl E\",\n+        navigation_range: [239; 240),\n+        node_range: [234; 243),\n+        kind: IMPL_BLOCK,\n+        detail: None,\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"impl fmt::Debug for E\",\n+        navigation_range: [265; 266),\n+        node_range: [245; 269),\n+        kind: IMPL_BLOCK,\n+        detail: None,\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"mc\",\n+        navigation_range: [284; 286),\n+        node_range: [271; 303),\n+        kind: MACRO_CALL,\n+        detail: None,\n+        deprecated: false,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"obsolete\",\n+        navigation_range: [322; 330),\n+        node_range: [305; 335),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn()\",\n+        ),\n+        deprecated: true,\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"very_obsolete\",\n+        navigation_range: [375; 388),\n+        node_range: [337; 393),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn()\",\n+        ),\n+        deprecated: true,\n+    },\n+]\"#\n+                );\n     }\n }"}, {"sha": "2118e7ad3e68c6efdedb3f8f471c71dbbc853d65", "filename": "crates/ra_ide_api/src/references.rs", "status": "modified", "additions": 67, "deletions": 2, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences.rs?ref=359b3376b32b38548c71e2b6e3a7393c4396ccf6", "patch": "@@ -341,7 +341,39 @@ mod tests {\n         );\n         let new_name = \"foo2\";\n         let source_change = analysis.rename(position, new_name).unwrap();\n-        assert_debug_snapshot_matches!(\"rename_mod\", &source_change);\n+        assert_debug_snapshot_matches!(&source_change,\n+@r#\"Some(\n+    SourceChange {\n+        label: \"rename\",\n+        source_file_edits: [\n+            SourceFileEdit {\n+                file_id: FileId(\n+                    2,\n+                ),\n+                edit: TextEdit {\n+                    atoms: [\n+                        AtomTextEdit {\n+                            delete: [4; 7),\n+                            insert: \"foo2\",\n+                        },\n+                    ],\n+                },\n+            },\n+        ],\n+        file_system_edits: [\n+            MoveFile {\n+                src: FileId(\n+                    3,\n+                ),\n+                dst_source_root: SourceRootId(\n+                    0,\n+                ),\n+                dst_path: \"bar/foo2.rs\",\n+            },\n+        ],\n+        cursor_position: None,\n+    },\n+)\"#);\n     }\n \n     #[test]\n@@ -356,7 +388,40 @@ mod tests {\n         );\n         let new_name = \"foo2\";\n         let source_change = analysis.rename(position, new_name).unwrap();\n-        assert_debug_snapshot_matches!(\"rename_mod_in_dir\", &source_change);\n+        assert_debug_snapshot_matches!(&source_change,\n+        @r###\"Some(\n+    SourceChange {\n+        label: \"rename\",\n+        source_file_edits: [\n+            SourceFileEdit {\n+                file_id: FileId(\n+                    1,\n+                ),\n+                edit: TextEdit {\n+                    atoms: [\n+                        AtomTextEdit {\n+                            delete: [4; 7),\n+                            insert: \"foo2\",\n+                        },\n+                    ],\n+                },\n+            },\n+        ],\n+        file_system_edits: [\n+            MoveFile {\n+                src: FileId(\n+                    2,\n+                ),\n+                dst_source_root: SourceRootId(\n+                    0,\n+                ),\n+                dst_path: \"foo2/mod.rs\",\n+            },\n+        ],\n+        cursor_position: None,\n+    },\n+)\"###\n+               );\n     }\n \n     fn test_rename(text: &str, new_name: &str, expected: &str) {"}, {"sha": "09c082de9cfdd8abb10f3f6adf3a66e5045e9a8a", "filename": "crates/ra_ide_api/src/runnables.rs", "status": "modified", "additions": 68, "deletions": 4, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359b3376b32b38548c71e2b6e3a7393c4396ccf6/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs?ref=359b3376b32b38548c71e2b6e3a7393c4396ccf6", "patch": "@@ -92,7 +92,26 @@ mod tests {\n         \"#,\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n-        assert_debug_snapshot_matches!(\"runnables\", &runnables)\n+        assert_debug_snapshot_matches!(&runnables,\n+        @r#\"[\n+    Runnable {\n+        range: [1; 21),\n+        kind: Bin,\n+    },\n+    Runnable {\n+        range: [22; 46),\n+        kind: Test {\n+            name: \"test_foo\",\n+        },\n+    },\n+    Runnable {\n+        range: [47; 81),\n+        kind: Test {\n+            name: \"test_foo\",\n+        },\n+    },\n+]\"#\n+                );\n     }\n \n     #[test]\n@@ -108,7 +127,22 @@ mod tests {\n         \"#,\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n-        assert_debug_snapshot_matches!(\"runnables_module\", &runnables)\n+        assert_debug_snapshot_matches!(&runnables,\n+        @r#\"[\n+    Runnable {\n+        range: [1; 59),\n+        kind: TestMod {\n+            path: \"test_mod\",\n+        },\n+    },\n+    Runnable {\n+        range: [28; 57),\n+        kind: Test {\n+            name: \"test_foo1\",\n+        },\n+    },\n+]\"#\n+                );\n     }\n \n     #[test]\n@@ -126,7 +160,22 @@ mod tests {\n         \"#,\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n-        assert_debug_snapshot_matches!(\"runnables_one_depth_layer_module\", &runnables)\n+        assert_debug_snapshot_matches!(&runnables,\n+        @r#\"[\n+    Runnable {\n+        range: [23; 85),\n+        kind: TestMod {\n+            path: \"foo::test_mod\",\n+        },\n+    },\n+    Runnable {\n+        range: [46; 79),\n+        kind: Test {\n+            name: \"test_foo1\",\n+        },\n+    },\n+]\"#\n+                );\n     }\n \n     #[test]\n@@ -146,7 +195,22 @@ mod tests {\n         \"#,\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n-        assert_debug_snapshot_matches!(\"runnables_multiple_depth_module\", &runnables)\n+        assert_debug_snapshot_matches!(&runnables,\n+        @r#\"[\n+    Runnable {\n+        range: [41; 115),\n+        kind: TestMod {\n+            path: \"foo::bar::test_mod\",\n+        },\n+    },\n+    Runnable {\n+        range: [68; 105),\n+        kind: Test {\n+            name: \"test_foo1\",\n+        },\n+    },\n+]\"#\n+                );\n     }\n \n     #[test]"}, {"sha": "ae8923e75f151803b8243b221ca6eb0afedd609d", "filename": "crates/ra_ide_api/src/snapshots/tests__highlights_code_inside_macros.snap", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlights_code_inside_macros.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlights_code_inside_macros.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlights_code_inside_macros.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,44 +0,0 @@\n----\n-created: \"2019-02-01T07:46:59.130146403+00:00\"\n-creator: insta@0.5.3\n-expression: \"&highlights\"\n-source: crates/ra_ide_api/src/syntax_highlighting.rs\n----\n-[\n-    HighlightedRange {\n-        range: [13; 15),\n-        tag: \"keyword\"\n-    },\n-    HighlightedRange {\n-        range: [16; 20),\n-        tag: \"function\"\n-    },\n-    HighlightedRange {\n-        range: [41; 45),\n-        tag: \"macro\"\n-    },\n-    HighlightedRange {\n-        range: [48; 51),\n-        tag: \"keyword\"\n-    },\n-    HighlightedRange {\n-        range: [56; 58),\n-        tag: \"literal\"\n-    },\n-    HighlightedRange {\n-        range: [48; 51),\n-        tag: \"keyword\"\n-    },\n-    HighlightedRange {\n-        range: [52; 53),\n-        tag: \"function\"\n-    },\n-    HighlightedRange {\n-        range: [56; 58),\n-        tag: \"literal\"\n-    },\n-    HighlightedRange {\n-        range: [60; 61),\n-        tag: \"text\"\n-    }\n-]"}, {"sha": "431de5c5591a9d6afe32b8996f052808365d460a", "filename": "crates/ra_ide_api/src/snapshots/tests__rename_mod.snap", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__rename_mod.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__rename_mod.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__rename_mod.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,38 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.215905447Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/references.rs\n-expression: \"&source_change\"\n----\n-Some(\n-    SourceChange {\n-        label: \"rename\",\n-        source_file_edits: [\n-            SourceFileEdit {\n-                file_id: FileId(\n-                    2,\n-                ),\n-                edit: TextEdit {\n-                    atoms: [\n-                        AtomTextEdit {\n-                            delete: [4; 7),\n-                            insert: \"foo2\",\n-                        },\n-                    ],\n-                },\n-            },\n-        ],\n-        file_system_edits: [\n-            MoveFile {\n-                src: FileId(\n-                    3,\n-                ),\n-                dst_source_root: SourceRootId(\n-                    0,\n-                ),\n-                dst_path: \"bar/foo2.rs\",\n-            },\n-        ],\n-        cursor_position: None,\n-    },\n-)"}, {"sha": "aaff9b4b50ccabb1cacf56cb3ac649ea64c54ee6", "filename": "crates/ra_ide_api/src/snapshots/tests__rename_mod_in_dir.snap", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__rename_mod_in_dir.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__rename_mod_in_dir.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__rename_mod_in_dir.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,38 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.213830371Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/references.rs\n-expression: \"&source_change\"\n----\n-Some(\n-    SourceChange {\n-        label: \"rename\",\n-        source_file_edits: [\n-            SourceFileEdit {\n-                file_id: FileId(\n-                    1,\n-                ),\n-                edit: TextEdit {\n-                    atoms: [\n-                        AtomTextEdit {\n-                            delete: [4; 7),\n-                            insert: \"foo2\",\n-                        },\n-                    ],\n-                },\n-            },\n-        ],\n-        file_system_edits: [\n-            MoveFile {\n-                src: FileId(\n-                    2,\n-                ),\n-                dst_source_root: SourceRootId(\n-                    0,\n-                ),\n-                dst_path: \"foo2/mod.rs\",\n-            },\n-        ],\n-        cursor_position: None,\n-    },\n-)"}, {"sha": "de2fadd7f54b5f7ac70213389bb067b9fbdda8ab", "filename": "crates/ra_ide_api/src/snapshots/tests__runnables.snap", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,24 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.217100106Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/runnables.rs\n-expression: \"&runnables\"\n----\n-[\n-    Runnable {\n-        range: [1; 21),\n-        kind: Bin,\n-    },\n-    Runnable {\n-        range: [22; 46),\n-        kind: Test {\n-            name: \"test_foo\",\n-        },\n-    },\n-    Runnable {\n-        range: [47; 81),\n-        kind: Test {\n-            name: \"test_foo\",\n-        },\n-    },\n-]"}, {"sha": "23993a97f0f9146311134494fa7604e6368c8f9d", "filename": "crates/ra_ide_api/src/snapshots/tests__runnables_module.snap", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_module.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_module.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_module.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,20 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.219258850Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/runnables.rs\n-expression: \"&runnables\"\n----\n-[\n-    Runnable {\n-        range: [1; 59),\n-        kind: TestMod {\n-            path: \"test_mod\",\n-        },\n-    },\n-    Runnable {\n-        range: [28; 57),\n-        kind: Test {\n-            name: \"test_foo1\",\n-        },\n-    },\n-]"}, {"sha": "c516a61dfc1cc9e7ed6076b4f9876170869b00ec", "filename": "crates/ra_ide_api/src/snapshots/tests__runnables_multiple_depth_module.snap", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_multiple_depth_module.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_multiple_depth_module.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_multiple_depth_module.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,20 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.219671663Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/runnables.rs\n-expression: \"&runnables\"\n----\n-[\n-    Runnable {\n-        range: [41; 115),\n-        kind: TestMod {\n-            path: \"foo::bar::test_mod\",\n-        },\n-    },\n-    Runnable {\n-        range: [68; 105),\n-        kind: Test {\n-            name: \"test_foo1\",\n-        },\n-    },\n-]"}, {"sha": "b02e6707ef273c8aaadc0257603c87ae1ee86aa7", "filename": "crates/ra_ide_api/src/snapshots/tests__runnables_one_depth_layer_module.snap", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_one_depth_layer_module.snap", "raw_url": "https://github.com/rust-lang/rust/raw/9e2925f340bfd109ce31e8e454187df30e609a60/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_one_depth_layer_module.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__runnables_one_depth_layer_module.snap?ref=9e2925f340bfd109ce31e8e454187df30e609a60", "patch": "@@ -1,20 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.224315047Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/runnables.rs\n-expression: \"&runnables\"\n----\n-[\n-    Runnable {\n-        range: [23; 85),\n-        kind: TestMod {\n-            path: \"foo::test_mod\",\n-        },\n-    },\n-    Runnable {\n-        range: [46; 79),\n-        kind: Test {\n-            name: \"test_foo1\",\n-        },\n-    },\n-]"}]}