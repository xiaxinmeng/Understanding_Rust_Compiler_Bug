{"sha": "96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YjgzZWJiN2NjMmFjOGQ3NzM0ZjJkZmFlYjRlOTNlODY2NmJlYTI=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-12-17T08:54:37Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-12-17T08:54:37Z"}, "message": "Improve compiletest target detection.", "tree": {"sha": "f2888c656062bb9e64e191f7bcbc748f8b10dbf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2888c656062bb9e64e191f7bcbc748f8b10dbf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2", "html_url": "https://github.com/rust-lang/rust/commit/96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42239e69bf43ee7dbda05cf757f86f10a0f16272", "url": "https://api.github.com/repos/rust-lang/rust/commits/42239e69bf43ee7dbda05cf757f86f10a0f16272", "html_url": "https://github.com/rust-lang/rust/commit/42239e69bf43ee7dbda05cf757f86f10a0f16272"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "50970086ee541e2d503fdedc277c5e2fe32273a1", "filename": "tests/compiletest.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2", "patch": "@@ -36,10 +36,17 @@ fn miri_pass(path: &str, target: &str) {\n     compiletest::run_tests(&config);\n }\n \n+fn is_target_dir<P: Into<PathBuf>>(path: P) -> bool {\n+    let mut path = path.into();\n+    path.push(\"lib\");\n+    path.metadata().map(|m| m.is_dir()).unwrap_or(false)\n+}\n+\n fn for_all_targets<F: FnMut(String)>(sysroot: &str, mut f: F) {\n-    for target in std::fs::read_dir(format!(\"{}/lib/rustlib/\", sysroot)).unwrap() {\n-        let target = target.unwrap().file_name().into_string().unwrap();\n-        if !target.contains(\"-\") { continue; }\n+    for entry in std::fs::read_dir(format!(\"{}/lib/rustlib/\", sysroot)).unwrap() {\n+        let entry = entry.unwrap();\n+        if !is_target_dir(entry.path()) { continue; }\n+        let target = entry.file_name().into_string().unwrap();\n         let stderr = std::io::stderr();\n         writeln!(stderr.lock(), \"running tests for target {}\", target).unwrap();\n         f(target);"}]}