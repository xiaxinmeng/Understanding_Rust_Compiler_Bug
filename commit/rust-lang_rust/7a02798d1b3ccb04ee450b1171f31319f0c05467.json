{"sha": "7a02798d1b3ccb04ee450b1171f31319f0c05467", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMDI3OThkMWIzY2NiMDRlZTQ1MGIxMTcxZjMxMzE5ZjBjMDU0Njc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-15T20:30:09Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-15T20:30:09Z"}, "message": "Change another typestate check to an expr check.", "tree": {"sha": "e7600a90ed74cca373c5120e97ab025f3bf00ee9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7600a90ed74cca373c5120e97ab025f3bf00ee9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a02798d1b3ccb04ee450b1171f31319f0c05467", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a02798d1b3ccb04ee450b1171f31319f0c05467", "html_url": "https://github.com/rust-lang/rust/commit/7a02798d1b3ccb04ee450b1171f31319f0c05467", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a02798d1b3ccb04ee450b1171f31319f0c05467/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ae89bd404803be6b820189d8e0480b3395d05ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ae89bd404803be6b820189d8e0480b3395d05ee", "html_url": "https://github.com/rust-lang/rust/commit/9ae89bd404803be6b820189d8e0480b3395d05ee"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "83caf891a03794f183543e32b5679c587ec83a5f", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a02798d1b3ccb04ee450b1171f31319f0c05467/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a02798d1b3ccb04ee450b1171f31319f0c05467/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=7a02798d1b3ccb04ee450b1171f31319f0c05467", "patch": "@@ -1348,7 +1348,7 @@ fn check_expr(&@fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n \n         case (ast.expr_be(?e)) {\n             /* FIXME: prove instead of check */\n-            check ast.is_call_expr(e);\n+            check (ast.is_call_expr(e));\n             auto expr_0 = check_expr(fcx, e);\n             auto expr_1 = demand_expr(fcx, fcx.ret_ty, expr_0);\n             ret @fold.respan[ast.expr_](expr.span,"}]}