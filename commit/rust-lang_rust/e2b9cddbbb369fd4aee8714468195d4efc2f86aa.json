{"sha": "e2b9cddbbb369fd4aee8714468195d4efc2f86aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyYjljZGRiYmIzNjlmZDRhZWU4NzE0NDY4MTk1ZDRlZmMyZjg2YWE=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-03-21T13:11:30Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-03-21T13:11:30Z"}, "message": "Switch impls_seen from oldmap", "tree": {"sha": "d3c7147056d36ff302696e807311ff75f20871fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3c7147056d36ff302696e807311ff75f20871fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2b9cddbbb369fd4aee8714468195d4efc2f86aa", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2b9cddbbb369fd4aee8714468195d4efc2f86aa", "html_url": "https://github.com/rust-lang/rust/commit/e2b9cddbbb369fd4aee8714468195d4efc2f86aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2b9cddbbb369fd4aee8714468195d4efc2f86aa/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0beb8c0592a887b31e91df55266a4ebc12320aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0beb8c0592a887b31e91df55266a4ebc12320aa", "html_url": "https://github.com/rust-lang/rust/commit/f0beb8c0592a887b31e91df55266a4ebc12320aa"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2a705a8feb8b8af855fee9d67f975c48ef3b810e", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2b9cddbbb369fd4aee8714468195d4efc2f86aa/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b9cddbbb369fd4aee8714468195d4efc2f86aa/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=e2b9cddbbb369fd4aee8714468195d4efc2f86aa", "patch": "@@ -28,7 +28,7 @@ use core::result::{Result, Ok, Err};\n use core::result;\n use core::uint;\n use core::vec;\n-use std::oldmap::HashMap;\n+use core::hashmap::linear::LinearSet;\n use syntax::ast;\n use syntax::ast_util;\n use syntax::codemap::span;\n@@ -234,7 +234,7 @@ pub fn lookup_vtable(vcx: &VtableContext,\n         _ => {\n             let mut found = ~[];\n \n-            let mut impls_seen = HashMap();\n+            let mut impls_seen = LinearSet::new();\n \n             match vcx.ccx.coherence_info.extension_methods.find(&trait_id) {\n                 None => {\n@@ -250,10 +250,10 @@ pub fn lookup_vtable(vcx: &VtableContext,\n                         // im is one specific impl of trait_ty.\n \n                         // First, ensure we haven't processed this impl yet.\n-                        if impls_seen.contains_key(&im.did) {\n+                        if impls_seen.contains(&im.did) {\n                             loop;\n                         }\n-                        impls_seen.insert(im.did, ());\n+                        impls_seen.insert(im.did);\n \n                         // ty::impl_traits gives us the list of all\n                         // traits that im implements. Again, usually"}]}