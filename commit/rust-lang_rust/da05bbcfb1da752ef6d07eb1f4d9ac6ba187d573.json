{"sha": "da05bbcfb1da752ef6d07eb1f4d9ac6ba187d573", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMDViYmNmYjFkYTc1MmVmNmQwN2ViMWY0ZDlhYzZiYTE4N2Q1NzM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-21T04:32:39Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-21T21:04:36Z"}, "message": "Fix lifetime in tt to syntax node conversion", "tree": {"sha": "5d634a97b87bc8dd4d494afaffded5bb1de89f96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d634a97b87bc8dd4d494afaffded5bb1de89f96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da05bbcfb1da752ef6d07eb1f4d9ac6ba187d573", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da05bbcfb1da752ef6d07eb1f4d9ac6ba187d573", "html_url": "https://github.com/rust-lang/rust/commit/da05bbcfb1da752ef6d07eb1f4d9ac6ba187d573", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da05bbcfb1da752ef6d07eb1f4d9ac6ba187d573/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee94edc722c9649bd16bb754959ad349593045e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee94edc722c9649bd16bb754959ad349593045e2", "html_url": "https://github.com/rust-lang/rust/commit/ee94edc722c9649bd16bb754959ad349593045e2"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "6d4d8fa1348d8d96e4a01eaf164277ed017c77bd", "filename": "crates/ra_mbe/src/subtree_source.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/da05bbcfb1da752ef6d07eb1f4d9ac6ba187d573/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da05bbcfb1da752ef6d07eb1f4d9ac6ba187d573/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsubtree_source.rs?ref=da05bbcfb1da752ef6d07eb1f4d9ac6ba187d573", "patch": "@@ -429,7 +429,12 @@ fn convert_literal(l: &tt::Literal) -> TtToken {\n }\n \n fn convert_ident(ident: &tt::Ident) -> TtToken {\n-    let kind = SyntaxKind::from_keyword(ident.text.as_str()).unwrap_or(IDENT);\n+    let kind = if let Some('\\'') = ident.text.chars().next() {\n+        LIFETIME\n+    } else {\n+        SyntaxKind::from_keyword(ident.text.as_str()).unwrap_or(IDENT)\n+    };\n+\n     TtToken { kind, is_joint_to_next: false, text: ident.text.clone(), n_tokens: 1 }\n }\n "}]}