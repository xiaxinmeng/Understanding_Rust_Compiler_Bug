{"sha": "cdadb6c7255d66969a86dcf2259651138f641ae1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYWRiNmM3MjU1ZDY2OTY5YTg2ZGNmMjI1OTY1MTEzOGY2NDFhZTE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-18T11:15:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-18T11:15:21Z"}, "message": "Rollup merge of #45767 - QuietMisdreavus:who-docs-the-doc-tool, r=frewsxcv\n\nrustdoc book: talk about #![doc(test(no_crate_inject))] and #![doc(test(attr(...)))]\n\nWhile investigating https://github.com/rust-lang/rust/issues/45750 i noticed that `#![doc(test(attr(...)))]` wasn't documented at all. Since this is useful for making your examples follow the same coding guidelines as your code, i wanted to add it to the Rustdoc Book. I also added `#![doc(test(no_crate_inject))]` since it's used in the same place and might be useful for macro-heavy crates. I added mentions for these to \"The `doc` attribute\" as well as \"Documentation tests\" since it's useful information in both places.\n\nTechnically the step reordering in the second commit is gated on https://github.com/rust-lang/rust/pull/45764, since before that lands attributes from the doctest come before the ones from `#![doc(test(attr(...)))]`.", "tree": {"sha": "a53d8e30e08b42fa448ec814698f7477d4355fc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a53d8e30e08b42fa448ec814698f7477d4355fc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdadb6c7255d66969a86dcf2259651138f641ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdadb6c7255d66969a86dcf2259651138f641ae1", "html_url": "https://github.com/rust-lang/rust/commit/cdadb6c7255d66969a86dcf2259651138f641ae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdadb6c7255d66969a86dcf2259651138f641ae1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "859c716fbb2aded1e51f5898617e1ccb1842c0a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/859c716fbb2aded1e51f5898617e1ccb1842c0a1", "html_url": "https://github.com/rust-lang/rust/commit/859c716fbb2aded1e51f5898617e1ccb1842c0a1"}, {"sha": "ce7a3a458455600aec937354fa9b07cccce1e24e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce7a3a458455600aec937354fa9b07cccce1e24e", "html_url": "https://github.com/rust-lang/rust/commit/ce7a3a458455600aec937354fa9b07cccce1e24e"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "9c6b86d6ddc8e0f76e275603c9072b62193d55ae", "filename": "src/doc/rustdoc/src/documentation-tests.md", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cdadb6c7255d66969a86dcf2259651138f641ae1/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "raw_url": "https://github.com/rust-lang/rust/raw/cdadb6c7255d66969a86dcf2259651138f641ae1/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdocumentation-tests.md?ref=cdadb6c7255d66969a86dcf2259651138f641ae1", "patch": "@@ -38,17 +38,19 @@ function! Forcing you to write `main` for every example, no matter how small,\n adds friction. So `rustdoc` processes your examples slightly before\n running them. Here's the full algorithm rustdoc uses to preprocess examples:\n \n-1. Any leading `#![foo]` attributes are left intact as crate attributes.\n-2. Some common `allow` attributes are inserted, including\n+1. Some common `allow` attributes are inserted, including\n    `unused_variables`, `unused_assignments`, `unused_mut`,\n    `unused_attributes`, and `dead_code`. Small examples often trigger\n    these lints.\n-3. If the example does not contain `extern crate`, then `extern crate\n+2. Any attributes specified with `#![doc(test(attr(...)))]` are added.\n+3. Any leading `#![foo]` attributes are left intact as crate attributes.\n+4. If the example does not contain `extern crate`, and\n+   `#![doc(test(no_crate_inject))]` was not specified, then `extern crate\n    <mycrate>;` is inserted (note the lack of `#[macro_use]`).\n-4. Finally, if the example does not contain `fn main`, the remainder of the\n+5. Finally, if the example does not contain `fn main`, the remainder of the\n    text is wrapped in `fn main() { your_code }`.\n \n-For more about that caveat in rule 3, see \"Documeting Macros\" below.\n+For more about that caveat in rule 4, see \"Documeting Macros\" below.\n \n ## Hiding portions of the example\n \n@@ -261,4 +263,4 @@ are added.\n The `no_run` attribute will compile your code, but not run it. This is\n important for examples such as \"Here's how to retrieve a web page,\"\n which you would want to ensure compiles, but might be run in a test\n-environment that has no network access.\n\\ No newline at end of file\n+environment that has no network access."}, {"sha": "aadd72d1c902d67ca415ef4b721f4087c85ad3bc", "filename": "src/doc/rustdoc/src/the-doc-attribute.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cdadb6c7255d66969a86dcf2259651138f641ae1/src%2Fdoc%2Frustdoc%2Fsrc%2Fthe-doc-attribute.md", "raw_url": "https://github.com/rust-lang/rust/raw/cdadb6c7255d66969a86dcf2259651138f641ae1/src%2Fdoc%2Frustdoc%2Fsrc%2Fthe-doc-attribute.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fthe-doc-attribute.md?ref=cdadb6c7255d66969a86dcf2259651138f641ae1", "patch": "@@ -103,6 +103,26 @@ to it in the docs. But if you include this:\n \n it will not.\n \n+### `test(no_crate_inject)`\n+\n+By default, `rustdoc` will automatically add a line with `extern crate my_crate;` into each doctest.\n+But if you include this:\n+\n+```rust,ignore\n+#![doc(test(no_crate_inject))]\n+```\n+\n+it will not.\n+\n+### `test(attr(...))`\n+\n+This form of the `doc` attribute allows you to add arbitrary attributes to all your doctests. For\n+example, if you want your doctests to fail if they produce any warnings, you could add this:\n+\n+```rust,ignore\n+#![doc(test(attr(deny(warnings))))]\n+```\n+\n ## At the item level\n \n These forms of the `#[doc]` attribute are used on individual items, to control how"}]}