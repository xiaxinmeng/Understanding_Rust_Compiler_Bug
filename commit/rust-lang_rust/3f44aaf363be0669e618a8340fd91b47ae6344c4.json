{"sha": "3f44aaf363be0669e618a8340fd91b47ae6344c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDRhYWYzNjNiZTA2NjllNjE4YTgzNDBmZDkxYjQ3YWU2MzQ0YzQ=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-07-07T18:13:13Z"}, "committer": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-07-07T18:13:13Z"}, "message": "use flatten branch of lsp-types", "tree": {"sha": "3cbe580bf8cac059a2b87687a1a7b48dcd1779e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cbe580bf8cac059a2b87687a1a7b48dcd1779e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f44aaf363be0669e618a8340fd91b47ae6344c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f44aaf363be0669e618a8340fd91b47ae6344c4", "html_url": "https://github.com/rust-lang/rust/commit/3f44aaf363be0669e618a8340fd91b47ae6344c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f44aaf363be0669e618a8340fd91b47ae6344c4/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b38ca3b8739230af1cc69884b5b11650b5fcb46", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b38ca3b8739230af1cc69884b5b11650b5fcb46", "html_url": "https://github.com/rust-lang/rust/commit/1b38ca3b8739230af1cc69884b5b11650b5fcb46"}], "stats": {"total": 53, "additions": 22, "deletions": 31}, "files": [{"sha": "eea206f99413980948139a29766dd91e56886299", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3f44aaf363be0669e618a8340fd91b47ae6344c4/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3f44aaf363be0669e618a8340fd91b47ae6344c4/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=3f44aaf363be0669e618a8340fd91b47ae6344c4", "patch": "@@ -541,7 +541,7 @@ dependencies = [\n  \"crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"flexi_logger 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lsp-types 0.58.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lsp-types 0.58.1 (git+https://github.com/kjeremy/languageserver-types?branch=flatten)\",\n  \"serde 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -775,7 +775,7 @@ dependencies = [\n [[package]]\n name = \"lsp-types\"\n version = \"0.58.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+source = \"git+https://github.com/kjeremy/languageserver-types?branch=flatten#f3f793173bb1461602dabf83d324b638b3e6ec61\"\n dependencies = [\n  \"bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-derive 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1200,7 +1200,7 @@ dependencies = [\n  \"flexi_logger 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"gen_lsp_server 0.2.0\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lsp-types 0.58.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lsp-types 0.58.1 (git+https://github.com/kjeremy/languageserver-types?branch=flatten)\",\n  \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_arena 0.1.0\",\n  \"ra_ide_api 0.1.0\",\n@@ -2201,7 +2201,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ae91b68aebc4ddb91978b11a1b02ddd8602a05ec19002801c5666000e05e0f83\"\n \"checksum lock_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ed946d4529956a20f2d63ebe1b69996d5a2137c91913fe3ebbeff957f5bca7ff\"\n \"checksum log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c84ec4b527950aa83a329754b01dbe3f58361d1c5efacd1f6d68c494d08a17c6\"\n-\"checksum lsp-types 0.58.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"42c7edac51b6739544453fd33c7ae5e910d1ec4f2d9904cf1990f8f6581e26f5\"\n+\"checksum lsp-types 0.58.1 (git+https://github.com/kjeremy/languageserver-types?branch=flatten)\" = \"<none>\"\n \"checksum maplit 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"08cbb6b4fef96b6d77bfc40ec491b1690c779e77b05cd9f07f787ed376fd4c43\"\n \"checksum matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08\"\n \"checksum memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2efc7bc57c883d4a4d6e3246905283d8dae951bb3bd32f49d6ef297f546e1c39\""}, {"sha": "46b02a45961f922a0d7f8f4e5bb833e42113a766", "filename": "crates/gen_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f44aaf363be0669e618a8340fd91b47ae6344c4/crates%2Fgen_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3f44aaf363be0669e618a8340fd91b47ae6344c4/crates%2Fgen_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2FCargo.toml?ref=3f44aaf363be0669e618a8340fd91b47ae6344c4", "patch": "@@ -8,7 +8,7 @@ license = \"MIT OR Apache-2.0\"\n description = \"Generic LSP server scaffold.\"\n \n [dependencies]\n-lsp-types = \"0.58.0\"\n+lsp-types = { git = \"https://github.com/kjeremy/languageserver-types\", branch = \"flatten\" }\n log = \"0.4.3\"\n serde_json = \"1.0.34\"\n serde = { version = \"1.0.83\", features = [\"derive\"] }"}, {"sha": "9c9dda01fbab9b87277eaafbfa4379d5abea1175", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f44aaf363be0669e618a8340fd91b47ae6344c4/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3f44aaf363be0669e618a8340fd91b47ae6344c4/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=3f44aaf363be0669e618a8340fd91b47ae6344c4", "patch": "@@ -13,7 +13,7 @@ crossbeam-channel = \"0.3.5\"\n flexi_logger = \"0.13.0\"\n log = \"0.4.3\"\n url_serde = \"0.2.0\"\n-lsp-types = { version = \"0.58.0\", features = [\"proposed\"] }\n+lsp-types = { git = \"https://github.com/kjeremy/languageserver-types\", branch = \"flatten\", features = [\"proposed\"] }\n rustc-hash = \"1.0\"\n parking_lot = \"0.8.0\"\n "}, {"sha": "6b407cb0c35cb0d759af7c011c43469988a3b445", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 12, "deletions": 23, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/3f44aaf363be0669e618a8340fd91b47ae6344c4/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f44aaf363be0669e618a8340fd91b47ae6344c4/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=3f44aaf363be0669e618a8340fd91b47ae6344c4", "patch": "@@ -153,14 +153,12 @@ pub fn handle_on_type_formatting(\n     params: req::DocumentOnTypeFormattingParams,\n ) -> Result<Option<Vec<TextEdit>>> {\n     let _p = profile(\"handle_on_type_formatting\");\n-    let file_id = params.text_document.try_conv_with(&world)?;\n-    let line_index = world.analysis().file_line_index(file_id);\n-    let position = FilePosition {\n-        file_id,\n-        /// in `ra_ide_api`, the `on_type` invariant is that\n-        /// `text.char_at(position) == typed_char`.\n-        offset: params.position.conv_with(&line_index) - TextUnit::of_char('.'),\n-    };\n+    let mut position = params.text_document_position.try_conv_with(&world)?;\n+    let line_index = world.analysis().file_line_index(position.file_id);\n+\n+    // in `ra_ide_api`, the `on_type` invariant is that\n+    // `text.char_at(position) == typed_char`.\n+    position.offset = position.offset - TextUnit::of_char('.');\n \n     let edit = match params.ch.as_str() {\n         \"=\" => world.analysis().on_eq_typed(position),\n@@ -407,12 +405,7 @@ pub fn handle_completion(\n     params: req::CompletionParams,\n ) -> Result<Option<req::CompletionResponse>> {\n     let _p = profile(\"handle_completion\");\n-    let position = {\n-        let file_id = params.text_document.try_conv_with(&world)?;\n-        let line_index = world.analysis().file_line_index(file_id);\n-        let offset = params.position.conv_with(&line_index);\n-        FilePosition { file_id, offset }\n-    };\n+    let position = params.text_document_position.try_conv_with(&world)?;\n     let completion_triggered_after_single_colon = {\n         let mut res = false;\n         if let Some(ctx) = params.context {\n@@ -543,9 +536,7 @@ pub fn handle_prepare_rename(\n }\n \n pub fn handle_rename(world: WorldSnapshot, params: RenameParams) -> Result<Option<WorkspaceEdit>> {\n-    let file_id = params.text_document.try_conv_with(&world)?;\n-    let line_index = world.analysis().file_line_index(file_id);\n-    let offset = params.position.conv_with(&line_index);\n+    let position = params.text_document_position.try_conv_with(&world)?;\n \n     if params.new_name.is_empty() {\n         return Err(LspError::new(\n@@ -555,8 +546,7 @@ pub fn handle_rename(world: WorldSnapshot, params: RenameParams) -> Result<Optio\n         .into());\n     }\n \n-    let optional_change =\n-        world.analysis().rename(FilePosition { file_id, offset }, &*params.new_name)?;\n+    let optional_change = world.analysis().rename(position, &*params.new_name)?;\n     let change = match optional_change {\n         None => return Ok(None),\n         Some(it) => it,\n@@ -571,11 +561,10 @@ pub fn handle_references(\n     world: WorldSnapshot,\n     params: req::ReferenceParams,\n ) -> Result<Option<Vec<Location>>> {\n-    let file_id = params.text_document.try_conv_with(&world)?;\n-    let line_index = world.analysis().file_line_index(file_id);\n-    let offset = params.position.conv_with(&line_index);\n+    let position = params.text_document_position.try_conv_with(&world)?;\n+    let line_index = world.analysis().file_line_index(position.file_id);\n \n-    let refs = match world.analysis().find_all_refs(FilePosition { file_id, offset })? {\n+    let refs = match world.analysis().find_all_refs(position)? {\n         None => return Ok(None),\n         Some(refs) => refs,\n     };"}, {"sha": "451be32a8b31c788223f0952d3e647690cc689f7", "filename": "crates/ra_lsp_server/tests/heavy_tests/main.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3f44aaf363be0669e618a8340fd91b47ae6344c4/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f44aaf363be0669e618a8340fd91b47ae6344c4/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs?ref=3f44aaf363be0669e618a8340fd91b47ae6344c4", "patch": "@@ -37,9 +37,11 @@ use std::collections::Spam;\n     eprintln!(\"loading took    {:?}\", project_start.elapsed());\n     let completion_start = Instant::now();\n     let res = server.send_request::<Completion>(CompletionParams {\n-        text_document: server.doc_id(\"src/lib.rs\"),\n+        text_document_position: TextDocumentPositionParams::new(\n+            server.doc_id(\"src/lib.rs\"),\n+            Position::new(0, 23),\n+        ),\n         context: None,\n-        position: Position::new(0, 23),\n     });\n     assert!(format!(\"{}\", res).contains(\"HashMap\"));\n     eprintln!(\"completion took {:?}\", completion_start.elapsed());"}]}