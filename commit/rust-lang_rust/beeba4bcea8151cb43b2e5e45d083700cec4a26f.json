{"sha": "beeba4bcea8151cb43b2e5e45d083700cec4a26f", "node_id": "C_kwDOAAsO6NoAKGJlZWJhNGJjZWE4MTUxY2I0M2IyZTVlNDVkMDgzNzAwY2VjNGEyNmY", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-01-21T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-01-21T00:00:00Z"}, "message": "Reject may_unwind option in naked functions", "tree": {"sha": "bc2c2cd640b92dfef093758df22c1dccfb59eab7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc2c2cd640b92dfef093758df22c1dccfb59eab7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beeba4bcea8151cb43b2e5e45d083700cec4a26f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beeba4bcea8151cb43b2e5e45d083700cec4a26f", "html_url": "https://github.com/rust-lang/rust/commit/beeba4bcea8151cb43b2e5e45d083700cec4a26f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beeba4bcea8151cb43b2e5e45d083700cec4a26f/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "888332fee42bfccd2a1d1c3d249431c0b741d8ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/888332fee42bfccd2a1d1c3d249431c0b741d8ef", "html_url": "https://github.com/rust-lang/rust/commit/888332fee42bfccd2a1d1c3d249431c0b741d8ef"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "00a93ccc9aa09d793c4524ab3fe5e0fa9363eeee", "filename": "compiler/rustc_passes/src/naked_functions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/beeba4bcea8151cb43b2e5e45d083700cec4a26f/compiler%2Frustc_passes%2Fsrc%2Fnaked_functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beeba4bcea8151cb43b2e5e45d083700cec4a26f/compiler%2Frustc_passes%2Fsrc%2Fnaked_functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fnaked_functions.rs?ref=beeba4bcea8151cb43b2e5e45d083700cec4a26f", "patch": "@@ -251,6 +251,7 @@ impl<'tcx> CheckInlineAssembly<'tcx> {\n         }\n \n         let unsupported_options: Vec<&'static str> = [\n+            (InlineAsmOptions::MAY_UNWIND, \"`may_unwind`\"),\n             (InlineAsmOptions::NOMEM, \"`nomem`\"),\n             (InlineAsmOptions::NOSTACK, \"`nostack`\"),\n             (InlineAsmOptions::PRESERVES_FLAGS, \"`preserves_flags`\"),"}, {"sha": "5b4293972ea215e592277c85eda2960a289c580a", "filename": "src/test/ui/asm/naked-functions.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/beeba4bcea8151cb43b2e5e45d083700cec4a26f/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beeba4bcea8151cb43b2e5e45d083700cec4a26f/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.rs?ref=beeba4bcea8151cb43b2e5e45d083700cec4a26f", "patch": "@@ -5,7 +5,7 @@\n \n #![feature(naked_functions)]\n #![feature(or_patterns)]\n-#![feature(asm_const, asm_sym)]\n+#![feature(asm_const, asm_sym, asm_unwind)]\n #![crate_type = \"lib\"]\n \n use std::arch::asm;\n@@ -114,6 +114,12 @@ unsafe extern \"C\" fn invalid_options_continued() {\n     //~| ERROR asm in naked functions must use `noreturn` option\n }\n \n+#[naked]\n+unsafe extern \"C\" fn invalid_may_unwind() {\n+    asm!(\"\", options(noreturn, may_unwind));\n+    //~^ ERROR asm options unsupported in naked functions: `may_unwind`\n+}\n+\n #[naked]\n pub unsafe fn default_abi() {\n     //~^ WARN Rust ABI is unsupported in naked functions"}, {"sha": "c1dcc433db6c6b3ce7bae11fa679cff03d73e348", "filename": "src/test/ui/asm/naked-functions.stderr", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/beeba4bcea8151cb43b2e5e45d083700cec4a26f/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/beeba4bcea8151cb43b2e5e45d083700cec4a26f/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr?ref=beeba4bcea8151cb43b2e5e45d083700cec4a26f", "patch": "@@ -199,56 +199,62 @@ error[E0787]: asm in naked functions must use `noreturn` option\n LL |     asm!(\"\", options(readonly, nostack), options(pure));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+error[E0787]: asm options unsupported in naked functions: `may_unwind`\n+  --> $DIR/naked-functions.rs:119:5\n+   |\n+LL |     asm!(\"\", options(noreturn, may_unwind));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n warning: Rust ABI is unsupported in naked functions\n-  --> $DIR/naked-functions.rs:118:15\n+  --> $DIR/naked-functions.rs:124:15\n    |\n LL | pub unsafe fn default_abi() {\n    |               ^^^^^^^^^^^\n    |\n    = note: `#[warn(undefined_naked_function_abi)]` on by default\n \n warning: Rust ABI is unsupported in naked functions\n-  --> $DIR/naked-functions.rs:124:15\n+  --> $DIR/naked-functions.rs:130:15\n    |\n LL | pub unsafe fn rust_abi() {\n    |               ^^^^^^^^\n \n error: naked functions cannot be inlined\n-  --> $DIR/naked-functions.rs:164:1\n+  --> $DIR/naked-functions.rs:170:1\n    |\n LL | #[inline]\n    | ^^^^^^^^^\n \n error: naked functions cannot be inlined\n-  --> $DIR/naked-functions.rs:171:1\n+  --> $DIR/naked-functions.rs:177:1\n    |\n LL | #[inline(always)]\n    | ^^^^^^^^^^^^^^^^^\n \n error: naked functions cannot be inlined\n-  --> $DIR/naked-functions.rs:178:1\n+  --> $DIR/naked-functions.rs:184:1\n    |\n LL | #[inline(never)]\n    | ^^^^^^^^^^^^^^^^\n \n error: naked functions cannot be inlined\n-  --> $DIR/naked-functions.rs:185:1\n+  --> $DIR/naked-functions.rs:191:1\n    |\n LL | #[inline]\n    | ^^^^^^^^^\n \n error: naked functions cannot be inlined\n-  --> $DIR/naked-functions.rs:187:1\n+  --> $DIR/naked-functions.rs:193:1\n    |\n LL | #[inline(always)]\n    | ^^^^^^^^^^^^^^^^^\n \n error: naked functions cannot be inlined\n-  --> $DIR/naked-functions.rs:189:1\n+  --> $DIR/naked-functions.rs:195:1\n    |\n LL | #[inline(never)]\n    | ^^^^^^^^^^^^^^^^\n \n-error: aborting due to 29 previous errors; 2 warnings emitted\n+error: aborting due to 30 previous errors; 2 warnings emitted\n \n For more information about this error, try `rustc --explain E0787`."}]}