{"sha": "6daf440037cb10baab332fde2b471712a3a42c76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYWY0NDAwMzdjYjEwYmFhYjMzMmZkZTJiNDcxNzEyYTNhNDJjNzY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-29T03:16:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-29T03:16:32Z"}, "message": "rustc: Fix vec append glue for strings. Add a test case.", "tree": {"sha": "0dbe6bc0777288b17e9d097fc55ae0e9ef118df6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dbe6bc0777288b17e9d097fc55ae0e9ef118df6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6daf440037cb10baab332fde2b471712a3a42c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6daf440037cb10baab332fde2b471712a3a42c76", "html_url": "https://github.com/rust-lang/rust/commit/6daf440037cb10baab332fde2b471712a3a42c76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6daf440037cb10baab332fde2b471712a3a42c76/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e08609ed7740f8aca9bded27b9bdda3591d84d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e08609ed7740f8aca9bded27b9bdda3591d84d7", "html_url": "https://github.com/rust-lang/rust/commit/3e08609ed7740f8aca9bded27b9bdda3591d84d7"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "ec0e53d9c83585e6a181efd0a6976fac2f224477", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6daf440037cb10baab332fde2b471712a3a42c76/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daf440037cb10baab332fde2b471712a3a42c76/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=6daf440037cb10baab332fde2b471712a3a42c76", "patch": "@@ -7454,7 +7454,7 @@ fn trans_vec_append_glue(@local_ctxt cx) {\n     auto copy_src_cx = new_sub_block_ctxt(bcx, \"copy new <- src\");\n \n     auto pp0 = alloca(bcx, T_ptr(T_i8()));\n-    bcx.build.Store(vec_p1(bcx, llnew_vec), pp0);\n+    bcx.build.Store(vec_p1_adjusted(bcx, llnew_vec, llskipnull), pp0);\n     llvm.LLVMSetValueName(pp0, _str.buf(\"pp0\"));\n \n     bcx.build.CondBr(bcx.build.TruncOrBitCast\n@@ -7506,8 +7506,10 @@ fn trans_vec_append_glue(@local_ctxt cx) {\n                             vec_p0(copy_dst_cx, lldst_vec),\n                             n_bytes).bcx;\n \n-    put_vec_fill(copy_dst_cx, llnew_vec, n_bytes);\n-    copy_dst_cx.build.Store(vec_p1(copy_dst_cx, llnew_vec), pp0);\n+    put_vec_fill(copy_dst_cx, llnew_vec, vec_fill(copy_dst_cx, lldst_vec));\n+\n+    copy_dst_cx.build.Store(vec_p1_adjusted(copy_dst_cx, llnew_vec,\n+                                            llskipnull), pp0);\n     copy_dst_cx.build.Br(copy_src_cx.llbb);\n \n \n@@ -7520,8 +7522,9 @@ fn trans_vec_append_glue(@local_ctxt cx) {\n                             n_bytes).bcx;\n \n     put_vec_fill(copy_src_cx, llnew_vec,\n-                 copy_src_cx.build.Add(vec_fill(copy_src_cx,\n-                                                llnew_vec),\n+                 copy_src_cx.build.Add(vec_fill_adjusted(copy_src_cx,\n+                                                         llnew_vec,\n+                                                         llskipnull),\n                                         n_bytes));\n \n     // Write new_vec back through the alias we were given."}, {"sha": "06bc8b74621c56305b8e9b8410e706981ec34fc2", "filename": "src/test/run-pass/str-growth.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6daf440037cb10baab332fde2b471712a3a42c76/src%2Ftest%2Frun-pass%2Fstr-growth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6daf440037cb10baab332fde2b471712a3a42c76/src%2Ftest%2Frun-pass%2Fstr-growth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstr-growth.rs?ref=6daf440037cb10baab332fde2b471712a3a42c76", "patch": "@@ -0,0 +1,14 @@\n+fn main() {\n+    auto s = \"a\";\n+    s += \"b\";\n+    check (s.(0) == ('a' as u8));\n+    check (s.(1) == ('b' as u8));\n+\n+    s += \"c\";\n+    s += \"d\";\n+    check (s.(0) == ('a' as u8));\n+    check (s.(1) == ('b' as u8));\n+    check (s.(2) == ('c' as u8));\n+    check (s.(3) == ('d' as u8));\n+}\n+"}]}