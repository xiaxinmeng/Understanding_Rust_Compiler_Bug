{"sha": "825014e88992c3516c846659ce7cfdd5a781e216", "node_id": "C_kwDOAAsO6NoAKDgyNTAxNGU4ODk5MmMzNTE2Yzg0NjY1OWNlN2NmZGQ1YTc4MWUyMTY", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-10-09T01:15:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-09T01:15:00Z"}, "message": "Rollup merge of #102661 - chrysn-pull-requests:rustdoc-effect-of-fundamental, r=notriddle\n\nrustdoc: Document effect of fundamental types\n\nThis was implemented in https://github.com/rust-lang/rust/pull/96565, but not documented. But it's a useful feature for everyone who implements own wrapper (especially wrappers-around-pointers) types, so that they can behave like pointers (and stdlib wrappers) do -- so here goes a mention in the unstable section of the rustdoc book.\n\n(That is where I initially looked to find tricks for making my own wrapper types be transparent to documentation).", "tree": {"sha": "6d9df0d0321cd49443ddbcbf1313d23cdcab79ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d9df0d0321cd49443ddbcbf1313d23cdcab79ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/825014e88992c3516c846659ce7cfdd5a781e216", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjQiCUCRBK7hj4Ov3rIwAANJ8IALKcOuPgI410iZT5HJfkCX1c\nhD6M5/IV0P3CKDcSNFHz7iH20eiwBwV9aakmo7lf960M7z4Z5HTn08ZSFyLm/eK2\nwOKaC6/4Vot/VE3+GqQPNz+2WpVmTHsxalKly+rMrRN8XWc6q34J2MfthC2bh3U7\nndYXbZAvgXxwFWKW5nsPOEc2Ie/NToNfgo+leC4xal6asLemSkf0kN+N25JPgiJn\nqc3WqA0EmX7jkSRVDW3jz0fPFtkwtI/lhSoJxV2wLw/HEHSeg4y/tz/xgmwgnu8y\nJuwXvN50JfiYeJvGUGvs6RIoykpqTNk+PGslLbJSN3Cx7xPjy39WlLrUBetliTg=\n=AVuh\n-----END PGP SIGNATURE-----\n", "payload": "tree 6d9df0d0321cd49443ddbcbf1313d23cdcab79ce\nparent 5ba30a680cb272d607883ebdc2da931e9b69ede7\nparent 31bc385fa1d46d5affdab32b6e8a1a876b10443f\nauthor Michael Howell <michael@notriddle.com> 1665278100 -0700\ncommitter GitHub <noreply@github.com> 1665278100 -0700\n\nRollup merge of #102661 - chrysn-pull-requests:rustdoc-effect-of-fundamental, r=notriddle\n\nrustdoc: Document effect of fundamental types\n\nThis was implemented in https://github.com/rust-lang/rust/pull/96565, but not documented. But it's a useful feature for everyone who implements own wrapper (especially wrappers-around-pointers) types, so that they can behave like pointers (and stdlib wrappers) do -- so here goes a mention in the unstable section of the rustdoc book.\n\n(That is where I initially looked to find tricks for making my own wrapper types be transparent to documentation).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/825014e88992c3516c846659ce7cfdd5a781e216", "html_url": "https://github.com/rust-lang/rust/commit/825014e88992c3516c846659ce7cfdd5a781e216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/825014e88992c3516c846659ce7cfdd5a781e216/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ba30a680cb272d607883ebdc2da931e9b69ede7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba30a680cb272d607883ebdc2da931e9b69ede7", "html_url": "https://github.com/rust-lang/rust/commit/5ba30a680cb272d607883ebdc2da931e9b69ede7"}, {"sha": "31bc385fa1d46d5affdab32b6e8a1a876b10443f", "url": "https://api.github.com/repos/rust-lang/rust/commits/31bc385fa1d46d5affdab32b6e8a1a876b10443f", "html_url": "https://github.com/rust-lang/rust/commit/31bc385fa1d46d5affdab32b6e8a1a876b10443f"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "c6c05e3009083e0e62ff7d5bcd822019bb718652", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/825014e88992c3516c846659ce7cfdd5a781e216/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/825014e88992c3516c846659ce7cfdd5a781e216/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=825014e88992c3516c846659ce7cfdd5a781e216", "patch": "@@ -197,6 +197,35 @@ To do so, the `#[doc(keyword = \"...\")]` attribute is used. Example:\n mod empty_mod {}\n ```\n \n+## Effects of other nightly features\n+\n+These nightly-only features are not primarily related to Rustdoc,\n+but have convenient effects on the documentation produced.\n+\n+### `fundamental` types\n+\n+Annotating a type with `#[fundamental]` primarily influences coherence rules about generic types,\n+i.e., they alter whether other crates can provide implementations for that type.\n+The unstable book [links to further information][unstable-fundamental].\n+\n+[unstable-fundamental]: https://doc.rust-lang.org/unstable-book/language-features/fundamental.html\n+\n+For documentation, this has an additional side effect:\n+If a method is implemented on `F<T>` (or `F<&T>`),\n+where `F` is a fundamental type,\n+then the method is not only documented at the page about `F`,\n+but also on the page about `T`.\n+In a sense, it makes the type transparent to Rustdoc.\n+This is especially convenient for types that work as annotated pointers,\n+such as `Pin<&mut T>`,\n+as it ensures that methods only implemented through those annotated pointers\n+can still be found with the type they act on.\n+\n+If the `fundamental` feature's effect on coherence is not intended,\n+such a type can be marked as fundamental only for purposes of documentation\n+by introducing a custom feature and\n+limiting the use of `fundamental` to when documentation is built.\n+\n ## Unstable command-line arguments\n \n These features are enabled by passing a command-line flag to Rustdoc, but the flags in question are"}]}