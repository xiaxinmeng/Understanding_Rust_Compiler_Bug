{"sha": "2d66e5a729d85490dc3c342e4c23c22786e324ee", "node_id": "C_kwDOAAsO6NoAKDJkNjZlNWE3MjlkODU0OTBkYzNjMzQyZTRjMjNjMjI3ODZlMzI0ZWU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-22T06:38:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-22T06:38:20Z"}, "message": "Auto merge of #111835 - matthiaskrgr:rollup-qd4b2vu, r=matthiaskrgr\n\nRollup of 2 pull requests\n\nSuccessful merges:\n\n - #111810 (Don't use inner macro in `marker_impls`)\n - #111826 (Render test messages from bootstrap)\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "fc6969d2ca6dad2d686090f1a07f589e4a879d12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc6969d2ca6dad2d686090f1a07f589e4a879d12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d66e5a729d85490dc3c342e4c23c22786e324ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d66e5a729d85490dc3c342e4c23c22786e324ee", "html_url": "https://github.com/rust-lang/rust/commit/2d66e5a729d85490dc3c342e4c23c22786e324ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d66e5a729d85490dc3c342e4c23c22786e324ee/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ca94f241f11b0045ae405bed05a100c07b6f45b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ca94f241f11b0045ae405bed05a100c07b6f45b", "html_url": "https://github.com/rust-lang/rust/commit/7ca94f241f11b0045ae405bed05a100c07b6f45b"}, {"sha": "e2362d7e1afecaf9f7485072a0fc543b8ab46afa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2362d7e1afecaf9f7485072a0fc543b8ab46afa", "html_url": "https://github.com/rust-lang/rust/commit/e2362d7e1afecaf9f7485072a0fc543b8ab46afa"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "8dab8d1a6923f39272cb39a85b82c62fface5850", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2d66e5a729d85490dc3c342e4c23c22786e324ee/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d66e5a729d85490dc3c342e4c23c22786e324ee/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=2d66e5a729d85490dc3c342e4c23c22786e324ee", "patch": "@@ -43,27 +43,17 @@ use crate::hash::Hasher;\n /// ```\n #[unstable(feature = \"internal_impls_macro\", issue = \"none\")]\n macro marker_impls {\n-    ( $(#[$($meta:tt)*])* $Trait:ident for $( $({$($bounds:tt)*})? $T:ty ),+ $(,)?) => {\n-        // This inner macro is needed because... idk macros are weird.\n-        // It allows repeating `meta` on all impls.\n-        #[unstable(feature = \"internal_impls_macro\", issue = \"none\")]\n-        macro _impl {\n-            ( $$({$$($$bounds_:tt)*})? $$T_:ty ) => {\n-                $(#[$($meta)*])* impl<$$($$($$bounds_)*)?> $Trait for $$T_ {}\n-            }\n-        }\n-        $( _impl! { $({$($bounds)*})? $T } )+\n+    ( $(#[$($meta:tt)*])* $Trait:ident for $({$($bounds:tt)*})? $T:ty $(, $($rest:tt)*)? ) => {\n+        $(#[$($meta)*])* impl< $($($bounds)*)? > $Trait for $T {}\n+        marker_impls! { $(#[$($meta)*])* $Trait for $($($rest)*)? }\n     },\n-    ( $(#[$($meta:tt)*])* unsafe $Trait:ident for $( $({$($bounds:tt)*})? $T:ty ),+ $(,)?) => {\n-        #[unstable(feature = \"internal_impls_macro\", issue = \"none\")]\n-        macro _impl {\n-            ( $$({$$($$bounds_:tt)*})? $$T_:ty ) => {\n-                $(#[$($meta)*])* unsafe impl<$$($$($$bounds_)*)?> $Trait for $$T_ {}\n-            }\n-        }\n+    ( $(#[$($meta:tt)*])* $Trait:ident for ) => {},\n \n-        $( _impl! { $({$($bounds)*})? $T } )+\n+    ( $(#[$($meta:tt)*])* unsafe $Trait:ident for $({$($bounds:tt)*})? $T:ty $(, $($rest:tt)*)? ) => {\n+        $(#[$($meta)*])* unsafe impl< $($($bounds)*)? > $Trait for $T {}\n+        marker_impls! { $(#[$($meta)*])* unsafe $Trait for $($($rest)*)? }\n     },\n+    ( $(#[$($meta:tt)*])* unsafe $Trait:ident for ) => {},\n }\n \n /// Types that can be transferred across thread boundaries."}, {"sha": "fa0a4806618b7b9f8826b8dc611c39a687b01571", "filename": "src/bootstrap/render_tests.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2d66e5a729d85490dc3c342e4c23c22786e324ee/src%2Fbootstrap%2Frender_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d66e5a729d85490dc3c342e4c23c22786e324ee/src%2Fbootstrap%2Frender_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frender_tests.rs?ref=2d66e5a729d85490dc3c342e4c23c22786e324ee", "patch": "@@ -168,9 +168,14 @@ impl<'a> Renderer<'a> {\n         if !self.failures.is_empty() {\n             println!(\"\\nfailures:\\n\");\n             for failure in &self.failures {\n-                if let Some(stdout) = &failure.stdout {\n+                if failure.stdout.is_some() || failure.message.is_some() {\n                     println!(\"---- {} stdout ----\", failure.name);\n-                    println!(\"{stdout}\");\n+                    if let Some(stdout) = &failure.stdout {\n+                        println!(\"{stdout}\");\n+                    }\n+                    if let Some(message) = &failure.message {\n+                        println!(\"note: {message}\");\n+                    }\n                 }\n             }\n "}]}