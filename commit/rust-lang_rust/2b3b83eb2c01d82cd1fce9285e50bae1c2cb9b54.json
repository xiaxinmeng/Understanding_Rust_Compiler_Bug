{"sha": "2b3b83eb2c01d82cd1fce9285e50bae1c2cb9b54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiM2I4M2ViMmMwMWQ4MmNkMWZjZTkyODVlNTBiYWUxYzJjYjliNTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-06T17:28:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-17T15:29:19Z"}, "message": "canonicalize miri's directory", "tree": {"sha": "99ccf043d6eb2847ef46038408623c7c763f0638", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99ccf043d6eb2847ef46038408623c7c763f0638"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b3b83eb2c01d82cd1fce9285e50bae1c2cb9b54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b3b83eb2c01d82cd1fce9285e50bae1c2cb9b54", "html_url": "https://github.com/rust-lang/rust/commit/2b3b83eb2c01d82cd1fce9285e50bae1c2cb9b54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b3b83eb2c01d82cd1fce9285e50bae1c2cb9b54/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09e6ccc580049b64133baee546b1f65524a57537", "url": "https://api.github.com/repos/rust-lang/rust/commits/09e6ccc580049b64133baee546b1f65524a57537", "html_url": "https://github.com/rust-lang/rust/commit/09e6ccc580049b64133baee546b1f65524a57537"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "f53c21ff115cf3be4f6dee7aa0edeb0c2c27ce9e", "filename": "miri", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2b3b83eb2c01d82cd1fce9285e50bae1c2cb9b54/miri", "raw_url": "https://github.com/rust-lang/rust/raw/2b3b83eb2c01d82cd1fce9285e50bae1c2cb9b54/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=2b3b83eb2c01d82cd1fce9285e50bae1c2cb9b54", "patch": "@@ -39,6 +39,7 @@ EOF\n TARGET=$(rustc --version --verbose | grep \"^host:\" | cut -d ' ' -f 2)\n SYSROOT=$(rustc --print sysroot)\n LIBDIR=$SYSROOT/lib/rustlib/$TARGET/lib\n+MIRIDIR=$(readlink -e \"$(dirname \"$0\")\")\n if ! test -d \"$LIBDIR\"; then\n     echo \"Something went wrong determining the library dir.\"\n     echo \"I got $LIBDIR but that does not exist.\"\n@@ -51,7 +52,7 @@ if [ -z \"$CARGO_INCREMENTAL\" ]; then\n fi\n if [ -z \"$CARGO_TARGET_DIR\" ]; then\n     # Share target dir between `miri` and `cargo-miri`.\n-    export CARGO_TARGET_DIR=\"$(dirname \"$0\")\"/target\n+    export CARGO_TARGET_DIR=\"$MIRIDIR/target\"\n fi\n # We set the rpath so that Miri finds the private rustc libraries it needs.\n # We enable debug-assertions to get tracing.\n@@ -63,9 +64,9 @@ export RUSTFLAGS=\"-C link-args=-Wl,-rpath,$LIBDIR -C debug-assertions -C debugin\n # Build a sysroot and set MIRI_SYSROOT to use it.  Arguments are passed to `cargo miri setup`.\n build_sysroot() {\n     # Build once, for the user to see.\n-    cargo run $CARGO_BUILD_FLAGS --manifest-path \"$(dirname \"$0\")\"/cargo-miri/Cargo.toml -- miri setup \"$@\"\n+    cargo run $CARGO_BUILD_FLAGS --manifest-path \"$MIRIDIR\"/cargo-miri/Cargo.toml -- miri setup \"$@\"\n     # Call again, to just set env var.\n-    export MIRI_SYSROOT=\"$(cargo run $CARGO_BUILD_FLAGS --manifest-path \"$(dirname \"$0\")\"/cargo-miri/Cargo.toml -q -- miri setup --print-sysroot \"$@\")\"\n+    export MIRI_SYSROOT=\"$(cargo run $CARGO_BUILD_FLAGS --manifest-path \"$MIRIDIR\"/cargo-miri/Cargo.toml -q -- miri setup --print-sysroot \"$@\")\"\n }\n \n # Prepare and set MIRI_SYSROOT.  Respects `MIRI_TEST_TARGET` and takes into account\n@@ -108,18 +109,18 @@ case \"$COMMAND\" in\n install|install-debug)\n     # \"--locked\" to respect the Cargo.lock file if it exists,\n     # \"--offline\" to avoid querying the registry (for yanked packages).\n-    cargo install $CARGO_INSTALL_FLAGS --path \"$(dirname \"$0\")\" --force --locked --offline \"$@\"\n-    cargo install $CARGO_INSTALL_FLAGS --path \"$(dirname \"$0\")\"/cargo-miri --force --locked --offline \"$@\"\n+    cargo install $CARGO_INSTALL_FLAGS --path \"$MIRIDIR\" --force --locked --offline \"$@\"\n+    cargo install $CARGO_INSTALL_FLAGS --path \"$MIRIDIR\"/cargo-miri --force --locked --offline \"$@\"\n     ;;\n check|check-debug)\n     # Check, and let caller control flags.\n-    cargo check $CARGO_BUILD_FLAGS --manifest-path \"$(dirname \"$0\")\"/Cargo.toml \"$@\"\n-    cargo check $CARGO_BUILD_FLAGS --manifest-path \"$(dirname \"$0\")\"/cargo-miri/Cargo.toml \"$@\"\n+    cargo check $CARGO_BUILD_FLAGS --manifest-path \"$MIRIDIR\"/Cargo.toml \"$@\"\n+    cargo check $CARGO_BUILD_FLAGS --manifest-path \"$MIRIDIR\"/cargo-miri/Cargo.toml \"$@\"\n     ;;\n build|build-debug)\n     # Build, and let caller control flags.\n-    cargo build $CARGO_BUILD_FLAGS --manifest-path \"$(dirname \"$0\")\"/Cargo.toml \"$@\"\n-    cargo build $CARGO_BUILD_FLAGS --manifest-path \"$(dirname \"$0\")\"/cargo-miri/Cargo.toml \"$@\"\n+    cargo build $CARGO_BUILD_FLAGS --manifest-path \"$MIRIDIR\"/Cargo.toml \"$@\"\n+    cargo build $CARGO_BUILD_FLAGS --manifest-path \"$MIRIDIR\"/cargo-miri/Cargo.toml \"$@\"\n     ;;\n test|test-debug)\n     # First build and get a sysroot."}]}