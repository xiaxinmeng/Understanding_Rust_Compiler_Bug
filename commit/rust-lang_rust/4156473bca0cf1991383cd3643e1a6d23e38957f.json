{"sha": "4156473bca0cf1991383cd3643e1a6d23e38957f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNTY0NzNiY2EwY2YxOTkxMzgzY2QzNjQzZTFhNmQyM2UzODk1N2Y=", "commit": {"author": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2021-07-18T10:21:09Z"}, "committer": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2021-07-18T10:21:09Z"}, "message": "Add test for unsupported bound relaxation with incorrect behavior", "tree": {"sha": "48650196a292957f320d408e163a93563f1f5924", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48650196a292957f320d408e163a93563f1f5924"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4156473bca0cf1991383cd3643e1a6d23e38957f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4156473bca0cf1991383cd3643e1a6d23e38957f", "html_url": "https://github.com/rust-lang/rust/commit/4156473bca0cf1991383cd3643e1a6d23e38957f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4156473bca0cf1991383cd3643e1a6d23e38957f/comments", "author": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ab6b60337edeb49339d173853fee1f8569421e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ab6b60337edeb49339d173853fee1f8569421e0", "html_url": "https://github.com/rust-lang/rust/commit/3ab6b60337edeb49339d173853fee1f8569421e0"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "f2c57e44077667fdfb13bdf76bbfbc4e3712c827", "filename": "src/test/ui/issues/issue-87199.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4156473bca0cf1991383cd3643e1a6d23e38957f/src%2Ftest%2Fui%2Fissues%2Fissue-87199.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4156473bca0cf1991383cd3643e1a6d23e38957f/src%2Ftest%2Fui%2Fissues%2Fissue-87199.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-87199.rs?ref=4156473bca0cf1991383cd3643e1a6d23e38957f", "patch": "@@ -0,0 +1,21 @@\n+// Regression test for issue #87199, where attempting to relax a bound\n+// other than the only supported `?Sized` would still cause the compiler\n+// to assume that the `Sized` bound was relaxed.\n+\n+// check-fail\n+\n+// Check that these function definitions only emit warnings, not errors\n+fn arg<T: ?Send>(_: T) {}\n+//~^ warning: default bound relaxed for a type parameter, but this does nothing\n+//~^^ the size for values of type `T`\n+fn ref_arg<T: ?Send>(_: &T) {}\n+//~^ warning: default bound relaxed for a type parameter, but this does nothing\n+fn ret() -> impl Iterator<Item = ()> + ?Send { std::iter::empty() }\n+//~^ warning: default bound relaxed for a type parameter, but this does nothing\n+//~^^ the size for values of type `impl Iterator+?Sized` cannot be known\n+\n+// Check that there's no `?Sized` relaxation!\n+fn main() {\n+    ref_arg::<i32>(&5);\n+    ref_arg::<[i32]>(&[5]);\n+}"}, {"sha": "b0bb1da5793571a46526268e0df323dcadfd7842", "filename": "src/test/ui/issues/issue-87199.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/4156473bca0cf1991383cd3643e1a6d23e38957f/src%2Ftest%2Fui%2Fissues%2Fissue-87199.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4156473bca0cf1991383cd3643e1a6d23e38957f/src%2Ftest%2Fui%2Fissues%2Fissue-87199.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-87199.stderr?ref=4156473bca0cf1991383cd3643e1a6d23e38957f", "patch": "@@ -0,0 +1,44 @@\n+warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported\n+  --> $DIR/issue-87199.rs:8:8\n+   |\n+LL | fn arg<T: ?Send>(_: T) {}\n+   |        ^\n+\n+warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported\n+  --> $DIR/issue-87199.rs:11:12\n+   |\n+LL | fn ref_arg<T: ?Send>(_: &T) {}\n+   |            ^\n+\n+warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported\n+  --> $DIR/issue-87199.rs:13:13\n+   |\n+LL | fn ret() -> impl Iterator<Item = ()> + ?Send { std::iter::empty() }\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0277]: the size for values of type `impl Iterator+?Sized` cannot be known at compilation time\n+  --> $DIR/issue-87199.rs:13:13\n+   |\n+LL | fn ret() -> impl Iterator<Item = ()> + ?Send { std::iter::empty() }\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `impl Iterator+?Sized`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: the size for values of type `T` cannot be known at compilation time\n+  --> $DIR/issue-87199.rs:8:18\n+   |\n+LL | fn arg<T: ?Send>(_: T) {}\n+   |        -         ^ doesn't have a size known at compile-time\n+   |        |\n+   |        this type parameter needs to be `std::marker::Sized`\n+   |\n+   = help: unsized fn params are gated as an unstable feature\n+help: function arguments must have a statically known size, borrowed types always have a known size\n+   |\n+LL | fn arg<T: ?Send>(_: &T) {}\n+   |                     ^\n+\n+error: aborting due to 2 previous errors; 3 warnings emitted\n+\n+For more information about this error, try `rustc --explain E0277`."}]}