{"sha": "bc199b57784ec60bc9492c1a046c585af7ee8ea4", "node_id": "C_kwDOAAsO6NoAKGJjMTk5YjU3Nzg0ZWM2MGJjOTQ5MmMxYTA0NmM1ODVhZjdlZThlYTQ", "commit": {"author": {"name": "Benjamin Lamowski", "email": "benjamin.lamowski@kernkonzept.com", "date": "2022-01-14T16:42:40Z"}, "committer": {"name": "Benjamin Lamowski", "email": "benjamin.lamowski@kernkonzept.com", "date": "2022-03-09T10:53:27Z"}, "message": "add as_raw() method to L4Re's Socket mock\n\nMinimally comply with with #87329 to avoid breaking tests on L4Re.", "tree": {"sha": "5442470eb8068a2bc99bb8b512e76a597caea0ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5442470eb8068a2bc99bb8b512e76a597caea0ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc199b57784ec60bc9492c1a046c585af7ee8ea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc199b57784ec60bc9492c1a046c585af7ee8ea4", "html_url": "https://github.com/rust-lang/rust/commit/bc199b57784ec60bc9492c1a046c585af7ee8ea4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc199b57784ec60bc9492c1a046c585af7ee8ea4/comments", "author": {"login": "atopia", "id": 1710873, "node_id": "MDQ6VXNlcjE3MTA4NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1710873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atopia", "html_url": "https://github.com/atopia", "followers_url": "https://api.github.com/users/atopia/followers", "following_url": "https://api.github.com/users/atopia/following{/other_user}", "gists_url": "https://api.github.com/users/atopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/atopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atopia/subscriptions", "organizations_url": "https://api.github.com/users/atopia/orgs", "repos_url": "https://api.github.com/users/atopia/repos", "events_url": "https://api.github.com/users/atopia/events{/privacy}", "received_events_url": "https://api.github.com/users/atopia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atopia", "id": 1710873, "node_id": "MDQ6VXNlcjE3MTA4NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1710873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atopia", "html_url": "https://github.com/atopia", "followers_url": "https://api.github.com/users/atopia/followers", "following_url": "https://api.github.com/users/atopia/following{/other_user}", "gists_url": "https://api.github.com/users/atopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/atopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atopia/subscriptions", "organizations_url": "https://api.github.com/users/atopia/orgs", "repos_url": "https://api.github.com/users/atopia/repos", "events_url": "https://api.github.com/users/atopia/events{/privacy}", "received_events_url": "https://api.github.com/users/atopia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb013d480252a77233781f45273f190759471e3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb013d480252a77233781f45273f190759471e3d", "html_url": "https://github.com/rust-lang/rust/commit/cb013d480252a77233781f45273f190759471e3d"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "f052d8f7f055f3cb23200df5d95122315dc15853", "filename": "library/std/src/sys/unix/l4re.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc199b57784ec60bc9492c1a046c585af7ee8ea4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc199b57784ec60bc9492c1a046c585af7ee8ea4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fl4re.rs?ref=bc199b57784ec60bc9492c1a046c585af7ee8ea4", "patch": "@@ -122,6 +122,11 @@ pub mod net {\n         pub fn take_error(&self) -> io::Result<Option<io::Error>> {\n             unimpl!();\n         }\n+\n+        // This is used by sys_common code to abstract over Windows and Unix.\n+        pub fn as_raw(&self) -> RawFd {\n+            self.as_raw_fd()\n+        }\n     }\n \n     impl AsInner<FileDesc> for Socket {"}]}