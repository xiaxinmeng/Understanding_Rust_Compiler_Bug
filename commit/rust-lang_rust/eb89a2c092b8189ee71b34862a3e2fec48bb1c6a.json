{"sha": "eb89a2c092b8189ee71b34862a3e2fec48bb1c6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViODlhMmMwOTJiODE4OWVlNzFiMzQ4NjJhM2UyZmVjNDhiYjFjNmE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-05-10T16:17:58Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-30T17:02:00Z"}, "message": "Implement float_to_int_unchecked intrinsic", "tree": {"sha": "8ef6032c0a7f93bd231a94186cc222f8af5d0b1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ef6032c0a7f93bd231a94186cc222f8af5d0b1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb89a2c092b8189ee71b34862a3e2fec48bb1c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb89a2c092b8189ee71b34862a3e2fec48bb1c6a", "html_url": "https://github.com/rust-lang/rust/commit/eb89a2c092b8189ee71b34862a3e2fec48bb1c6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb89a2c092b8189ee71b34862a3e2fec48bb1c6a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c674a32ab8ac535463021e655c91ba5283d5148d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c674a32ab8ac535463021e655c91ba5283d5148d", "html_url": "https://github.com/rust-lang/rust/commit/c674a32ab8ac535463021e655c91ba5283d5148d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "aa950067f7b582a12e7d9227d5875da04edd89f2", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb89a2c092b8189ee71b34862a3e2fec48bb1c6a/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb89a2c092b8189ee71b34862a3e2fec48bb1c6a/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=eb89a2c092b8189ee71b34862a3e2fec48bb1c6a", "patch": "@@ -999,6 +999,16 @@ pub(crate) fn codegen_intrinsic_call<'tcx>(\n             }, x, y);\n             ret.write_cvalue(fx, res);\n         };\n+        float_to_int_unchecked, (v f) {\n+            let res = crate::cast::clif_int_or_float_cast(\n+                fx,\n+                f,\n+                false,\n+                fx.clif_type(ret.layout().ty).unwrap(),\n+                type_sign(ret.layout().ty),\n+            );\n+            ret.write_cvalue(fx, CValue::by_val(res, ret.layout()));\n+        };\n     }\n \n     if let Some((_, dest)) = destination {"}]}