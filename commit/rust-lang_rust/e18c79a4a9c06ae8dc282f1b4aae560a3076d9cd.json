{"sha": "e18c79a4a9c06ae8dc282f1b4aae560a3076d9cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxOGM3OWE0YTljMDZhZThkYzI4MmYxYjRhYWU1NjBhMzA3NmQ5Y2Q=", "commit": {"author": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-02-16T15:50:45Z"}, "committer": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-02-16T15:50:45Z"}, "message": "Work around various issues cleaning up bootstrap on Windows", "tree": {"sha": "8ab454fae1cc627247db284c4e771d5a752d8a97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ab454fae1cc627247db284c4e771d5a752d8a97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e18c79a4a9c06ae8dc282f1b4aae560a3076d9cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e18c79a4a9c06ae8dc282f1b4aae560a3076d9cd", "html_url": "https://github.com/rust-lang/rust/commit/e18c79a4a9c06ae8dc282f1b4aae560a3076d9cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e18c79a4a9c06ae8dc282f1b4aae560a3076d9cd/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f52caa76f9204b1341b59adad3d6323f4ca35292", "url": "https://api.github.com/repos/rust-lang/rust/commits/f52caa76f9204b1341b59adad3d6323f4ca35292", "html_url": "https://github.com/rust-lang/rust/commit/f52caa76f9204b1341b59adad3d6323f4ca35292"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "c2f01ecfd1ff9a8ae7fc56ac5679079006c31a22", "filename": "src/bootstrap/clean.rs", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e18c79a4a9c06ae8dc282f1b4aae560a3076d9cd/src%2Fbootstrap%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e18c79a4a9c06ae8dc282f1b4aae560a3076d9cd/src%2Fbootstrap%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fclean.rs?ref=e18c79a4a9c06ae8dc282f1b4aae560a3076d9cd", "patch": "@@ -21,9 +21,6 @@ pub fn clean(build: &Build, all: bool) {\n     } else {\n         rm_rf(&build.out.join(\"tmp\"));\n         rm_rf(&build.out.join(\"dist\"));\n-        // Only delete the bootstrap executable on non-Windows systems\n-        // Windows does not allow deleting a currently running executable\n-        #[cfg(not(windows))]\n         rm_rf(&build.out.join(\"bootstrap\"));\n \n         for host in &build.hosts {\n@@ -54,14 +51,40 @@ fn rm_rf(path: &Path) {\n         }\n         Ok(metadata) => {\n             if metadata.file_type().is_file() || metadata.file_type().is_symlink() {\n-                do_op(path, \"remove file\", |p| fs::remove_file(p));\n+                do_op(path, \"remove file\", |p| {\n+                    fs::remove_file(p).or_else(|e| {\n+                        // Work around the fact that we cannot\n+                        // delete an executable while it runs on Windows.\n+                        #[cfg(windows)]\n+                        if e.kind() == std::io::ErrorKind::PermissionDenied\n+                            && p.file_name().and_then(std::ffi::OsStr::to_str)\n+                                == Some(\"bootstrap.exe\")\n+                        {\n+                            eprintln!(\"warning: failed to delete '{}'.\", p.display());\n+                            return Ok(());\n+                        }\n+                        Err(e)\n+                    })\n+                });\n                 return;\n             }\n \n             for file in t!(fs::read_dir(path)) {\n                 rm_rf(&t!(file).path());\n             }\n-            do_op(path, \"remove dir\", |p| fs::remove_dir(p));\n+            do_op(path, \"remove dir\", |p| {\n+                fs::remove_dir(p).or_else(|e| {\n+                    // Check for dir not empty on Windows\n+                    #[cfg(windows)]\n+                    if matches!(e.kind(), std::io::ErrorKind::Other)\n+                        && e.raw_os_error() == Some(145)\n+                    {\n+                        return Ok(());\n+                    }\n+\n+                    Err(e)\n+                })\n+            });\n         }\n     };\n }\n@@ -80,8 +103,15 @@ where\n             p.set_readonly(false);\n             t!(fs::set_permissions(path, p));\n             f(path).unwrap_or_else(|e| {\n+                // Deleting symlinked directories on Windows is non-trivial.\n+                // Skip doing so for now.\n+                #[cfg(windows)]\n+                if e.kind() == ErrorKind::PermissionDenied && path.is_dir() {\n+                    eprintln!(\"warning: failed to delete '{}'.\", path.display());\n+                    return;\n+                }\n                 panic!(\"failed to {} {}: {}\", desc, path.display(), e);\n-            })\n+            });\n         }\n         Err(e) => {\n             panic!(\"failed to {} {}: {}\", desc, path.display(), e);"}]}