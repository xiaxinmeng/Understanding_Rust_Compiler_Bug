{"sha": "6010431a0b19bbb0be0b3f1bf321d4aa9ce95dfb", "node_id": "C_kwDOAAsO6NoAKDYwMTA0MzFhMGIxOWJiYjBiZTBiM2YxYmYzMjFkNGFhOWNlOTVkZmI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-30T08:05:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-30T08:05:55Z"}, "message": "Merge #11356\n\n11356: Rollback env vars changed by a proc macro r=vlad20012 a=vlad20012\n\nFixes #11355\n\nCo-authored-by: vlad20012 <beskvlad@gmail.com>", "tree": {"sha": "6c16657612c89f5c1f901535cb38de9d12bc3f2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c16657612c89f5c1f901535cb38de9d12bc3f2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6010431a0b19bbb0be0b3f1bf321d4aa9ce95dfb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh9kbjCRBK7hj4Ov3rIwAAWhwIABK5QNzld/G/pNETvrqEN9lm\ndEJDNlm6nbPUcQuMstxc4xmU1VFuPo3oGWl/7f2wXR66wzXhpuWiCigXSaJAzJpp\nB0kGdd4W1P+UOtAMnL1IUCZIHHP/FujSeDzef1QyiJ7JUUNuHjAo+SEnXAg0lU/A\ns8eanzQWr9VTYcLid9XlYl1uVLFJxm7vDQdjZKrL0ReOy/vMgK17+0rfKZTJWRNA\nqEUleIsNHy8o6nsU8Aj90+Sl/HJAPkz41yxMQ8paHLGBgc2JNwiC1+U1v48ApVja\n2pTCBYJ5l0D7Rht8pnMbX40PHIWqBmC8JQn4Rymt76GJHGjfASyUwpMfUvRxVeU=\n=kJQk\n-----END PGP SIGNATURE-----\n", "payload": "tree 6c16657612c89f5c1f901535cb38de9d12bc3f2b\nparent 6634eaf13a7e3a2b30f98f6e69af952f2d760df4\nparent e93386f6ce989464c8de00d51cc31a72e831989f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1643529955 +0000\ncommitter GitHub <noreply@github.com> 1643529955 +0000\n\nMerge #11356\n\n11356: Rollback env vars changed by a proc macro r=vlad20012 a=vlad20012\n\nFixes #11355\n\nCo-authored-by: vlad20012 <beskvlad@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6010431a0b19bbb0be0b3f1bf321d4aa9ce95dfb", "html_url": "https://github.com/rust-lang/rust/commit/6010431a0b19bbb0be0b3f1bf321d4aa9ce95dfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6010431a0b19bbb0be0b3f1bf321d4aa9ce95dfb/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6634eaf13a7e3a2b30f98f6e69af952f2d760df4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6634eaf13a7e3a2b30f98f6e69af952f2d760df4", "html_url": "https://github.com/rust-lang/rust/commit/6634eaf13a7e3a2b30f98f6e69af952f2d760df4"}, {"sha": "e93386f6ce989464c8de00d51cc31a72e831989f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e93386f6ce989464c8de00d51cc31a72e831989f", "html_url": "https://github.com/rust-lang/rust/commit/e93386f6ce989464c8de00d51cc31a72e831989f"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "52693547e596f9845fcffd7f7c4e564549c9a1e9", "filename": "crates/proc_macro_srv/src/lib.rs", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/6010431a0b19bbb0be0b3f1bf321d4aa9ce95dfb/crates%2Fproc_macro_srv%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6010431a0b19bbb0be0b3f1bf321d4aa9ce95dfb/crates%2Fproc_macro_srv%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Flib.rs?ref=6010431a0b19bbb0be0b3f1bf321d4aa9ce95dfb", "patch": "@@ -16,7 +16,9 @@ mod abis;\n \n use std::{\n     collections::{hash_map::Entry, HashMap},\n-    env, fs,\n+    env,\n+    ffi::OsString,\n+    fs,\n     path::{Path, PathBuf},\n     time::SystemTime,\n };\n@@ -38,9 +40,8 @@ impl ProcMacroSrv {\n             PanicMessage(format!(\"failed to load macro: {}\", err))\n         })?;\n \n-        let mut prev_env = HashMap::new();\n+        let prev_env = EnvSnapshot::new();\n         for (k, v) in &task.env {\n-            prev_env.insert(k.as_str(), env::var_os(k));\n             env::set_var(k, v);\n         }\n         let prev_working_dir = match task.current_dir {\n@@ -60,12 +61,8 @@ impl ProcMacroSrv {\n             .expand(&task.macro_name, &macro_body, attributes.as_ref())\n             .map(|it| FlatTree::new(&it));\n \n-        for (k, _) in &task.env {\n-            match &prev_env[k.as_str()] {\n-                Some(v) => env::set_var(k, v),\n-                None => env::remove_var(k),\n-            }\n-        }\n+        prev_env.rollback();\n+\n         if let Some(dir) = prev_working_dir {\n             if let Err(err) = std::env::set_current_dir(&dir) {\n                 eprintln!(\n@@ -101,6 +98,32 @@ impl ProcMacroSrv {\n     }\n }\n \n+struct EnvSnapshot {\n+    vars: HashMap<OsString, OsString>,\n+}\n+\n+impl EnvSnapshot {\n+    fn new() -> EnvSnapshot {\n+        EnvSnapshot { vars: env::vars_os().collect() }\n+    }\n+\n+    fn rollback(self) {\n+        let mut old_vars = self.vars;\n+        for (name, value) in env::vars_os() {\n+            let old_value = old_vars.remove(&name);\n+            if old_value != Some(value) {\n+                match old_value {\n+                    None => env::remove_var(name),\n+                    Some(old_value) => env::set_var(name, old_value),\n+                }\n+            }\n+        }\n+        for (name, old_value) in old_vars {\n+            env::set_var(name, old_value)\n+        }\n+    }\n+}\n+\n pub mod cli;\n \n #[cfg(test)]"}]}