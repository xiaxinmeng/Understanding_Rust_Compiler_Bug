{"sha": "2def81a5f1d48625f74ed401329fd9af4e8668f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZWY4MWE1ZjFkNDg2MjVmNzRlZDQwMTMyOWZkOWFmNGU4NjY4ZjI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-09-29T15:16:06Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-10-09T14:47:14Z"}, "message": "Store nightly build instead of checking env var every time", "tree": {"sha": "efd62f16b2f864626eb368ab7acd3b4f3454c85a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efd62f16b2f864626eb368ab7acd3b4f3454c85a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2def81a5f1d48625f74ed401329fd9af4e8668f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2def81a5f1d48625f74ed401329fd9af4e8668f2", "html_url": "https://github.com/rust-lang/rust/commit/2def81a5f1d48625f74ed401329fd9af4e8668f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2def81a5f1d48625f74ed401329fd9af4e8668f2/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6385631f4d8d911039287bc4ca5ff2f1f2f0cec", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6385631f4d8d911039287bc4ca5ff2f1f2f0cec", "html_url": "https://github.com/rust-lang/rust/commit/d6385631f4d8d911039287bc4ca5ff2f1f2f0cec"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "202a4284f4c82a2b07215909275bea8c208cd47c", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2def81a5f1d48625f74ed401329fd9af4e8668f2/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2def81a5f1d48625f74ed401329fd9af4e8668f2/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=2def81a5f1d48625f74ed401329fd9af4e8668f2", "patch": "@@ -313,7 +313,7 @@ declare_lint! {\n }\n \n declare_lint! {\n-    pub MISSING_DOC_ITEM_CODE_EXAMPLE,\n+    pub MISSING_DOC_CODE_EXAMPLES,\n     Allow,\n     \"warn about missing code example in an item's documentation\"\n }"}, {"sha": "76ca408327095a6070a9dee9712cb9db289a8d27", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2def81a5f1d48625f74ed401329fd9af4e8668f2/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2def81a5f1d48625f74ed401329fd9af4e8668f2/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=2def81a5f1d48625f74ed401329fd9af4e8668f2", "patch": "@@ -348,7 +348,7 @@ pub fn run_core(search_paths: SearchPaths,\n     let intra_link_resolution_failure_name = lint::builtin::INTRA_DOC_LINK_RESOLUTION_FAILURE.name;\n     let warnings_lint_name = lint::builtin::WARNINGS.name;\n     let missing_docs = rustc_lint::builtin::MISSING_DOCS.name;\n-    let missing_doc_example = rustc_lint::builtin::MISSING_DOC_ITEM_CODE_EXAMPLE.name;\n+    let missing_doc_example = rustc_lint::builtin::MISSING_DOC_CODE_EXAMPLES.name;\n \n     // In addition to those specific lints, we also need to whitelist those given through\n     // command line, otherwise they'll get ignored and we don't want that."}, {"sha": "a780322e85e86af2c8ca2f7eb9494092d1bd44ca", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2def81a5f1d48625f74ed401329fd9af4e8668f2/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2def81a5f1d48625f74ed401329fd9af4e8668f2/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=2def81a5f1d48625f74ed401329fd9af4e8668f2", "patch": "@@ -57,13 +57,15 @@ enum PathKind {\n struct LinkCollector<'a, 'tcx: 'a, 'rcx: 'a, 'cstore: 'rcx> {\n     cx: &'a DocContext<'a, 'tcx, 'rcx, 'cstore>,\n     mod_ids: Vec<NodeId>,\n+    is_nightly_build: bool,\n }\n \n impl<'a, 'tcx, 'rcx, 'cstore> LinkCollector<'a, 'tcx, 'rcx, 'cstore> {\n     fn new(cx: &'a DocContext<'a, 'tcx, 'rcx, 'cstore>) -> Self {\n         LinkCollector {\n             cx,\n             mod_ids: Vec::new(),\n+            is_nightly_build: UnstableFeatures::from_environment().is_nightly_build(),\n         }\n     }\n \n@@ -240,7 +242,7 @@ fn look_for_tests<'a, 'tcx: 'a, 'rcx: 'a, 'cstore: 'rcx>(\n     if find_testable_code(&dox, &mut tests, ErrorCodes::No).is_ok() {\n         if tests.found_tests == 0 {\n             let mut diag = cx.tcx.struct_span_lint_node(\n-                lint::builtin::MISSING_DOC_ITEM_CODE_EXAMPLE,\n+                lint::builtin::MISSING_DOC_CODE_EXAMPLES,\n                 NodeId::new(0),\n                 span_of_attrs(&item.attrs),\n                 \"Missing code example in this documentation\");\n@@ -313,7 +315,7 @@ impl<'a, 'tcx, 'rcx, 'cstore> DocFolder for LinkCollector<'a, 'tcx, 'rcx, 'cstor\n \n         look_for_tests(&cx, &dox, &item);\n \n-        if !UnstableFeatures::from_environment().is_nightly_build() {\n+        if !self.is_nightly_build {\n             return None;\n         }\n "}]}