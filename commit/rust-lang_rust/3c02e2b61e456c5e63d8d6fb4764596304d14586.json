{"sha": "3c02e2b61e456c5e63d8d6fb4764596304d14586", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMDJlMmI2MWU0NTZjNWU2M2Q4ZDZmYjQ3NjQ1OTYzMDRkMTQ1ODY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-30T01:30:30Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-30T01:30:30Z"}, "message": "Merge pull request #4669 from pnkfelix/tutorial-revisions\n\nSmall fixes to code samples in Tutorials", "tree": {"sha": "0d1e40dec78bf3e9541ebfac8e4933b809da4343", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d1e40dec78bf3e9541ebfac8e4933b809da4343"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c02e2b61e456c5e63d8d6fb4764596304d14586", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c02e2b61e456c5e63d8d6fb4764596304d14586", "html_url": "https://github.com/rust-lang/rust/commit/3c02e2b61e456c5e63d8d6fb4764596304d14586", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c02e2b61e456c5e63d8d6fb4764596304d14586/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "464ec27fd3e0da18680ac5c649f83c59772c856b", "url": "https://api.github.com/repos/rust-lang/rust/commits/464ec27fd3e0da18680ac5c649f83c59772c856b", "html_url": "https://github.com/rust-lang/rust/commit/464ec27fd3e0da18680ac5c649f83c59772c856b"}, {"sha": "20af4d73616a0abebb1a26aa4cc26f1c240e66e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/20af4d73616a0abebb1a26aa4cc26f1c240e66e5", "html_url": "https://github.com/rust-lang/rust/commit/20af4d73616a0abebb1a26aa4cc26f1c240e66e5"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "6ec51c5035e93badfb0ca92fb3d3c5096cf0911b", "filename": "doc/tutorial-borrowed-ptr.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3c02e2b61e456c5e63d8d6fb4764596304d14586/doc%2Ftutorial-borrowed-ptr.md", "raw_url": "https://github.com/rust-lang/rust/raw/3c02e2b61e456c5e63d8d6fb4764596304d14586/doc%2Ftutorial-borrowed-ptr.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-borrowed-ptr.md?ref=3c02e2b61e456c5e63d8d6fb4764596304d14586", "patch": "@@ -302,7 +302,7 @@ rejected by the compiler):\n fn example3() -> int {\n     let mut x = ~X {f: 3};\n     let y = &x.f;\n-    x = ~{f: 4};  // Error reported here.\n+    x = ~X {f: 4};  // Error reported here.\n     *y\n }\n ~~~\n@@ -366,12 +366,14 @@ Things get trickier when the unique box is not uniquely owned by the\n stack frame, or when there is no way for the compiler to determine the\n box's owner. Consider a program like this:\n \n-~~~\n+~~~ {.xfail-test}\n struct R { g: int }\n struct S { mut f: ~R }\n-fn example5a(x: @S ...) -> int {\n+fn example5a(x: @S, callback: @fn()) -> int {\n     let y = &x.f.g;   // Error reported here.\n     ...\n+    callback();\n+    ...\n #   return 0;\n }\n ~~~"}, {"sha": "9df646fbf918031a2c25f09b321395ea14b5cdeb", "filename": "doc/tutorial.md", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3c02e2b61e456c5e63d8d6fb4764596304d14586/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/3c02e2b61e456c5e63d8d6fb4764596304d14586/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=3c02e2b61e456c5e63d8d6fb4764596304d14586", "patch": "@@ -2015,7 +2015,7 @@ the method name with the trait name.\n The compiler will use type inference to decide which implementation to call.\n \n ~~~~\n-# trait Shape { static fn new(area: float) -> self; }\n+trait Shape { static fn new(area: float) -> self; }\n # use float::consts::pi;\n # use float::sqrt;\n struct Circle { radius: float }\n@@ -2211,11 +2211,15 @@ Likewise, supertrait methods may also be called on trait objects.\n ~~~ {.xfail-test}\n # trait Shape { fn area(&self) -> float; }\n # trait Circle : Shape { fn radius(&self) -> float; }\n-# impl int: Shape { fn area(&self) -> float { 0.0 } }\n-# impl int: Circle { fn radius(&self) -> float { 0.0 } }\n-# let mycircle = 0;\n+# use float::consts::pi;\n+# use float::sqrt;\n+# struct Point { x: float, y: float }\n+# struct CircleStruct { center: Point, radius: float }\n+# impl CircleStruct: Circle { fn radius(&self) -> float { sqrt(self.area() / pi) } }\n+# impl CircleStruct: Shape { fn area(&self) -> float { pi * square(self.radius) } }\n \n-let mycircle: Circle = @mycircle as @Circle;\n+let concrete = @CircleStruct{center:Point{x:3f,y:4f},radius:5f};\n+let mycircle: Circle = concrete as @Circle;\n let nonsense = mycircle.radius() * mycircle.area();\n ~~~\n "}]}