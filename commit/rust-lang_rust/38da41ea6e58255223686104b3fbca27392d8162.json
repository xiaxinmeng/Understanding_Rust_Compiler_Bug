{"sha": "38da41ea6e58255223686104b3fbca27392d8162", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZGE0MWVhNmU1ODI1NTIyMzY4NjEwNGIzZmJjYTI3MzkyZDgxNjI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-22T20:01:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-22T20:01:34Z"}, "message": "Merge #9381\n\n9381: Fix compilation on WASM r=matklad a=flodiebold\n\nFixes #9214.\r\nFixes #9210.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "c848d19087658a68772ce5b1f836a3d6c32a63b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c848d19087658a68772ce5b1f836a3d6c32a63b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38da41ea6e58255223686104b3fbca27392d8162", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0kGeCRBK7hj4Ov3rIwAApEAIABEUJbiWvANWmA1bEDkA0PNC\n/T6uotKofkXsbl6/2s9Uo0tOJXoQ2wIfD7P0rM3p3PbwlRBP+nZMtFpczBcvzo9X\nVEA0Evuj4TFOTKeAb+hwi9hx6qR8zih5Eq0esLkPxuPfenXWCqp1s9tlWyDc/hY7\nRh8Eo+Ku8FM5EoTydJOoci3W/gY/GDcFapDv6puSCCnhO1p0QMaIiRZhNPz6YBXD\nuww8j5Gaae7AWVwz7AArIdRnqiFt+OhwAvC34mbaAI8Mo2MutCTPXcKzOMLXxl8j\nkv21ANNiODKlFCRwzFDqE9A6r0ootfKu+zqsLE6Uq7URhLIMgNIwY9B+bVOWTMY=\n=ehC+\n-----END PGP SIGNATURE-----\n", "payload": "tree c848d19087658a68772ce5b1f836a3d6c32a63b4\nparent 9b29573a4bfcecfcd3c48ada589f6129323a559c\nparent c61fee6d55c011e6f5eec29788101667ee62631c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1624392094 +0000\ncommitter GitHub <noreply@github.com> 1624392094 +0000\n\nMerge #9381\n\n9381: Fix compilation on WASM r=matklad a=flodiebold\n\nFixes #9214.\r\nFixes #9210.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38da41ea6e58255223686104b3fbca27392d8162", "html_url": "https://github.com/rust-lang/rust/commit/38da41ea6e58255223686104b3fbca27392d8162", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38da41ea6e58255223686104b3fbca27392d8162/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b29573a4bfcecfcd3c48ada589f6129323a559c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b29573a4bfcecfcd3c48ada589f6129323a559c", "html_url": "https://github.com/rust-lang/rust/commit/9b29573a4bfcecfcd3c48ada589f6129323a559c"}, {"sha": "c61fee6d55c011e6f5eec29788101667ee62631c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c61fee6d55c011e6f5eec29788101667ee62631c", "html_url": "https://github.com/rust-lang/rust/commit/c61fee6d55c011e6f5eec29788101667ee62631c"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "222676d5e1a94692f11907dd8e748144ca142b90", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38da41ea6e58255223686104b3fbca27392d8162/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/38da41ea6e58255223686104b3fbca27392d8162/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=38da41ea6e58255223686104b3fbca27392d8162", "patch": "@@ -66,6 +66,9 @@ jobs:\n \n     env:\n       targets: \"powerpc-unknown-linux-gnu x86_64-unknown-linux-musl\"\n+      # The rust-analyzer binary is not expected to compile on WASM, but the IDE\n+      # crate should\n+      targets_ide: \"wasm32-unknown-unknown\"\n \n     steps:\n     - name: Checkout repository\n@@ -79,7 +82,7 @@ jobs:\n         override: true\n \n     - name: Install Rust targets\n-      run: rustup target add ${{ env.targets }}\n+      run: rustup target add ${{ env.targets }} ${{ env.targets_ide }}\n \n     - name: Cache Dependencies\n       uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72\n@@ -89,6 +92,9 @@ jobs:\n         for target in ${{ env.targets }}; do\n           cargo check --target=$target --all-targets\n         done\n+        for target in ${{ env.targets_ide }}; do\n+          cargo check -p ide --target=$target --all-targets\n+        done\n \n   typescript:\n     name: TypeScript"}, {"sha": "2963484faefc1e95c2d84732afb7e6ede99f5732", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/38da41ea6e58255223686104b3fbca27392d8162/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38da41ea6e58255223686104b3fbca27392d8162/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=38da41ea6e58255223686104b3fbca27392d8162", "patch": "@@ -110,7 +110,7 @@ pub fn defer<F: FnOnce()>(f: F) -> impl Drop {\n     D(Some(f))\n }\n \n-#[repr(transparent)]\n+#[cfg_attr(not(target_arch = \"wasm32\"), repr(transparent))]\n pub struct JodChild(pub std::process::Child);\n \n impl ops::Deref for JodChild {\n@@ -135,7 +135,10 @@ impl Drop for JodChild {\n \n impl JodChild {\n     pub fn into_inner(self) -> std::process::Child {\n-        // SAFETY: repr transparent\n+        if cfg!(target_arch = \"wasm32\") {\n+            panic!(\"no processes on wasm\");\n+        }\n+        // SAFETY: repr transparent, except on WASM\n         unsafe { std::mem::transmute::<JodChild, std::process::Child>(self) }\n     }\n }"}, {"sha": "b290ba2f058272ce0f2ffd940251c8ecd975eb0c", "filename": "crates/stdx/src/process.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/38da41ea6e58255223686104b3fbca27392d8162/crates%2Fstdx%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38da41ea6e58255223686104b3fbca27392d8162/crates%2Fstdx%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Fprocess.rs?ref=38da41ea6e58255223686104b3fbca27392d8162", "patch": "@@ -236,3 +236,19 @@ mod imp {\n         slice::from_raw_parts_mut(v.as_mut_ptr().add(v.len()), v.capacity() - v.len())\n     }\n }\n+\n+#[cfg(target_arch = \"wasm32\")]\n+mod imp {\n+    use std::{\n+        io,\n+        process::{ChildStderr, ChildStdout},\n+    };\n+\n+    pub(crate) fn read2(\n+        _out_pipe: ChildStdout,\n+        _err_pipe: ChildStderr,\n+        _data: &mut dyn FnMut(bool, &mut Vec<u8>, bool),\n+    ) -> io::Result<()> {\n+        panic!(\"no processes on wasm\")\n+    }\n+}"}]}