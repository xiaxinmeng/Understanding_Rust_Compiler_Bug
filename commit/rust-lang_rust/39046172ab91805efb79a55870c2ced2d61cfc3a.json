{"sha": "39046172ab91805efb79a55870c2ced2d61cfc3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MDQ2MTcyYWI5MTgwNWVmYjc5YTU1ODcwYzJjZWQyZDYxY2ZjM2E=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-08T15:40:00Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-08T15:46:53Z"}, "message": "Nicer hunk headers for rust files\n\nI found this trick at\n<https://tekin.co.uk/2020/10/better-git-diff-output-for-ruby-python-elixir-and-more>\n\nBefore the hunk headers for changes in methods would refer to the impl:\n\n```diff\ndiff --git a/compiler/rustc_middle/src/ty/context.rs b/compiler/rustc_middle/src/ty/context.rs\nindex 1c6937e685c..fa4264d729b 100644\n--- a/compiler/rustc_middle/src/ty/context.rs\n+++ b/compiler/rustc_middle/src/ty/context.rs\n@@ -678,7 +678,7 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for TypeckResults<'tcx> {\n             ref closure_captures,\n             ref generator_interior_types,\n         } = *self;\n-\n+        // foo\n         hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {\n             type_dependent_defs.hash_stable(hcx, hasher);\n             field_indices.hash_stable(hcx, hasher);\n```\n\nAfter the hunk headers refer to the actual function signature:\n\n```diff\ndiff --git a/compiler/rustc_middle/src/ty/context.rs b/compiler/rustc_middle/src/ty/context.rs\nindex 1c6937e685c..fa4264d729b 100644\n--- a/compiler/rustc_middle/src/ty/context.rs\n+++ b/compiler/rustc_middle/src/ty/context.rs\n@@ -678,7 +678,7 @@ fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHas\n             ref closure_captures,\n             ref generator_interior_types,\n         } = *self;\n-\n+        // foo\n         hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {\n             type_dependent_defs.hash_stable(hcx, hasher);\n             field_indices.hash_stable(hcx, hasher);\n```\n\nWhen the function signature is visible, it will use the function\nsignature of the previous method as hunk header:\n\n```diff\ndiff --git a/compiler/rustc_middle/src/ty/context.rs b/compiler/rustc_middle/src/ty/context.rs\nindex 1c6937e685c..63058dfc837 100644\n--- a/compiler/rustc_middle/src/ty/context.rs\n+++ b/compiler/rustc_middle/src/ty/context.rs\n@@ -992,6 +992,7 @@ pub fn typeck_opt_const_arg(\n     }\n\n     pub fn alloc_steal_mir(self, mir: Body<'tcx>) -> &'tcx Steal<Body<'tcx>> {\n+        // foo\n         self.arena.alloc(Steal::new(mir))\n     }\n```", "tree": {"sha": "3bd991b0ef31ed3084b18327d59054d85a4b0293", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bd991b0ef31ed3084b18327d59054d85a4b0293"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39046172ab91805efb79a55870c2ced2d61cfc3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39046172ab91805efb79a55870c2ced2d61cfc3a", "html_url": "https://github.com/rust-lang/rust/commit/39046172ab91805efb79a55870c2ced2d61cfc3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39046172ab91805efb79a55870c2ced2d61cfc3a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87a0997ef9c0bfad0ba362741afa601d8fb285b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/87a0997ef9c0bfad0ba362741afa601d8fb285b8", "html_url": "https://github.com/rust-lang/rust/commit/87a0997ef9c0bfad0ba362741afa601d8fb285b8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2c5c37007d5bc1c2dc03adaeff3ba6399ba67fa1", "filename": ".gitattributes", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39046172ab91805efb79a55870c2ced2d61cfc3a/.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/39046172ab91805efb79a55870c2ced2d61cfc3a/.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitattributes?ref=39046172ab91805efb79a55870c2ced2d61cfc3a", "patch": "@@ -3,7 +3,7 @@\n * text=auto eol=lf\n *.cpp rust\n *.h rust\n-*.rs rust\n+*.rs rust diff=rust\n *.fixed linguist-language=Rust\n src/etc/installer/gfx/* binary\n *.woff binary"}]}