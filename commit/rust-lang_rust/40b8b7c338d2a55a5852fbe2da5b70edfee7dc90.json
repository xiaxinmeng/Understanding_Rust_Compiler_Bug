{"sha": "40b8b7c338d2a55a5852fbe2da5b70edfee7dc90", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwYjhiN2MzMzhkMmE1NWE1ODUyZmJlMmRhNWI3MGVkZmVlN2RjOTA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-25T10:18:39Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-25T10:19:05Z"}, "message": "use error-pattern", "tree": {"sha": "a59ab237c174980f094f86731d768ff00463b3d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a59ab237c174980f094f86731d768ff00463b3d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40b8b7c338d2a55a5852fbe2da5b70edfee7dc90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40b8b7c338d2a55a5852fbe2da5b70edfee7dc90", "html_url": "https://github.com/rust-lang/rust/commit/40b8b7c338d2a55a5852fbe2da5b70edfee7dc90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40b8b7c338d2a55a5852fbe2da5b70edfee7dc90/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffb6aa1288e77c4251043ec08b5731a3a65d92fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb6aa1288e77c4251043ec08b5731a3a65d92fb", "html_url": "https://github.com/rust-lang/rust/commit/ffb6aa1288e77c4251043ec08b5731a3a65d92fb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d66ca53dfb8d3aa7e5f4bc310cb22d8e50e89aeb", "filename": "src/test/ui/consts/miri_unleashed/drop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40b8b7c338d2a55a5852fbe2da5b70edfee7dc90/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40b8b7c338d2a55a5852fbe2da5b70edfee7dc90/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.rs?ref=40b8b7c338d2a55a5852fbe2da5b70edfee7dc90", "patch": "@@ -1,5 +1,6 @@\n // compile-flags: -Zunleash-the-miri-inside-of-you\n // ignore-x86 FIXME: missing sysroot spans (#53081)\n+// error-pattern: calling non-const function `<std::vec::Vec<i32> as std::ops::Drop>::drop`\n #![deny(const_err)]\n \n use std::mem::ManuallyDrop;\n@@ -12,8 +13,7 @@ static TEST_OK: () = {\n };\n \n // Make sure we catch executing bad drop functions.\n-// The actual error is located in `real_drop_in_place` so we can't capture it with the\n-// error annotations here.\n+// The actual error is tested by the error-pattern above.\n static TEST_BAD: () = {\n     let _v: Vec<i32> = Vec::new();\n     //~^ WARN skipping const check"}]}