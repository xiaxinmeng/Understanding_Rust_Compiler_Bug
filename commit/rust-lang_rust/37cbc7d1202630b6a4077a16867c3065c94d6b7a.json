{"sha": "37cbc7d1202630b6a4077a16867c3065c94d6b7a", "node_id": "C_kwDOAAsO6NoAKDM3Y2JjN2QxMjAyNjMwYjZhNDA3N2ExNjg2N2MzMDY1Yzk0ZDZiN2E", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2022-02-23T02:28:27Z"}, "committer": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2022-02-23T02:28:27Z"}, "message": "add some more summary from pr discussion", "tree": {"sha": "fdfc373f8029a750becf8ec4a3a6e8ec2cc9dfd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdfc373f8029a750becf8ec4a3a6e8ec2cc9dfd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37cbc7d1202630b6a4077a16867c3065c94d6b7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37cbc7d1202630b6a4077a16867c3065c94d6b7a", "html_url": "https://github.com/rust-lang/rust/commit/37cbc7d1202630b6a4077a16867c3065c94d6b7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37cbc7d1202630b6a4077a16867c3065c94d6b7a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49058142499b7112a4deaca030ad9f07a554182d", "url": "https://api.github.com/repos/rust-lang/rust/commits/49058142499b7112a4deaca030ad9f07a554182d", "html_url": "https://github.com/rust-lang/rust/commit/49058142499b7112a4deaca030ad9f07a554182d"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "e4961952d0be8077d6d2b7f1767ca7374bde198c", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/37cbc7d1202630b6a4077a16867c3065c94d6b7a/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37cbc7d1202630b6a4077a16867c3065c94d6b7a/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=37cbc7d1202630b6a4077a16867c3065c94d6b7a", "patch": "@@ -147,8 +147,10 @@ struct Custom {\n /// In application code, use `match` for the `ErrorKind` values you are expecting; use `_` to match\n /// \"all other errors\".\n ///\n-/// In comprehensive and thorough tests, you may need to cut-and-paste the current list of\n-/// errors from here into your test code.\n+/// In comprehensive and thorough tests that want to verify that a test doesn't return any known incorrect error kind, \n+/// you may want to cut-and-paste the current list of errors from here into your test code. This seems counterintuitive,\n+/// but it will make your tests more robust. In particular, if you want to verify that your code does produce an\n+/// unrecognized error kind, the robust solution is to check for all the recognized error kinds and fail in those cases.\n #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[allow(deprecated)]"}]}