{"sha": "f3fafbb006ee98635874f73e480655912b465e65", "node_id": "C_kwDOAAsO6NoAKGYzZmFmYmIwMDZlZTk4NjM1ODc0ZjczZTQ4MDY1NTkxMmI0NjVlNjU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-25T16:52:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-25T16:52:49Z"}, "message": "Auto merge of #102266 - Mark-Simulacrum:fix-custom-rustc, r=jyn514\n\nSupport overriding initial rustc and cargo paths\n\nThis restores functionality broken by #98483. Unfortunately, it doesn't add a test to verify this works, but in this case we notice pretty quickly as perf uses this functionality and so reports breakage immediately after merging.\n\nr? `@jyn514`\n\ncc https://rust-lang.zulipchat.com/#narrow/stream/326414-t-infra.2Fbootstrap/topic/rustc.20and.20cargo.20option.20broken.20in.20config.2Etoml, https://rust-lang.zulipchat.com/#narrow/stream/247081-t-compiler.2Fperformance/topic/Rustc.20benchmark.20broken", "tree": {"sha": "1831e12b785e622c5b3702675cc8060b4099a17a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1831e12b785e622c5b3702675cc8060b4099a17a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3fafbb006ee98635874f73e480655912b465e65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3fafbb006ee98635874f73e480655912b465e65", "html_url": "https://github.com/rust-lang/rust/commit/f3fafbb006ee98635874f73e480655912b465e65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3fafbb006ee98635874f73e480655912b465e65/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17e8752acafe7240f38bcb114586ff0568224cad", "url": "https://api.github.com/repos/rust-lang/rust/commits/17e8752acafe7240f38bcb114586ff0568224cad", "html_url": "https://github.com/rust-lang/rust/commit/17e8752acafe7240f38bcb114586ff0568224cad"}, {"sha": "439597bc1b3cbf6c8ceec7c81ae0143baee2c329", "url": "https://api.github.com/repos/rust-lang/rust/commits/439597bc1b3cbf6c8ceec7c81ae0143baee2c329", "html_url": "https://github.com/rust-lang/rust/commit/439597bc1b3cbf6c8ceec7c81ae0143baee2c329"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "74530dec97b7065ad3125eeb403a82c54be72ff5", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f3fafbb006ee98635874f73e480655912b465e65/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3fafbb006ee98635874f73e480655912b465e65/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=f3fafbb006ee98635874f73e480655912b465e65", "patch": "@@ -901,9 +901,7 @@ impl Config {\n         config.config = toml_path;\n \n         let build = toml.build.unwrap_or_default();\n-        let has_custom_rustc = build.rustc.is_some();\n \n-        set(&mut config.initial_rustc, build.rustc.map(PathBuf::from));\n         set(&mut config.out, flags.build_dir.or_else(|| build.build_dir.map(PathBuf::from)));\n         // NOTE: Bootstrap spawns various commands with different working directories.\n         // To avoid writing to random places on the file system, `config.out` needs to be an absolute path.\n@@ -912,10 +910,14 @@ impl Config {\n             config.out = crate::util::absolute(&config.out);\n         }\n \n-        if !has_custom_rustc && !config.initial_rustc.starts_with(&config.out) {\n-            config.initial_rustc = config.out.join(config.build.triple).join(\"stage0/bin/rustc\");\n-            config.initial_cargo = config.out.join(config.build.triple).join(\"stage0/bin/cargo\");\n-        }\n+        config.initial_rustc = build\n+            .rustc\n+            .map(PathBuf::from)\n+            .unwrap_or_else(|| config.out.join(config.build.triple).join(\"stage0/bin/rustc\"));\n+        config.initial_cargo = build\n+            .cargo\n+            .map(PathBuf::from)\n+            .unwrap_or_else(|| config.out.join(config.build.triple).join(\"stage0/bin/cargo\"));\n \n         // NOTE: it's important this comes *after* we set `initial_rustc` just above.\n         if config.dry_run {"}]}