{"sha": "ca147a029e2052f03029a78602c292e4ec267ed6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMTQ3YTAyOWUyMDUyZjAzMDI5YTc4NjAyYzI5MmU0ZWMyNjdlZDY=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-02-26T18:10:21Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-02-26T18:26:41Z"}, "message": "Change imported macros to use leaky modules rather than leaky functions.", "tree": {"sha": "7dd7906b95a233cef4789bb44a4e90b58d504785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7dd7906b95a233cef4789bb44a4e90b58d504785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca147a029e2052f03029a78602c292e4ec267ed6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca147a029e2052f03029a78602c292e4ec267ed6", "html_url": "https://github.com/rust-lang/rust/commit/ca147a029e2052f03029a78602c292e4ec267ed6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca147a029e2052f03029a78602c292e4ec267ed6/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6439e286f90a34d96cec91d82f941f7572817939", "url": "https://api.github.com/repos/rust-lang/rust/commits/6439e286f90a34d96cec91d82f941f7572817939", "html_url": "https://github.com/rust-lang/rust/commit/6439e286f90a34d96cec91d82f941f7572817939"}], "stats": {"total": 49, "additions": 9, "deletions": 40}, "files": [{"sha": "3686c31ea6e648d165604c8fa24cc04ba19bab0e", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -172,11 +172,6 @@ use syntax::ast_util;\n use syntax::codemap::span;\n use syntax::print::pprust::pat_to_str;\n \n-pub fn macros() {\n-    // FIXME(#3114): Macro import/export.\n-    include!(\"macros.rs\");\n-}\n-\n // An option identifying a literal: either a unit-like struct or an\n // expression.\n pub enum Lit {"}, {"sha": "57cb1a937764cd47ebf2df2ef11e06a76bfa1b57", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -18,11 +18,6 @@ use middle::trans::datum::*;\n \n use core::str;\n \n-pub fn macros() {\n-    // FIXME(#3114): Macro import/export.\n-    include!(\"macros.rs\");\n-}\n-\n pub fn trans_block(bcx: block, b: &ast::blk, dest: expr::Dest) -> block {\n     let _icx = bcx.insn_ctxt(\"trans_block\");\n     let mut bcx = bcx;"}, {"sha": "6226e83d046b3eb85ec845dc2ab92808911aab7a", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -149,8 +149,6 @@ use syntax::codemap::spanned;\n // These are passed around by the code generating functions to track the\n // destination of a computation's value.\n \n-fn macros() { include!(\"macros.rs\"); } // FIXME(#3114): Macro import/export.\n-\n pub enum Dest {\n     SaveIn(ValueRef),\n     Ignore,"}, {"sha": "14ed7692661d4dfd89d952264dbdcc2ba5602d4e", "filename": "src/librustc/middle/trans/macros.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmacros.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-{\n+#[macro_escape];\n \n macro_rules! unpack_datum(\n     ($bcx: ident, $inp: expr) => (\n@@ -18,7 +18,7 @@ macro_rules! unpack_datum(\n             db.datum\n         }\n     )\n-);\n+)\n \n macro_rules! unpack_result(\n     ($bcx: ident, $inp: expr) => (\n@@ -28,7 +28,7 @@ macro_rules! unpack_result(\n             db.val\n         }\n     )\n-);\n+)\n \n macro_rules! trace_span(\n     ($bcx: ident, $sp: expr, $str: expr) => (\n@@ -39,7 +39,7 @@ macro_rules! trace_span(\n             }\n         }\n     )\n-);\n+)\n \n macro_rules! trace(\n     ($bcx: ident, $str: expr) => (\n@@ -50,6 +50,5 @@ macro_rules! trace(\n             }\n         }\n     )\n-);\n+)\n \n-}"}, {"sha": "07b6556df6aa0592d0ae627d2759406ff2a181f7", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -39,11 +39,6 @@ use syntax::ast_util::local_def;\n use syntax::print::pprust::expr_to_str;\n use syntax::{ast, ast_map};\n \n-pub fn macros() {\n-    // FIXME(#3114): Macro import/export.\n-    include!(\"macros.rs\");\n-}\n-\n /**\n The main \"translation\" pass for methods.  Generates code\n for non-monomorphized methods only.  Other methods will"}, {"sha": "f63dac4c5ae55b8b4b5938a9df9f0bc19f1355c1", "filename": "src/librustc/middle/typeck/infer/combine.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -72,11 +72,6 @@ use syntax::ast::{Onceness, purity, ret_style};\n use syntax::ast;\n use syntax::codemap::span;\n \n-pub fn macros() {\n-    // FIXME(#3114): Macro import/export.\n-    include!(\"macros.rs\");\n-}\n-\n pub trait Combine {\n     fn infcx(&self) -> @mut InferCtxt;\n     fn tag(&self) -> ~str;"}, {"sha": "4fee6f061b1cacc80f06506624a0f7f17d5025cb", "filename": "src/librustc/middle/typeck/infer/lub.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flub.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -24,11 +24,6 @@ use std::list;\n use syntax::ast::{Many, Once, extern_fn, m_const, impure_fn, noreturn};\n use syntax::ast::{pure_fn, ret_style, return_val, unsafe_fn};\n \n-pub fn macros() {\n-    // FIXME(#3114): Macro import/export.\n-    include!(\"macros.rs\");\n-}\n-\n pub enum Lub = CombineFields;  // least-upper-bound: common supertype\n \n pub impl Lub {"}, {"sha": "e02772d951c556895a3602db073a731fd7372e30", "filename": "src/librustc/middle/typeck/infer/macros.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmacros.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-{\n+#[macro_escape];\n \n macro_rules! if_ok(\n     ($inp: expr) => (\n@@ -17,6 +17,5 @@ macro_rules! if_ok(\n             Err(e) => { return Err(e); }\n         }\n     )\n-);\n+)\n \n-}"}, {"sha": "8bb1f2f47e5e4820a037a97690f16e80254e374d", "filename": "src/librustc/middle/typeck/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -287,6 +287,7 @@ use syntax::codemap;\n use syntax::ast_util;\n use syntax::codemap::span;\n \n+pub mod macros;\n pub mod combine;\n pub mod glb;\n pub mod lattice;"}, {"sha": "12a9a6c4076e714417c2ceec4c847300b70c5694", "filename": "src/librustc/middle/typeck/infer/sub.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -25,10 +25,6 @@ use std::list::Nil;\n use std::list;\n use syntax::ast::{m_const, purity, ret_style};\n \n-pub fn macros() {\n-    // FIXME(#3114): Macro import/export.\n-    include!(\"macros.rs\");\n-}\n \n pub enum Sub = CombineFields;  // \"subtype\", \"subregion\" etc\n "}, {"sha": "617a64f32d3ec523a54c55df3003965ef017c785", "filename": "src/librustc/rustc.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ca147a029e2052f03029a78602c292e4ec267ed6/src%2Flibrustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Frustc.rc?ref=ca147a029e2052f03029a78602c292e4ec267ed6", "patch": "@@ -49,6 +49,7 @@ use back_ = back;\n \n pub mod middle {\n     pub mod trans {\n+        pub mod macros;\n         pub mod inline;\n         pub mod monomorphize;\n         pub mod controlflow;"}]}