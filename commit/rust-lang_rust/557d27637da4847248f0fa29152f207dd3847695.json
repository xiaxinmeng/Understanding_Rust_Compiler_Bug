{"sha": "557d27637da4847248f0fa29152f207dd3847695", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1N2QyNzYzN2RhNDg0NzI0OGYwZmEyOTE1MmYyMDdkZDM4NDc2OTU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-10-23T08:14:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-23T08:14:31Z"}, "message": "Rollup merge of #65417 - weiznich:more_coherence_tests, r=nikomatsakis\n\nAdd more coherence tests\n\nI've wrote the missing test cases listed in [this google doc](https://docs.google.com/spreadsheets/d/1WlroTEXE6qxxGvEOhICkUpqguYZP9YOZEvnmEtSNtM0/edit#gid=0)\n\n> The other thing that might be useful is to rename the existing tests so they all fit the new naming scheme we were using.\n\nI'm not entirely sure how to do this. If everything from the google sheet is covered could I just remove the remaining tests in `src/test/ui/coherence` or is there something in there that should remain?\n\ncc #63599\n\nr? @nikomatsakis", "tree": {"sha": "49fcd6652ff227d05fd96c2bdd2ded733d4ca4a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49fcd6652ff227d05fd96c2bdd2ded733d4ca4a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/557d27637da4847248f0fa29152f207dd3847695", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdsAvnCRBK7hj4Ov3rIwAAdHIIAGeJJTR8hhWEQgawLiTkNmYw\nFPjUd5rkesw9Yqn1R4TGeh91X3liM6Lz2Lc9qcbTD/9TCJlEClmALY/beEBCZprd\njjfj5XtyeMbMgezm0DBd7tfaHKbu5z1EUXDiCMvVg1474n7Lqt30IM8c5Z0V7zCh\nFgmdRmpXy0QUl3QQDDxY1D10k6vPFESZGF894ELyYgiBBSPYWzsvBlfXD4XDRxxj\nWRrGSEldik0XzOmbschqUdr8Sk2JrxXq3ZSZw9STZJxjxC8UfHHKwdeWdo8ldsk2\nVq7FbTlY3hfavIHAxUsOZuL3e57Pwg5CONwq+I3tCmX0F5lCGuAckv3SF/cP3SA=\n=XAM9\n-----END PGP SIGNATURE-----\n", "payload": "tree 49fcd6652ff227d05fd96c2bdd2ded733d4ca4a7\nparent bd82de0de69d72fcdb9054c70d2a1ee8328e5480\nparent 7e17ea37b72efd42153604a28977a8482ceef6f8\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1571818471 +0900\ncommitter GitHub <noreply@github.com> 1571818471 +0900\n\nRollup merge of #65417 - weiznich:more_coherence_tests, r=nikomatsakis\n\nAdd more coherence tests\n\nI've wrote the missing test cases listed in [this google doc](https://docs.google.com/spreadsheets/d/1WlroTEXE6qxxGvEOhICkUpqguYZP9YOZEvnmEtSNtM0/edit#gid=0)\n\n> The other thing that might be useful is to rename the existing tests so they all fit the new naming scheme we were using.\n\nI'm not entirely sure how to do this. If everything from the google sheet is covered could I just remove the remaining tests in `src/test/ui/coherence` or is there something in there that should remain?\n\ncc #63599\n\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/557d27637da4847248f0fa29152f207dd3847695", "html_url": "https://github.com/rust-lang/rust/commit/557d27637da4847248f0fa29152f207dd3847695", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/557d27637da4847248f0fa29152f207dd3847695/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd82de0de69d72fcdb9054c70d2a1ee8328e5480", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd82de0de69d72fcdb9054c70d2a1ee8328e5480", "html_url": "https://github.com/rust-lang/rust/commit/bd82de0de69d72fcdb9054c70d2a1ee8328e5480"}, {"sha": "7e17ea37b72efd42153604a28977a8482ceef6f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e17ea37b72efd42153604a28977a8482ceef6f8", "html_url": "https://github.com/rust-lang/rust/commit/7e17ea37b72efd42153604a28977a8482ceef6f8"}], "stats": {"total": 373, "additions": 373, "deletions": 0}, "files": [{"sha": "de0b66a35eb01151a0d6fac92c6b8f7a8d36f296", "filename": "src/test/ui/coherence/impl-foreign-for-foreign.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote for i32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "b03a75a77c3460708d2beb5644071ec48ba22632", "filename": "src/test/ui/coherence/impl-foreign-for-foreign.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.stderr?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,12 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-foreign.rs:12:1\n+   |\n+LL | impl Remote for i32 {\n+   | ^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "5146263d9911423d513923d33a1c09d34dd6b4f1", "filename": "src/test/ui/coherence/impl-foreign-for-foreign[foreign].rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,25 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote1<Rc<i32>> for i32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl Remote1<Rc<Local>> for f64 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl<T> Remote1<Rc<T>> for f32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "bfaec790b20a66f90e2a37d42348fd3dd94bddca", "filename": "src/test/ui/coherence/impl-foreign-for-foreign[foreign].stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.stderr?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,30 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-foreign[foreign].rs:12:1\n+   |\n+LL | impl Remote1<Rc<i32>> for i32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-foreign[foreign].rs:16:1\n+   |\n+LL | impl Remote1<Rc<Local>> for f64 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-foreign[foreign].rs:20:1\n+   |\n+LL | impl<T> Remote1<Rc<T>> for f32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "050769dcf4ce8809d965de97ae0e6526dfcbba82", "filename": "src/test/ui/coherence/impl-foreign-for-foreign[local].rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Blocal%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Blocal%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Blocal%5D.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local<T>(Rc<T>);\n+\n+impl Remote1<Local<i32>> for i32 {}\n+impl<T> Remote1<Local<T>> for f32 {}\n+\n+fn main() {}"}, {"sha": "03b11edf98b416f1678950e2be4e3d9548adaa9c", "filename": "src/test/ui/coherence/impl-foreign-for-fundamental[foreign].rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,21 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote for Box<i32> {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl<T> Remote for Box<Rc<T>> {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "2ce4921cf938f44a18ebb141c94e610574f4273e", "filename": "src/test/ui/coherence/impl-foreign-for-fundamental[foreign].stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.stderr?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,21 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-fundamental[foreign].rs:12:1\n+   |\n+LL | impl Remote for Box<i32> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-fundamental[foreign].rs:16:1\n+   |\n+LL | impl<T> Remote for Box<Rc<T>> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "ae03ce6a440dc7d380a84f3f0581a8e9cae67fbf", "filename": "src/test/ui/coherence/impl-foreign-for-fundamental[local].rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Blocal%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Blocal%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Blocal%5D.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<T>(Rc<T>);\n+\n+impl Remote for Box<Local> {}\n+impl<T> Remote for Box<Local1<T>> {}\n+\n+fn main() {}"}, {"sha": "c9dddeba18dc5a6f7e251b0cb16d14f260f93013", "filename": "src/test/ui/coherence/impl-foreign-for-local.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-local.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,15 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote for Local {}\n+\n+fn main() {}"}, {"sha": "06efb6c2ad75e4ae4dfaeb4796560865c2f9a815", "filename": "src/test/ui/coherence/impl-foreign[fundemental[foreign]]-for-foreign.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,26 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<T>(Rc<T>);\n+\n+impl Remote1<Box<String>> for i32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl Remote1<Box<Rc<i32>>> for f64 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl<T> Remote1<Box<Rc<T>>> for f32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "bf2361a1718afe94f5a067f9ba09979fd93aea57", "filename": "src/test/ui/coherence/impl-foreign[fundemental[foreign]]-for-foreign.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.stderr?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,30 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign[fundemental[foreign]]-for-foreign.rs:13:1\n+   |\n+LL | impl Remote1<Box<String>> for i32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign[fundemental[foreign]]-for-foreign.rs:17:1\n+   |\n+LL | impl Remote1<Box<Rc<i32>>> for f64 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign[fundemental[foreign]]-for-foreign.rs:21:1\n+   |\n+LL | impl<T> Remote1<Box<Rc<T>>> for f32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "d47e0a36a565959f90a92a347e8c11eb4c7bfd2f", "filename": "src/test/ui/coherence/impl-foreign[fundemental[local]]-for-foreign.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,18 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<T>(Rc<T>);\n+\n+impl Remote1<Box<Local>> for i32 {}\n+impl Remote1<Box<Local1<i32>>> for f64 {}\n+impl<T> Remote1<Box<Local1<T>>> for f32 {}\n+\n+fn main() {}"}, {"sha": "db7a2ae8076a3aa8e7fea020214e93d89c35d7b6", "filename": "src/test/ui/coherence/impl[t]-foreign-for-foreign[t].rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,23 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+struct Local;\n+\n+impl Remote for Rc<Local> {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+impl<T> Remote for Arc<T> {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "d7ffcaf76f9a2a9b56f95cc5b381b8a704ea42ae", "filename": "src/test/ui/coherence/impl[t]-foreign-for-foreign[t].stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.stderr?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,21 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl[t]-foreign-for-foreign[t].rs:13:1\n+   |\n+LL | impl Remote for Rc<Local> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl[t]-foreign-for-foreign[t].rs:18:1\n+   |\n+LL | impl<T> Remote for Arc<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "4cc19e1a526cabcb05a22e07104dfa925bd15ab6", "filename": "src/test/ui/coherence/impl[t]-foreign-for-fundamental[t].rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote for Box<T> {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for\n+    // | some local type (e.g., `MyStruct<T>`)\n+}\n+\n+fn main() {}"}, {"sha": "20ce11ef9759e183414d1be0f7a5bd890dc97ebd", "filename": "src/test/ui/coherence/impl[t]-foreign-for-fundamental[t].stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.stderr?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,11 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign-for-fundamental[t].rs:12:1\n+   |\n+LL | impl<T> Remote for Box<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "914680f191ac9e10f6b608dab7f628f6b921f964", "filename": "src/test/ui/coherence/impl[t]-foreign[fundemental[local]]-for-foreign[t].rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign%5Bt%5D.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<S>(Rc<S>);\n+\n+impl<T> Remote1<Box<Local>> for Rc<T> {}\n+impl<S, T> Remote1<Box<Local1<S>>> for Rc<T> {}\n+\n+fn main() {}"}, {"sha": "1e84ff40c6227e97c3796190c1b398c76289609d", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-foreign[t].rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign%5Bt%5D.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<S>(Rc<S>);\n+\n+impl<T> Remote1<Local> for Rc<T> {}\n+impl<T, S> Remote1<Local1<S>> for Rc<T> {}\n+\n+fn main() {}"}, {"sha": "ea6aa101d209c1e2647c1c069fb7f3b263d89046", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-fundamental[foreign[t]].rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bforeign%5Bt%5D%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/557d27637da4847248f0fa29152f207dd3847695/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bforeign%5Bt%5D%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bforeign%5Bt%5D%5D.rs?ref=557d27637da4847248f0fa29152f207dd3847695", "patch": "@@ -0,0 +1,19 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<S>(Rc<S>);\n+\n+impl<T> Remote1<Local> for Box<Rc<T>> {}\n+impl<T, S> Remote1<Local1<S>> for Box<Rc<T>> {}\n+impl<T> Remote1<Box<Local>> for Box<Rc<T>> {}\n+impl<T, S> Remote1<Box<Local1<S>>> for Box<Rc<T>> {}\n+\n+fn main() {}"}]}