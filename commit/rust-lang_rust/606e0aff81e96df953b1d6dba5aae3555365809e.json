{"sha": "606e0aff81e96df953b1d6dba5aae3555365809e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNmUwYWZmODFlOTZkZjk1M2IxZDZkYmE1YWFlMzU1NTM2NTgwOWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-04T16:51:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-04T16:51:13Z"}, "message": "Simplify doc comment lexing\n\nis_doc_comment function checks the first four chars, but this is\nredundant, `doc_comment` local var has the same info.", "tree": {"sha": "a0b1b8e8933e4e935a1026e5846219ad1b3145bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0b1b8e8933e4e935a1026e5846219ad1b3145bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/606e0aff81e96df953b1d6dba5aae3555365809e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/606e0aff81e96df953b1d6dba5aae3555365809e", "html_url": "https://github.com/rust-lang/rust/commit/606e0aff81e96df953b1d6dba5aae3555365809e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/606e0aff81e96df953b1d6dba5aae3555365809e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "546cb21f580ae3d4e0bf42ccecfad4a34defebe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/546cb21f580ae3d4e0bf42ccecfad4a34defebe7", "html_url": "https://github.com/rust-lang/rust/commit/546cb21f580ae3d4e0bf42ccecfad4a34defebe7"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "5a11d74422aca956dfa1627c79c7c2e61668a67a", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/606e0aff81e96df953b1d6dba5aae3555365809e/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e0aff81e96df953b1d6dba5aae3555365809e/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=606e0aff81e96df953b1d6dba5aae3555365809e", "patch": "@@ -631,26 +631,14 @@ impl<'a> StringReader<'a> {\n                         self.bump();\n                     }\n \n-                    if doc_comment {\n+                    let tok = if doc_comment {\n                         self.with_str_from(start_bpos, |string| {\n-                            // comments with only more \"/\"s are not doc comments\n-                            let tok = if is_doc_comment(string) {\n-                                token::DocComment(Symbol::intern(string))\n-                            } else {\n-                                token::Comment\n-                            };\n-\n-                            Some(TokenAndSpan {\n-                                tok,\n-                                sp: self.mk_sp(start_bpos, self.pos),\n-                            })\n+                            token::DocComment(Symbol::intern(string))\n                         })\n                     } else {\n-                        Some(TokenAndSpan {\n-                            tok: token::Comment,\n-                            sp: self.mk_sp(start_bpos, self.pos),\n-                        })\n-                    }\n+                        token::Comment\n+                    };\n+                    Some(TokenAndSpan { tok, sp: self.mk_sp(start_bpos, self.pos) })\n                 }\n                 Some('*') => {\n                     self.bump();"}]}