{"sha": "3cda3c96e37bba7023f0379cc1235fe0bd25e9f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZGEzYzk2ZTM3YmJhNzAyM2YwMzc5Y2MxMjM1ZmUwYmQyNWU5Zjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-09T22:41:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-09T22:41:23Z"}, "message": "Auto merge of #28250 - durka:patch-7, r=steveklabnik\n\nI took a stab at fixing #28064. Not sure if this all-features-in-one-example approach is the right one. Also I completely made up the terms \"star globbing\" and \"brace expansion globbing\" -- they are just called \"glob-like syntax\" in the reference.", "tree": {"sha": "41c7d8008387679ae1150606f3126d201cd252cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41c7d8008387679ae1150606f3126d201cd252cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cda3c96e37bba7023f0379cc1235fe0bd25e9f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cda3c96e37bba7023f0379cc1235fe0bd25e9f7", "html_url": "https://github.com/rust-lang/rust/commit/3cda3c96e37bba7023f0379cc1235fe0bd25e9f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cda3c96e37bba7023f0379cc1235fe0bd25e9f7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaa5bf31b8b6cf05bb367f5046348aa098acfee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaa5bf31b8b6cf05bb367f5046348aa098acfee9", "html_url": "https://github.com/rust-lang/rust/commit/eaa5bf31b8b6cf05bb367f5046348aa098acfee9"}, {"sha": "a506b7c53237271cce1f794535d4a3203a84a559", "url": "https://api.github.com/repos/rust-lang/rust/commits/a506b7c53237271cce1f794535d4a3203a84a559", "html_url": "https://github.com/rust-lang/rust/commit/a506b7c53237271cce1f794535d4a3203a84a559"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "1c5115117cb17f7b4a4afa7159895f2d09b741f0", "filename": "src/doc/trpl/crates-and-modules.md", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/3cda3c96e37bba7023f0379cc1235fe0bd25e9f7/src%2Fdoc%2Ftrpl%2Fcrates-and-modules.md", "raw_url": "https://github.com/rust-lang/rust/raw/3cda3c96e37bba7023f0379cc1235fe0bd25e9f7/src%2Fdoc%2Ftrpl%2Fcrates-and-modules.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fcrates-and-modules.md?ref=3cda3c96e37bba7023f0379cc1235fe0bd25e9f7", "patch": "@@ -263,6 +263,10 @@ the `phrases` crate. We can then use `phrases`\u2019 modules in this one. As we\n mentioned earlier, you can use double colons to refer to sub-modules and the\n functions inside of them.\n \n+(Note: when importing a crate that has dashes in its name \"like-this\", which is\n+not a valid Rust identifier, it will be converted by changing the dashes to\n+underscores, so you would write `extern crate like_this;`.)\n+\n Also, Cargo assumes that `src/main.rs` is the crate root of a binary crate,\n rather than a library crate. Our package now has two crates: `src/lib.rs` and\n `src/main.rs`. This pattern is quite common for executable crates: most\n@@ -532,3 +536,51 @@ Goodbye in English: Goodbye.\n Hello in Japanese: \u3053\u3093\u306b\u3061\u306f\n Goodbye in Japanese: \u3055\u3088\u3046\u306a\u3089\n ```\n+\n+## Complex imports\n+\n+Rust offers several advanced options that can add compactness and\n+convenience to your `extern crate` and `use` statements. Here is an example:\n+\n+```rust,ignore\n+extern crate phrases as sayings;\n+\n+use sayings::japanese::greetings as ja_greetings;\n+use sayings::japanese::farewells::*;\n+use sayings::english::{self, greetings as en_greetings, farewells as en_farewells};\n+\n+fn main() {\n+    println!(\"Hello in English; {}\", en_greetings::hello());\n+    println!(\"And in Japanese: {}\", ja_greetings::hello());\n+    println!(\"Goodbye in English: {}\", english::farewells::goodbye());\n+    println!(\"Again: {}\", en_farewells::goodbye());\n+    println!(\"And in Japanese: {}\", goodbye());\n+}\n+```\n+\n+What's going on here?\n+\n+First, both `extern crate` and `use` allow renaming the thing that is being\n+imported. So the crate is still called \"phrases\", but here we will refer\n+to it as \"sayings\". Similarly, the first `use` statement pulls in the\n+`japanese::farewells` module from the crate, but makes it available as\n+`jp_farewells` as opposed to simply `farewells`. This can help to avoid\n+ambiguity when importing similarly-named items from different places.\n+\n+The second `use` statement uses a star glob to bring in _all_ symbols from the\n+`sayings::japanese::farewells` module. As you can see we can later refer to\n+the Japanese `goodbye` function with no module qualifiers. This kind of glob\n+should be used sparingly.\n+\n+The third `use` statement bears more explanation. It's using \"brace expansion\"\n+globbing to compress three `use` statements into one (this sort of syntax\n+may be familiar if you've written Linux shell scripts before). The\n+uncompressed form of this statement would be:\n+```rust,ignore\n+use sayings::english;\n+use sayings::english::greetings as en_greetings;\n+use sayings::english::farewells as en_farewells;\n+```\n+As you can see, the curly brackets compress `use` statements for several items\n+under the same path, and in this context `self` just refers back to that path.\n+Note: The curly brackets cannot be nested or mixed with star globbing."}]}