{"sha": "e88c3e4fcd5827e091a1cbc1b3d8ce4c67e09fe0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4OGMzZTRmY2Q1ODI3ZTA5MWExY2JjMWIzZDhjZTRjNjdlMDlmZTA=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-05-04T11:41:41Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-05-04T11:42:30Z"}, "message": "refactor: use parent instead ancestors for use alias\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "e6335ccd81a2c9cc487819691659bdbea9a14034", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6335ccd81a2c9cc487819691659bdbea9a14034"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e88c3e4fcd5827e091a1cbc1b3d8ce4c67e09fe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e88c3e4fcd5827e091a1cbc1b3d8ce4c67e09fe0", "html_url": "https://github.com/rust-lang/rust/commit/e88c3e4fcd5827e091a1cbc1b3d8ce4c67e09fe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e88c3e4fcd5827e091a1cbc1b3d8ce4c67e09fe0/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96f581079ff1e2adf5758e77edc0a4c039e52df8", "url": "https://api.github.com/repos/rust-lang/rust/commits/96f581079ff1e2adf5758e77edc0a4c039e52df8", "html_url": "https://github.com/rust-lang/rust/commit/96f581079ff1e2adf5758e77edc0a4c039e52df8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "40d0e77b5f4ab6625bddeedeb452569f94e7188f", "filename": "crates/ra_ide_db/src/defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e88c3e4fcd5827e091a1cbc1b3d8ce4c67e09fe0/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e88c3e4fcd5827e091a1cbc1b3d8ce4c67e09fe0/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs?ref=e88c3e4fcd5827e091a1cbc1b3d8ce4c67e09fe0", "patch": "@@ -121,7 +121,7 @@ fn classify_name_inner(sema: &Semantics<RootDatabase>, name: &ast::Name) -> Opti\n         match parent {\n             ast::Alias(it) => {\n                 tested_by!(goto_def_for_use_alias; force);\n-                let use_tree = it.syntax().ancestors().find_map(ast::UseTree::cast)?;\n+                let use_tree = it.syntax().parent().and_then(ast::UseTree::cast)?;\n                 let path = use_tree.path()?;\n                 let path_segment = path.segment()?;\n                 let name_ref = path_segment.name_ref()?;"}]}