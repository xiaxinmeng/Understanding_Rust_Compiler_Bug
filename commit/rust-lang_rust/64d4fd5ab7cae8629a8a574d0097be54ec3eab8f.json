{"sha": "64d4fd5ab7cae8629a8a574d0097be54ec3eab8f", "node_id": "C_kwDOAAsO6NoAKDY0ZDRmZDVhYjdjYWU4NjI5YThhNTc0ZDAwOTdiZTU0ZWMzZWFiOGY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-05-08T08:20:19Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-05-08T08:20:19Z"}, "message": "print how long the measured sleep time actually was on test failure", "tree": {"sha": "ac3674bd6d342b5818598533f908b0c2272c1143", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac3674bd6d342b5818598533f908b0c2272c1143"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64d4fd5ab7cae8629a8a574d0097be54ec3eab8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64d4fd5ab7cae8629a8a574d0097be54ec3eab8f", "html_url": "https://github.com/rust-lang/rust/commit/64d4fd5ab7cae8629a8a574d0097be54ec3eab8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64d4fd5ab7cae8629a8a574d0097be54ec3eab8f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1db8540fe62bb76f14a8d54dc6838d3672b0130d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1db8540fe62bb76f14a8d54dc6838d3672b0130d", "html_url": "https://github.com/rust-lang/rust/commit/1db8540fe62bb76f14a8d54dc6838d3672b0130d"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "28adebd099579c157e796469a13499970120f170", "filename": "src/tools/miri/tests/pass/concurrency/sync.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64d4fd5ab7cae8629a8a574d0097be54ec3eab8f/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64d4fd5ab7cae8629a8a574d0097be54ec3eab8f/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync.rs?ref=64d4fd5ab7cae8629a8a574d0097be54ec3eab8f", "patch": "@@ -203,7 +203,8 @@ fn park_timeout() {\n     // know Miri's timed synchronization primitives do not do that.\n     // We allow much longer sleeps as well since the macOS GHA runners seem very oversubscribed\n     // and sometimes just pause for 1 second or more.\n-    assert!((200..2000).contains(&start.elapsed().as_millis()));\n+    let elapsed = start.elapsed();\n+    assert!((200..2000).contains(&elapsed.as_millis()), \"bad sleep time: {:?}\", elapsed);\n }\n \n fn park_unpark() {\n@@ -222,7 +223,8 @@ fn park_unpark() {\n     // know Miri's timed synchronization primitives do not do that.\n     // We allow much longer sleeps as well since the macOS GHA runners seem very oversubscribed\n     // and sometimes just pause for 1 second or more.\n-    assert!((200..2000).contains(&start.elapsed().as_millis()));\n+    let elapsed = start.elapsed();\n+    assert!((200..2000).contains(&elapsed.as_millis()), \"bad sleep time: {:?}\", elapsed);\n \n     t2.join().unwrap();\n }"}]}