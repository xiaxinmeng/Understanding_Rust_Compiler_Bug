{"sha": "c480b6a75df08cef48190e3c18eab26e99bae58c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0ODBiNmE3NWRmMDhjZWY0ODE5MGUzYzE4ZWFiMjZlOTliYWU1OGM=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-07T18:05:12Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-27T05:25:46Z"}, "message": "fix #21714 by using discriminant_value in #[derive(Hash)]\n\nThis is the same approach taken in #24270, except that this\nshould not be a breaking change because it only changes the output\nof hash functions, which nobody should be relying on.", "tree": {"sha": "2735939396a33874f15e586382033c9a7ce0190f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2735939396a33874f15e586382033c9a7ce0190f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c480b6a75df08cef48190e3c18eab26e99bae58c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c480b6a75df08cef48190e3c18eab26e99bae58c", "html_url": "https://github.com/rust-lang/rust/commit/c480b6a75df08cef48190e3c18eab26e99bae58c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c480b6a75df08cef48190e3c18eab26e99bae58c/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01c0723ef247fec4b85af203c7247b66e3817e1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/01c0723ef247fec4b85af203c7247b66e3817e1b", "html_url": "https://github.com/rust-lang/rust/commit/01c0723ef247fec4b85af203c7247b66e3817e1b"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "936865864891062265caee142b47745b6c755d07", "filename": "src/libsyntax_ext/deriving/hash.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c480b6a75df08cef48190e3c18eab26e99bae58c/src%2Flibsyntax_ext%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c480b6a75df08cef48190e3c18eab26e99bae58c/src%2Flibsyntax_ext%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fhash.rs?ref=c480b6a75df08cef48190e3c18eab26e99bae58c", "patch": "@@ -12,7 +12,7 @@ use deriving;\n use deriving::generic::*;\n use deriving::generic::ty::*;\n \n-use syntax::ast::{MetaItem, Expr, Mutability};\n+use syntax::ast::{self, MetaItem, Expr, Mutability};\n use syntax::codemap::Span;\n use syntax::ext::base::{ExtCtxt, Annotatable};\n use syntax::ext::build::AstBuilder;\n@@ -81,15 +81,18 @@ fn hash_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructure)\n \n     let fields = match *substr.fields {\n         Struct(_, ref fs) => fs,\n-        EnumMatching(index, variant, ref fs) => {\n-            // Determine the discriminant. We will feed this value to the byte\n-            // iteration function.\n-            let discriminant = match variant.node.disr_expr {\n-                Some(ref d) => d.clone(),\n-                None => cx.expr_usize(trait_span, index)\n-            };\n+        EnumMatching(_, _, ref fs) => {\n+            let path = cx.std_path(&[\"intrinsics\", \"discriminant_value\"]);\n+            let call = cx.expr_call_global(\n+                trait_span, path, vec![cx.expr_self(trait_span)]);\n+            let variant_value = cx.expr_block(P(ast::Block {\n+                stmts: vec![],\n+                expr: Some(call),\n+                id: ast::DUMMY_NODE_ID,\n+                rules: ast::BlockCheckMode::Unsafe(ast::CompilerGenerated),\n+                span: trait_span }));\n \n-            stmts.push(call_hash(trait_span, discriminant));\n+            stmts.push(call_hash(trait_span, variant_value));\n \n             fs\n         }"}]}