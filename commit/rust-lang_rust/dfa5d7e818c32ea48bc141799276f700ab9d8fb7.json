{"sha": "dfa5d7e818c32ea48bc141799276f700ab9d8fb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYTVkN2U4MThjMzJlYTQ4YmMxNDE3OTkyNzZmNzAwYWI5ZDhmYjc=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2021-01-04T21:17:31Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2021-01-04T21:21:55Z"}, "message": "Fix the MSRV and add the tests for MSRV", "tree": {"sha": "bb8626bbb2d172861f2932c3a466dc32aec0414e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb8626bbb2d172861f2932c3a466dc32aec0414e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfa5d7e818c32ea48bc141799276f700ab9d8fb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa5d7e818c32ea48bc141799276f700ab9d8fb7", "html_url": "https://github.com/rust-lang/rust/commit/dfa5d7e818c32ea48bc141799276f700ab9d8fb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfa5d7e818c32ea48bc141799276f700ab9d8fb7/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b478a5731956de7d19db9ac76fed81b2ae9db1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b478a5731956de7d19db9ac76fed81b2ae9db1c", "html_url": "https://github.com/rust-lang/rust/commit/4b478a5731956de7d19db9ac76fed81b2ae9db1c"}], "stats": {"total": 66, "additions": 60, "deletions": 6}, "files": [{"sha": "b21f81bd517f70b45797bada442c0b3c50b7f842", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfa5d7e818c32ea48bc141799276f700ab9d8fb7/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa5d7e818c32ea48bc141799276f700ab9d8fb7/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=dfa5d7e818c32ea48bc141799276f700ab9d8fb7", "patch": "@@ -2968,4 +2968,6 @@ impl<'tcx> LateLintPass<'tcx> for PtrAsPtr {\n             }\n         }\n     }\n+\n+    extract_msrv_attr!(LateContext);\n }"}, {"sha": "8346a9454f4eee45040c9bcae8905de7cd64c494", "filename": "tests/ui/ptr_as_ptr.fixed", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dfa5d7e818c32ea48bc141799276f700ab9d8fb7/tests%2Fui%2Fptr_as_ptr.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/dfa5d7e818c32ea48bc141799276f700ab9d8fb7/tests%2Fui%2Fptr_as_ptr.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_as_ptr.fixed?ref=dfa5d7e818c32ea48bc141799276f700ab9d8fb7", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n \n #![warn(clippy::ptr_as_ptr)]\n+#![feature(custom_inner_attributes)]\n \n fn main() {\n     let ptr: *const u32 = &42_u32;\n@@ -28,3 +29,22 @@ fn main() {\n     let _: *const i32 = ptr.cast();\n     let _: *mut i32 = mut_ptr.cast();\n }\n+\n+fn _msrv_1_37() {\n+    #![clippy::msrv = \"1.37\"]\n+    let ptr: *const u32 = &42_u32;\n+    let mut_ptr: *mut u32 = &mut 42_u32;\n+\n+    // `pointer::cast` was stabilized in 1.38. Do not lint this\n+    let _ = ptr as *const i32;\n+    let _ = mut_ptr as *mut i32;\n+}\n+\n+fn _msrv_1_38() {\n+    #![clippy::msrv = \"1.38\"]\n+    let ptr: *const u32 = &42_u32;\n+    let mut_ptr: *mut u32 = &mut 42_u32;\n+\n+    let _ = ptr.cast::<i32>();\n+    let _ = mut_ptr.cast::<i32>();\n+}"}, {"sha": "b68d4bc0aaca1f91cc3ed1244953124fe29aaf49", "filename": "tests/ui/ptr_as_ptr.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dfa5d7e818c32ea48bc141799276f700ab9d8fb7/tests%2Fui%2Fptr_as_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa5d7e818c32ea48bc141799276f700ab9d8fb7/tests%2Fui%2Fptr_as_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_as_ptr.rs?ref=dfa5d7e818c32ea48bc141799276f700ab9d8fb7", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n \n #![warn(clippy::ptr_as_ptr)]\n+#![feature(custom_inner_attributes)]\n \n fn main() {\n     let ptr: *const u32 = &42_u32;\n@@ -28,3 +29,22 @@ fn main() {\n     let _: *const i32 = ptr as *const _;\n     let _: *mut i32 = mut_ptr as _;\n }\n+\n+fn _msrv_1_37() {\n+    #![clippy::msrv = \"1.37\"]\n+    let ptr: *const u32 = &42_u32;\n+    let mut_ptr: *mut u32 = &mut 42_u32;\n+\n+    // `pointer::cast` was stabilized in 1.38. Do not lint this\n+    let _ = ptr as *const i32;\n+    let _ = mut_ptr as *mut i32;\n+}\n+\n+fn _msrv_1_38() {\n+    #![clippy::msrv = \"1.38\"]\n+    let ptr: *const u32 = &42_u32;\n+    let mut_ptr: *mut u32 = &mut 42_u32;\n+\n+    let _ = ptr as *const i32;\n+    let _ = mut_ptr as *mut i32;\n+}"}, {"sha": "854906dc111dfec2bcd5a4dc3852ee99f5a2ec74", "filename": "tests/ui/ptr_as_ptr.stderr", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dfa5d7e818c32ea48bc141799276f700ab9d8fb7/tests%2Fui%2Fptr_as_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfa5d7e818c32ea48bc141799276f700ab9d8fb7/tests%2Fui%2Fptr_as_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_as_ptr.stderr?ref=dfa5d7e818c32ea48bc141799276f700ab9d8fb7", "patch": "@@ -1,34 +1,46 @@\n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:9:13\n+  --> $DIR/ptr_as_ptr.rs:10:13\n    |\n LL |     let _ = ptr as *const i32;\n    |             ^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ptr.cast::<i32>()`\n    |\n    = note: `-D clippy::ptr-as-ptr` implied by `-D warnings`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:10:13\n+  --> $DIR/ptr_as_ptr.rs:11:13\n    |\n LL |     let _ = mut_ptr as *mut i32;\n    |             ^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `mut_ptr.cast::<i32>()`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:15:17\n+  --> $DIR/ptr_as_ptr.rs:16:17\n    |\n LL |         let _ = *ptr_ptr as *const i32;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(*ptr_ptr).cast::<i32>()`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:28:25\n+  --> $DIR/ptr_as_ptr.rs:29:25\n    |\n LL |     let _: *const i32 = ptr as *const _;\n    |                         ^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ptr.cast()`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:29:23\n+  --> $DIR/ptr_as_ptr.rs:30:23\n    |\n LL |     let _: *mut i32 = mut_ptr as _;\n    |                       ^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `mut_ptr.cast()`\n \n-error: aborting due to 5 previous errors\n+error: `as` casting between raw pointers without changing its mutability\n+  --> $DIR/ptr_as_ptr.rs:48:13\n+   |\n+LL |     let _ = ptr as *const i32;\n+   |             ^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ptr.cast::<i32>()`\n+\n+error: `as` casting between raw pointers without changing its mutability\n+  --> $DIR/ptr_as_ptr.rs:49:13\n+   |\n+LL |     let _ = mut_ptr as *mut i32;\n+   |             ^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `mut_ptr.cast::<i32>()`\n+\n+error: aborting due to 7 previous errors\n "}]}