{"sha": "ff63866edb511a73eed657a8a4f5c81f1ee5a9bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNjM4NjZlZGI1MTFhNzNlZWQ2NTdhOGE0ZjVjODFmMWVlNWE5YmI=", "commit": {"author": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2017-03-03T14:42:30Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-15T14:50:44Z"}, "message": "Change how the `0` flag works in format!\n\nNow it always implies right-alignment, so that padding zeroes are placed after the sign (if any) and before the digits. In other words, it always takes precedence over explicitly specified `[[fill]align]`. This also affects the '#' flag: zeroes are placed after the prefix (0b, 0o, 0x) and before the digits.\n\n           :05     :<05    :>05    :^05\nbefore   |-0001| |-1000| |-0001| |-0100|\nafter    |-0001| |-0001| |-0001| |-0001|\n          :#05x   :<#05x  :>#05x  :^#05x\nbefore   |0x001| |0x100| |000x1| |0x010|\nafter    |0x001| |0x001| |0x001| |0x001|\n\nFixes #39997 [breaking-change]", "tree": {"sha": "a9f4fdcbba4d05220796bcc46a2a1dda5f76a90f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9f4fdcbba4d05220796bcc46a2a1dda5f76a90f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb", "html_url": "https://github.com/rust-lang/rust/commit/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb/comments", "author": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f10e2f63de720468e2b4bfcb275e4b90b1f9870", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f10e2f63de720468e2b4bfcb275e4b90b1f9870", "html_url": "https://github.com/rust-lang/rust/commit/6f10e2f63de720468e2b4bfcb275e4b90b1f9870"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "2735293528e3ffdcfd4f83c91a1ab70a4dc3f007", "filename": "src/libcollections/fmt.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb/src%2Flibcollections%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb/src%2Flibcollections%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ffmt.rs?ref=ff63866edb511a73eed657a8a4f5c81f1ee5a9bb", "patch": "@@ -366,6 +366,10 @@\n //!         like `{:08}` would yield `00000001` for the integer `1`, while the\n //!         same format would yield `-0000001` for the integer `-1`. Notice that\n //!         the negative version has one fewer zero than the positive version.\n+//!         Note that padding zeroes are always placed after the sign (if any)\n+//!         and before the digits. When used together with the `#` flag, a similar\n+//!         rule applies: padding zeroes are inserted after the prefix but before\n+//!         the digits.\n //!\n //! ## Width\n //!"}, {"sha": "fd77201317f63f6d332350e834a00ec79d00eb76", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=ff63866edb511a73eed657a8a4f5c81f1ee5a9bb", "patch": "@@ -1045,6 +1045,7 @@ impl<'a> Formatter<'a> {\n             // is zero\n             Some(min) if self.sign_aware_zero_pad() => {\n                 self.fill = '0';\n+                self.align = rt::v1::Alignment::Right;\n                 write_prefix(self)?;\n                 self.with_padding(min - width, rt::v1::Alignment::Right, |f| {\n                     f.buf.write_str(buf)"}, {"sha": "dcd3920ffd9ad8634ad694db3b407350d7bc68a9", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff63866edb511a73eed657a8a4f5c81f1ee5a9bb/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=ff63866edb511a73eed657a8a4f5c81f1ee5a9bb", "patch": "@@ -160,6 +160,22 @@ pub fn main() {\n     t!(format!(\"{:?}\", -0.0), \"-0\");\n     t!(format!(\"{:?}\", 0.0), \"0\");\n \n+    // sign aware zero padding\n+    t!(format!(\"{:<3}\", 1), \"1  \");\n+    t!(format!(\"{:>3}\", 1), \"  1\");\n+    t!(format!(\"{:^3}\", 1), \" 1 \");\n+    t!(format!(\"{:03}\", 1), \"001\");\n+    t!(format!(\"{:<03}\", 1), \"001\");\n+    t!(format!(\"{:>03}\", 1), \"001\");\n+    t!(format!(\"{:^03}\", 1), \"001\");\n+    t!(format!(\"{:+03}\", 1), \"+01\");\n+    t!(format!(\"{:<+03}\", 1), \"+01\");\n+    t!(format!(\"{:>+03}\", 1), \"+01\");\n+    t!(format!(\"{:^+03}\", 1), \"+01\");\n+    t!(format!(\"{:#05x}\", 1), \"0x001\");\n+    t!(format!(\"{:<#05x}\", 1), \"0x001\");\n+    t!(format!(\"{:>#05x}\", 1), \"0x001\");\n+    t!(format!(\"{:^#05x}\", 1), \"0x001\");\n \n     // Ergonomic format_args!\n     t!(format!(\"{0:x} {0:X}\", 15), \"f F\");"}]}