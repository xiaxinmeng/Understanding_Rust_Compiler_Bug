{"sha": "619a2906f850cb109ce8d59ea8863395c2ebe712", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxOWEyOTA2Zjg1MGNiMTA5Y2U4ZDU5ZWE4ODYzMzk1YzJlYmU3MTI=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-05-17T05:41:25Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-05-17T05:41:25Z"}, "message": "Collect at callsite, use eprintln instead of println", "tree": {"sha": "864faa9c5abde10169505c6b156d5595bdb71264", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/864faa9c5abde10169505c6b156d5595bdb71264"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/619a2906f850cb109ce8d59ea8863395c2ebe712", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAlzeSZgQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5iguD/9o3cX9YJhBC2iZTKrx7Wjc4TOeiGoKysiI\n4dwolQa7pnuw2Ios/6j+zb0+2VR6TIcjFn0RtOWP7761TWfkYM+ct935Muvktfm8\nXMHltUNfuRshTAAolfWDMUedw5N2kLwAEliCZay/MFT3jnJ7YlsvenjNu+g4h/GX\nW24FPAvn4uKEKFZpLE3dyFSoHuRqzv47uwojBX/jZC0BUHg3Sr3fpzg/K2p9i0b6\njTfX4AmDyDRUV9OdSD5YjRq3B/ClQygEtjmp5nDNL/t2mqTiK0IjdSUwxKwreZJr\nofzU2jYRzJMgz4SrWBfSL3/Vi42ybyfrxVHsRdpXpyXy1rfRD4oG1Mi8mliWLdEv\nJvDaGZ0D90sNGVivs0D+42qBkbm/a+PkV6kvj1rWNq8db5/jJ7tH15a0edhJ5NgU\nCy+SbbxuHwoaqScGdwNX5DjSZ2nsppFf8UsLFftjfuxWLowmuXv3xtuRSZaWys3Q\nuMtAlQAWi5IR95yZnBvwCQlShfhzX4LpWvXUsQTeqzsByuhjo3P/0jrarBK2RJ7k\nonX1bOk3uzXslzMVjjtBDABAcBeOFfzgdg8ntiXMCl5z+ySO6gA4zOqtFL+26Dba\nBlU0eFMrIirwkQiyG4XrupEdWHSJve+kMdSXBVgpRY3Oul0nFOJLyMs3/lESJVA3\nbl2g+IR8fQ==\n=2nx/\n-----END PGP SIGNATURE-----", "payload": "tree 864faa9c5abde10169505c6b156d5595bdb71264\nparent d9a8a8a778e33f2ce3cd18fad0da112ae713e602\nauthor Philipp Hansch <dev@phansch.net> 1558071685 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1558071685 +0200\n\nCollect at callsite, use eprintln instead of println\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/619a2906f850cb109ce8d59ea8863395c2ebe712", "html_url": "https://github.com/rust-lang/rust/commit/619a2906f850cb109ce8d59ea8863395c2ebe712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/619a2906f850cb109ce8d59ea8863395c2ebe712/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9a8a8a778e33f2ce3cd18fad0da112ae713e602", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9a8a8a778e33f2ce3cd18fad0da112ae713e602", "html_url": "https://github.com/rust-lang/rust/commit/d9a8a8a778e33f2ce3cd18fad0da112ae713e602"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "6c5107aebfd3af140dcf306174745a4530f4d070", "filename": "clippy_dev/src/stderr_length_check.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/619a2906f850cb109ce8d59ea8863395c2ebe712/clippy_dev%2Fsrc%2Fstderr_length_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/619a2906f850cb109ce8d59ea8863395c2ebe712/clippy_dev%2Fsrc%2Fstderr_length_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fstderr_length_check.rs?ref=619a2906f850cb109ce8d59ea8863395c2ebe712", "patch": "@@ -11,18 +11,18 @@ const LIMIT: usize = 320;\n \n pub fn check() {\n     let stderr_files = stderr_files();\n-    let exceeding_files = exceeding_stderr_files(stderr_files);\n+    let exceeding_files = exceeding_stderr_files(stderr_files).collect::<Vec<String>>();\n \n     if !exceeding_files.is_empty() {\n-        println!(\"Error: stderr files exceeding limit of {} lines:\", LIMIT);\n+        eprintln!(\"Error: stderr files exceeding limit of {} lines:\", LIMIT);\n         for path in exceeding_files {\n             println!(\"{}\", path);\n         }\n         std::process::exit(1);\n     }\n }\n \n-fn exceeding_stderr_files(files: impl Iterator<Item = walkdir::DirEntry>) -> Vec<String> {\n+fn exceeding_stderr_files(files: impl Iterator<Item = walkdir::DirEntry>) -> impl Iterator<Item = String> {\n     files\n         .filter_map(|file| {\n             let path = file.path().to_str().expect(\"Could not convert path to str\").to_string();\n@@ -33,7 +33,6 @@ fn exceeding_stderr_files(files: impl Iterator<Item = walkdir::DirEntry>) -> Vec\n                 None\n             }\n         })\n-        .collect()\n }\n \n fn stderr_files() -> impl Iterator<Item = walkdir::DirEntry> {"}]}