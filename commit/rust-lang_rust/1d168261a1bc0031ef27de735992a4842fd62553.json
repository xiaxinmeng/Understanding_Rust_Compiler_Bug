{"sha": "1d168261a1bc0031ef27de735992a4842fd62553", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMTY4MjYxYTFiYzAwMzFlZjI3ZGU3MzU5OTJhNDg0MmZkNjI1NTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-04T23:15:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-04T23:15:00Z"}, "message": "Auto merge of #50084 - killercup:compiletest-rustfix, r=Manishearth\n\nFirst step towards rustfix compiletest mode\n\nThis is the first small step towards testing auto-fixable compiler\nsuggestions using compiletest. Currently, it only checks if next to a\nUI test there also happens to a `*.rs.fixed` file, and then uses rustfix\n(added as external crate) on the original file, and asserts that it\nproduces the fixed version.\n\nTo show that this works, I've included one such test. I picked this test\ncase at random (and because it was simple) -- It is not relevant to the\n2018 edition. Indeed, in the near future, we want to be able to restrict\nrustfix to edition-lints, so this test cast might go away soon.\n\nIn case you still think this is somewhat feature-complete, here's a\nquick list of things currently missing that I want to add before telling\npeople they can use this:\n\n- [x] Make this an actual compiletest mode, with `test [fix] \u2026` output\n  and everything\n- [x] Assert that fixed files still compile\n- [x] Assert that fixed files produce no (or a known set of) diagnostics\n  output\n- [x] Update `update-references.sh` to support rustfix\n- [x] Use a published version of rustfix (i.e.: publish a new version\n  rustfix that exposes a useful API for this)", "tree": {"sha": "c53c956b4e906922c9de96ec644394b5c1114815", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c53c956b4e906922c9de96ec644394b5c1114815"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d168261a1bc0031ef27de735992a4842fd62553", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d168261a1bc0031ef27de735992a4842fd62553", "html_url": "https://github.com/rust-lang/rust/commit/1d168261a1bc0031ef27de735992a4842fd62553", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d168261a1bc0031ef27de735992a4842fd62553/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91db9dcf3730207f63b3dfc33b2c438a769b7517", "url": "https://api.github.com/repos/rust-lang/rust/commits/91db9dcf3730207f63b3dfc33b2c438a769b7517", "html_url": "https://github.com/rust-lang/rust/commit/91db9dcf3730207f63b3dfc33b2c438a769b7517"}, {"sha": "6f2d023028bbd666be2c211b923b32faf10a41da", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f2d023028bbd666be2c211b923b32faf10a41da", "html_url": "https://github.com/rust-lang/rust/commit/6f2d023028bbd666be2c211b923b32faf10a41da"}], "stats": {"total": 680, "additions": 647, "deletions": 33}, "files": [{"sha": "0f08eaf596a8ff239ddbbed955cac8df6d22da51", "filename": "src/Cargo.lock", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -394,6 +394,7 @@ dependencies = [\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustfix 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2234,6 +2235,17 @@ dependencies = [\n  \"rustdoc 0.0.0\",\n ]\n \n+[[package]]\n+name = \"rustfix\"\n+version = \"0.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"quick-error 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"rustfmt-nightly\"\n version = \"0.6.1\"\n@@ -3146,6 +3158,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum rustc-ap-syntax_pos 113.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"55793c2a775230c42661194c48d44b35d4c8439d79ad8528e56651e854c48c63\"\n \"checksum rustc-demangle 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"11fb43a206a04116ffd7cfcf9bcb941f8eb6cc7ff667272246b0a1c74259a3cb\"\n \"checksum rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dcf128d1287d2ea9d80910b5f1120d0b8eede3fbf1abe91c40d39ea7d51e6fda\"\n+\"checksum rustfix 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"165a212dd11124d7070892da20f71d82970ef1d1dd41cd804b70f39740a21c85\"\n \"checksum same-file 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d931a44fdaa43b8637009e7632a02adc4f2b2e0733c08caa4cf00e8da4a117a7\"\n \"checksum same-file 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cfb6eded0b06a0b512c8ddbcf04089138c9b4362c2f696f3c3d76039d68f3637\"\n \"checksum schannel 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"85fd9df495640643ad2d00443b3d78aae69802ad488debab4f1dd52fc1806ade\""}, {"sha": "bddc2eab16dd86467e346bb5a5a4ad4ece9e1162", "filename": "src/test/rustfix/closure-immutable-outer-variable.fixed", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fclosure-immutable-outer-variable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fclosure-immutable-outer-variable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fclosure-immutable-outer-variable.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Point at the captured immutable outer variable\n+\n+fn foo(mut f: Box<FnMut()>) {\n+    f();\n+}\n+\n+fn main() {\n+    let mut y = true;\n+    foo(Box::new(move || y = false) as Box<_>);\n+}"}, {"sha": "fe8e2bc6c8ed10046f0f45891af5dec585c8e67f", "filename": "src/test/rustfix/closure-immutable-outer-variable.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fclosure-immutable-outer-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fclosure-immutable-outer-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fclosure-immutable-outer-variable.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Point at the captured immutable outer variable\n+\n+fn foo(mut f: Box<FnMut()>) {\n+    f();\n+}\n+\n+fn main() {\n+    let y = true;\n+    foo(Box::new(move || y = false) as Box<_>);\n+}"}, {"sha": "39e19566d7652d1b0fa31eb8c9380790809a4097", "filename": "src/test/rustfix/empty-no-fixes.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fempty-no-fixes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fempty-no-fixes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fempty-no-fixes.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--crate-type lib"}, {"sha": "39e19566d7652d1b0fa31eb8c9380790809a4097", "filename": "src/test/rustfix/empty-no-fixes.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fempty-no-fixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fempty-no-fixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fempty-no-fixes.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--crate-type lib"}, {"sha": "ee58e77825343fb514a29ffad69f755ab53422ea", "filename": "src/test/rustfix/empty-no-fixes.rs.fixed", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fempty-no-fixes.rs.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fempty-no-fixes.rs.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fempty-no-fixes.rs.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--crate-type lib\n+fn foo() {}"}, {"sha": "d7a27a11fc07ae7ed77027a4b01907f2ea7411e8", "filename": "src/test/rustfix/issue-45562.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-45562.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-45562.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fissue-45562.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[no_mangle] pub static RAH: usize = 5;\n+\n+fn main() {}"}, {"sha": "39576e9c845e4bec5cbce87891f7799f5bc5f4d6", "filename": "src/test/rustfix/issue-45562.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-45562.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-45562.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fissue-45562.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[no_mangle] pub const RAH: usize = 5;\n+\n+fn main() {}"}, {"sha": "d931f90cd04313b0e17daa27e0464d9edb6d5862", "filename": "src/test/rustfix/issue-45799-bad-extern-crate-rename-suggestion-formatting.fixed", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate std as other_std;\n+fn main() {}"}, {"sha": "7c55f9c4eb9f0230b7a9f7049c50dc7a6f6e2841", "filename": "src/test/rustfix/issue-45799-bad-extern-crate-rename-suggestion-formatting.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate std;\n+fn main() {}"}, {"sha": "aaa04ef40042d892512e1807996d26f87131a14c", "filename": "src/test/rustfix/issue-46756-consider-borrowing-cast-or-binexpr.fixed", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-46756-consider-borrowing-cast-or-binexpr.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-46756-consider-borrowing-cast-or-binexpr.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fissue-46756-consider-borrowing-cast-or-binexpr.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(unused)]\n+\n+fn light_flows_our_war_of_mocking_words(and_yet: &usize) -> usize {\n+    and_yet + 1\n+}\n+\n+fn main() {\n+    let behold: isize = 2;\n+    let with_tears: usize = 3;\n+    light_flows_our_war_of_mocking_words(&(behold as usize));\n+    light_flows_our_war_of_mocking_words(&(with_tears + 4));\n+}"}, {"sha": "d21681747e9d3a8de97a5ced754ad4495687a776", "filename": "src/test/rustfix/issue-46756-consider-borrowing-cast-or-binexpr.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-46756-consider-borrowing-cast-or-binexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fissue-46756-consider-borrowing-cast-or-binexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fissue-46756-consider-borrowing-cast-or-binexpr.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(unused)]\n+\n+fn light_flows_our_war_of_mocking_words(and_yet: &usize) -> usize {\n+    and_yet + 1\n+}\n+\n+fn main() {\n+    let behold: isize = 2;\n+    let with_tears: usize = 3;\n+    light_flows_our_war_of_mocking_words(behold as usize);\n+    light_flows_our_war_of_mocking_words(with_tears + 4);\n+}"}, {"sha": "3f07b46791d22753d7a5492210b1d50c99c07cc7", "filename": "src/test/rustfix/main-no-fixes.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmain-no-fixes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmain-no-fixes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fmain-no-fixes.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {}"}, {"sha": "3f07b46791d22753d7a5492210b1d50c99c07cc7", "filename": "src/test/rustfix/main-no-fixes.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmain-no-fixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmain-no-fixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fmain-no-fixes.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {}"}, {"sha": "3f07b46791d22753d7a5492210b1d50c99c07cc7", "filename": "src/test/rustfix/main-no-fixes.rs.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmain-no-fixes.rs.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmain-no-fixes.rs.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fmain-no-fixes.rs.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {}"}, {"sha": "621a4127bc2932d30988f8edb1a6be24f11b838e", "filename": "src/test/rustfix/missing-comma-in-match.fixed", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmissing-comma-in-match.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmissing-comma-in-match.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fmissing-comma-in-match.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    match &Some(3) {\n+        &None => 1,\n+        &Some(2) => { 3 }\n+        _ => 2\n+    };\n+}"}, {"sha": "8ccad7b9c9411dfa3eff161de705bcf26d7c51f1", "filename": "src/test/rustfix/missing-comma-in-match.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmissing-comma-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fmissing-comma-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fmissing-comma-in-match.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    match &Some(3) {\n+        &None => 1\n+        &Some(2) => { 3 }\n+        _ => 2\n+    };\n+}"}, {"sha": "0ace6d96613d72e7d708372f9cacdb05650cae49", "filename": "src/test/rustfix/str-as-char.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fstr-as-char.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fstr-as-char.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fstr-as-char.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    println!(\"\u25cf\u25cf\");\n+}"}, {"sha": "fa0e474fc7fb7a19e55acc33086d8f380780a69a", "filename": "src/test/rustfix/str-as-char.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fstr-as-char.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fstr-as-char.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fstr-as-char.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    println!('\u25cf\u25cf');\n+}"}, {"sha": "9cb7537b42807e2f114d60474d8aadaca62a9725", "filename": "src/test/rustfix/tuple-float-index.fixed", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Ftuple-float-index.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Ftuple-float-index.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Ftuple-float-index.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z parse-only\n+\n+fn main () {\n+    ((1, (2, 3)).1).1;\n+}"}, {"sha": "8bfbd0e74db228a4739c570a0b607920820cb5df", "filename": "src/test/rustfix/tuple-float-index.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Ftuple-float-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Ftuple-float-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Ftuple-float-index.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z parse-only\n+\n+fn main () {\n+    (1, (2, 3)).1.1;\n+}"}, {"sha": "c3f615066bbbd9d4c3a977791db4e8bae6f30f3d", "filename": "src/test/rustfix/update-all-references.sh", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fupdate-all-references.sh?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,31 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# A script to update the references for all tests. The idea is that\n+# you do a run, which will generate files in the build directory\n+# containing the (normalized) actual output of the compiler. You then\n+# run this script, which will copy those files over. If you find\n+# yourself manually editing a foo.stderr file, you're doing it wrong.\n+#\n+# See all `update-references.sh`, if you just want to update a single test.\n+\n+if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" != \"\" ]]; then\n+    echo \"usage: $0 <build-directory>\"\n+    echo \"\"\n+    echo \"For example:\"\n+    echo \"   $0 ../../../build/x86_64-apple-darwin/test/rustfix\"\n+fi\n+\n+BUILD_DIR=$PWD/$1\n+MY_DIR=$(dirname $0)\n+cd $MY_DIR\n+find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR"}, {"sha": "bcca2fec10d33c830b306b87d0a763f2164cd14c", "filename": "src/test/rustfix/update-references.sh", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Frustfix%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fupdate-references.sh?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# A script to update the references for particular tests. The idea is\n+# that you do a run, which will generate files in the build directory\n+# containing the (normalized) actual output of the compiler. This\n+# script will then copy that output and replace the \"expected output\"\n+# files. You can then commit the changes.\n+#\n+# If you find yourself manually editing a foo.stderr file, you're\n+# doing it wrong.\n+\n+if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n+    echo \"usage: $0 <build-directory> <relative-path-to-rs-files>\"\n+    echo \"\"\n+    echo \"For example:\"\n+    echo \"   $0 ../../../build/x86_64-apple-darwin/test/rustfix *.rs */*.rs\"\n+fi\n+\n+MYDIR=$(dirname $0)\n+\n+BUILD_DIR=\"$1\"\n+shift\n+\n+shopt -s nullglob\n+\n+while [[ \"$1\" != \"\" ]]; do\n+    for OUT_NAME in $BUILD_DIR/${1%.rs}.*fixed; do\n+        OUT_BASE=`basename \"$OUT_NAME\"`\n+        if ! (diff $OUT_NAME $MYDIR/$OUT_BASE >& /dev/null); then\n+            echo updating $MYDIR/$OUT_BASE\n+            cp $OUT_NAME $MYDIR\n+        fi\n+    done\n+    shift\n+done"}, {"sha": "b3a0d592f760156bb21c36f4bb86415356a72926", "filename": "src/test/ui/suggestions/closure-immutable-outer-variable.fixed", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-rustfix\n+\n+// Point at the captured immutable outer variable\n+\n+fn foo(mut f: Box<FnMut()>) {\n+    f();\n+}\n+\n+fn main() {\n+    let mut y = true;\n+    foo(Box::new(move || y = false) as Box<_>); //~ ERROR cannot assign to captured outer variable\n+}"}, {"sha": "e162678460c6c0a2e84bf2f83d65e86256b1d5fd", "filename": "src/test/ui/suggestions/closure-immutable-outer-variable.nll.fixed", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.nll.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.nll.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.nll.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-rustfix\n+\n+// Point at the captured immutable outer variable\n+\n+fn foo(mut f: Box<FnMut()>) {\n+    f();\n+}\n+\n+fn main() {\n+    let y = true;\n+    foo(Box::new(move || y = false) as Box<_>); //~ ERROR cannot assign to captured outer variable\n+}"}, {"sha": "bc655114c2b471a764e8ce670620cacf369ffed3", "filename": "src/test/ui/suggestions/closure-immutable-outer-variable.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.nll.stderr?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -1,5 +1,5 @@\n error[E0594]: cannot assign to immutable item `y`\n-  --> $DIR/closure-immutable-outer-variable.rs:19:26\n+  --> $DIR/closure-immutable-outer-variable.rs:21:26\n    |\n LL |     foo(Box::new(move || y = false) as Box<_>); //~ ERROR cannot assign to captured outer variable\n    |                          ^^^^^^^^^ cannot mutate"}, {"sha": "e162678460c6c0a2e84bf2f83d65e86256b1d5fd", "filename": "src/test/ui/suggestions/closure-immutable-outer-variable.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// run-rustfix\n+\n // Point at the captured immutable outer variable\n \n fn foo(mut f: Box<FnMut()>) {"}, {"sha": "80a5a45a3058007b3f1f3aeccdbace628bb91074", "filename": "src/test/ui/suggestions/closure-immutable-outer-variable.rs.fixed", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.rs.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.rs.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.rs.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Point at the captured immutable outer variable\n+\n+fn foo(mut f: Box<FnMut()>) {\n+    f();\n+}\n+\n+fn main() {\n+    let mut y = true;\n+    foo(Box::new(move || y = false) as Box<_>); //~ ERROR cannot assign to captured outer variable\n+}"}, {"sha": "0ee11d8cf15dead51f9e482ea4627b6a2e816bdf", "filename": "src/test/ui/suggestions/closure-immutable-outer-variable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fclosure-immutable-outer-variable.stderr?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -1,5 +1,5 @@\n error[E0594]: cannot assign to captured outer variable in an `FnMut` closure\n-  --> $DIR/closure-immutable-outer-variable.rs:19:26\n+  --> $DIR/closure-immutable-outer-variable.rs:21:26\n    |\n LL |     let y = true;\n    |         - help: consider making `y` mutable: `mut y`"}, {"sha": "7c01f0d1ee5322e8bebaac318da0c9cd05cb2b86", "filename": "src/test/ui/suggestions/issue-45562.fixed", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45562.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45562.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45562.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-rustfix\n+\n+#[no_mangle] pub static RAH: usize = 5;\n+//~^ ERROR const items should never be #[no_mangle]\n+\n+fn main() {}"}, {"sha": "c27d52fcdd392ab78c81e6bdfe6edaffbdfc3f0c", "filename": "src/test/ui/suggestions/issue-45562.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45562.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45562.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45562.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// run-rustfix\n+\n #[no_mangle] pub const RAH: usize = 5;\n //~^ ERROR const items should never be #[no_mangle]\n "}, {"sha": "d9e624cadc70543811e30db2eb001a8df1ab86ec", "filename": "src/test/ui/suggestions/issue-45562.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45562.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45562.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45562.stderr?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -1,5 +1,5 @@\n error: const items should never be #[no_mangle]\n-  --> $DIR/issue-45562.rs:11:14\n+  --> $DIR/issue-45562.rs:13:14\n    |\n LL | #[no_mangle] pub const RAH: usize = 5;\n    |              ---------^^^^^^^^^^^^^^^^"}, {"sha": "e3287030408d114f3402a89dbc8f435a7d8aaf9a", "filename": "src/test/ui/suggestions/issue-45799-bad-extern-crate-rename-suggestion-formatting.fixed", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-rustfix\n+\n+extern crate std as other_std;\n+fn main() {}\n+//~^^ ERROR the name `std` is defined multiple times [E0259]"}, {"sha": "f47ea474d510b2fe3e8c3d3ab9bc828117428e1b", "filename": "src/test/ui/suggestions/issue-45799-bad-extern-crate-rename-suggestion-formatting.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// run-rustfix\n+\n extern crate std;\n fn main() {}\n //~^^ ERROR the name `std` is defined multiple times [E0259]"}, {"sha": "ecdfec2b3bfd6aaef1aed023e5f5ebdfd0662d2e", "filename": "src/test/ui/suggestions/issue-45799-bad-extern-crate-rename-suggestion-formatting.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.stderr?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -1,5 +1,5 @@\n error[E0259]: the name `std` is defined multiple times\n-  --> $DIR/issue-45799-bad-extern-crate-rename-suggestion-formatting.rs:11:1\n+  --> $DIR/issue-45799-bad-extern-crate-rename-suggestion-formatting.rs:13:1\n    |\n LL | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ `std` reimported here"}, {"sha": "77171cad6e71491a997d9c1c92bf295c1924e34a", "filename": "src/test/ui/suggestions/issue-46756-consider-borrowing-cast-or-binexpr.fixed", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46756-consider-borrowing-cast-or-binexpr.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46756-consider-borrowing-cast-or-binexpr.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46756-consider-borrowing-cast-or-binexpr.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-rustfix\n+\n+#![allow(unused)]\n+\n+fn light_flows_our_war_of_mocking_words(and_yet: &usize) -> usize {\n+    and_yet + 1\n+}\n+\n+fn main() {\n+    let behold: isize = 2;\n+    let with_tears: usize = 3;\n+    light_flows_our_war_of_mocking_words(&(behold as usize));\n+    //~^ ERROR mismatched types [E0308]\n+    light_flows_our_war_of_mocking_words(&(with_tears + 4));\n+    //~^ ERROR mismatched types [E0308]\n+}"}, {"sha": "e5ea9b5ed099dfa949479d3f7a94be6cf67ece2e", "filename": "src/test/ui/suggestions/issue-46756-consider-borrowing-cast-or-binexpr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46756-consider-borrowing-cast-or-binexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46756-consider-borrowing-cast-or-binexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46756-consider-borrowing-cast-or-binexpr.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// run-rustfix\n+\n #![allow(unused)]\n \n fn light_flows_our_war_of_mocking_words(and_yet: &usize) -> usize {"}, {"sha": "9c492751ca1a026be52083622c2970f14a135d4b", "filename": "src/test/ui/suggestions/issue-46756-consider-borrowing-cast-or-binexpr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46756-consider-borrowing-cast-or-binexpr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46756-consider-borrowing-cast-or-binexpr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-46756-consider-borrowing-cast-or-binexpr.stderr?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/issue-46756-consider-borrowing-cast-or-binexpr.rs:20:42\n+  --> $DIR/issue-46756-consider-borrowing-cast-or-binexpr.rs:22:42\n    |\n LL |     light_flows_our_war_of_mocking_words(behold as usize);\n    |                                          ^^^^^^^^^^^^^^^\n@@ -11,7 +11,7 @@ LL |     light_flows_our_war_of_mocking_words(behold as usize);\n               found type `usize`\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-46756-consider-borrowing-cast-or-binexpr.rs:22:42\n+  --> $DIR/issue-46756-consider-borrowing-cast-or-binexpr.rs:24:42\n    |\n LL |     light_flows_our_war_of_mocking_words(with_tears + 4);\n    |                                          ^^^^^^^^^^^^^^"}, {"sha": "4832f35f42d2ae82485f8032bacd976a91c82cd5", "filename": "src/test/ui/suggestions/missing-comma-in-match.fixed", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-comma-in-match.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-comma-in-match.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-comma-in-match.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-rustfix\n+\n+fn main() {\n+    match &Some(3) {\n+        &None => 1,\n+        &Some(2) => { 3 }\n+        //~^ ERROR expected one of `,`, `.`, `?`, `}`, or an operator, found `=>`\n+        //~| NOTE expected one of `,`, `.`, `?`, `}`, or an operator here\n+        _ => 2\n+    };\n+}"}, {"sha": "e39b20e77ea800a7e9d89626bac9c2c3c7ff340a", "filename": "src/test/ui/suggestions/missing-comma-in-match.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-comma-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-comma-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-comma-in-match.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// run-rustfix\n+\n fn main() {\n     match &Some(3) {\n         &None => 1"}, {"sha": "779359341073ea7f54141f9521a7e81a917179e0", "filename": "src/test/ui/suggestions/missing-comma-in-match.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-comma-in-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-comma-in-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-comma-in-match.stderr?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `,`, `.`, `?`, `}`, or an operator, found `=>`\n-  --> $DIR/missing-comma-in-match.rs:14:18\n+  --> $DIR/missing-comma-in-match.rs:16:18\n    |\n LL |         &None => 1\n    |                   - help: missing a comma here to end this `match` arm"}, {"sha": "c0dad38e436874a56279781d0c43942602cf9f87", "filename": "src/test/ui/suggestions/str-as-char.fixed", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fstr-as-char.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fstr-as-char.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstr-as-char.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-rustfix\n+\n+fn main() {\n+    println!(\"\u25cf\u25cf\");\n+    //~^ ERROR character literal may only contain one codepoint\n+}"}, {"sha": "b5a5df0af7f94009ce071fa770eed6c2256bb093", "filename": "src/test/ui/suggestions/str-as-char.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fstr-as-char.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fstr-as-char.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstr-as-char.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// run-rustfix\n+\n fn main() {\n     println!('\u25cf\u25cf');\n     //~^ ERROR character literal may only contain one codepoint"}, {"sha": "60eb182adf14546959ef6832ab03b92d300e6cf6", "filename": "src/test/ui/suggestions/str-as-char.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fstr-as-char.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Fstr-as-char.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstr-as-char.stderr?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -1,5 +1,5 @@\n error: character literal may only contain one codepoint\n-  --> $DIR/str-as-char.rs:12:14\n+  --> $DIR/str-as-char.rs:14:14\n    |\n LL |     println!('\u25cf\u25cf');\n    |              ^^^^"}, {"sha": "55bc2f77dada95089ca88f127324eec3d1798810", "filename": "src/test/ui/suggestions/tuple-float-index.fixed", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.fixed?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-rustfix\n+// compile-flags: -Z parse-only\n+\n+fn main () {\n+    ((1, (2, 3)).1).1; //~ ERROR unexpected token: `1.1`\n+}"}, {"sha": "d569ca4cb861e01a20fce5fd83aa6ed69ead7dd2", "filename": "src/test/ui/suggestions/tuple-float-index.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// run-rustfix\n // compile-flags: -Z parse-only\n \n fn main () {"}, {"sha": "15af0834f03729a12b2f1fd27f42ea6d09e3abf4", "filename": "src/test/ui/suggestions/tuple-float-index.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -1,5 +1,5 @@\n error: unexpected token: `1.1`\n-  --> $DIR/tuple-float-index.rs:14:17\n+  --> $DIR/tuple-float-index.rs:15:17\n    |\n LL |     (1, (2, 3)).1.1; //~ ERROR unexpected token: `1.1`\n    |     ------------^^^"}, {"sha": "47a85352b0044c0d39c78dd9c0bb35f6c95f2e65", "filename": "src/test/ui/update-references.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftest%2Fui%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fupdate-references.sh?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -26,15 +26,15 @@ if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n     echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui *.rs */*.rs\"\n fi\n \n-MYDIR=$(dirname $0)\n \n BUILD_DIR=\"$1\"\n shift\n \n shopt -s nullglob\n \n while [[ \"$1\" != \"\" ]]; do\n-    for EXT in \"stderr\" \"stdout\"; do\n+    MYDIR=$(dirname $1)\n+    for EXT in \"stderr\" \"stdout\" \"fixed\"; do\n         for OUT_NAME in $BUILD_DIR/${1%.rs}.*$EXT; do\n             OUT_BASE=`basename \"$OUT_NAME\"`\n             if ! (diff $OUT_NAME $MYDIR/$OUT_BASE >& /dev/null); then"}, {"sha": "77554f244c8626fdbad754bb0bd9f36226ef532d", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -13,6 +13,7 @@ regex = \"0.2\"\n serde = \"1.0\"\n serde_json = \"1.0\"\n serde_derive = \"1.0\"\n+rustfix = \"0.2\"\n \n [target.'cfg(unix)'.dependencies]\n libc = \"0.2\""}, {"sha": "2df5281659934c88717fafa379f458415165a1e7", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -74,30 +74,30 @@ impl FromStr for Mode {\n \n impl fmt::Display for Mode {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        fmt::Display::fmt(match *self {\n-                              CompileFail => \"compile-fail\",\n-                              ParseFail => \"parse-fail\",\n-                              RunFail => \"run-fail\",\n-                              RunPass => \"run-pass\",\n-                              RunPassValgrind => \"run-pass-valgrind\",\n-                              Pretty => \"pretty\",\n-                              DebugInfoGdb => \"debuginfo-gdb\",\n-                              DebugInfoLldb => \"debuginfo-lldb\",\n-                              Codegen => \"codegen\",\n-                              Rustdoc => \"rustdoc\",\n-                              CodegenUnits => \"codegen-units\",\n-                              Incremental => \"incremental\",\n-                              RunMake => \"run-make\",\n-                              Ui => \"ui\",\n-                              MirOpt => \"mir-opt\",\n-                          },\n-                          f)\n+        let s = match *self {\n+            CompileFail => \"compile-fail\",\n+            ParseFail => \"parse-fail\",\n+            RunFail => \"run-fail\",\n+            RunPass => \"run-pass\",\n+            RunPassValgrind => \"run-pass-valgrind\",\n+            Pretty => \"pretty\",\n+            DebugInfoGdb => \"debuginfo-gdb\",\n+            DebugInfoLldb => \"debuginfo-lldb\",\n+            Codegen => \"codegen\",\n+            Rustdoc => \"rustdoc\",\n+            CodegenUnits => \"codegen-units\",\n+            Incremental => \"incremental\",\n+            RunMake => \"run-make\",\n+            Ui => \"ui\",\n+            MirOpt => \"mir-opt\",\n+        };\n+        fmt::Display::fmt(s, f)\n     }\n }\n \n-#[derive(Clone)]\n+#[derive(Clone, PartialEq)]\n pub enum CompareMode {\n-    Nll\n+    Nll,\n }\n \n impl CompareMode {\n@@ -269,6 +269,7 @@ pub fn expected_output_path(testpaths: &TestPaths,\n     testpaths.file.with_extension(extension)\n }\n \n-pub const UI_EXTENSIONS: &[&str] = &[UI_STDERR, UI_STDOUT];\n+pub const UI_EXTENSIONS: &[&str] = &[UI_STDERR, UI_STDOUT, UI_FIXED];\n pub const UI_STDERR: &str = \"stderr\";\n pub const UI_STDOUT: &str = \"stdout\";\n+pub const UI_FIXED: &str = \"fixed\";"}, {"sha": "7ac3f5b5b25e8e5115f7943c0b0f3594a7906a0d", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -236,6 +236,7 @@ pub struct TestProps {\n     pub normalize_stdout: Vec<(String, String)>,\n     pub normalize_stderr: Vec<(String, String)>,\n     pub failure_status: i32,\n+    pub run_rustfix: bool,\n }\n \n impl TestProps {\n@@ -267,6 +268,7 @@ impl TestProps {\n             normalize_stdout: vec![],\n             normalize_stderr: vec![],\n             failure_status: 101,\n+            run_rustfix: false,\n         }\n     }\n \n@@ -403,6 +405,10 @@ impl TestProps {\n             if let Some(code) = config.parse_failure_status(ln) {\n                 self.failure_status = code;\n             }\n+\n+            if !self.run_rustfix {\n+                self.run_rustfix = config.parse_run_rustfix(ln);\n+            }\n         });\n \n         for key in &[\"RUST_TEST_NOCAPTURE\", \"RUST_TEST_THREADS\"] {\n@@ -642,6 +648,10 @@ impl Config {\n \n         None\n     }\n+\n+    fn parse_run_rustfix(&self, line: &str) -> bool {\n+        self.parse_name_directive(line, \"run-rustfix\")\n+    }\n }\n \n pub fn lldb_version_to_int(version_string: &str) -> isize {"}, {"sha": "a7849d53c3d75cd406feb26fffa4c6a3e315de2b", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -26,6 +26,7 @@ extern crate regex;\n extern crate serde_derive;\n extern crate serde_json;\n extern crate test;\n+extern crate rustfix;\n \n use std::env;\n use std::ffi::OsString;"}, {"sha": "fae75c352da1f7d21bd3a3060696d67bd18200fc", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d168261a1bc0031ef27de735992a4842fd62553/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=1d168261a1bc0031ef27de735992a4842fd62553", "patch": "@@ -12,7 +12,7 @@ use common::{Config, TestPaths};\n use common::{CompileFail, ParseFail, Pretty, RunFail, RunPass, RunPassValgrind};\n use common::{Codegen, CodegenUnits, DebugInfoGdb, DebugInfoLldb, Rustdoc};\n use common::{Incremental, MirOpt, RunMake, Ui};\n-use common::{expected_output_path, UI_STDERR, UI_STDOUT};\n+use common::{expected_output_path, UI_STDERR, UI_STDOUT, UI_FIXED};\n use common::CompareMode;\n use diff;\n use errors::{self, Error, ErrorKind};\n@@ -21,6 +21,7 @@ use json;\n use header::TestProps;\n use util::logv;\n use regex::Regex;\n+use rustfix::{apply_suggestions, get_suggestions_from_json};\n \n use std::collections::VecDeque;\n use std::collections::HashMap;\n@@ -2552,6 +2553,7 @@ impl<'test> TestCx<'test> {\n \n         let expected_stderr = self.load_expected_output(UI_STDERR);\n         let expected_stdout = self.load_expected_output(UI_STDOUT);\n+        let expected_fixed = self.load_expected_output(UI_FIXED);\n \n         let normalized_stdout =\n             self.normalize_output(&proc_res.stdout, &self.props.normalize_stdout);\n@@ -2568,6 +2570,21 @@ impl<'test> TestCx<'test> {\n         errors += self.compare_output(\"stdout\", &normalized_stdout, &expected_stdout);\n         errors += self.compare_output(\"stderr\", &normalized_stderr, &expected_stderr);\n \n+        if self.config.compare_mode.is_some() {\n+            // don't test rustfix with nll right now\n+        } else if self.props.run_rustfix {\n+            // Apply suggestions from rustc to the code itself\n+            let unfixed_code = self.load_expected_output_from_path(&self.testpaths.file)\n+                .unwrap();\n+            let suggestions = get_suggestions_from_json(&proc_res.stderr, &HashSet::new()).unwrap();\n+            let fixed_code = apply_suggestions(&unfixed_code, &suggestions);\n+\n+            errors += self.compare_output(\"fixed\", &fixed_code, &expected_fixed);\n+        } else if !expected_fixed.is_empty() {\n+            panic!(\"the `// run-rustfix` directive wasn't found but a `*.fixed` \\\n+                    file was found\");\n+        }\n+\n         if errors > 0 {\n             println!(\"To update references, run this command from build directory:\");\n             let relative_path_to_file = self.testpaths\n@@ -2603,6 +2620,23 @@ impl<'test> TestCx<'test> {\n                 self.check_error_patterns(&proc_res.stderr, &proc_res);\n             }\n         }\n+\n+        if self.props.run_rustfix && self.config.compare_mode.is_none() {\n+            // And finally, compile the fixed code and make sure it both\n+            // succeeds and has no diagnostics.\n+            let mut rustc = self.make_compile_args(\n+                &self.testpaths.file.with_extension(UI_FIXED),\n+                TargetLocation::ThisFile(self.make_exe_name()),\n+            );\n+            rustc.arg(\"-L\").arg(&self.aux_output_dir_name());\n+            let res = self.compose_and_run_compiler(rustc, None);\n+            if !res.status.success() {\n+                self.fatal_proc_rec(\"failed to compile fixed code\", &res);\n+            }\n+            if !res.stderr.is_empty() {\n+                self.fatal_proc_rec(\"fixed code is still producing diagnostics\", &res);\n+            }\n+        }\n     }\n \n     fn run_mir_opt_test(&self) {"}]}