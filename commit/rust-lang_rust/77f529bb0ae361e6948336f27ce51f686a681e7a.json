{"sha": "77f529bb0ae361e6948336f27ce51f686a681e7a", "node_id": "C_kwDOAAsO6NoAKDc3ZjUyOWJiMGFlMzYxZTY5NDgzMzZmMjdjZTUxZjY4NmE2ODFlN2E", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2023-01-09T15:35:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-09T15:35:32Z"}, "message": "Rollup merge of #106614 - Ezrashaw:ui-test-fixups-2, r=GuillaumeGomez\n\nerror-code docs improvements (No. 2)\n\n- Added empty error-code docs for `E0208`, `E0640` and `E0717` with the \"internal\" header as discussed on Discord.\n- Wrote docs and UI test for `E0711`, again with the header.\n- `tidy` changes are common-sense and make everything pass, `style.rs` hack is annoying though.\n\nr? ```@GuillaumeGomez```", "tree": {"sha": "7651a82109249755c6194a1b757a88e9eadc6d28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7651a82109249755c6194a1b757a88e9eadc6d28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77f529bb0ae361e6948336f27ce51f686a681e7a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjvDRECRBK7hj4Ov3rIwAAcwIIAHQT1eb4eeVVNA3FJ2Pe7gKl\ny0JTZ7DLNlKvVqIof5w/WR60N8PqXwI62k8lwhgNphCbL0RrENw0mbnPa/5YDJKu\nXei26bg03bkvUGMhYKlafJ3fiuDRHCB6uZhKFN9h0To+OWn8ZV3XudhdQJLQorhM\nbStZn/mbvotmorNrO506LkJ/Kv83E5DAZCSbWgYHnxL3eDR0Pnv94QcUO7NBDhnI\nhDz+ZDzpDIYRjSbPpMwzRp/wnYvmQUVyk5VSrLBEVGQnxifrEUnR92y+9eM//kJI\nuBQSbAXFEaydlElWgaS4ZvoiRLtGnbwFQTOej7RZ71kv+BH+Rh6RxmD21+rVUl4=\n=y3xQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 7651a82109249755c6194a1b757a88e9eadc6d28\nparent 99529b0cd2022c9002fd4f5fef119ba4ca100b81\nparent 2c92c72c46e6a300c902c6d0e1c4b5c6b9b5c179\nauthor fee1-dead <ent3rm4n@gmail.com> 1673278532 +0800\ncommitter GitHub <noreply@github.com> 1673278532 +0800\n\nRollup merge of #106614 - Ezrashaw:ui-test-fixups-2, r=GuillaumeGomez\n\nerror-code docs improvements (No. 2)\n\n- Added empty error-code docs for `E0208`, `E0640` and `E0717` with the \"internal\" header as discussed on Discord.\n- Wrote docs and UI test for `E0711`, again with the header.\n- `tidy` changes are common-sense and make everything pass, `style.rs` hack is annoying though.\n\nr? ```@GuillaumeGomez```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77f529bb0ae361e6948336f27ce51f686a681e7a", "html_url": "https://github.com/rust-lang/rust/commit/77f529bb0ae361e6948336f27ce51f686a681e7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77f529bb0ae361e6948336f27ce51f686a681e7a/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99529b0cd2022c9002fd4f5fef119ba4ca100b81", "url": "https://api.github.com/repos/rust-lang/rust/commits/99529b0cd2022c9002fd4f5fef119ba4ca100b81", "html_url": "https://github.com/rust-lang/rust/commit/99529b0cd2022c9002fd4f5fef119ba4ca100b81"}, {"sha": "2c92c72c46e6a300c902c6d0e1c4b5c6b9b5c179", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c92c72c46e6a300c902c6d0e1c4b5c6b9b5c179", "html_url": "https://github.com/rust-lang/rust/commit/2c92c72c46e6a300c902c6d0e1c4b5c6b9b5c179"}], "stats": {"total": 94, "additions": 88, "deletions": 6}, "files": [{"sha": "686c22bc386dc3fff72e8366b1bab0a5c6669662", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -110,6 +110,7 @@ E0204: include_str!(\"./error_codes/E0204.md\"),\n E0205: include_str!(\"./error_codes/E0205.md\"),\n E0206: include_str!(\"./error_codes/E0206.md\"),\n E0207: include_str!(\"./error_codes/E0207.md\"),\n+E0208: include_str!(\"./error_codes/E0208.md\"),\n E0210: include_str!(\"./error_codes/E0210.md\"),\n E0211: include_str!(\"./error_codes/E0211.md\"),\n E0212: include_str!(\"./error_codes/E0212.md\"),\n@@ -387,6 +388,7 @@ E0636: include_str!(\"./error_codes/E0636.md\"),\n E0637: include_str!(\"./error_codes/E0637.md\"),\n E0638: include_str!(\"./error_codes/E0638.md\"),\n E0639: include_str!(\"./error_codes/E0639.md\"),\n+E0640: include_str!(\"./error_codes/E0640.md\"),\n E0641: include_str!(\"./error_codes/E0641.md\"),\n E0642: include_str!(\"./error_codes/E0642.md\"),\n E0643: include_str!(\"./error_codes/E0643.md\"),\n@@ -434,6 +436,8 @@ E0713: include_str!(\"./error_codes/E0713.md\"),\n E0714: include_str!(\"./error_codes/E0714.md\"),\n E0715: include_str!(\"./error_codes/E0715.md\"),\n E0716: include_str!(\"./error_codes/E0716.md\"),\n+E0711: include_str!(\"./error_codes/E0711.md\"),\n+E0717: include_str!(\"./error_codes/E0717.md\"),\n E0718: include_str!(\"./error_codes/E0718.md\"),\n E0719: include_str!(\"./error_codes/E0719.md\"),\n E0720: include_str!(\"./error_codes/E0720.md\"),\n@@ -540,7 +544,6 @@ E0791: include_str!(\"./error_codes/E0791.md\"),\n //  E0190, // deprecated: can only cast a &-pointer to an &-object\n //  E0194, // merged into E0403\n //  E0196, // cannot determine a type for this closure\n-    E0208, // internal error code\n //  E0209, // builtin traits can only be implemented on structs or enums\n //  E0213, // associated types are not accepted in this context\n //  E0215, // angle-bracket notation is not stable with `Fn`\n@@ -633,14 +636,11 @@ E0791: include_str!(\"./error_codes/E0791.md\"),\n //  E0629, // missing 'feature' (rustc_const_unstable)\n //  E0630, // rustc_const_unstable attribute must be paired with stable/unstable\n            // attribute\n-    E0640, // infer outlives requirements, internal error code\n //  E0645, // trait aliases not finished\n //  E0694, // an unknown tool name found in scoped attributes\n //  E0702, // replaced with a generic attribute input check\n //  E0707, // multiple elided lifetimes used in arguments of `async fn`\n //  E0709, // multiple different lifetimes used in arguments of `async fn`\n-    E0711, // a feature has been declared with conflicting stability attributes, internal error code\n-    E0717, // rustc_promotable without stability attribute, internal error code\n //  E0721, // `await` keyword\n //  E0723, // unstable feature in `const` context\n //  E0738, // Removed; errored on `#[track_caller] fn`s in `extern \"Rust\" { ... }`."}, {"sha": "7edd93e56a945e4e9096efee47c07e9f14b1a410", "filename": "compiler/rustc_error_codes/src/error_codes/E0208.md", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0208.md", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0208.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0208.md?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -0,0 +1 @@\n+#### This error code is internal to the compiler and will not be emitted with normal Rust code."}, {"sha": "7edd93e56a945e4e9096efee47c07e9f14b1a410", "filename": "compiler/rustc_error_codes/src/error_codes/E0640.md", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0640.md", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0640.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0640.md?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -0,0 +1 @@\n+#### This error code is internal to the compiler and will not be emitted with normal Rust code."}, {"sha": "a2150037f7856d53644d9192b25ae3c7cc311960", "filename": "compiler/rustc_error_codes/src/error_codes/E0711.md", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0711.md", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0711.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0711.md?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -0,0 +1,30 @@\n+#### This error code is internal to the compiler and will not be emitted with normal Rust code.\n+\n+Feature declared with conflicting stability requirements.\n+\n+```compile_fail,E0711\n+// NOTE: this attribute is perma-unstable and should *never* be used outside of\n+//       stdlib and the compiler.\n+#![feature(staged_api)]\n+\n+#![stable(feature = \"...\", since = \"1.0.0\")]\n+\n+#[stable(feature = \"foo\", since = \"1.0.0\")]\n+fn foo_stable_1_0_0() {}\n+\n+// error: feature `foo` is declared stable since 1.29.0\n+#[stable(feature = \"foo\", since = \"1.29.0\")]\n+fn foo_stable_1_29_0() {}\n+\n+// error: feature `foo` is declared unstable\n+#[unstable(feature = \"foo\", issue = \"none\")]\n+fn foo_unstable() {}\n+```\n+\n+In the above example, the `foo` feature is first defined to be stable since\n+1.0.0, but is then re-declared stable since 1.29.0. This discrepancy in\n+versions causes an error. Furthermore, `foo` is then re-declared as unstable,\n+again the conflict causes an error.\n+\n+This error can be fixed by splitting the feature, this allows any\n+stability requirements and removes any possibility of conflict."}, {"sha": "7edd93e56a945e4e9096efee47c07e9f14b1a410", "filename": "compiler/rustc_error_codes/src/error_codes/E0717.md", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0717.md", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0717.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0717.md?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -0,0 +1 @@\n+#### This error code is internal to the compiler and will not be emitted with normal Rust code."}, {"sha": "7d2044a7da2dcf2d3ce4a5ec49131a58405ab720", "filename": "src/test/ui/error-codes/E0711.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Ferror-codes%2FE0711.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Ferror-codes%2FE0711.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0711.rs?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -0,0 +1,18 @@\n+// copied from: src/test/ui/feature-gates/stability-attribute-consistency.rs\n+\n+#![feature(staged_api)]\n+\n+#![stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n+\n+#[stable(feature = \"foo\", since = \"1.0.0\")]\n+fn foo_stable_1_0_0() {}\n+\n+#[stable(feature = \"foo\", since = \"1.29.0\")]\n+//~^ ERROR feature `foo` is declared stable since 1.29.0\n+fn foo_stable_1_29_0() {}\n+\n+#[unstable(feature = \"foo\", issue = \"none\")]\n+//~^ ERROR feature `foo` is declared unstable\n+fn foo_unstable() {}\n+\n+fn main() {}"}, {"sha": "f39cb4ecd4bdb5c699dde26fc64d037a920fd3f2", "filename": "src/test/ui/error-codes/E0711.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Ferror-codes%2FE0711.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Ferror-codes%2FE0711.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0711.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -0,0 +1,15 @@\n+error[E0711]: feature `foo` is declared stable since 1.29.0, but was previously declared stable since 1.0.0\n+  --> $DIR/E0711.rs:10:1\n+   |\n+LL | #[stable(feature = \"foo\", since = \"1.29.0\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0711]: feature `foo` is declared unstable, but was previously declared stable\n+  --> $DIR/E0711.rs:14:1\n+   |\n+LL | #[unstable(feature = \"foo\", issue = \"none\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0711`."}, {"sha": "1b93d3c96376a81161b9661d2bae1557fefb233f", "filename": "src/test/ui/feature-gates/stability-attribute-consistency.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Ffeature-gates%2Fstability-attribute-consistency.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Ffeature-gates%2Fstability-attribute-consistency.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fstability-attribute-consistency.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -12,3 +12,4 @@ LL | #[unstable(feature = \"foo\", issue = \"none\")]\n \n error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0711`."}, {"sha": "89a8425f5e78a6adbd6a451d27f3d6f76fbc491b", "filename": "src/test/ui/stability-attribute/stability-attribute-sanity.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -132,5 +132,5 @@ LL | #[stable(feature = \"a\", since = \"1.0.0\")]\n \n error: aborting due to 20 previous errors\n \n-Some errors have detailed explanations: E0539, E0541, E0542, E0543, E0544, E0546, E0547, E0549.\n+Some errors have detailed explanations: E0539, E0541, E0542, E0543, E0544, E0546, E0547, E0549, E0711.\n For more information about an error, try `rustc --explain E0539`."}, {"sha": "f9732d02cb285c57fa06dff908511071f3387a19", "filename": "src/test/ui/variance/variance-associated-consts.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-associated-consts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-associated-consts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-associated-consts.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -6,3 +6,4 @@ LL | struct Foo<T: Trait> {\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0208`."}, {"sha": "5ce62884e1d83ee15bf557e1a6271b6c6d34a753", "filename": "src/test/ui/variance/variance-associated-types.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-associated-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-associated-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-associated-types.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -12,3 +12,4 @@ LL | struct Bar<'a, T : Trait<'a>> {\n \n error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0208`."}, {"sha": "1c3c1a6d1f223ce564326a353016f169af01485d", "filename": "src/test/ui/variance/variance-object-types.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-object-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-object-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-object-types.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -6,3 +6,4 @@ LL | struct Foo<'a> {\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0208`."}, {"sha": "27d69b6e82575d319506341a2e3b9b6204e6c980", "filename": "src/test/ui/variance/variance-regions-direct.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-direct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-direct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-direct.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -42,3 +42,4 @@ LL | enum Test8<'a, 'b, 'c:'b> {\n \n error: aborting due to 7 previous errors\n \n+For more information about this error, try `rustc --explain E0208`."}, {"sha": "535e97db3fb10fce823aa4a53d9182ba5e0fadbc", "filename": "src/test/ui/variance/variance-regions-indirect.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-indirect.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -30,3 +30,4 @@ LL | struct Derived4<'a, 'b, 'c:'b> {\n \n error: aborting due to 5 previous errors\n \n+For more information about this error, try `rustc --explain E0208`."}, {"sha": "3f6ca62a64069776d37fb0c7e966ef9f8be3c4ab", "filename": "src/test/ui/variance/variance-trait-bounds.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-trait-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-trait-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-trait-bounds.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -24,3 +24,4 @@ LL | struct TestBox<U,T:Getter<U>+Setter<U>> {\n \n error: aborting due to 4 previous errors\n \n+For more information about this error, try `rustc --explain E0208`."}, {"sha": "9a2c924b96a9539fc07f2dde3508b91d12f09f96", "filename": "src/test/ui/variance/variance-trait-object-bound.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-trait-object-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-trait-object-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-trait-object-bound.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -6,3 +6,4 @@ LL | struct TOption<'a> {\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0208`."}, {"sha": "523763b8a07b44340cf9f47e16278a6516a74d71", "filename": "src/test/ui/variance/variance-types-bounds.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-types-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-types-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-types-bounds.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -30,3 +30,4 @@ LL | struct TestObject<A, R> {\n \n error: aborting due to 5 previous errors\n \n+For more information about this error, try `rustc --explain E0208`."}, {"sha": "5a5aaecffc5eb8d32ecb0b6b211cc25a66fbb1b4", "filename": "src/test/ui/variance/variance-types.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftest%2Fui%2Fvariance%2Fvariance-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-types.stderr?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -36,3 +36,4 @@ LL | enum Enum<A,B,C> {\n \n error: aborting due to 6 previous errors\n \n+For more information about this error, try `rustc --explain E0208`."}, {"sha": "9aacc07e0ab4fd9cee0380e7693ea76e981a0c5e", "filename": "src/tools/tidy/src/error_codes.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -27,7 +27,8 @@ const ERROR_DOCS_PATH: &str = \"compiler/rustc_error_codes/src/error_codes/\";\n const ERROR_TESTS_PATH: &str = \"src/test/ui/error-codes/\";\n \n // Error codes that (for some reason) can't have a doctest in their explanation. Error codes are still expected to provide a code example, even if untested.\n-const IGNORE_DOCTEST_CHECK: &[&str] = &[\"E0464\", \"E0570\", \"E0601\", \"E0602\"];\n+const IGNORE_DOCTEST_CHECK: &[&str] =\n+    &[\"E0208\", \"E0464\", \"E0570\", \"E0601\", \"E0602\", \"E0640\", \"E0717\"];\n \n // Error codes that don't yet have a UI test. This list will eventually be removed.\n const IGNORE_UI_TEST_CHECK: &[&str] = &[\n@@ -193,6 +194,7 @@ fn check_error_codes_docs(\n                 \"warning: Error code `{err_code}` doesn't have a code example, all error codes are expected to have one \\\n                 (even if untested).\"\n             );\n+            return;\n         }\n \n         let test_ignored = IGNORE_DOCTEST_CHECK.contains(&&err_code);"}, {"sha": "b293efdc585add09efac5a0b3d07de5d5d099b0d", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f529bb0ae361e6948336f27ce51f686a681e7a/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=77f529bb0ae361e6948336f27ce51f686a681e7a", "patch": "@@ -65,6 +65,8 @@ const PROBLEMATIC_CONSTS: &[u32] = &[\n     3735927486, 3735932941, 4027431614, 4276992702,\n ];\n \n+const INTERNAL_COMPILER_DOCS_LINE: &str = \"#### This error code is internal to the compiler and will not be emitted with normal Rust code.\";\n+\n /// Parser states for `line_is_url`.\n #[derive(Clone, Copy, PartialEq)]\n #[allow(non_camel_case_types)]\n@@ -133,6 +135,8 @@ fn long_line_is_ok(extension: &str, is_error_code: bool, max_columns: usize, lin\n         \"ftl\" => true,\n         // non-error code markdown is allowed to be any length\n         \"md\" if !is_error_code => true,\n+        // HACK(Ezrashaw): there is no way to split a markdown header over multiple lines\n+        \"md\" if line == INTERNAL_COMPILER_DOCS_LINE => true,\n         _ => line_is_url(is_error_code, max_columns, line) || should_ignore(line),\n     }\n }"}]}