{"sha": "4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZGYwYzIwYjcxZjhlYjYzNjU4OTNjYjE3MzliMWNkMzNiMDgxY2M=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-01-28T11:59:12Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-01-28T11:59:12Z"}, "message": "Merge #28\n\n28: Don't return SyntaxKind from bump r=matklad a=matklad", "tree": {"sha": "81136bfa035035ee838717f8296a79f044dc0d48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81136bfa035035ee838717f8296a79f044dc0d48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "html_url": "https://github.com/rust-lang/rust/commit/4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4adf0c20b71f8eb6365893cb1739b1cd33b081cc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "4212d28727fca0de8c3f5d4504025c3028425386", "url": "https://api.github.com/repos/rust-lang/rust/commits/4212d28727fca0de8c3f5d4504025c3028425386", "html_url": "https://github.com/rust-lang/rust/commit/4212d28727fca0de8c3f5d4504025c3028425386"}, {"sha": "dee7046f7eefbaef1d8ab97517b14139fbf696ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/dee7046f7eefbaef1d8ab97517b14139fbf696ce", "html_url": "https://github.com/rust-lang/rust/commit/dee7046f7eefbaef1d8ab97517b14139fbf696ce"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "309e4f4def4a2ad9db9db77a09030385a782ff70", "filename": "src/parser/event_parser/grammar/items.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4adf0c20b71f8eb6365893cb1739b1cd33b081cc/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4adf0c20b71f8eb6365893cb1739b1cd33b081cc/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs?ref=4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "patch": "@@ -174,9 +174,7 @@ fn use_item(p: &mut Parser) {\n         let la = p.nth(1);\n         let m = p.start();\n         match (p.current(), la) {\n-            (STAR, _) => {\n-                p.bump();\n-            }\n+            (STAR, _) => p.bump(),\n             (COLONCOLON, STAR) => {\n                 p.bump();\n                 p.bump();"}, {"sha": "92125acd1c606117a435bfe8df73a8849344e6b1", "filename": "src/parser/event_parser/grammar/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4adf0c20b71f8eb6365893cb1739b1cd33b081cc/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4adf0c20b71f8eb6365893cb1739b1cd33b081cc/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fmod.rs?ref=4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "patch": "@@ -21,11 +21,15 @@ fn visibility(p: &mut Parser) {\n         p.bump();\n         if p.at(L_PAREN) {\n             match p.nth(1) {\n-                CRATE_KW | SELF_KW | SUPER_KW | IN_KW => {\n+                CRATE_KW | SELF_KW | SUPER_KW => {\n                     p.bump();\n-                    if p.bump() == IN_KW {\n-                        paths::use_path(p);\n-                    }\n+                    p.bump();\n+                    p.expect(R_PAREN);\n+                }\n+                IN_KW => {\n+                    p.bump();\n+                    p.bump();\n+                    paths::use_path(p);\n                     p.expect(R_PAREN);\n                 }\n                 _ => (),"}, {"sha": "a254ab05edac2c6b7fc621badcbe55bd3d97ff96", "filename": "src/parser/event_parser/grammar/paths.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4adf0c20b71f8eb6365893cb1739b1cd33b081cc/src%2Fparser%2Fevent_parser%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4adf0c20b71f8eb6365893cb1739b1cd33b081cc/src%2Fparser%2Fevent_parser%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fpaths.rs?ref=4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "patch": "@@ -30,12 +30,8 @@ fn path_segment(p: &mut Parser, first: bool) {\n         p.eat(COLONCOLON);\n     }\n     match p.current() {\n-        IDENT | SELF_KW | SUPER_KW => {\n-            p.bump();\n-        }\n-        _ => {\n-            p.error().message(\"expected identifier\").emit();\n-        }\n+        IDENT | SELF_KW | SUPER_KW => p.bump(),\n+        _ => p.error().message(\"expected identifier\").emit(),\n     };\n     segment.complete(p, PATH_SEGMENT);\n }"}, {"sha": "6cf6ac9b9d24e437dab540c89f7b00db13724b3e", "filename": "src/parser/event_parser/parser.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4adf0c20b71f8eb6365893cb1739b1cd33b081cc/src%2Fparser%2Fevent_parser%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4adf0c20b71f8eb6365893cb1739b1cd33b081cc/src%2Fparser%2Fevent_parser%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fparser.rs?ref=4adf0c20b71f8eb6365893cb1739b1cd33b081cc", "patch": "@@ -151,17 +151,16 @@ impl<'t> Parser<'t> {\n         ErrorBuilder::new(self)\n     }\n \n-    pub(crate) fn bump(&mut self) -> SyntaxKind {\n+    pub(crate) fn bump(&mut self) {\n         let kind = self.current();\n         if kind == EOF {\n-            return EOF;\n+            return;\n         }\n         self.pos += 1;\n         self.event(Event::Token {\n             kind,\n             n_raw_tokens: 1,\n         });\n-        kind\n     }\n \n     pub(crate) fn nth(&self, n: usize) -> SyntaxKind {"}]}