{"sha": "4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMGVlNzU4YjdkMzI5MmMyZjJiYmM2NDQzZWQxZWE4ZjE4MGY5NTM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-05-27T18:02:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-05T16:04:18Z"}, "message": "Impl CompilerCalls for CompileController instead of AdHocCompilerCalls", "tree": {"sha": "95c3f88474c5a4643346803e06f531bac03abfc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95c3f88474c5a4643346803e06f531bac03abfc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953", "html_url": "https://github.com/rust-lang/rust/commit/4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f45b0611cf4ec0e0a7e49c4c5eb2bedd2805494", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f45b0611cf4ec0e0a7e49c4c5eb2bedd2805494", "html_url": "https://github.com/rust-lang/rust/commit/4f45b0611cf4ec0e0a7e49c4c5eb2bedd2805494"}], "stats": {"total": 81, "additions": 57, "deletions": 24}, "files": [{"sha": "7b177d5e79c1a4a61414fb72f9f4752fc259261a", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953", "patch": "@@ -414,6 +414,63 @@ impl<'a> CompileController<'a> {\n     }\n }\n \n+impl<'a> ::CompilerCalls<'a> for CompileController<'a> {\n+    fn early_callback(\n+        &mut self,\n+        matches: &::getopts::Matches,\n+        sopts: &config::Options,\n+        cfg: &ast::CrateConfig,\n+        descriptions: &::errors::registry::Registry,\n+        output: ::ErrorOutputType,\n+    ) -> Compilation {\n+        ::RustcDefaultCalls.early_callback(\n+            matches,\n+            sopts,\n+            cfg,\n+            descriptions,\n+            output,\n+        )\n+    }\n+    fn no_input(\n+        &mut self,\n+        matches: &::getopts::Matches,\n+        sopts: &config::Options,\n+        cfg: &ast::CrateConfig,\n+        odir: &Option<PathBuf>,\n+        ofile: &Option<PathBuf>,\n+        descriptions: &::errors::registry::Registry,\n+    ) -> Option<(Input, Option<PathBuf>)> {\n+        ::RustcDefaultCalls.no_input(\n+            matches,\n+            sopts,\n+            cfg,\n+            odir,\n+            ofile,\n+            descriptions,\n+        )\n+    }\n+    fn late_callback(\n+        &mut self,\n+        codegen_backend: &::CodegenBackend,\n+        matches: &::getopts::Matches,\n+        sess: &Session,\n+        cstore: &::CrateStore,\n+        input: &Input,\n+        odir: &Option<PathBuf>,\n+        ofile: &Option<PathBuf>,\n+    ) -> Compilation {\n+        ::RustcDefaultCalls\n+            .late_callback(codegen_backend, matches, sess, cstore, input, odir, ofile)\n+    }\n+    fn build_controller(\n+        self: Box<Self>,\n+        _: &Session,\n+        _: &::getopts::Matches\n+    ) -> CompileController<'a> {\n+        *self\n+    }\n+}\n+\n pub struct PhaseController<'a> {\n     pub stop: Compilation,\n     // If true then the compiler will try to run the callback even if the phase"}, {"sha": "67fd5da8c92d9e69e5154cd9d28061ee84075b3f", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=4e0ee758b7d3292c2f2bbc6443ed1ea8f180f953", "patch": "@@ -712,30 +712,6 @@ pub trait CompilerCalls<'a> {\n #[derive(Copy, Clone)]\n pub struct RustcDefaultCalls;\n \n-/// CompilerCalls instance for quick access to the result of one compile phase.\n-pub enum AdHocCalls<'a> {\n-    AfterAnalysis(Compilation, Box<Fn(&mut ::driver::CompileState) + 'a>)\n-}\n-\n-impl<'a> CompilerCalls<'a> for AdHocCalls<'a> {\n-    fn build_controller(\n-        self: Box<Self>,\n-        _: &Session,\n-        _: &getopts::Matches\n-    ) -> CompileController<'a> {\n-        let mut control = CompileController::basic();\n-\n-        match *self {\n-            AdHocCalls::AfterAnalysis(c, f) => {\n-                control.after_analysis.stop = c;\n-                control.after_analysis.callback = f;\n-            }\n-        }\n-\n-        control\n-    }\n-}\n-\n // FIXME remove these and use winapi 0.3 instead\n // Duplicates: bootstrap/compile.rs, librustc_errors/emitter.rs\n #[cfg(unix)]"}]}