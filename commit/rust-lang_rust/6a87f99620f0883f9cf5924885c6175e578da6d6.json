{"sha": "6a87f99620f0883f9cf5924885c6175e578da6d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhODdmOTk2MjBmMDg4M2Y5Y2Y1OTI0ODg1YzYxNzVlNTc4ZGE2ZDY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-14T17:20:13Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T13:47:19Z"}, "message": "check_legality_of_move_bindings: generalize diagnostics & add comments", "tree": {"sha": "cd810ebcb83e3dd2b7d26f33af2d78f815e13070", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd810ebcb83e3dd2b7d26f33af2d78f815e13070"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a87f99620f0883f9cf5924885c6175e578da6d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a87f99620f0883f9cf5924885c6175e578da6d6", "html_url": "https://github.com/rust-lang/rust/commit/6a87f99620f0883f9cf5924885c6175e578da6d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a87f99620f0883f9cf5924885c6175e578da6d6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25b6a28a51e1539abd1df3c1ca6371d0873f8d6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/25b6a28a51e1539abd1df3c1ca6371d0873f8d6d", "html_url": "https://github.com/rust-lang/rust/commit/25b6a28a51e1539abd1df3c1ca6371d0873f8d6d"}], "stats": {"total": 63, "additions": 33, "deletions": 30}, "files": [{"sha": "c3768e74385976d5a4c742796c762acfcffd4e3d", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -579,18 +579,20 @@ fn maybe_point_at_variant(ty: Ty<'_>, patterns: &[super::Pat<'_>]) -> Vec<Span>\n \n // Check the legality of legality of by-move bindings.\n fn check_legality_of_move_bindings(cx: &mut MatchVisitor<'_, '_>, has_guard: bool, pat: &Pat) {\n-    let mut by_ref_span = None;\n+    // Find all by-ref spans.\n+    let mut by_ref_spans = Vec::new();\n     pat.each_binding(|_, hir_id, span, _| {\n         if let Some(&bm) = cx.tables.pat_binding_modes().get(hir_id) {\n             if let ty::BindByReference(..) = bm {\n-                by_ref_span = Some(span);\n+                by_ref_spans.push(span);\n             }\n         } else {\n             cx.tcx.sess.delay_span_bug(pat.span, \"missing binding mode\");\n         }\n     });\n \n-    let span_vec = &mut Vec::new();\n+    // Find bad by-move spans:\n+    let by_move_spans = &mut Vec::new();\n     let mut check_move = |p: &Pat, sub: Option<&Pat>| {\n         // Check legality of moving out of the enum.\n         //\n@@ -599,11 +601,10 @@ fn check_legality_of_move_bindings(cx: &mut MatchVisitor<'_, '_>, has_guard: boo\n             struct_span_err!(cx.tcx.sess, p.span, E0007, \"cannot bind by-move with sub-bindings\")\n                 .span_label(p.span, \"binds an already bound by-move value by moving it\")\n                 .emit();\n-        } else if !has_guard && by_ref_span.is_some() {\n-            span_vec.push(p.span);\n+        } else if !has_guard && !by_ref_spans.is_empty() {\n+            by_move_spans.push(p.span);\n         }\n     };\n-\n     pat.walk(|p| {\n         if let hir::PatKind::Binding(.., sub) = &p.kind {\n             if let Some(&bm) = cx.tables.pat_binding_modes().get(p.hir_id) {\n@@ -620,17 +621,18 @@ fn check_legality_of_move_bindings(cx: &mut MatchVisitor<'_, '_>, has_guard: boo\n         true\n     });\n \n-    if !span_vec.is_empty() {\n+    // Found some bad by-move spans, error!\n+    if !by_move_spans.is_empty() {\n         let mut err = struct_span_err!(\n             cx.tcx.sess,\n-            MultiSpan::from_spans(span_vec.clone()),\n+            MultiSpan::from_spans(by_move_spans.clone()),\n             E0009,\n             \"cannot bind by-move and by-ref in the same pattern\",\n         );\n-        if let Some(by_ref_span) = by_ref_span {\n-            err.span_label(by_ref_span, \"both by-ref and by-move used\");\n+        for span in by_ref_spans.iter() {\n+            err.span_label(*span, \"by-ref pattern here\");\n         }\n-        for span in span_vec.iter() {\n+        for span in by_move_spans.iter() {\n             err.span_label(*span, \"by-move pattern here\");\n         }\n         err.emit();"}, {"sha": "ff00aa8caa8d3bcfa7692c899b6e32d43c829eb0", "filename": "src/test/ui/bind-by-move/bind-by-move-neither-can-live-while-the-other-survives-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-neither-can-live-while-the-other-survives-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-neither-can-live-while-the-other-survives-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-neither-can-live-while-the-other-survives-2.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -4,7 +4,7 @@ error[E0009]: cannot bind by-move and by-ref in the same pattern\n LL |         Some((ref _y, _z)) => { },\n    |               ------  ^^ by-move pattern here\n    |               |\n-   |               both by-ref and by-move used\n+   |               by-ref pattern here\n \n error: aborting due to previous error\n "}, {"sha": "3e8358da3507da058d783590bd2a91a44639a37c", "filename": "src/test/ui/bind-by-move/bind-by-move-neither-can-live-while-the-other-survives-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-neither-can-live-while-the-other-survives-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-neither-can-live-while-the-other-survives-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-neither-can-live-while-the-other-survives-3.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -4,7 +4,7 @@ error[E0009]: cannot bind by-move and by-ref in the same pattern\n LL |         DoubleOption::Some2(ref _y, _z) => { },\n    |                             ------  ^^ by-move pattern here\n    |                             |\n-   |                             both by-ref and by-move used\n+   |                             by-ref pattern here\n \n error: aborting due to previous error\n "}, {"sha": "00e0c70d6494b6d658ba149f64337498cd950aa1", "filename": "src/test/ui/bind-by-move/bind-by-move-neither-can-live-while-the-other-survives-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-neither-can-live-while-the-other-survives-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-neither-can-live-while-the-other-survives-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-neither-can-live-while-the-other-survives-4.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -2,7 +2,7 @@ error[E0009]: cannot bind by-move and by-ref in the same pattern\n   --> $DIR/bind-by-move-neither-can-live-while-the-other-survives-4.rs:12:15\n    |\n LL |         Some((_y, ref _z)) => { },\n-   |               ^^  ------ both by-ref and by-move used\n+   |               ^^  ------ by-ref pattern here\n    |               |\n    |               by-move pattern here\n "}, {"sha": "446a436d6477952c8b15cd7e1029fb14e653abe8", "filename": "src/test/ui/error-codes/E0009.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Ferror-codes%2FE0009.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Ferror-codes%2FE0009.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0009.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -2,7 +2,7 @@ error[E0009]: cannot bind by-move and by-ref in the same pattern\n   --> $DIR/E0009.rs:5:15\n    |\n LL |         Some((y, ref z)) => {},\n-   |               ^  ----- both by-ref and by-move used\n+   |               ^  ----- by-ref pattern here\n    |               |\n    |               by-move pattern here\n "}, {"sha": "9cb034e7592daa90ce5697d09d001ba869f1b1d8", "filename": "src/test/ui/issues/issue-53840.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fissues%2Fissue-53840.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fissues%2Fissue-53840.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53840.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -2,7 +2,7 @@ error[E0009]: cannot bind by-move and by-ref in the same pattern\n   --> $DIR/issue-53840.rs:13:16\n    |\n LL |         E::Foo(a, b, ref c) => {}\n-   |                ^  ^  ----- both by-ref and by-move used\n+   |                ^  ^  ----- by-ref pattern here\n    |                |  |\n    |                |  by-move pattern here\n    |                by-move pattern here\n@@ -11,7 +11,7 @@ error[E0009]: cannot bind by-move and by-ref in the same pattern\n   --> $DIR/issue-53840.rs:17:14\n    |\n LL |         Bar {a, ref b} => {}\n-   |              ^  ----- both by-ref and by-move used\n+   |              ^  ----- by-ref pattern here\n    |              |\n    |              by-move pattern here\n "}, {"sha": "63866238f565ec98d8a3f7993949294091722a5c", "filename": "src/test/ui/pattern/bindings-after-at/bind-by-move-neither-can-live-while-the-other-survives-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fbind-by-move-neither-can-live-while-the-other-survives-1.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -13,7 +13,7 @@ LL |         Some(ref _y @ _z) => { },\n    |              ---------^^\n    |              |        |\n    |              |        by-move pattern here\n-   |              both by-ref and by-move used\n+   |              by-ref pattern here\n \n error: aborting due to previous error\n "}, {"sha": "af0bcb69bbbeace1d6c9ae980471d74b033e0c17", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-at-and-box.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-at-and-box.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -25,7 +25,7 @@ LL |     let ref a @ box b = Box::new(NC);\n    |         ------------^\n    |         |           |\n    |         |           by-move pattern here\n-   |         both by-ref and by-move used\n+   |         by-ref pattern here\n \n error[E0382]: use of moved value\n   --> $DIR/borrowck-pat-at-and-box.rs:11:18"}, {"sha": "36dc1b2879263ab46415d838dac219afae43187c", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-by-move-and-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-by-move-and-ref.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -13,7 +13,7 @@ LL |         ref op_string_ref @ Some(s) => {},\n    |         -------------------------^-\n    |         |                        |\n    |         |                        by-move pattern here\n-   |         both by-ref and by-move used\n+   |         by-ref pattern here\n \n error: aborting due to previous error\n "}, {"sha": "27b94e055a0a4fdb24199f1726bd09785e9a446e", "filename": "src/test/ui/pattern/bindings-after-at/borrowck-pat-ref-mut-and-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-mut-and-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-mut-and-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fborrowck-pat-ref-mut-and-ref.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -124,5 +124,5 @@ LL |     drop(a);\n \n error: aborting due to 11 previous errors\n \n-Some errors have detailed explanations: E0502, E0507.\n+Some errors have detailed explanations: E0502, E0507, E0594.\n For more information about an error, try `rustc --explain E0502`."}, {"sha": "3cd756d11ce5ea43b2c7c572bc61d0b1a51a868a", "filename": "src/test/ui/pattern/bindings-after-at/default-binding-modes-both-sides-independent.stderr", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fdefault-binding-modes-both-sides-independent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fdefault-binding-modes-both-sides-independent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fbindings-after-at%2Fdefault-binding-modes-both-sides-independent.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -13,7 +13,7 @@ LL |     let ref a @ b = NotCopy;\n    |         --------^\n    |         |       |\n    |         |       by-move pattern here\n-   |         both by-ref and by-move used\n+   |         by-ref pattern here\n \n error[E0009]: cannot bind by-move and by-ref in the same pattern\n   --> $DIR/default-binding-modes-both-sides-independent.rs:22:21\n@@ -22,17 +22,18 @@ LL |     let ref mut a @ b = NotCopy;\n    |         ------------^\n    |         |           |\n    |         |           by-move pattern here\n-   |         both by-ref and by-move used\n+   |         by-ref pattern here\n \n error[E0009]: cannot bind by-move and by-ref in the same pattern\n   --> $DIR/default-binding-modes-both-sides-independent.rs:24:20\n    |\n LL |         Ok(ref a @ b) | Err(ref a @ b) => {}\n-   |                    ^        --------^\n-   |                    |        |       |\n-   |                    |        |       by-move pattern here\n-   |                    |        both by-ref and by-move used\n-   |                    by-move pattern here\n+   |            --------^        --------^\n+   |            |       |        |       |\n+   |            |       |        |       by-move pattern here\n+   |            |       |        by-ref pattern here\n+   |            |       by-move pattern here\n+   |            by-ref pattern here\n \n error[E0009]: cannot bind by-move and by-ref in the same pattern\n   --> $DIR/default-binding-modes-both-sides-independent.rs:28:17\n@@ -41,7 +42,7 @@ LL |         ref a @ b => {}\n    |         --------^\n    |         |       |\n    |         |       by-move pattern here\n-   |         both by-ref and by-move used\n+   |         by-ref pattern here\n \n error: aborting due to 4 previous errors\n "}, {"sha": "ebc6ff5d8c3fe5e63dbb9832447bad3cbb0e1a5b", "filename": "src/test/ui/rfc-2005-default-binding-mode/for.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Ffor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a87f99620f0883f9cf5924885c6175e578da6d6/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Ffor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Ffor.stderr?ref=6a87f99620f0883f9cf5924885c6175e578da6d6", "patch": "@@ -4,7 +4,7 @@ error[E0009]: cannot bind by-move and by-ref in the same pattern\n LL |     for (n, mut m) in &tups {\n    |          -  ^^^^^ by-move pattern here\n    |          |\n-   |          both by-ref and by-move used\n+   |          by-ref pattern here\n \n error[E0507]: cannot move out of a shared reference\n   --> $DIR/for.rs:6:23"}]}