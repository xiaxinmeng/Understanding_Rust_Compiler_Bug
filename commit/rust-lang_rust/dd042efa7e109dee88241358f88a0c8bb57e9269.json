{"sha": "dd042efa7e109dee88241358f88a0c8bb57e9269", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMDQyZWZhN2UxMDlkZWU4ODI0MTM1OGY4OGEwYzhiYjU3ZTkyNjk=", "commit": {"author": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2013-12-11T04:15:55Z"}, "committer": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2013-12-11T04:15:55Z"}, "message": "Separate strict/reserved keywords, derive bounds.\n\nIt's twenty lines longer, but makes for clearer separation of strict and\nreserved keywords (probably a good thing) and removes another moving\npart (the definitions of `(STRICT|RESERVED)_KEYWORD_(START|FINAL)`).", "tree": {"sha": "fe4f4e0acf562bd1b9da67f4f4245859cc8e06ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe4f4e0acf562bd1b9da67f4f4245859cc8e06ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd042efa7e109dee88241358f88a0c8bb57e9269", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd042efa7e109dee88241358f88a0c8bb57e9269", "html_url": "https://github.com/rust-lang/rust/commit/dd042efa7e109dee88241358f88a0c8bb57e9269", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd042efa7e109dee88241358f88a0c8bb57e9269/comments", "author": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4f5ae0118678a8cea666619303727408e6255aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4f5ae0118678a8cea666619303727408e6255aa", "html_url": "https://github.com/rust-lang/rust/commit/d4f5ae0118678a8cea666619303727408e6255aa"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "a49f423c408750d86535a18f896bef271f675024", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/dd042efa7e109dee88241358f88a0c8bb57e9269/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd042efa7e109dee88241358f88a0c8bb57e9269/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=dd042efa7e109dee88241358f88a0c8bb57e9269", "patch": "@@ -316,6 +316,17 @@ pub fn is_bar(t: &Token) -> bool {\n     match *t { BINOP(OR) | OROR => true, _ => false }\n }\n \n+// Get the first \"argument\"\n+macro_rules! first {\n+    ( $first:expr, $( $remainder:expr, )* ) => ( $first )\n+}\n+\n+// Get the last \"argument\" (has to be done recursively to avoid phoney local ambiguity error)\n+macro_rules! last {\n+    ( $first:expr, $( $remainder:expr, )+ ) => ( last!( $( $remainder, )+ ) );\n+    ( $first:expr, ) => ( $first )\n+}\n+\n // In this macro, there is the requirement that the name (the number) must be monotonically\n // increasing by one in the special identifiers, starting at 0; the same holds for the keywords,\n // except starting from the next number instead of zero, and with the additional exception that\n@@ -329,9 +340,17 @@ macro_rules! declare_special_idents_and_keywords {(\n     }\n \n     pub mod keywords {\n-        $( ($k_name:expr, $k_variant:ident, $k_str:expr); )*\n+        'strict:\n+        $( ($sk_name:expr, $sk_variant:ident, $sk_str:expr); )*\n+        'reserved:\n+        $( ($rk_name:expr, $rk_variant:ident, $rk_str:expr); )*\n     }\n ) => {\n+    static STRICT_KEYWORD_START: Name = first!($( $sk_name, )*);\n+    static STRICT_KEYWORD_FINAL: Name = last!($( $sk_name, )*);\n+    static RESERVED_KEYWORD_START: Name = first!($( $rk_name, )*);\n+    static RESERVED_KEYWORD_FINAL: Name = last!($( $rk_name, )*);\n+\n     pub mod special_idents {\n         use ast::Ident;\n         $( pub static $si_static: Ident = Ident { name: $si_name, ctxt: 0 }; )*\n@@ -348,13 +367,15 @@ macro_rules! declare_special_idents_and_keywords {(\n         use ast::Ident;\n \n         pub enum Keyword {\n-            $( $k_variant, )*\n+            $( $sk_variant, )*\n+            $( $rk_variant, )*\n         }\n \n         impl Keyword {\n             pub fn to_ident(&self) -> Ident {\n                 match *self {\n-                    $( $k_variant => Ident { name: $k_name, ctxt: 0 }, )*\n+                    $( $sk_variant => Ident { name: $sk_name, ctxt: 0 }, )*\n+                    $( $rk_variant => Ident { name: $rk_name, ctxt: 0 }, )*\n                 }\n             }\n         }\n@@ -366,20 +387,17 @@ macro_rules! declare_special_idents_and_keywords {(\n         // constants below.\n         let init_vec = ~[\n             $( $si_str, )*\n-            $( $k_str, )*\n+            $( $sk_str, )*\n+            $( $rk_str, )*\n         ];\n \n         @interner::StrInterner::prefill(init_vec)\n     }\n }}\n \n-// If modifying the numbers below, remember to modify these as appropriate\n+// If the special idents get renumbered, remember to modify these two as appropriate\n static SELF_KEYWORD_NAME: Name = 3;\n static STATIC_KEYWORD_NAME: Name = 10;\n-static STRICT_KEYWORD_START: Name = 14;\n-static STRICT_KEYWORD_FINAL: Name = 47;\n-static RESERVED_KEYWORD_START: Name = 48;\n-static RESERVED_KEYWORD_FINAL: Name = 54;\n \n declare_special_idents_and_keywords! {\n     pub mod special_idents {\n@@ -409,7 +427,7 @@ declare_special_idents_and_keywords! {\n     pub mod keywords {\n         // These ones are variants of the Keyword enum\n \n-        // Strict keywords\n+        'strict:\n         (14,                         As,         \"as\");\n         (15,                         Break,      \"break\");\n         (16,                         Const,      \"const\");\n@@ -448,7 +466,7 @@ declare_special_idents_and_keywords! {\n         (46,                         Continue,   \"continue\");\n         (47,                         Proc,       \"proc\");\n \n-        // Reserved keywords\n+        'reserved:\n         (48,                         Alignof,    \"alignof\");\n         (49,                         Be,         \"be\");\n         (50,                         Offsetof,   \"offsetof\");"}]}