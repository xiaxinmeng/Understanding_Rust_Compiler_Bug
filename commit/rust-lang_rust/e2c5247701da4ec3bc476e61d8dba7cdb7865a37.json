{"sha": "e2c5247701da4ec3bc476e61d8dba7cdb7865a37", "node_id": "C_kwDOAAsO6NoAKGUyYzUyNDc3MDFkYTRlYzNiYzQ3NmU2MWQ4ZGJhN2NkYjc4NjVhMzc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-02T06:05:45Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-02T06:05:58Z"}, "message": "Add a known-bug test for #102498", "tree": {"sha": "7000d1d7f2b8dbb028bb9ff37705b822c31e5d15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7000d1d7f2b8dbb028bb9ff37705b822c31e5d15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2c5247701da4ec3bc476e61d8dba7cdb7865a37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2c5247701da4ec3bc476e61d8dba7cdb7865a37", "html_url": "https://github.com/rust-lang/rust/commit/e2c5247701da4ec3bc476e61d8dba7cdb7865a37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2c5247701da4ec3bc476e61d8dba7cdb7865a37/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edadc7ccdda644ef8149869d2f24018a1dac202a", "url": "https://api.github.com/repos/rust-lang/rust/commits/edadc7ccdda644ef8149869d2f24018a1dac202a", "html_url": "https://github.com/rust-lang/rust/commit/edadc7ccdda644ef8149869d2f24018a1dac202a"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "bf67e5a3f76acc13ab853d62a4c9e9c1fefa1e80", "filename": "src/test/ui/consts/constifconst-call-in-const-position.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e2c5247701da4ec3bc476e61d8dba7cdb7865a37/src%2Ftest%2Fui%2Fconsts%2Fconstifconst-call-in-const-position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2c5247701da4ec3bc476e61d8dba7cdb7865a37/src%2Ftest%2Fui%2Fconsts%2Fconstifconst-call-in-const-position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconstifconst-call-in-const-position.rs?ref=e2c5247701da4ec3bc476e61d8dba7cdb7865a37", "patch": "@@ -0,0 +1,21 @@\n+// known-bug: #102498\n+\n+#![feature(const_trait_impl, generic_const_exprs)]\n+\n+pub trait Tr {\n+    fn a() -> usize;\n+}\n+\n+impl Tr for () {\n+    fn a() -> usize {\n+        1\n+    }\n+}\n+\n+const fn foo<T: ~const Tr>() -> [u8; T::a()] {\n+    [0; T::a()]\n+}\n+\n+fn main() {\n+    foo::<()>();\n+}"}, {"sha": "e3f67b4467867a1e8bc391df843b5505370922a8", "filename": "src/test/ui/consts/constifconst-call-in-const-position.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e2c5247701da4ec3bc476e61d8dba7cdb7865a37/src%2Ftest%2Fui%2Fconsts%2Fconstifconst-call-in-const-position.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2c5247701da4ec3bc476e61d8dba7cdb7865a37/src%2Ftest%2Fui%2Fconsts%2Fconstifconst-call-in-const-position.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconstifconst-call-in-const-position.stderr?ref=e2c5247701da4ec3bc476e61d8dba7cdb7865a37", "patch": "@@ -0,0 +1,18 @@\n+warning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/constifconst-call-in-const-position.rs:3:30\n+   |\n+LL | #![feature(const_trait_impl, generic_const_exprs)]\n+   |                              ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0080]: evaluation of `foo::<()>::{constant#0}` failed\n+  --> $DIR/constifconst-call-in-const-position.rs:15:38\n+   |\n+LL | const fn foo<T: ~const Tr>() -> [u8; T::a()] {\n+   |                                      ^^^^^^ calling non-const function `<() as Tr>::a`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0080`."}]}