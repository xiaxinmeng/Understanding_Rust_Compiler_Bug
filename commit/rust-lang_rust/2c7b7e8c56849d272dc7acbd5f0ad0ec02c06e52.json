{"sha": "2c7b7e8c56849d272dc7acbd5f0ad0ec02c06e52", "node_id": "C_kwDOAAsO6NoAKDJjN2I3ZThjNTY4NDlkMjcyZGM3YWNiZDVmMGFkMGVjMDJjMDZlNTI", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-11-05T19:50:22Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-11-05T19:50:23Z"}, "message": "Remove if let check for match_ref_pats", "tree": {"sha": "d1e0bb7240b7bd241e2916850286f7b428fff3dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1e0bb7240b7bd241e2916850286f7b428fff3dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c7b7e8c56849d272dc7acbd5f0ad0ec02c06e52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7b7e8c56849d272dc7acbd5f0ad0ec02c06e52", "html_url": "https://github.com/rust-lang/rust/commit/2c7b7e8c56849d272dc7acbd5f0ad0ec02c06e52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c7b7e8c56849d272dc7acbd5f0ad0ec02c06e52/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5239a90f70c7e03660c2d9f4eb395de7dc7be37b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5239a90f70c7e03660c2d9f4eb395de7dc7be37b", "html_url": "https://github.com/rust-lang/rust/commit/5239a90f70c7e03660c2d9f4eb395de7dc7be37b"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "88b1685f52f25172b36858c368680c75bf1d51d0", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2c7b7e8c56849d272dc7acbd5f0ad0ec02c06e52/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c7b7e8c56849d272dc7acbd5f0ad0ec02c06e52/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=2c7b7e8c56849d272dc7acbd5f0ad0ec02c06e52", "patch": "@@ -632,9 +632,6 @@ impl<'tcx> LateLintPass<'tcx> for Matches {\n         if let ExprKind::Match(ex, arms, _) = expr.kind {\n             check_match_ref_pats(cx, ex, arms.iter().map(|el| el.pat), expr);\n         }\n-        if let Some(higher::IfLet { let_pat, let_expr, .. }) = higher::IfLet::hir(cx, expr) {\n-            check_match_ref_pats(cx, let_expr, once(let_pat), expr);\n-        }\n     }\n \n     fn check_local(&mut self, cx: &LateContext<'tcx>, local: &'tcx Local<'_>) {"}]}