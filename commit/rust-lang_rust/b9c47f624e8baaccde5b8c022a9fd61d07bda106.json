{"sha": "b9c47f624e8baaccde5b8c022a9fd61d07bda106", "node_id": "C_kwDOAAsO6NoAKGI5YzQ3ZjYyNGU4YmFhY2NkZTViOGMwMjJhOWZkNjFkMDdiZGExMDY", "commit": {"author": {"name": "Samyak Sarnayak", "email": "samyak201@gmail.com", "date": "2022-08-21T17:51:58Z"}, "committer": {"name": "Samyak Sarnayak", "email": "samyak201@gmail.com", "date": "2022-08-26T14:44:38Z"}, "message": "Use getuid to check instead of USER env var in rustbuild\n\nThis makes it consistent with `x.py` as changed in #95671\n\nFixes #100459", "tree": {"sha": "a1c6ff694c279d8e2040e6b098db6632e8520681", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1c6ff694c279d8e2040e6b098db6632e8520681"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9c47f624e8baaccde5b8c022a9fd61d07bda106", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABEIAB0WIQR4QfYWjztJaecvAv11TbY5AJoFzgUCYwjcYQAKCRB1TbY5AJoF\nzsEQAP49PB8hwqXew0mMsUQK/sl46d8+S7Us8slouj5luzP7mwD/RfXXdyoqHnxc\nqASw2e0kXcIAS0vxb/lGn0DVA9JoPcE=\n=oGyI\n-----END PGP SIGNATURE-----", "payload": "tree a1c6ff694c279d8e2040e6b098db6632e8520681\nparent 8a13871b69924b74cfa1d737f2894068b37ea7ea\nauthor Samyak Sarnayak <samyak201@gmail.com> 1661104318 +0530\ncommitter Samyak Sarnayak <samyak201@gmail.com> 1661525078 +0530\n\nUse getuid to check instead of USER env var in rustbuild\n\nThis makes it consistent with `x.py` as changed in #95671\n\nFixes #100459\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9c47f624e8baaccde5b8c022a9fd61d07bda106", "html_url": "https://github.com/rust-lang/rust/commit/b9c47f624e8baaccde5b8c022a9fd61d07bda106", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9c47f624e8baaccde5b8c022a9fd61d07bda106/comments", "author": {"login": "Samyak2", "id": 34161949, "node_id": "MDQ6VXNlcjM0MTYxOTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/34161949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Samyak2", "html_url": "https://github.com/Samyak2", "followers_url": "https://api.github.com/users/Samyak2/followers", "following_url": "https://api.github.com/users/Samyak2/following{/other_user}", "gists_url": "https://api.github.com/users/Samyak2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Samyak2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Samyak2/subscriptions", "organizations_url": "https://api.github.com/users/Samyak2/orgs", "repos_url": "https://api.github.com/users/Samyak2/repos", "events_url": "https://api.github.com/users/Samyak2/events{/privacy}", "received_events_url": "https://api.github.com/users/Samyak2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Samyak2", "id": 34161949, "node_id": "MDQ6VXNlcjM0MTYxOTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/34161949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Samyak2", "html_url": "https://github.com/Samyak2", "followers_url": "https://api.github.com/users/Samyak2/followers", "following_url": "https://api.github.com/users/Samyak2/following{/other_user}", "gists_url": "https://api.github.com/users/Samyak2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Samyak2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Samyak2/subscriptions", "organizations_url": "https://api.github.com/users/Samyak2/orgs", "repos_url": "https://api.github.com/users/Samyak2/repos", "events_url": "https://api.github.com/users/Samyak2/events{/privacy}", "received_events_url": "https://api.github.com/users/Samyak2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a13871b69924b74cfa1d737f2894068b37ea7ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a13871b69924b74cfa1d737f2894068b37ea7ea", "html_url": "https://github.com/rust-lang/rust/commit/8a13871b69924b74cfa1d737f2894068b37ea7ea"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "03eec02a8bf01da6ffcfcd613c298698c3fb87c5", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9c47f624e8baaccde5b8c022a9fd61d07bda106/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/b9c47f624e8baaccde5b8c022a9fd61d07bda106/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=b9c47f624e8baaccde5b8c022a9fd61d07bda106", "patch": "@@ -793,6 +793,8 @@ def set_dist_environment(self, url):\n \n     def check_vendored_status(self):\n         \"\"\"Check that vendoring is configured properly\"\"\"\n+        # keep this consistent with the equivalent check in rustbuild:\n+        # https://github.com/rust-lang/rust/blob/a8a33cf27166d3eabaffc58ed3799e054af3b0c6/src/bootstrap/lib.rs#L399-L405\n         if 'SUDO_USER' in os.environ and not self.use_vendored_sources:\n             if os.getuid() == 0:\n                 self.use_vendored_sources = True"}, {"sha": "74edbf3701ce78065a795aa846e22f133b5f7457", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b9c47f624e8baaccde5b8c022a9fd61d07bda106/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9c47f624e8baaccde5b8c022a9fd61d07bda106/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=b9c47f624e8baaccde5b8c022a9fd61d07bda106", "patch": "@@ -396,13 +396,18 @@ impl Build {\n         let src = config.src.clone();\n         let out = config.out.clone();\n \n+        #[cfg(unix)]\n+        // keep this consistent with the equivalent check in x.py:\n+        // https://github.com/rust-lang/rust/blob/a8a33cf27166d3eabaffc58ed3799e054af3b0c6/src/bootstrap/bootstrap.py#L796-L797\n         let is_sudo = match env::var_os(\"SUDO_USER\") {\n-            Some(sudo_user) => match env::var_os(\"USER\") {\n-                Some(user) => user != sudo_user,\n-                None => false,\n-            },\n+            Some(_sudo_user) => {\n+                let uid = unsafe { libc::getuid() };\n+                uid == 0\n+            }\n             None => false,\n         };\n+        #[cfg(not(unix))]\n+        let is_sudo = false;\n \n         let ignore_git = config.ignore_git;\n         let rust_info = channel::GitInfo::new(ignore_git, &src);"}]}