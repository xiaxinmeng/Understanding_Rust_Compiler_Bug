{"sha": "6b23c22ccad4044476b65fc8f3e32794f1884781", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMjNjMjJjY2FkNDA0NDQ3NmI2NWZjOGYzZTMyNzk0ZjE4ODQ3ODE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-07T04:31:02Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-07T04:47:24Z"}, "message": "syntax: refactor with new `fn parse_use_tree_glob_or_nested`.", "tree": {"sha": "a9a3726d82f50f1b45ecdc047406e33b5b11cee0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9a3726d82f50f1b45ecdc047406e33b5b11cee0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b23c22ccad4044476b65fc8f3e32794f1884781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b23c22ccad4044476b65fc8f3e32794f1884781", "html_url": "https://github.com/rust-lang/rust/commit/6b23c22ccad4044476b65fc8f3e32794f1884781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b23c22ccad4044476b65fc8f3e32794f1884781/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c6582a2c0c5a527e3fc3ce581244d85b3b71761", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c6582a2c0c5a527e3fc3ce581244d85b3b71761", "html_url": "https://github.com/rust-lang/rust/commit/9c6582a2c0c5a527e3fc3ce581244d85b3b71761"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "3c60c88e2aa5887b2001a173ca7b5356f894cfca", "filename": "src/libsyntax/parse/parser/item.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6b23c22ccad4044476b65fc8f3e32794f1884781/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b23c22ccad4044476b65fc8f3e32794f1884781/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs?ref=6b23c22ccad4044476b65fc8f3e32794f1884781", "patch": "@@ -1077,21 +1077,13 @@ impl<'a> Parser<'a> {\n                 );\n             }\n \n-            if self.eat(&token::BinOp(token::Star)) {\n-                UseTreeKind::Glob\n-            } else {\n-                UseTreeKind::Nested(self.parse_use_tree_list()?)\n-            }\n+            self.parse_use_tree_glob_or_nested()?\n         } else {\n             // `use path::*;` or `use path::{...};` or `use path;` or `use path as bar;`\n             prefix = self.parse_path(PathStyle::Mod)?;\n \n             if self.eat(&token::ModSep) {\n-                if self.eat(&token::BinOp(token::Star)) {\n-                    UseTreeKind::Glob\n-                } else {\n-                    UseTreeKind::Nested(self.parse_use_tree_list()?)\n-                }\n+                self.parse_use_tree_glob_or_nested()?\n             } else {\n                 UseTreeKind::Simple(self.parse_rename()?, DUMMY_NODE_ID, DUMMY_NODE_ID)\n             }\n@@ -1100,6 +1092,15 @@ impl<'a> Parser<'a> {\n         Ok(UseTree { prefix, kind, span: lo.to(self.prev_span) })\n     }\n \n+    /// Parses `*` or `{...}`.\n+    fn parse_use_tree_glob_or_nested(&mut self) -> PResult<'a, UseTreeKind> {\n+        Ok(if self.eat(&token::BinOp(token::Star)) {\n+            UseTreeKind::Glob\n+        } else {\n+            UseTreeKind::Nested(self.parse_use_tree_list()?)\n+        })\n+    }\n+\n     /// Parses a `UseTreeKind::Nested(list)`.\n     ///\n     /// ```"}]}