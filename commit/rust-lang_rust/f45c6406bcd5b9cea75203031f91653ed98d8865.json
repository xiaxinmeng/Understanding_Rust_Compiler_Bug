{"sha": "f45c6406bcd5b9cea75203031f91653ed98d8865", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NWM2NDA2YmNkNWI5Y2VhNzUyMDMwMzFmOTE2NTNlZDk4ZDg4NjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-17T13:00:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-17T13:00:45Z"}, "message": "auto merge of #9241 : alexcrichton/rust/build-rustdoc-ng, r=catamorphism\n\nNow rustdoc_ng will be built as both a binary and a library (using the same\r\nrules as all the other binaries that rust has). Furthermore, this will also\r\nstart building rustdoc_ng unit tests (and running them).\r\n\r\nNote that some `rustdoc_ng` tests were removed, but @cmr says they weren't supposed to be there in the first place. The rustdoc_ng code should also be included in `make install` and `make dist` now.", "tree": {"sha": "f3dda906022fc5955fa72d9de6185ff710af74d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3dda906022fc5955fa72d9de6185ff710af74d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f45c6406bcd5b9cea75203031f91653ed98d8865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f45c6406bcd5b9cea75203031f91653ed98d8865", "html_url": "https://github.com/rust-lang/rust/commit/f45c6406bcd5b9cea75203031f91653ed98d8865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f45c6406bcd5b9cea75203031f91653ed98d8865/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ea85333ffbeaf255e94e25770bdbdeaf4222684", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ea85333ffbeaf255e94e25770bdbdeaf4222684", "html_url": "https://github.com/rust-lang/rust/commit/7ea85333ffbeaf255e94e25770bdbdeaf4222684"}, {"sha": "876cb76f1be63da0756a106ba743a617a5dfb2c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/876cb76f1be63da0756a106ba743a617a5dfb2c8", "html_url": "https://github.com/rust-lang/rust/commit/876cb76f1be63da0756a106ba743a617a5dfb2c8"}], "stats": {"total": 128, "additions": 56, "deletions": 72}, "files": [{"sha": "a1c276cd3d20395715570a8f66fa3b16a1ae160b", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f45c6406bcd5b9cea75203031f91653ed98d8865/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/f45c6406bcd5b9cea75203031f91653ed98d8865/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=f45c6406bcd5b9cea75203031f91653ed98d8865", "patch": "@@ -442,6 +442,7 @@ CSREQ$(1)_T_$(2)_H_$(3) = \\\n \t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t$$(HBIN$(1)_H_$(3))/rustpkg$$(X_$(3)) \\\n \t$$(HBIN$(1)_H_$(3))/rustdoc$$(X_$(3)) \\\n+\t$$(HBIN$(1)_H_$(3))/rustdoc_ng$$(X_$(3)) \\\n \t$$(HBIN$(1)_H_$(3))/rusti$$(X_$(3)) \\\n \t$$(HBIN$(1)_H_$(3))/rust$$(X_$(3)) \\\n \t$$(HLIB$(1)_H_$(3))/$(CFG_LIBRUSTPKG_$(3)) \\"}, {"sha": "30ec6b15bfefe701b14e586a5b2607ff9311277b", "filename": "mk/clean.mk", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=f45c6406bcd5b9cea75203031f91653ed98d8865", "patch": "@@ -68,6 +68,7 @@ clean$(1)_H_$(2):\n \t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustpkg$(X_$(2))\n \t$(Q)rm -f $$(HBIN$(1)_H_$(2))/serializer$(X_$(2))\n \t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustdoc$(X_$(2))\n+\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustdoc_ng$(X_$(2))\n \t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rusti$(X_$(2))\n \t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rust$(X_$(2))\n \t$(Q)rm -f $$(HLIB$(1)_H_$(2))/$(CFG_LIBRUSTPKG_$(2))\n@@ -105,6 +106,7 @@ clean$(1)_T_$(2)_H_$(3):\n \t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rustpkg$(X_$(2))\n \t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/serializer$(X_$(2))\n \t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rustdoc$(X_$(2))\n+\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rustdoc_ng$(X_$(2))\n \t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rusti$(X_$(2))\n \t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rust$(X_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTPKG_$(2))"}, {"sha": "34230e6a5aaff3d143ad3b6fa50e7d3e0a130ab8", "filename": "mk/dist.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=f45c6406bcd5b9cea75203031f91653ed98d8865", "patch": "@@ -39,6 +39,7 @@ PKG_FILES := \\\n       libsyntax                                \\\n       rt                                       \\\n       librustdoc                               \\\n+      rustdoc_ng                               \\\n       rustllvm                                 \\\n       snapshots.txt                            \\\n       test)                                    \\"}, {"sha": "3989e4f8119c8de74fa23db457bfba30e3edb3fb", "filename": "mk/install.mk", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=f45c6406bcd5b9cea75203031f91653ed98d8865", "patch": "@@ -140,6 +140,7 @@ install-host: $(CSREQ$(ISTAGE)_T_$(CFG_BUILD_TRIPLE)_H_$(CFG_BUILD_TRIPLE))\n \t$(Q)$(call INSTALL,$(HB2),$(PHB),rustc$(X_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HB2),$(PHB),rustpkg$(X_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HB2),$(PHB),rustdoc$(X_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL,$(HB2),$(PHB),rustdoc_ng$(X_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HB2),$(PHB),rusti$(X_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HB2),$(PHB),rust$(X_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL_LIB,$(STDLIB_GLOB_$(CFG_BUILD_TRIPLE)))\n@@ -171,6 +172,7 @@ uninstall:\n \t$(Q)rm -f $(PHB)/rusti$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)rm -f $(PHB)/rust$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)rm -f $(PHB)/rustdoc$(X_$(CFG_BUILD_TRIPLE))\n+\t$(Q)rm -f $(PHB)/rustdoc_ng$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)rm -f $(PHL)/$(CFG_RUSTLLVM_$(CFG_BUILD_TRIPLE))\n \t$(Q)rm -f $(PHL)/$(CFG_RUNTIME_$(CFG_BUILD_TRIPLE))\n \t$(Q)for i in \\\n@@ -180,6 +182,7 @@ uninstall:\n           $(call HOST_LIB_FROM_HL_GLOB,$(LIBSYNTAX_GLOB_$(CFG_BUILD_TRIPLE))) \\\n           $(call HOST_LIB_FROM_HL_GLOB,$(LIBRUSTPKG_GLOB_$(CFG_BUILD_TRIPLE))) \\\n           $(call HOST_LIB_FROM_HL_GLOB,$(LIBRUSTDOC_GLOB_$(CFG_BUILD_TRIPLE))) \\\n+          $(call HOST_LIB_FROM_HL_GLOB,$(LIBRUSTDOCNG_GLOB_$(CFG_BUILD_TRIPLE))) \\\n           $(call HOST_LIB_FROM_HL_GLOB,$(LIBRUSTI_GLOB_$(CFG_BUILD_TRIPLE))) \\\n           $(call HOST_LIB_FROM_HL_GLOB,$(LIBRUST_GLOB_$(CFG_BUILD_TRIPLE))) \\\n         ; \\"}, {"sha": "28bbddc787f450582b8388a46d6d1c4d981ae9a7", "filename": "mk/tests.mk", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=f45c6406bcd5b9cea75203031f91653ed98d8865", "patch": "@@ -15,7 +15,7 @@\n \n # The names of crates that must be tested\n TEST_TARGET_CRATES = std extra\n-TEST_HOST_CRATES = rust rusti rustpkg rustc rustdoc syntax\n+TEST_HOST_CRATES = rust rusti rustpkg rustc rustdoc rustdocng syntax\n TEST_CRATES = $(TEST_TARGET_CRATES) $(TEST_HOST_CRATES)\n \n # Markdown files under doc/ that should have their code extracted and run\n@@ -393,6 +393,14 @@ $(3)/stage$(1)/test/rustdoctest-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n+$(3)/stage$(1)/test/rustdocngtest-$(2)$$(X_$(2)):\t\t\t    \\\n+\t\t$$(RUSTDOCNG_LIB) $$(RUSTDOCNG_INPUTS)\t\t\\\n+\t\t$$(SREQ$(1)_T_$(2)_H_$(3)) \\\n+\t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBSYNTAX_$(2)) \\\n+\t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBRUSTC_$(2))\n+\t@$$(call E, compile_and_link: $$@)\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n+\n endef\n \n $(foreach host,$(CFG_HOST_TRIPLES), \\"}, {"sha": "212b7e570f7820ad1bf5a175bf099d959921c5a0", "filename": "mk/tools.mk", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/f45c6406bcd5b9cea75203031f91653ed98d8865/mk%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftools.mk?ref=f45c6406bcd5b9cea75203031f91653ed98d8865", "patch": "@@ -25,7 +25,7 @@ RUSTDOC_INPUTS := $(wildcard $(S)src/librustdoc/*.rs)\n \n # rustdoc_ng, the next generation documentation tool\n \n-RUSTDOCNG_LIB := $(S)src/rustdoc_ng/lib.rs\n+RUSTDOCNG_LIB := $(S)src/rustdoc_ng/rustdoc_ng.rs\n RUSTDOCNG_INPUTS := $(wildcard $(S)src/rustdoc_ng/*.rs)\n \n # Rusti, the JIT REPL\n@@ -208,6 +208,14 @@ $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTDOCNG_$(4)):\t\t\t\t\t\\\n \t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTDOCNG_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n+$$(HBIN$(2)_H_$(4))/rustdoc_ng$$(X_$(4)):\t\t\t\t\\\n+\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rustdoc_ng$$(X_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTDOCNG_$(4))\t\\\n+\t\t$$(HSREQ$(2)_H_$(4))\t\t\t\t\\\n+\t\t| $$(HBIN$(2)_H_$(4))/\n+\t@$$(call E, cp: $$@)\n+\t$$(Q)cp $$< $$@\n+\n $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTI_$(4)):\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTI_$(4))\t\\\n \t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\t\\"}, {"sha": "991bb914fd07f708d31b35a6ca3ef3ee4bc3a045", "filename": "src/driver/driver.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f45c6406bcd5b9cea75203031f91653ed98d8865/src%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45c6406bcd5b9cea75203031f91653ed98d8865/src%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fdriver.rs?ref=f45c6406bcd5b9cea75203031f91653ed98d8865", "patch": "@@ -23,4 +23,7 @@ extern mod this(name = \"rust\");\n #[cfg(rustc)]\n extern mod this(name = \"rustc\");\n \n+#[cfg(rustdoc_ng)]\n+extern mod this(name = \"rustdoc_ng\");\n+\n fn main() { this::main() }"}, {"sha": "65aa070ce6e9487fd6e6e6af67a5652c635ece4e", "filename": "src/rustdoc_ng/clean.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f45c6406bcd5b9cea75203031f91653ed98d8865/src%2Frustdoc_ng%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45c6406bcd5b9cea75203031f91653ed98d8865/src%2Frustdoc_ng%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc_ng%2Fclean.rs?ref=f45c6406bcd5b9cea75203031f91653ed98d8865", "patch": "@@ -1043,27 +1043,3 @@ fn resolve_type(t: &Type) -> Type {\n         ResolvedPath {path: path.clone(), typarams: tpbs.clone(), id: def_id.node}\n     }\n }\n-\n-#[cfg(test)]\n-mod tests {\n-    use super::NameValue;\n-\n-    #[test]\n-    fn test_doc_collapsing() {\n-        assert_eq!(collapse_docs(~\"// Foo\\n//Bar\\n // Baz\\n\"), ~\"Foo\\nBar\\nBaz\");\n-        assert_eq!(collapse_docs(~\"* Foo\\n *  Bar\\n *Baz\\n\"), ~\"Foo\\n Bar\\nBaz\");\n-        assert_eq!(collapse_docs(~\"* Short desc\\n *\\n * Bar\\n *Baz\\n\"), ~\"Short desc\\n\\nBar\\nBaz\");\n-        assert_eq!(collapse_docs(~\" * Foo\"), ~\"Foo\");\n-        assert_eq!(collapse_docs(~\"\\n *\\n *\\n * Foo\"), ~\"Foo\");\n-    }\n-\n-    fn collapse_docs(input: ~str) -> ~str {\n-        let attrs = ~[NameValue(~\"doc\", input)];\n-        let attrs_clean = super::collapse_docs(attrs);\n-\n-        match attrs_clean[0] {\n-            NameValue(~\"doc\", s) => s,\n-            _ => (fail!(\"dude where's my doc?\"))\n-        }\n-    }\n-}"}, {"sha": "75453aa129ccf0b70bc8afa8a6c73b0cd194a257", "filename": "src/rustdoc_ng/lib.rs", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7ea85333ffbeaf255e94e25770bdbdeaf4222684/src%2Frustdoc_ng%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ea85333ffbeaf255e94e25770bdbdeaf4222684/src%2Frustdoc_ng%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc_ng%2Flib.rs?ref=7ea85333ffbeaf255e94e25770bdbdeaf4222684", "patch": "@@ -1,37 +0,0 @@\n-// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[link(name = \"rustdoc_ng\",\n-       vers = \"0.1.0\",\n-       uuid = \"8c6e4598-1596-4aa5-a24c-b811914bbbc6\")];\n-#[desc = \"rustdoc, the Rust documentation extractor\"];\n-#[license = \"MIT/ASL2\"];\n-#[crate_type = \"lib\"];\n-\n-#[deny(warnings)];\n-\n-extern mod syntax;\n-extern mod rustc;\n-\n-extern mod extra;\n-\n-use extra::serialize::Encodable;\n-\n-pub mod core;\n-pub mod doctree;\n-pub mod clean;\n-pub mod visit_ast;\n-pub mod fold;\n-pub mod plugins;\n-pub mod passes;\n-\n-pub static SCHEMA_VERSION: &'static str = \"0.8.0\";\n-\n-pub static ctxtkey: std::local_data::Key<@core::DocContext> = &std::local_data::Key;"}, {"sha": "ec6ad6974e975ac2900975ea1a76f15215123d86", "filename": "src/rustdoc_ng/rustdoc_ng.rs", "status": "renamed", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f45c6406bcd5b9cea75203031f91653ed98d8865/src%2Frustdoc_ng%2Frustdoc_ng.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f45c6406bcd5b9cea75203031f91653ed98d8865/src%2Frustdoc_ng%2Frustdoc_ng.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc_ng%2Frustdoc_ng.rs?ref=f45c6406bcd5b9cea75203031f91653ed98d8865", "patch": "@@ -9,25 +9,41 @@\n // except according to those terms.\n \n #[link(name = \"rustdoc_ng\",\n-       vers = \"0.1.0\",\n-       uuid = \"8c6e4598-1596-4aa5-a24c-b811914bbbc6\")];\n+       vers = \"0.8-pre\",\n+       uuid = \"8c6e4598-1596-4aa5-a24c-b811914bbbc6\",\n+       url = \"https://github.com/mozilla/rust/tree/master/src/rustdoc_ng\")];\n+\n #[desc = \"rustdoc, the Rust documentation extractor\"];\n #[license = \"MIT/ASL2\"];\n-#[crate_type = \"bin\"];\n+#[crate_type = \"lib\"];\n \n+extern mod syntax;\n+extern mod rustc;\n extern mod extra;\n-extern mod rustdoc_ng;\n \n-use rustdoc_ng::*;\n+use extra::serialize::Encodable;\n use std::cell::Cell;\n \n-use extra::serialize::Encodable;\n+pub mod core;\n+pub mod doctree;\n+pub mod clean;\n+pub mod visit_ast;\n+pub mod fold;\n+pub mod plugins;\n+pub mod passes;\n+\n+pub static SCHEMA_VERSION: &'static str = \"0.8.0\";\n+\n+local_data_key!(pub ctxtkey: @core::DocContext)\n+\n+pub fn main() {\n+    main_args(std::os::args());\n+}\n \n-fn main() {\n+pub fn main_args(args: &[~str]) {\n     use extra::getopts::*;\n     use extra::getopts::groups::*;\n \n-    let args = std::os::args();\n     let opts = ~[\n         optmulti(\"L\", \"library-path\", \"directory to add to crate search path\", \"DIR\"),\n         optmulti(\"p\", \"plugin\", \"plugin to load and run\", \"NAME\"),\n@@ -62,7 +78,10 @@ fn main() {\n \n     let cr = Cell::new(Path(matches.free[0]));\n \n-    let crate = std::task::try(|| {let cr = cr.take(); core::run_core(libs.take(), &cr)}).unwrap();\n+    let crate = do std::task::try {\n+        let cr = cr.take();\n+        core::run_core(libs.take(), &cr)\n+    }.unwrap();\n \n     // { \"schema\": version, \"crate\": { parsed crate ... }, \"plugins\": { output of plugins ... }}\n     let mut json = ~extra::treemap::TreeMap::new();", "previous_filename": "src/rustdoc_ng/main.rs"}]}