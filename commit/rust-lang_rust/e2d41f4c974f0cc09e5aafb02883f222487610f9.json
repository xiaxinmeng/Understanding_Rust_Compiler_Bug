{"sha": "e2d41f4c974f0cc09e5aafb02883f222487610f9", "node_id": "C_kwDOAAsO6NoAKGUyZDQxZjRjOTc0ZjBjYzA5ZTVhYWZiMDI4ODNmMjIyNDg3NjEwZjk", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-12-04T14:18:52Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-12-04T14:38:20Z"}, "message": "Make nested RPITIT inherit the parent opaque's generics.", "tree": {"sha": "cb9f547a45395ba89f8b6b87e0da3e8f90be2984", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb9f547a45395ba89f8b6b87e0da3e8f90be2984"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2d41f4c974f0cc09e5aafb02883f222487610f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2d41f4c974f0cc09e5aafb02883f222487610f9", "html_url": "https://github.com/rust-lang/rust/commit/e2d41f4c974f0cc09e5aafb02883f222487610f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2d41f4c974f0cc09e5aafb02883f222487610f9/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cab4fd678c5b148a330f2bf255bf28a67dfea0fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/cab4fd678c5b148a330f2bf255bf28a67dfea0fc", "html_url": "https://github.com/rust-lang/rust/commit/cab4fd678c5b148a330f2bf255bf28a67dfea0fc"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "0a7e25300cba84b38c551cc6ea84fc71ef786e7f", "filename": "compiler/rustc_hir_analysis/src/collect/generics_of.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2d41f4c974f0cc09e5aafb02883f222487610f9/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fgenerics_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2d41f4c974f0cc09e5aafb02883f222487610f9/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fgenerics_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fgenerics_of.rs?ref=e2d41f4c974f0cc09e5aafb02883f222487610f9", "patch": "@@ -4,7 +4,6 @@ use hir::{\n     GenericParamKind, HirId, Node,\n };\n use rustc_hir as hir;\n-use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::lint;\n@@ -143,20 +142,7 @@ pub(super) fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::Generics {\n             Some(tcx.typeck_root_def_id(def_id))\n         }\n         Node::Item(item) => match item.kind {\n-            ItemKind::OpaqueTy(hir::OpaqueTy {\n-                origin:\n-                    hir::OpaqueTyOrigin::FnReturn(fn_def_id) | hir::OpaqueTyOrigin::AsyncFn(fn_def_id),\n-                in_trait,\n-                ..\n-            }) => {\n-                if in_trait {\n-                    assert!(matches!(tcx.def_kind(fn_def_id), DefKind::AssocFn))\n-                } else {\n-                    assert!(matches!(tcx.def_kind(fn_def_id), DefKind::AssocFn | DefKind::Fn))\n-                }\n-                Some(fn_def_id.to_def_id())\n-            }\n-            ItemKind::OpaqueTy(hir::OpaqueTy { origin: hir::OpaqueTyOrigin::TyAlias, .. }) => {\n+            ItemKind::OpaqueTy(hir::OpaqueTy { .. }) => {\n                 let parent_id = tcx.hir().get_parent_item(hir_id);\n                 assert_ne!(parent_id, hir::CRATE_OWNER_ID);\n                 debug!(\"generics_of: parent of opaque ty {:?} is {:?}\", def_id, parent_id);"}, {"sha": "ae8e0aed0cc53b936f302c5d4b4ac1c6384bf099", "filename": "src/test/ui/async-await/in-trait/nested-rpit.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e2d41f4c974f0cc09e5aafb02883f222487610f9/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fnested-rpit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2d41f4c974f0cc09e5aafb02883f222487610f9/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fnested-rpit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fnested-rpit.rs?ref=e2d41f4c974f0cc09e5aafb02883f222487610f9", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+// edition: 2021\n+\n+#![feature(async_fn_in_trait)]\n+#![feature(return_position_impl_trait_in_trait)]\n+#![allow(incomplete_features)]\n+\n+use std::future::Future;\n+use std::marker::PhantomData;\n+\n+trait Lockable<K, V> {\n+    async fn lock_all_entries(&self) -> impl Future<Output = Guard<'_>>;\n+}\n+\n+struct Guard<'a>(PhantomData<&'a ()>);\n+\n+fn main() {}"}]}