{"sha": "21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZTYzZGRkYmVjYTNhYjE1Y2YzNjVmOWJkOGRiYjhhMTg4YzFkOWI=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-20T07:51:00Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-20T10:47:26Z"}, "message": "remove definitions::def_index_to_node_id (unused)", "tree": {"sha": "e0ca9086bf9e43eee098714b5d4a76eb84f72ab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0ca9086bf9e43eee098714b5d4a76eb84f72ab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b", "html_url": "https://github.com/rust-lang/rust/commit/21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ed75856352d6d1731eb47a2206fdc5633688451", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed75856352d6d1731eb47a2206fdc5633688451", "html_url": "https://github.com/rust-lang/rust/commit/3ed75856352d6d1731eb47a2206fdc5633688451"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "b4bda36bc8a279036c60ddb10bdbf8c299695ad2", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=21e63dddbeca3ab15cf365f9bd8dbb8a188c1d9b", "patch": "@@ -397,11 +397,6 @@ impl Definitions {\n         self.node_to_hir_id[node_id]\n     }\n \n-    #[inline]\n-    pub fn def_index_to_node_id(&self, def_index: DefIndex) -> ast::NodeId {\n-        self.as_local_node_id(DefId::local(def_index)).unwrap()\n-    }\n-\n     /// Retrieves the span of the given `DefId` if `DefId` is in the local crate, the span exists\n     /// and it's not `DUMMY_SP`.\n     #[inline]"}]}