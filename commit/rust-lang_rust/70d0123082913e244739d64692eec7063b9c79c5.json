{"sha": "70d0123082913e244739d64692eec7063b9c79c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwZDAxMjMwODI5MTNlMjQ0NzM5ZDY0NjkyZWVjNzA2M2I5Yzc5YzU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-23T08:59:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-23T20:42:54Z"}, "message": "Address nit: Remove `ScopedDataVec` newtype", "tree": {"sha": "d1c0420fcd52df0c59b769291cb1ee3741980dff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1c0420fcd52df0c59b769291cb1ee3741980dff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70d0123082913e244739d64692eec7063b9c79c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70d0123082913e244739d64692eec7063b9c79c5", "html_url": "https://github.com/rust-lang/rust/commit/70d0123082913e244739d64692eec7063b9c79c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70d0123082913e244739d64692eec7063b9c79c5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3d2059b08b33edaa82e200bb433b0324f4bc5e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3d2059b08b33edaa82e200bb433b0324f4bc5e5", "html_url": "https://github.com/rust-lang/rust/commit/b3d2059b08b33edaa82e200bb433b0324f4bc5e5"}], "stats": {"total": 36, "additions": 12, "deletions": 24}, "files": [{"sha": "4022d762aec34de3fc70e5d25ce3ada24d053c38", "filename": "src/librustc/mir/repr.rs", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=70d0123082913e244739d64692eec7063b9c79c5", "patch": "@@ -34,7 +34,7 @@ pub struct Mir<'tcx> {\n \n     /// List of lexical scopes; these are referenced by statements and\n     /// used (eventually) for debuginfo. Indexed by a `ScopeId`.\n-    pub scopes: ScopeDataVec,\n+    pub scopes: Vec<ScopeData>,\n \n     /// Return type of the function.\n     pub return_ty: FnOutput<'tcx>,\n@@ -651,30 +651,19 @@ impl<'tcx> Debug for Lvalue<'tcx> {\n ///////////////////////////////////////////////////////////////////////////\n // Scopes\n \n-#[derive(Clone, Debug, RustcEncodable, RustcDecodable)]\n-pub struct ScopeDataVec {\n-    pub vec: Vec<ScopeData>\n-}\n-\n-impl ScopeDataVec {\n-    pub fn new() -> Self {\n-        ScopeDataVec { vec: Vec::new() }\n-    }\n-}\n-\n-impl Index<ScopeId> for ScopeDataVec {\n+impl Index<ScopeId> for Vec<ScopeData> {\n     type Output = ScopeData;\n \n     #[inline]\n     fn index(&self, index: ScopeId) -> &ScopeData {\n-        &self.vec[index.index()]\n+        &self[index.index()]\n     }\n }\n \n-impl IndexMut<ScopeId> for ScopeDataVec {\n+impl IndexMut<ScopeId> for Vec<ScopeData> {\n     #[inline]\n     fn index_mut(&mut self, index: ScopeId) -> &mut ScopeData {\n-        &mut self.vec[index.index()]\n+        &mut self[index.index()]\n     }\n }\n "}, {"sha": "056d74ffe1f136fec5c8156ecffaf1488e536324", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=70d0123082913e244739d64692eec7063b9c79c5", "patch": "@@ -41,7 +41,7 @@ pub struct Builder<'a, 'tcx: 'a> {\n \n     // the vector of all scopes that we have created thus far;\n     // we track this for debuginfo later\n-    scope_data_vec: ScopeDataVec,\n+    scope_datas: Vec<ScopeData>,\n \n     var_decls: Vec<VarDecl<'tcx>>,\n     var_indices: FnvHashMap<ast::NodeId, u32>,\n@@ -151,7 +151,7 @@ pub fn construct<'a,'tcx>(hir: Cx<'a,'tcx>,\n         cfg: cfg,\n         fn_span: span,\n         scopes: vec![],\n-        scope_data_vec: ScopeDataVec::new(),\n+        scope_datas: vec![],\n         scope_auxiliary: vec![],\n         loop_scopes: vec![],\n         temp_decls: vec![],\n@@ -191,7 +191,7 @@ pub fn construct<'a,'tcx>(hir: Cx<'a,'tcx>,\n     MirAndScopeAuxiliary {\n         mir: Mir {\n             basic_blocks: builder.cfg.basic_blocks,\n-            scopes: builder.scope_data_vec,\n+            scopes: builder.scope_datas,\n             var_decls: builder.var_decls,\n             arg_decls: arg_decls,\n             temp_decls: builder.temp_decls,"}, {"sha": "54830e6c2257d3cb573f624993f08191546b94e0", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=70d0123082913e244739d64692eec7063b9c79c5", "patch": "@@ -98,7 +98,7 @@ use rustc::middle::const_eval::ConstVal;\n use rustc_const_eval::ConstInt;\n \n pub struct Scope<'tcx> {\n-    /// the scope-id within the scope_data_vec\n+    /// the scope-id within the scope_datas\n     id: ScopeId,\n     extent: CodeExtent,\n     drops: Vec<DropData<'tcx>>,\n@@ -246,8 +246,8 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n     pub fn push_scope(&mut self, extent: CodeExtent, entry: BasicBlock) -> ScopeId {\n         debug!(\"push_scope({:?})\", extent);\n         let parent_id = self.scopes.last().map(|s| s.id);\n-        let id = ScopeId::new(self.scope_data_vec.vec.len());\n-        self.scope_data_vec.vec.push(ScopeData {\n+        let id = ScopeId::new(self.scope_datas.len());\n+        self.scope_datas.push(ScopeData {\n             parent_scope: parent_id,\n         });\n         self.scopes.push(Scope {"}, {"sha": "05fe255c64144b372fbe8f84058f3e15ccf7bd67", "filename": "src/librustc_mir/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc_mir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc_mir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fpretty.rs?ref=70d0123082913e244739d64692eec7063b9c79c5", "patch": "@@ -118,7 +118,7 @@ pub fn write_mir_fn<'tcx>(tcx: &TyCtxt<'tcx>,\n \n     // construct a scope tree and write it out\n     let mut scope_tree: FnvHashMap<Option<ScopeId>, Vec<ScopeId>> = FnvHashMap();\n-    for (index, scope_data) in mir.scopes.vec.iter().enumerate() {\n+    for (index, scope_data) in mir.scopes.iter().enumerate() {\n         scope_tree.entry(scope_data.parent_scope)\n                   .or_insert(vec![])\n                   .push(ScopeId::new(index));"}, {"sha": "7abaeb44c1c29bfa4e814667069b3a65be952c86", "filename": "src/librustc_trans/trans/mir/block.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70d0123082913e244739d64692eec7063b9c79c5/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs?ref=70d0123082913e244739d64692eec7063b9c79c5", "patch": "@@ -569,4 +569,3 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n         self.blocks[bb.index()].llbb\n     }\n }\n-"}]}