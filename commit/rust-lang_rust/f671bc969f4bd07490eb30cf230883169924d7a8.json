{"sha": "f671bc969f4bd07490eb30cf230883169924d7a8", "node_id": "C_kwDOAAsO6NoAKGY2NzFiYzk2OWY0YmQwNzQ5MGViMzBjZjIzMDg4MzE2OTkyNGQ3YTg", "commit": {"author": {"name": "Bryysen", "email": "Brukkenbrisen@gmail.com", "date": "2022-05-27T13:42:15Z"}, "committer": {"name": "Bryysen", "email": "Brukkenbrisen@gmail.com", "date": "2022-05-28T21:05:45Z"}, "message": "Improve error message for E0081\n\nPreviously whenever a duplicate discriminant was detected for an Enum,\nwe would print the discriminant bits in the diagnostic without any\ncasting. This caused us to display incorrect values for negative\ndiscriminants. After this PR we format the discriminant signedness\ncorrectly. Also reworded some of the original error\nmessages.", "tree": {"sha": "142938f7d741e394aaa0f56e35014c9eb43443fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/142938f7d741e394aaa0f56e35014c9eb43443fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f671bc969f4bd07490eb30cf230883169924d7a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f671bc969f4bd07490eb30cf230883169924d7a8", "html_url": "https://github.com/rust-lang/rust/commit/f671bc969f4bd07490eb30cf230883169924d7a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f671bc969f4bd07490eb30cf230883169924d7a8/comments", "author": {"login": "Bryysen", "id": 20719480, "node_id": "MDQ6VXNlcjIwNzE5NDgw", "avatar_url": "https://avatars.githubusercontent.com/u/20719480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bryysen", "html_url": "https://github.com/Bryysen", "followers_url": "https://api.github.com/users/Bryysen/followers", "following_url": "https://api.github.com/users/Bryysen/following{/other_user}", "gists_url": "https://api.github.com/users/Bryysen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bryysen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bryysen/subscriptions", "organizations_url": "https://api.github.com/users/Bryysen/orgs", "repos_url": "https://api.github.com/users/Bryysen/repos", "events_url": "https://api.github.com/users/Bryysen/events{/privacy}", "received_events_url": "https://api.github.com/users/Bryysen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Bryysen", "id": 20719480, "node_id": "MDQ6VXNlcjIwNzE5NDgw", "avatar_url": "https://avatars.githubusercontent.com/u/20719480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bryysen", "html_url": "https://github.com/Bryysen", "followers_url": "https://api.github.com/users/Bryysen/followers", "following_url": "https://api.github.com/users/Bryysen/following{/other_user}", "gists_url": "https://api.github.com/users/Bryysen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bryysen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bryysen/subscriptions", "organizations_url": "https://api.github.com/users/Bryysen/orgs", "repos_url": "https://api.github.com/users/Bryysen/repos", "events_url": "https://api.github.com/users/Bryysen/events{/privacy}", "received_events_url": "https://api.github.com/users/Bryysen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56fd680cf9226ab424f88d4e3b43c5e088d17f19", "url": "https://api.github.com/repos/rust-lang/rust/commits/56fd680cf9226ab424f88d4e3b43c5e088d17f19", "html_url": "https://github.com/rust-lang/rust/commit/56fd680cf9226ab424f88d4e3b43c5e088d17f19"}], "stats": {"total": 250, "additions": 174, "deletions": 76}, "files": [{"sha": "0985433659900602c6b71d5f8077eda9592fa635", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 35, "deletions": 16, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/f671bc969f4bd07490eb30cf230883169924d7a8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f671bc969f4bd07490eb30cf230883169924d7a8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=f671bc969f4bd07490eb30cf230883169924d7a8", "patch": "@@ -1376,6 +1376,8 @@ fn check_enum<'tcx>(\n     }\n \n     let mut disr_vals: Vec<Discr<'tcx>> = Vec::with_capacity(vs.len());\n+    // This tracks the previous variant span (in the loop) incase we need it for diagnostics\n+    let mut prev_variant_span: Span = DUMMY_SP;\n     for ((_, discr), v) in iter::zip(def.discriminants(tcx), vs) {\n         // Check for duplicate discriminant values\n         if let Some(i) = disr_vals.iter().position(|&x| x.val == discr.val) {\n@@ -1390,42 +1392,59 @@ fn check_enum<'tcx>(\n                 Some(ref expr) => tcx.hir().span(expr.hir_id),\n                 None => v.span,\n             };\n-            let display_discr = display_discriminant_value(tcx, v, discr.val);\n-            let display_discr_i = display_discriminant_value(tcx, variant_i, disr_vals[i].val);\n-            struct_span_err!(\n+            let display_discr = format_discriminant_overflow(tcx, v, discr);\n+            let display_discr_i = format_discriminant_overflow(tcx, variant_i, disr_vals[i]);\n+            let no_disr = v.disr_expr.is_none();\n+            let mut err = struct_span_err!(\n                 tcx.sess,\n-                span,\n+                sp,\n                 E0081,\n-                \"discriminant value `{}` already exists\",\n-                discr.val,\n-            )\n-            .span_label(i_span, format!(\"first use of {display_discr_i}\"))\n-            .span_label(span, format!(\"enum already has {display_discr}\"))\n-            .emit();\n+                \"discriminant value `{}` assigned more than once\",\n+                discr,\n+            );\n+\n+            err.span_label(i_span, format!(\"first assignment of {display_discr_i}\"));\n+            err.span_label(span, format!(\"second assignment of {display_discr}\"));\n+\n+            if no_disr {\n+                err.span_label(\n+                    prev_variant_span,\n+                    format!(\n+                        \"assigned discriminant for `{}` was incremented from this discriminant\",\n+                        v.ident\n+                    ),\n+                );\n+            }\n+            err.emit();\n         }\n+\n         disr_vals.push(discr);\n+        prev_variant_span = v.span;\n     }\n \n     check_representable(tcx, sp, def_id);\n     check_transparent(tcx, sp, def);\n }\n \n-/// Format an enum discriminant value for use in a diagnostic message.\n-fn display_discriminant_value<'tcx>(\n+/// In the case that a discriminant is both a duplicate and an overflowing literal,\n+/// we insert both the assigned discriminant and the literal it overflowed from into the formatted\n+/// output. Otherwise we format the discriminant normally.\n+fn format_discriminant_overflow<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     variant: &hir::Variant<'_>,\n-    evaluated: u128,\n+    dis: Discr<'tcx>,\n ) -> String {\n     if let Some(expr) = &variant.disr_expr {\n         let body = &tcx.hir().body(expr.body).value;\n         if let hir::ExprKind::Lit(lit) = &body.kind\n             && let rustc_ast::LitKind::Int(lit_value, _int_kind) = &lit.node\n-            && evaluated != *lit_value\n+            && dis.val != *lit_value\n         {\n-                    return format!(\"`{evaluated}` (overflowed from `{lit_value}`)\");\n+                    return format!(\"`{dis}` (overflowed from `{lit_value}`)\");\n         }\n     }\n-    format!(\"`{}`\", evaluated)\n+\n+    format!(\"`{dis}`\")\n }\n \n pub(super) fn check_type_params_are_used<'tcx>("}, {"sha": "27fab1bb505b25581503ca38925cac2a1e69fa0b", "filename": "src/test/ui/enum/enum-discrim-autosizing.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.rs?ref=f671bc969f4bd07490eb30cf230883169924d7a8", "patch": "@@ -4,10 +4,11 @@\n // so force the repr.\n #[cfg_attr(not(target_pointer_width = \"32\"), repr(i32))]\n enum Eu64 {\n-    Au64 = 0, //~NOTE first use of `0`\n+    //~^ ERROR discriminant value `0` assigned more than once\n+    Au64 = 0,\n+    //~^NOTE first assignment of `0`\n     Bu64 = 0x8000_0000_0000_0000\n-    //~^ ERROR discriminant value `0` already exists\n-    //~| NOTE enum already has `0` (overflowed from `9223372036854775808`)\n+    //~^NOTE second assignment of `0` (overflowed from `9223372036854775808`)\n }\n \n fn main() {}"}, {"sha": "bcd362b0632a2500d58b2f8de493a000cbea721e", "filename": "src/test/ui/enum/enum-discrim-autosizing.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.stderr?ref=f671bc969f4bd07490eb30cf230883169924d7a8", "patch": "@@ -1,10 +1,16 @@\n-error[E0081]: discriminant value `0` already exists\n-  --> $DIR/enum-discrim-autosizing.rs:8:12\n+error[E0081]: discriminant value `0` assigned more than once\n+  --> $DIR/enum-discrim-autosizing.rs:6:1\n    |\n-LL |     Au64 = 0,\n-   |            - first use of `0`\n-LL |     Bu64 = 0x8000_0000_0000_0000\n-   |            ^^^^^^^^^^^^^^^^^^^^^ enum already has `0` (overflowed from `9223372036854775808`)\n+LL | / enum Eu64 {\n+LL | |\n+LL | |     Au64 = 0,\n+   | |            - first assignment of `0`\n+LL | |\n+LL | |     Bu64 = 0x8000_0000_0000_0000\n+   | |            --------------------- second assignment of `0` (overflowed from `9223372036854775808`)\n+LL | |\n+LL | | }\n+   | |_^\n \n error: aborting due to previous error\n "}, {"sha": "5aa6a786339cf214085639d9ba72df3c5696a983", "filename": "src/test/ui/error-codes/E0081.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Ferror-codes%2FE0081.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Ferror-codes%2FE0081.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0081.rs?ref=f671bc969f4bd07490eb30cf230883169924d7a8", "patch": "@@ -1,19 +1,30 @@\n enum Enum {\n+    //~^ ERROR discriminant value `3` assigned more than once\n     P = 3,\n-    //~^ NOTE first use of `3`\n+    //~^ NOTE first assignment of `3`\n     X = 3,\n-    //~^ ERROR discriminant value `3` already exists\n-    //~| NOTE enum already has `3`\n+    //~^ NOTE second assignment of `3`\n     Y = 5\n }\n \n #[repr(u8)]\n enum EnumOverflowRepr {\n+    //~^ ERROR discriminant value `1` assigned more than once\n     P = 257,\n-    //~^ NOTE first use of `1` (overflowed from `257`)\n+    //~^ NOTE first assignment of `1` (overflowed from `257`)\n     X = 513,\n-    //~^ ERROR discriminant value `1` already exists\n-    //~| NOTE enum already has `1` (overflowed from `513`)\n+    //~^ NOTE second assignment of `1` (overflowed from `513`)\n+}\n+\n+#[repr(i8)]\n+enum NegDisEnum {\n+    //~^ ERROR discriminant value `-1` assigned more than once\n+    First = -1,\n+    //~^ NOTE first assignment of `-1`\n+    Second = -2,\n+    //~^ NOTE assigned discriminant for `Last` was incremented from this discriminant\n+    Last,\n+    //~^ NOTE second assignment of `-1`\n }\n \n fn main() {"}, {"sha": "d7c7dbac7d647bf451149effab387be96dd436a5", "filename": "src/test/ui/error-codes/E0081.stderr", "status": "modified", "additions": 43, "deletions": 15, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr?ref=f671bc969f4bd07490eb30cf230883169924d7a8", "patch": "@@ -1,21 +1,49 @@\n-error[E0081]: discriminant value `3` already exists\n-  --> $DIR/E0081.rs:4:9\n+error[E0081]: discriminant value `3` assigned more than once\n+  --> $DIR/E0081.rs:1:1\n    |\n-LL |     P = 3,\n-   |         - first use of `3`\n-LL |\n-LL |     X = 3,\n-   |         ^ enum already has `3`\n+LL | / enum Enum {\n+LL | |\n+LL | |     P = 3,\n+   | |         - first assignment of `3`\n+LL | |\n+LL | |     X = 3,\n+   | |         - second assignment of `3`\n+LL | |\n+LL | |     Y = 5\n+LL | | }\n+   | |_^\n \n-error[E0081]: discriminant value `1` already exists\n-  --> $DIR/E0081.rs:14:9\n+error[E0081]: discriminant value `1` assigned more than once\n+  --> $DIR/E0081.rs:11:1\n    |\n-LL |     P = 257,\n-   |         --- first use of `1` (overflowed from `257`)\n-LL |\n-LL |     X = 513,\n-   |         ^^^ enum already has `1` (overflowed from `513`)\n+LL | / enum EnumOverflowRepr {\n+LL | |\n+LL | |     P = 257,\n+   | |         --- first assignment of `1` (overflowed from `257`)\n+LL | |\n+LL | |     X = 513,\n+   | |         --- second assignment of `1` (overflowed from `513`)\n+LL | |\n+LL | | }\n+   | |_^\n \n-error: aborting due to 2 previous errors\n+error[E0081]: discriminant value `-1` assigned more than once\n+  --> $DIR/E0081.rs:20:1\n+   |\n+LL | / enum NegDisEnum {\n+LL | |\n+LL | |     First = -1,\n+   | |             -- first assignment of `-1`\n+LL | |\n+LL | |     Second = -2,\n+   | |     ----------- assigned discriminant for `Last` was incremented from this discriminant\n+LL | |\n+LL | |     Last,\n+   | |     ---- second assignment of `-1`\n+LL | |\n+LL | | }\n+   | |_^\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0081`."}, {"sha": "565db2d0fcab82d44251853957b95b8c52b7a37a", "filename": "src/test/ui/issues/issue-15524.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Fissues%2Fissue-15524.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Fissues%2Fissue-15524.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15524.rs?ref=f671bc969f4bd07490eb30cf230883169924d7a8", "patch": "@@ -1,15 +1,15 @@\n const N: isize = 1;\n \n enum Foo {\n+    //~^ ERROR discriminant value `1` assigned more than once\n+    //~| ERROR discriminant value `1` assigned more than once\n+    //~| ERROR discriminant value `1` assigned more than once\n     A = 1,\n     B = 1,\n-    //~^ ERROR discriminant value `1` already exists\n     C = 0,\n     D,\n-    //~^ ERROR discriminant value `1` already exists\n \n     E = N,\n-    //~^ ERROR discriminant value `1` already exists\n \n }\n "}, {"sha": "a0ea0c2459f7c4b4264276e855db48eb048ce72d", "filename": "src/test/ui/issues/issue-15524.stderr", "status": "modified", "additions": 45, "deletions": 20, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Fissues%2Fissue-15524.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Fissues%2Fissue-15524.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15524.stderr?ref=f671bc969f4bd07490eb30cf230883169924d7a8", "patch": "@@ -1,28 +1,53 @@\n-error[E0081]: discriminant value `1` already exists\n-  --> $DIR/issue-15524.rs:5:9\n+error[E0081]: discriminant value `1` assigned more than once\n+  --> $DIR/issue-15524.rs:3:1\n    |\n-LL |     A = 1,\n-   |         - first use of `1`\n-LL |     B = 1,\n-   |         ^ enum already has `1`\n+LL | / enum Foo {\n+LL | |\n+LL | |\n+LL | |\n+LL | |     A = 1,\n+   | |         - first assignment of `1`\n+LL | |     B = 1,\n+   | |         - second assignment of `1`\n+...  |\n+LL | |\n+LL | | }\n+   | |_^\n \n-error[E0081]: discriminant value `1` already exists\n-  --> $DIR/issue-15524.rs:8:5\n+error[E0081]: discriminant value `1` assigned more than once\n+  --> $DIR/issue-15524.rs:3:1\n    |\n-LL |     A = 1,\n-   |         - first use of `1`\n-...\n-LL |     D,\n-   |     ^ enum already has `1`\n+LL | / enum Foo {\n+LL | |\n+LL | |\n+LL | |\n+LL | |     A = 1,\n+   | |         - first assignment of `1`\n+LL | |     B = 1,\n+LL | |     C = 0,\n+   | |     ----- assigned discriminant for `D` was incremented from this discriminant\n+LL | |     D,\n+   | |     - second assignment of `1`\n+...  |\n+LL | |\n+LL | | }\n+   | |_^\n \n-error[E0081]: discriminant value `1` already exists\n-  --> $DIR/issue-15524.rs:11:9\n+error[E0081]: discriminant value `1` assigned more than once\n+  --> $DIR/issue-15524.rs:3:1\n    |\n-LL |     A = 1,\n-   |         - first use of `1`\n-...\n-LL |     E = N,\n-   |         ^ enum already has `1`\n+LL | / enum Foo {\n+LL | |\n+LL | |\n+LL | |\n+LL | |     A = 1,\n+   | |         - first assignment of `1`\n+...  |\n+LL | |     E = N,\n+   | |         - second assignment of `1`\n+LL | |\n+LL | | }\n+   | |_^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "e497f993da2801ac4b2ad2733c834c56131875ac", "filename": "src/test/ui/tag-variant-disr-dup.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Ftag-variant-disr-dup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Ftag-variant-disr-dup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftag-variant-disr-dup.rs?ref=f671bc969f4bd07490eb30cf230883169924d7a8", "patch": "@@ -1,11 +1,12 @@\n // Black and White have the same discriminator value ...\n \n enum Color {\n+    //~^ ERROR discriminant value `0` assigned more than once\n     Red = 0xff0000,\n     Green = 0x00ff00,\n     Blue = 0x0000ff,\n     Black = 0x000000,\n-    White = 0x000000, //~ ERROR discriminant value `0` already exists\n+    White = 0x000000,\n }\n \n fn main() { }"}, {"sha": "27adb6998aedef3b46adc022ee5d63740734295d", "filename": "src/test/ui/tag-variant-disr-dup.stderr", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Ftag-variant-disr-dup.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f671bc969f4bd07490eb30cf230883169924d7a8/src%2Ftest%2Fui%2Ftag-variant-disr-dup.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftag-variant-disr-dup.stderr?ref=f671bc969f4bd07490eb30cf230883169924d7a8", "patch": "@@ -1,10 +1,17 @@\n-error[E0081]: discriminant value `0` already exists\n-  --> $DIR/tag-variant-disr-dup.rs:8:13\n+error[E0081]: discriminant value `0` assigned more than once\n+  --> $DIR/tag-variant-disr-dup.rs:3:1\n    |\n-LL |     Black = 0x000000,\n-   |             -------- first use of `0`\n-LL |     White = 0x000000,\n-   |             ^^^^^^^^ enum already has `0`\n+LL | / enum Color {\n+LL | |\n+LL | |     Red = 0xff0000,\n+LL | |     Green = 0x00ff00,\n+LL | |     Blue = 0x0000ff,\n+LL | |     Black = 0x000000,\n+   | |             -------- first assignment of `0`\n+LL | |     White = 0x000000,\n+   | |             -------- second assignment of `0`\n+LL | | }\n+   | |_^\n \n error: aborting due to previous error\n "}]}