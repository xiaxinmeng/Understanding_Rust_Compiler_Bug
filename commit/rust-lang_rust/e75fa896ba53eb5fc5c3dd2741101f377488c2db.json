{"sha": "e75fa896ba53eb5fc5c3dd2741101f377488c2db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NWZhODk2YmE1M2ViNWZjNWMzZGQyNzQxMTAxZjM3NzQ4OGMyZGI=", "commit": {"author": {"name": "Poliorcetics", "email": "poliorcetics@users.noreply.github.com", "date": "2020-06-17T01:30:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-17T01:30:41Z"}, "message": "Don't imply function pointers are references\n\nCo-authored-by: David Tolnay <dtolnay@gmail.com>", "tree": {"sha": "53ec8623410657a9af71f2a818aaae8813c0f1e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53ec8623410657a9af71f2a818aaae8813c0f1e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e75fa896ba53eb5fc5c3dd2741101f377488c2db", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe6XJBCRBK7hj4Ov3rIwAAdHIIAFBqe+NkWpoUdiYEZrZioN47\nqAzhlWLeS6TU+zGTJklT3XsCooIme7W/0igUQh0p6R1/IlB8vU+Hz3oa/noH4Fq/\nfOT0NKa807WgvYSR03aaVCOsDkFWFjkeE2+Kf/qq9Rs4eh/0iv+xdL2UVEBo11Iw\nlU+eeplSgGQNjgzvHEASB8ZU3v+h7APuL69Qx0oUs5BckGqfkJPuNl0XCFN9/Hwo\n/hSCkM6LGzjLuEXPvVOuQNavq/v4lpOQa/ND6Xmq5Id/gA8teiWTeL0pV9Eg28pM\neikarLj0QnOTOLNEP9CC5i0owYRzaU1n5sUD+hFj6iemOubV649VQYmTPTrqzOk=\n=U4ub\n-----END PGP SIGNATURE-----\n", "payload": "tree 53ec8623410657a9af71f2a818aaae8813c0f1e1\nparent 15cd51af5e193789e82024ffbe194f4c0dbdfbc3\nauthor Poliorcetics <poliorcetics@users.noreply.github.com> 1592357441 +0200\ncommitter GitHub <noreply@github.com> 1592357441 +0200\n\nDon't imply function pointers are references\n\nCo-authored-by: David Tolnay <dtolnay@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e75fa896ba53eb5fc5c3dd2741101f377488c2db", "html_url": "https://github.com/rust-lang/rust/commit/e75fa896ba53eb5fc5c3dd2741101f377488c2db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e75fa896ba53eb5fc5c3dd2741101f377488c2db/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15cd51af5e193789e82024ffbe194f4c0dbdfbc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/15cd51af5e193789e82024ffbe194f4c0dbdfbc3", "html_url": "https://github.com/rust-lang/rust/commit/15cd51af5e193789e82024ffbe194f4c0dbdfbc3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "70083ffa4be37842762f8ed4e2ba8459635a0924", "filename": "src/libcore/mem/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e75fa896ba53eb5fc5c3dd2741101f377488c2db/src%2Flibcore%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e75fa896ba53eb5fc5c3dd2741101f377488c2db/src%2Flibcore%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmod.rs?ref=e75fa896ba53eb5fc5c3dd2741101f377488c2db", "patch": "@@ -583,7 +583,7 @@ pub const fn needs_drop<T>() -> bool {\n ///\n /// There is no guarantee that an all-zero byte-pattern represents a valid value\n /// of some type `T`. For example, the all-zero byte-pattern is not a valid value\n-/// for reference types (`&T`, `&mut T` and functions pointers). Using `zeroed` on\n+/// for reference types (`&T`, `&mut T`) and functions pointers. Using `zeroed` on\n /// such types on such types causes immediate [undefined behavior][ub] because\n /// [the Rust compiler assumes][inv] that there always is a valid value in a\n /// variable it considers initialized.\n@@ -613,7 +613,7 @@ pub const fn needs_drop<T>() -> bool {\n /// use std::mem;\n ///\n /// let _x: &i32 = unsafe { mem::zeroed() }; // Undefined behavior!\n-/// let _y: fn() = unsafe { mem::zeroed() }; // And again !\n+/// let _y: fn() = unsafe { mem::zeroed() }; // And again!\n /// ```\n #[inline(always)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}