{"sha": "e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZWQxMDEwOTg3YzIxYTRhNWQ0ZWE0ZTQ2YWViZjdhZGM4NzJiZmM=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-27T12:17:58Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-27T12:17:58Z"}, "message": "Rename BoxedGlobalCtxt.", "tree": {"sha": "509c9526db94750314ceabe1ed0216e7e017ac87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/509c9526db94750314ceabe1ed0216e7e017ac87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc", "html_url": "https://github.com/rust-lang/rust/commit/e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79e232401e07c48020b327a947c9d98d0696f082", "url": "https://api.github.com/repos/rust-lang/rust/commits/79e232401e07c48020b327a947c9d98d0696f082", "html_url": "https://github.com/rust-lang/rust/commit/79e232401e07c48020b327a947c9d98d0696f082"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "d2bb2cdfaffacd33a2d9678a4b39bbb20808319f", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc", "patch": "@@ -741,9 +741,9 @@ pub fn default_provide_extern(providers: &mut ty::query::Providers<'_>) {\n     rustc_codegen_ssa::provide_extern(providers);\n }\n \n-pub struct BoxedGlobalCtxt<'tcx>(&'tcx GlobalCtxt<'tcx>);\n+pub struct QueryContext<'tcx>(&'tcx GlobalCtxt<'tcx>);\n \n-impl<'tcx> BoxedGlobalCtxt<'tcx> {\n+impl<'tcx> QueryContext<'tcx> {\n     pub fn enter<F, R>(&mut self, f: F) -> R\n     where\n         F: FnOnce(TyCtxt<'tcx>) -> R,\n@@ -766,7 +766,7 @@ pub fn create_global_ctxt<'tcx>(\n     global_ctxt: &'tcx Once<GlobalCtxt<'tcx>>,\n     arenas: &'tcx Once<AllArenas>,\n     local_arena: &'tcx WorkerLocal<Arena<'tcx>>,\n-) -> BoxedGlobalCtxt<'tcx> {\n+) -> QueryContext<'tcx> {\n     let sess = &compiler.session();\n     let defs = mem::take(&mut resolver_outputs.definitions);\n \n@@ -813,7 +813,7 @@ pub fn create_global_ctxt<'tcx>(\n         time(tcx.sess, \"dep graph tcx init\", || rustc_incremental::dep_graph_tcx_init(tcx));\n     });\n \n-    BoxedGlobalCtxt(gcx)\n+    QueryContext(gcx)\n }\n \n /// Runs the resolution, type-checking, region checking and other"}, {"sha": "581ebe9c00fe1d5f5bde08f24ed629e964905fe3", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=e5ed1010987c21a4a5d4ea4e46aebf7adc872bfc", "patch": "@@ -1,5 +1,5 @@\n use crate::interface::{Compiler, Result};\n-use crate::passes::{self, BoxedResolver, BoxedGlobalCtxt};\n+use crate::passes::{self, BoxedResolver, QueryContext};\n \n use rustc_incremental::DepGraphFuture;\n use rustc_data_structures::sync::{Lrc, Once, WorkerLocal};\n@@ -85,7 +85,7 @@ pub struct Queries<'tcx> {\n     dep_graph: Query<DepGraph>,\n     lower_to_hir: Query<(&'tcx hir::map::Forest, Steal<ResolverOutputs>)>,\n     prepare_outputs: Query<OutputFilenames>,\n-    global_ctxt: Query<BoxedGlobalCtxt<'tcx>>,\n+    global_ctxt: Query<QueryContext<'tcx>>,\n     ongoing_codegen: Query<Box<dyn Any>>,\n }\n \n@@ -253,7 +253,7 @@ impl<'tcx> Queries<'tcx> {\n         })\n     }\n \n-    pub fn global_ctxt(&'tcx self) -> Result<&Query<BoxedGlobalCtxt<'tcx>>> {\n+    pub fn global_ctxt(&'tcx self) -> Result<&Query<QueryContext<'tcx>>> {\n         self.global_ctxt.compute(|| {\n             let crate_name = self.crate_name()?.peek().clone();\n             let outputs = self.prepare_outputs()?.peek().clone();"}]}