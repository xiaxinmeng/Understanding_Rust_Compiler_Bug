{"sha": "d00c70363f8e1d9bf44b803b5d6d9747747252b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMGM3MDM2M2Y4ZTFkOWJmNDRiODAzYjVkNmQ5NzQ3NzQ3MjUyYjU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-08-10T23:56:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-10T23:56:45Z"}, "message": "Rollup merge of #75369 - denisvasilik:intra-doc-links-core-borrow, r=Manishearth\n\nMove to intra-doc links in /library/core/src/borrow.rs\n\nHelps with #75080.\n\n@rustbot modify labels: T-doc, A-intra-doc-links, T-rustdoc\n\nKnown issues:\n\n* Links from `core` to `std` (#74481):\n    * [`Box<T>`]\n    * [`Mutex<T>`]\n    * [`Rc<T>`]\n    * [`String`]\n    * [`HashMap<K, V>`]", "tree": {"sha": "af7168beb6d7758270407caf0533e78b28c6da63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af7168beb6d7758270407caf0533e78b28c6da63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d00c70363f8e1d9bf44b803b5d6d9747747252b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfMd69CRBK7hj4Ov3rIwAAdHIIAK4TkZCAeTbsrEGsYbSRW7tS\nmaii8jE4MGIWPyUU5R8vVmt9kKfLGgfILUqDxyBO0u4qfQRDSnIDbl2Cr8H1s+QW\nK3S4P7q1Yvbe+sQUulsW1aZDmXlmWZaxSV1tziZHV+sFn+0ukDcmIyTEWnheLw/O\nKVv4YLsZ9Cd5+d4IVyS5LinoctcktvJkMKxfpaOgkWrlVvsG1IMr9RHJFLa7qQVU\n5pD9cE4HZYUy8QnUSCFCcfR7XX2jzKvHvwGFa2JA9M8fblq3zR652qOYwjGWssrt\nVDuQkv1tL2Wz6TZj7rpdxRsQaVaDrm4Vqm1nNnPP/SiFvp9EVgH6PgqNCx4iGDI=\n=vL4n\n-----END PGP SIGNATURE-----\n", "payload": "tree af7168beb6d7758270407caf0533e78b28c6da63\nparent 51ed33d8c2b84cef48adb0a0b1ac8e88b4767a32\nparent d7e72710853983372bf64aef905f1c273b75d365\nauthor Dylan DPC <dylan.dpc@gmail.com> 1597103805 +0200\ncommitter GitHub <noreply@github.com> 1597103805 +0200\n\nRollup merge of #75369 - denisvasilik:intra-doc-links-core-borrow, r=Manishearth\n\nMove to intra-doc links in /library/core/src/borrow.rs\n\nHelps with #75080.\n\n@rustbot modify labels: T-doc, A-intra-doc-links, T-rustdoc\n\nKnown issues:\n\n* Links from `core` to `std` (#74481):\n    * [`Box<T>`]\n    * [`Mutex<T>`]\n    * [`Rc<T>`]\n    * [`String`]\n    * [`HashMap<K, V>`]\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d00c70363f8e1d9bf44b803b5d6d9747747252b5", "html_url": "https://github.com/rust-lang/rust/commit/d00c70363f8e1d9bf44b803b5d6d9747747252b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d00c70363f8e1d9bf44b803b5d6d9747747252b5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51ed33d8c2b84cef48adb0a0b1ac8e88b4767a32", "url": "https://api.github.com/repos/rust-lang/rust/commits/51ed33d8c2b84cef48adb0a0b1ac8e88b4767a32", "html_url": "https://github.com/rust-lang/rust/commit/51ed33d8c2b84cef48adb0a0b1ac8e88b4767a32"}, {"sha": "d7e72710853983372bf64aef905f1c273b75d365", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7e72710853983372bf64aef905f1c273b75d365", "html_url": "https://github.com/rust-lang/rust/commit/d7e72710853983372bf64aef905f1c273b75d365"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "6f5a6aa7c79cabf9ab3cf72a8d39b6f6bd544936", "filename": "library/core/src/borrow.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d00c70363f8e1d9bf44b803b5d6d9747747252b5/library%2Fcore%2Fsrc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00c70363f8e1d9bf44b803b5d6d9747747252b5/library%2Fcore%2Fsrc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fborrow.rs?ref=d00c70363f8e1d9bf44b803b5d6d9747747252b5", "patch": "@@ -40,14 +40,12 @@\n /// provide a reference to related type `T`, it is often better to use\n /// [`AsRef<T>`] as more types can safely implement it.\n ///\n-/// [`AsRef<T>`]: ../../std/convert/trait.AsRef.html\n-/// [`BorrowMut<T>`]: trait.BorrowMut.html\n+/// [`BorrowMut<T>`]: BorrowMut\n /// [`Box<T>`]: ../../std/boxed/struct.Box.html\n /// [`Mutex<T>`]: ../../std/sync/struct.Mutex.html\n /// [`Rc<T>`]: ../../std/rc/struct.Rc.html\n-/// [`str`]: ../../std/primitive.str.html\n /// [`String`]: ../../std/string/struct.String.html\n-/// [`borrow`]: #tymethod.borrow\n+/// [`borrow`]: Borrow::borrow\n ///\n /// # Examples\n ///\n@@ -152,10 +150,9 @@\n /// If it wants to allow others access to the underlying `str`, it can do\n /// that via `AsRef<str>` which doesn\u2019t carry any extra requirements.\n ///\n-/// [`Hash`]: ../../std/hash/trait.Hash.html\n+/// [`Hash`]: crate::hash::Hash\n /// [`HashMap<K, V>`]: ../../std/collections/struct.HashMap.html\n /// [`String`]: ../../std/string/struct.String.html\n-/// [`str`]: ../../std/primitive.str.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Borrow<Borrowed: ?Sized> {\n     /// Immutably borrows from an owned value.\n@@ -187,7 +184,7 @@ pub trait Borrow<Borrowed: ?Sized> {\n /// an underlying type by providing a mutable reference. See [`Borrow<T>`]\n /// for more information on borrowing as another type.\n ///\n-/// [`Borrow<T>`]: trait.Borrow.html\n+/// [`Borrow<T>`]: Borrow\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait BorrowMut<Borrowed: ?Sized>: Borrow<Borrowed> {\n     /// Mutably borrows from an owned value."}]}