{"sha": "2d2fd3168707567a1349230c0be609a860e60759", "node_id": "C_kwDOAAsO6NoAKDJkMmZkMzE2ODcwNzU2N2ExMzQ5MjMwYzBiZTYwOWE4NjBlNjA3NTk", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-06-29T22:25:14Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-06-29T22:25:14Z"}, "message": "Remove FIXME that hasn't been an issue in practice", "tree": {"sha": "086f3ca4d11d44981af3f76a6a32a873c854fcd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/086f3ca4d11d44981af3f76a6a32a873c854fcd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d2fd3168707567a1349230c0be609a860e60759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d2fd3168707567a1349230c0be609a860e60759", "html_url": "https://github.com/rust-lang/rust/commit/2d2fd3168707567a1349230c0be609a860e60759", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d2fd3168707567a1349230c0be609a860e60759/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8192288ee067054faf255335bfc249ed5cafa6d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8192288ee067054faf255335bfc249ed5cafa6d3", "html_url": "https://github.com/rust-lang/rust/commit/8192288ee067054faf255335bfc249ed5cafa6d3"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "181416a2b4ac9c2ce4be82354a8de6502d109297", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d2fd3168707567a1349230c0be609a860e60759/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d2fd3168707567a1349230c0be609a860e60759/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=2d2fd3168707567a1349230c0be609a860e60759", "patch": "@@ -1759,7 +1759,6 @@ fn is_field_vis_inherited(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n     match tcx.def_kind(parent) {\n         DefKind::Struct | DefKind::Union => false,\n         DefKind::Variant => true,\n-        // FIXME: what about DefKind::Ctor?\n         parent_kind => panic!(\"unexpected parent kind: {:?}\", parent_kind),\n     }\n }"}]}