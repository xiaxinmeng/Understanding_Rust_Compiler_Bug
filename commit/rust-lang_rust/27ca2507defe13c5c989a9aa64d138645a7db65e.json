{"sha": "27ca2507defe13c5c989a9aa64d138645a7db65e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3Y2EyNTA3ZGVmZTEzYzVjOTg5YTlhYTY0ZDEzODY0NWE3ZGI2NWU=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-24T18:40:16Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-24T18:41:56Z"}, "message": "Allow creation of src-links for device files", "tree": {"sha": "e2561ee0c2cd9686288575529038dda59558945a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2561ee0c2cd9686288575529038dda59558945a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27ca2507defe13c5c989a9aa64d138645a7db65e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27ca2507defe13c5c989a9aa64d138645a7db65e", "html_url": "https://github.com/rust-lang/rust/commit/27ca2507defe13c5c989a9aa64d138645a7db65e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27ca2507defe13c5c989a9aa64d138645a7db65e/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37c6f2881c634fe72dc98b846037dc1237270659", "url": "https://api.github.com/repos/rust-lang/rust/commits/37c6f2881c634fe72dc98b846037dc1237270659", "html_url": "https://github.com/rust-lang/rust/commit/37c6f2881c634fe72dc98b846037dc1237270659"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "267220891b98bf44b470744b363bc90f03da8a16", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27ca2507defe13c5c989a9aa64d138645a7db65e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ca2507defe13c5c989a9aa64d138645a7db65e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=27ca2507defe13c5c989a9aa64d138645a7db65e", "patch": "@@ -1489,9 +1489,11 @@ impl<'a> Item<'a> {\n                           true, |component| {\n                 path.push(component.to_string());\n             });\n+\n             // If the span points into an external macro the\n             // source-file will be bogus, i.e `<foo macros>`\n-            if Path::new(&self.item.source.filename).is_file() {\n+            let filename = &self.item.source.filename;\n+            if !(filename.starts_with(\"<\") && filename.ends_with(\"macros>\")) {\n                 Some(format!(\"{root}src/{krate}/{path}.html#{href}\",\n                              root = self.cx.root_path,\n                              krate = self.cx.layout.krate,"}]}