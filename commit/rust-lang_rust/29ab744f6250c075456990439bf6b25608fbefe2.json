{"sha": "29ab744f6250c075456990439bf6b25608fbefe2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YWI3NDRmNjI1MGMwNzU0NTY5OTA0MzliZjZiMjU2MDhmYmVmZTI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-10T17:31:02Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-10T17:31:02Z"}, "message": "A small change", "tree": {"sha": "a2d9cb74f0c9526b30a64f39699b282e56a5bd34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2d9cb74f0c9526b30a64f39699b282e56a5bd34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29ab744f6250c075456990439bf6b25608fbefe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29ab744f6250c075456990439bf6b25608fbefe2", "html_url": "https://github.com/rust-lang/rust/commit/29ab744f6250c075456990439bf6b25608fbefe2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29ab744f6250c075456990439bf6b25608fbefe2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ebcea23e4e057a3c298ae14f3ea62033d831a18", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ebcea23e4e057a3c298ae14f3ea62033d831a18", "html_url": "https://github.com/rust-lang/rust/commit/5ebcea23e4e057a3c298ae14f3ea62033d831a18"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "b1d9e94b2720bb7783fbc6d8baa91e1c7033868f", "filename": "src/abi.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/29ab744f6250c075456990439bf6b25608fbefe2/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29ab744f6250c075456990439bf6b25608fbefe2/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=29ab744f6250c075456990439bf6b25608fbefe2", "patch": "@@ -315,10 +315,6 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n     let fn_ty = func.layout().ty;\n     let sig = ty_fn_sig(fx.tcx, fn_ty);\n \n-    let return_place = destination\n-        .as_ref()\n-        .map(|(place, _)| trans_place(fx, place));\n-\n     // Unpack arguments tuple for closures\n     let args = if sig.abi == Abi::RustCall {\n         assert_eq!(args.len(), 2, \"rust-call abi requires two arguments\");\n@@ -351,8 +347,8 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n             let intrinsic = fx.tcx.item_name(def_id).as_str();\n             let intrinsic = &intrinsic[..];\n \n-            let ret = match return_place {\n-                Some(ret) => ret,\n+            let ret = match destination {\n+                Some((place, _)) => trans_place(fx, place),\n                 None => {\n                     println!(\n                         \"codegen_call(fx, {:?}, {:?}, {:?})\",\n@@ -384,8 +380,8 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n         }\n     }\n \n-    let return_ptr = match return_place {\n-        Some(place) => place.expect_addr(),\n+    let return_ptr = match destination {\n+        Some((place, _)) => trans_place(fx, place).expect_addr(),\n         None => fx.bcx.ins().iconst(types::I64, 0),\n     };\n "}]}