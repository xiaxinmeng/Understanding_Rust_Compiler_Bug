{"sha": "7eaa589fe519298893899a8581d57667f9427a11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYWE1ODlmZTUxOTI5ODg5Mzg5OWE4NTgxZDU3NjY3Zjk0MjdhMTE=", "commit": {"author": {"name": "Dan Yang", "email": "dsyang@fb.com", "date": "2015-01-31T20:16:14Z"}, "committer": {"name": "Dan Yang", "email": "dsyang@fb.com", "date": "2015-01-31T20:16:14Z"}, "message": "fix use decl code example in reference", "tree": {"sha": "299319db08b94897d5e50833680e9485f5ea0733", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/299319db08b94897d5e50833680e9485f5ea0733"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7eaa589fe519298893899a8581d57667f9427a11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7eaa589fe519298893899a8581d57667f9427a11", "html_url": "https://github.com/rust-lang/rust/commit/7eaa589fe519298893899a8581d57667f9427a11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7eaa589fe519298893899a8581d57667f9427a11/comments", "author": null, "committer": null, "parents": [{"sha": "474b324eda10440d6568ef872a7307d38e7de95b", "url": "https://api.github.com/repos/rust-lang/rust/commits/474b324eda10440d6568ef872a7307d38e7de95b", "html_url": "https://github.com/rust-lang/rust/commit/474b324eda10440d6568ef872a7307d38e7de95b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "089db3f359c0fb9fb84865eca48a6194bde3d538", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7eaa589fe519298893899a8581d57667f9427a11/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/7eaa589fe519298893899a8581d57667f9427a11/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=7eaa589fe519298893899a8581d57667f9427a11", "patch": "@@ -1061,7 +1061,7 @@ mod foo {\n     extern crate core;\n \n     use foo::core::iter; // good: foo is at crate root\n-//  use core::iter;      // bad:  native is not at the crate root\n+//  use core::iter;      // bad:  core is not at the crate root\n     use self::baz::foobaz;  // good: self refers to module 'foo'\n     use foo::bar::foobar;   // good: foo is at crate root\n "}]}