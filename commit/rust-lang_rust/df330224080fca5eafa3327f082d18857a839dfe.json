{"sha": "df330224080fca5eafa3327f082d18857a839dfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMzMwMjI0MDgwZmNhNWVhZmEzMzI3ZjA4MmQxODg1N2E4MzlkZmU=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-05-12T09:48:58Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-05-12T09:48:58Z"}, "message": "add more specific match postfix for Result and Option\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "c47aa265097f7603d40caf51354903556410c96a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c47aa265097f7603d40caf51354903556410c96a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df330224080fca5eafa3327f082d18857a839dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df330224080fca5eafa3327f082d18857a839dfe", "html_url": "https://github.com/rust-lang/rust/commit/df330224080fca5eafa3327f082d18857a839dfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df330224080fca5eafa3327f082d18857a839dfe/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93eae6549eb5bb7cdb4f292a0798e5425e7f20e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/93eae6549eb5bb7cdb4f292a0798e5425e7f20e9", "html_url": "https://github.com/rust-lang/rust/commit/93eae6549eb5bb7cdb4f292a0798e5425e7f20e9"}], "stats": {"total": 58, "additions": 43, "deletions": 15}, "files": [{"sha": "f2a52a407a973d3aecbb0433afdb473de417405b", "filename": "crates/ra_ide/src/completion/complete_postfix.rs", "status": "modified", "additions": 43, "deletions": 15, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/df330224080fca5eafa3327f082d18857a839dfe/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df330224080fca5eafa3327f082d18857a839dfe/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=df330224080fca5eafa3327f082d18857a839dfe", "patch": "@@ -38,8 +38,8 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n         Some(it) => it,\n         None => return,\n     };\n-\n-    if let Some(try_enum) = TryEnum::from_ty(&ctx.sema, &receiver_ty) {\n+    let try_enum = TryEnum::from_ty(&ctx.sema, &receiver_ty);\n+    if let Some(try_enum) = &try_enum {\n         match try_enum {\n             TryEnum::Result => {\n                 postfix_snippet(\n@@ -104,7 +104,6 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n         )\n         .add_to(acc);\n     }\n-\n     // !&&&42 is a compiler error, ergo process it before considering the references\n     postfix_snippet(ctx, cap, &dot_receiver, \"not\", \"!expr\", &format!(\"!{}\", receiver_text))\n         .add_to(acc);\n@@ -126,16 +125,45 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     let dot_receiver = include_references(dot_receiver);\n     let receiver_text =\n         get_receiver_text(&dot_receiver, ctx.dot_receiver_is_ambiguous_float_literal);\n-\n-    postfix_snippet(\n-        ctx,\n-        cap,\n-        &dot_receiver,\n-        \"match\",\n-        \"match expr {}\",\n-        &format!(\"match {} {{\\n    ${{1:_}} => {{$0\\\\}},\\n}}\", receiver_text),\n-    )\n-    .add_to(acc);\n+    match try_enum {\n+        Some(try_enum) => {\n+            match try_enum {\n+                TryEnum::Result => {\n+                    postfix_snippet(\n+                    ctx,\n+                    cap,\n+                    &dot_receiver,\n+                    \"match\",\n+                    \"match expr {}\",\n+                    &format!(\"match {} {{\\n    Ok(${{1:_}}) => {{$2\\\\}},\\n    Err(${{3:_}}) => {{$0\\\\}},\\n}}\", receiver_text),\n+                )\n+                .add_to(acc);\n+                }\n+                TryEnum::Option => {\n+                    postfix_snippet(\n+                    ctx,\n+                    cap,\n+                    &dot_receiver,\n+                    \"match\",\n+                    \"match expr {}\",\n+                    &format!(\"match {} {{\\n    Some(${{1:_}}) => {{$2\\\\}},\\n    None => {{$0\\\\}},\\n}}\", receiver_text),\n+                )\n+                .add_to(acc);\n+                }\n+            }\n+        }\n+        None => {\n+            postfix_snippet(\n+                ctx,\n+                cap,\n+                &dot_receiver,\n+                \"match\",\n+                \"match expr {}\",\n+                &format!(\"match {} {{\\n    ${{1:_}} => {{$0\\\\}},\\n}}\", receiver_text),\n+            )\n+            .add_to(acc);\n+        }\n+    }\n \n     postfix_snippet(\n         ctx,\n@@ -324,7 +352,7 @@ mod tests {\n                 label: \"match\",\n                 source_range: 210..210,\n                 delete: 206..210,\n-                insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n+                insert: \"match bar {\\n    Some(${1:_}) => {$2\\\\},\\n    None => {$0\\\\},\\n}\",\n                 detail: \"match expr {}\",\n             },\n             CompletionItem {\n@@ -403,7 +431,7 @@ mod tests {\n                 label: \"match\",\n                 source_range: 211..211,\n                 delete: 207..211,\n-                insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n+                insert: \"match bar {\\n    Ok(${1:_}) => {$2\\\\},\\n    Err(${3:_}) => {$0\\\\},\\n}\",\n                 detail: \"match expr {}\",\n             },\n             CompletionItem {"}]}