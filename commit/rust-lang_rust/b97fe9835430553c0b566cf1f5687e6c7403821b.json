{"sha": "b97fe9835430553c0b566cf1f5687e6c7403821b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5N2ZlOTgzNTQzMDU1M2MwYjU2NmNmMWY1Njg3ZTZjNzQwMzgyMWI=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-23T21:46:39Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-25T19:12:25Z"}, "message": "Generate buffer type for bounded protocols", "tree": {"sha": "9d9d02f8f20b076d4f7e4074aa9d5e322e89cc69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d9d02f8f20b076d4f7e4074aa9d5e322e89cc69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b97fe9835430553c0b566cf1f5687e6c7403821b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b97fe9835430553c0b566cf1f5687e6c7403821b", "html_url": "https://github.com/rust-lang/rust/commit/b97fe9835430553c0b566cf1f5687e6c7403821b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b97fe9835430553c0b566cf1f5687e6c7403821b/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c28af2625870b2117e73fc8bee83a1704cff7414", "url": "https://api.github.com/repos/rust-lang/rust/commits/c28af2625870b2117e73fc8bee83a1704cff7414", "html_url": "https://github.com/rust-lang/rust/commit/c28af2625870b2117e73fc8bee83a1704cff7414"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "c03b5e28adc7177219710c4a3008f9fcbf6a9c21", "filename": "src/libsyntax/ext/pipes/ast_builder.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b97fe9835430553c0b566cf1f5687e6c7403821b/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97fe9835430553c0b566cf1f5687e6c7403821b/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs?ref=b97fe9835430553c0b566cf1f5687e6c7403821b", "patch": "@@ -91,9 +91,22 @@ trait ext_ctxt_ast_builder {\n                     +params: ~[ast::ty_param]) -> @ast::item;\n     fn item_ty(name: ident, ty: @ast::ty) -> @ast::item;\n     fn ty_vars(+ty_params: ~[ast::ty_param]) -> ~[@ast::ty];\n+    fn ty_field_imm(name: ident, ty: @ast::ty) -> ast::ty_field;\n+    fn ty_rec(+~[ast::ty_field]) -> @ast::ty;\n }\n \n impl ast_builder of ext_ctxt_ast_builder for ext_ctxt {\n+    fn ty_field_imm(name: ident, ty: @ast::ty) -> ast::ty_field {\n+        {node: {ident: name, mt: { ty: ty, mutbl: ast::m_imm } },\n+          span: empty_span()}\n+    }\n+\n+    fn ty_rec(+fields: ~[ast::ty_field]) -> @ast::ty {\n+        @{id: self.next_id(),\n+          node: ast::ty_rec(fields),\n+          span: empty_span()}\n+    }\n+\n     fn ty_param(id: ast::ident, +bounds: ~[ast::ty_param_bound])\n         -> ast::ty_param\n     {"}, {"sha": "849c3a39efe4a92b46cd7838409578a547de8310", "filename": "src/libsyntax/ext/pipes/pipec.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b97fe9835430553c0b566cf1f5687e6c7403821b/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97fe9835430553c0b566cf1f5687e6c7403821b/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs?ref=b97fe9835430553c0b566cf1f5687e6c7403821b", "patch": "@@ -204,6 +204,7 @@ impl compile of to_type_decls for state {\n \n impl compile of gen_init for protocol {\n     fn gen_init(cx: ext_ctxt) -> @ast::item {\n+        #debug(\"gen_init\");\n         let start_state = self.states[0];\n \n         let body = alt start_state.dir {\n@@ -237,6 +238,23 @@ impl compile of gen_init for protocol {\n             server_states += s.to_endpoint_decls(cx, recv);\n         }\n \n+        if self.is_bounded() {\n+            vec::push(\n+                items,\n+                cx.item_ty(\n+                    @~\"buffer\",\n+                    cx.ty_rec(\n+                        (copy self.states).map_to_vec(\n+                            |s| cx.ty_field_imm(\n+                                s.name,\n+                                cx.ty_path_ast_builder(\n+                                    (path(@~\"pipes\")\n+                                     + @~\"packet\")\n+                                    .add_ty(\n+                                        cx.ty_path_ast_builder(\n+                                            path(s.name)))))))))\n+        }\n+\n         vec::push(items,\n                   cx.item_mod(@~\"client\",\n                               client_states));"}]}