{"sha": "5e97fc9aa265cb523a16cbe035c638eb35257cf5", "node_id": "C_kwDOAAsO6NoAKDVlOTdmYzlhYTI2NWNiNTIzYTE2Y2JlMDM1YzYzOGViMzUyNTdjZjU", "commit": {"author": {"name": "woppopo", "email": "woppopo@protonmail.com", "date": "2022-01-23T14:04:39Z"}, "committer": {"name": "woppopo", "email": "woppopo@protonmail.com", "date": "2022-01-23T14:04:39Z"}, "message": "Make `NonNull::new` `const`", "tree": {"sha": "fd388791ac7f8136f42e8870c9f195c987ddc385", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd388791ac7f8136f42e8870c9f195c987ddc385"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e97fc9aa265cb523a16cbe035c638eb35257cf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e97fc9aa265cb523a16cbe035c638eb35257cf5", "html_url": "https://github.com/rust-lang/rust/commit/5e97fc9aa265cb523a16cbe035c638eb35257cf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e97fc9aa265cb523a16cbe035c638eb35257cf5/comments", "author": {"login": "lilasta", "id": 77098789, "node_id": "MDQ6VXNlcjc3MDk4Nzg5", "avatar_url": "https://avatars.githubusercontent.com/u/77098789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilasta", "html_url": "https://github.com/lilasta", "followers_url": "https://api.github.com/users/lilasta/followers", "following_url": "https://api.github.com/users/lilasta/following{/other_user}", "gists_url": "https://api.github.com/users/lilasta/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilasta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilasta/subscriptions", "organizations_url": "https://api.github.com/users/lilasta/orgs", "repos_url": "https://api.github.com/users/lilasta/repos", "events_url": "https://api.github.com/users/lilasta/events{/privacy}", "received_events_url": "https://api.github.com/users/lilasta/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilasta", "id": 77098789, "node_id": "MDQ6VXNlcjc3MDk4Nzg5", "avatar_url": "https://avatars.githubusercontent.com/u/77098789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilasta", "html_url": "https://github.com/lilasta", "followers_url": "https://api.github.com/users/lilasta/followers", "following_url": "https://api.github.com/users/lilasta/following{/other_user}", "gists_url": "https://api.github.com/users/lilasta/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilasta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilasta/subscriptions", "organizations_url": "https://api.github.com/users/lilasta/orgs", "repos_url": "https://api.github.com/users/lilasta/repos", "events_url": "https://api.github.com/users/lilasta/events{/privacy}", "received_events_url": "https://api.github.com/users/lilasta/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16c1a9dd7cd497b050bc957cdfa54f8d3d6e97f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/16c1a9dd7cd497b050bc957cdfa54f8d3d6e97f2", "html_url": "https://github.com/rust-lang/rust/commit/16c1a9dd7cd497b050bc957cdfa54f8d3d6e97f2"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "3f5d3f62c96044b587868088eb7c5bad076a163e", "filename": "library/core/src/ptr/non_null.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5e97fc9aa265cb523a16cbe035c638eb35257cf5/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e97fc9aa265cb523a16cbe035c638eb35257cf5/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs?ref=5e97fc9aa265cb523a16cbe035c638eb35257cf5", "patch": "@@ -211,8 +211,9 @@ impl<T: ?Sized> NonNull<T> {\n     /// }\n     /// ```\n     #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n+    #[rustc_const_unstable(feature = \"const_nonnull_new\", issue = \"93235\")]\n     #[inline]\n-    pub fn new(ptr: *mut T) -> Option<Self> {\n+    pub const fn new(ptr: *mut T) -> Option<Self> {\n         if !ptr.is_null() {\n             // SAFETY: The pointer is already checked and is not null\n             Some(unsafe { Self::new_unchecked(ptr) })"}]}