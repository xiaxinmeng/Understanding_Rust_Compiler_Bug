{"sha": "1e7c15634d3b81b595d669382e45e6e136c730e1", "node_id": "C_kwDOAAsO6NoAKDFlN2MxNTYzNGQzYjgxYjU5NWQ2NjkzODJlNDVlNmUxMzZjNzMwZTE", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-04-26T20:20:40Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-04-27T12:56:59Z"}, "message": "Note the importance of using sync pipes", "tree": {"sha": "f1cc4af46fc1fd2389816083d591372d9ffb464a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1cc4af46fc1fd2389816083d591372d9ffb464a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e7c15634d3b81b595d669382e45e6e136c730e1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmJpPZwACgkQcTRy8vRW\nJ95hvQ//aB2HXniOIrq4UQKbW/iwZeV4H3WvvhbQcCflfq/5HXTmM982r37jwDQY\nS5XY7cqHGi2PSL0n/hbyzaH73QkgsRJ9gW1gjLLm3qnt0vbfiGx65qCne61R5btf\nVgp1YeFC2KrWqdYPO1Ojd+aTMGFwwLNTpsHkgBBFhpORXNASjESDp2L0serkZ+5r\nuguvQnUzFziSh8xf2gHMri8q6+un7gXsZG0ygkWwTU/UJKxX/sRvM3xBrh2G6q/Y\ng0UELM8V7O0QZ4pRuQrtF15AjslILGsGR58D8riGbXQoVs1VEkzMsvmBbqv1fP/0\ngiwD9x/tvWPr312Ji8xhXV9XONXxHfYPhFtUaofLliXv1pe5uAZJtAoV5fgRlitW\ni6svZEClrBrWG+RyrhAqUeG7SZwd8RUyMMFTL0K/+FkokQ+iE5rdw28FibbK5XAW\ncPEJaL9j/uCfzGMN9FvgW7srkTq+rjIHRtUR1T7irQbbxR2DKiuoHWvaRnO0Lfa7\nMY8SK72S2zyN2OToNMr+4dx4Tj4Ez0G1v6BLfckgL2LQeQWv5RcAQ3AIkO7CDQGx\noUNNvOoRTakfoNSK8L2XXXX+zyAWNDOvZTvr+ggGrH9kFT1cR9Z9X3q6fO7xVHz4\nvZrgWatISgoGCT2NahmT1NS/8tgc6dhmlCozPdD2Q1/ZHEiAqHY=\n=C0CS\n-----END PGP SIGNATURE-----", "payload": "tree f1cc4af46fc1fd2389816083d591372d9ffb464a\nparent 949b978ec9d63b0eea23d89bad16c6f022ac34a3\nauthor Chris Denton <christophersdenton@gmail.com> 1651004440 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1651064219 +0100\n\nNote the importance of using sync pipes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e7c15634d3b81b595d669382e45e6e136c730e1", "html_url": "https://github.com/rust-lang/rust/commit/1e7c15634d3b81b595d669382e45e6e136c730e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e7c15634d3b81b595d669382e45e6e136c730e1/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "949b978ec9d63b0eea23d89bad16c6f022ac34a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/949b978ec9d63b0eea23d89bad16c6f022ac34a3", "html_url": "https://github.com/rust-lang/rust/commit/949b978ec9d63b0eea23d89bad16c6f022ac34a3"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "cc29d1a72fbf416cbed51c007e396b7002f55813", "filename": "library/std/src/sys/windows/process.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1e7c15634d3b81b595d669382e45e6e136c730e1/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e7c15634d3b81b595d669382e45e6e136c730e1/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs?ref=1e7c15634d3b81b595d669382e45e6e136c730e1", "patch": "@@ -527,10 +527,25 @@ impl Stdio {\n             },\n \n             Stdio::MakePipe => {\n-                // If stdin then make synchronous\n+                // Handles that are passed to a child process must be synchronous\n+                // because they will be read synchronously (see #95759).\n+                // Therefore we prefer to make both ends of a pipe synchronous\n+                // just in case our end of the pipe is passed to another process.\n+                //\n+                // However, we may need to read from both the child's stdout and\n+                // stderr simultaneously when waiting for output. This requires\n+                // async reads so as to avoid blocking either pipe.\n+                //\n+                // The solution used here is to make handles synchronous\n+                // except for our side of the stdout and sterr pipes.\n+                // If our side of those pipes do end up being given to another\n+                // process then we use a \"pipe relay\" to synchronize access\n+                // (see `Stdio::AsyncPipe` below).\n                 let pipes = if stdio_id == c::STD_INPUT_HANDLE {\n+                    // For stdin both sides of the pipe are synchronous.\n                     Pipes::new_synchronous(false, true)?\n                 } else {\n+                    // For stdout/stderr our side of the pipe is async and their side is synchronous.\n                     pipe::anon_pipe(true, true)?\n                 };\n                 *pipe = Some(pipes.ours);\n@@ -567,6 +582,9 @@ impl Stdio {\n \n impl From<AnonPipe> for Stdio {\n     fn from(pipe: AnonPipe) -> Stdio {\n+        // Note that it's very important we don't give async handles to child processes.\n+        // Therefore if the pipe is asynchronous we must have a way to turn it synchronous.\n+        // See #95759.\n         match pipe {\n             AnonPipe::Sync(handle) => Stdio::Handle(handle),\n             AnonPipe::Async(handle) => Stdio::AsyncPipe(handle),"}]}