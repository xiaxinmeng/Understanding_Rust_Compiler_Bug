{"sha": "76d9b309aeee9615f3049e7bf95083bdee4ebe01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZDliMzA5YWVlZTk2MTVmMzA0OWU3YmY5NTA4M2JkZWU0ZWJlMDE=", "commit": {"author": {"name": "Tommy Ip", "email": "hkmp7tommy@gmail.com", "date": "2017-12-10T19:14:01Z"}, "committer": {"name": "Tommy Ip", "email": "hkmp7tommy@gmail.com", "date": "2017-12-10T21:14:57Z"}, "message": "Add must-compile-successfully comment to appropriate ui tests.", "tree": {"sha": "052c863f5d19582245b30dcc55f35ded0a02d11e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/052c863f5d19582245b30dcc55f35ded0a02d11e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76d9b309aeee9615f3049e7bf95083bdee4ebe01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76d9b309aeee9615f3049e7bf95083bdee4ebe01", "html_url": "https://github.com/rust-lang/rust/commit/76d9b309aeee9615f3049e7bf95083bdee4ebe01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76d9b309aeee9615f3049e7bf95083bdee4ebe01/comments", "author": {"login": "tommyip", "id": 18504232, "node_id": "MDQ6VXNlcjE4NTA0MjMy", "avatar_url": "https://avatars.githubusercontent.com/u/18504232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyip", "html_url": "https://github.com/tommyip", "followers_url": "https://api.github.com/users/tommyip/followers", "following_url": "https://api.github.com/users/tommyip/following{/other_user}", "gists_url": "https://api.github.com/users/tommyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyip/subscriptions", "organizations_url": "https://api.github.com/users/tommyip/orgs", "repos_url": "https://api.github.com/users/tommyip/repos", "events_url": "https://api.github.com/users/tommyip/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyip/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tommyip", "id": 18504232, "node_id": "MDQ6VXNlcjE4NTA0MjMy", "avatar_url": "https://avatars.githubusercontent.com/u/18504232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyip", "html_url": "https://github.com/tommyip", "followers_url": "https://api.github.com/users/tommyip/followers", "following_url": "https://api.github.com/users/tommyip/following{/other_user}", "gists_url": "https://api.github.com/users/tommyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyip/subscriptions", "organizations_url": "https://api.github.com/users/tommyip/orgs", "repos_url": "https://api.github.com/users/tommyip/repos", "events_url": "https://api.github.com/users/tommyip/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyip/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81b8db218006daaee11bb2c61aa7e3d7386b9fa9", "url": "https://api.github.com/repos/rust-lang/rust/commits/81b8db218006daaee11bb2c61aa7e3d7386b9fa9", "html_url": "https://github.com/rust-lang/rust/commit/81b8db218006daaee11bb2c61aa7e3d7386b9fa9"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "12ccba0ebf2f9a745e2e22e59ddf988282c735b0", "filename": "src/test/ui/check_match/issue-43253.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n #![feature(exclusive_range_pattern)]\n #![warn(unreachable_patterns)]\n "}, {"sha": "81c3b5dde6d7611b322a8b0b67939d9bf42d3220", "filename": "src/test/ui/codemap_tests/unicode_3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n fn main() {\n     let s = \"Z\u0368A\u0351\u0366\u0352\u034b\u0364\u0351\u031aL\u0304\u0351\u034bG\u0302\u0368\u0365\u033f\u0352\u033d\u0344O\u0365\u035b\u036d!\u030f\"; while true { break; }\n     println!(\"{}\", s);"}, {"sha": "6305fbcffce4e849d6cab6637255c2289f11ee24", "filename": "src/test/ui/explain.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fexplain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fexplain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplain.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,3 +9,4 @@\n // except according to those terms.\n \n // compile-flags: --explain E0591\n+// must-compile-successfully"}, {"sha": "4c53d19f719bf627381c428cddcb90860553c65a", "filename": "src/test/ui/hello_world/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fhello_world%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fhello_world%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhello_world%2Fmain.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n // Test that compiling hello world succeeds with no output of any kind.\n \n fn main() {"}, {"sha": "c1840f3d44c13c0e0e6ccea8aba002352564ae84", "filename": "src/test/ui/lint/command-line-lint-group-allow.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-allow.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -A bad-style\n+// must-compile-successfully\n \n fn main() {\n     let _InappropriateCamelCasing = true;"}, {"sha": "048c15b1230457cca022bf9922aa9071660ba3f2", "filename": "src/test/ui/lint/command-line-lint-group-warn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-warn.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -W bad-style\n+// must-compile-successfully\n \n fn main() {\n     let _InappropriateCamelCasing = true;"}, {"sha": "3de2cc0bfae0402ca3c6b82c1e10eb87c2557a2e", "filename": "src/test/ui/lint/not_found.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Fnot_found.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Fnot_found.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fnot_found.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n // this tests the `unknown_lint` lint, especially the suggestions\n \n // the suggestion only appears if a lint with the lowercase name exists"}, {"sha": "4192b7dceef20c504509d5225ff4a3840e5610ec", "filename": "src/test/ui/lint/unreachable_pub-pub_crate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -14,6 +14,8 @@\n // suggestions to use `crate` given when it is on). When that feature becomes\n // stable, this test can be deleted.\n \n+// must-compile-successfully\n+\n #![feature(macro_vis_matcher)]\n \n #![allow(unused)]"}, {"sha": "393bccf03a73a48e266bf44032389a0706636db0", "filename": "src/test/ui/lint/unreachable_pub.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Funreachable_pub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Funreachable_pub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n #![feature(crate_visibility_modifier)]\n #![feature(macro_vis_matcher)]\n "}, {"sha": "fdcd45c8314dbe81071474a3c9f9a2c596812a3e", "filename": "src/test/ui/lint/unused_parens_json_suggestion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: --error-format pretty-json -Zunstable-options\n+// must-compile-successfully\n \n // The output for humans should just highlight the whole span without showing\n // the suggested replacement, but we also want to test that suggested"}, {"sha": "7e6da840900bc7fcc76bb3590e9650181faa360d", "filename": "src/test/ui/macros/trace-macro.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z trace-macros\n+// must-compile-successfully\n \n fn main() {\n     println!(\"Hello, World!\");"}, {"sha": "006bdaf4c6072874dc808a8960f142d6979b5743", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -28,6 +28,7 @@\n // requirement, as you can see from the `#[rustc_regions]` output.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n+// must-compile-successfully\n \n #![feature(rustc_attrs)]\n "}, {"sha": "5bd170cc30468b55c44c72dc39fabee422d4108c", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -17,6 +17,7 @@\n // these errors are not (yet) reported.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n+// must-compile-successfully\n \n #![feature(rustc_attrs)]\n "}, {"sha": "f4fdd4a8c17a99cdb8d37d6e5a08f6154ae2b0c2", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -18,6 +18,7 @@\n // these errors are not (yet) reported.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n+// must-compile-successfully\n \n #![feature(rustc_attrs)]\n "}, {"sha": "97a15a36fdd1d85744c6d7b249ebb95cf3491982", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -16,6 +16,7 @@\n // anonymous regions as well.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n+// must-compile-successfully\n \n #![feature(rustc_attrs)]\n "}, {"sha": "ba4c287592eb48fd7b4273c58ba23e9503f027c3", "filename": "src/test/ui/nll/closure-requirements/propagate-despite-same-free-region.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -14,6 +14,7 @@\n // regions is erased.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n+// must-compile-successfully\n \n #![feature(rustc_attrs)]\n "}, {"sha": "92b29a98c1c49f6863251ce6910ddd9647b4d8c8", "filename": "src/test/ui/nll/maybe-initialized-drop-uninitialized.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n //compile-flags: -Z emit-end-regions -Zborrowck=mir -Z nll\n+// must-compile-successfully\n \n #![allow(warnings)]\n "}, {"sha": "2012a7d02eeb38eada5323a2209b6878b364cf31", "filename": "src/test/ui/print-fuel/print-fuel.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -12,6 +12,7 @@\n #![allow(dead_code)]\n \n // compile-flags: -Z print-fuel=foo\n+// must-compile-successfully\n \n struct S1(u8, u16, u8);\n struct S2(u8, u16, u8);"}, {"sha": "cf0bedee2ab3ea7b32a9463135294293ea44aae7", "filename": "src/test/ui/print_type_sizes/anonymous.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fanonymous.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fanonymous.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fanonymous.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n // All of the types that occur in this function are uninteresting, in\n // that one cannot control the sizes of these types with the same sort"}, {"sha": "7bc4822359e2a8182e6715999cdd2effbf41b238", "filename": "src/test/ui/print_type_sizes/generics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fgenerics.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n // This file illustrates how generics are handled: types have to be\n // monomorphized, in the MIR of the original function in which they"}, {"sha": "a9f294490159d842b465ae0b242977efa14877b1", "filename": "src/test/ui/print_type_sizes/multiple_types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fmultiple_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fmultiple_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fmultiple_types.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n // This file illustrates that when multiple structural types occur in\n // a function, every one of them is included in the output."}, {"sha": "08b58704022ec299e44d321d71bc3551c72657a3", "filename": "src/test/ui/print_type_sizes/niche-filling.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n // This file illustrates how niche-filling enums are handled,\n // modelled after cases like `Option<&u32>`, `Option<bool>` and such."}, {"sha": "40c41aae9109d9238d5097154d36e652eea6ede6", "filename": "src/test/ui/print_type_sizes/no_duplicates.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fno_duplicates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fno_duplicates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fno_duplicates.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n // This file illustrates that when the same type occurs repeatedly\n // (even if multiple functions), it is only printed once in the"}, {"sha": "1ee6395ac6cba711849fab6b31b3244f0487a715", "filename": "src/test/ui/print_type_sizes/packed.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpacked.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n // This file illustrates how packing is handled; it should cause\n // the elimination of padding that would normally be introduced"}, {"sha": "b3cd21323430546410007e6fb8828753fa0d4213", "filename": "src/test/ui/print_type_sizes/padding.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpadding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpadding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpadding.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n // This file illustrates how padding is handled: alignment\n // requirements can lead to the introduction of padding, either before"}, {"sha": "1bf76da811552873edff540667e1d548c5a47a84", "filename": "src/test/ui/print_type_sizes/repr-align.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Frepr-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Frepr-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Frepr-align.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n // This file illustrates how padding is handled: alignment\n // requirements can lead to the introduction of padding, either before"}, {"sha": "fae6cd4009c309d8c226d6d63b84f6f29fa0fc93", "filename": "src/test/ui/print_type_sizes/uninhabited.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Funinhabited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Funinhabited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Funinhabited.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n #![feature(never_type)]\n "}, {"sha": "2725bb09b4bc0c89ad2b6e008529b75fc4d0e634", "filename": "src/test/ui/print_type_sizes/variants.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fvariants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fprint_type_sizes%2Fvariants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fvariants.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n+// must-compile-successfully\n \n // This file illustrates two things:\n //"}, {"sha": "7d74daaa6ee2046e461735292d8d2b84b8eefaf7", "filename": "src/test/ui/reachable/expr_andand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Freachable%2Fexpr_andand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Freachable%2Fexpr_andand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_andand.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n #![allow(unused_variables)]\n #![allow(dead_code)]\n #![deny(unreachable_code)]"}, {"sha": "ab0b71f078186ac1cab1ac98fbdbb8ee86cb0cb7", "filename": "src/test/ui/reachable/expr_oror.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Freachable%2Fexpr_oror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Freachable%2Fexpr_oror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_oror.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n #![allow(unused_variables)]\n #![allow(dead_code)]\n #![deny(unreachable_code)]"}, {"sha": "eb4753122f35c8d2637cf38acbe2cd228bfa6f85", "filename": "src/test/ui/rfc_1940-must_use_on_functions/fn_must_use.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Frfc_1940-must_use_on_functions%2Ffn_must_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Frfc_1940-must_use_on_functions%2Ffn_must_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc_1940-must_use_on_functions%2Ffn_must_use.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n #![feature(fn_must_use)]\n #![warn(unused_must_use)]\n "}, {"sha": "0baa4fb4fe2cdb051de72f5df14519259a7a18ce", "filename": "src/test/ui/span/macro-span-replacement.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n #![warn(unused)]\n \n macro_rules! m {"}, {"sha": "5fb0ff7fb708a285f075435a29e16ed446ab5239", "filename": "src/test/ui/span/multispan-import-lint.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d9b309aeee9615f3049e7bf95083bdee4ebe01/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.rs?ref=76d9b309aeee9615f3049e7bf95083bdee4ebe01", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// must-compile-successfully\n+\n #![warn(unused)]\n \n use std::cmp::{Eq, Ord, min, PartialEq, PartialOrd};"}]}