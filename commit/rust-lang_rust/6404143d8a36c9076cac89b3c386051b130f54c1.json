{"sha": "6404143d8a36c9076cac89b3c386051b130f54c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MDQxNDNkOGEzNmM5MDc2Y2FjODliM2MzODYwNTFiMTMwZjU0YzE=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2016-12-08T02:05:20Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2016-12-08T02:05:20Z"}, "message": "Preserve inherited mode flags.", "tree": {"sha": "e3d0ac020d3cdb24f38636bc78d438fcf850476d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3d0ac020d3cdb24f38636bc78d438fcf850476d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6404143d8a36c9076cac89b3c386051b130f54c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6404143d8a36c9076cac89b3c386051b130f54c1", "html_url": "https://github.com/rust-lang/rust/commit/6404143d8a36c9076cac89b3c386051b130f54c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6404143d8a36c9076cac89b3c386051b130f54c1/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc161225bd4ddf271a8c4fbc8bbe6ea3e7729f00", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc161225bd4ddf271a8c4fbc8bbe6ea3e7729f00", "html_url": "https://github.com/rust-lang/rust/commit/cc161225bd4ddf271a8c4fbc8bbe6ea3e7729f00"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "c3859275e6fb4d3b9eb86c1ba860f3a4aad45e54", "filename": "src/bootstrap/job.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6404143d8a36c9076cac89b3c386051b130f54c1/src%2Fbootstrap%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6404143d8a36c9076cac89b3c386051b130f54c1/src%2Fbootstrap%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fjob.rs?ref=6404143d8a36c9076cac89b3c386051b130f54c1", "patch": "@@ -123,7 +123,8 @@ pub unsafe fn setup() {\n     // during startup or terminating abnormally).  This is important for running tests,\n     // since some of them use abnormal termination by design.\n     // This mode is inherited by all child processes.\n-    SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX);\n+    let mode = SetErrorMode(SEM_NOGPFAULTERRORBOX); // read inherited flags\n+    SetErrorMode(mode | SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX);\n \n     // Create a new job object for us to use\n     let job = CreateJobObjectW(0 as *mut _, 0 as *const _);"}]}