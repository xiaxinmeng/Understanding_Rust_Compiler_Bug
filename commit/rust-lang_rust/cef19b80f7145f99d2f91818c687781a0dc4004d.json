{"sha": "cef19b80f7145f99d2f91818c687781a0dc4004d", "node_id": "C_kwDOAAsO6NoAKGNlZjE5YjgwZjcxNDVmOTlkMmY5MTgxOGM2ODc3ODFhMGRjNDAwNGQ", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2022-09-25T23:33:08Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2022-11-05T22:56:38Z"}, "message": "Split non-fixable case to different test", "tree": {"sha": "f6d184692fd957a175e99d2480b0f211cf4e0ef7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6d184692fd957a175e99d2480b0f211cf4e0ef7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cef19b80f7145f99d2f91818c687781a0dc4004d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cef19b80f7145f99d2f91818c687781a0dc4004d", "html_url": "https://github.com/rust-lang/rust/commit/cef19b80f7145f99d2f91818c687781a0dc4004d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cef19b80f7145f99d2f91818c687781a0dc4004d/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da588e6df7afb80e210e62dea7e43c5687f088a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/da588e6df7afb80e210e62dea7e43c5687f088a5", "html_url": "https://github.com/rust-lang/rust/commit/da588e6df7afb80e210e62dea7e43c5687f088a5"}], "stats": {"total": 49, "additions": 38, "deletions": 11}, "files": [{"sha": "a39b8711dd8745dd55309ab81c14ae6390182ed3", "filename": "src/test/ui/suggestions/suggest-assoc-fn-call-with-turbofish-placeholder.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish-placeholder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish-placeholder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish-placeholder.rs?ref=cef19b80f7145f99d2f91818c687781a0dc4004d", "patch": "@@ -0,0 +1,11 @@\n+struct GenericAssocMethod<T>(T);\n+\n+impl<T> GenericAssocMethod<T> {\n+    fn default_hello() {}\n+}\n+\n+fn main() {\n+    let x = GenericAssocMethod(33);\n+    x.default_hello();\n+    //~^ ERROR no method named `default_hello` found\n+}"}, {"sha": "c247e73b39cb6a781396ba5e5f29b2278ceff20e", "filename": "src/test/ui/suggestions/suggest-assoc-fn-call-with-turbofish-placeholder.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish-placeholder.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish-placeholder.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish-placeholder.stderr?ref=cef19b80f7145f99d2f91818c687781a0dc4004d", "patch": "@@ -0,0 +1,22 @@\n+error[E0599]: no method named `default_hello` found for struct `GenericAssocMethod<{integer}>` in the current scope\n+  --> $DIR/suggest-assoc-fn-call-with-turbofish-placeholder.rs:9:7\n+   |\n+LL | struct GenericAssocMethod<T>(T);\n+   | ---------------------------- method `default_hello` not found for this struct\n+...\n+LL |     x.default_hello();\n+   |     --^^^^^^^^^^^^^--\n+   |     | |\n+   |     | this is an associated function, not a method\n+   |     help: use associated function syntax instead: `GenericAssocMethod::<_>::default_hello()`\n+   |\n+   = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\n+note: the candidate is defined in an impl for the type `GenericAssocMethod<T>`\n+  --> $DIR/suggest-assoc-fn-call-with-turbofish-placeholder.rs:4:5\n+   |\n+LL |     fn default_hello() {}\n+   |     ^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}, {"sha": "02dd0715c8011dade2fa2bfe73e58b9d7d9bb48d", "filename": "src/test/ui/suggestions/suggest-assoc-fn-call-with-turbofish.fixed", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.fixed?ref=cef19b80f7145f99d2f91818c687781a0dc4004d", "patch": "@@ -11,9 +11,6 @@ impl<T> GenericAssocMethod<T> {\n fn main() {\n     // Test for inferred types\n     let x = GenericAssocMethod(33);\n-    // This particular case is unfixable without more information by the user,\n-    // but `cargo fix --broken-code` reports a bug if\n-    // x.default_hello();\n     GenericAssocMethod::<_>::self_ty_ref_hello(&x);\n     //~^ ERROR no method named `self_ty_ref_hello` found\n     GenericAssocMethod::<_>::self_ty_hello(x);"}, {"sha": "1d0ca8e780abf85a88dab2bab833a6d763baa835", "filename": "src/test/ui/suggestions/suggest-assoc-fn-call-with-turbofish.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.rs?ref=cef19b80f7145f99d2f91818c687781a0dc4004d", "patch": "@@ -11,9 +11,6 @@ impl<T> GenericAssocMethod<T> {\n fn main() {\n     // Test for inferred types\n     let x = GenericAssocMethod(33);\n-    // This particular case is unfixable without more information by the user,\n-    // but `cargo fix --broken-code` reports a bug if\n-    // x.default_hello();\n     x.self_ty_ref_hello();\n     //~^ ERROR no method named `self_ty_ref_hello` found\n     x.self_ty_hello();"}, {"sha": "92b03fc77142c3f4bf7f6a260fa69bbe1babd4b1", "filename": "src/test/ui/suggestions/suggest-assoc-fn-call-with-turbofish.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cef19b80f7145f99d2f91818c687781a0dc4004d/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-assoc-fn-call-with-turbofish.stderr?ref=cef19b80f7145f99d2f91818c687781a0dc4004d", "patch": "@@ -1,5 +1,5 @@\n error[E0599]: no method named `self_ty_ref_hello` found for struct `GenericAssocMethod<{integer}>` in the current scope\n-  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:17:7\n+  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:14:7\n    |\n LL | struct GenericAssocMethod<T>(T);\n    | ---------------------------- method `self_ty_ref_hello` not found for this struct\n@@ -18,7 +18,7 @@ LL |     fn self_ty_ref_hello(_: &Self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0599]: no method named `self_ty_hello` found for struct `GenericAssocMethod<{integer}>` in the current scope\n-  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:19:7\n+  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:16:7\n    |\n LL | struct GenericAssocMethod<T>(T);\n    | ---------------------------- method `self_ty_hello` not found for this struct\n@@ -37,7 +37,7 @@ LL |     fn self_ty_hello(_: Self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0599]: no method named `default_hello` found for struct `GenericAssocMethod<i32>` in the current scope\n-  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:23:7\n+  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:20:7\n    |\n LL | struct GenericAssocMethod<T>(T);\n    | ---------------------------- method `default_hello` not found for this struct\n@@ -56,7 +56,7 @@ LL |     fn default_hello() {}\n    |     ^^^^^^^^^^^^^^^^^^\n \n error[E0599]: no method named `self_ty_ref_hello` found for struct `GenericAssocMethod<i32>` in the current scope\n-  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:25:7\n+  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:22:7\n    |\n LL | struct GenericAssocMethod<T>(T);\n    | ---------------------------- method `self_ty_ref_hello` not found for this struct\n@@ -75,7 +75,7 @@ LL |     fn self_ty_ref_hello(_: &Self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0599]: no method named `self_ty_hello` found for struct `GenericAssocMethod<i32>` in the current scope\n-  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:27:7\n+  --> $DIR/suggest-assoc-fn-call-with-turbofish.rs:24:7\n    |\n LL | struct GenericAssocMethod<T>(T);\n    | ---------------------------- method `self_ty_hello` not found for this struct"}]}