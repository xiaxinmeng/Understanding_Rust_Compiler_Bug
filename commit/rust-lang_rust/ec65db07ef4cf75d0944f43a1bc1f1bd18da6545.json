{"sha": "ec65db07ef4cf75d0944f43a1bc1f1bd18da6545", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNjVkYjA3ZWY0Y2Y3NWQwOTQ0ZjQzYTFiYzFmMWJkMThkYTY1NDU=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-03T19:39:12Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-20T03:08:39Z"}, "message": "Remove explicit lifetime", "tree": {"sha": "981ef1e9258f4982927edf1de4c72ffbfb0d9c95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/981ef1e9258f4982927edf1de4c72ffbfb0d9c95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec65db07ef4cf75d0944f43a1bc1f1bd18da6545", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec65db07ef4cf75d0944f43a1bc1f1bd18da6545", "html_url": "https://github.com/rust-lang/rust/commit/ec65db07ef4cf75d0944f43a1bc1f1bd18da6545", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec65db07ef4cf75d0944f43a1bc1f1bd18da6545/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17953185f8626df519e28632cdd14425b4c237c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/17953185f8626df519e28632cdd14425b4c237c2", "html_url": "https://github.com/rust-lang/rust/commit/17953185f8626df519e28632cdd14425b4c237c2"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "bebdd68cb0566854722faf745bcdf94dea128ff0", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ec65db07ef4cf75d0944f43a1bc1f1bd18da6545/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec65db07ef4cf75d0944f43a1bc1f1bd18da6545/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=ec65db07ef4cf75d0944f43a1bc1f1bd18da6545", "patch": "@@ -1702,10 +1702,10 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n     /// An Err result includes a tag indicated why the search failed.\n     /// Currently this can only occur if the place is built off of a\n     /// static variable, as we do not track those in the MoveData.\n-    fn move_path_closest_to<'a>(\n+    fn move_path_closest_to(\n         &mut self,\n-        place: &'a Place<'tcx>,\n-    ) -> Result<(Place<'tcx>, MovePathIndex), NoMovePathFound> where 'cx: 'a {\n+        place: &Place<'tcx>,\n+    ) -> Result<(Place<'tcx>, MovePathIndex), NoMovePathFound> {\n         let mut last_prefix = &place.base;\n \n         for prefix in self.prefixes(&place.base, &place.projection, PrefixSet::All) {"}]}