{"sha": "ade9605a0843268ec7af416c0aa5b5a510541c7a", "node_id": "C_kwDOAAsO6NoAKGFkZTk2MDVhMDg0MzI2OGVjN2FmNDE2YzBhYTViNWE1MTA1NDFjN2E", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2022-12-28T07:51:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-28T07:51:40Z"}, "message": "Rollup merge of #105347 - estebank:single-line-match, r=compiler-errors\n\nAccount for `match` expr in single line\n\nWhen encountering `match Some(42) { Some(x) => x, None => \"\" };`, output\n\n```\nerror[E0308]: `match` arms have incompatible types\n --> f53.rs:2:52\n  |\n2 |     let _ = match Some(42) { Some(x) => x, None => \"\" };\n  |             --------------              -          ^^ expected integer, found `&str`\n  |             |                           |\n  |             |                           this is found to be of type `{integer}`\n  |             `match` arms have incompatible types\n  ```", "tree": {"sha": "faa00c4f764f72e7d69fb8d1b2d04afa99dfc445", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faa00c4f764f72e7d69fb8d1b2d04afa99dfc445"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ade9605a0843268ec7af416c0aa5b5a510541c7a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjq/WMCRBK7hj4Ov3rIwAAtiwIAAg5De2MH5jocQFBMxZruB1G\nRyGPTS3jcPAJVvsmh0R9MqhVM1oCpfbshZZjPQfMOL4QN7z15pr7+3bo9VWZ+fh8\nxxKha9TrqIXoOFdZI9yYKm3GgqjLi36SuriYSGuNh5rZhZAD3otBSP84Lkgfg5RW\nX8xUfJ1t2Ile/aEGe/4iWEkFeS/qItdUjwjAboWSUrZZw2O5OmR4Ut8VRFloHQ/T\nPg0H8MC9trtXIuejaD8OkJ2YUmIYxW0aXwZOEuYWQgmQQnaOzsdFB/5v2XGsW+7z\nCPs9FDKtRq46kdex923M53FXKFvUQNjsYNBdDYUKt2wh/0u9SvQbDr5Rt68QECw=\n=eTM9\n-----END PGP SIGNATURE-----\n", "payload": "tree faa00c4f764f72e7d69fb8d1b2d04afa99dfc445\nparent 0818ba43a42ef455baf0b806e1bd21f41d64d27d\nparent 05e8ba126c7e4918315a35142d73f4e57fb2bb6b\nauthor fee1-dead <ent3rm4n@gmail.com> 1672213900 +0800\ncommitter GitHub <noreply@github.com> 1672213900 +0800\n\nRollup merge of #105347 - estebank:single-line-match, r=compiler-errors\n\nAccount for `match` expr in single line\n\nWhen encountering `match Some(42) { Some(x) => x, None => \"\" };`, output\n\n```\nerror[E0308]: `match` arms have incompatible types\n --> f53.rs:2:52\n  |\n2 |     let _ = match Some(42) { Some(x) => x, None => \"\" };\n  |             --------------              -          ^^ expected integer, found `&str`\n  |             |                           |\n  |             |                           this is found to be of type `{integer}`\n  |             `match` arms have incompatible types\n  ```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ade9605a0843268ec7af416c0aa5b5a510541c7a", "html_url": "https://github.com/rust-lang/rust/commit/ade9605a0843268ec7af416c0aa5b5a510541c7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ade9605a0843268ec7af416c0aa5b5a510541c7a/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0818ba43a42ef455baf0b806e1bd21f41d64d27d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0818ba43a42ef455baf0b806e1bd21f41d64d27d", "html_url": "https://github.com/rust-lang/rust/commit/0818ba43a42ef455baf0b806e1bd21f41d64d27d"}, {"sha": "05e8ba126c7e4918315a35142d73f4e57fb2bb6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/05e8ba126c7e4918315a35142d73f4e57fb2bb6b", "html_url": "https://github.com/rust-lang/rust/commit/05e8ba126c7e4918315a35142d73f4e57fb2bb6b"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "e5823660e3fbd27f3cc769567dcf0822f3fa7ca8", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ade9605a0843268ec7af416c0aa5b5a510541c7a/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ade9605a0843268ec7af416c0aa5b5a510541c7a/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=ade9605a0843268ec7af416c0aa5b5a510541c7a", "patch": "@@ -729,15 +729,15 @@ impl<'tcx> TypeErrCtxt<'_, 'tcx> {\n                             format!(\"this and all prior arms are found to be of type `{}`\", t),\n                         );\n                     }\n-                    let outer_error_span = if any_multiline_arm {\n+                    let outer = if any_multiline_arm || !source_map.is_multiline(cause.span) {\n                         // Cover just `match` and the scrutinee expression, not\n                         // the entire match body, to reduce diagram noise.\n                         cause.span.shrink_to_lo().to(scrut_span)\n                     } else {\n                         cause.span\n                     };\n                     let msg = \"`match` arms have incompatible types\";\n-                    err.span_label(outer_error_span, msg);\n+                    err.span_label(outer, msg);\n                     self.suggest_remove_semi_or_return_binding(\n                         err,\n                         prior_arm_block_id,"}, {"sha": "0f69d089f9a89a558659f2dda7f7a3040da0be14", "filename": "src/test/ui/match/single-line.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ade9605a0843268ec7af416c0aa5b5a510541c7a/src%2Ftest%2Fui%2Fmatch%2Fsingle-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ade9605a0843268ec7af416c0aa5b5a510541c7a/src%2Ftest%2Fui%2Fmatch%2Fsingle-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fsingle-line.rs?ref=ade9605a0843268ec7af416c0aa5b5a510541c7a", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    let _ = match Some(42) { Some(x) => x, None => \"\" }; //~ ERROR E0308\n+}"}, {"sha": "ec3b76e3f4d5eb4f9d2cb3762bc88150c0db974c", "filename": "src/test/ui/match/single-line.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ade9605a0843268ec7af416c0aa5b5a510541c7a/src%2Ftest%2Fui%2Fmatch%2Fsingle-line.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ade9605a0843268ec7af416c0aa5b5a510541c7a/src%2Ftest%2Fui%2Fmatch%2Fsingle-line.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fsingle-line.stderr?ref=ade9605a0843268ec7af416c0aa5b5a510541c7a", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: `match` arms have incompatible types\n+  --> $DIR/single-line.rs:2:52\n+   |\n+LL |     let _ = match Some(42) { Some(x) => x, None => \"\" };\n+   |             --------------              -          ^^ expected integer, found `&str`\n+   |             |                           |\n+   |             |                           this is found to be of type `{integer}`\n+   |             `match` arms have incompatible types\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}