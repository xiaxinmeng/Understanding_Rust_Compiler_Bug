{"sha": "24d09c7c1b454dae43adc39827311d741dcbf896", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ZDA5YzdjMWI0NTRkYWU0M2FkYzM5ODI3MzExZDc0MWRjYmY4OTY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-01-05T22:08:02Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-01-07T17:07:36Z"}, "message": "Move free_region_map to rustc::ty.", "tree": {"sha": "6c85a9b70a7f191c14205a8a1bc502d064f45fcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c85a9b70a7f191c14205a8a1bc502d064f45fcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24d09c7c1b454dae43adc39827311d741dcbf896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24d09c7c1b454dae43adc39827311d741dcbf896", "html_url": "https://github.com/rust-lang/rust/commit/24d09c7c1b454dae43adc39827311d741dcbf896", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24d09c7c1b454dae43adc39827311d741dcbf896/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e905d5da93cfdbd49c4dc9c89a1537da726a8d35", "url": "https://api.github.com/repos/rust-lang/rust/commits/e905d5da93cfdbd49c4dc9c89a1537da726a8d35", "html_url": "https://github.com/rust-lang/rust/commit/e905d5da93cfdbd49c4dc9c89a1537da726a8d35"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "10d5fdf30e3ecf06753b451f112e0d476148f810", "filename": "src/librustc/infer/opaque_types/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs?ref=24d09c7c1b454dae43adc39827311d741dcbf896", "patch": "@@ -1,9 +1,9 @@\n use crate::infer::error_reporting::{note_and_explain_free_region, note_and_explain_region};\n-use crate::infer::outlives::free_region_map::FreeRegionRelations;\n use crate::infer::{self, InferCtxt, InferOk, TypeVariableOrigin, TypeVariableOriginKind};\n use crate::middle::region;\n use crate::traits::{self, PredicateObligation};\n use crate::ty::fold::{BottomUpFolder, TypeFoldable, TypeFolder, TypeVisitor};\n+use crate::ty::free_region_map::FreeRegionRelations;\n use crate::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n use crate::ty::{self, GenericParamDefKind, Ty, TyCtxt};\n use errors::DiagnosticBuilder;"}, {"sha": "ee2e629c2fcd269bf053bf8d0bd48c47b91a4ddc", "filename": "src/librustc/infer/outlives/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Finfer%2Foutlives%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Finfer%2Foutlives%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Foutlives%2Fenv.rs?ref=24d09c7c1b454dae43adc39827311d741dcbf896", "patch": "@@ -1,6 +1,6 @@\n-use crate::infer::outlives::free_region_map::FreeRegionMap;\n use crate::infer::{GenericKind, InferCtxt};\n use crate::traits::query::outlives_bounds::{self, OutlivesBound};\n+use crate::ty::free_region_map::FreeRegionMap;\n use crate::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;"}, {"sha": "6fc72470c9fb7816a822e689ee5f57557fec7451", "filename": "src/librustc/infer/outlives/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Finfer%2Foutlives%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Finfer%2Foutlives%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Foutlives%2Fmod.rs?ref=24d09c7c1b454dae43adc39827311d741dcbf896", "patch": "@@ -1,6 +1,5 @@\n //! Various code related to computing outlives relations.\n \n pub mod env;\n-pub mod free_region_map;\n pub mod obligations;\n pub mod verify;"}, {"sha": "355f949b8700860fdf005758da74bf50f03c7fb8", "filename": "src/librustc/middle/free_region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Fmiddle%2Ffree_region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Fmiddle%2Ffree_region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffree_region.rs?ref=24d09c7c1b454dae43adc39827311d741dcbf896", "patch": "@@ -3,8 +3,8 @@\n //! or explicit bounds. In that case, we track the bounds using the `TransitiveRelation` type,\n //! and use that to decide when one free region outlives another, and so forth.\n \n-use crate::infer::outlives::free_region_map::{FreeRegionMap, FreeRegionRelations};\n use crate::middle::region;\n+use crate::ty::free_region_map::{FreeRegionMap, FreeRegionRelations};\n use crate::ty::{self, Region, TyCtxt};\n use rustc_hir::def_id::DefId;\n "}, {"sha": "17f5b98ab208b9ebc4ac3f751a54bf07d9e636c2", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=24d09c7c1b454dae43adc39827311d741dcbf896", "patch": "@@ -8,7 +8,6 @@ use crate::hir::map as hir_map;\n use crate::hir::map::DefPathHash;\n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::infer::canonical::{Canonical, CanonicalVarInfo, CanonicalVarInfos};\n-use crate::infer::outlives::free_region_map::FreeRegionMap;\n use crate::lint::{self, Lint};\n use crate::middle;\n use crate::middle::cstore::CrateStoreDyn;\n@@ -26,6 +25,7 @@ use crate::session::config::{BorrowckMode, OutputFilenames};\n use crate::session::Session;\n use crate::traits;\n use crate::traits::{Clause, Clauses, Goal, GoalKind, Goals};\n+use crate::ty::free_region_map::FreeRegionMap;\n use crate::ty::layout::{LayoutDetails, TargetDataLayout, VariantIdx};\n use crate::ty::query;\n use crate::ty::steal::Steal;"}, {"sha": "42f506606e69ae17ce280516e5e855c58e55c6c8", "filename": "src/librustc/ty/free_region_map.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Fty%2Ffree_region_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Fty%2Ffree_region_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffree_region_map.rs?ref=24d09c7c1b454dae43adc39827311d741dcbf896", "previous_filename": "src/librustc/infer/outlives/free_region_map.rs"}, {"sha": "5457516a6a272bbc63cca2c559d205b909f81a93", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=24d09c7c1b454dae43adc39827311d741dcbf896", "patch": "@@ -103,6 +103,7 @@ pub mod error;\n pub mod fast_reject;\n pub mod flags;\n pub mod fold;\n+pub mod free_region_map;\n pub mod inhabitedness;\n pub mod layout;\n pub mod normalize_erasing_regions;"}, {"sha": "f0dc94f417c1e23e60002c20a95b050c5ae8ef98", "filename": "src/librustc_mir/borrow_check/type_check/free_region_relations.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d09c7c1b454dae43adc39827311d741dcbf896/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs?ref=24d09c7c1b454dae43adc39827311d741dcbf896", "patch": "@@ -1,10 +1,10 @@\n use rustc::infer::canonical::QueryRegionConstraints;\n-use rustc::infer::outlives::free_region_map::FreeRegionRelations;\n use rustc::infer::region_constraints::GenericKind;\n use rustc::infer::InferCtxt;\n use rustc::mir::ConstraintCategory;\n use rustc::traits::query::outlives_bounds::{self, OutlivesBound};\n use rustc::traits::query::type_op::{self, TypeOp};\n+use rustc::ty::free_region_map::FreeRegionRelations;\n use rustc::ty::{self, RegionVid, Ty};\n use rustc_data_structures::transitive_relation::TransitiveRelation;\n use rustc_span::DUMMY_SP;"}]}