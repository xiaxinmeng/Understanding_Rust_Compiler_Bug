{"sha": "6533d8becfd198299d0bd38550dd6c574cbd194f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MzNkOGJlY2ZkMTk4Mjk5ZDBiZDM4NTUwZGQ2YzU3NGNiZDE5NGY=", "commit": {"author": {"name": "Tim Nielens", "email": "tim.nielens@gmail.com", "date": "2020-10-22T21:39:59Z"}, "committer": {"name": "Tim Nielens", "email": "tim.nielens@gmail.com", "date": "2020-10-22T21:39:59Z"}, "message": "manual-unwrap-or / pr remarks, round 2", "tree": {"sha": "f686fa901c7916dd1fe05be85e029062326bd014", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f686fa901c7916dd1fe05be85e029062326bd014"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6533d8becfd198299d0bd38550dd6c574cbd194f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6533d8becfd198299d0bd38550dd6c574cbd194f", "html_url": "https://github.com/rust-lang/rust/commit/6533d8becfd198299d0bd38550dd6c574cbd194f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6533d8becfd198299d0bd38550dd6c574cbd194f/comments", "author": {"login": "tnielens", "id": 11885535, "node_id": "MDQ6VXNlcjExODg1NTM1", "avatar_url": "https://avatars.githubusercontent.com/u/11885535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnielens", "html_url": "https://github.com/tnielens", "followers_url": "https://api.github.com/users/tnielens/followers", "following_url": "https://api.github.com/users/tnielens/following{/other_user}", "gists_url": "https://api.github.com/users/tnielens/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnielens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnielens/subscriptions", "organizations_url": "https://api.github.com/users/tnielens/orgs", "repos_url": "https://api.github.com/users/tnielens/repos", "events_url": "https://api.github.com/users/tnielens/events{/privacy}", "received_events_url": "https://api.github.com/users/tnielens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tnielens", "id": 11885535, "node_id": "MDQ6VXNlcjExODg1NTM1", "avatar_url": "https://avatars.githubusercontent.com/u/11885535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnielens", "html_url": "https://github.com/tnielens", "followers_url": "https://api.github.com/users/tnielens/followers", "following_url": "https://api.github.com/users/tnielens/following{/other_user}", "gists_url": "https://api.github.com/users/tnielens/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnielens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnielens/subscriptions", "organizations_url": "https://api.github.com/users/tnielens/orgs", "repos_url": "https://api.github.com/users/tnielens/repos", "events_url": "https://api.github.com/users/tnielens/events{/privacy}", "received_events_url": "https://api.github.com/users/tnielens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2da0c701edef601b16b512b3a244977bf4b3afe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2da0c701edef601b16b512b3a244977bf4b3afe", "html_url": "https://github.com/rust-lang/rust/commit/f2da0c701edef601b16b512b3a244977bf4b3afe"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "cc9ee28d0275db84f5041f4c1667f5088cd454fe", "filename": "clippy_lints/src/manual_unwrap_or.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6533d8becfd198299d0bd38550dd6c574cbd194f/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6533d8becfd198299d0bd38550dd6c574cbd194f/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs?ref=6533d8becfd198299d0bd38550dd6c574cbd194f", "patch": "@@ -111,7 +111,9 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n         then {\n             let reindented_or_body =\n                 utils::reindent_multiline(or_body_snippet.into(), true, Some(indent));\n-            let wrap_in_parens = !matches!(scrutinee, Expr { kind: ExprKind::Call(..), .. });\n+            let wrap_in_parens = !matches!(scrutinee, Expr {\n+                kind: ExprKind::Call(..) | ExprKind::Path(_), ..\n+            });\n             let l_paren = if wrap_in_parens { \"(\" } else { \"\" };\n             let r_paren = if wrap_in_parens { \")\" } else { \"\" };\n             utils::span_lint_and_sugg("}, {"sha": "582f5c6f7a8eece60d2f7814726ffa10b4c319e4", "filename": "tests/ui/manual_unwrap_or.fixed", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6533d8becfd198299d0bd38550dd6c574cbd194f/tests%2Fui%2Fmanual_unwrap_or.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/6533d8becfd198299d0bd38550dd6c574cbd194f/tests%2Fui%2Fmanual_unwrap_or.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_unwrap_or.fixed?ref=6533d8becfd198299d0bd38550dd6c574cbd194f", "patch": "@@ -70,6 +70,10 @@ fn result_unwrap_or() {\n     // int case\n     Ok::<i32, &str>(1).unwrap_or(42);\n \n+    // int case, scrutinee is a binding\n+    let a = Ok::<i32, &str>(1);\n+    a.unwrap_or(42);\n+\n     // int case, suggestion must surround with parenthesis\n     (Ok(1) as Result<i32, &str>).unwrap_or(42);\n "}, {"sha": "0e2b7ecadb312c5cf3cd83c08007a8999697f1e0", "filename": "tests/ui/manual_unwrap_or.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6533d8becfd198299d0bd38550dd6c574cbd194f/tests%2Fui%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6533d8becfd198299d0bd38550dd6c574cbd194f/tests%2Fui%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_unwrap_or.rs?ref=6533d8becfd198299d0bd38550dd6c574cbd194f", "patch": "@@ -88,6 +88,13 @@ fn result_unwrap_or() {\n         Err(_) => 42,\n     };\n \n+    // int case, scrutinee is a binding\n+    let a = Ok::<i32, &str>(1);\n+    match a {\n+        Ok(i) => i,\n+        Err(_) => 42,\n+    };\n+\n     // int case, suggestion must surround with parenthesis\n     match Ok(1) as Result<i32, &str> {\n         Ok(i) => i,"}, {"sha": "6603ab43437d48412475eabfe5c18a4e42faef06", "filename": "tests/ui/manual_unwrap_or.stderr", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6533d8becfd198299d0bd38550dd6c574cbd194f/tests%2Fui%2Fmanual_unwrap_or.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6533d8becfd198299d0bd38550dd6c574cbd194f/tests%2Fui%2Fmanual_unwrap_or.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_unwrap_or.stderr?ref=6533d8becfd198299d0bd38550dd6c574cbd194f", "patch": "@@ -67,7 +67,16 @@ LL | |     };\n    | |_____^ help: replace with: `Ok::<i32, &str>(1).unwrap_or(42)`\n \n error: this pattern reimplements `Result::unwrap_or`\n-  --> $DIR/manual_unwrap_or.rs:92:5\n+  --> $DIR/manual_unwrap_or.rs:93:5\n+   |\n+LL | /     match a {\n+LL | |         Ok(i) => i,\n+LL | |         Err(_) => 42,\n+LL | |     };\n+   | |_____^ help: replace with: `a.unwrap_or(42)`\n+\n+error: this pattern reimplements `Result::unwrap_or`\n+  --> $DIR/manual_unwrap_or.rs:99:5\n    |\n LL | /     match Ok(1) as Result<i32, &str> {\n LL | |         Ok(i) => i,\n@@ -76,7 +85,7 @@ LL | |     };\n    | |_____^ help: replace with: `(Ok(1) as Result<i32, &str>).unwrap_or(42)`\n \n error: this pattern reimplements `Result::unwrap_or`\n-  --> $DIR/manual_unwrap_or.rs:98:5\n+  --> $DIR/manual_unwrap_or.rs:105:5\n    |\n LL | /     match Ok::<i32, &str>(1) {\n LL | |         Err(_) => 42,\n@@ -85,7 +94,7 @@ LL | |     };\n    | |_____^ help: replace with: `Ok::<i32, &str>(1).unwrap_or(42)`\n \n error: this pattern reimplements `Result::unwrap_or`\n-  --> $DIR/manual_unwrap_or.rs:104:5\n+  --> $DIR/manual_unwrap_or.rs:111:5\n    |\n LL | /     match Ok::<i32, &str>(1) {\n LL | |         Ok(i) => i,\n@@ -94,7 +103,7 @@ LL | |     };\n    | |_____^ help: replace with: `Ok::<i32, &str>(1).unwrap_or(1 + 42)`\n \n error: this pattern reimplements `Result::unwrap_or`\n-  --> $DIR/manual_unwrap_or.rs:111:5\n+  --> $DIR/manual_unwrap_or.rs:118:5\n    |\n LL | /     match Ok::<i32, &str>(1) {\n LL | |         Ok(i) => i,\n@@ -115,13 +124,13 @@ LL |     });\n    |\n \n error: this pattern reimplements `Result::unwrap_or`\n-  --> $DIR/manual_unwrap_or.rs:121:5\n+  --> $DIR/manual_unwrap_or.rs:128:5\n    |\n LL | /     match Ok::<&str, &str>(\"Bob\") {\n LL | |         Ok(i) => i,\n LL | |         Err(_) => \"Alice\",\n LL | |     };\n    | |_____^ help: replace with: `Ok::<&str, &str>(\"Bob\").unwrap_or(\"Alice\")`\n \n-error: aborting due to 11 previous errors\n+error: aborting due to 12 previous errors\n "}]}