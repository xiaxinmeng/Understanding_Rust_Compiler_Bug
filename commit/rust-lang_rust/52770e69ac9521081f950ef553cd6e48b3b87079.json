{"sha": "52770e69ac9521081f950ef553cd6e48b3b87079", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNzcwZTY5YWM5NTIxMDgxZjk1MGVmNTUzY2Q2ZTQ4YjNiODcwNzk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-12T18:26:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-12T18:26:35Z"}, "message": "Rollup merge of #47324 - mbrubeck:len, r=sfackler\n\nPre-allocate in fs::read and fs::read_string\n\nThis is a simpler alternative to #46340 and #45928, as requested by the libs team.", "tree": {"sha": "4ad47be875bd08681ebf29f02368c7aee59059fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ad47be875bd08681ebf29f02368c7aee59059fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52770e69ac9521081f950ef553cd6e48b3b87079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52770e69ac9521081f950ef553cd6e48b3b87079", "html_url": "https://github.com/rust-lang/rust/commit/52770e69ac9521081f950ef553cd6e48b3b87079", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52770e69ac9521081f950ef553cd6e48b3b87079/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "426036b517c8afd71d6ee6dcb1e4d942f2e2d437", "url": "https://api.github.com/repos/rust-lang/rust/commits/426036b517c8afd71d6ee6dcb1e4d942f2e2d437", "html_url": "https://github.com/rust-lang/rust/commit/426036b517c8afd71d6ee6dcb1e4d942f2e2d437"}, {"sha": "44912bf77bf1fd2137e5b7d1d31b2e59e2819136", "url": "https://api.github.com/repos/rust-lang/rust/commits/44912bf77bf1fd2137e5b7d1d31b2e59e2819136", "html_url": "https://github.com/rust-lang/rust/commit/44912bf77bf1fd2137e5b7d1d31b2e59e2819136"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "51cb9609120e36a5657aa5aa1f75d15979e54de7", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/52770e69ac9521081f950ef553cd6e48b3b87079/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52770e69ac9521081f950ef553cd6e48b3b87079/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=52770e69ac9521081f950ef553cd6e48b3b87079", "patch": "@@ -211,6 +211,14 @@ pub struct DirBuilder {\n     recursive: bool,\n }\n \n+/// How large a buffer to pre-allocate before reading the entire file at `path`.\n+fn initial_buffer_size<P: AsRef<Path>>(path: P) -> usize {\n+    // Allocate one extra byte so the buffer doesn't need to grow before the\n+    // final `read` call at the end of the file.  Don't worry about `usize`\n+    // overflow because reading will fail regardless in that case.\n+    metadata(path).map(|m| m.len() as usize + 1).unwrap_or(0)\n+}\n+\n /// Read the entire contents of a file into a bytes vector.\n ///\n /// This is a convenience function for using [`File::open`] and [`read_to_end`]\n@@ -246,7 +254,7 @@ pub struct DirBuilder {\n /// ```\n #[unstable(feature = \"fs_read_write\", issue = \"46588\")]\n pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n-    let mut bytes = Vec::new();\n+    let mut bytes = Vec::with_capacity(initial_buffer_size(&path));\n     File::open(path)?.read_to_end(&mut bytes)?;\n     Ok(bytes)\n }\n@@ -287,7 +295,7 @@ pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n /// ```\n #[unstable(feature = \"fs_read_write\", issue = \"46588\")]\n pub fn read_string<P: AsRef<Path>>(path: P) -> io::Result<String> {\n-    let mut string = String::new();\n+    let mut string = String::with_capacity(initial_buffer_size(&path));\n     File::open(path)?.read_to_string(&mut string)?;\n     Ok(string)\n }"}]}