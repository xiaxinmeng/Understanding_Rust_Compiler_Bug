{"sha": "b2f80ddf34124ac516139de751af3824ab190eef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZjgwZGRmMzQxMjRhYzUxNjEzOWRlNzUxYWYzODI0YWIxOTBlZWY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-10-21T22:43:23Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-10-21T22:43:23Z"}, "message": "Fix multiple errors", "tree": {"sha": "5e9adb6d6fa48379e5d9d66abf534cd81a3fec04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e9adb6d6fa48379e5d9d66abf534cd81a3fec04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2f80ddf34124ac516139de751af3824ab190eef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2f80ddf34124ac516139de751af3824ab190eef", "html_url": "https://github.com/rust-lang/rust/commit/b2f80ddf34124ac516139de751af3824ab190eef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2f80ddf34124ac516139de751af3824ab190eef/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f729f4a75e1dda17cb7bcf1e649aec4c68ad9c75", "url": "https://api.github.com/repos/rust-lang/rust/commits/f729f4a75e1dda17cb7bcf1e649aec4c68ad9c75", "html_url": "https://github.com/rust-lang/rust/commit/f729f4a75e1dda17cb7bcf1e649aec4c68ad9c75"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "f7f2a45255e64b86396f5ea5dfc828aef9853c44", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b2f80ddf34124ac516139de751af3824ab190eef/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2f80ddf34124ac516139de751af3824ab190eef/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=b2f80ddf34124ac516139de751af3824ab190eef", "patch": "@@ -552,6 +552,15 @@ impl ItemEnum {\n             _ => return None,\n         })\n     }\n+\n+    pub fn is_associated(&self) -> bool {\n+        match *self {\n+            ItemEnum::TypedefItem(_, _) |\n+            ItemEnum::AssociatedConstItem(_, _) |\n+            ItemEnum::AssociatedTypeItem(_, _) => true,\n+            _ => false,\n+        }\n+    }\n }\n \n #[derive(Clone, RustcEncodable, RustcDecodable, Debug)]"}, {"sha": "72a1a30387cf0bac8ee18b2d4a07cc960a434285", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b2f80ddf34124ac516139de751af3824ab190eef/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2f80ddf34124ac516139de751af3824ab190eef/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=b2f80ddf34124ac516139de751af3824ab190eef", "patch": "@@ -3881,19 +3881,21 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n             RenderMode::ForDeref { mut_: deref_mut_ } => should_render_item(&item, deref_mut_),\n         };\n \n-        let (mut is_hidden, extra_class) = if item.doc_value().is_some() {\n+        let (is_hidden, extra_class) = if trait_.is_none() ||\n+                                          item.doc_value().is_some() ||\n+                                          item.inner.is_associated() {\n             (false, \"\")\n         } else {\n             (true, \" hidden\")\n         };\n         match item.inner {\n             clean::MethodItem(clean::Method { ref decl, .. }) |\n-            clean::TyMethodItem(clean::TyMethod{ ref decl, .. }) => {\n+            clean::TyMethodItem(clean::TyMethod { ref decl, .. }) => {\n                 // Only render when the method is not static or we allow static methods\n                 if render_method_item {\n                     let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n                     let ns_id = cx.derive_id(format!(\"{}.{}\", name, item_type.name_space()));\n-                    write!(w, \"<h4 id='{}' class=\\\"{}\\\">\", id, item_type)?;\n+                    write!(w, \"<h4 id='{}' class=\\\"{}{}\\\">\", id, item_type, extra_class)?;\n                     write!(w, \"{}\", spotlight_decl(decl)?)?;\n                     write!(w, \"<span id='{}' class='invisible'>\", ns_id)?;\n                     write!(w, \"<table class='table-display'><tbody><tr><td><code>\")?;\n@@ -3910,7 +3912,6 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n                         render_stability_since_raw(w, item.stable_since(), outer_version)?;\n                     }\n                     write!(w, \"</td></tr></tbody></table></span></h4>\")?;\n-                    is_hidden = false;\n                 }\n             }\n             clean::TypedefItem(ref tydef, _) => {"}, {"sha": "23da4dfbbbd39c3d4f350ff49991962ef3c3fcf4", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b2f80ddf34124ac516139de751af3824ab190eef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/b2f80ddf34124ac516139de751af3824ab190eef/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=b2f80ddf34124ac516139de751af3824ab190eef", "patch": "@@ -2059,12 +2059,22 @@\n     onEach(document.getElementsByClassName('impl'), func);\n     onEach(document.getElementsByClassName('impl-items'), function(e) {\n         onEach(e.getElementsByClassName('associatedconstant'), func);\n-        if (e.getElementsByClassName('hidden').length > 0) {\n+        var hiddenElems = e.getElementsByClassName('hidden');\n+        var needToggle = false;\n+\n+        for (var i = 0; i < hiddenElems.length; ++i) {\n+            if (hasClass(hiddenElems[i], \"content\") === false &&\n+                hasClass(hiddenElems[i], \"docblock\") === false) {\n+                needToggle = true;\n+                break;\n+            }\n+        }\n+        if (needToggle === true) {\n             var newToggle = document.createElement('a');\n             newToggle.href = 'javascript:void(0)';\n             newToggle.className = 'collapse-toggle hidden-default collapsed';\n             newToggle.innerHTML = \"[<span class='inner'>\" + labelForToggleButton(true) + \"</span>\" +\n-                                  \"] Show hidden default items\";\n+                                  \"] Show hidden undocumented items\";\n             newToggle.onclick = function() {\n                 if (hasClass(this, \"collapsed\")) {\n                     removeClass(this, \"collapsed\");\n@@ -2075,7 +2085,7 @@\n                         }\n                     }, true);\n                     this.innerHTML = \"[<span class='inner'>\" + labelForToggleButton(false) +\n-                                     \"</span>] Hide default items\"\n+                                     \"</span>] Hide undocumented items\"\n                 } else {\n                     addClass(this, \"collapsed\");\n                     onEach(this.parentNode.getElementsByClassName(\"x\"), function(x) {\n@@ -2085,7 +2095,7 @@\n                         }\n                     }, true);\n                     this.innerHTML = \"[<span class='inner'>\" + labelForToggleButton(true) +\n-                                     \"</span>] Show hidden default items\";\n+                                     \"</span>] Show hidden undocumented items\";\n                 }\n             };\n             e.insertBefore(newToggle, e.firstChild);"}, {"sha": "d4f8e614ad07276f55ddae9be19bc314cfd326f5", "filename": "src/test/rustdoc/assoc-consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2f80ddf34124ac516139de751af3824ab190eef/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2f80ddf34124ac516139de751af3824ab190eef/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-consts.rs?ref=b2f80ddf34124ac516139de751af3824ab190eef", "patch": "@@ -99,7 +99,7 @@ impl Qux for Bar {\n     /// Docs for QUX1 in impl.\n     const QUX1: i8 = 5;\n     // @has - '//*[@id=\"associatedconstant.QUX_DEFAULT0\"]' 'const QUX_DEFAULT0: u16'\n-    // @has - '//*[@class=\"docblock hidden\"]' \"Docs for QUX_DEFAULT12 in trait.\"\n+    // @has - '//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT12 in trait.\"\n     const QUX_DEFAULT0: u16 = 6;\n     // @has - '//*[@id=\"associatedconstant.QUX_DEFAULT1\"]' 'const QUX_DEFAULT1: i16'\n     // @has - '//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT1 in impl.\""}, {"sha": "ea46dae4f83241612467eacf808991c5e5b05858", "filename": "src/test/rustdoc/manual_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2f80ddf34124ac516139de751af3824ab190eef/src%2Ftest%2Frustdoc%2Fmanual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2f80ddf34124ac516139de751af3824ab190eef/src%2Ftest%2Frustdoc%2Fmanual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmanual_impl.rs?ref=b2f80ddf34124ac516139de751af3824ab190eef", "patch": "@@ -74,7 +74,7 @@ impl T for S2 {\n // @has manual_impl/struct.S3.html '//*[@class=\"trait\"]' 'T'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S3 trait implementation.'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S3 trait b_method implementation.'\n-// @has - '//*[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n+// @has - '//*[@class=\"docblock hidden\"]' 'Docs associated with the trait a_method definition.'\n pub struct S3(usize);\n \n /// Docs associated with the S3 trait implementation."}]}