{"sha": "1b41a38f523714d37f0e8257bcceb505166efd68", "node_id": "C_kwDOAAsO6NoAKDFiNDFhMzhmNTIzNzE0ZDM3ZjBlODI1N2JjY2ViNTA1MTY2ZWZkNjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-15T00:40:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-15T00:40:42Z"}, "message": "Rollup merge of #104354 - lukas-code:blank-lines-2, r=JohnTitor\n\nRemove leading newlines from `NonZero*` doc examples\n\nLike https://github.com/rust-lang/rust/pull/103045, but for `NonZero*`.\n\n`@rustbot` label A-docs", "tree": {"sha": "a612bdecfb07357bf538a25f4a638a74ea563b1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a612bdecfb07357bf538a25f4a638a74ea563b1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b41a38f523714d37f0e8257bcceb505166efd68", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjcuAKCRBK7hj4Ov3rIwAAvOEIAGajm4/1Ghgx47VxCyh3oQCP\nokGXsAWg72A3io9Jhi0nM2NNBjLu1QY58pf8/hCTi2BHuJJkN3poj92camBCnvUY\nG835TZZjMfEjseSkE3rWJAt37BUb0L/KZATWdQ1a697a/QFE4AadseJ3iZcCE904\nKdYSHxzrfreim+2+iIE0Mkv+zduY44WRG5NejnonOHtfGKaTeG85YQJL0jfMkNeB\ndRdaEQlxK1/aWb6LXcR8dyH/rf9s8JA6bSIZGMq6TEkvqDYsvhYIZQSgnwyAvkq2\nYHQm0KMXeAupLn0+3kc6iLyEdYGNPMCi5yhGOOpRU23XbCo2zqDqQ7OcZEcZaVA=\n=kqMq\n-----END PGP SIGNATURE-----\n", "payload": "tree a612bdecfb07357bf538a25f4a638a74ea563b1e\nparent 98be657c7c800e9a096035198d4991f0796172a7\nparent ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668472842 +0100\ncommitter GitHub <noreply@github.com> 1668472842 +0100\n\nRollup merge of #104354 - lukas-code:blank-lines-2, r=JohnTitor\n\nRemove leading newlines from `NonZero*` doc examples\n\nLike https://github.com/rust-lang/rust/pull/103045, but for `NonZero*`.\n\n`@rustbot` label A-docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b41a38f523714d37f0e8257bcceb505166efd68", "html_url": "https://github.com/rust-lang/rust/commit/1b41a38f523714d37f0e8257bcceb505166efd68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b41a38f523714d37f0e8257bcceb505166efd68/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98be657c7c800e9a096035198d4991f0796172a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/98be657c7c800e9a096035198d4991f0796172a7", "html_url": "https://github.com/rust-lang/rust/commit/98be657c7c800e9a096035198d4991f0796172a7"}, {"sha": "ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d", "html_url": "https://github.com/rust-lang/rust/commit/ce10ac0d6a047d9a537b68b75c89ddc6859c7d4d"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "6a417b54daa93ff7ca2b43cf5a58aeddf13e9511", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1b41a38f523714d37f0e8257bcceb505166efd68/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b41a38f523714d37f0e8257bcceb505166efd68/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=1b41a38f523714d37f0e8257bcceb505166efd68", "patch": "@@ -321,7 +321,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let one = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -356,7 +355,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let one = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -391,8 +389,8 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_ops)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let one = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -420,7 +418,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let two = \", stringify!($Ty), \"::new(2)?;\")]\n@@ -461,7 +458,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(7).unwrap().ilog2(), 2);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(8).unwrap().ilog2(), 3);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(9).unwrap().ilog2(), 3);\")]\n@@ -486,7 +482,6 @@ macro_rules! nonzero_unsigned_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(99).unwrap().ilog10(), 1);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(100).unwrap().ilog10(), 2);\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::new(101).unwrap().ilog10(), 2);\")]\n@@ -526,7 +521,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -556,7 +550,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -591,7 +584,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -626,7 +618,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -662,7 +653,6 @@ macro_rules! nonzero_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n@@ -905,7 +895,6 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let two = \", stringify!($Ty), \"::new(2)?;\")]\n@@ -941,7 +930,6 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let two = \", stringify!($Ty), \"::new(2)?;\")]\n@@ -986,8 +974,8 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_ops)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let two = \", stringify!($Ty), \"::new(2)?;\")]\n@@ -1014,7 +1002,6 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let three = \", stringify!($Ty), \"::new(3)?;\")]\n@@ -1058,7 +1045,6 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 ///\n                 /// ```\n                 #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n-                ///\n                 /// # fn main() { test().unwrap(); }\n                 /// # fn test() -> Option<()> {\n                 #[doc = concat!(\"let three = \", stringify!($Ty), \"::new(3)?;\")]\n@@ -1162,8 +1148,8 @@ macro_rules! nonzero_min_max_unsigned {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_min_max)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MIN.get(), 1\", stringify!($Int), \");\")]\n                 /// ```\n                 #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n@@ -1177,8 +1163,8 @@ macro_rules! nonzero_min_max_unsigned {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_min_max)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MAX.get(), \", stringify!($Int), \"::MAX);\")]\n                 /// ```\n                 #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n@@ -1204,8 +1190,8 @@ macro_rules! nonzero_min_max_signed {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_min_max)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MIN.get(), \", stringify!($Int), \"::MIN);\")]\n                 /// ```\n                 #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]\n@@ -1223,8 +1209,8 @@ macro_rules! nonzero_min_max_signed {\n                 ///\n                 /// ```\n                 /// #![feature(nonzero_min_max)]\n-                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 ///\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n                 #[doc = concat!(\"assert_eq!(\", stringify!($Ty), \"::MAX.get(), \", stringify!($Int), \"::MAX);\")]\n                 /// ```\n                 #[unstable(feature = \"nonzero_min_max\", issue = \"89065\")]"}]}