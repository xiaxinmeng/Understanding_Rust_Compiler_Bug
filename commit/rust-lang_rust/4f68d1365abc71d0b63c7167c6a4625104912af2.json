{"sha": "4f68d1365abc71d0b63c7167c6a4625104912af2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNjhkMTM2NWFiYzcxZDBiNjNjNzE2N2M2YTQ2MjUxMDQ5MTJhZjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-09T10:11:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-09T10:11:15Z"}, "message": "auto merge of #10368 : tautologico/rust/default_pkgid, r=catamorphism\n\nThis Fixes #10265 and paves the way for fixing #9543. It works by adding a 'package_id' attribute by default for library crates that don't specify it. This is necessary to use the 'extern mod foo = \"bar\"' form instead of 'extern mod foo(name=\"bar\") (as per #9543), because the former adds a required package_id when trying to link with the bar crate. I added a simple test to ensure that the default package_id value is being generated, and also added an explicit package_id in the link attribute in all rust libs to avoid getting warnings about default package_id values when building rust.", "tree": {"sha": "c67ff0abc2fd206da5280145957f6573c4e3e9c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c67ff0abc2fd206da5280145957f6573c4e3e9c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f68d1365abc71d0b63c7167c6a4625104912af2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f68d1365abc71d0b63c7167c6a4625104912af2", "html_url": "https://github.com/rust-lang/rust/commit/4f68d1365abc71d0b63c7167c6a4625104912af2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f68d1365abc71d0b63c7167c6a4625104912af2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "162ba894bced501e8725c2558447df2403fbd553", "url": "https://api.github.com/repos/rust-lang/rust/commits/162ba894bced501e8725c2558447df2403fbd553", "html_url": "https://github.com/rust-lang/rust/commit/162ba894bced501e8725c2558447df2403fbd553"}, {"sha": "ca22e947720bd16571f26d71f5de21b135a48fc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca22e947720bd16571f26d71f5de21b135a48fc2", "html_url": "https://github.com/rust-lang/rust/commit/ca22e947720bd16571f26d71f5de21b135a48fc2"}], "stats": {"total": 79, "additions": 73, "deletions": 6}, "files": [{"sha": "a74c4993be3507e6b317bd9c019481d0f0a2b137", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -21,6 +21,7 @@ Rust extras are part of the standard Rust distribution.\n */\n \n #[link(name = \"extra\",\n+       package_id = \"extra\",\n        vers = \"0.9-pre\",\n        uuid = \"122bed0b-c19b-4b82-b0b7-7ae8aead7297\",\n        url = \"https://github.com/mozilla/rust/tree/master/src/libextra\")];"}, {"sha": "b88966c0ab29695438c0e34aff34716c7295d58b", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -634,6 +634,18 @@ pub fn build_link_meta(sess: Session,\n         }\n     }\n \n+    fn crate_meta_pkgid(sess: Session, name: @str, opt_pkg_id: Option<@str>)\n+        -> @str {\n+        match opt_pkg_id {\n+            Some(v) if !v.is_empty() => v,\n+            _ => {\n+                let pkg_id = name.clone();\n+                warn_missing(sess, \"package_id\", pkg_id);\n+                pkg_id\n+            }\n+        }\n+    }\n+\n     let ProvidedMetas {\n         name: opt_name,\n         vers: opt_vers,\n@@ -642,15 +654,16 @@ pub fn build_link_meta(sess: Session,\n     } = provided_link_metas(sess, c);\n     let name = crate_meta_name(sess, output, opt_name);\n     let vers = crate_meta_vers(sess, opt_vers);\n+    let pkg_id = crate_meta_pkgid(sess, name, opt_pkg_id);\n     let dep_hashes = cstore::get_dep_hashes(sess.cstore);\n     let extras_hash =\n         crate_meta_extras_hash(symbol_hasher, cmh_items,\n-                               dep_hashes, opt_pkg_id);\n+                               dep_hashes, Some(pkg_id));\n \n     LinkMeta {\n         name: name,\n         vers: vers,\n-        package_id: opt_pkg_id,\n+        package_id: Some(pkg_id),\n         extras_hash: extras_hash\n     }\n }"}, {"sha": "bc436abbf5660c6fb322459698ca0fcfc08b620d", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #[link(name = \"rustc\",\n+       package_id = \"rustc\",\n        vers = \"0.9-pre\",\n        uuid = \"0ce89b41-2f92-459e-bbc1-8f5fe32f16cf\",\n        url = \"https://github.com/mozilla/rust/tree/master/src/rustc\")];"}, {"sha": "aae6901e00aebbf5bb51dc06b44084ec57036fe3", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -1487,8 +1487,8 @@ fn encode_attributes(ebml_w: &mut writer::Encoder, attrs: &[Attribute]) {\n \n // So there's a special crate attribute called 'link' which defines the\n // metadata that Rust cares about for linking crates. This attribute requires\n-// 'name' and 'vers' items, so if the user didn't provide them we will throw\n-// them in anyway with default values.\n+// 'name', 'vers' and 'package_id' items, so if the user didn't provide them we\n+// will throw them in anyway with default values.\n fn synthesize_crate_attrs(ecx: &EncodeContext,\n                           crate: &Crate) -> ~[Attribute] {\n \n@@ -1505,9 +1505,20 @@ fn synthesize_crate_attrs(ecx: &EncodeContext,\n             attr::mk_name_value_item_str(@\"vers\",\n                                          ecx.link_meta.vers);\n \n-        let mut meta_items = ~[name_item, vers_item];\n+        let pkgid_item = match ecx.link_meta.package_id {\n+                Some(pkg_id) =>  attr::mk_name_value_item_str(@\"package_id\",\n+                                                              pkg_id),\n+                // uses package_id equal to name;\n+                // this should never happen here but package_id is an Option\n+                // FIXME (#10370): change package_id in LinkMeta to @str instead of Option<@str>\n+                _ => attr::mk_name_value_item_str(@\"package_id\",\n+                                                  ecx.link_meta.name)\n+        };\n+\n+        let mut meta_items = ~[name_item, vers_item, pkgid_item];\n \n-        for &mi in items.iter().filter(|mi| \"name\" != mi.name() && \"vers\" != mi.name()) {\n+        for &mi in items.iter().filter(|mi| \"name\" != mi.name() && \"vers\" != mi.name() &&\n+                                            \"package_id\" != mi.name()) {\n             meta_items.push(mi);\n         }\n         let link_item = attr::mk_list_item(@\"link\", meta_items);"}, {"sha": "96624ec5b6c2be7f58579c536b0ee1c806566980", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n #[link(name = \"rustdoc\",\n+       package_id = \"rustdoc\",\n        vers = \"0.9-pre\",\n        uuid = \"8c6e4598-1596-4aa5-a24c-b811914bbbc6\",\n        url = \"https://github.com/mozilla/rust/tree/master/src/librustdoc\")];"}, {"sha": "576f26b1c945f6b059644ae2b4b205f07c089c41", "filename": "src/librustpkg/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustpkg%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustpkg%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Flib.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -11,6 +11,7 @@\n // rustpkg - a package manager and build system for Rust\n \n #[link(name = \"rustpkg\",\n+       package_id = \"rustpkg\",\n        vers = \"0.9-pre\",\n        uuid = \"25de5e6e-279e-4a20-845c-4cabae92daaf\",\n        url = \"https://github.com/mozilla/rust/tree/master/src/librustpkg\")];"}, {"sha": "f0a607ae35f1c5c00b026077abab64ee9bac7ca9", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -35,6 +35,7 @@ via `close` and `delete` methods.\n */\n \n #[link(name = \"rustuv\",\n+       package_id = \"rustuv\",\n        vers = \"0.9-pre\",\n        uuid = \"f3719011-0459-9b86-b11c-29265c0d0864\",\n        url = \"https://github.com/mozilla/rust/tree/master/src/librustuv\")];"}, {"sha": "008f9b27a12e1d19db0f2a5ae4f72a4009175f7b", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -44,6 +44,7 @@\n //!     use std::prelude::*;\n \n #[link(name = \"std\",\n+       package_id = \"std\",\n        vers = \"0.9-pre\",\n        uuid = \"c70c24a7-5551-4f73-8e37-380b11d80be8\",\n        url = \"https://github.com/mozilla/rust/tree/master/src/libstd\")];"}, {"sha": "3673d3719ad5f9e8152da2266de3fad8297e1e9d", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -14,6 +14,7 @@\n  */\n \n #[link(name = \"syntax\",\n+       package_id = \"syntax\",\n        vers = \"0.9-pre\",\n        uuid = \"9311401b-d6ea-4cd9-a1d9-61f89499c645\")];\n "}, {"sha": "22ccde01c4af305d5afc497ef14a770bb176cd56", "filename": "src/test/auxiliary/crateresolve8-1.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Ftest%2Fauxiliary%2Fcrateresolve8-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Ftest%2Fauxiliary%2Fcrateresolve8-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve8-1.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// default link meta for 'package_id' will be equal to filestem\n+#[link(name = \"crateresolve8\",\n+       vers = \"0.1\")];\n+\n+#[crate_type = \"lib\"];\n+\n+pub fn f() -> int { 20 }"}, {"sha": "8ade79a4a84a15b80cdbf038df944cd03ff9c09a", "filename": "src/test/run-pass/crateresolve8.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f68d1365abc71d0b63c7167c6a4625104912af2/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs?ref=4f68d1365abc71d0b63c7167c6a4625104912af2", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-fast\n+// aux-build:crateresolve8-1.rs\n+\n+extern mod crateresolve8(vers = \"0.1\", package_id=\"crateresolve8\");\n+//extern mod crateresolve8(vers = \"0.1\");\n+\n+pub fn main() {\n+    assert_eq!(crateresolve8::f(), 20);\n+}"}]}