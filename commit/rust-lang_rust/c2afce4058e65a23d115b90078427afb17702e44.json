{"sha": "c2afce4058e65a23d115b90078427afb17702e44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYWZjZTQwNThlNjVhMjNkMTE1YjkwMDc4NDI3YWZiMTc3MDJlNDQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-30T22:19:49Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-30T22:50:29Z"}, "message": "Fix ICEs with `@ ..` binding", "tree": {"sha": "a3af00d6ebe72219056f580b11eebb213147b498", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3af00d6ebe72219056f580b11eebb213147b498"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2afce4058e65a23d115b90078427afb17702e44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXmatGLoofN5+9u4rsJhshcDi2qEFAl8jTrUACgkQsJhshcDi\n2qEjzxAAnk2GW+47bywdRBXZ+T6MwNyDbNx+rRhDedT7yvD463OUlhrwrFB8WuWq\nKkOzJCYXhu5/MU4Q8SHNemTR3a2kXJnGqNYArsLbbk3qXZPQzfdulYZwvYz6lv8k\nZUYBtBNC78Yy3y/yJOaBouJK/1HTNoloQQ7vCDhC1nd+d9kl3w7vo8+GQq2ouKxj\na5r5KUYRF3ToexlhBCksoa0PPdwEosN4kkONaVqoXTe+w/KeuTuOmJUIbCYgu38q\nDW9X5cjzAaiRrzIi/nDi9JC1ON3umv+t3z3FNz9o9kNFjHpK1nMRqlmf4pO3ZVdY\nTMPedQPTWL6sptU0q9+lUUYIyXalm+kzDvB7pZ8VQX0Z8+zh4+fB8PJzm5iE5O7R\n4qzFtoR8J1yfUXPMtB0SwHySuGDQztZ4IaEC+rd2B+1H6gRia4AIKzMnBnxdd7Uc\nGQPd5ZK7EQ7H/4ceIoHFLmwcWFHGbzLSSDJVGAKG/DLxIeO02jHAgjCF/uxaI0gT\nn9UMOtVoDPw4a+uxvwwgWv9/QplkN7K5pUERO1gi8auA6l0JMB1vktnVBqmjJMJo\n4JeiL9IgAasLjLWwogJOb6ciKF/XnAdbchZ2lfhBlOE/SqstDWzMz+fwMtih8iVT\nIrkJTYKCdKoG2YPbgT+IZTljIxZjO/XxN4U+3L81wZ6VwitVAnY=\n=HZea\n-----END PGP SIGNATURE-----", "payload": "tree a3af00d6ebe72219056f580b11eebb213147b498\nparent 8b778a5f8d244a402355cc532107372beec4afc8\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596147589 +0900\ncommitter Yuki Okushi <huyuumi.dev@gmail.com> 1596149429 +0900\n\nFix ICEs with `@ ..` binding\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2afce4058e65a23d115b90078427afb17702e44", "html_url": "https://github.com/rust-lang/rust/commit/c2afce4058e65a23d115b90078427afb17702e44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2afce4058e65a23d115b90078427afb17702e44/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b778a5f8d244a402355cc532107372beec4afc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b778a5f8d244a402355cc532107372beec4afc8", "html_url": "https://github.com/rust-lang/rust/commit/8b778a5f8d244a402355cc532107372beec4afc8"}], "stats": {"total": 147, "additions": 140, "deletions": 7}, "files": [{"sha": "171856e7e637181fa2878216b484213d2cfbd999", "filename": "src/librustc_ast_lowering/pat.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Flibrustc_ast_lowering%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Flibrustc_ast_lowering%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpat.rs?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -112,7 +112,6 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 // Found a sub-tuple pattern `$binding_mode $ident @ ..`.\n                 // This is not allowed as a sub-tuple pattern\n                 PatKind::Ident(ref _bm, ident, Some(ref sub)) if sub.is_rest() => {\n-                    rest = Some((idx, pat.span));\n                     let sp = pat.span;\n                     self.diagnostic()\n                         .struct_span_err(\n@@ -128,7 +127,6 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                             Applicability::MaybeIncorrect,\n                         )\n                         .emit();\n-                    break;\n                 }\n                 _ => {}\n             }"}, {"sha": "8db74ec9f4ce8be437f5d966036d4e3d58022018", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -1520,9 +1520,7 @@ impl<'a, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                     let has_sub = sub.is_some();\n                     let res = self\n                         .try_resolve_as_non_binding(pat_src, pat, bmode, ident, has_sub)\n-                        .unwrap_or_else(|| {\n-                            self.fresh_binding(ident, pat.id, pat_src, bindings)\n-                        });\n+                        .unwrap_or_else(|| self.fresh_binding(ident, pat.id, pat_src, bindings));\n                     self.r.record_partial_res(pat.id, PartialRes::new(res));\n                 }\n                 PatKind::TupleStruct(ref path, ..) => {"}, {"sha": "1b80a21793a0aa42b8b89813a783e3069073a454", "filename": "src/test/ui/issues/issue-72574-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.rs?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -6,3 +6,5 @@ fn main() {\n     }\n }\n //~^^^^ ERROR `_x @` is not allowed in a tuple\n+//~| ERROR: `..` patterns are not allowed here\n+//~| ERROR: mismatched types"}, {"sha": "92ebb45e88d4b71b6e26215fe9c37b1ef51fa5b8", "filename": "src/test/ui/issues/issue-72574-1.stderr", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.stderr?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -10,5 +10,25 @@ help: if you don't need to use the contents of _x, discard the tuple's remaining\n LL |         (_a, ..) => {}\n    |              ^^\n \n-error: aborting due to previous error\n+error: `..` patterns are not allowed here\n+  --> $DIR/issue-72574-1.rs:4:19\n+   |\n+LL |         (_a, _x @ ..) => {}\n+   |                   ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-72574-1.rs:4:9\n+   |\n+LL |     match x {\n+   |           - this expression has type `({integer}, {integer}, {integer})`\n+LL |         (_a, _x @ ..) => {}\n+   |         ^^^^^^^^^^^^^ expected a tuple with 3 elements, found one with 2 elements\n+   |\n+   = note: expected tuple `({integer}, {integer}, {integer})`\n+              found tuple `(_, _)`\n+\n+error: aborting due to 3 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "0ad2db848b2811c46479f8eaa243cf93e77d677a", "filename": "src/test/ui/issues/issue-72574-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.rs?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -8,3 +8,5 @@ fn main() {\n     }\n }\n //~^^^^ ERROR `_x @` is not allowed in a tuple struct\n+//~| ERROR: `..` patterns are not allowed here\n+//~| ERROR: this pattern has 2 fields, but the corresponding tuple struct has 3 fields"}, {"sha": "0a9c868af7af8cdc63e553c2e4520b4ba023ce46", "filename": "src/test/ui/issues/issue-72574-2.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -10,5 +10,23 @@ help: if you don't need to use the contents of _x, discard the tuple's remaining\n LL |         Binder(_a, ..) => {}\n    |                    ^^\n \n-error: aborting due to previous error\n+error: `..` patterns are not allowed here\n+  --> $DIR/issue-72574-2.rs:6:25\n+   |\n+LL |         Binder(_a, _x @ ..) => {}\n+   |                         ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 3 fields\n+  --> $DIR/issue-72574-2.rs:6:9\n+   |\n+LL | struct Binder(i32, i32, i32);\n+   | ----------------------------- tuple struct defined here\n+...\n+LL |         Binder(_a, _x @ ..) => {}\n+   |         ^^^^^^^^^^^^^^^^^^^ expected 3 fields, found 2\n+\n+error: aborting due to 3 previous errors\n \n+For more information about this error, try `rustc --explain E0023`."}, {"sha": "0b25f87ec5340d6792fd7d4784ce8ceaf47f1b0a", "filename": "src/test/ui/pattern/issue-74539.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.rs?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -0,0 +1,15 @@\n+enum E {\n+    A(u8, u8),\n+}\n+\n+fn main() {\n+    let e = E::A(2, 3);\n+    match e {\n+        E::A(x @ ..) => {\n+            //~^ ERROR: `x @` is not allowed in a tuple struct\n+            //~| ERROR: `..` patterns are not allowed here\n+            //~| ERROR: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n+            x\n+        }\n+    };\n+}"}, {"sha": "cbc90b5397d8b058f3fdc4abcf9a25fcd663f84f", "filename": "src/test/ui/pattern/issue-74539.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -0,0 +1,32 @@\n+error: `x @` is not allowed in a tuple struct\n+  --> $DIR/issue-74539.rs:8:14\n+   |\n+LL |         E::A(x @ ..) => {\n+   |              ^^^^^^ this is only allowed in slice patterns\n+   |\n+   = help: remove this and bind each tuple field independently\n+help: if you don't need to use the contents of x, discard the tuple's remaining fields\n+   |\n+LL |         E::A(..) => {\n+   |              ^^\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/issue-74539.rs:8:18\n+   |\n+LL |         E::A(x @ ..) => {\n+   |                  ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n+  --> $DIR/issue-74539.rs:8:9\n+   |\n+LL |     A(u8, u8),\n+   |     --------- tuple variant defined here\n+...\n+LL |         E::A(x @ ..) => {\n+   |         ^^^^^^^^^^^^ expected 2 fields, found 1\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0023`."}, {"sha": "0aeb3b217a26ff8771c9fb67a4943eaf9a1b4ea1", "filename": "src/test/ui/pattern/issue-74702.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74702.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74702.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74702.rs?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    let (foo @ ..,) = (0, 0);\n+    //~^ ERROR: `foo @` is not allowed in a tuple\n+    //~| ERROR: `..` patterns are not allowed here\n+    //~| ERROR: mismatched types\n+    dbg!(foo);\n+}"}, {"sha": "aca5c9aed96247a0d14c49100b608da6a1428b52", "filename": "src/test/ui/pattern/issue-74702.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74702.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74702.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74702.stderr?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -0,0 +1,34 @@\n+error: `foo @` is not allowed in a tuple\n+  --> $DIR/issue-74702.rs:2:10\n+   |\n+LL |     let (foo @ ..,) = (0, 0);\n+   |          ^^^^^^^^ this is only allowed in slice patterns\n+   |\n+   = help: remove this and bind each tuple field independently\n+help: if you don't need to use the contents of foo, discard the tuple's remaining fields\n+   |\n+LL |     let (..,) = (0, 0);\n+   |          ^^\n+\n+error: `..` patterns are not allowed here\n+  --> $DIR/issue-74702.rs:2:16\n+   |\n+LL |     let (foo @ ..,) = (0, 0);\n+   |                ^^\n+   |\n+   = note: only allowed in tuple, tuple struct, and slice patterns\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-74702.rs:2:9\n+   |\n+LL |     let (foo @ ..,) = (0, 0);\n+   |         ^^^^^^^^^^^   ------ this expression has type `({integer}, {integer})`\n+   |         |\n+   |         expected a tuple with 2 elements, found one with 1 element\n+   |\n+   = note: expected tuple `({integer}, {integer})`\n+              found tuple `(_,)`\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "269ec3c7abe93c48e20c2d6ad33388749b1d355a", "filename": "src/test/ui/pattern/issue-74954.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74954.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2afce4058e65a23d115b90078427afb17702e44/src%2Ftest%2Fui%2Fpattern%2Fissue-74954.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74954.rs?ref=c2afce4058e65a23d115b90078427afb17702e44", "patch": "@@ -0,0 +1,7 @@\n+// check-pass\n+\n+fn main() {\n+    if let Some([b'@', filename @ ..]) = Some(b\"@abc123\") {\n+        println!(\"filename {:?}\", filename);\n+    }\n+}"}]}