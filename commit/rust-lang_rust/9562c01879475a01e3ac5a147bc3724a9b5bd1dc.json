{"sha": "9562c01879475a01e3ac5a147bc3724a9b5bd1dc", "node_id": "C_kwDOAAsO6NoAKDk1NjJjMDE4Nzk0NzVhMDFlM2FjNWExNDdiYzM3MjRhOWI1YmQxZGM", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2021-06-29T22:13:28Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2021-11-03T05:47:26Z"}, "message": "add safety comments", "tree": {"sha": "a3f16b1d033c3882c5a72e9c3627e3985178d2cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3f16b1d033c3882c5a72e9c3627e3985178d2cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9562c01879475a01e3ac5a147bc3724a9b5bd1dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9562c01879475a01e3ac5a147bc3724a9b5bd1dc", "html_url": "https://github.com/rust-lang/rust/commit/9562c01879475a01e3ac5a147bc3724a9b5bd1dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9562c01879475a01e3ac5a147bc3724a9b5bd1dc/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f92241d2511f5f8dcfdb94abfa8b4274360d1ece", "url": "https://api.github.com/repos/rust-lang/rust/commits/f92241d2511f5f8dcfdb94abfa8b4274360d1ece", "html_url": "https://github.com/rust-lang/rust/commit/f92241d2511f5f8dcfdb94abfa8b4274360d1ece"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "c1300cd67c086a0b4788a9106faa27898386d378", "filename": "library/std/src/io/util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9562c01879475a01e3ac5a147bc3724a9b5bd1dc/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9562c01879475a01e3ac5a147bc3724a9b5bd1dc/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Futil.rs?ref=9562c01879475a01e3ac5a147bc3724a9b5bd1dc", "patch": "@@ -131,12 +131,14 @@ impl Read for Repeat {\n     }\n \n     fn read_buf(&mut self, buf: &mut ReadBuf<'_>) -> io::Result<()> {\n+        // SAFETY: No uninit bytes are being written\n         for slot in unsafe { buf.unfilled_mut() } {\n             slot.write(self.byte);\n         }\n \n         let remaining = buf.remaining();\n \n+        // SAFETY: the entire unfilled portion of buf has been initialized\n         unsafe {\n             buf.assume_init(remaining);\n         }"}]}