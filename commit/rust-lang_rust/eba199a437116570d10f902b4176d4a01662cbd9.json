{"sha": "eba199a437116570d10f902b4176d4a01662cbd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYTE5OWE0MzcxMTY1NzBkMTBmOTAyYjQxNzZkNGEwMTY2MmNiZDk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-11T10:50:03Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-11T10:50:03Z"}, "message": "Document the reason for `Pointer`'s existence", "tree": {"sha": "e14814232d75759bcbc037ce201b2f19f8db017f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e14814232d75759bcbc037ce201b2f19f8db017f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eba199a437116570d10f902b4176d4a01662cbd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eba199a437116570d10f902b4176d4a01662cbd9", "html_url": "https://github.com/rust-lang/rust/commit/eba199a437116570d10f902b4176d4a01662cbd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eba199a437116570d10f902b4176d4a01662cbd9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dd6ef8301df00293f944c74b5793c25f55bdf13", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd6ef8301df00293f944c74b5793c25f55bdf13", "html_url": "https://github.com/rust-lang/rust/commit/0dd6ef8301df00293f944c74b5793c25f55bdf13"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "4bda56a2877f999a1f0737507da611320328a081", "filename": "src/value.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eba199a437116570d10f902b4176d4a01662cbd9/src%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eba199a437116570d10f902b4176d4a01662cbd9/src%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue.rs?ref=eba199a437116570d10f902b4176d4a01662cbd9", "patch": "@@ -41,6 +41,10 @@ pub enum Value {\n /// A wrapper type around `PrimVal` that cannot be turned back into a `PrimVal` accidentally.\n /// This type clears up a few APIs where having a `PrimVal` argument for something that is\n /// potentially an integer pointer or a pointer to an allocation was unclear.\n+///\n+/// I (@oli-obk) believe it is less easy to mix up generic primvals and primvals that are just\n+/// the representation of pointers. Also all the sites that convert between primvals and pointers\n+/// are explicit now (and rare!)\n #[derive(Clone, Copy, Debug)]\n pub struct Pointer {\n     primval: PrimVal,"}]}