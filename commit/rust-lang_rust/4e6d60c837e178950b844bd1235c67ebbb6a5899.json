{"sha": "4e6d60c837e178950b844bd1235c67ebbb6a5899", "node_id": "C_kwDOAAsO6NoAKDRlNmQ2MGM4MzdlMTc4OTUwYjg0NGJkMTIzNWM2N2ViYmI2YTU4OTk", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-12T11:24:59Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-23T19:30:16Z"}, "message": "Fix alloc size", "tree": {"sha": "1623cfcc51294568ab8818b41099bbda823cb368", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1623cfcc51294568ab8818b41099bbda823cb368"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e6d60c837e178950b844bd1235c67ebbb6a5899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e6d60c837e178950b844bd1235c67ebbb6a5899", "html_url": "https://github.com/rust-lang/rust/commit/4e6d60c837e178950b844bd1235c67ebbb6a5899", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e6d60c837e178950b844bd1235c67ebbb6a5899/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "979d1a2c78a3fd45807eb28ccff5aeea37128e0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/979d1a2c78a3fd45807eb28ccff5aeea37128e0f", "html_url": "https://github.com/rust-lang/rust/commit/979d1a2c78a3fd45807eb28ccff5aeea37128e0f"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "c6d42308596cb2f51ba91c7bc3485a16872413c1", "filename": "library/panic_unwind/src/emcc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4e6d60c837e178950b844bd1235c67ebbb6a5899/library%2Fpanic_unwind%2Fsrc%2Femcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e6d60c837e178950b844bd1235c67ebbb6a5899/library%2Fpanic_unwind%2Fsrc%2Femcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_unwind%2Fsrc%2Femcc.rs?ref=4e6d60c837e178950b844bd1235c67ebbb6a5899", "patch": "@@ -95,8 +95,7 @@ pub unsafe fn cleanup(ptr: *mut u8) -> Box<dyn Any + Send> {\n }\n \n pub unsafe fn panic(data: Box<dyn Any + Send>) -> u32 {\n-    let sz = mem::size_of_val(&data);\n-    let exception = __cxa_allocate_exception(sz) as *mut Exception;\n+    let exception = __cxa_allocate_exception(mem::size_of::<Exception>()) as *mut Exception;\n     if exception.is_null() {\n         return uw::_URC_FATAL_PHASE1_ERROR as u32;\n     }"}]}