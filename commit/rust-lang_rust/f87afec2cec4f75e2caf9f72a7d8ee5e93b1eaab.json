{"sha": "f87afec2cec4f75e2caf9f72a7d8ee5e93b1eaab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4N2FmZWMyY2VjNGY3NWUyY2FmOWY3MmE3ZDhlZTVlOTNiMWVhYWI=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-04-02T03:55:35Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-04-02T03:55:35Z"}, "message": "Use Self over specific type in return position", "tree": {"sha": "7c814d41dffb05b28b33b311a0a944a5557e8c6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c814d41dffb05b28b33b311a0a944a5557e8c6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f87afec2cec4f75e2caf9f72a7d8ee5e93b1eaab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f87afec2cec4f75e2caf9f72a7d8ee5e93b1eaab", "html_url": "https://github.com/rust-lang/rust/commit/f87afec2cec4f75e2caf9f72a7d8ee5e93b1eaab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f87afec2cec4f75e2caf9f72a7d8ee5e93b1eaab/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76b11980ad416c3ad6143504c2277757ecacf9b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/76b11980ad416c3ad6143504c2277757ecacf9b5", "html_url": "https://github.com/rust-lang/rust/commit/76b11980ad416c3ad6143504c2277757ecacf9b5"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "119bdfcb0f4425807b6a2d529ac989ae2ddc7de9", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f87afec2cec4f75e2caf9f72a7d8ee5e93b1eaab/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f87afec2cec4f75e2caf9f72a7d8ee5e93b1eaab/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=f87afec2cec4f75e2caf9f72a7d8ee5e93b1eaab", "patch": "@@ -734,7 +734,7 @@ impl OpenOptions {\n     /// let file = options.read(true).open(\"foo.txt\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn new() -> OpenOptions {\n+    pub fn new() -> Self {\n         OpenOptions(fs_imp::OpenOptions::new())\n     }\n \n@@ -751,7 +751,7 @@ impl OpenOptions {\n     /// let file = OpenOptions::new().read(true).open(\"foo.txt\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn read(&mut self, read: bool) -> &mut OpenOptions {\n+    pub fn read(&mut self, read: bool) -> &mut Self {\n         self.0.read(read);\n         self\n     }\n@@ -772,7 +772,7 @@ impl OpenOptions {\n     /// let file = OpenOptions::new().write(true).open(\"foo.txt\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn write(&mut self, write: bool) -> &mut OpenOptions {\n+    pub fn write(&mut self, write: bool) -> &mut Self {\n         self.0.write(write);\n         self\n     }\n@@ -819,7 +819,7 @@ impl OpenOptions {\n     /// let file = OpenOptions::new().append(true).open(\"foo.txt\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn append(&mut self, append: bool) -> &mut OpenOptions {\n+    pub fn append(&mut self, append: bool) -> &mut Self {\n         self.0.append(append);\n         self\n     }\n@@ -839,7 +839,7 @@ impl OpenOptions {\n     /// let file = OpenOptions::new().write(true).truncate(true).open(\"foo.txt\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn truncate(&mut self, truncate: bool) -> &mut OpenOptions {\n+    pub fn truncate(&mut self, truncate: bool) -> &mut Self {\n         self.0.truncate(truncate);\n         self\n     }\n@@ -860,7 +860,7 @@ impl OpenOptions {\n     /// let file = OpenOptions::new().write(true).create(true).open(\"foo.txt\");\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn create(&mut self, create: bool) -> &mut OpenOptions {\n+    pub fn create(&mut self, create: bool) -> &mut Self {\n         self.0.create(create);\n         self\n     }\n@@ -893,7 +893,7 @@ impl OpenOptions {\n     ///                              .open(\"foo.txt\");\n     /// ```\n     #[stable(feature = \"expand_open_options2\", since = \"1.9.0\")]\n-    pub fn create_new(&mut self, create_new: bool) -> &mut OpenOptions {\n+    pub fn create_new(&mut self, create_new: bool) -> &mut Self {\n         self.0.create_new(create_new);\n         self\n     }"}]}