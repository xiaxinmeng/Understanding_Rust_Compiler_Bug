{"sha": "4c9c1cd199d18719351034a4c358f5a6878880b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOWMxY2QxOTlkMTg3MTkzNTEwMzRhNGMzNThmNWE2ODc4ODgwYjA=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-11T20:40:13Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-11T20:40:13Z"}, "message": "Fix dependency bug iface-did-of-impl resolving\n\nBy simply not resolving that def id until the typeck pass.\n\nCloses #1494", "tree": {"sha": "2d4a2eb75a788939abe141bacab761c14adea9a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d4a2eb75a788939abe141bacab761c14adea9a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c9c1cd199d18719351034a4c358f5a6878880b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9c1cd199d18719351034a4c358f5a6878880b0", "html_url": "https://github.com/rust-lang/rust/commit/4c9c1cd199d18719351034a4c358f5a6878880b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c9c1cd199d18719351034a4c358f5a6878880b0/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34d7f05292911d5582ede20fd871f600447ad59d", "url": "https://api.github.com/repos/rust-lang/rust/commits/34d7f05292911d5582ede20fd871f600447ad59d", "html_url": "https://github.com/rust-lang/rust/commit/34d7f05292911d5582ede20fd871f600447ad59d"}], "stats": {"total": 42, "additions": 12, "deletions": 30}, "files": [{"sha": "b16120d1bec1eb2df4ff8bcb412b58eb92464c51", "filename": "src/comp/metadata/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmetadata%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmetadata%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcommon.rs?ref=4c9c1cd199d18719351034a4c358f5a6878880b0", "patch": "@@ -68,7 +68,6 @@ const tag_mod_impl: uint = 0x30u;\n \n const tag_item_method: uint = 0x31u;\n const tag_impl_iface: uint = 0x32u;\n-const tag_impl_iface_did: uint = 0x33u;\n \n // discriminator value for variants\n const tag_disr_val: uint = 0x34u;"}, {"sha": "c076b044f52b134b48969c67a45e24f28af6e84f", "filename": "src/comp/metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fdecoder.rs?ref=4c9c1cd199d18719351034a4c358f5a6878880b0", "patch": "@@ -126,16 +126,6 @@ fn item_impl_iface(item: ebml::doc, tcx: ty::ctxt, cdata: cmd)\n     result\n }\n \n-fn item_impl_iface_did(item: ebml::doc, cdata: cmd)\n-    -> option::t<ast::def_id> {\n-    let result = none;\n-    ebml::tagged_docs(item, tag_impl_iface_did) {|doc|\n-        let did = translate_def_id(cdata, parse_def_id(ebml::doc_data(doc)));\n-        result = some(did);\n-    }\n-    result\n-}\n-\n fn item_ty_param_bounds(item: ebml::doc, tcx: ty::ctxt, cdata: cmd)\n     -> @[ty::param_bounds] {\n     let bounds = [];\n@@ -297,8 +287,7 @@ fn get_impls_for_mod(cdata: cmd, m_id: ast::node_id,\n         let item = lookup_item(did.node, data), nm = item_name(item);\n         if alt name { some(n) { n == nm } none. { true } } {\n             let base_tps = item_ty_param_count(doc);\n-            let i_did = item_impl_iface_did(item, cdata);\n-            result += [@{did: did, iface_did: i_did, ident: nm,\n+            result += [@{did: did, ident: nm,\n                          methods: item_impl_methods(cdata, item, base_tps)}];\n         }\n     }"}, {"sha": "634947941d64abb95a338e3c85b19e47dfb84d1f", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=4c9c1cd199d18719351034a4c358f5a6878880b0", "patch": "@@ -405,13 +405,6 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n             ebml::start_tag(ebml_w, tag_impl_iface);\n             write_type(ecx, ebml_w, i_ty);\n             ebml::end_tag(ebml_w);\n-            ebml::start_tag(ebml_w, tag_impl_iface_did);\n-            alt ty::struct(tcx, i_ty) {\n-              ty::ty_iface(did, _) {\n-                ebml_w.writer.write(str::bytes(def_to_str(did)));\n-              }\n-            }\n-            ebml::end_tag(ebml_w);\n           }\n           _ {}\n         }"}, {"sha": "8925ca6b3129552a8cf09efb3db6ad97570e3bdc", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=4c9c1cd199d18719351034a4c358f5a6878880b0", "patch": "@@ -1825,8 +1825,7 @@ fn check_exports(e: @env) {\n // Impl resolution\n \n type method_info = {did: def_id, n_tps: uint, ident: ast::ident};\n-type _impl = {did: def_id, iface_did: option::t<def_id>,\n-              ident: ast::ident, methods: [@method_info]};\n+type _impl = {did: def_id, ident: ast::ident, methods: [@method_info]};\n type iscopes = list<@[@_impl]>;\n \n fn resolve_impls(e: @env, c: @ast::crate) {\n@@ -1893,12 +1892,6 @@ fn find_impls_in_item(e: env, i: @ast::item, &impls: [@_impl],\n              _ { true }\n            } {\n             impls += [@{did: local_def(i.id),\n-                        iface_did: alt ifce {\n-                            some(@{node: ast::ty_path(_, id), _}) {\n-                                some(def_id_of_def(e.def_map.get(id)))\n-                            }\n-                            _ { none }\n-                        },\n                         ident: i.ident,\n                         methods: vec::map(mthds, {|m|\n                             @{did: local_def(m.id),"}, {"sha": "0b0e2bdfe703ce4919a8abc04a17575c9c53106f", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=4c9c1cd199d18719351034a4c358f5a6878880b0", "patch": "@@ -2947,7 +2947,15 @@ mod dict {\n             std::list::iter(isc) {|impls|\n                 if option::is_some(found) { ret; }\n                 for im in *impls {\n-                    if im.iface_did == some(iface_id) {\n+                    let match = alt ty::impl_iface(tcx, im.did) {\n+                      some(ity) {\n+                        alt ty::struct(tcx, ity) {\n+                          ty::ty_iface(id, _) { id == iface_id }\n+                        }\n+                      }\n+                      _ { false }\n+                    };\n+                    if match {\n                         let {n_tps, ty: self_ty} = impl_self_ty(tcx, im.did);\n                         let {vars, ty: self_ty} = if n_tps > 0u {\n                             bind_params(fcx, self_ty, n_tps)"}, {"sha": "7b9157f2afe111f2d6dac2b0abe9df18d12511c4", "filename": "src/libstd/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Flibstd%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9c1cd199d18719351034a4c358f5a6878880b0/src%2Flibstd%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftest.rs?ref=4c9c1cd199d18719351034a4c358f5a6878880b0", "patch": "@@ -31,7 +31,7 @@ native mod rustrt {\n }\n \n // FIXME Kludge to work around issue #1494 . Simply import io::writer_util\n-// when that is fixed.\n+// after the next snapshot.\n impl writer_util for io::writer {\n     fn write_str(s: str) { self.write(str::bytes(s)); }\n     fn write_line(s: str) { self.write(str::bytes(s + \"\\n\")); }"}]}