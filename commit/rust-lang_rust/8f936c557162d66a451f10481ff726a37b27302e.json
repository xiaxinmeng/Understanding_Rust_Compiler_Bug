{"sha": "8f936c557162d66a451f10481ff726a37b27302e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOTM2YzU1NzE2MmQ2NmE0NTFmMTA0ODFmZjcyNmEzN2IyNzMwMmU=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-16T17:25:09Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-16T17:25:09Z"}, "message": "Add builtin derives to attribute completion fixtures", "tree": {"sha": "2b5c4d8cd46fbde6eeb4fa0cc285f71c013e98ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b5c4d8cd46fbde6eeb4fa0cc285f71c013e98ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f936c557162d66a451f10481ff726a37b27302e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f936c557162d66a451f10481ff726a37b27302e", "html_url": "https://github.com/rust-lang/rust/commit/8f936c557162d66a451f10481ff726a37b27302e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f936c557162d66a451f10481ff726a37b27302e/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c034c084d79f20c5208208a891f38bf582433e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c034c084d79f20c5208208a891f38bf582433e6", "html_url": "https://github.com/rust-lang/rust/commit/1c034c084d79f20c5208208a891f38bf582433e6"}], "stats": {"total": 74, "additions": 67, "deletions": 7}, "files": [{"sha": "c59add6c544d318b9e7fb5ce28d3be028bbf664b", "filename": "crates/ide_completion/src/completions/attribute/derive.rs", "status": "modified", "additions": 67, "deletions": 7, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/8f936c557162d66a451f10481ff726a37b27302e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f936c557162d66a451f10481ff726a37b27302e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs?ref=8f936c557162d66a451f10481ff726a37b27302e", "patch": "@@ -83,7 +83,31 @@ mod tests {\n     use crate::{test_utils::completion_list, CompletionKind};\n \n     fn check(ra_fixture: &str, expect: Expect) {\n-        let actual = completion_list(ra_fixture, CompletionKind::Attribute);\n+        let builtin_derives = r#\"\n+#[rustc_builtin_macro]\n+pub macro Clone {}\n+#[rustc_builtin_macro]\n+pub macro Copy {}\n+#[rustc_builtin_macro]\n+pub macro Default {}\n+#[rustc_builtin_macro]\n+pub macro Debug {}\n+#[rustc_builtin_macro]\n+pub macro Hash {}\n+#[rustc_builtin_macro]\n+pub macro PartialEq {}\n+#[rustc_builtin_macro]\n+pub macro Eq {}\n+#[rustc_builtin_macro]\n+pub macro PartialOrd {}\n+#[rustc_builtin_macro]\n+pub macro Ord {}\n+\n+\"#;\n+        let actual = completion_list(\n+            &format!(\"{} {}\", builtin_derives, ra_fixture),\n+            CompletionKind::Attribute,\n+        );\n         expect.assert_eq(&actual);\n     }\n \n@@ -94,19 +118,55 @@ mod tests {\n \n     #[test]\n     fn empty_derive() {\n-        // FIXME: Add build-in derives to fixture.\n-        check(r#\"#[derive($0)] struct Test;\"#, expect![[r#\"\"#]]);\n+        check(\n+            r#\"#[derive($0)] struct Test;\"#,\n+            expect![[r#\"\n+            at PartialEq\n+            at Default\n+            at PartialEq, Eq\n+            at PartialEq, Eq, PartialOrd, Ord\n+            at Clone, Copy\n+            at Debug\n+            at Clone\n+            at Hash\n+            at PartialEq, PartialOrd\n+        \"#]],\n+        );\n     }\n \n     #[test]\n     fn derive_with_input() {\n-        // FIXME: Add build-in derives to fixture.\n-        check(r#\"#[derive(serde::Serialize, PartialEq, $0)] struct Test;\"#, expect![[r#\"\"#]])\n+        check(\n+            r#\"#[derive(serde::Serialize, PartialEq, $0)] struct Test;\"#,\n+            expect![[r#\"\n+            at PartialEq\n+            at Default\n+            at Eq\n+            at Eq, PartialOrd, Ord\n+            at Clone, Copy\n+            at Debug\n+            at Clone\n+            at Hash\n+            at PartialOrd\n+        \"#]],\n+        )\n     }\n \n     #[test]\n     fn derive_with_input2() {\n-        // FIXME: Add build-in derives to fixture.\n-        check(r#\"#[derive($0 serde::Serialize, PartialEq)] struct Test;\"#, expect![[r#\"\"#]])\n+        check(\n+            r#\"#[derive($0 serde::Serialize, PartialEq)] struct Test;\"#,\n+            expect![[r#\"\n+            at PartialEq\n+            at Default\n+            at Eq\n+            at Eq, PartialOrd, Ord\n+            at Clone, Copy\n+            at Debug\n+            at Clone\n+            at Hash\n+            at PartialOrd\n+        \"#]],\n+        )\n     }\n }"}]}