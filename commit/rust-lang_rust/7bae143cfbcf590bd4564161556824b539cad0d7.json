{"sha": "7bae143cfbcf590bd4564161556824b539cad0d7", "node_id": "C_kwDOAAsO6NoAKDdiYWUxNDNjZmJjZjU5MGJkNDU2NDE2MTU1NjgyNGI1MzljYWQwZDc", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-04-24T15:22:57Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-04-24T15:22:57Z"}, "message": "Update miri test.", "tree": {"sha": "b498af9806610e4ce143168042385e2707a3748e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b498af9806610e4ce143168042385e2707a3748e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bae143cfbcf590bd4564161556824b539cad0d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bae143cfbcf590bd4564161556824b539cad0d7", "html_url": "https://github.com/rust-lang/rust/commit/7bae143cfbcf590bd4564161556824b539cad0d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bae143cfbcf590bd4564161556824b539cad0d7/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd", "html_url": "https://github.com/rust-lang/rust/commit/9cc5949f9f386fcb8e4492cc6b112a11b342e1dd"}], "stats": {"total": 54, "additions": 28, "deletions": 26}, "files": [{"sha": "f04dfab36cad8e46755a8e624a787971c738076d", "filename": "src/tools/miri/tests/fail/panic/double_panic.stderr", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/7bae143cfbcf590bd4564161556824b539cad0d7/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bae143cfbcf590bd4564161556824b539cad0d7/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fdouble_panic.stderr?ref=7bae143cfbcf590bd4564161556824b539cad0d7", "patch": "@@ -12,57 +12,59 @@ stack backtrace:\n  at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n    4: <std::sys_common::backtrace::_print::DisplayBacktrace as std::fmt::Display>::fmt\n  at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-   5: std::fmt::write\n+   5: core::fmt::rt::Argument::fmt\n+ at RUSTLIB/core/src/fmt/rt.rs:LL:CC\n+   6: std::fmt::write\n  at RUSTLIB/core/src/fmt/mod.rs:LL:CC\n-   6: <std::sys::PLATFORM::stdio::Stderr as std::io::Write>::write_fmt\n+   7: <std::sys::PLATFORM::stdio::Stderr as std::io::Write>::write_fmt\n  at RUSTLIB/std/src/io/mod.rs:LL:CC\n-   7: std::sys_common::backtrace::_print\n+   8: std::sys_common::backtrace::_print\n  at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-   8: std::sys_common::backtrace::print\n+   9: std::sys_common::backtrace::print\n  at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-   9: std::panicking::default_hook::{closure#1}\n+  10: std::panicking::default_hook::{closure#1}\n  at RUSTLIB/std/src/panicking.rs:LL:CC\n-  10: std::panicking::default_hook\n+  11: std::panicking::default_hook\n  at RUSTLIB/std/src/panicking.rs:LL:CC\n-  11: std::panicking::rust_panic_with_hook\n+  12: std::panicking::rust_panic_with_hook\n  at RUSTLIB/std/src/panicking.rs:LL:CC\n-  12: std::rt::begin_panic::{closure#0}\n+  13: std::rt::begin_panic::{closure#0}\n  at RUSTLIB/std/src/panicking.rs:LL:CC\n-  13: std::sys_common::backtrace::__rust_end_short_backtrace\n+  14: std::sys_common::backtrace::__rust_end_short_backtrace\n  at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-  14: std::rt::begin_panic\n+  15: std::rt::begin_panic\n  at RUSTLIB/std/src/panicking.rs:LL:CC\n-  15: <Foo as std::ops::Drop>::drop\n+  16: <Foo as std::ops::Drop>::drop\n  at $DIR/double_panic.rs:LL:CC\n-  16: std::ptr::drop_in_place - shim(Some(Foo))\n+  17: std::ptr::drop_in_place - shim(Some(Foo))\n  at RUSTLIB/core/src/ptr/mod.rs:LL:CC\n-  17: main\n+  18: main\n  at $DIR/double_panic.rs:LL:CC\n-  18: <fn() as std::ops::FnOnce<()>>::call_once - shim(fn())\n+  19: <fn() as std::ops::FnOnce<()>>::call_once - shim(fn())\n  at RUSTLIB/core/src/ops/function.rs:LL:CC\n-  19: std::sys_common::backtrace::__rust_begin_short_backtrace\n+  20: std::sys_common::backtrace::__rust_begin_short_backtrace\n  at RUSTLIB/std/src/sys_common/backtrace.rs:LL:CC\n-  20: std::rt::lang_start::{closure#0}\n+  21: std::rt::lang_start::{closure#0}\n  at RUSTLIB/std/src/rt.rs:LL:CC\n-  21: std::ops::function::impls::call_once\n+  22: std::ops::function::impls::call_once\n  at RUSTLIB/core/src/ops/function.rs:LL:CC\n-  22: std::panicking::r#try::do_call\n+  23: std::panicking::r#try::do_call\n  at RUSTLIB/std/src/panicking.rs:LL:CC\n-  23: std::panicking::r#try\n+  24: std::panicking::r#try\n  at RUSTLIB/std/src/panicking.rs:LL:CC\n-  24: std::panic::catch_unwind\n+  25: std::panic::catch_unwind\n  at RUSTLIB/std/src/panic.rs:LL:CC\n-  25: std::rt::lang_start_internal::{closure#2}\n+  26: std::rt::lang_start_internal::{closure#2}\n  at RUSTLIB/std/src/rt.rs:LL:CC\n-  26: std::panicking::r#try::do_call\n+  27: std::panicking::r#try::do_call\n  at RUSTLIB/std/src/panicking.rs:LL:CC\n-  27: std::panicking::r#try\n+  28: std::panicking::r#try\n  at RUSTLIB/std/src/panicking.rs:LL:CC\n-  28: std::panic::catch_unwind\n+  29: std::panic::catch_unwind\n  at RUSTLIB/std/src/panic.rs:LL:CC\n-  29: std::rt::lang_start_internal\n+  30: std::rt::lang_start_internal\n  at RUSTLIB/std/src/rt.rs:LL:CC\n-  30: std::rt::lang_start\n+  31: std::rt::lang_start\n  at RUSTLIB/std/src/rt.rs:LL:CC\n thread panicked while panicking. aborting.\n error: abnormal termination: the program aborted execution"}]}