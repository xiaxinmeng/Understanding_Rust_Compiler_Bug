{"sha": "78bcd12b17ae32fb74815cb2908a5149d5713415", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4YmNkMTJiMTdhZTMyZmI3NDgxNWNiMjkwOGE1MTQ5ZDU3MTM0MTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-27T12:05:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-27T12:05:37Z"}, "message": "make sure we only terminate main thread once TLS is initialized", "tree": {"sha": "80dc040abb40227b09e43e4a85c8f2cc1fe1f31f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80dc040abb40227b09e43e4a85c8f2cc1fe1f31f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78bcd12b17ae32fb74815cb2908a5149d5713415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78bcd12b17ae32fb74815cb2908a5149d5713415", "html_url": "https://github.com/rust-lang/rust/commit/78bcd12b17ae32fb74815cb2908a5149d5713415", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78bcd12b17ae32fb74815cb2908a5149d5713415/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66aa3d0247fd47051077f005d2d1462316c83fe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/66aa3d0247fd47051077f005d2d1462316c83fe1", "html_url": "https://github.com/rust-lang/rust/commit/66aa3d0247fd47051077f005d2d1462316c83fe1"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "7bb51d2dea61f9a9901f986a638ee6838f438324", "filename": "tests/run-pass/threadleak_ignored.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/78bcd12b17ae32fb74815cb2908a5149d5713415/tests%2Frun-pass%2Fthreadleak_ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78bcd12b17ae32fb74815cb2908a5149d5713415/tests%2Frun-pass%2Fthreadleak_ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fthreadleak_ignored.rs?ref=78bcd12b17ae32fb74815cb2908a5149d5713415", "patch": "@@ -18,9 +18,20 @@ thread_local! {\n \n fn main() {\n     X.with(|x| *x.borrow_mut() = Some(LoudDrop(0)));\n+\n+    // Set up a channel so that we can learn when the other thread initialized `X`\n+    // (so that we are sure there is something to drop).\n+    let (send, recv) = std::sync::mpsc::channel::<()>();\n     \n-    let _detached = std::thread::spawn(|| {\n+    let _detached = std::thread::spawn(move || {\n         X.with(|x| *x.borrow_mut() = Some(LoudDrop(1)));\n+        send.send(()).unwrap();\n+        std::thread::yield_now();\n         loop {}\n     });\n+\n+    std::thread::yield_now();\n+\n+    // Wait until child thread has initialized its `X`.\n+    let () = recv.recv().unwrap();\n }"}]}