{"sha": "8b781b0ffdc751924520f5a705c4e60e7dd4ab36", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNzgxYjBmZmRjNzUxOTI0NTIwZjVhNzA1YzRlNjBlN2RkNGFiMzY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-04T23:49:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-04T23:49:52Z"}, "message": "Rollup merge of #71904 - euclio:function-typo, r=jonas-schievink\n\nfix typo in function name\n\nDrive-by fix.", "tree": {"sha": "ff298794d1db2312cfc0fe0f29fbb9d2cb8c01f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff298794d1db2312cfc0fe0f29fbb9d2cb8c01f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b781b0ffdc751924520f5a705c4e60e7dd4ab36", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesKohCRBK7hj4Ov3rIwAAdHIIAErvFOMf6gexZ556F4bLkSyr\n9hbdOuXvvRiqlKfgeBV1ccirXkHnpACtIZlHs3c/K4E6uD44hIMHwk+MfFdxM5j5\n2achciKvzxqTC+oQ00cX8yvJjffV9YiCbRRc4XmnJkz732E4ZLOX0P+MT0niWiuU\nU4rFkADwgdUlkgQaw6yOwAnxwdesRpPTmFvbosaWqapBOetcld+UzBr1r/Mcq/16\nbMpoMtiawJrXKitmbQ9qp6EL5rX463K7JpxH9T2P0OzTGt3oUc8YclzwQbEo2lzD\n4yG7KQtwm5oX72L+fFuBGH516RPGEmFbk0vDaK5Qa66K9UZafHUGQddDRoZWEBg=\n=gE6e\n-----END PGP SIGNATURE-----\n", "payload": "tree ff298794d1db2312cfc0fe0f29fbb9d2cb8c01f6\nparent ad74ce9d040dee4d0810c5e2cc8c11fedb8f2225\nparent 36f51f97c732a95d90eb8170f5e2c46e505fb9b5\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588636192 +0200\ncommitter GitHub <noreply@github.com> 1588636192 +0200\n\nRollup merge of #71904 - euclio:function-typo, r=jonas-schievink\n\nfix typo in function name\n\nDrive-by fix.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b781b0ffdc751924520f5a705c4e60e7dd4ab36", "html_url": "https://github.com/rust-lang/rust/commit/8b781b0ffdc751924520f5a705c4e60e7dd4ab36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b781b0ffdc751924520f5a705c4e60e7dd4ab36/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad74ce9d040dee4d0810c5e2cc8c11fedb8f2225", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad74ce9d040dee4d0810c5e2cc8c11fedb8f2225", "html_url": "https://github.com/rust-lang/rust/commit/ad74ce9d040dee4d0810c5e2cc8c11fedb8f2225"}, {"sha": "36f51f97c732a95d90eb8170f5e2c46e505fb9b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/36f51f97c732a95d90eb8170f5e2c46e505fb9b5", "html_url": "https://github.com/rust-lang/rust/commit/36f51f97c732a95d90eb8170f5e2c46e505fb9b5"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "cea7e8176b67fbcc7b0e936eda8130ebb42f524f", "filename": "src/librustc_builtin_macros/deriving/debug.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b781b0ffdc751924520f5a705c4e60e7dd4ab36/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b781b0ffdc751924520f5a705c4e60e7dd4ab36/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs?ref=8b781b0ffdc751924520f5a705c4e60e7dd4ab36", "patch": "@@ -88,7 +88,7 @@ fn show_substructure(cx: &mut ExtCtxt<'_>, span: Span, substr: &Substructure<'_>\n \n                 // Use `let _ = expr;` to avoid triggering the\n                 // unused_results lint.\n-                stmts.push(stmt_let_undescore(cx, span, expr));\n+                stmts.push(stmt_let_underscore(cx, span, expr));\n             }\n         }\n         ast::VariantData::Struct(..) => {\n@@ -112,7 +112,7 @@ fn show_substructure(cx: &mut ExtCtxt<'_>, span: Span, substr: &Substructure<'_>\n                     Ident::new(sym::field, span),\n                     vec![name, field],\n                 );\n-                stmts.push(stmt_let_undescore(cx, span, expr));\n+                stmts.push(stmt_let_underscore(cx, span, expr));\n             }\n         }\n     }\n@@ -124,7 +124,7 @@ fn show_substructure(cx: &mut ExtCtxt<'_>, span: Span, substr: &Substructure<'_>\n     cx.expr_block(block)\n }\n \n-fn stmt_let_undescore(cx: &mut ExtCtxt<'_>, sp: Span, expr: P<ast::Expr>) -> ast::Stmt {\n+fn stmt_let_underscore(cx: &mut ExtCtxt<'_>, sp: Span, expr: P<ast::Expr>) -> ast::Stmt {\n     let local = P(ast::Local {\n         pat: cx.pat_wild(sp),\n         ty: None,"}]}