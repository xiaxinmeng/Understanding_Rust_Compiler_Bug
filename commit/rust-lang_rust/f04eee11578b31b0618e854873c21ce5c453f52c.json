{"sha": "f04eee11578b31b0618e854873c21ce5c453f52c", "node_id": "C_kwDOAAsO6NoAKGYwNGVlZTExNTc4YjMxYjA2MThlODU0ODczYzIxY2U1YzQ1M2Y1MmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-13T20:25:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-13T20:25:39Z"}, "message": "Rollup merge of #101770 - aDotInTheVoid:rdj-index-clone, r=GuillaumeGomez\n\nRustdoc-Json: Don't loose subitems of foreign traits.\n\nPreviously, we'd clone the index, and extend it with foreign traits. But when doing this, traits would render their subitems without them going into the index being used in the output leading to dangling ID's.\n\nr? `@GuillaumeGomez`", "tree": {"sha": "3c3123c176fe5c86d570c18697f8598c85f47c41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c3123c176fe5c86d570c18697f8598c85f47c41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f04eee11578b31b0618e854873c21ce5c453f52c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjIOdDCRBK7hj4Ov3rIwAAybIIADy1eF5N5uQYFTThiQc9n91R\n7pVnZwj2xzN7UdgwMZ4hTVDAL4MTu76ZbnrPTCeygRlXnuf7retCvJ4xiL72vlCr\nsAXf159zognbS2gRHf5qyvffueuxE7+4dVRVXGOOBBezWn6DmXZJbIBwI9n8oX7j\nTaEWNXuwVnvP16JqPLF0f2sMwjBq2Jx/9VXyd9SpakmXZR0uvSMCoX94myH7Q65a\nLOQImyEDKO9X3dgZcF8r2YgP8//UzKH1z+yCS5YMFcbzPn/ShrpNXRFqyBnjlDIg\nQ7s1q6T9/g6uNRYCERUWkR+SHAE9NCteaSu++AQDvjLZeiDDYar6HUPQCeUsCXo=\n=8d+r\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c3123c176fe5c86d570c18697f8598c85f47c41\nparent 68dc6396a589c155359ef6673669c5576f54605d\nparent e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663100739 +0200\ncommitter GitHub <noreply@github.com> 1663100739 +0200\n\nRollup merge of #101770 - aDotInTheVoid:rdj-index-clone, r=GuillaumeGomez\n\nRustdoc-Json: Don't loose subitems of foreign traits.\n\nPreviously, we'd clone the index, and extend it with foreign traits. But when doing this, traits would render their subitems without them going into the index being used in the output leading to dangling ID's.\n\nr? `@GuillaumeGomez`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f04eee11578b31b0618e854873c21ce5c453f52c", "html_url": "https://github.com/rust-lang/rust/commit/f04eee11578b31b0618e854873c21ce5c453f52c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f04eee11578b31b0618e854873c21ce5c453f52c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68dc6396a589c155359ef6673669c5576f54605d", "url": "https://api.github.com/repos/rust-lang/rust/commits/68dc6396a589c155359ef6673669c5576f54605d", "html_url": "https://github.com/rust-lang/rust/commit/68dc6396a589c155359ef6673669c5576f54605d"}, {"sha": "e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd", "html_url": "https://github.com/rust-lang/rust/commit/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "0026c4cbdca2ce609a64d5df04f02c3680bb1d33", "filename": "src/etc/check_missing_items.py", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f04eee11578b31b0618e854873c21ce5c453f52c/src%2Fetc%2Fcheck_missing_items.py", "raw_url": "https://github.com/rust-lang/rust/raw/f04eee11578b31b0618e854873c21ce5c453f52c/src%2Fetc%2Fcheck_missing_items.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcheck_missing_items.py?ref=f04eee11578b31b0618e854873c21ce5c453f52c", "patch": "@@ -49,6 +49,8 @@ def check_generic_param(param):\n         ty = param[\"kind\"][\"type\"]\n         if ty[\"default\"]:\n             check_type(ty[\"default\"])\n+        for bound in ty[\"bounds\"]:\n+            check_generic_bound(bound)\n     elif \"const\" in param[\"kind\"]:\n         check_type(param[\"kind\"][\"const\"])\n \n@@ -88,8 +90,11 @@ def check_path(path):\n                 check_type(input_ty)\n             if args[\"parenthesized\"][\"output\"]:\n                 check_type(args[\"parenthesized\"][\"output\"])\n-    if not valid_id(path[\"id\"]):\n-        print(\"Type contained an invalid ID:\", path[\"id\"])\n+\n+    if path[\"id\"] in crate[\"index\"]:\n+        work_list.add(path[\"id\"])\n+    elif path[\"id\"] not in crate[\"paths\"]:\n+        print(\"Id not in index or paths:\", path[\"id\"])\n         sys.exit(1)\n \n def check_type(ty):"}, {"sha": "5e8f5f6fe3eb9309820afbf700f1c617928aeb8d", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f04eee11578b31b0618e854873c21ce5c453f52c/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f04eee11578b31b0618e854873c21ce5c453f52c/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=f04eee11578b31b0618e854873c21ce5c453f52c", "patch": "@@ -101,6 +101,7 @@ impl<'tcx> JsonRenderer<'tcx> {\n     }\n \n     fn get_trait_items(&mut self) -> Vec<(types::Id, types::Item)> {\n+        debug!(\"Adding foreign trait items\");\n         Rc::clone(&self.cache)\n             .traits\n             .iter()\n@@ -109,6 +110,7 @@ impl<'tcx> JsonRenderer<'tcx> {\n                 if !id.is_local() {\n                     let trait_item = &trait_item.trait_;\n                     for item in &trait_item.items {\n+                        trace!(\"Adding subitem to {id:?}: {:?}\", item.item_id);\n                         self.item(item.clone()).unwrap();\n                     }\n                     let item_id = from_item_id(id.into(), self.tcx);\n@@ -184,7 +186,9 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     /// the hashmap because certain items (traits and types) need to have their mappings for trait\n     /// implementations filled out before they're inserted.\n     fn item(&mut self, item: clean::Item) -> Result<(), Error> {\n-        trace!(\"rendering {} {:?}\", item.type_(), item.name);\n+        let item_type = item.type_();\n+        let item_name = item.name;\n+        trace!(\"rendering {} {:?}\", item_type, item_name);\n \n         // Flatten items that recursively store other items. We include orphaned items from\n         // stripped modules and etc that are otherwise reachable.\n@@ -253,6 +257,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n             }\n         }\n \n+        trace!(\"done rendering {} {:?}\", item_type, item_name);\n         Ok(())\n     }\n \n@@ -263,14 +268,20 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     fn after_krate(&mut self) -> Result<(), Error> {\n         debug!(\"Done with crate\");\n \n+        debug!(\"Adding Primitve impls\");\n         for primitive in Rc::clone(&self.cache).primitive_locations.values() {\n             self.get_impls(*primitive);\n         }\n \n         let e = ExternalCrate { crate_num: LOCAL_CRATE };\n \n+        // FIXME(adotinthevoid): Remove this, as it's not consistant with not\n+        // inlining foreign items.\n+        let foreign_trait_items = self.get_trait_items();\n         let mut index = (*self.index).clone().into_inner();\n-        index.extend(self.get_trait_items());\n+        index.extend(foreign_trait_items);\n+\n+        debug!(\"Constructing Output\");\n         // This needs to be the default HashMap for compatibility with the public interface for\n         // rustdoc-json-types\n         #[allow(rustc::default_hash_types)]"}, {"sha": "430dd1543f56180cc75bb4d6d77ee91e43240a89", "filename": "src/test/rustdoc-json/traits/uses_extern_trait.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f04eee11578b31b0618e854873c21ce5c453f52c/src%2Ftest%2Frustdoc-json%2Ftraits%2Fuses_extern_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f04eee11578b31b0618e854873c21ce5c453f52c/src%2Ftest%2Frustdoc-json%2Ftraits%2Fuses_extern_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Ftraits%2Fuses_extern_trait.rs?ref=f04eee11578b31b0618e854873c21ce5c453f52c", "patch": "@@ -0,0 +1,7 @@\n+#![no_std]\n+pub fn drop_default<T: core::default::Default>(_x: T) {}\n+\n+// FIXME(adotinthevoid): Theses shouldn't be here\n+// @has \"$.index[*][?(@.name=='Debug')]\"\n+// @set Debug_fmt = \"$.index[*][?(@.name=='Debug')].inner.items[*]\"\n+// @has \"$.index[*][?(@.name=='fmt')].id\" $Debug_fmt"}]}