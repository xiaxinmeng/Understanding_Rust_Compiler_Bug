{"sha": "5d4af58c1d2abc0895d170185796e837f37b16cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNGFmNThjMWQyYWJjMDg5NWQxNzAxODU3OTZlODM3ZjM3YjE2Y2I=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-20T15:10:00Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-29T23:48:17Z"}, "message": "iterator: implement size_hint() for FlatMap", "tree": {"sha": "dbf402e4a4504e7a7534f9291dd1c15e8d0974e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbf402e4a4504e7a7534f9291dd1c15e8d0974e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d4af58c1d2abc0895d170185796e837f37b16cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d4af58c1d2abc0895d170185796e837f37b16cb", "html_url": "https://github.com/rust-lang/rust/commit/5d4af58c1d2abc0895d170185796e837f37b16cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d4af58c1d2abc0895d170185796e837f37b16cb/comments", "author": null, "committer": null, "parents": [{"sha": "4b2931c90fbe152ca1dd3111985057778dad1ba9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b2931c90fbe152ca1dd3111985057778dad1ba9", "html_url": "https://github.com/rust-lang/rust/commit/4b2931c90fbe152ca1dd3111985057778dad1ba9"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "87390781802cda7f85f2c9153caaef60b15d219c", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5d4af58c1d2abc0895d170185796e837f37b16cb/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d4af58c1d2abc0895d170185796e837f37b16cb/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=5d4af58c1d2abc0895d170185796e837f37b16cb", "patch": "@@ -1271,6 +1271,16 @@ impl<'self, A, T: Iterator<A>, B, U: Iterator<B>> Iterator<B> for\n             }\n         }\n     }\n+\n+    #[inline]\n+    fn size_hint(&self) -> (uint, Option<uint>) {\n+        let (flo, fhi) = self.frontiter.map_default((0, Some(0)), |it| it.size_hint());\n+        let (blo, bhi) = self.backiter.map_default((0, Some(0)), |it| it.size_hint());\n+        match (self.iter.size_hint(), fhi, bhi) {\n+            ((0, Some(0)), Some(a), Some(b)) => (flo + blo, Some(a + b)),\n+            _ => (flo + blo, None)\n+        }\n+    }\n }\n \n impl<'self,"}]}