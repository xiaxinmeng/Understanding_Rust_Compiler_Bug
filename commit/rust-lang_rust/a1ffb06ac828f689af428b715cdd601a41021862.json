{"sha": "a1ffb06ac828f689af428b715cdd601a41021862", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZmZiMDZhYzgyOGY2ODlhZjQyOGI3MTVjZGQ2MDFhNDEwMjE4NjI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-01T22:24:49Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-03T16:16:31Z"}, "message": "Use the correct logging crate while monomorphing\n\nThis makes sure that the top-level crate name is correct when emitting log\nstatements for a monomorphized function in another crate. This happens by\ntracing the monomorphized ID back to the external source and then using that\ncrate index to get the name of the crate.\n\nCloses #3046", "tree": {"sha": "77644549b77ca8289ace2187c71b53e4146bd14f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77644549b77ca8289ace2187c71b53e4146bd14f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1ffb06ac828f689af428b715cdd601a41021862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1ffb06ac828f689af428b715cdd601a41021862", "html_url": "https://github.com/rust-lang/rust/commit/a1ffb06ac828f689af428b715cdd601a41021862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1ffb06ac828f689af428b715cdd601a41021862/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "320af9b15723b10c31daa2e9fa8266486f4ba009", "url": "https://api.github.com/repos/rust-lang/rust/commits/320af9b15723b10c31daa2e9fa8266486f4ba009", "html_url": "https://github.com/rust-lang/rust/commit/320af9b15723b10c31daa2e9fa8266486f4ba009"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "0cf9c9a224216c8474229a7ff1bc63a6eb96f40d", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a1ffb06ac828f689af428b715cdd601a41021862/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1ffb06ac828f689af428b715cdd601a41021862/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=a1ffb06ac828f689af428b715cdd601a41021862", "patch": "@@ -119,6 +119,7 @@ use back::link;\n use lib::llvm::{ValueRef, llvm, SetLinkage, False};\n use lib;\n use metadata::csearch;\n+use metadata::cstore;\n use middle::trans::_match;\n use middle::trans::adt;\n use middle::trans::asm;\n@@ -1797,9 +1798,14 @@ pub fn trans_log_level(bcx: @mut Block) -> DatumBlock {\n     let ccx = bcx.ccx();\n \n     let (modpath, modname) = {\n-        let path = &mut bcx.fcx.path;\n-        let mut modpath = ~[path_mod(ccx.sess.ident_of(ccx.link_meta.name))];\n-        for e in path.iter() {\n+        let srccrate = match ccx.external_srcs.find(&bcx.fcx.id) {\n+            Some(&src) => {\n+                cstore::get_crate_data(ccx.sess.cstore, src.crate).name\n+            }\n+            None => ccx.link_meta.name,\n+        };\n+        let mut modpath = ~[path_mod(ccx.sess.ident_of(srccrate))];\n+        for e in bcx.fcx.path.iter() {\n             match *e {\n                 path_mod(_) => { modpath.push(*e) }\n                 _ => {}"}, {"sha": "84bf6f0240fbca8c0bc59bcc3880f84c80e7902b", "filename": "src/test/auxiliary/logging_right_crate.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a1ffb06ac828f689af428b715cdd601a41021862/src%2Ftest%2Fauxiliary%2Flogging_right_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1ffb06ac828f689af428b715cdd601a41021862/src%2Ftest%2Fauxiliary%2Flogging_right_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flogging_right_crate.rs?ref=a1ffb06ac828f689af428b715cdd601a41021862", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo<T>() {\n+    fn death() -> int { fail2!() }\n+    debug2!(\"{:?}\", (||{ death() })());\n+}"}, {"sha": "21b45cec2359d25437f0a1383c83a7bcd97d0859", "filename": "src/test/run-pass/logging-right-crate.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a1ffb06ac828f689af428b715cdd601a41021862/src%2Ftest%2Frun-pass%2Flogging-right-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1ffb06ac828f689af428b715cdd601a41021862/src%2Ftest%2Frun-pass%2Flogging-right-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-right-crate.rs?ref=a1ffb06ac828f689af428b715cdd601a41021862", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:logging_right_crate.rs\n+// xfail-fast\n+// exec-env:RUST_LOG=logging-right-crate=debug\n+\n+// This is a test for issue #3046 to make sure that when we monomorphize a\n+// function from one crate to another the right top-level logging name is\n+// preserved.\n+//\n+// It used to be the case that if logging were turned on for this crate, all\n+// monomorphized functions from other crates had logging turned on (their\n+// logging module names were all incorrect). This test ensures that this no\n+// longer happens by enabling logging for *this* crate and then invoking a\n+// function in an external crate which will fail when logging is enabled.\n+\n+extern mod logging_right_crate;\n+\n+fn main() {\n+    // this function fails if logging is turned on\n+    logging_right_crate::foo::<int>();\n+}"}]}