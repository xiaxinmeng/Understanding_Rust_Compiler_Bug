{"sha": "cd35794d5ea6688e77dd17e96556f5de0b410e8a", "node_id": "C_kwDOAAsO6NoAKGNkMzU3OTRkNWVhNjY4OGU3N2RkMTdlOTY1NTZmNWRlMGI0MTBlOGE", "commit": {"author": {"name": "Peter Jaszkowiak", "email": "p.jaszkow@gmail.com", "date": "2023-03-04T22:11:24Z"}, "committer": {"name": "Peter Jaszkowiak", "email": "p.jaszkow@gmail.com", "date": "2023-03-04T22:11:24Z"}, "message": "Comment for why char boundaries aren't checked", "tree": {"sha": "71fc92526aa1f2d0250acfdbd1c7005132c1f473", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71fc92526aa1f2d0250acfdbd1c7005132c1f473"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd35794d5ea6688e77dd17e96556f5de0b410e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd35794d5ea6688e77dd17e96556f5de0b410e8a", "html_url": "https://github.com/rust-lang/rust/commit/cd35794d5ea6688e77dd17e96556f5de0b410e8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd35794d5ea6688e77dd17e96556f5de0b410e8a/comments", "author": {"login": "pitaj", "id": 803701, "node_id": "MDQ6VXNlcjgwMzcwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/803701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitaj", "html_url": "https://github.com/pitaj", "followers_url": "https://api.github.com/users/pitaj/followers", "following_url": "https://api.github.com/users/pitaj/following{/other_user}", "gists_url": "https://api.github.com/users/pitaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitaj/subscriptions", "organizations_url": "https://api.github.com/users/pitaj/orgs", "repos_url": "https://api.github.com/users/pitaj/repos", "events_url": "https://api.github.com/users/pitaj/events{/privacy}", "received_events_url": "https://api.github.com/users/pitaj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pitaj", "id": 803701, "node_id": "MDQ6VXNlcjgwMzcwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/803701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitaj", "html_url": "https://github.com/pitaj", "followers_url": "https://api.github.com/users/pitaj/followers", "following_url": "https://api.github.com/users/pitaj/following{/other_user}", "gists_url": "https://api.github.com/users/pitaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitaj/subscriptions", "organizations_url": "https://api.github.com/users/pitaj/orgs", "repos_url": "https://api.github.com/users/pitaj/repos", "events_url": "https://api.github.com/users/pitaj/events{/privacy}", "received_events_url": "https://api.github.com/users/pitaj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09f8885b3b84bc9ba06652dc58383f0e3ab97445", "url": "https://api.github.com/repos/rust-lang/rust/commits/09f8885b3b84bc9ba06652dc58383f0e3ab97445", "html_url": "https://github.com/rust-lang/rust/commit/09f8885b3b84bc9ba06652dc58383f0e3ab97445"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "b6d605c52d1ab602130b6f39b99a2567f96a9bc2", "filename": "library/core/src/str/traits.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd35794d5ea6688e77dd17e96556f5de0b410e8a/library%2Fcore%2Fsrc%2Fstr%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd35794d5ea6688e77dd17e96556f5de0b410e8a/library%2Fcore%2Fsrc%2Fstr%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Ftraits.rs?ref=cd35794d5ea6688e77dd17e96556f5de0b410e8a", "patch": "@@ -204,6 +204,12 @@ unsafe impl const SliceIndex<str> for ops::Range<usize> {\n             assert_unsafe_precondition!(\n                 \"str::get_unchecked requires that the range is within the string slice\",\n                 (this: ops::Range<usize>, slice: *const [u8]) =>\n+                // We'd like to check that the bounds are on char boundaries,\n+                // but there's not really a way to do so without reading\n+                // behind the pointer, which has aliasing implications.\n+                // It's also not possible to move this check up to\n+                // `str::get_unchecked` without adding a special function\n+                // to `SliceIndex` just for this.\n                 this.end >= this.start && this.end <= slice.len()\n             );\n             slice.as_ptr().add(self.start)"}]}