{"sha": "ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNDJmMjZhNDhiY2I0M2ZiMDJiM2Y2MjhlZGYxNDAxYjhkZjFiYzI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-29T00:17:20Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-29T00:17:29Z"}, "message": "rustdoc: Fix build errors", "tree": {"sha": "ca599b787f30b86d9309ca4e28dc8e1b927c060f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca599b787f30b86d9309ca4e28dc8e1b927c060f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "html_url": "https://github.com/rust-lang/rust/commit/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8766c2e35b6454ff51ab3deab3cd334ebd033da1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8766c2e35b6454ff51ab3deab3cd334ebd033da1", "html_url": "https://github.com/rust-lang/rust/commit/8766c2e35b6454ff51ab3deab3cd334ebd033da1"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "d5f0ca9f507b44f845b48fc91963b23e7e42d2dc", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "patch": "@@ -144,6 +144,7 @@ fn fold_enum(\n \n     {\n         variants: do par::map(doc.variants) |variant| {\n+            let variant = *variant;\n             let desc = do astsrv::exec(srv) |ctxt| {\n                 match ctxt.ast_map.get(doc_id) {\n                   ast_map::node_item(@{"}, {"sha": "b8946ce17b0dc798caffa3fade8c462de0381a67", "filename": "src/rustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdesc_to_brief_pass.rs?ref=ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "patch": "@@ -44,7 +44,7 @@ fn fold_trait(fold: fold::Fold<()>, doc: doc::TraitDoc) -> doc::TraitDoc {\n     {\n         methods: par::map(doc.methods, |doc| {\n             brief: extract(doc.desc),\n-            .. doc\n+            .. *doc\n         }),\n         .. doc\n     }\n@@ -56,7 +56,7 @@ fn fold_impl(fold: fold::Fold<()>, doc: doc::ImplDoc) -> doc::ImplDoc {\n     {\n         methods: par::map(doc.methods, |doc| {\n             brief: extract(doc.desc),\n-            .. doc\n+            .. *doc\n         }),\n         .. doc\n     }"}, {"sha": "28dbdaeea801fcf1eaf3d077b091b181451ff260", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "patch": "@@ -179,7 +179,7 @@ fn default_any_fold_mod<T:Send Copy>(\n     doc::ModDoc_({\n         item: fold.fold_item(fold, doc.item),\n         items: par::map(doc.items, |ItemTag, copy fold| {\n-            fold_ItemTag(fold, ItemTag)\n+            fold_ItemTag(fold, *ItemTag)\n         }),\n         .. *doc\n     })\n@@ -205,7 +205,7 @@ fn default_par_fold_mod<T:Send Copy>(\n     doc::ModDoc_({\n         item: fold.fold_item(fold, doc.item),\n         items: par::map(doc.items, |ItemTag, copy fold| {\n-            fold_ItemTag(fold, ItemTag)\n+            fold_ItemTag(fold, *ItemTag)\n         }),\n         .. *doc\n     })\n@@ -218,7 +218,7 @@ fn default_any_fold_nmod<T:Send Copy>(\n     {\n         item: fold.fold_item(fold, doc.item),\n         fns: par::map(doc.fns, |FnDoc, copy fold| {\n-            fold.fold_fn(fold, FnDoc)\n+            fold.fold_fn(fold, *FnDoc)\n         }),\n         .. doc\n     }\n@@ -244,7 +244,7 @@ fn default_par_fold_nmod<T:Send Copy>(\n     {\n         item: fold.fold_item(fold, doc.item),\n         fns: par::map(doc.fns, |FnDoc, copy fold| {\n-            fold.fold_fn(fold, FnDoc)\n+            fold.fold_fn(fold, *FnDoc)\n         }),\n         .. doc\n     }"}, {"sha": "3bd74d6ffe2ee5f37460224e3cd2b758c5543555", "filename": "src/rustdoc/markdown_index_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Fmarkdown_index_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Fmarkdown_index_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_index_pass.rs?ref=ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "patch": "@@ -58,7 +58,7 @@ fn build_mod_index(\n ) -> doc::Index {\n     {\n         entries: par::map(doc.items, |doc| {\n-            item_to_entry(doc, config)\n+            item_to_entry(*doc, config)\n         })\n     }\n }\n@@ -69,7 +69,7 @@ fn build_nmod_index(\n ) -> doc::Index {\n     {\n         entries: par::map(doc.fns, |doc| {\n-            item_to_entry(doc::FnTag(doc), config)\n+            item_to_entry(doc::FnTag(*doc), config)\n         })\n     }\n }"}, {"sha": "088ca4d51bd06b51f0f7db1ef69a96a5a3ac0505", "filename": "src/rustdoc/sectionalize_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Fsectionalize_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Fsectionalize_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fsectionalize_pass.rs?ref=ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "patch": "@@ -42,7 +42,7 @@ fn fold_trait(fold: fold::Fold<()>, doc: doc::TraitDoc) -> doc::TraitDoc {\n             {\n                 desc: desc,\n                 sections: sections,\n-                ..method\n+                .. *method\n             }\n         },\n         .. doc\n@@ -59,7 +59,7 @@ fn fold_impl(fold: fold::Fold<()>, doc: doc::ImplDoc) -> doc::ImplDoc {\n             {\n                 desc: desc,\n                 sections: sections,\n-                .. method\n+                .. *method\n             }\n         },\n         .. doc"}, {"sha": "b929cd0aa91a54104eea575f24eb6f62f0a6d1f5", "filename": "src/rustdoc/text_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Ftext_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Ftext_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftext_pass.rs?ref=ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "patch": "@@ -60,7 +60,7 @@ fn fold_enum(fold: fold::Fold<Op>, doc: doc::EnumDoc) -> doc::EnumDoc {\n         variants: do par::map(doc.variants) |variant, copy fold| {\n             {\n                 desc: maybe_apply_op(fold.ctxt, variant.desc),\n-                .. variant\n+                .. *variant\n             }\n         },\n         .. doc\n@@ -82,7 +82,7 @@ fn apply_to_methods(op: Op, docs: ~[doc::MethodDoc]) -> ~[doc::MethodDoc] {\n             brief: maybe_apply_op(op, doc.brief),\n             desc: maybe_apply_op(op, doc.desc),\n             sections: apply_to_sections(op, doc.sections),\n-            .. doc\n+            .. *doc\n         }\n     }\n }"}, {"sha": "08ad3ea3ecf4c16a883c269134ce3a1de4014f2d", "filename": "src/rustdoc/tystr_pass.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftystr_pass.rs?ref=ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "patch": "@@ -112,6 +112,7 @@ fn fold_enum(\n \n     {\n         variants: do par::map(doc.variants) |variant| {\n+            let variant = *variant;\n             let sig = do astsrv::exec(srv) |ctxt| {\n                 match ctxt.ast_map.get(doc_id) {\n                   ast_map::node_item(@{\n@@ -161,7 +162,7 @@ fn merge_methods(\n     do par::map(docs) |doc| {\n         {\n             sig: get_method_sig(srv, item_id, doc.name),\n-            .. doc\n+            .. *doc\n         }\n     }\n }"}, {"sha": "2f38c20e900fdb222d37386163791c1ea682bb14", "filename": "src/rustdoc/unindent_pass.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Funindent_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed42f26a48bcb43fb02b3f628edf1401b8df1bc2/src%2Frustdoc%2Funindent_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Funindent_pass.rs?ref=ed42f26a48bcb43fb02b3f628edf1401b8df1bc2", "patch": "@@ -63,11 +63,11 @@ fn unindent(s: ~str) -> ~str {\n     if vec::is_not_empty(lines) {\n         let unindented = ~[str::trim(vec::head(lines))]\n             + do par::map(vec::tail(lines)) |line| {\n-            if str::is_whitespace(line) {\n-                line\n+            if str::is_whitespace(*line) {\n+                *line\n             } else {\n-                assert str::len(line) >= min_indent;\n-                str::slice(line, min_indent, str::len(line))\n+                assert str::len(*line) >= min_indent;\n+                str::slice(*line, min_indent, str::len(*line))\n             }\n         };\n         str::connect(unindented, ~\"\\n\")"}]}