{"sha": "4e7319cd3f3b0731416ee14666eb583caac75c97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNzMxOWNkM2YzYjA3MzE0MTZlZTE0NjY2ZWI1ODNjYWFjNzVjOTc=", "commit": {"author": {"name": "lcnr/Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2019-06-03T10:59:48Z"}, "committer": {"name": "lcnr/Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2019-06-03T10:59:48Z"}, "message": "add unchecked math intrinsics", "tree": {"sha": "fca41839aff20311e45c9a9dcdb4e3b6cc8d8305", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fca41839aff20311e45c9a9dcdb4e3b6cc8d8305"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e7319cd3f3b0731416ee14666eb583caac75c97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e7319cd3f3b0731416ee14666eb583caac75c97", "html_url": "https://github.com/rust-lang/rust/commit/4e7319cd3f3b0731416ee14666eb583caac75c97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e7319cd3f3b0731416ee14666eb583caac75c97/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6266a7666c22b4a64bbc9252e4ad080f5950d01", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6266a7666c22b4a64bbc9252e4ad080f5950d01", "html_url": "https://github.com/rust-lang/rust/commit/d6266a7666c22b4a64bbc9252e4ad080f5950d01"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "31a4e380a3d9b647103a0dd1b653860c1dd3ddfc", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4e7319cd3f3b0731416ee14666eb583caac75c97/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e7319cd3f3b0731416ee14666eb583caac75c97/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=4e7319cd3f3b0731416ee14666eb583caac75c97", "patch": "@@ -1240,6 +1240,21 @@ extern \"rust-intrinsic\" {\n     /// y < 0 or y >= N, where N is the width of T in bits.\n     pub fn unchecked_shr<T>(x: T, y: T) -> T;\n \n+    /// Returns the result of an unchecked addition, resulting in\n+    /// undefined behavior when `x + y > T::max_value()` or `x + y < T::min_value()`.\n+    #[cfg(not(stage0))]\n+    pub fn unchecked_add<T>(x: T, y: T) -> T;\n+\n+    /// Returns the result of an unchecked substraction, resulting in\n+    /// undefined behavior when `x - y > T::max_value()` or `x - y < T::min_value()`.\n+    #[cfg(not(stage0))]\n+    pub fn unchecked_sub<T>(x: T, y: T) -> T;\n+\n+    /// Returns the result of an unchecked multiplication, resulting in\n+    /// undefined behavior when `x * y > T::max_value()` or `x * y < T::min_value()`.\n+    #[cfg(not(stage0))]\n+    pub fn unchecked_mul<T>(x: T, y: T) -> T;\n+\n     /// Performs rotate left.\n     /// The stabilized versions of this intrinsic are available on the integer\n     /// primitives via the `rotate_left` method. For example,"}, {"sha": "ba93268cb4347fee8f193b28cf22680860f11a59", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4e7319cd3f3b0731416ee14666eb583caac75c97/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e7319cd3f3b0731416ee14666eb583caac75c97/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=4e7319cd3f3b0731416ee14666eb583caac75c97", "patch": "@@ -334,7 +334,8 @@ impl IntrinsicCallMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n             \"ctlz\" | \"ctlz_nonzero\" | \"cttz\" | \"cttz_nonzero\" | \"ctpop\" | \"bswap\" |\n             \"bitreverse\" | \"add_with_overflow\" | \"sub_with_overflow\" |\n             \"mul_with_overflow\" | \"overflowing_add\" | \"overflowing_sub\" | \"overflowing_mul\" |\n-            \"unchecked_div\" | \"unchecked_rem\" | \"unchecked_shl\" | \"unchecked_shr\" | \"exact_div\" |\n+            \"unchecked_div\" | \"unchecked_rem\" | \"unchecked_shl\" | \"unchecked_shr\" |\n+            \"unchecked_add\" | \"unchecked_sub\" | \"unchecked_mul\" | \"exact_div\" |\n             \"rotate_left\" | \"rotate_right\" | \"saturating_add\" | \"saturating_sub\" => {\n                 let ty = arg_tys[0];\n                 match int_type_width_signed(ty, self) {\n@@ -430,6 +431,27 @@ impl IntrinsicCallMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n                                 } else {\n                                     self.lshr(args[0].immediate(), args[1].immediate())\n                                 },\n+                            \"unchecked_add\" => {\n+                                if signed {\n+                                    self.unchecked_sadd(args[0].immediate(), args[1].immediate())\n+                                } else {\n+                                    self.unchecked_uadd(args[0].immediate(), args[1].immediate())\n+                                }\n+                            },\n+                            \"unchecked_sub\" => {\n+                                if signed {\n+                                    self.unchecked_ssub(args[0].immediate(), args[1].immediate())\n+                                } else {\n+                                    self.unchecked_usub(args[0].immediate(), args[1].immediate())\n+                                }\n+                            },\n+                            \"unchecked_mul\" => {\n+                                if signed {\n+                                    self.unchecked_smul(args[0].immediate(), args[1].immediate())\n+                                } else {\n+                                    self.unchecked_umul(args[0].immediate(), args[1].immediate())\n+                                }\n+                            },\n                             \"rotate_left\" | \"rotate_right\" => {\n                                 let is_left = name == \"rotate_left\";\n                                 let val = args[0].immediate();"}, {"sha": "0b14ff1db59d460d580c21b49e387ac4e1bce1ae", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4e7319cd3f3b0731416ee14666eb583caac75c97/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e7319cd3f3b0731416ee14666eb583caac75c97/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=4e7319cd3f3b0731416ee14666eb583caac75c97", "patch": "@@ -305,7 +305,8 @@ pub fn check_intrinsic_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n             \"unchecked_shl\" | \"unchecked_shr\" |\n             \"rotate_left\" | \"rotate_right\" =>\n                 (1, vec![param(0), param(0)], param(0)),\n-\n+            \"unchecked_add\" | \"unchecked_sub\" | \"unchecked_mul\" =>\n+                (1, vec![param(0), param(0)], param(0)),\n             \"overflowing_add\" | \"overflowing_sub\" | \"overflowing_mul\" =>\n                 (1, vec![param(0), param(0)], param(0)),\n             \"saturating_add\" | \"saturating_sub\" =>"}]}