{"sha": "5bd4d2ea7a75b915d70112731e815ed835a683e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZDRkMmVhN2E3NWI5MTVkNzAxMTI3MzFlODE1ZWQ4MzVhNjgzZTg=", "commit": {"author": {"name": "Jack Moffitt", "email": "jack@metajack.im", "date": "2013-11-28T03:05:12Z"}, "committer": {"name": "Jack Moffitt", "email": "jack@metajack.im", "date": "2013-12-11T03:18:17Z"}, "message": "Fix missing code map entry for uses of `include_str!`.", "tree": {"sha": "78ad1d01c75c818a587febc3696b4a4dd40333bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78ad1d01c75c818a587febc3696b4a4dd40333bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bd4d2ea7a75b915d70112731e815ed835a683e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bd4d2ea7a75b915d70112731e815ed835a683e8", "html_url": "https://github.com/rust-lang/rust/commit/5bd4d2ea7a75b915d70112731e815ed835a683e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bd4d2ea7a75b915d70112731e815ed835a683e8/comments", "author": {"login": "metajack", "id": 28357, "node_id": "MDQ6VXNlcjI4MzU3", "avatar_url": "https://avatars.githubusercontent.com/u/28357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metajack", "html_url": "https://github.com/metajack", "followers_url": "https://api.github.com/users/metajack/followers", "following_url": "https://api.github.com/users/metajack/following{/other_user}", "gists_url": "https://api.github.com/users/metajack/gists{/gist_id}", "starred_url": "https://api.github.com/users/metajack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metajack/subscriptions", "organizations_url": "https://api.github.com/users/metajack/orgs", "repos_url": "https://api.github.com/users/metajack/repos", "events_url": "https://api.github.com/users/metajack/events{/privacy}", "received_events_url": "https://api.github.com/users/metajack/received_events", "type": "User", "site_admin": false}, "committer": {"login": "metajack", "id": 28357, "node_id": "MDQ6VXNlcjI4MzU3", "avatar_url": "https://avatars.githubusercontent.com/u/28357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metajack", "html_url": "https://github.com/metajack", "followers_url": "https://api.github.com/users/metajack/followers", "following_url": "https://api.github.com/users/metajack/following{/other_user}", "gists_url": "https://api.github.com/users/metajack/gists{/gist_id}", "starred_url": "https://api.github.com/users/metajack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metajack/subscriptions", "organizations_url": "https://api.github.com/users/metajack/orgs", "repos_url": "https://api.github.com/users/metajack/repos", "events_url": "https://api.github.com/users/metajack/events{/privacy}", "received_events_url": "https://api.github.com/users/metajack/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac4dd9efee9248f4c3235460f3c93acc9932eb5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac4dd9efee9248f4c3235460f3c93acc9932eb5a", "html_url": "https://github.com/rust-lang/rust/commit/ac4dd9efee9248f4c3235460f3c93acc9932eb5a"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "2fcf6f1cad02501c281a66c43809fc52fa201d0d", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5bd4d2ea7a75b915d70112731e815ed835a683e8/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bd4d2ea7a75b915d70112731e815ed835a683e8/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=5bd4d2ea7a75b915d70112731e815ed835a683e8", "patch": "@@ -80,6 +80,7 @@ pub fn expand_mod(cx: @ExtCtxt, sp: Span, tts: &[ast::token_tree])\n pub fn expand_include(cx: @ExtCtxt, sp: Span, tts: &[ast::token_tree])\n     -> base::MacResult {\n     let file = get_single_str_from_tts(cx, sp, tts, \"include!\");\n+    // The file will be added to the code map by the parser\n     let p = parse::new_sub_parser_from_file(\n         cx.parse_sess(), cx.cfg(),\n         &res_rel_file(cx, sp, &Path::new(file)), sp);\n@@ -99,7 +100,20 @@ pub fn expand_include_str(cx: @ExtCtxt, sp: Span, tts: &[ast::token_tree])\n         Ok(bytes) => bytes,\n     };\n     match str::from_utf8_owned_opt(bytes) {\n-        Some(s) => base::MRExpr(cx.expr_str(sp, s.to_managed())),\n+        Some(s) => {\n+            let s = s.to_managed();\n+            // Add this input file to the code map to make it available as\n+            // dependency information\n+            cx.parse_sess.cm.files.push(@codemap::FileMap {\n+                name: file.display().to_str().to_managed(),\n+                substr: codemap::FssNone,\n+                src: s,\n+                start_pos: codemap::BytePos(0),\n+                lines: @mut ~[],\n+                multibyte_chars: @mut ~[],\n+            });\n+            base::MRExpr(cx.expr_str(sp, s))\n+        }\n         None => {\n             cx.span_fatal(sp, format!(\"{} wasn't a utf-8 file\", file.display()));\n         }"}]}