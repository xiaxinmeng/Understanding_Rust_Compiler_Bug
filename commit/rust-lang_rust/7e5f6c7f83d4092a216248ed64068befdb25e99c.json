{"sha": "7e5f6c7f83d4092a216248ed64068befdb25e99c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNWY2YzdmODNkNDA5MmEyMTYyNDhlZDY0MDY4YmVmZGIyNWU5OWM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-06-19T17:10:37Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-07-01T10:39:37Z"}, "message": "rustc: always keep `hir::Path` behind a `P<...>`.", "tree": {"sha": "1ef8a8555b5a305ba8f4b6a2798c16e9e0eadde5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ef8a8555b5a305ba8f4b6a2798c16e9e0eadde5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e5f6c7f83d4092a216248ed64068befdb25e99c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e5f6c7f83d4092a216248ed64068befdb25e99c", "html_url": "https://github.com/rust-lang/rust/commit/7e5f6c7f83d4092a216248ed64068befdb25e99c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e5f6c7f83d4092a216248ed64068befdb25e99c/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "765eebf064ae17347f3532791760fc5c2150b5ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/765eebf064ae17347f3532791760fc5c2150b5ea", "html_url": "https://github.com/rust-lang/rust/commit/765eebf064ae17347f3532791760fc5c2150b5ea"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "78670b2eb402e4743f0a203eeee73224d4598c3a", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e5f6c7f83d4092a216248ed64068befdb25e99c/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5f6c7f83d4092a216248ed64068befdb25e99c/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=7e5f6c7f83d4092a216248ed64068befdb25e99c", "patch": "@@ -2725,7 +2725,7 @@ impl<'a> LoweringContext<'a> {\n \n         // ::std::future::Future<future_params>\n         let future_path =\n-            self.std_path(span, &[sym::future, sym::Future], Some(future_params), false);\n+            P(self.std_path(span, &[sym::future, sym::Future], Some(future_params), false));\n \n         hir::GenericBound::Trait(\n             hir::PolyTraitRef {\n@@ -3094,7 +3094,7 @@ impl<'a> LoweringContext<'a> {\n \n     fn lower_trait_ref(&mut self, p: &TraitRef, itctx: ImplTraitContext<'_>) -> hir::TraitRef {\n         let path = match self.lower_qpath(p.ref_id, &None, &p.path, ParamMode::Explicit, itctx) {\n-            hir::QPath::Resolved(None, path) => path.and_then(|path| path),\n+            hir::QPath::Resolved(None, path) => path,\n             qpath => bug!(\"lower_trait_ref: unexpected QPath `{:?}`\", qpath),\n         };\n         hir::TraitRef {\n@@ -5577,7 +5577,7 @@ impl<'a> LoweringContext<'a> {\n                         let principal = hir::PolyTraitRef {\n                             bound_generic_params: hir::HirVec::new(),\n                             trait_ref: hir::TraitRef {\n-                                path: path.and_then(|path| path),\n+                                path,\n                                 hir_ref_id: hir_id,\n                             },\n                             span,"}, {"sha": "9f655202e79687409d8f0a5e1ce01c99e9371ac9", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e5f6c7f83d4092a216248ed64068befdb25e99c/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5f6c7f83d4092a216248ed64068befdb25e99c/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=7e5f6c7f83d4092a216248ed64068befdb25e99c", "patch": "@@ -2217,7 +2217,7 @@ pub enum UseKind {\n /// within the resolution map.\n #[derive(RustcEncodable, RustcDecodable, Debug, HashStable)]\n pub struct TraitRef {\n-    pub path: Path,\n+    pub path: P<Path>,\n     // Don't hash the ref_id. It is tracked via the thing it is used to access\n     #[stable_hasher(ignore)]\n     pub hir_ref_id: HirId,"}, {"sha": "8464a710a4ae3cb6c30e89cc633bc254789b20bf", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e5f6c7f83d4092a216248ed64068befdb25e99c/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5f6c7f83d4092a216248ed64068befdb25e99c/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=7e5f6c7f83d4092a216248ed64068befdb25e99c", "patch": "@@ -1353,7 +1353,7 @@ pub fn checked_type_of<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId, fail: bool) -> Op\n                                 None\n                             }\n                         }\n-                        Node::TraitRef(&hir::TraitRef { ref path, .. }) => Some(path),\n+                        Node::TraitRef(&hir::TraitRef { ref path, .. }) => Some(&**path),\n                         _ => None,\n                     };\n "}]}