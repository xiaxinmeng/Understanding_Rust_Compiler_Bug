{"sha": "0a9330c7ef1c4eb99e8143c7a586b1649ede85b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhOTMzMGM3ZWYxYzRlYjk5ZTgxNDNjN2E1ODZiMTY0OWVkZTg1Yjg=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T22:25:17Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T22:25:17Z"}, "message": "Ignore panic_fmt lint in macro-comma-behavior-rpass ui test.", "tree": {"sha": "9628bde8c30bdd092db7a3ca50eda7173cea9b9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9628bde8c30bdd092db7a3ca50eda7173cea9b9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a9330c7ef1c4eb99e8143c7a586b1649ede85b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a9330c7ef1c4eb99e8143c7a586b1649ede85b8", "html_url": "https://github.com/rust-lang/rust/commit/0a9330c7ef1c4eb99e8143c7a586b1649ede85b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a9330c7ef1c4eb99e8143c7a586b1649ede85b8/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a840a30d68506a8070c309e5f8389a7ad09e55c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a840a30d68506a8070c309e5f8389a7ad09e55c", "html_url": "https://github.com/rust-lang/rust/commit/9a840a30d68506a8070c309e5f8389a7ad09e55c"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "e5e656de6fa7f339b968f53acb1cc9d68f49e287", "filename": "src/test/ui/macros/macro-comma-behavior-rpass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a9330c7ef1c4eb99e8143c7a586b1649ede85b8/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a9330c7ef1c4eb99e8143c7a586b1649ede85b8/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior-rpass.rs?ref=0a9330c7ef1c4eb99e8143c7a586b1649ede85b8", "patch": "@@ -57,6 +57,7 @@ fn writeln_1arg() {\n //\n // (Example: Issue #48042)\n #[test]\n+#[allow(panic_fmt)]\n fn to_format_or_not_to_format() {\n     // (\"{}\" is the easiest string to test because if this gets\n     // sent to format_args!, it'll simply fail to compile."}]}