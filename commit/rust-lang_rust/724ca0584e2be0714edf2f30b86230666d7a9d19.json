{"sha": "724ca0584e2be0714edf2f30b86230666d7a9d19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNGNhMDU4NGUyYmUwNzE0ZWRmMmYzMGI4NjIzMDY2NmQ3YTlkMTk=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-04-09T12:47:00Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-04-09T12:47:00Z"}, "message": "Exclude profiler-generated symbols from MSVC __imp_-symbol workaround.", "tree": {"sha": "b1d6fefc28723601ecf869b940b09e4203e5ec57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1d6fefc28723601ecf869b940b09e4203e5ec57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/724ca0584e2be0714edf2f30b86230666d7a9d19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/724ca0584e2be0714edf2f30b86230666d7a9d19", "html_url": "https://github.com/rust-lang/rust/commit/724ca0584e2be0714edf2f30b86230666d7a9d19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/724ca0584e2be0714edf2f30b86230666d7a9d19/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3750348daff89741e3153e0e120aa70a45ff5b68", "url": "https://api.github.com/repos/rust-lang/rust/commits/3750348daff89741e3153e0e120aa70a45ff5b68", "html_url": "https://github.com/rust-lang/rust/commit/3750348daff89741e3153e0e120aa70a45ff5b68"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "3628adeb3e9a7bcd825e5ab1b8b81dbcf427c861", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/724ca0584e2be0714edf2f30b86230666d7a9d19/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724ca0584e2be0714edf2f30b86230666d7a9d19/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=724ca0584e2be0714edf2f30b86230666d7a9d19", "patch": "@@ -795,21 +795,31 @@ fn create_msvc_imps(\n     } else {\n         \"\\x01__imp_\"\n     };\n+\n     unsafe {\n         let i8p_ty = Type::i8p_llcx(llcx);\n         let globals = base::iter_globals(llmod)\n             .filter(|&val| {\n                 llvm::LLVMRustGetLinkage(val) == llvm::Linkage::ExternalLinkage &&\n                     llvm::LLVMIsDeclaration(val) == 0\n             })\n-            .map(move |val| {\n+            .filter_map(|val| {\n+                // Exclude some symbols that we know are not Rust symbols.\n                 let name = CStr::from_ptr(llvm::LLVMGetValueName(val));\n+                if ignored(name.to_bytes()) {\n+                    None\n+                } else {\n+                    Some((val, name))\n+                }\n+            })\n+            .map(move |(val, name)| {\n                 let mut imp_name = prefix.as_bytes().to_vec();\n                 imp_name.extend(name.to_bytes());\n                 let imp_name = CString::new(imp_name).unwrap();\n                 (imp_name, val)\n             })\n             .collect::<Vec<_>>();\n+\n         for (imp_name, val) in globals {\n             let imp = llvm::LLVMAddGlobal(llmod,\n                                           i8p_ty,\n@@ -818,4 +828,10 @@ fn create_msvc_imps(\n             llvm::LLVMRustSetLinkage(imp, llvm::Linkage::ExternalLinkage);\n         }\n     }\n+\n+    // Use this function to exclude certain symbols from `__imp` generation.\n+    fn ignored(symbol_name: &[u8]) -> bool {\n+        // These are symbols generated by LLVM's profiling instrumentation\n+        symbol_name.starts_with(b\"__llvm_profile_\")\n+    }\n }"}, {"sha": "dc52e91317a5ae1b7c678171560c1321e67c81a1", "filename": "src/test/run-make-fulldeps/pgo-gen-no-imp-symbols/Makefile", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/724ca0584e2be0714edf2f30b86230666d7a9d19/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-no-imp-symbols%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/724ca0584e2be0714edf2f30b86230666d7a9d19/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-no-imp-symbols%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-no-imp-symbols%2FMakefile?ref=724ca0584e2be0714edf2f30b86230666d7a9d19", "patch": "@@ -0,0 +1,11 @@\n+-include ../tools.mk\n+\n+all:\n+ifeq ($(PROFILER_SUPPORT),1)\n+\t$(RUSTC) -O -Ccodegen-units=1 -Z pgo-gen=\"$(TMPDIR)/test.profraw\" --emit=llvm-ir test.rs\n+\t# We expect symbols starting with \"__llvm_profile_\".\n+\t$(CGREP) \"__llvm_profile_\" < $(TMPDIR)/test.ll\n+\t# We do NOT expect the \"__imp_\" version of these symbols.\n+\t$(CGREP) -v \"__imp___llvm_profile_\" < $(TMPDIR)/test.ll # 64 bit\n+\t$(CGREP) -v \"__imp____llvm_profile_\" < $(TMPDIR)/test.ll # 32 bit\n+endif"}, {"sha": "f328e4d9d04c31d0d70d16d21a07d1613be9d577", "filename": "src/test/run-make-fulldeps/pgo-gen-no-imp-symbols/test.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/724ca0584e2be0714edf2f30b86230666d7a9d19/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-no-imp-symbols%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724ca0584e2be0714edf2f30b86230666d7a9d19/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-no-imp-symbols%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-no-imp-symbols%2Ftest.rs?ref=724ca0584e2be0714edf2f30b86230666d7a9d19", "patch": "@@ -0,0 +1 @@\n+fn main() {}"}]}