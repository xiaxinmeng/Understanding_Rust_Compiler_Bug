{"sha": "e97c29bda238cf55ddd7eec772deb823364b1846", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5N2MyOWJkYTIzOGNmNTVkZGQ3ZWVjNzcyZGViODIzMzY0YjE4NDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-12T01:00:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-12T01:00:43Z"}, "message": "Auto merge of #86815 - FabianWolff:issue-84210, r=varkor\n\nImprove error reporting for modifications behind `&` references\n\nI had a look at #84210 and noticed that #85823 has effectively already fixed #84210.\n\nHowever, the string matching in #85823 is _very_ crude and already breaks down when a variable name starts with `mut`. I have made this a bit more robust; further improvements could definitely be made but are complicated by the lack of information provided by an earlier pass:\nhttps://github.com/rust-lang/rust/blob/ce331ee6ee010438d1a58c7da8ced4f26d69a20e/compiler/rustc_mir_build/src/build/matches/mod.rs#L2103-L2107\n\nI have also fixed a missing comma in the error message.", "tree": {"sha": "28e24188a597bb5d699e9e135d09868c0d1b6788", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28e24188a597bb5d699e9e135d09868c0d1b6788"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e97c29bda238cf55ddd7eec772deb823364b1846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e97c29bda238cf55ddd7eec772deb823364b1846", "html_url": "https://github.com/rust-lang/rust/commit/e97c29bda238cf55ddd7eec772deb823364b1846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e97c29bda238cf55ddd7eec772deb823364b1846/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54aaca862374a8f296402822ec47d4f1586d54e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/54aaca862374a8f296402822ec47d4f1586d54e3", "html_url": "https://github.com/rust-lang/rust/commit/54aaca862374a8f296402822ec47d4f1586d54e3"}, {"sha": "5eb83f4ec3761b69e839f364e127b8c307f6e196", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eb83f4ec3761b69e839f364e127b8c307f6e196", "html_url": "https://github.com/rust-lang/rust/commit/5eb83f4ec3761b69e839f364e127b8c307f6e196"}], "stats": {"total": 147, "additions": 90, "deletions": 57}, "files": [{"sha": "671d947d1b1321f2ac7d1797e53e9914794520d3", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -147,7 +147,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                     if let Some(desc) = access_place_desc {\n                         item_msg = format!(\"`{}`\", desc);\n                         reason = match error_access {\n-                            AccessKind::Mutate => format!(\" which is behind {}\", pointer_type),\n+                            AccessKind::Mutate => format!(\", which is behind {}\", pointer_type),\n                             AccessKind::MutableBorrow => {\n                                 format!(\", as it is behind {}\", pointer_type)\n                             }\n@@ -897,16 +897,32 @@ fn suggest_ampmut<'tcx>(\n ) -> (Span, String) {\n     if let Some(assignment_rhs_span) = opt_assignment_rhs_span {\n         if let Ok(src) = tcx.sess.source_map().span_to_snippet(assignment_rhs_span) {\n+            let is_mutbl = |ty: &str| -> bool {\n+                if ty.starts_with(\"mut\") {\n+                    let rest = &ty[3..];\n+                    match rest.chars().next() {\n+                        // e.g. `&mut x`\n+                        Some(c) if c.is_whitespace() => true,\n+                        // e.g. `&mut(x)`\n+                        Some('(') => true,\n+                        // e.g. `&mutablevar`\n+                        _ => false,\n+                    }\n+                } else {\n+                    false\n+                }\n+            };\n             if let (true, Some(ws_pos)) =\n                 (src.starts_with(\"&'\"), src.find(|c: char| -> bool { c.is_whitespace() }))\n             {\n                 let lt_name = &src[1..ws_pos];\n-                let ty = &src[ws_pos..];\n-                if !ty.trim_start().starts_with(\"mut\") {\n+                let ty = src[ws_pos..].trim_start();\n+                if !is_mutbl(ty) {\n                     return (assignment_rhs_span, format!(\"&{} mut {}\", lt_name, ty));\n                 }\n             } else if let Some(stripped) = src.strip_prefix('&') {\n-                if !stripped.trim_start().starts_with(\"mut\") {\n+                let stripped = stripped.trim_start();\n+                if !is_mutbl(stripped) {\n                     return (assignment_rhs_span, format!(\"&mut {}\", stripped));\n                 }\n             }"}, {"sha": "0475df447445df05067ce82fab23feb4ebe0b11e", "filename": "src/test/ui/borrowck/borrowck-assign-to-andmut-in-aliasable-loc.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-andmut-in-aliasable-loc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-andmut-in-aliasable-loc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-andmut-in-aliasable-loc.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,12 +1,12 @@\n-error[E0594]: cannot assign to `*s.pointer` which is behind a `&` reference\n+error[E0594]: cannot assign to `*s.pointer`, which is behind a `&` reference\n   --> $DIR/borrowck-assign-to-andmut-in-aliasable-loc.rs:9:5\n    |\n LL | fn a(s: &S) {\n    |         -- help: consider changing this to be a mutable reference: `&mut S<'_>`\n LL |     *s.pointer += 1;\n    |     ^^^^^^^^^^^^^^^ `s` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*s.pointer` which is behind a `&` reference\n+error[E0594]: cannot assign to `*s.pointer`, which is behind a `&` reference\n   --> $DIR/borrowck-assign-to-andmut-in-aliasable-loc.rs:17:5\n    |\n LL | fn c(s: & &mut S) {"}, {"sha": "0866f54b9fab6237b1ab07ed15ba9860d5579868", "filename": "src/test/ui/borrowck/borrowck-borrow-mut-base-ptr-in-aliasable-loc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-mut-base-ptr-in-aliasable-loc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-mut-base-ptr-in-aliasable-loc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-borrow-mut-base-ptr-in-aliasable-loc.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `**t1` which is behind a `&` reference\n+error[E0594]: cannot assign to `**t1`, which is behind a `&` reference\n   --> $DIR/borrowck-borrow-mut-base-ptr-in-aliasable-loc.rs:9:5\n    |\n LL |     let t1 = t0;"}, {"sha": "4c0e46d453142eeb838bd463b2a857e981ae559f", "filename": "src/test/ui/borrowck/borrowck-issue-14498.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-14498.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-14498.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-14498.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `***p` which is behind a `&` reference\n+error[E0594]: cannot assign to `***p`, which is behind a `&` reference\n   --> $DIR/borrowck-issue-14498.rs:16:5\n    |\n LL |     let p = &y;"}, {"sha": "369a8c61d2c99b73b3561db0881f17d1e8d36460", "filename": "src/test/ui/borrowck/issue-69789-iterator-mut-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-69789-iterator-mut-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-69789-iterator-mut-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-69789-iterator-mut-suggestion.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `*item` which is behind a `&` reference\n+error[E0594]: cannot assign to `*item`, which is behind a `&` reference\n   --> $DIR/issue-69789-iterator-mut-suggestion.rs:7:9\n    |\n LL |     for item in &mut std::iter::empty::<&'static ()>() {"}, {"sha": "d301e7b3524b82f41a9b10def2647bc3c81ca6b5", "filename": "src/test/ui/borrowck/issue-83309-ice-immut-in-for-loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -9,7 +9,7 @@ fn main() {\n     for v in Query.iter_mut() {\n         //~^ NOTE this iterator yields `&` references\n         *v -= 1;\n-        //~^ ERROR cannot assign to `*v` which is behind a `&` reference\n+        //~^ ERROR cannot assign to `*v`, which is behind a `&` reference\n         //~| NOTE `v` is a `&` reference, so the data it refers to cannot be written\n     }\n }"}, {"sha": "26ce007dd346a33c503b190edad1c1100a3d1e2c", "filename": "src/test/ui/borrowck/issue-83309-ice-immut-in-for-loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-83309-ice-immut-in-for-loop.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `*v` which is behind a `&` reference\n+error[E0594]: cannot assign to `*v`, which is behind a `&` reference\n   --> $DIR/issue-83309-ice-immut-in-for-loop.rs:11:9\n    |\n LL |     for v in Query.iter_mut() {"}, {"sha": "1a5f7434fe2bb2173d8183a060bfa7d8790033cd", "filename": "src/test/ui/borrowck/issue-85765.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -5,4 +5,11 @@ fn main() {\n     rofl.push(Vec::new());\n     //~^ ERROR cannot borrow `*rofl` as mutable, as it is behind a `&` reference\n     //~| NOTE `rofl` is a `&` reference, so the data it refers to cannot be borrowed as mutable\n+\n+    let mut mutvar = 42;\n+    let r = &mutvar;\n+    //~^ HELP consider changing this to be a mutable reference\n+    *r = 0;\n+    //~^ ERROR cannot assign to `*r`, which is behind a `&` reference\n+    //~| NOTE `r` is a `&` reference, so the data it refers to cannot be written\n }"}, {"sha": "4da4c8f59466666baa5f47b4094fd9296aea4abb", "filename": "src/test/ui/borrowck/issue-85765.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -7,6 +7,16 @@ LL |\n LL |     rofl.push(Vec::new());\n    |     ^^^^ `rofl` is a `&` reference, so the data it refers to cannot be borrowed as mutable\n \n-error: aborting due to previous error\n+error[E0594]: cannot assign to `*r`, which is behind a `&` reference\n+  --> $DIR/issue-85765.rs:12:5\n+   |\n+LL |     let r = &mutvar;\n+   |             ------- help: consider changing this to be a mutable reference: `&mut mutvar`\n+LL |\n+LL |     *r = 0;\n+   |     ^^^^^^ `r` is a `&` reference, so the data it refers to cannot be written\n+\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0596`.\n+Some errors have detailed explanations: E0594, E0596.\n+For more information about an error, try `rustc --explain E0594`."}, {"sha": "edab22569b34f7e6aef5a290d2c333e6f8ac2b3b", "filename": "src/test/ui/borrowck/mutability-errors.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fmutability-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fborrowck%2Fmutability-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmutability-errors.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,12 +1,12 @@\n-error[E0594]: cannot assign to `*x` which is behind a `&` reference\n+error[E0594]: cannot assign to `*x`, which is behind a `&` reference\n   --> $DIR/mutability-errors.rs:9:5\n    |\n LL | fn named_ref(x: &(i32,)) {\n    |                 ------- help: consider changing this to be a mutable reference: `&mut (i32,)`\n LL |     *x = (1,);\n    |     ^^^^^^^^^ `x` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `x.0` which is behind a `&` reference\n+error[E0594]: cannot assign to `x.0`, which is behind a `&` reference\n   --> $DIR/mutability-errors.rs:10:5\n    |\n LL | fn named_ref(x: &(i32,)) {\n@@ -57,15 +57,15 @@ error[E0596]: cannot borrow data in a `&` reference as mutable\n LL |     &mut f().0;\n    |     ^^^^^^^^^^ cannot borrow as mutable\n \n-error[E0594]: cannot assign to `*x` which is behind a `*const` pointer\n+error[E0594]: cannot assign to `*x`, which is behind a `*const` pointer\n   --> $DIR/mutability-errors.rs:23:5\n    |\n LL | unsafe fn named_ptr(x: *const (i32,)) {\n    |                        ------------- help: consider changing this to be a mutable pointer: `*mut (i32,)`\n LL |     *x = (1,);\n    |     ^^^^^^^^^ `x` is a `*const` pointer, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `x.0` which is behind a `*const` pointer\n+error[E0594]: cannot assign to `x.0`, which is behind a `*const` pointer\n   --> $DIR/mutability-errors.rs:24:5\n    |\n LL | unsafe fn named_ptr(x: *const (i32,)) {"}, {"sha": "a19d3f7047cea0ca9155f9e287422e31d49445ac", "filename": "src/test/ui/did_you_mean/issue-39544.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -46,5 +46,5 @@ pub fn with_tuple() {\n     let mut y = 0;\n     let x = (&y,);\n     *x.0 = 1;\n-    //~^ ERROR cannot assign to `*x.0` which is behind a `&` reference\n+    //~^ ERROR cannot assign to `*x.0`, which is behind a `&` reference\n }"}, {"sha": "68180eaee036c41f1fa7d80fa88fead6bb498250", "filename": "src/test/ui/did_you_mean/issue-39544.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -90,7 +90,7 @@ LL |     let _ = &mut z.x;\n LL |     let _ = &mut w.x;\n    |             ^^^^^^^^ `w` is a `&` reference, so the data it refers to cannot be borrowed as mutable\n \n-error[E0594]: cannot assign to `*x.0` which is behind a `&` reference\n+error[E0594]: cannot assign to `*x.0`, which is behind a `&` reference\n   --> $DIR/issue-39544.rs:48:5\n    |\n LL |     *x.0 = 1;"}, {"sha": "41172b362f495b296ce790ec1539dd36d63447f8", "filename": "src/test/ui/error-codes/E0389.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Ferror-codes%2FE0389.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Ferror-codes%2FE0389.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0389.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -5,6 +5,6 @@ struct FancyNum {\n fn main() {\n     let mut fancy = FancyNum{ num: 5 };\n     let fancy_ref = &(&mut fancy);\n-    fancy_ref.num = 6; //~ ERROR cannot assign to `fancy_ref.num` which is behind a `&` reference\n+    fancy_ref.num = 6; //~ ERROR cannot assign to `fancy_ref.num`, which is behind a `&` reference\n     println!(\"{}\", fancy_ref.num);\n }"}, {"sha": "3d615bd932f436fe42e5c529664424ded3959616", "filename": "src/test/ui/error-codes/E0389.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Ferror-codes%2FE0389.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Ferror-codes%2FE0389.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0389.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `fancy_ref.num` which is behind a `&` reference\n+error[E0594]: cannot assign to `fancy_ref.num`, which is behind a `&` reference\n   --> $DIR/E0389.rs:8:5\n    |\n LL |     let fancy_ref = &(&mut fancy);"}, {"sha": "d634b8bf80079ce8f885c5ffea40b9455f52847e", "filename": "src/test/ui/issues/issue-51244.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fissues%2Fissue-51244.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fissues%2Fissue-51244.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51244.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n fn main() {\n     let ref my_ref @ _ = 0;\n-    *my_ref = 0; //~ ERROR cannot assign to `*my_ref` which is behind a `&` reference [E0594]\n+    *my_ref = 0; //~ ERROR cannot assign to `*my_ref`, which is behind a `&` reference [E0594]\n }"}, {"sha": "19f0223a357a53e1fee7727c77516654b4e3a158", "filename": "src/test/ui/issues/issue-51244.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fissues%2Fissue-51244.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fissues%2Fissue-51244.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51244.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `*my_ref` which is behind a `&` reference\n+error[E0594]: cannot assign to `*my_ref`, which is behind a `&` reference\n   --> $DIR/issue-51244.rs:3:5\n    |\n LL |     let ref my_ref @ _ = 0;"}, {"sha": "54fd176de75f033f20935e787431d6a88d3be638", "filename": "src/test/ui/issues/issue-51515.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fissues%2Fissue-51515.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fissues%2Fissue-51515.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51515.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -3,10 +3,10 @@ fn main() {\n     //~^ HELP consider changing this to be a mutable reference\n     //~| SUGGESTION &mut 16\n     *foo = 32;\n-    //~^ ERROR cannot assign to `*foo` which is behind a `&` reference\n+    //~^ ERROR cannot assign to `*foo`, which is behind a `&` reference\n     let bar = foo;\n     //~^ HELP consider changing this to be a mutable reference\n     //~| SUGGESTION &mut i32\n     *bar = 64;\n-    //~^ ERROR cannot assign to `*bar` which is behind a `&` reference\n+    //~^ ERROR cannot assign to `*bar`, which is behind a `&` reference\n }"}, {"sha": "62bb462faa208b8ae61890000cdb7c0b2b159d33", "filename": "src/test/ui/issues/issue-51515.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fissues%2Fissue-51515.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fissues%2Fissue-51515.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51515.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `*foo` which is behind a `&` reference\n+error[E0594]: cannot assign to `*foo`, which is behind a `&` reference\n   --> $DIR/issue-51515.rs:5:5\n    |\n LL |     let foo = &16;\n@@ -7,7 +7,7 @@ LL |     let foo = &16;\n LL |     *foo = 32;\n    |     ^^^^^^^^^ `foo` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*bar` which is behind a `&` reference\n+error[E0594]: cannot assign to `*bar`, which is behind a `&` reference\n   --> $DIR/issue-51515.rs:10:5\n    |\n LL |     let bar = foo;"}, {"sha": "5a4e31947f2b2e889a1ceee9b40625fe3c4a0270", "filename": "src/test/ui/mut/mutable-class-fields-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fmut%2Fmutable-class-fields-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fmut%2Fmutable-class-fields-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmut%2Fmutable-class-fields-2.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `self.how_hungry` which is behind a `&` reference\n+error[E0594]: cannot assign to `self.how_hungry`, which is behind a `&` reference\n   --> $DIR/mutable-class-fields-2.rs:9:5\n    |\n LL |   pub fn eat(&self) {"}, {"sha": "a4ee7781753060f0bb8c6fbd7f5227d692f031c0", "filename": "src/test/ui/nll/issue-47388.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-47388.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-47388.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-47388.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `fancy_ref.num` which is behind a `&` reference\n+error[E0594]: cannot assign to `fancy_ref.num`, which is behind a `&` reference\n   --> $DIR/issue-47388.rs:8:5\n    |\n LL |     let fancy_ref = &(&mut fancy);"}, {"sha": "c4cbee6754c0461432785589aae247b71392fbcc", "filename": "src/test/ui/nll/issue-51244.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-51244.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-51244.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-51244.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,5 +1,5 @@\n fn main() {\n     let ref my_ref @ _ = 0;\n     *my_ref = 0;\n-    //~^ ERROR cannot assign to `*my_ref` which is behind a `&` reference [E0594]\n+    //~^ ERROR cannot assign to `*my_ref`, which is behind a `&` reference [E0594]\n }"}, {"sha": "19f0223a357a53e1fee7727c77516654b4e3a158", "filename": "src/test/ui/nll/issue-51244.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-51244.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-51244.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-51244.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `*my_ref` which is behind a `&` reference\n+error[E0594]: cannot assign to `*my_ref`, which is behind a `&` reference\n   --> $DIR/issue-51244.rs:3:5\n    |\n LL |     let ref my_ref @ _ = 0;"}, {"sha": "8f3dec454d5ff9640212bd710a7b37c9a06bcfdb", "filename": "src/test/ui/nll/issue-57989.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-57989.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-57989.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-57989.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -2,7 +2,7 @@\n \n fn f(x: &i32) {\n     let g = &x;\n-    *x = 0;     //~ ERROR cannot assign to `*x` which is behind a `&` reference\n+    *x = 0;     //~ ERROR cannot assign to `*x`, which is behind a `&` reference\n                 //~| ERROR cannot assign to `*x` because it is borrowed\n     g;\n }"}, {"sha": "e85e63e52ecc37bbec6731f5b2f1c34078cddf92", "filename": "src/test/ui/nll/issue-57989.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-57989.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fnll%2Fissue-57989.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-57989.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `*x` which is behind a `&` reference\n+error[E0594]: cannot assign to `*x`, which is behind a `&` reference\n   --> $DIR/issue-57989.rs:5:5\n    |\n LL | fn f(x: &i32) {"}, {"sha": "a6144c9497d0483255c3fbaa23c314d36ab49292", "filename": "src/test/ui/pattern/move-ref-patterns/borrowck-move-ref-pattern.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -23,8 +23,8 @@ fn tuple() {\n     _x1 = U; //~ ERROR cannot assign twice to immutable variable\n     let _x0_hold = &mut tup.0; //~ ERROR cannot borrow `tup.0` as mutable because it is also\n     let (ref mut _x0_hold, ..) = tup; //~ ERROR cannot borrow `tup.0` as mutable because it is also\n-    *_x0 = U; //~ ERROR cannot assign to `*_x0` which is behind a `&` reference\n-    *_x2 = U; //~ ERROR cannot assign to `*_x2` which is behind a `&` reference\n+    *_x0 = U; //~ ERROR cannot assign to `*_x0`, which is behind a `&` reference\n+    *_x2 = U; //~ ERROR cannot assign to `*_x2`, which is behind a `&` reference\n     drop(tup.1); //~ ERROR use of moved value: `tup.1`\n     let _x1_hold = &tup.1; //~ ERROR borrow of moved value: `tup.1`\n     let (.., ref mut _x3) = tup;"}, {"sha": "5beca04d285901aafc840a7b0aba00f63903e7f7", "filename": "src/test/ui/pattern/move-ref-patterns/borrowck-move-ref-pattern.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -101,7 +101,7 @@ LL |     let (ref mut _x0_hold, ..) = tup;\n LL |     *_x0 = U;\n    |     -------- immutable borrow later used here\n \n-error[E0594]: cannot assign to `*_x0` which is behind a `&` reference\n+error[E0594]: cannot assign to `*_x0`, which is behind a `&` reference\n   --> $DIR/borrowck-move-ref-pattern.rs:26:5\n    |\n LL |     let (ref _x0, _x1, ref _x2, ..) = tup;\n@@ -110,7 +110,7 @@ LL |     let (ref _x0, _x1, ref _x2, ..) = tup;\n LL |     *_x0 = U;\n    |     ^^^^^^^^ `_x0` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*_x2` which is behind a `&` reference\n+error[E0594]: cannot assign to `*_x2`, which is behind a `&` reference\n   --> $DIR/borrowck-move-ref-pattern.rs:27:5\n    |\n LL |     let (ref _x0, _x1, ref _x2, ..) = tup;"}, {"sha": "4e57769d6e24c877885437173092118d558a9e52", "filename": "src/test/ui/rfc-2005-default-binding-mode/enum.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fenum.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -6,17 +6,17 @@ use Wrapper::Wrap;\n \n pub fn main() {\n     let Wrap(x) = &Wrap(3);\n-    *x += 1; //~ ERROR cannot assign to `*x` which is behind a `&` reference\n+    *x += 1; //~ ERROR cannot assign to `*x`, which is behind a `&` reference\n \n \n     if let Some(x) = &Some(3) {\n-        *x += 1; //~ ERROR cannot assign to `*x` which is behind a `&` reference\n+        *x += 1; //~ ERROR cannot assign to `*x`, which is behind a `&` reference\n     } else {\n         panic!();\n     }\n \n     while let Some(x) = &Some(3) {\n-        *x += 1; //~ ERROR cannot assign to `*x` which is behind a `&` reference\n+        *x += 1; //~ ERROR cannot assign to `*x`, which is behind a `&` reference\n         break;\n     }\n }"}, {"sha": "21e3d3d273d7f3295435089754d57ef04e10aea2", "filename": "src/test/ui/rfc-2005-default-binding-mode/enum.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fenum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fenum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fenum.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,16 +1,16 @@\n-error[E0594]: cannot assign to `*x` which is behind a `&` reference\n+error[E0594]: cannot assign to `*x`, which is behind a `&` reference\n   --> $DIR/enum.rs:9:5\n    |\n LL |     *x += 1;\n    |     ^^^^^^^ `x` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*x` which is behind a `&` reference\n+error[E0594]: cannot assign to `*x`, which is behind a `&` reference\n   --> $DIR/enum.rs:13:9\n    |\n LL |         *x += 1;\n    |         ^^^^^^^ `x` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*x` which is behind a `&` reference\n+error[E0594]: cannot assign to `*x`, which is behind a `&` reference\n   --> $DIR/enum.rs:19:9\n    |\n LL |         *x += 1;"}, {"sha": "b8fde2208acd5a1bf4fd7d3ba4ed670b6e435aac", "filename": "src/test/ui/rfc-2005-default-binding-mode/explicit-mut.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fexplicit-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fexplicit-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fexplicit-mut.rs?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -4,23 +4,23 @@\n fn main() {\n     match &&Some(5i32) {\n         Some(n) => {\n-            *n += 1; //~ ERROR cannot assign to `*n` which is behind a `&` reference\n+            *n += 1; //~ ERROR cannot assign to `*n`, which is behind a `&` reference\n             let _ = n;\n         }\n         None => {},\n     };\n \n     match &mut &Some(5i32) {\n         Some(n) => {\n-            *n += 1; //~ ERROR cannot assign to `*n` which is behind a `&` reference\n+            *n += 1; //~ ERROR cannot assign to `*n`, which is behind a `&` reference\n             let _ = n;\n         }\n         None => {},\n     };\n \n     match &&mut Some(5i32) {\n         Some(n) => {\n-            *n += 1; //~ ERROR cannot assign to `*n` which is behind a `&` reference\n+            *n += 1; //~ ERROR cannot assign to `*n`, which is behind a `&` reference\n             let _ = n;\n         }\n         None => {},"}, {"sha": "c3f64f65a412ec40e5bdd79ce18fffa0b90ccc83", "filename": "src/test/ui/rfc-2005-default-binding-mode/explicit-mut.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fexplicit-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fexplicit-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fexplicit-mut.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,16 +1,16 @@\n-error[E0594]: cannot assign to `*n` which is behind a `&` reference\n+error[E0594]: cannot assign to `*n`, which is behind a `&` reference\n   --> $DIR/explicit-mut.rs:7:13\n    |\n LL |             *n += 1;\n    |             ^^^^^^^ `n` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*n` which is behind a `&` reference\n+error[E0594]: cannot assign to `*n`, which is behind a `&` reference\n   --> $DIR/explicit-mut.rs:15:13\n    |\n LL |             *n += 1;\n    |             ^^^^^^^ `n` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*n` which is behind a `&` reference\n+error[E0594]: cannot assign to `*n`, which is behind a `&` reference\n   --> $DIR/explicit-mut.rs:23:13\n    |\n LL |             *n += 1;"}, {"sha": "7f931f0cdc9e8d11133f978284628b1ee70fe83c", "filename": "src/test/ui/suggestions/issue-68049-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fsuggestions%2Fissue-68049-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fsuggestions%2Fissue-68049-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-68049-1.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `self.0` which is behind a `&` reference\n+error[E0594]: cannot assign to `self.0`, which is behind a `&` reference\n   --> $DIR/issue-68049-1.rs:7:9\n    |\n LL |         self.0 += 1;"}, {"sha": "2f31193e4a4a2b1717bf3d1bd5acd45e9e21a74b", "filename": "src/test/ui/suggestions/issue-68049-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fsuggestions%2Fissue-68049-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fsuggestions%2Fissue-68049-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-68049-2.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `*input` which is behind a `&` reference\n+error[E0594]: cannot assign to `*input`, which is behind a `&` reference\n   --> $DIR/issue-68049-2.rs:9:7\n    |\n LL |   fn example(&self, input: &i32); // should suggest here\n@@ -7,7 +7,7 @@ LL |   fn example(&self, input: &i32); // should suggest here\n LL |       *input = self.0;\n    |       ^^^^^^^^^^^^^^^ `input` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `self.0` which is behind a `&` reference\n+error[E0594]: cannot assign to `self.0`, which is behind a `&` reference\n   --> $DIR/issue-68049-2.rs:17:5\n    |\n LL |   fn example(&self, input: &i32); // should suggest here"}, {"sha": "3eb9e1031d7067101cf620aa4f64aa06ad08c6dd", "filename": "src/test/ui/suggestions/suggest-mut-method-for-loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-mut-method-for-loop.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `t.v` which is behind a `&` reference\n+error[E0594]: cannot assign to `t.v`, which is behind a `&` reference\n   --> $DIR/suggest-mut-method-for-loop.rs:14:9\n    |\n LL |     for mut t in buzz.values() {"}, {"sha": "9fd2658ec702db71609de9cba8ea44458c58bc86", "filename": "src/test/ui/suggestions/suggest-ref-mut.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-ref-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97c29bda238cf55ddd7eec772deb823364b1846/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-ref-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-ref-mut.stderr?ref=e97c29bda238cf55ddd7eec772deb823364b1846", "patch": "@@ -1,4 +1,4 @@\n-error[E0594]: cannot assign to `self.0` which is behind a `&` reference\n+error[E0594]: cannot assign to `self.0`, which is behind a `&` reference\n   --> $DIR/suggest-ref-mut.rs:7:9\n    |\n LL |     fn zap(&self) {\n@@ -7,7 +7,7 @@ LL |     fn zap(&self) {\n LL |         self.0 = 32;\n    |         ^^^^^^^^^^^ `self` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*foo` which is behind a `&` reference\n+error[E0594]: cannot assign to `*foo`, which is behind a `&` reference\n   --> $DIR/suggest-ref-mut.rs:16:5\n    |\n LL |     let ref foo = 16;\n@@ -16,7 +16,7 @@ LL |     let ref foo = 16;\n LL |     *foo = 32;\n    |     ^^^^^^^^^ `foo` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*bar` which is behind a `&` reference\n+error[E0594]: cannot assign to `*bar`, which is behind a `&` reference\n   --> $DIR/suggest-ref-mut.rs:21:9\n    |\n LL |     if let Some(ref bar) = Some(16) {\n@@ -25,7 +25,7 @@ LL |     if let Some(ref bar) = Some(16) {\n LL |         *bar = 32;\n    |         ^^^^^^^^^ `bar` is a `&` reference, so the data it refers to cannot be written\n \n-error[E0594]: cannot assign to `*quo` which is behind a `&` reference\n+error[E0594]: cannot assign to `*quo`, which is behind a `&` reference\n   --> $DIR/suggest-ref-mut.rs:25:22\n    |\n LL |         ref quo => { *quo = 32; },"}]}