{"sha": "01dbaeda3242d48bb7b432f5fa2c0506e326551c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZGJhZWRhMzI0MmQ0OGJiN2I0MzJmNWZhMmMwNTA2ZTMyNjU1MWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T16:51:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T16:51:11Z"}, "message": "use machine_ prefix for target usize/isize", "tree": {"sha": "6856eedcafe35f6b4ab14b90374452eb00626803", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6856eedcafe35f6b4ab14b90374452eb00626803"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01dbaeda3242d48bb7b432f5fa2c0506e326551c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01dbaeda3242d48bb7b432f5fa2c0506e326551c", "html_url": "https://github.com/rust-lang/rust/commit/01dbaeda3242d48bb7b432f5fa2c0506e326551c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01dbaeda3242d48bb7b432f5fa2c0506e326551c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bad4844b2034ff347479cc27275dc9ea8899f15", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bad4844b2034ff347479cc27275dc9ea8899f15", "html_url": "https://github.com/rust-lang/rust/commit/8bad4844b2034ff347479cc27275dc9ea8899f15"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d22207bd81651bdd0b481f345040a905f2dab4ba", "filename": "src/librustc/mir/interpret/pointer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01dbaeda3242d48bb7b432f5fa2c0506e326551c/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01dbaeda3242d48bb7b432f5fa2c0506e326551c/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs?ref=01dbaeda3242d48bb7b432f5fa2c0506e326551c", "patch": "@@ -46,13 +46,13 @@ pub trait PointerArithmetic: layout::HasDataLayout {\n     }\n \n     #[inline]\n-    fn usize_max(&self) -> u64 {\n+    fn machine_usize_max(&self) -> u64 {\n         let max_usize_plus_1 = 1u128 << self.pointer_size().bits();\n         u64::try_from(max_usize_plus_1 - 1).unwrap()\n     }\n \n     #[inline]\n-    fn isize_max(&self) -> i64 {\n+    fn machine_isize_max(&self) -> i64 {\n         let max_isize_plus_1 = 1u128 << (self.pointer_size().bits() - 1);\n         i64::try_from(max_isize_plus_1 - 1).unwrap()\n     }"}]}