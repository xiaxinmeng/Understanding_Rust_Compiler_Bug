{"sha": "9644d60cc449461f3d7289099654d1f6d227244f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NDRkNjBjYzQ0OTQ2MWYzZDcyODkwOTk2NTRkMWY2ZDIyNzI0NGY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-10T15:36:33Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-12-19T07:31:52Z"}, "message": "Fix the capture_stderr test\n\nThere's always a fun time having two sets of standard libraries when testing!", "tree": {"sha": "af9976fdf6950fc38bf5c241fa4f74aca45d6bcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af9976fdf6950fc38bf5c241fa4f74aca45d6bcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9644d60cc449461f3d7289099654d1f6d227244f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9644d60cc449461f3d7289099654d1f6d227244f", "html_url": "https://github.com/rust-lang/rust/commit/9644d60cc449461f3d7289099654d1f6d227244f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9644d60cc449461f3d7289099654d1f6d227244f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ced22398528db51fcb7e704fdd390dea481d36b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ced22398528db51fcb7e704fdd390dea481d36b8", "html_url": "https://github.com/rust-lang/rust/commit/ced22398528db51fcb7e704fdd390dea481d36b8"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "8e28ad1add58a852038875fd428525934dd41ebc", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9644d60cc449461f3d7289099654d1f6d227244f/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9644d60cc449461f3d7289099654d1f6d227244f/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=9644d60cc449461f3d7289099654d1f6d227244f", "patch": "@@ -532,15 +532,14 @@ mod tests {\n         assert_eq!(r.read_to_string().unwrap(), \"hello!\\n\");\n     }\n \n-    //#[test]\n+    #[test]\n     fn capture_stderr() {\n-        use realstd::comm::channel;\n-        use realstd::io::{ChanReader, ChanWriter, Reader};\n+        use io::{ChanReader, ChanWriter, Reader};\n \n         let (tx, rx) = channel();\n         let (mut r, w) = (ChanReader::new(rx), ChanWriter::new(tx));\n         spawn(move|| {\n-            ::realstd::io::stdio::set_stderr(box w);\n+            set_stderr(box w);\n             panic!(\"my special message\");\n         });\n         let s = r.read_to_string().unwrap();"}]}