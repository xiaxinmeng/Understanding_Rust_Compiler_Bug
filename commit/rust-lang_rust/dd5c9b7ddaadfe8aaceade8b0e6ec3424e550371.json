{"sha": "dd5c9b7ddaadfe8aaceade8b0e6ec3424e550371", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNWM5YjdkZGFhZGZlOGFhY2VhZGU4YjBlNmVjMzQyNGU1NTAzNzE=", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-02-16T15:58:00Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-02-16T15:58:00Z"}, "message": "lintcheck: Slight improvements to the error reporting", "tree": {"sha": "d4527fdc302cb6b38ac96b38c07b25fbb2a0aa99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4527fdc302cb6b38ac96b38c07b25fbb2a0aa99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd5c9b7ddaadfe8aaceade8b0e6ec3424e550371", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmAr64gACgkQHKDfKvWd\naKX+sBAA0A3ftKyG1N3a2EtSNH6DlQAnUKFlZsxtdNZlS339RoLhjrwSk/WpFr0q\nGRE1JQqTARZXLDSI8ZI7nsqUuATDq8rceNuYzhnf3TpmWN8ywnvsAO/leXswL60e\nKLch6xDoQ2Y8Gb+LEDOKOHPKIP53J+ggQDpv8EnOf0W46Zr0uizhiEzKZJWNuFbr\nE14Wu7y0qHDkVo+O2XZQjv5YFdU5iry0DIeCmDY2jfX79JRc59eHEw76KM7tV30H\nYQr7DNzSZujlyL1AU8fUEPegyOEJ+KEsSKLrtsT4tG9mXFO7tC++odOh4DCO0CIJ\nHakn5ft0ilKwOWhwZG8XuAz0c4OFVXxnF5ozRw2vhrTaqdqBNGXP9UM5xb6954rv\nZPD4RkEqNoGWTOjmnENCbzynBXrJ4HpLYgKkg06k5hsMNDJSV+u6QdXM2so3VYxf\nR4Cwq6tQnu7HEK8A+RkWIRifMw4y9ESg0UMFCLwsdNreAMJUFpfIcpeKKZRq6frt\np2qiixnVQ0BTfgh1QAa2sy4VX2FteH2ech9VjuBUAFTpfGxSQAftyrjtVCGiQ1KJ\nTbZzEgNxpkgRsZ0tT0HRncELRqtBsXDsLTeIfT/hmaGy4w4ywKZoW9HLs29GGLUg\nnAtkhueNTz8E3KOb0URZ2di9zSzpOFz/22ll099H2ZSp+EhD770=\n=vnV8\n-----END PGP SIGNATURE-----", "payload": "tree d4527fdc302cb6b38ac96b38c07b25fbb2a0aa99\nparent 2a28ea0beaca8b9de1d26ef4af9e264db1c143c4\nauthor flip1995 <philipp.krones@embecosm.com> 1613491080 +0100\ncommitter flip1995 <philipp.krones@embecosm.com> 1613491080 +0100\n\nlintcheck: Slight improvements to the error reporting\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5c9b7ddaadfe8aaceade8b0e6ec3424e550371", "html_url": "https://github.com/rust-lang/rust/commit/dd5c9b7ddaadfe8aaceade8b0e6ec3424e550371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd5c9b7ddaadfe8aaceade8b0e6ec3424e550371/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a28ea0beaca8b9de1d26ef4af9e264db1c143c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a28ea0beaca8b9de1d26ef4af9e264db1c143c4", "html_url": "https://github.com/rust-lang/rust/commit/2a28ea0beaca8b9de1d26ef4af9e264db1c143c4"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "cd3dd8143d55753b8433d25f83accbc48ec8b617", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dd5c9b7ddaadfe8aaceade8b0e6ec3424e550371/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd5c9b7ddaadfe8aaceade8b0e6ec3424e550371/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=dd5c9b7ddaadfe8aaceade8b0e6ec3424e550371", "patch": "@@ -283,10 +283,14 @@ fn filter_clippy_warnings(line: &str) -> bool {\n \n /// Builds clippy inside the repo to make sure we have a clippy executable we can use.\n fn build_clippy() {\n-    Command::new(\"cargo\")\n+    let output = Command::new(\"cargo\")\n         .arg(\"build\")\n         .output()\n         .expect(\"Failed to build clippy!\");\n+    if !output.status.success() {\n+        eprintln!(\"Failed to compile Clippy\");\n+        eprintln!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr))\n+    }\n }\n \n /// Read a `toml` file and return a list of `CrateSources` that we want to check with clippy\n@@ -402,12 +406,14 @@ fn gather_stats(clippy_warnings: &[ClippyWarning]) -> String {\n \n /// lintchecks `main()` function\n pub fn run(clap_config: &ArgMatches) {\n-    let cargo_clippy_path: PathBuf = PathBuf::from(\"target/debug/cargo-clippy\");\n-\n     println!(\"Compiling clippy...\");\n     build_clippy();\n     println!(\"Done compiling\");\n \n+    let cargo_clippy_path: PathBuf = PathBuf::from(\"target/debug/cargo-clippy\")\n+        .canonicalize()\n+        .expect(\"failed to canonicalize path to clippy binary\");\n+\n     // assert that clippy is found\n     assert!(\n         cargo_clippy_path.is_file(),\n@@ -484,5 +490,6 @@ pub fn run(clap_config: &ArgMatches) {\n         .for_each(|(cratename, msg)| text.push_str(&format!(\"{}: '{}'\", cratename, msg)));\n \n     let file = format!(\"lintcheck-logs/{}_logs.txt\", filename);\n+    println!(\"Writing logs to {}\", file);\n     write(file, text).unwrap();\n }"}]}