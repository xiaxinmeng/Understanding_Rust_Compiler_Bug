{"sha": "5e32da184933e4398a99a3be13d21db857f059b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMzJkYTE4NDkzM2U0Mzk4YTk5YTNiZTEzZDIxZGI4NTdmMDU5YjU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-12-11T23:14:09Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-12-11T23:14:09Z"}, "message": "LinkedList: drop remaining items when drop panics", "tree": {"sha": "822e5983e1f9e97fda1c02822606ba75a7ed585a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/822e5983e1f9e97fda1c02822606ba75a7ed585a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e32da184933e4398a99a3be13d21db857f059b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e32da184933e4398a99a3be13d21db857f059b5", "html_url": "https://github.com/rust-lang/rust/commit/5e32da184933e4398a99a3be13d21db857f059b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e32da184933e4398a99a3be13d21db857f059b5/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27d6f55f47e8875e71083a28ed84ea5a88e1b596", "url": "https://api.github.com/repos/rust-lang/rust/commits/27d6f55f47e8875e71083a28ed84ea5a88e1b596", "html_url": "https://github.com/rust-lang/rust/commit/27d6f55f47e8875e71083a28ed84ea5a88e1b596"}], "stats": {"total": 123, "additions": 122, "deletions": 1}, "files": [{"sha": "6ee22834a460e72b124a9c2c81ea3294f12b5812", "filename": "src/liballoc/collections/linked_list.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5e32da184933e4398a99a3be13d21db857f059b5/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e32da184933e4398a99a3be13d21db857f059b5/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Flinked_list.rs?ref=5e32da184933e4398a99a3be13d21db857f059b5", "patch": "@@ -808,7 +808,21 @@ impl<T> LinkedList<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe impl<#[may_dangle] T> Drop for LinkedList<T> {\n     fn drop(&mut self) {\n-        while let Some(_) = self.pop_front_node() {}\n+        struct DropGuard<'a, T>(&'a mut LinkedList<T>);\n+\n+        impl<'a, T> Drop for DropGuard<'a, T> {\n+            fn drop(&mut self) {\n+                // Continue the same loop we do below. This only runs when a destructor has\n+                // panicked. If another one panics this will abort.\n+                while let Some(_) = self.0.pop_front_node() {}\n+            }\n+        }\n+\n+        while let Some(node) = self.pop_front_node() {\n+            let guard = DropGuard(self);\n+            drop(node);\n+            mem::forget(guard);\n+        }\n     }\n }\n "}, {"sha": "54a77d643cbe36a1c35697fa95c723821b1edee1", "filename": "src/liballoc/tests/linked_list.rs", "status": "modified", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/5e32da184933e4398a99a3be13d21db857f059b5/src%2Fliballoc%2Ftests%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e32da184933e4398a99a3be13d21db857f059b5/src%2Fliballoc%2Ftests%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flinked_list.rs?ref=5e32da184933e4398a99a3be13d21db857f059b5", "patch": "@@ -1,4 +1,5 @@\n use std::collections::LinkedList;\n+use std::panic::catch_unwind;\n \n #[test]\n fn test_basic() {\n@@ -529,3 +530,109 @@ fn drain_filter_complex() {\n         assert_eq!(list.into_iter().collect::<Vec<_>>(), vec![1, 3, 5, 7, 9, 11, 13, 15, 17, 19]);\n     }\n }\n+\n+\n+#[test]\n+fn test_drop() {\n+    static mut DROPS: i32 = 0;\n+    struct Elem;\n+    impl Drop for Elem {\n+        fn drop(&mut self) {\n+            unsafe {\n+                DROPS += 1;\n+            }\n+        }\n+    }\n+\n+    let mut ring = LinkedList::new();\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    drop(ring);\n+\n+    assert_eq!(unsafe { DROPS }, 4);\n+}\n+\n+#[test]\n+fn test_drop_with_pop() {\n+    static mut DROPS: i32 = 0;\n+    struct Elem;\n+    impl Drop for Elem {\n+        fn drop(&mut self) {\n+            unsafe {\n+                DROPS += 1;\n+            }\n+        }\n+    }\n+\n+    let mut ring = LinkedList::new();\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+\n+    drop(ring.pop_back());\n+    drop(ring.pop_front());\n+    assert_eq!(unsafe { DROPS }, 2);\n+\n+    drop(ring);\n+    assert_eq!(unsafe { DROPS }, 4);\n+}\n+\n+#[test]\n+fn test_drop_clear() {\n+    static mut DROPS: i32 = 0;\n+    struct Elem;\n+    impl Drop for Elem {\n+        fn drop(&mut self) {\n+            unsafe {\n+                DROPS += 1;\n+            }\n+        }\n+    }\n+\n+    let mut ring = LinkedList::new();\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    ring.clear();\n+    assert_eq!(unsafe { DROPS }, 4);\n+\n+    drop(ring);\n+    assert_eq!(unsafe { DROPS }, 4);\n+}\n+\n+#[test]\n+fn test_drop_panic() {\n+    static mut DROPS: i32 = 0;\n+\n+    struct D(bool);\n+\n+    impl Drop for D {\n+        fn drop(&mut self) {\n+            unsafe {\n+                DROPS += 1;\n+            }\n+\n+            if self.0 {\n+                panic!(\"panic in `drop`\");\n+            }\n+        }\n+    }\n+\n+    let mut q = LinkedList::new();\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_front(D(false));\n+    q.push_front(D(false));\n+    q.push_front(D(true));\n+\n+    catch_unwind(move || drop(q)).ok();\n+\n+    assert_eq!(unsafe { DROPS }, 8);\n+}"}]}