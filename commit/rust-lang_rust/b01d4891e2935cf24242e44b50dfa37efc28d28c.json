{"sha": "b01d4891e2935cf24242e44b50dfa37efc28d28c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMWQ0ODkxZTI5MzVjZjI0MjQyZTQ0YjUwZGZhMzdlZmMyOGQyOGM=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-09-17T16:06:21Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-09-20T17:08:06Z"}, "message": "rustc: don't recurse through nested items in decoded HIR fragments.", "tree": {"sha": "8f4dccd52d6d398f86bea9fa1f4b0b4d86a739c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f4dccd52d6d398f86bea9fa1f4b0b4d86a739c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b01d4891e2935cf24242e44b50dfa37efc28d28c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b01d4891e2935cf24242e44b50dfa37efc28d28c", "html_url": "https://github.com/rust-lang/rust/commit/b01d4891e2935cf24242e44b50dfa37efc28d28c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b01d4891e2935cf24242e44b50dfa37efc28d28c/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2283a7be0afb00ff4d6bb1e179a75811286d2cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2283a7be0afb00ff4d6bb1e179a75811286d2cd", "html_url": "https://github.com/rust-lang/rust/commit/f2283a7be0afb00ff4d6bb1e179a75811286d2cd"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "3d9031a136e280cdbd0b5b0ac88178655f121825", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b01d4891e2935cf24242e44b50dfa37efc28d28c/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01d4891e2935cf24242e44b50dfa37efc28d28c/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=b01d4891e2935cf24242e44b50dfa37efc28d28c", "patch": "@@ -27,6 +27,10 @@ pub struct NodeCollector<'ast> {\n     pub map: Vec<MapEntry<'ast>>,\n     /// The parent of this node\n     pub parent_node: NodeId,\n+    /// If true, completely ignore nested items. We set this when loading\n+    /// HIR from metadata, since in that case we only want the HIR for\n+    /// one specific item (and not the ones nested inside of it).\n+    pub ignore_nested_items: bool\n }\n \n impl<'ast> NodeCollector<'ast> {\n@@ -35,6 +39,7 @@ impl<'ast> NodeCollector<'ast> {\n             krate: krate,\n             map: vec![],\n             parent_node: CRATE_NODE_ID,\n+            ignore_nested_items: false\n         };\n         collector.insert_entry(CRATE_NODE_ID, RootCrate);\n \n@@ -52,6 +57,7 @@ impl<'ast> NodeCollector<'ast> {\n             krate: krate,\n             map: map,\n             parent_node: parent_node,\n+            ignore_nested_items: true\n         };\n \n         assert_eq!(parent_def_path.krate, parent_def_id.krate);\n@@ -88,7 +94,9 @@ impl<'ast> Visitor<'ast> for NodeCollector<'ast> {\n     /// their outer items.\n     fn visit_nested_item(&mut self, item: ItemId) {\n         debug!(\"visit_nested_item: {:?}\", item);\n-        self.visit_item(self.krate.item(item.id))\n+        if !self.ignore_nested_items {\n+            self.visit_item(self.krate.item(item.id))\n+        }\n     }\n \n     fn visit_item(&mut self, i: &'ast Item) {"}, {"sha": "ea1f8aac7a55ab036a3d065529468c118e017188", "filename": "src/librustc/hir/map/def_collector.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b01d4891e2935cf24242e44b50dfa37efc28d28c/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01d4891e2935cf24242e44b50dfa37efc28d28c/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs?ref=b01d4891e2935cf24242e44b50dfa37efc28d28c", "patch": "@@ -285,15 +285,6 @@ impl<'ast> visit::Visitor for DefCollector<'ast> {\n \n // We walk the HIR rather than the AST when reading items from metadata.\n impl<'ast> intravisit::Visitor<'ast> for DefCollector<'ast> {\n-    /// Because we want to track parent items and so forth, enable\n-    /// deep walking so that we walk nested items in the context of\n-    /// their outer items.\n-    fn visit_nested_item(&mut self, item_id: hir::ItemId) {\n-        debug!(\"visit_nested_item: {:?}\", item_id);\n-        let item = self.hir_crate.unwrap().item(item_id.id);\n-        self.visit_item(item)\n-    }\n-\n     fn visit_item(&mut self, i: &'ast hir::Item) {\n         debug!(\"visit_item: {:?}\", i);\n "}, {"sha": "cf7fdd7f983f0e545d1851629925d84459fa0c4d", "filename": "src/test/run-pass/auxiliary/issue-17718-aux.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01d4891e2935cf24242e44b50dfa37efc28d28c/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue-17718-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01d4891e2935cf24242e44b50dfa37efc28d28c/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue-17718-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue-17718-aux.rs?ref=b01d4891e2935cf24242e44b50dfa37efc28d28c", "patch": "@@ -14,11 +14,10 @@ use std::sync::atomic;\n \n pub const C1: usize = 1;\n pub const C2: atomic::AtomicUsize = atomic::AtomicUsize::new(0);\n-pub const C3: fn() = foo;\n+pub const C3: fn() = { fn foo() {} foo };\n pub const C4: usize = C1 * C1 + C1 / C1;\n pub const C5: &'static usize = &C4;\n \n pub static S1: usize = 3;\n pub static S2: atomic::AtomicUsize = atomic::AtomicUsize::new(0);\n \n-fn foo() {}"}]}