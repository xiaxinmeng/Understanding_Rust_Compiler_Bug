{"sha": "3295c262aea18f64b80734989ab522e1278a9d14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOTVjMjYyYWVhMThmNjRiODA3MzQ5ODlhYjUyMmUxMjc4YTlkMTQ=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-05T01:09:31Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-05T01:09:31Z"}, "message": "Treat selection error as ambiguous when error type is present", "tree": {"sha": "52f512d789d6b98c414940cf8d7efd7fe8b78aa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52f512d789d6b98c414940cf8d7efd7fe8b78aa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3295c262aea18f64b80734989ab522e1278a9d14", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl7Zm1wACgkQtAh+UQ6Y\nsWQzaA//W1bI36Oa4H98RN33YGN+tGDnZFsvYrPAdY6Y973CBF8h4UKKFarp0rvv\nT/oq1virB7DNJjRqLyCrEzmbDuFpQtFxv38mYG8k1GCijqUzX8zCuWMsXEdO4U0S\nXp05vF1VyCI/8BW/v0JUrQOnOYWPkssHUcf7WqIP3qXySYqjfZeme/zZyb+qRy2R\neDIQ2CLbv6lSuzyiD/w9t3fpPnX8Z26vPtbC7LYp5CAkTwtC0vgq65s9ISZcoizQ\nbY4tWUhnwIqSBpRJWTSp7HQXlY+7Nj7HLcr6TV2C48jx7mBZCkzEh0k6vJOijgaj\nlwTSigbT22mZvKhA4SaCi1+OU4xFFJkCdXb9ZjeOmcNS8OIbVQ+xm46bAOtouSa+\nzwq7+d9O8Qt8WtZGukmKHXMSIJujOTWSbswBXOyPblwPhu5KTCYYurHB06Tr9nig\n0qgpl0iEY3+M0TmB2WqGJIv9Tcpty85qj1W4be1kX/wJevEb7vUNtcBjFR+jefc4\ncyWTI5YT+CSoWNI5wpnv5aZ3JPKUWofuXFp0Ux2s0ARk+BUd22ZHOBlHgBHMn8aV\nsDEu+Vy/kXibXlefNV4XOfbTouT5LUfGrswsymz2AD2fxgZaXvDajOgioECZYfQu\nDBSiqiDMMWc8ObuKbEDQiQMvKY8rD9Qm9fKMert+OogfMhvWV0U=\n=925m\n-----END PGP SIGNATURE-----", "payload": "tree 52f512d789d6b98c414940cf8d7efd7fe8b78aa0\nparent 7f7729d83be2ff8e9e933b94ff02f1bb77d688f8\nauthor Aaron Hill <aa1ronham@gmail.com> 1591319371 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1591319371 -0400\n\nTreat selection error as ambiguous when error type is present\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3295c262aea18f64b80734989ab522e1278a9d14", "html_url": "https://github.com/rust-lang/rust/commit/3295c262aea18f64b80734989ab522e1278a9d14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3295c262aea18f64b80734989ab522e1278a9d14/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f7729d83be2ff8e9e933b94ff02f1bb77d688f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f7729d83be2ff8e9e933b94ff02f1bb77d688f8", "html_url": "https://github.com/rust-lang/rust/commit/7f7729d83be2ff8e9e933b94ff02f1bb77d688f8"}], "stats": {"total": 198, "additions": 17, "deletions": 181}, "files": [{"sha": "7ebf30f61c0956f0a981f4ccdadd4f21607b199e", "filename": "src/librustc_trait_selection/traits/select/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3295c262aea18f64b80734989ab522e1278a9d14/src%2Flibrustc_trait_selection%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3295c262aea18f64b80734989ab522e1278a9d14/src%2Flibrustc_trait_selection%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fselect%2Fmod.rs?ref=3295c262aea18f64b80734989ab522e1278a9d14", "patch": "@@ -1104,6 +1104,14 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         // who might care about this case, like coherence, should use\n         // that function).\n         if candidates.is_empty() {\n+            // If there's an error type, 'downgrade' our result from\n+            // `Err(Unimplemented)` to `Ok(None)`. This helps us avoid\n+            // emitting additional spurious errors, since we're guaranteed\n+            // to have emitted at least one.\n+            if stack.obligation.references_error() {\n+                debug!(\"no results for error type, treating as ambiguous\");\n+                return Ok(None);\n+            }\n             return Err(Unimplemented);\n         }\n "}, {"sha": "087f4582b21c3b3db46753486e2e479980b3444e", "filename": "src/test/ui/impl-trait/auto-trait-leak.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3295c262aea18f64b80734989ab522e1278a9d14/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3295c262aea18f64b80734989ab522e1278a9d14/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.rs?ref=3295c262aea18f64b80734989ab522e1278a9d14", "patch": "@@ -11,8 +11,6 @@ fn main() {\n // return type, which can't depend on the obligation.\n fn cycle1() -> impl Clone {\n     //~^ ERROR cycle detected\n-    //~| ERROR cycle detected\n-    //~| ERROR cycle detected\n     send(cycle2().clone());\n     //~^ ERROR cannot be sent between threads safely\n "}, {"sha": "679b26efe5933c7f4e11fc97abef838e0a80436d", "filename": "src/test/ui/impl-trait/auto-trait-leak.stderr", "status": "modified", "additions": 9, "deletions": 179, "changes": 188, "blob_url": "https://github.com/rust-lang/rust/blob/3295c262aea18f64b80734989ab522e1278a9d14/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3295c262aea18f64b80734989ab522e1278a9d14/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak.stderr?ref=3295c262aea18f64b80734989ab522e1278a9d14", "patch": "@@ -36,37 +36,37 @@ LL | fn cycle1() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: ...which requires evaluating trait selection obligation `impl std::clone::Clone: std::marker::Send`...\n note: ...which requires computing type of `cycle2::{{opaque}}#0`...\n-  --> $DIR/auto-trait-leak.rs:22:16\n+  --> $DIR/auto-trait-leak.rs:20:16\n    |\n LL | fn cycle2() -> impl Clone {\n    |                ^^^^^^^^^^\n note: ...which requires borrow-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n+  --> $DIR/auto-trait-leak.rs:20:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires processing `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n+  --> $DIR/auto-trait-leak.rs:20:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires processing MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n+  --> $DIR/auto-trait-leak.rs:20:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires unsafety-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n+  --> $DIR/auto-trait-leak.rs:20:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires building MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n+  --> $DIR/auto-trait-leak.rs:20:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires type-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n+  --> $DIR/auto-trait-leak.rs:20:1\n    |\n LL | fn cycle2() -> impl Clone {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -84,178 +84,8 @@ LL | |     Rc::new(String::from(\"foo\"))\n LL | | }\n    | |_^\n \n-error[E0391]: cycle detected when computing type of `cycle1::{{opaque}}#0`\n-  --> $DIR/auto-trait-leak.rs:12:16\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   |                ^^^^^^^^^^\n-   |\n-note: ...which requires borrow-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing MIR for `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires unsafety-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires building MIR for `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires type-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: ...which requires evaluating trait selection obligation `impl std::clone::Clone: std::marker::Send`...\n-note: ...which requires computing type of `cycle2::{{opaque}}#0`...\n-  --> $DIR/auto-trait-leak.rs:22:16\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   |                ^^^^^^^^^^\n-note: ...which requires borrow-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires unsafety-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires building MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires type-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: ...which again requires computing type of `cycle1::{{opaque}}#0`, completing the cycle\n-note: cycle used when checking item types in top-level module\n-  --> $DIR/auto-trait-leak.rs:1:1\n-   |\n-LL | / use std::cell::Cell;\n-LL | | use std::rc::Rc;\n-LL | |\n-LL | | fn send<T: Send>(_: T) {}\n-...  |\n-LL | |     Rc::new(String::from(\"foo\"))\n-LL | | }\n-   | |_^\n-\n-error[E0391]: cycle detected when computing type of `cycle1::{{opaque}}#0`\n-  --> $DIR/auto-trait-leak.rs:12:16\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   |                ^^^^^^^^^^\n-   |\n-note: ...which requires borrow-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing MIR for `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires unsafety-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires building MIR for `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires type-checking `cycle1`...\n-  --> $DIR/auto-trait-leak.rs:12:1\n-   |\n-LL | fn cycle1() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: ...which requires evaluating trait selection obligation `impl std::clone::Clone: std::marker::Send`...\n-note: ...which requires computing type of `cycle2::{{opaque}}#0`...\n-  --> $DIR/auto-trait-leak.rs:22:16\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   |                ^^^^^^^^^^\n-note: ...which requires borrow-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires processing MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires unsafety-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires building MIR for `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: ...which requires type-checking `cycle2`...\n-  --> $DIR/auto-trait-leak.rs:22:1\n-   |\n-LL | fn cycle2() -> impl Clone {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: ...which again requires computing type of `cycle1::{{opaque}}#0`, completing the cycle\n-note: cycle used when checking item types in top-level module\n-  --> $DIR/auto-trait-leak.rs:1:1\n-   |\n-LL | / use std::cell::Cell;\n-LL | | use std::rc::Rc;\n-LL | |\n-LL | | fn send<T: Send>(_: T) {}\n-...  |\n-LL | |     Rc::new(String::from(\"foo\"))\n-LL | | }\n-   | |_^\n-\n error[E0277]: `std::rc::Rc<std::string::String>` cannot be sent between threads safely\n-  --> $DIR/auto-trait-leak.rs:16:5\n+  --> $DIR/auto-trait-leak.rs:14:5\n    |\n LL | fn send<T: Send>(_: T) {}\n    |            ---- required by this bound in `send`\n@@ -269,7 +99,7 @@ LL | fn cycle2() -> impl Clone {\n    = help: within `impl std::clone::Clone`, the trait `std::marker::Send` is not implemented for `std::rc::Rc<std::string::String>`\n    = note: required because it appears within the type `impl std::clone::Clone`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n \n Some errors have detailed explanations: E0277, E0391.\n For more information about an error, try `rustc --explain E0277`."}]}