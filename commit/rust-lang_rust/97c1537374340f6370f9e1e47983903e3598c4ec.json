{"sha": "97c1537374340f6370f9e1e47983903e3598c4ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YzE1MzczNzQzNDBmNjM3MGY5ZTFlNDc5ODM5MDNlMzU5OGM0ZWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-06T17:46:10Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-06T18:42:20Z"}, "message": "Limit exports from typeck::writeback", "tree": {"sha": "a57895cbdfdbed25ca286a86c89a8f8df37e2703", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a57895cbdfdbed25ca286a86c89a8f8df37e2703"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97c1537374340f6370f9e1e47983903e3598c4ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97c1537374340f6370f9e1e47983903e3598c4ec", "html_url": "https://github.com/rust-lang/rust/commit/97c1537374340f6370f9e1e47983903e3598c4ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97c1537374340f6370f9e1e47983903e3598c4ec/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e30d2c82ae44fea5b2e3ecd931020d08f304cf53", "url": "https://api.github.com/repos/rust-lang/rust/commits/e30d2c82ae44fea5b2e3ecd931020d08f304cf53", "html_url": "https://github.com/rust-lang/rust/commit/e30d2c82ae44fea5b2e3ecd931020d08f304cf53"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "d9326c7e28aa0ee769f657106b7436ca7b4c143a", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/97c1537374340f6370f9e1e47983903e3598c4ec/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97c1537374340f6370f9e1e47983903e3598c4ec/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=97c1537374340f6370f9e1e47983903e3598c4ec", "patch": "@@ -1021,6 +1021,9 @@ fn variant_arg_types(&@crate_ctxt ccx, &span sp, &ast::def_id vid,\n // TODO: inefficient since not all types have vars in them. It would be better\n // to maintain a list of fixups.\n mod writeback {\n+\n+    export resolve_type_vars_in_block;\n+\n     fn resolve_type_vars_in_type(&@fn_ctxt fcx, &span sp, ty::t typ) ->\n        ty::t {\n         if (!ty::type_contains_vars(fcx.ccx.tcx, typ)) { ret typ; }"}]}