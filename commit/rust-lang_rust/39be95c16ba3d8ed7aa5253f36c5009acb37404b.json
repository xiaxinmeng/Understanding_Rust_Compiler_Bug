{"sha": "39be95c16ba3d8ed7aa5253f36c5009acb37404b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YmU5NWMxNmJhM2Q4ZWQ3YWE1MjUzZjM2YzUwMDlhY2IzNzQwNGI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-26T11:01:45Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-22T17:27:07Z"}, "message": "Insert FIXME links to issue #19925: fn item types should be zero-sized.", "tree": {"sha": "00e0b44d01fdae09d4331c4e069cd95abce99e12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00e0b44d01fdae09d4331c4e069cd95abce99e12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39be95c16ba3d8ed7aa5253f36c5009acb37404b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39be95c16ba3d8ed7aa5253f36c5009acb37404b", "html_url": "https://github.com/rust-lang/rust/commit/39be95c16ba3d8ed7aa5253f36c5009acb37404b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39be95c16ba3d8ed7aa5253f36c5009acb37404b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fad1423d1ef12d3036433432d838723ff783a53d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fad1423d1ef12d3036433432d838723ff783a53d", "html_url": "https://github.com/rust-lang/rust/commit/fad1423d1ef12d3036433432d838723ff783a53d"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "eff735e4946bb881e235ad904774d750126b4114", "filename": "src/librustc_trans/trans/consts.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39be95c16ba3d8ed7aa5253f36c5009acb37404b/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39be95c16ba3d8ed7aa5253f36c5009acb37404b/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs?ref=39be95c16ba3d8ed7aa5253f36c5009acb37404b", "patch": "@@ -204,6 +204,10 @@ pub fn const_expr<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>, e: &ast::Expr)\n                                 format!(\"unexpected static function: {}\",\n                                         store).as_slice())\n                 }\n+                ty::AdjustReifyFnPointer(_def_id) => {\n+                    // FIXME(#19925) once fn item types are\n+                    // zero-sized, we'll need to do something here\n+                }\n                 ty::AdjustDerefRef(ref adj) => {\n                     let mut ty = ety;\n                     // Save the last autoderef in case we can avoid it."}, {"sha": "536ef3ffd98eefff3233076c7cdf6fe978513855", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/39be95c16ba3d8ed7aa5253f36c5009acb37404b/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39be95c16ba3d8ed7aa5253f36c5009acb37404b/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=39be95c16ba3d8ed7aa5253f36c5009acb37404b", "patch": "@@ -180,6 +180,9 @@ fn apply_adjustments<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n         AdjustAddEnv(def_id, _) => {\n             datum = unpack_datum!(bcx, add_env(bcx, def_id, expr, datum));\n         }\n+        AdjustReifyFnPointer(_def_id) => {\n+            // FIXME(#19925) once fn item types are\n+            // zero-sized, we'll need to do something here\n         }\n         AdjustDerefRef(ref adj) => {\n             let (autoderefs, use_autoref) = match adj.autoref {"}, {"sha": "ae0c0aa5598df9145f6a87c49296e1beabafc6f5", "filename": "src/librustc_trans/trans/type_of.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39be95c16ba3d8ed7aa5253f36c5009acb37404b/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39be95c16ba3d8ed7aa5253f36c5009acb37404b/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs?ref=39be95c16ba3d8ed7aa5253f36c5009acb37404b", "patch": "@@ -150,7 +150,9 @@ pub fn type_of_fn_from_ty<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>, fty: Ty<'tcx>)\n                             f.sig.0.output,\n                             f.abi)\n         }\n-        ty::ty_bare_fn(ref f) => {\n+        ty::ty_bare_fn(_, ref f) => {\n+            // FIXME(#19925) once fn item types are\n+            // zero-sized, we'll need to do something here\n             if f.abi == abi::Rust || f.abi == abi::RustCall {\n                 type_of_rust_fn(cx,\n                                 None,"}]}