{"sha": "205aa88921ce63898f7fd3db6e9070c70987be2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNWFhODg5MjFjZTYzODk4ZjdmZDNkYjZlOTA3MGM3MDk4N2JlMmU=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-07-31T13:32:54Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-07-31T13:32:54Z"}, "message": "Fix `while_let_on_iterator`\nWhen the iterator is one field within a local correctly check for usages of the field", "tree": {"sha": "4dc5e836ba83d56939fddd1abb6a6123b34d389f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dc5e836ba83d56939fddd1abb6a6123b34d389f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/205aa88921ce63898f7fd3db6e9070c70987be2e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmEFUd8ACgkQ2lnoZDo37QYr0gEA2yIdDOPJgsM1xceKTfcX5L9Y\nuRq3Lq+hgacc9arCutIBAKkkWWziGYgIueVydHX4m8KO3z6lEDVlm/ZDBrcQs4IJ\n=nbAp\n-----END PGP SIGNATURE-----", "payload": "tree 4dc5e836ba83d56939fddd1abb6a6123b34d389f\nparent fe75faa6eeafe22eb5e6ffae652c7514792334ab\nauthor Jason Newcomb <jsnewcomb@pm.me> 1627738374 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1627738374 -0400\n\nFix `while_let_on_iterator`\nWhen the iterator is one field within a local correctly check for usages of the field\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/205aa88921ce63898f7fd3db6e9070c70987be2e", "html_url": "https://github.com/rust-lang/rust/commit/205aa88921ce63898f7fd3db6e9070c70987be2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/205aa88921ce63898f7fd3db6e9070c70987be2e/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe75faa6eeafe22eb5e6ffae652c7514792334ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe75faa6eeafe22eb5e6ffae652c7514792334ab", "html_url": "https://github.com/rust-lang/rust/commit/fe75faa6eeafe22eb5e6ffae652c7514792334ab"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "ef822e0cbe540225f9ad4317ecb19110973a70a0", "filename": "clippy_lints/src/loops/while_let_on_iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/205aa88921ce63898f7fd3db6e9070c70987be2e/clippy_lints%2Fsrc%2Floops%2Fwhile_let_on_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/205aa88921ce63898f7fd3db6e9070c70987be2e/clippy_lints%2Fsrc%2Floops%2Fwhile_let_on_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fwhile_let_on_iterator.rs?ref=205aa88921ce63898f7fd3db6e9070c70987be2e", "patch": "@@ -146,7 +146,7 @@ fn is_expr_same_child_or_parent_field(cx: &LateContext<'_>, expr: &Expr<'_>, fie\n     match expr.kind {\n         ExprKind::Field(base, name) => {\n             if let Some((head_field, tail_fields)) = fields.split_first() {\n-                if name.name == *head_field && is_expr_same_field(cx, base, fields, path_res) {\n+                if name.name == *head_field && is_expr_same_field(cx, base, tail_fields, path_res) {\n                     return true;\n                 }\n                 // Check if the expression is a parent field"}, {"sha": "cdcdd808c94445f2d33b2771ded4f95db9091644", "filename": "tests/ui/while_let_on_iterator.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/205aa88921ce63898f7fd3db6e9070c70987be2e/tests%2Fui%2Fwhile_let_on_iterator.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/205aa88921ce63898f7fd3db6e9070c70987be2e/tests%2Fui%2Fwhile_let_on_iterator.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.fixed?ref=205aa88921ce63898f7fd3db6e9070c70987be2e", "patch": "@@ -357,6 +357,15 @@ fn issue7510() {\n     println!(\"{}\", it.0.next().unwrap());\n }\n \n+fn exact_match_with_single_field() {\n+    struct S<T>(T);\n+    let mut s = S(0..10);\n+    // Don't lint. `s.0` is used inside the loop.\n+    while let Some(_) = s.0.next() {\n+        let _ = &mut s.0;\n+    }\n+}\n+\n fn main() {\n     let mut it = 0..20;\n     for _ in it {"}, {"sha": "72f34257d1f46a631cf7596876dded1da71beedd", "filename": "tests/ui/while_let_on_iterator.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/205aa88921ce63898f7fd3db6e9070c70987be2e/tests%2Fui%2Fwhile_let_on_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/205aa88921ce63898f7fd3db6e9070c70987be2e/tests%2Fui%2Fwhile_let_on_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.rs?ref=205aa88921ce63898f7fd3db6e9070c70987be2e", "patch": "@@ -357,6 +357,15 @@ fn issue7510() {\n     println!(\"{}\", it.0.next().unwrap());\n }\n \n+fn exact_match_with_single_field() {\n+    struct S<T>(T);\n+    let mut s = S(0..10);\n+    // Don't lint. `s.0` is used inside the loop.\n+    while let Some(_) = s.0.next() {\n+        let _ = &mut s.0;\n+    }\n+}\n+\n fn main() {\n     let mut it = 0..20;\n     while let Some(..) = it.next() {"}, {"sha": "ff9b08996da5316dc807b48e9d8175a1370aa05d", "filename": "tests/ui/while_let_on_iterator.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/205aa88921ce63898f7fd3db6e9070c70987be2e/tests%2Fui%2Fwhile_let_on_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/205aa88921ce63898f7fd3db6e9070c70987be2e/tests%2Fui%2Fwhile_let_on_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.stderr?ref=205aa88921ce63898f7fd3db6e9070c70987be2e", "patch": "@@ -123,7 +123,7 @@ LL |     while let Some(x) = it.0.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in &mut *it.0`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:362:5\n+  --> $DIR/while_let_on_iterator.rs:371:5\n    |\n LL |     while let Some(..) = it.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in it`"}]}