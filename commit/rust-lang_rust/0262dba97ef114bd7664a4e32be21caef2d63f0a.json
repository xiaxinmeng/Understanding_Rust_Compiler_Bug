{"sha": "0262dba97ef114bd7664a4e32be21caef2d63f0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNjJkYmE5N2VmMTE0YmQ3NjY0YTRlMzJiZTIxY2FlZjJkNjNmMGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-18T10:41:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-18T10:41:37Z"}, "message": "Merge #4935\n\n4935: Simplify r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "bfa5465aa920ee4196ab1f39bf580701b2acf617", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfa5465aa920ee4196ab1f39bf580701b2acf617"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0262dba97ef114bd7664a4e32be21caef2d63f0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe60ThCRBK7hj4Ov3rIwAAdHIIAGy74yHTYuULybb+oEw5KB3r\nhcjW+Rb4u5WtXJgYsxqD4bmuEhp1B05STCbHUWySX89zoUNuMid+3+t2EgJUdHup\nliS/CaXUHU6koh5cfFxlONKg7pF/xwAmes0NFf2E2dGqU30AlUOtD84uszFJbNli\n/WB9XX2y0nUZlvNb4yYeBd55I/hIf/5ILvpTXM3DwnJ32ioRzM66IdVIfeYj6DIQ\nc+ryjwFIJi5tixVdFc6camQkoY3u0WFQro1TGAbY8Sj9kS7cf9aG4svzJTyJnSvh\nRjlod//zw2gFFGiximDXFTKP0IbRpHEeLvlJqnrjZx2UyKbcTnmteDxLzXkvKnk=\n=7U54\n-----END PGP SIGNATURE-----\n", "payload": "tree bfa5465aa920ee4196ab1f39bf580701b2acf617\nparent 13adfedf8209d96e5a910d5e72d0de17462b23a6\nparent 61a3f6d463eb10470206b72b4e796b3ff90da8c9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1592476897 +0000\ncommitter GitHub <noreply@github.com> 1592476897 +0000\n\nMerge #4935\n\n4935: Simplify r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0262dba97ef114bd7664a4e32be21caef2d63f0a", "html_url": "https://github.com/rust-lang/rust/commit/0262dba97ef114bd7664a4e32be21caef2d63f0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0262dba97ef114bd7664a4e32be21caef2d63f0a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13adfedf8209d96e5a910d5e72d0de17462b23a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/13adfedf8209d96e5a910d5e72d0de17462b23a6", "html_url": "https://github.com/rust-lang/rust/commit/13adfedf8209d96e5a910d5e72d0de17462b23a6"}, {"sha": "61a3f6d463eb10470206b72b4e796b3ff90da8c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/61a3f6d463eb10470206b72b4e796b3ff90da8c9", "html_url": "https://github.com/rust-lang/rust/commit/61a3f6d463eb10470206b72b4e796b3ff90da8c9"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "1527c9947dd93036db41660a11d62b740eec6c65", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0262dba97ef114bd7664a4e32be21caef2d63f0a/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0262dba97ef114bd7664a4e32be21caef2d63f0a/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=0262dba97ef114bd7664a4e32be21caef2d63f0a", "patch": "@@ -18,7 +18,7 @@ use ra_vfs::{LineEndings, RootEntry, Vfs, VfsChange, VfsFile, VfsTask, Watch};\n use stdx::format_to;\n \n use crate::{\n-    config::Config,\n+    config::{Config, FilesWatcher},\n     diagnostics::{CheckFixes, DiagnosticCollection},\n     main_loop::pending_requests::{CompletedRequest, LatestRequests},\n     to_proto::url_from_abs_path,\n@@ -76,7 +76,6 @@ impl GlobalState {\n         workspaces: Vec<ProjectWorkspace>,\n         lru_capacity: Option<usize>,\n         exclude_globs: &[Glob],\n-        watch: Watch,\n         config: Config,\n     ) -> GlobalState {\n         let mut change = AnalysisChange::new();\n@@ -111,6 +110,7 @@ impl GlobalState {\n \n         let (task_sender, task_receiver) = unbounded();\n         let task_sender = Box::new(move |t| task_sender.send(t).unwrap());\n+        let watch = Watch(matches!(config.files.watcher, FilesWatcher::Notify));\n         let (mut vfs, vfs_roots) = Vfs::new(roots, task_sender, watch);\n \n         let mut extern_source_roots = FxHashMap::default();"}, {"sha": "f0aaaa21ead839831cd830c139bb8747f24b2dd1", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0262dba97ef114bd7664a4e32be21caef2d63f0a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0262dba97ef114bd7664a4e32be21caef2d63f0a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=0262dba97ef114bd7664a4e32be21caef2d63f0a", "patch": "@@ -27,7 +27,7 @@ use ra_flycheck::{CheckTask, Status};\n use ra_ide::{Canceled, FileId, LineIndex};\n use ra_prof::profile;\n use ra_project_model::{PackageRoot, ProjectWorkspace};\n-use ra_vfs::{VfsTask, Watch};\n+use ra_vfs::VfsTask;\n use rustc_hash::FxHashSet;\n use serde::{de::DeserializeOwned, Serialize};\n use threadpool::ThreadPool;\n@@ -160,13 +160,7 @@ pub fn main_loop(config: Config, connection: Connection) -> Result<()> {\n             connection.sender.send(request.into()).unwrap();\n         }\n \n-        GlobalState::new(\n-            workspaces,\n-            config.lru_capacity,\n-            &globs,\n-            Watch(matches!(config.files.watcher, FilesWatcher::Notify)),\n-            config,\n-        )\n+        GlobalState::new(workspaces, config.lru_capacity, &globs, config)\n     };\n \n     loop_state.roots_total = global_state.vfs.read().n_roots();"}]}