{"sha": "c5849ae3e0631698014f4d9bde52b54b36cbb0cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ODQ5YWUzZTA2MzE2OTgwMTRmNGQ5YmRlNTJiNTRiMzZjYmIwY2M=", "commit": {"author": {"name": "Prabakaran Kumaresshan", "email": "4676330+nixphix@users.noreply.github.com", "date": "2020-08-15T16:41:09Z"}, "committer": {"name": "Prabakaran Kumaresshan", "email": "4676330+nixphix@users.noreply.github.com", "date": "2020-08-15T16:41:09Z"}, "message": "inline linking", "tree": {"sha": "4e45f92b2074137a3dcb97630ec921835d210857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e45f92b2074137a3dcb97630ec921835d210857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5849ae3e0631698014f4d9bde52b54b36cbb0cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5849ae3e0631698014f4d9bde52b54b36cbb0cc", "html_url": "https://github.com/rust-lang/rust/commit/c5849ae3e0631698014f4d9bde52b54b36cbb0cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5849ae3e0631698014f4d9bde52b54b36cbb0cc/comments", "author": {"login": "nixphix", "id": 4676330, "node_id": "MDQ6VXNlcjQ2NzYzMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4676330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nixphix", "html_url": "https://github.com/nixphix", "followers_url": "https://api.github.com/users/nixphix/followers", "following_url": "https://api.github.com/users/nixphix/following{/other_user}", "gists_url": "https://api.github.com/users/nixphix/gists{/gist_id}", "starred_url": "https://api.github.com/users/nixphix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nixphix/subscriptions", "organizations_url": "https://api.github.com/users/nixphix/orgs", "repos_url": "https://api.github.com/users/nixphix/repos", "events_url": "https://api.github.com/users/nixphix/events{/privacy}", "received_events_url": "https://api.github.com/users/nixphix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nixphix", "id": 4676330, "node_id": "MDQ6VXNlcjQ2NzYzMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4676330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nixphix", "html_url": "https://github.com/nixphix", "followers_url": "https://api.github.com/users/nixphix/followers", "following_url": "https://api.github.com/users/nixphix/following{/other_user}", "gists_url": "https://api.github.com/users/nixphix/gists{/gist_id}", "starred_url": "https://api.github.com/users/nixphix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nixphix/subscriptions", "organizations_url": "https://api.github.com/users/nixphix/orgs", "repos_url": "https://api.github.com/users/nixphix/repos", "events_url": "https://api.github.com/users/nixphix/events{/privacy}", "received_events_url": "https://api.github.com/users/nixphix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f615b6d33831a0c114b02e13fe0e01a79cd4a750", "url": "https://api.github.com/repos/rust-lang/rust/commits/f615b6d33831a0c114b02e13fe0e01a79cd4a750", "html_url": "https://github.com/rust-lang/rust/commit/f615b6d33831a0c114b02e13fe0e01a79cd4a750"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "4ff86daf0dd73878ac57ad908b3a542ac961ee9c", "filename": "library/std/src/sys/vxworks/ext/fs.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c5849ae3e0631698014f4d9bde52b54b36cbb0cc/library%2Fstd%2Fsrc%2Fsys%2Fvxworks%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5849ae3e0631698014f4d9bde52b54b36cbb0cc/library%2Fstd%2Fsrc%2Fsys%2Fvxworks%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fvxworks%2Fext%2Ffs.rs?ref=c5849ae3e0631698014f4d9bde52b54b36cbb0cc", "patch": "@@ -7,9 +7,7 @@ use crate::sys;\n use crate::sys::platform::fs::MetadataExt as UnixMetadataExt;\n use crate::sys_common::{AsInner, AsInnerMut, FromInner};\n \n-/// Unix-specific extensions to [`File`].\n-///\n-/// [`File`]: fs::File\n+/// Unix-specific extensions to [`fs::File`].\n #[stable(feature = \"file_offset\", since = \"1.15.0\")]\n pub trait FileExt {\n     /// Reads a number of bytes starting from a given offset.\n@@ -644,12 +642,10 @@ impl MetadataExt for fs::Metadata {\n     }\n }\n \n-/// Unix-specific extensions for [`FileType`].\n+/// Unix-specific extensions for [`fs::FileType`].\n ///\n /// Adds support for special Unix file types such as block/character devices,\n /// pipes, and sockets.\n-///\n-/// [`FileType`]: fs::FileType\n #[stable(feature = \"file_type_ext\", since = \"1.5.0\")]\n pub trait FileTypeExt {\n     /// Returns whether this file type is a block device."}]}