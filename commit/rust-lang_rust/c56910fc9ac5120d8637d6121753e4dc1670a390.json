{"sha": "c56910fc9ac5120d8637d6121753e4dc1670a390", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NjkxMGZjOWFjNTEyMGQ4NjM3ZDYxMjE3NTNlNGRjMTY3MGEzOTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-24T00:04:58Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-24T00:06:24Z"}, "message": "rustc: Make region folding not descend into function types\n\nSince region parameters are always universally quantified at the function\nlevel, this would be incorrect.", "tree": {"sha": "02fdacfc3fed8ba8da2253bece146f13c24b12f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02fdacfc3fed8ba8da2253bece146f13c24b12f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c56910fc9ac5120d8637d6121753e4dc1670a390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c56910fc9ac5120d8637d6121753e4dc1670a390", "html_url": "https://github.com/rust-lang/rust/commit/c56910fc9ac5120d8637d6121753e4dc1670a390", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c56910fc9ac5120d8637d6121753e4dc1670a390/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ffaedac2b222731bdf92a3b19bcb119809b2ba1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ffaedac2b222731bdf92a3b19bcb119809b2ba1", "html_url": "https://github.com/rust-lang/rust/commit/1ffaedac2b222731bdf92a3b19bcb119809b2ba1"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "fcc78b4033e77aaa799e5477fcc092bd7e5f8d74", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c56910fc9ac5120d8637d6121753e4dc1670a390/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c56910fc9ac5120d8637d6121753e4dc1670a390/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=c56910fc9ac5120d8637d6121753e4dc1670a390", "patch": "@@ -666,14 +666,22 @@ fn fold_ty(cx: ctxt, fld: fold_mode, ty_0: t) -> t {\n             ty = mk_tup(cx, new_ts);\n           }\n           ty_fn(f) {\n-            let mut new_args: [arg] = [];\n-            for a: arg in f.inputs {\n-                let new_ty = do_fold(cx, fld, a.ty, under_rptr);\n-                new_args += [{mode: a.mode, ty: new_ty}];\n+            alt fld {\n+              fm_rptr(_) {\n+                // Don't recurse into functions, because regions are\n+                // universally quantified, well, universally, at function\n+                // boundaries.\n+              }\n+              _ {\n+                let mut new_args: [arg] = [];\n+                for a: arg in f.inputs {\n+                    let new_ty = do_fold(cx, fld, a.ty, under_rptr);\n+                    new_args += [{mode: a.mode, ty: new_ty}];\n+                }\n+                let new_output = do_fold(cx, fld, f.output, under_rptr);\n+                ty = mk_fn(cx, {inputs: new_args, output: new_output with f});\n+              }\n             }\n-            ty = mk_fn(cx, {inputs: new_args,\n-                            output: do_fold(cx, fld, f.output, under_rptr)\n-                            with f});\n           }\n           ty_res(did, subty, tps) {\n             let mut new_tps = [];"}]}