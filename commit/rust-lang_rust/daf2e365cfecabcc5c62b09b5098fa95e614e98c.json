{"sha": "daf2e365cfecabcc5c62b09b5098fa95e614e98c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZjJlMzY1Y2ZlY2FiY2M1YzYyYjA5YjUwOThmYTk1ZTYxNGU5OGM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-07T12:42:40Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-07T12:42:40Z"}, "message": "Rollup merge of #24057 - nikomatsakis:lifetime-shadowing-hard-error, r=huon", "tree": {"sha": "e642bd437bc5202f2469a02f18ed16a85b457031", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e642bd437bc5202f2469a02f18ed16a85b457031"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daf2e365cfecabcc5c62b09b5098fa95e614e98c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daf2e365cfecabcc5c62b09b5098fa95e614e98c", "html_url": "https://github.com/rust-lang/rust/commit/daf2e365cfecabcc5c62b09b5098fa95e614e98c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daf2e365cfecabcc5c62b09b5098fa95e614e98c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4faf0befaa3b2d214c60d2dcd7458a88892ff0d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4faf0befaa3b2d214c60d2dcd7458a88892ff0d4", "html_url": "https://github.com/rust-lang/rust/commit/4faf0befaa3b2d214c60d2dcd7458a88892ff0d4"}, {"sha": "49f2a566663b125334245563f4dbe51778296feb", "url": "https://api.github.com/repos/rust-lang/rust/commits/49f2a566663b125334245563f4dbe51778296feb", "html_url": "https://github.com/rust-lang/rust/commit/49f2a566663b125334245563f4dbe51778296feb"}], "stats": {"total": 19, "additions": 4, "deletions": 15}, "files": [{"sha": "1036c97a5ad583f12593a8e907eb99b7f8a01e53", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/daf2e365cfecabcc5c62b09b5098fa95e614e98c/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daf2e365cfecabcc5c62b09b5098fa95e614e98c/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=daf2e365cfecabcc5c62b09b5098fa95e614e98c", "patch": "@@ -507,7 +507,7 @@ impl<'a> LifetimeContext<'a> {\n                 EarlyScope(_, lifetimes, s) |\n                 LateScope(lifetimes, s) => {\n                     if let Some((_, lifetime_def)) = search_lifetimes(lifetimes, lifetime) {\n-                        self.sess.span_warn(\n+                        self.sess.span_err(\n                             lifetime.span,\n                             &format!(\"lifetime name `{}` shadows another \\\n                                      lifetime name that is already in scope\",\n@@ -516,10 +516,6 @@ impl<'a> LifetimeContext<'a> {\n                             lifetime_def.span,\n                             &format!(\"shadowed lifetime `{}` declared here\",\n                                      token::get_name(lifetime.name)));\n-                        self.sess.span_note(\n-                            lifetime.span,\n-                            \"shadowed lifetimes are deprecated \\\n-                             and will become a hard error before 1.0\");\n                         return;\n                     }\n "}, {"sha": "110b1a0d90c22dbf9ddeb83ec23a112d436fa87d", "filename": "src/test/compile-fail/shadowed-lifetime.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/daf2e365cfecabcc5c62b09b5098fa95e614e98c/src%2Ftest%2Fcompile-fail%2Fshadowed-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daf2e365cfecabcc5c62b09b5098fa95e614e98c/src%2Ftest%2Fcompile-fail%2Fshadowed-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fshadowed-lifetime.rs?ref=daf2e365cfecabcc5c62b09b5098fa95e614e98c", "patch": "@@ -15,16 +15,14 @@ struct Foo<'a>(&'a isize);\n impl<'a> Foo<'a> {\n     //~^ NOTE shadowed lifetime `'a` declared here\n     fn shadow_in_method<'a>(&'a self) -> &'a isize {\n-        //~^ WARNING lifetime name `'a` shadows another lifetime name that is already in scope\n-        //~| NOTE deprecated\n+        //~^ ERROR lifetime name `'a` shadows another lifetime name that is already in scope\n         self.0\n     }\n \n     fn shadow_in_type<'b>(&'b self) -> &'b isize {\n         //~^ NOTE shadowed lifetime `'b` declared here\n         let x: for<'b> fn(&'b isize) = panic!();\n-        //~^ WARNING lifetime name `'b` shadows another lifetime name that is already in scope\n-        //~| NOTE deprecated\n+        //~^ ERROR lifetime name `'b` shadows another lifetime name that is already in scope\n         self.0\n     }\n \n@@ -35,9 +33,4 @@ impl<'a> Foo<'a> {\n }\n \n fn main() {\n-    // intentional error that occurs after `resolve_lifetime` runs,\n-    // just to ensure that this test fails to compile; when shadowed\n-    // lifetimes become either an error or a proper lint, this will\n-    // not be needed.\n-    let x: isize = 3_usize; //~ ERROR mismatched types\n }"}, {"sha": "d98b1d9deae62156f08c575447fff269cfa6fd7f", "filename": "src/test/run-pass/overloaded-index-assoc-list.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/daf2e365cfecabcc5c62b09b5098fa95e614e98c/src%2Ftest%2Frun-pass%2Foverloaded-index-assoc-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daf2e365cfecabcc5c62b09b5098fa95e614e98c/src%2Ftest%2Frun-pass%2Foverloaded-index-assoc-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foverloaded-index-assoc-list.rs?ref=daf2e365cfecabcc5c62b09b5098fa95e614e98c", "patch": "@@ -35,7 +35,7 @@ impl<K,V> AssociationList<K,V> {\n impl<'a, K: PartialEq + std::fmt::Debug, V:Clone> Index<&'a K> for AssociationList<K,V> {\n     type Output = V;\n \n-    fn index<'a>(&'a self, index: &K) -> &'a V {\n+    fn index(&self, index: &K) -> &V {\n         for pair in &self.pairs {\n             if pair.key == *index {\n                 return &pair.value"}]}