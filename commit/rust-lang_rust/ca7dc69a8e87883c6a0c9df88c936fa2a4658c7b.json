{"sha": "ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhN2RjNjlhOGU4Nzg4M2M2YTBjOWRmODhjOTM2ZmEyYTQ2NThjN2I=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-12T16:05:45Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-16T11:28:06Z"}, "message": "Add tests for proc_macro", "tree": {"sha": "469c4f86a7bb4d21203438cb21a424a4f427fb71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/469c4f86a7bb4d21203438cb21a424a4f427fb71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b", "html_url": "https://github.com/rust-lang/rust/commit/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4b0ce07f80773146c72004befc77be4e576c677", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b0ce07f80773146c72004befc77be4e576c677", "html_url": "https://github.com/rust-lang/rust/commit/a4b0ce07f80773146c72004befc77be4e576c677"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "13a11c95b0fadbee322bfb4dd6f75d4c4c2a3a32", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b", "patch": "@@ -85,6 +85,10 @@ jobs:\n     - name: Compile\n       run: cargo test --no-run\n \n+    # We have to build ra_proc_macro_srv first for running related heavy tests\n+    - name: Build ra_proc_macro_srv\n+      run: cargo build -p ra_proc_macro_srv\n+\n     - name: Test\n       run: cargo test\n "}, {"sha": "26ab81a8f6ea4676fcf953543d0734a528596e65", "filename": "crates/rust-analyzer/tests/heavy_tests/main.rs", "status": "modified", "additions": 88, "deletions": 1, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs?ref=ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b", "patch": "@@ -9,7 +9,7 @@ use lsp_types::{\n };\n use rust_analyzer::req::{\n     CodeActionParams, CodeActionRequest, Completion, CompletionParams, DidOpenTextDocument,\n-    Formatting, GotoDefinition, OnEnter, Runnables, RunnablesParams,\n+    Formatting, GotoDefinition, HoverRequest, OnEnter, Runnables, RunnablesParams,\n };\n use serde_json::json;\n use tempfile::TempDir;\n@@ -625,3 +625,90 @@ fn main() { message(); }\n     ));\n     assert!(format!(\"{}\", res).contains(\"hello.rs\"));\n }\n+\n+#[test]\n+fn resolve_proc_macro() {\n+    if skip_slow_tests() {\n+        return;\n+    }\n+    let server = Project::with_fixture(\n+        r###\"\n+//- foo/Cargo.toml\n+[package]\n+name = \"foo\"\n+version = \"0.0.0\"\n+edition = \"2018\"\n+[dependencies]\n+bar = {path = \"../bar\"}\n+\n+//- foo/src/main.rs\n+use bar::Bar;\n+trait Bar {\n+  fn bar();\n+}\n+#[derive(Bar)]\n+struct Foo {}\n+fn main() {\n+  Foo::bar();\n+}\n+\n+//- bar/Cargo.toml\n+[package]\n+name = \"bar\"\n+version = \"0.0.0\"\n+edition = \"2018\"\n+\n+[lib]\n+proc-macro = true\n+\n+//- bar/src/lib.rs\n+extern crate proc_macro;\n+use proc_macro::{Delimiter, Group, Ident, Span, TokenStream, TokenTree};\n+macro_rules! t {\n+    ($n:literal) => {\n+        TokenTree::from(Ident::new($n, Span::call_site()))\n+    };\n+    ({}) => {\n+        TokenTree::from(Group::new(Delimiter::Brace, TokenStream::new()))\n+    };\n+    (()) => {\n+        TokenTree::from(Group::new(Delimiter::Parenthesis, TokenStream::new()))\n+    };\n+}\n+#[proc_macro_derive(Bar)]\n+pub fn foo(_input: TokenStream) -> TokenStream {\n+    // We hard code the output here for preventing to use any deps\n+    let mut res = TokenStream::new();\n+\n+    // impl Bar for Foo { fn bar() {} }\n+    let mut tokens = vec![t!(\"impl\"), t!(\"Bar\"), t!(\"for\"), t!(\"Foo\")];\n+    let mut fn_stream = TokenStream::new();\n+    fn_stream.extend(vec![t!(\"fn\"), t!(\"bar\"), t!(()), t!({})]);\n+    tokens.push(Group::new(Delimiter::Brace, fn_stream).into());\n+    res.extend(tokens);\n+    res\n+}\n+\n+\"###,\n+    )\n+    .with_config(|config| {\n+        let macro_srv_path = std::path::Path::new(std::env!(\"CARGO_MANIFEST_DIR\"))\n+            .join(\"../../target/debug/ra_proc_macro_srv\")\n+            .to_string_lossy()\n+            .to_string();\n+\n+        config.cargo.load_out_dirs_from_check = true;\n+        config.proc_macro_srv = Some(macro_srv_path)\n+    })\n+    .root(\"foo\")\n+    .root(\"bar\")\n+    .server();\n+    server.wait_until_workspace_is_loaded();\n+    let res = server.send_request::<HoverRequest>(TextDocumentPositionParams::new(\n+        server.doc_id(\"foo/src/main.rs\"),\n+        Position::new(7, 9),\n+    ));\n+\n+    let value = res.get(\"contents\").unwrap().get(\"value\").unwrap().to_string();\n+    assert_eq!(value, r#\"\"```rust\\nfoo::Bar\\nfn bar()\\n```\"\"#)\n+}"}]}