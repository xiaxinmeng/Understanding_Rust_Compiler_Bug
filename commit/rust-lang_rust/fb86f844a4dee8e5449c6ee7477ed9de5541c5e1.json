{"sha": "fb86f844a4dee8e5449c6ee7477ed9de5541c5e1", "node_id": "C_kwDOAAsO6NoAKGZiODZmODQ0YTRkZWU4ZTU0NDljNmVlNzQ3N2VkOWRlNTU0MWM1ZTE", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-01-13T09:26:27Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-01-15T01:16:55Z"}, "message": "nyahggdshjjghsdfhgsf", "tree": {"sha": "a834c94c5923ee6177522e5f1b3fa17729432686", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a834c94c5923ee6177522e5f1b3fa17729432686"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1", "html_url": "https://github.com/rust-lang/rust/commit/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "377870a136330e82f2e63e4a62ee05c64cbce82e", "url": "https://api.github.com/repos/rust-lang/rust/commits/377870a136330e82f2e63e4a62ee05c64cbce82e", "html_url": "https://github.com/rust-lang/rust/commit/377870a136330e82f2e63e4a62ee05c64cbce82e"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "d6e2bb806887deec1e762d2d97035bf91e30226e", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=fb86f844a4dee8e5449c6ee7477ed9de5541c5e1", "patch": "@@ -54,7 +54,7 @@ fn is_non_trait_box(ty: Ty<'_>) -> bool {\n struct EscapeDelegate<'a, 'tcx> {\n     cx: &'a LateContext<'tcx>,\n     set: HirIdSet,\n-    trait_self_ty: Option<Ty<'a>>,\n+    trait_self_ty: Option<Ty<'tcx>>,\n     too_large_for_stack: u64,\n }\n "}, {"sha": "435f3071c80911920fc8fd0c6afa21be938f2a18", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=fb86f844a4dee8e5449c6ee7477ed9de5541c5e1", "patch": "@@ -188,11 +188,10 @@ fn is_value_unfrozen_expr<'tcx>(cx: &LateContext<'tcx>, hir_id: HirId, def_id: D\n \n     let result = cx.tcx.const_eval_resolve(\n         cx.param_env,\n-        ty::Unevaluated {\n-            def: ty::WithOptConstParam::unknown(def_id),\n+        ty::Unevaluated::new(\n+            ty::WithOptConstParam::unknown(def_id),\n             substs,\n-            promoted: None,\n-        },\n+        ),\n         None,\n     );\n     is_value_unfrozen_raw(cx, result, ty)"}, {"sha": "e09a663538ddcfeff5899eae3d0af5155b6a2340", "filename": "clippy_utils/src/consts.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1/clippy_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb86f844a4dee8e5449c6ee7477ed9de5541c5e1/clippy_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fconsts.rs?ref=fb86f844a4dee8e5449c6ee7477ed9de5541c5e1", "patch": "@@ -413,11 +413,10 @@ impl<'a, 'tcx> ConstEvalLateContext<'a, 'tcx> {\n                     .tcx\n                     .const_eval_resolve(\n                         self.param_env,\n-                        ty::Unevaluated {\n-                            def: ty::WithOptConstParam::unknown(def_id),\n+                        ty::Unevaluated::new(\n+                            ty::WithOptConstParam::unknown(def_id),\n                             substs,\n-                            promoted: None,\n-                        },\n+                        ),\n                         None,\n                     )\n                     .ok()"}]}