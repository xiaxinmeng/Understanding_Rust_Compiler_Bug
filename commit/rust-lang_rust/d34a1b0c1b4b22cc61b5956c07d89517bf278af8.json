{"sha": "d34a1b0c1b4b22cc61b5956c07d89517bf278af8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNGExYjBjMWI0YjIyY2M2MWI1OTU2YzA3ZDg5NTE3YmYyNzhhZjg=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-02T12:07:56Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-28T03:11:17Z"}, "message": "Don't duplicate builder code\n\n- Add Builder::new_internal", "tree": {"sha": "d9b3495c38e511e5ba4eab67be47c0eb2075377f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9b3495c38e511e5ba4eab67be47c0eb2075377f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d34a1b0c1b4b22cc61b5956c07d89517bf278af8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d34a1b0c1b4b22cc61b5956c07d89517bf278af8", "html_url": "https://github.com/rust-lang/rust/commit/d34a1b0c1b4b22cc61b5956c07d89517bf278af8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d34a1b0c1b4b22cc61b5956c07d89517bf278af8/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac48e62db85e6db4bbe026490381ab205f4a614d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac48e62db85e6db4bbe026490381ab205f4a614d", "html_url": "https://github.com/rust-lang/rust/commit/ac48e62db85e6db4bbe026490381ab205f4a614d"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "c1c3c2f3ea79776dbf6d127a95e77fc5169cae70", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d34a1b0c1b4b22cc61b5956c07d89517bf278af8/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d34a1b0c1b4b22cc61b5956c07d89517bf278af8/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=d34a1b0c1b4b22cc61b5956c07d89517bf278af8", "patch": "@@ -501,16 +501,7 @@ impl<'a> Builder<'a> {\n             _ => return None,\n         };\n \n-        let builder = Builder {\n-            build,\n-            top_stage: build.config.stage.unwrap_or(2),\n-            kind,\n-            cache: Cache::new(),\n-            stack: RefCell::new(Vec::new()),\n-            time_spent_on_dependencies: Cell::new(Duration::new(0, 0)),\n-            paths: vec![],\n-        };\n-\n+        let builder = Self::new_internal(build, kind, vec![]);\n         let builder = &builder;\n         let mut should_run = ShouldRun::new(builder);\n         for desc in Builder::get_step_descriptions(builder.kind) {\n@@ -535,6 +526,18 @@ impl<'a> Builder<'a> {\n         Some(help)\n     }\n \n+    fn new_internal(build: &Build, kind: Kind, paths: Vec<PathBuf>) -> Builder<'_> {\n+        Builder {\n+            build,\n+            top_stage: build.config.stage.unwrap_or(2),\n+            kind,\n+            cache: Cache::new(),\n+            stack: RefCell::new(Vec::new()),\n+            time_spent_on_dependencies: Cell::new(Duration::new(0, 0)),\n+            paths,\n+        }\n+    }\n+\n     pub fn new(build: &Build) -> Builder<'_> {\n         let (kind, paths) = match build.config.cmd {\n             Subcommand::Build { ref paths } => (Kind::Build, &paths[..]),\n@@ -550,15 +553,7 @@ impl<'a> Builder<'a> {\n             Subcommand::Format { .. } | Subcommand::Clean { .. } => panic!(),\n         };\n \n-        Builder {\n-            build,\n-            top_stage: build.config.stage.unwrap_or(2),\n-            kind,\n-            cache: Cache::new(),\n-            stack: RefCell::new(Vec::new()),\n-            time_spent_on_dependencies: Cell::new(Duration::new(0, 0)),\n-            paths: paths.to_owned(),\n-        }\n+        Self::new_internal(build, kind, paths.to_owned())\n     }\n \n     pub fn execute_cli(&self) {"}]}