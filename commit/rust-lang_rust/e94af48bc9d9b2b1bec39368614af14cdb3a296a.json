{"sha": "e94af48bc9d9b2b1bec39368614af14cdb3a296a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NGFmNDhiYzlkOWIyYjFiZWMzOTM2ODYxNGFmMTRjZGIzYTI5NmE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-19T18:41:32Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-19T18:41:32Z"}, "message": "Work around Yet Another Typestate Lifecycle Bug in rustboot.", "tree": {"sha": "7c6f66afefcf6f679a0b71613bcedd216dcbe2dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c6f66afefcf6f679a0b71613bcedd216dcbe2dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e94af48bc9d9b2b1bec39368614af14cdb3a296a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e94af48bc9d9b2b1bec39368614af14cdb3a296a", "html_url": "https://github.com/rust-lang/rust/commit/e94af48bc9d9b2b1bec39368614af14cdb3a296a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e94af48bc9d9b2b1bec39368614af14cdb3a296a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77ff12c435aeb6181ee2678a526b6f6ea3831938", "url": "https://api.github.com/repos/rust-lang/rust/commits/77ff12c435aeb6181ee2678a526b6f6ea3831938", "html_url": "https://github.com/rust-lang/rust/commit/77ff12c435aeb6181ee2678a526b6f6ea3831938"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "63e43067d28572e593953f512894125462322241", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e94af48bc9d9b2b1bec39368614af14cdb3a296a/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e94af48bc9d9b2b1bec39368614af14cdb3a296a/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=e94af48bc9d9b2b1bec39368614af14cdb3a296a", "patch": "@@ -198,6 +198,17 @@ impure fn parse_arg(parser p) -> ast.arg {\n     ret rec(mode=m, ty=t, ident=i, id=p.next_def_id());\n }\n \n+// FIXME: workaround for a bug in the typestate walk of\n+// the while-graph; the while-loop header doesn't drop\n+// its slots, so \"while (p.peek() ...) { ... }\" leaks.\n+\n+fn peeking_at(parser p, token.token t) -> bool {\n+    if (p.peek() == t) {\n+        ret true;\n+    }\n+    ret false;\n+}\n+\n impure fn parse_seq[T](token.token bra,\n                       token.token ket,\n                       option.t[token.token] sep,\n@@ -207,7 +218,7 @@ impure fn parse_seq[T](token.token bra,\n     auto lo = p.get_span();\n     expect(p, bra);\n     let vec[T] v = vec();\n-    while (p.peek() != ket) {\n+    while (!peeking_at(p, ket)) {\n         alt(sep) {\n             case (some[token.token](?t)) {\n                 if (first) {\n@@ -925,7 +936,7 @@ impure fn parse_mod_items(parser p, token.token term) -> ast._mod {\n    let vec[@ast.item] items = vec();\n     let hashmap[ast.ident,uint] index = new_str_hash[uint]();\n     let uint u = 0u;\n-    while (p.peek() != term) {\n+    while (!peeking_at(p, term)) {\n         auto pair = parse_item(p);\n         append[@ast.item](items, pair._1);\n         index.insert(pair._0, u);"}]}