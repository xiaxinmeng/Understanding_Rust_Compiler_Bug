{"sha": "bec499e08d91a61942e01ac2a747c285e48da2fd", "node_id": "C_kwDOAAsO6NoAKGJlYzQ5OWUwOGQ5MWE2MTk0MmUwMWFjMmE3NDdjMjg1ZTQ4ZGEyZmQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-28T12:59:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-28T12:59:22Z"}, "message": "Rollup merge of #92076 - Aaron1011:rustdoc-auto-trait-ignore, r=cjgillot\n\nIgnore other `PredicateKind`s in rustdoc auto trait finder\n\nFixes #92073\n\nThere's not really anything we can do with them, and they're\ncausing ICEs. I'm not using a wildcard match, as we should check\nthat any new `PredicateKind`s are handled properly by rustdoc.", "tree": {"sha": "9a475269a577e329850a73175199df001c0558fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a475269a577e329850a73175199df001c0558fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bec499e08d91a61942e01ac2a747c285e48da2fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhywoqCRBK7hj4Ov3rIwAAizoIAHMFCo4CovZldPNjEDVRMxed\nX0EsabIc7iveLyUR6TZC+bRRTETjHES2LNAZCzCOL5cPUmatH87Z+8JDGeZhAhvE\n7SEatxWAf/y/LT1hnnpbGDVSeiTYXivu/en5XNuIlPASWjAhVx/ZGaCdr3J6epY0\nz2nX5k8Ps7n7SiInDSnslI5zAJiiyzKG0t4GDrErJJt9rBBDD/uLB1oe2XhiNgsa\nr1sayTN3iTitJL+1atKIpigbwK7Bxh9LD7PtaXCBvF2LaZhSkYC15v72LF2CbvDj\nPueSyNLLRi61uqCFfqouN2FIHSS/ijMgGW4ELA5JLAZLnaqyRedJInWNvVTOo2o=\n=J3fx\n-----END PGP SIGNATURE-----\n", "payload": "tree 9a475269a577e329850a73175199df001c0558fe\nparent e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4\nparent d31f7f1097539c41fea01a7f05400d05d31786c7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1640696362 +0100\ncommitter GitHub <noreply@github.com> 1640696362 +0100\n\nRollup merge of #92076 - Aaron1011:rustdoc-auto-trait-ignore, r=cjgillot\n\nIgnore other `PredicateKind`s in rustdoc auto trait finder\n\nFixes #92073\n\nThere's not really anything we can do with them, and they're\ncausing ICEs. I'm not using a wildcard match, as we should check\nthat any new `PredicateKind`s are handled properly by rustdoc.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bec499e08d91a61942e01ac2a747c285e48da2fd", "html_url": "https://github.com/rust-lang/rust/commit/bec499e08d91a61942e01ac2a747c285e48da2fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bec499e08d91a61942e01ac2a747c285e48da2fd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4", "html_url": "https://github.com/rust-lang/rust/commit/e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4"}, {"sha": "d31f7f1097539c41fea01a7f05400d05d31786c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d31f7f1097539c41fea01a7f05400d05d31786c7", "html_url": "https://github.com/rust-lang/rust/commit/d31f7f1097539c41fea01a7f05400d05d31786c7"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "05d2a373dc6390977b0659d2037b0d34b8450d6c", "filename": "compiler/rustc_trait_selection/src/traits/auto_trait.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bec499e08d91a61942e01ac2a747c285e48da2fd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bec499e08d91a61942e01ac2a747c285e48da2fd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs?ref=bec499e08d91a61942e01ac2a747c285e48da2fd", "patch": "@@ -839,7 +839,17 @@ impl<'tcx> AutoTraitFinder<'tcx> {\n                         _ => return false,\n                     }\n                 }\n-                _ => panic!(\"Unexpected predicate {:?} {:?}\", ty, predicate),\n+                // There's not really much we can do with these predicates -\n+                // we start out with a `ParamEnv` with no inference variables,\n+                // and these don't correspond to adding any new bounds to\n+                // the `ParamEnv`.\n+                ty::PredicateKind::WellFormed(..)\n+                | ty::PredicateKind::ObjectSafe(..)\n+                | ty::PredicateKind::ClosureKind(..)\n+                | ty::PredicateKind::Subtype(..)\n+                | ty::PredicateKind::ConstEvaluatable(..)\n+                | ty::PredicateKind::Coerce(..)\n+                | ty::PredicateKind::TypeWellFormedFromEnv(..) => {}\n             };\n         }\n         true"}]}