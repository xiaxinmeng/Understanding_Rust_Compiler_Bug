{"sha": "66c894e07f95a324a39bb4c281c8db4c8842689b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2Yzg5NGUwN2Y5NWEzMjRhMzliYjRjMjgxYzhkYjRjODg0MjY4OWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-07T16:55:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-07T16:55:42Z"}, "message": "also fix bad use of shared ref in split_at_mut", "tree": {"sha": "7d1f5c802f4c0dda3af69f467c2966f643a7b502", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d1f5c802f4c0dda3af69f467c2966f643a7b502"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66c894e07f95a324a39bb4c281c8db4c8842689b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66c894e07f95a324a39bb4c281c8db4c8842689b", "html_url": "https://github.com/rust-lang/rust/commit/66c894e07f95a324a39bb4c281c8db4c8842689b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66c894e07f95a324a39bb4c281c8db4c8842689b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a996f2c8dcfd08b545374a0b6c0cc0c0c349ad30", "url": "https://api.github.com/repos/rust-lang/rust/commits/a996f2c8dcfd08b545374a0b6c0cc0c0c349ad30", "html_url": "https://github.com/rust-lang/rust/commit/a996f2c8dcfd08b545374a0b6c0cc0c0c349ad30"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6793b16481e01a25ee00d5ac4a372178cbbc04d6", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66c894e07f95a324a39bb4c281c8db4c8842689b/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c894e07f95a324a39bb4c281c8db4c8842689b/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=66c894e07f95a324a39bb4c281c8db4c8842689b", "patch": "@@ -2516,7 +2516,7 @@ impl str {\n         // is_char_boundary checks that the index is in [0, .len()]\n         if self.is_char_boundary(mid) {\n             let len = self.len();\n-            let ptr = self.as_ptr() as *mut u8;\n+            let ptr = self.as_mut_ptr();\n             unsafe {\n                 (from_utf8_unchecked_mut(slice::from_raw_parts_mut(ptr, mid)),\n                  from_utf8_unchecked_mut(slice::from_raw_parts_mut("}]}