{"sha": "0e6f8987aac22bfeef36d708aa60ed7be6ff89b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNmY4OTg3YWFjMjJiZmVlZjM2ZDcwOGFhNjBlZDdiZTZmZjg5Yjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-30T07:12:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-30T07:12:13Z"}, "message": "Auto merge of #57195 - czipperz:mention_ToString_in_std_fmt_docs, r=SimonSapin\n\nMention ToString in std::fmt docs\n\nI believe this should be added because `x.to_string()` is preferred over `format!(\"{}\", x)` as the recommended way to convert a value to a string.  `std::fmt` and the `format` macro is where people look for documentation about this, and thus we should include references to this preferred functions there.\n\nResolves #55065", "tree": {"sha": "876e04cb72bf4c89bfe231e0cf2dc537ff0d665d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/876e04cb72bf4c89bfe231e0cf2dc537ff0d665d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e6f8987aac22bfeef36d708aa60ed7be6ff89b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e6f8987aac22bfeef36d708aa60ed7be6ff89b7", "html_url": "https://github.com/rust-lang/rust/commit/0e6f8987aac22bfeef36d708aa60ed7be6ff89b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e6f8987aac22bfeef36d708aa60ed7be6ff89b7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "171c1fc25ed22e34fa4f666a15909b762ac1307b", "url": "https://api.github.com/repos/rust-lang/rust/commits/171c1fc25ed22e34fa4f666a15909b762ac1307b", "html_url": "https://github.com/rust-lang/rust/commit/171c1fc25ed22e34fa4f666a15909b762ac1307b"}, {"sha": "56d6ff0634e61bcf0a1e26c27cf346f5d170eb59", "url": "https://api.github.com/repos/rust-lang/rust/commits/56d6ff0634e61bcf0a1e26c27cf346f5d170eb59", "html_url": "https://github.com/rust-lang/rust/commit/56d6ff0634e61bcf0a1e26c27cf346f5d170eb59"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "a1e7533449c699fb7faecb1b481d18ce64e44fb7", "filename": "src/liballoc/fmt.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e6f8987aac22bfeef36d708aa60ed7be6ff89b7/src%2Fliballoc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e6f8987aac22bfeef36d708aa60ed7be6ff89b7/src%2Fliballoc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ffmt.rs?ref=0e6f8987aac22bfeef36d708aa60ed7be6ff89b7", "patch": "@@ -27,6 +27,9 @@\n //! will then parse the format string and determine if the list of arguments\n //! provided is suitable to pass to this format string.\n //!\n+//! To convert a single value to a string, use the [`to_string`] method.  This\n+//! will use the [`Display`] formatting trait.\n+//!\n //! ## Positional parameters\n //!\n //! Each formatting argument is allowed to specify which value argument it's\n@@ -487,6 +490,7 @@\n //! [`write!`]: ../../std/macro.write.html\n //! [`Debug`]: trait.Debug.html\n //! [`format!`]: ../../std/macro.format.html\n+//! [`to_string`]: ../../std/string/trait.ToString.html\n //! [`writeln!`]: ../../std/macro.writeln.html\n //! [`write_fmt`]: ../../std/io/trait.Write.html#method.write_fmt\n //! [`std::io::Write`]: ../../std/io/trait.Write.html"}, {"sha": "db91b07fa71b46b9e919d89db5bda4aed7ef2f8e", "filename": "src/liballoc/macros.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0e6f8987aac22bfeef36d708aa60ed7be6ff89b7/src%2Fliballoc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e6f8987aac22bfeef36d708aa60ed7be6ff89b7/src%2Fliballoc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fmacros.rs?ref=0e6f8987aac22bfeef36d708aa60ed7be6ff89b7", "patch": "@@ -73,9 +73,14 @@ macro_rules! vec {\n /// The same convention is used with [`print!`] and [`write!`] macros,\n /// depending on the intended destination of the string.\n ///\n+/// To convert a single value to a string, use the [`to_string`] method.  This\n+/// will use the [`Display`] formatting trait.\n+///\n /// [fmt]: ../std/fmt/index.html\n /// [`print!`]: ../std/macro.print.html\n /// [`write!`]: ../std/macro.write.html\n+/// [`to_string`]: ../std/string/trait.ToString.html\n+/// [`Display`]: ../std/fmt/trait.Display.html\n ///\n /// # Panics\n ///"}]}