{"sha": "a3ab80b332d18056f39e945f3d28894f10f66872", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYWI4MGIzMzJkMTgwNTZmMzllOTQ1ZjNkMjg4OTRmMTBmNjY4NzI=", "commit": {"author": {"name": "Geobert Quach", "email": "geobert@protonmail.com", "date": "2019-09-15T20:56:44Z"}, "committer": {"name": "Geobert Quach", "email": "geobert@protonmail.com", "date": "2019-09-19T21:12:28Z"}, "message": "feat(assists): Rename `escape_quote` to `escape_double_quote`", "tree": {"sha": "1625e9a24d3219da09abe24d887a229a1918c8cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1625e9a24d3219da09abe24d887a229a1918c8cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3ab80b332d18056f39e945f3d28894f10f66872", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3ab80b332d18056f39e945f3d28894f10f66872", "html_url": "https://github.com/rust-lang/rust/commit/a3ab80b332d18056f39e945f3d28894f10f66872", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3ab80b332d18056f39e945f3d28894f10f66872/comments", "author": {"login": "Geobert", "id": 72570, "node_id": "MDQ6VXNlcjcyNTcw", "avatar_url": "https://avatars.githubusercontent.com/u/72570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geobert", "html_url": "https://github.com/Geobert", "followers_url": "https://api.github.com/users/Geobert/followers", "following_url": "https://api.github.com/users/Geobert/following{/other_user}", "gists_url": "https://api.github.com/users/Geobert/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geobert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geobert/subscriptions", "organizations_url": "https://api.github.com/users/Geobert/orgs", "repos_url": "https://api.github.com/users/Geobert/repos", "events_url": "https://api.github.com/users/Geobert/events{/privacy}", "received_events_url": "https://api.github.com/users/Geobert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Geobert", "id": 72570, "node_id": "MDQ6VXNlcjcyNTcw", "avatar_url": "https://avatars.githubusercontent.com/u/72570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geobert", "html_url": "https://github.com/Geobert", "followers_url": "https://api.github.com/users/Geobert/followers", "following_url": "https://api.github.com/users/Geobert/following{/other_user}", "gists_url": "https://api.github.com/users/Geobert/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geobert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geobert/subscriptions", "organizations_url": "https://api.github.com/users/Geobert/orgs", "repos_url": "https://api.github.com/users/Geobert/repos", "events_url": "https://api.github.com/users/Geobert/events{/privacy}", "received_events_url": "https://api.github.com/users/Geobert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "889f1f0a7c4295503f65d11510e232c1ea757235", "url": "https://api.github.com/repos/rust-lang/rust/commits/889f1f0a7c4295503f65d11510e232c1ea757235", "html_url": "https://github.com/rust-lang/rust/commit/889f1f0a7c4295503f65d11510e232c1ea757235"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1cb4297a9b7d87b65effa10a1c9b9e2d6ed9cf7c", "filename": "crates/ra_assists/src/raw_string.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a3ab80b332d18056f39e945f3d28894f10f66872/crates%2Fra_assists%2Fsrc%2Fraw_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ab80b332d18056f39e945f3d28894f10f66872/crates%2Fra_assists%2Fsrc%2Fraw_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fraw_string.rs?ref=a3ab80b332d18056f39e945f3d28894f10f66872", "patch": "@@ -47,7 +47,7 @@ pub(crate) fn make_usual_string(mut ctx: AssistCtx<impl HirDatabase>) -> Option<\n             let start_of_inside = usual_start_pos + TextUnit::from(1);\r\n             let end_of_inside = text.len() - usual_start_pos - TextUnit::from(1);\r\n             let inside_str = text.slice(TextRange::from_to(start_of_inside, end_of_inside));\r\n-            escape_quote(\r\n+            escape_double_quote(\r\n                 edit,\r\n                 &inside_str,\r\n                 literal.syntax().text_range().start() + start_of_inside,\r\n@@ -73,7 +73,7 @@ pub(crate) fn add_hash(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n     }\r\n }\r\n \r\n-fn escape_quote(edit: &mut AssistBuilder, inside_str: &SyntaxText, offset: TextUnit) {\r\n+fn escape_double_quote(edit: &mut AssistBuilder, inside_str: &SyntaxText, offset: TextUnit) {\r\n     let mut start = TextUnit::from(0);\r\n     inside_str.for_each_chunk(|chunk| {\r\n         let end = start + TextUnit::of_str(chunk);\r\n@@ -109,7 +109,7 @@ pub(crate) fn remove_hash(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist\n                 // no more hash after assist, need to escape any `\"` in the string\r\n                 let inside_str = text\r\n                     .slice(TextRange::from_to(TextUnit::from(3), text.len() - TextUnit::from(2)));\r\n-                escape_quote(\r\n+                escape_double_quote(\r\n                     edit,\r\n                     &inside_str,\r\n                     literal.syntax().text_range().start() + TextUnit::from(3),\r"}]}