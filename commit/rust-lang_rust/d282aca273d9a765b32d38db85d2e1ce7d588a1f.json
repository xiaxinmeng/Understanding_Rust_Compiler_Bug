{"sha": "d282aca273d9a765b32d38db85d2e1ce7d588a1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyODJhY2EyNzNkOWE3NjViMzJkMzhkYjg1ZDJlMWNlN2Q1ODhhMWY=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-29T23:54:59Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-29T23:54:59Z"}, "message": "driver: Only output ANSI if connected to a terminal\n\nSee #78435 for more.", "tree": {"sha": "82611f1f3ad6be94a093189b9430ac5941f89e10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82611f1f3ad6be94a093189b9430ac5941f89e10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d282aca273d9a765b32d38db85d2e1ce7d588a1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d282aca273d9a765b32d38db85d2e1ce7d588a1f", "html_url": "https://github.com/rust-lang/rust/commit/d282aca273d9a765b32d38db85d2e1ce7d588a1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d282aca273d9a765b32d38db85d2e1ce7d588a1f/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bdae9edd0cc099daa6038bca469dc09b6fc078a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bdae9edd0cc099daa6038bca469dc09b6fc078a", "html_url": "https://github.com/rust-lang/rust/commit/6bdae9edd0cc099daa6038bca469dc09b6fc078a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9b5b08bce619db0bb2c7726cb41cca4d89fdc8c2", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d282aca273d9a765b32d38db85d2e1ce7d588a1f/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d282aca273d9a765b32d38db85d2e1ce7d588a1f/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=d282aca273d9a765b32d38db85d2e1ce7d588a1f", "patch": "@@ -1286,7 +1286,7 @@ pub fn init_env_logger(env: &str) {\n     let filter = tracing_subscriber::EnvFilter::from_env(env);\n     let layer = tracing_tree::HierarchicalLayer::default()\n         .with_indent_lines(true)\n-        .with_ansi(true)\n+        .with_ansi(stdout_isatty())\n         .with_targets(true)\n         .with_thread_ids(true)\n         .with_thread_names(true)"}]}