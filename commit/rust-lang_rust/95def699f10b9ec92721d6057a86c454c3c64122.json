{"sha": "95def699f10b9ec92721d6057a86c454c3c64122", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ZGVmNjk5ZjEwYjllYzkyNzIxZDYwNTdhODZjNDU0YzNjNjQxMjI=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-06-10T21:14:00Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-06-14T22:35:09Z"}, "message": "Implement upcall_vec_append and use it for vector append.", "tree": {"sha": "e2e510807e87060414b95cfb640d0929986c0db3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2e510807e87060414b95cfb640d0929986c0db3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95def699f10b9ec92721d6057a86c454c3c64122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95def699f10b9ec92721d6057a86c454c3c64122", "html_url": "https://github.com/rust-lang/rust/commit/95def699f10b9ec92721d6057a86c454c3c64122", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95def699f10b9ec92721d6057a86c454c3c64122/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "491d1106454c9ffa3950afe27ea3488ef5c19e32", "url": "https://api.github.com/repos/rust-lang/rust/commits/491d1106454c9ffa3950afe27ea3488ef5c19e32", "html_url": "https://github.com/rust-lang/rust/commit/491d1106454c9ffa3950afe27ea3488ef5c19e32"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "c2c90f641f10cd42872a7740c18f5fea5197857b", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/95def699f10b9ec92721d6057a86c454c3c64122/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95def699f10b9ec92721d6057a86c454c3c64122/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=95def699f10b9ec92721d6057a86c454c3c64122", "patch": "@@ -5,6 +5,7 @@ import trans::decl_cdecl_fn;\n import trans::T_f32;\n import trans::T_f64;\n import trans::T_fn;\n+import trans::T_bool;\n import trans::T_i8;\n import trans::T_i32;\n import trans::T_int;\n@@ -53,6 +54,7 @@ type upcalls = rec(\n     ValueRef new_str,\n     ValueRef new_vec,\n     ValueRef vec_grow,\n+    ValueRef vec_append,\n     ValueRef get_type_desc,\n     ValueRef new_task,\n     ValueRef start_task,\n@@ -111,6 +113,9 @@ fn declare_upcalls(type_names tn, ModuleRef llmod) -> @upcalls {\n         vec_grow=d(\"vec_grow\", [T_opaque_vec_ptr(), T_size_t(),\n                                    T_ptr(T_int()), T_ptr(T_tydesc(tn))],\n                    T_opaque_vec_ptr()),\n+        vec_append=d(\"vec_append\", [T_ptr(T_tydesc(tn)), T_ptr(T_tydesc(tn)),\n+                                    T_ptr(T_opaque_vec_ptr()),\n+                                    T_opaque_vec_ptr(), T_bool()], T_void()),\n         get_type_desc=d(\"get_type_desc\",\n                         [T_ptr(T_nil()), T_size_t(), T_size_t(),\n                          T_size_t(), T_ptr(T_ptr(T_tydesc(tn)))],"}, {"sha": "da4fe79b8fb91a8e0ce31a7b9ac1f17e0a1bb879", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95def699f10b9ec92721d6057a86c454c3c64122/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95def699f10b9ec92721d6057a86c454c3c64122/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=95def699f10b9ec92721d6057a86c454c3c64122", "patch": "@@ -3681,7 +3681,7 @@ fn trans_vec_append(&@block_ctxt cx, &ty::t t,\n     auto dst = bcx.build.PointerCast(lhs, T_ptr(T_opaque_vec_ptr()));\n     auto src = bcx.build.PointerCast(rhs, T_opaque_vec_ptr());\n \n-    ret res(bcx, bcx.build.FastCall(cx.fcx.lcx.ccx.glues.vec_append_glue,\n+    ret res(bcx, bcx.build.Call(cx.fcx.lcx.ccx.upcalls.vec_append,\n                                     [cx.fcx.lltaskptr,\n                                         llvec_tydesc.val,\n                                         llelt_tydesc.val,"}, {"sha": "3e03cdc7ebb97817e443c35274f8343932545af2", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/95def699f10b9ec92721d6057a86c454c3c64122/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/95def699f10b9ec92721d6057a86c454c3c64122/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=95def699f10b9ec92721d6057a86c454c3c64122", "patch": "@@ -415,7 +415,7 @@ upcall_vec_grow(rust_task *task,\n          *\n          * Step 3 is a bit tricky.  We don't know how to properly copy the\n          * elements in the runtime (all we have are bits in a buffer; no\n-         * type infromation and no copy glue).  What we do instead is set the\n+         * type information and no copy glue).  What we do instead is set the\n          * need_copy outparam flag to indicate to our caller (vec-copy glue)\n          * that we need the copies performed for us.\n          */\n@@ -436,6 +436,53 @@ upcall_vec_grow(rust_task *task,\n     return v;\n }\n \n+// Copy elements from one vector to another,\n+// dealing with reference counts\n+static inline void\n+copy_elements(rust_task *task, type_desc *elem_t,\n+              void *pdst, void *psrc, size_t n)\n+{\n+    char *dst = (char *)pdst, *src = (char *)psrc;\n+\n+    // increment the refcount of each element of the vector\n+    if (elem_t->take_glue) {\n+        glue_fn *take_glue = elem_t->take_glue;\n+        size_t elem_size = elem_t->size;\n+        const type_desc **tydescs = elem_t->first_param;\n+        for (char *p = src; p < src+n; p += elem_size) {\n+            take_glue(NULL, task, NULL, tydescs, p);\n+        }\n+    }\n+    memmove(dst, src, n);\n+}\n+\n+extern \"C\" CDECL void\n+upcall_vec_append(rust_task *task, type_desc *t, type_desc *elem_t,\n+                  rust_vec **dst_ptr, rust_vec *src, bool skip_null)\n+{\n+    LOG_UPCALL_ENTRY(task);\n+    rust_vec *dst = *dst_ptr;\n+    uintptr_t need_copy;\n+    size_t n_src_bytes = skip_null ? src->fill - 1 : src->fill;\n+    size_t n_dst_bytes = skip_null ? dst->fill - 1 : dst->fill;\n+    rust_vec *new_vec = upcall_vec_grow(task, dst, n_src_bytes,\n+                                        &need_copy, t);\n+\n+    if (need_copy) {\n+        // Copy any dst elements in, omitting null if doing str.\n+        copy_elements(task, elem_t, &new_vec->data, &dst->data, n_dst_bytes);\n+    }\n+\n+    // Copy any src elements in, carrying along null if doing str.\n+    void *new_end = (void *)((char *)new_vec->data + n_dst_bytes);\n+    copy_elements(task, elem_t, new_end, &src->data, src->fill);\n+    new_vec->fill = n_dst_bytes + src->fill;\n+\n+    // Write new_vec back through the alias we were given.\n+    *dst_ptr = new_vec;\n+}\n+\n+\n extern \"C\" CDECL type_desc *\n upcall_get_type_desc(rust_task *task,\n                      void *curr_crate, // ignored, legacy compat."}, {"sha": "9be5141f04d2cad250341d112298633fecea296e", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95def699f10b9ec92721d6057a86c454c3c64122/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/95def699f10b9ec92721d6057a86c454c3c64122/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=95def699f10b9ec92721d6057a86c454c3c64122", "patch": "@@ -73,6 +73,7 @@ upcall_start_thread\n upcall_trace_str\n upcall_trace_word\n upcall_vec_grow\n+upcall_vec_append\n upcall_yield\n vec_alloc\n vec_alloc_mut"}]}