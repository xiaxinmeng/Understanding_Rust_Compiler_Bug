{"sha": "17cb2b147e11c9ad274b316026b1001fbd7007d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3Y2IyYjE0N2UxMWM5YWQyNzRiMzE2MDI2YjEwMDFmYmQ3MDA3ZDQ=", "commit": {"author": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2019-10-27T02:07:04Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-09-17T03:01:50Z"}, "message": "feat: add --check flag to cargo fmt (#3890)", "tree": {"sha": "82ccb744011110281fd4f147685ce77d27928214", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82ccb744011110281fd4f147685ce77d27928214"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17cb2b147e11c9ad274b316026b1001fbd7007d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17cb2b147e11c9ad274b316026b1001fbd7007d4", "html_url": "https://github.com/rust-lang/rust/commit/17cb2b147e11c9ad274b316026b1001fbd7007d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17cb2b147e11c9ad274b316026b1001fbd7007d4/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d65b7dcd19557bca9aa4b175efa14a35db6d713", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d65b7dcd19557bca9aa4b175efa14a35db6d713", "html_url": "https://github.com/rust-lang/rust/commit/9d65b7dcd19557bca9aa4b175efa14a35db6d713"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "89ce454ac4d00df44a1b14b71bc67090a4786b30", "filename": "src/cargo-fmt/main.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/17cb2b147e11c9ad274b316026b1001fbd7007d4/src%2Fcargo-fmt%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17cb2b147e11c9ad274b316026b1001fbd7007d4/src%2Fcargo-fmt%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo-fmt%2Fmain.rs?ref=17cb2b147e11c9ad274b316026b1001fbd7007d4", "patch": "@@ -56,6 +56,10 @@ pub struct Opts {\n     /// Format all packages, and also their local path-based dependencies\n     #[structopt(long = \"all\")]\n     format_all: bool,\n+\n+    /// Run rustfmt in check mode\n+    #[structopt(long = \"check\")]\n+    check: bool,\n }\n \n fn main() {\n@@ -104,6 +108,12 @@ fn execute() -> i32 {\n \n     let strategy = CargoFmtStrategy::from_opts(&opts);\n     let mut rustfmt_args = opts.rustfmt_options;\n+    if opts.check {\n+        let check_flag = String::from(\"--check\");\n+        if !rustfmt_args.contains(&check_flag) {\n+            rustfmt_args.push(check_flag);\n+        }\n+    }\n     if let Some(message_format) = opts.message_format {\n         if let Err(msg) = convert_message_format_to_rustfmt_args(&message_format, &mut rustfmt_args)\n         {\n@@ -553,6 +563,7 @@ mod cargo_fmt_tests {\n         assert_eq!(false, o.quiet);\n         assert_eq!(false, o.verbose);\n         assert_eq!(false, o.version);\n+        assert_eq!(false, o.check);\n         assert_eq!(empty, o.packages);\n         assert_eq!(empty, o.rustfmt_options);\n         assert_eq!(false, o.format_all);\n@@ -571,13 +582,15 @@ mod cargo_fmt_tests {\n             \"p2\",\n             \"--message-format\",\n             \"short\",\n+            \"--check\",\n             \"--\",\n             \"--edition\",\n             \"2018\",\n         ]);\n         assert_eq!(true, o.quiet);\n         assert_eq!(false, o.verbose);\n         assert_eq!(false, o.version);\n+        assert_eq!(true, o.check);\n         assert_eq!(vec![\"p1\", \"p2\"], o.packages);\n         assert_eq!(vec![\"--edition\", \"2018\"], o.rustfmt_options);\n         assert_eq!(false, o.format_all);\n@@ -606,12 +619,12 @@ mod cargo_fmt_tests {\n     fn mandatory_separator() {\n         assert!(\n             Opts::clap()\n-                .get_matches_from_safe(&[\"test\", \"--check\"])\n+                .get_matches_from_safe(&[\"test\", \"--emit\"])\n                 .is_err()\n         );\n         assert!(\n             !Opts::clap()\n-                .get_matches_from_safe(&[\"test\", \"--\", \"--check\"])\n+                .get_matches_from_safe(&[\"test\", \"--\", \"--emit\"])\n                 .is_err()\n         );\n     }"}]}