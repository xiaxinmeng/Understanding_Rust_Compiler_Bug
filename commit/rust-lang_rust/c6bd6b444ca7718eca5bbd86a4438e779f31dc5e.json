{"sha": "c6bd6b444ca7718eca5bbd86a4438e779f31dc5e", "node_id": "C_kwDOAAsO6NoAKGM2YmQ2YjQ0NGNhNzcxOGVjYTViYmQ4NmE0NDM4ZTc3OWYzMWRjNWU", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-09T22:10:45Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-20T23:58:22Z"}, "message": "Delete Decoder::read_enum", "tree": {"sha": "ad83c65cc0e97f1bf122bdfec54fe4c4a425abbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad83c65cc0e97f1bf122bdfec54fe4c4a425abbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e", "html_url": "https://github.com/rust-lang/rust/commit/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60b71f56e73fc139eababa00aa8f1b740cb7d445", "url": "https://api.github.com/repos/rust-lang/rust/commits/60b71f56e73fc139eababa00aa8f1b740cb7d445", "html_url": "https://github.com/rust-lang/rust/commit/60b71f56e73fc139eababa00aa8f1b740cb7d445"}], "stats": {"total": 50, "additions": 16, "deletions": 34}, "files": [{"sha": "91a076fa6f624f9938e3b7ef299fe260a5a21987", "filename": "compiler/rustc_macros/src/serialize.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs?ref=c6bd6b444ca7718eca5bbd86a4438e779f31dc5e", "patch": "@@ -73,20 +73,15 @@ fn decodable_body(\n                 variants.len()\n             );\n             quote! {\n-                ::rustc_serialize::Decoder::read_enum(\n+                ::rustc_serialize::Decoder::read_enum_variant(\n                     __decoder,\n-                    |__decoder| {\n-                        ::rustc_serialize::Decoder::read_enum_variant(\n-                            __decoder,\n-                            &[#names],\n-                            |__decoder, __variant_idx| {\n-                                match __variant_idx {\n-                                    #match_inner\n-                                    _ => panic!(#message),\n-                                }\n-                            })\n-                    }\n-                )\n+                    &[#names],\n+                    |__decoder, __variant_idx| {\n+                        match __variant_idx {\n+                            #match_inner\n+                            _ => panic!(#message),\n+                        }\n+                    })\n             }\n         }\n     };"}, {"sha": "6e0199260f830955a7bdfdbc9c5dadb3f5ce3c4c", "filename": "compiler/rustc_serialize/src/serialize.rs", "status": "modified", "additions": 8, "deletions": 21, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6bd6b444ca7718eca5bbd86a4438e779f31dc5e/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs?ref=c6bd6b444ca7718eca5bbd86a4438e779f31dc5e", "patch": "@@ -201,15 +201,6 @@ pub trait Decoder {\n     fn read_str(&mut self) -> Cow<'_, str>;\n     fn read_raw_bytes_into(&mut self, s: &mut [u8]);\n \n-    // Compound types:\n-    #[inline]\n-    fn read_enum<T, F>(&mut self, f: F) -> T\n-    where\n-        F: FnOnce(&mut Self) -> T,\n-    {\n-        f(self)\n-    }\n-\n     #[inline]\n     fn read_enum_variant<T, F>(&mut self, _names: &[&str], mut f: F) -> T\n     where\n@@ -264,12 +255,10 @@ pub trait Decoder {\n     where\n         F: FnMut(&mut Self, bool) -> T,\n     {\n-        self.read_enum(move |this| {\n-            this.read_enum_variant(&[\"None\", \"Some\"], move |this, idx| match idx {\n-                0 => f(this, false),\n-                1 => f(this, true),\n-                _ => panic!(\"read_option: expected 0 for None or 1 for Some\"),\n-            })\n+        self.read_enum_variant(&[\"None\", \"Some\"], move |this, idx| match idx {\n+            0 => f(this, false),\n+            1 => f(this, true),\n+            _ => panic!(\"read_option: expected 0 for None or 1 for Some\"),\n         })\n     }\n \n@@ -582,12 +571,10 @@ impl<S: Encoder, T1: Encodable<S>, T2: Encodable<S>> Encodable<S> for Result<T1,\n \n impl<D: Decoder, T1: Decodable<D>, T2: Decodable<D>> Decodable<D> for Result<T1, T2> {\n     fn decode(d: &mut D) -> Result<T1, T2> {\n-        d.read_enum(|d| {\n-            d.read_enum_variant(&[\"Ok\", \"Err\"], |d, disr| match disr {\n-                0 => Ok(d.read_enum_variant_arg(|d| T1::decode(d))),\n-                1 => Err(d.read_enum_variant_arg(|d| T2::decode(d))),\n-                _ => panic!(\"Encountered invalid discriminant while decoding `Result`.\"),\n-            })\n+        d.read_enum_variant(&[\"Ok\", \"Err\"], |d, disr| match disr {\n+            0 => Ok(d.read_enum_variant_arg(|d| T1::decode(d))),\n+            1 => Err(d.read_enum_variant_arg(|d| T2::decode(d))),\n+            _ => panic!(\"Encountered invalid discriminant while decoding `Result`.\"),\n         })\n     }\n }"}]}