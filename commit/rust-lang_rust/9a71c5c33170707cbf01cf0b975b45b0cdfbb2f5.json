{"sha": "9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNzFjNWMzMzE3MDcwN2NiZjAxY2YwYjk3NWI0NWIwY2RmYmIyZjU=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2015-10-21T06:08:00Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2015-10-21T17:05:19Z"}, "message": "Use `gcc -print-file-name` for finding C runtime startup objects:\nreverted changes in configure, refactored target.mk", "tree": {"sha": "d9978cbca74c472373f04ce967e65d28bc5c67f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9978cbca74c472373f04ce967e65d28bc5c67f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5", "html_url": "https://github.com/rust-lang/rust/commit/9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "145b8438fe19b81d964b60132eeeb6c95e8646e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/145b8438fe19b81d964b60132eeeb6c95e8646e9", "html_url": "https://github.com/rust-lang/rust/commit/145b8438fe19b81d964b60132eeeb6c95e8646e9"}], "stats": {"total": 56, "additions": 27, "deletions": 29}, "files": [{"sha": "60d366100f8c207b38132e07cbebac40dcb9bdb4", "filename": "configure", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5/configure", "raw_url": "https://github.com/rust-lang/rust/raw/9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5", "patch": "@@ -625,7 +625,6 @@ valopt_nosave local-rust-root \"/usr/local\" \"set prefix for local rust binary\"\n valopt_nosave host \"${CFG_BUILD}\" \"GNUs ./configure syntax LLVM host triples\"\n valopt_nosave target \"${CFG_HOST}\" \"GNUs ./configure syntax LLVM target triples\"\n valopt_nosave mandir \"${CFG_PREFIX}/share/man\" \"install man pages in PATH\"\n-valopt_nosave libc-dir \"/usr/lib\" \"installation directory of the system libc\"\n \n # Temporarily support old triples until buildbots get updated\n CFG_BUILD=$(to_llvm_triple $CFG_BUILD)\n@@ -1081,9 +1080,6 @@ program_transform_name=$($CFG_CC -v 2>&1 | sed -n \"s/.*--program-transform-name=\n CFG_STDCPP_NAME=$(echo \"stdc++\" | sed \"${program_transform_name}\")\n putvar CFG_STDCPP_NAME\n \n-#CFG_LIB_SEARCH_PATH=$($CFG_CC -print-search-dirs | sed -n \"/libraries: =/  { s/.*=//; P }\")\n-#putvar CFG_LIB_SEARCH_PATH\n-\n # a little post-processing of various config values\n CFG_PREFIX=${CFG_PREFIX%/}\n CFG_MANDIR=${CFG_MANDIR%/}\n@@ -1284,16 +1280,6 @@ $ pacman -R cmake && pacman -S mingw-w64-x86_64-cmake\n             putvar CFG_DISABLE_JEMALLOC\n             ;;\n \n-        *-windows-gnu)\n-            if [ -z \"$CFG_LIBC_DIR_PROVIDED\" ]; then\n-                # Use gcc location to find mingw libc directory\n-                for dir in $(dirname $CFG_GCC)/../*-mingw32/lib; do\n-                    if [ -d \"$dir\" ]; then\n-                        CFG_LIBC_DIR=$dir\n-                    fi\n-                done\n-            fi\n-            ;;\n         *)\n             ;;\n     esac\n@@ -1752,7 +1738,6 @@ putvar CFG_AARCH64_LINUX_ANDROID_NDK\n putvar CFG_ARM_LINUX_ANDROIDEABI_NDK\n putvar CFG_I686_LINUX_ANDROID_NDK\n putvar CFG_MANDIR\n-putvar CFG_LIBC_DIR\n \n # Avoid spurious warnings from clang by feeding it original source on\n # ccache-miss rather than preprocessed input."}, {"sha": "5caf8d8e81eda9623f138691b1259abdf47d7f01", "filename": "mk/target.mk", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=9a71c5c33170707cbf01cf0b975b45b0cdfbb2f5", "patch": "@@ -146,19 +146,10 @@ define TARGET_RT_STARTUP\n $$(foreach obj,rsbegin rsend, \\\n \t$$(eval $$(call TARGET_RUSTRT_STARTUP_OBJ,$(1),$(2),$(3),$$(obj))) )\n \n+# Expand build rules for libc startup objects\n $$(foreach obj,$$(CFG_LIBC_STARTUP_OBJECTS_$(2)), \\\n-\t$$(eval $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.core : $$(TLIB$(1)_T_$(2)_H_$(3))/$$(obj)) \\\n-\t$$(eval $$(call COPY_LIBC_STARTUP,$$(TLIB$(1)_T_$(2)_H_$(3)),$$(obj))) )\n-endef\n-\n-# TARGET_RT_STARTUP's helper for copying LibC startup objects\n-# $(1) - target lib directory\n-# $(2) - object name\n-define COPY_LIBC_STARTUP\n+\t$$(eval $$(call TARGET_LIBC_STARTUP_OBJ,$(1),$(2),$(3),$$(obj))) )\n \n-$(1)/$(2) : $$(CFG_LIBC_DIR)/$(2)\n-\t@$$(call E, cp: $$@)\n-\t@cp $$^ $$@\n endef\n \n # Macro for building runtime startup/shutdown object files;\n@@ -167,10 +158,10 @@ endef\n # $(1) - stage\n # $(2) - target triple\n # $(3) - host triple\n-# $(4) - object name\n+# $(4) - object basename\n define TARGET_RUSTRT_STARTUP_OBJ\n \n-$$(TLIB$(1)_T_$(2)_H_$(3))/$(4).o:\\\n+$$(TLIB$(1)_T_$(2)_H_$(3))/$(4).o: \\\n \t\t$(S)src/rtstartup/$(4).rs \\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/stamp.core \\\n \t\t$$(HSREQ$(1)_T_$(2)_H_$(3)) \\\n@@ -183,9 +174,31 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(4).o:\\\n # but before everything else (since they are needed for linking dylib crates).\n $$(foreach crate, $$(TARGET_CRATES), \\\n \t$$(if $$(findstring core,$$(DEPS_$$(crate))), \\\n-\t\t$$(eval $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$$(crate) : $$(TLIB$(1)_T_$(2)_H_$(3))/$(4).o) ))\n+\t\t$$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$$(crate))) : $$(TLIB$(1)_T_$(2)_H_$(3))/$(4).o\n+\n endef\n \n+# Macro for copying libc startup objects into the target's lib directory.\n+#\n+# $(1) - stage\n+# $(2) - target triple\n+# $(3) - host triple\n+# $(4) - object name\n+define TARGET_LIBC_STARTUP_OBJ\n+\n+# Ask gcc where the startup object is located\n+$$(TLIB$(1)_T_$(2)_H_$(3))/$(4) : $$(shell $$(CC_$(2)) -print-file-name=$(4))\n+\t@$$(call E, cp: $$@)\n+\t@cp $$^ $$@\n+\n+# Make sure this is done before libcore has finished building\n+# (libcore itself does not depend on these objects, but other crates do,\n+#  so might as well do it here)\n+$$(TLIB$(1)_T_$(2)_H_$(3))/stamp.core : $$(TLIB$(1)_T_$(2)_H_$(3))/$(4)\n+\n+endef\n+\n+\n # Every recipe in RUST_TARGET_STAGE_N outputs to $$(TLIB$(1)_T_$(2)_H_$(3),\n # a directory that can be cleaned out during the middle of a run of\n # the get-snapshot.py script.  Therefore, every recipe needs to have"}]}