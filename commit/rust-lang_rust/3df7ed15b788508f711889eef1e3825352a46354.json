{"sha": "3df7ed15b788508f711889eef1e3825352a46354", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZjdlZDE1Yjc4ODUwOGY3MTE4ODllZWYxZTM4MjUzNTJhNDYzNTQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-08T00:50:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-08T00:50:42Z"}, "message": "Remove Durable from the language", "tree": {"sha": "0d99af193da914d1d3d6a7358a6d331715b4fceb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d99af193da914d1d3d6a7358a6d331715b4fceb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3df7ed15b788508f711889eef1e3825352a46354", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3df7ed15b788508f711889eef1e3825352a46354", "html_url": "https://github.com/rust-lang/rust/commit/3df7ed15b788508f711889eef1e3825352a46354", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3df7ed15b788508f711889eef1e3825352a46354/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1755eec87f8757c08d49c1465b6880dc40a5d901", "url": "https://api.github.com/repos/rust-lang/rust/commits/1755eec87f8757c08d49c1465b6880dc40a5d901", "html_url": "https://github.com/rust-lang/rust/commit/1755eec87f8757c08d49c1465b6880dc40a5d901"}], "stats": {"total": 173, "additions": 82, "deletions": 91}, "files": [{"sha": "15b0be7b4bce5f94f81166355dbcc7938f0374cf", "filename": "src/libcore/core.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=3df7ed15b788508f711889eef1e3825352a46354", "patch": "@@ -72,7 +72,7 @@ they contained the following prologue:\n \n /* Reexported core operators */\n \n-pub use kinds::{Const, Copy, Owned, Durable};\n+pub use kinds::{Const, Copy, Owned};\n pub use ops::{Drop};\n pub use ops::{Add, Sub, Mul, Div, Rem, Neg, Not};\n pub use ops::{BitAnd, BitOr, BitXor};"}, {"sha": "eeafc4cf786a57655e90bbec30881054b9c24ddd", "filename": "src/libcore/kinds.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibcore%2Fkinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibcore%2Fkinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fkinds.rs?ref=3df7ed15b788508f711889eef1e3825352a46354", "patch": "@@ -30,8 +30,6 @@ The 4 kinds are\n * Const - types that are deeply immutable. Const types are used for\n   freezable data structures.\n \n-* Durable - types that do not contain borrowed pointers.\n-\n `Copy` types include both implicitly copyable types that the compiler\n will copy automatically and non-implicitly copyable types that require\n the `copy` keyword to copy. Types that do not implement `Copy` may\n@@ -55,6 +53,7 @@ pub trait Const {\n }\n \n #[lang=\"durable\"]\n+#[cfg(stage0)]\n pub trait Durable {\n     // Empty.\n }"}, {"sha": "d263d2cdbee9e99d684f1e56e603c05e785276ba", "filename": "src/libcore/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibcore%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibcore%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude.rs?ref=3df7ed15b788508f711889eef1e3825352a46354", "patch": "@@ -13,7 +13,7 @@\n /* Reexported core operators */\n \n pub use either::{Either, Left, Right};\n-pub use kinds::{Const, Copy, Owned, Durable};\n+pub use kinds::{Const, Copy, Owned};\n pub use ops::{Add, Sub, Mul, Div, Rem, Neg, Not};\n pub use ops::{BitAnd, BitOr, BitXor};\n pub use ops::{Drop};"}, {"sha": "c94dc3046dfd413fd17a07009d3bec6bb7567ed1", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 79, "deletions": 85, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=3df7ed15b788508f711889eef1e3825352a46354", "patch": "@@ -34,56 +34,55 @@ pub enum LangItem {\n     ConstTraitLangItem,         // 0\n     CopyTraitLangItem,          // 1\n     OwnedTraitLangItem,         // 2\n-    DurableTraitLangItem,       // 3\n-\n-    DropTraitLangItem,          // 4\n-\n-    AddTraitLangItem,           // 5\n-    SubTraitLangItem,           // 6\n-    MulTraitLangItem,           // 7\n-    DivTraitLangItem,           // 8\n-    RemTraitLangItem,           // 9\n-    NegTraitLangItem,           // 10\n-    NotTraitLangItem,           // 11\n-    BitXorTraitLangItem,        // 12\n-    BitAndTraitLangItem,        // 13\n-    BitOrTraitLangItem,         // 14\n-    ShlTraitLangItem,           // 15\n-    ShrTraitLangItem,           // 16\n-    IndexTraitLangItem,         // 17\n-\n-    EqTraitLangItem,            // 18\n-    OrdTraitLangItem,           // 19\n-\n-    StrEqFnLangItem,            // 20\n-    UniqStrEqFnLangItem,        // 21\n-    AnnihilateFnLangItem,       // 22\n-    LogTypeFnLangItem,          // 23\n-    FailFnLangItem,             // 24\n-    FailBoundsCheckFnLangItem,  // 25\n-    ExchangeMallocFnLangItem,   // 26\n-    ExchangeFreeFnLangItem,     // 27\n-    MallocFnLangItem,           // 28\n-    FreeFnLangItem,             // 29\n-    BorrowAsImmFnLangItem,      // 30\n-    BorrowAsMutFnLangItem,      // 31\n-    ReturnToMutFnLangItem,      // 32\n-    CheckNotBorrowedFnLangItem, // 33\n-    StrDupUniqFnLangItem,       // 34\n-    RecordBorrowFnLangItem,     // 35\n-    UnrecordBorrowFnLangItem,   // 36\n-\n-    StartFnLangItem,            // 37\n+\n+    DropTraitLangItem,          // 3\n+\n+    AddTraitLangItem,           // 4\n+    SubTraitLangItem,           // 5\n+    MulTraitLangItem,           // 6\n+    DivTraitLangItem,           // 7\n+    RemTraitLangItem,           // 8\n+    NegTraitLangItem,           // 9\n+    NotTraitLangItem,           // 10\n+    BitXorTraitLangItem,        // 11\n+    BitAndTraitLangItem,        // 12\n+    BitOrTraitLangItem,         // 13\n+    ShlTraitLangItem,           // 14\n+    ShrTraitLangItem,           // 15\n+    IndexTraitLangItem,         // 16\n+\n+    EqTraitLangItem,            // 17\n+    OrdTraitLangItem,           // 18\n+\n+    StrEqFnLangItem,            // 19\n+    UniqStrEqFnLangItem,        // 20\n+    AnnihilateFnLangItem,       // 21\n+    LogTypeFnLangItem,          // 22\n+    FailFnLangItem,             // 23\n+    FailBoundsCheckFnLangItem,  // 24\n+    ExchangeMallocFnLangItem,   // 25\n+    ExchangeFreeFnLangItem,     // 26\n+    MallocFnLangItem,           // 27\n+    FreeFnLangItem,             // 28\n+    BorrowAsImmFnLangItem,      // 29\n+    BorrowAsMutFnLangItem,      // 30\n+    ReturnToMutFnLangItem,      // 31\n+    CheckNotBorrowedFnLangItem, // 32\n+    StrDupUniqFnLangItem,       // 33\n+    RecordBorrowFnLangItem,     // 34\n+    UnrecordBorrowFnLangItem,   // 35\n+\n+    StartFnLangItem,            // 36\n }\n \n pub struct LanguageItems {\n-    items: [Option<def_id>, ..38]\n+    items: [Option<def_id>, ..37]\n }\n \n pub impl LanguageItems {\n     pub fn new() -> LanguageItems {\n         LanguageItems {\n-            items: [ None, ..38 ]\n+            items: [ None, ..37 ]\n         }\n     }\n \n@@ -100,45 +99,44 @@ pub impl LanguageItems {\n             0  => \"const\",\n             1  => \"copy\",\n             2  => \"owned\",\n-            3  => \"durable\",\n-\n-            4  => \"drop\",\n-\n-            5  => \"add\",\n-            6  => \"sub\",\n-            7  => \"mul\",\n-            8  => \"div\",\n-            9  => \"rem\",\n-            10 => \"neg\",\n-            11 => \"not\",\n-            12 => \"bitxor\",\n-            13 => \"bitand\",\n-            14 => \"bitor\",\n-            15 => \"shl\",\n-            16 => \"shr\",\n-            17 => \"index\",\n-            18 => \"eq\",\n-            19 => \"ord\",\n-\n-            20 => \"str_eq\",\n-            21 => \"uniq_str_eq\",\n-            22 => \"annihilate\",\n-            23 => \"log_type\",\n-            24 => \"fail_\",\n-            25 => \"fail_bounds_check\",\n-            26 => \"exchange_malloc\",\n-            27 => \"exchange_free\",\n-            28 => \"malloc\",\n-            29 => \"free\",\n-            30 => \"borrow_as_imm\",\n-            31 => \"borrow_as_mut\",\n-            32 => \"return_to_mut\",\n-            33 => \"check_not_borrowed\",\n-            34 => \"strdup_uniq\",\n-            35 => \"record_borrow\",\n-            36 => \"unrecord_borrow\",\n-\n-            37 => \"start\",\n+\n+            3  => \"drop\",\n+\n+            4  => \"add\",\n+            5  => \"sub\",\n+            6  => \"mul\",\n+            7  => \"div\",\n+            8  => \"rem\",\n+            9 => \"neg\",\n+            10 => \"not\",\n+            11 => \"bitxor\",\n+            12 => \"bitand\",\n+            13 => \"bitor\",\n+            14 => \"shl\",\n+            15 => \"shr\",\n+            16 => \"index\",\n+            17 => \"eq\",\n+            18 => \"ord\",\n+\n+            19 => \"str_eq\",\n+            20 => \"uniq_str_eq\",\n+            21 => \"annihilate\",\n+            22 => \"log_type\",\n+            23 => \"fail_\",\n+            24 => \"fail_bounds_check\",\n+            25 => \"exchange_malloc\",\n+            26 => \"exchange_free\",\n+            27 => \"malloc\",\n+            28 => \"free\",\n+            29 => \"borrow_as_imm\",\n+            30 => \"borrow_as_mut\",\n+            31 => \"return_to_mut\",\n+            32 => \"check_not_borrowed\",\n+            33 => \"strdup_uniq\",\n+            34 => \"record_borrow\",\n+            35 => \"unrecord_borrow\",\n+\n+            36 => \"start\",\n \n             _ => \"???\"\n         }\n@@ -155,9 +153,6 @@ pub impl LanguageItems {\n     pub fn owned_trait(&const self) -> def_id {\n         self.items[OwnedTraitLangItem as uint].get()\n     }\n-    pub fn durable_trait(&const self) -> def_id {\n-        self.items[DurableTraitLangItem as uint].get()\n-    }\n \n     pub fn drop_trait(&const self) -> def_id {\n         self.items[DropTraitLangItem as uint].get()\n@@ -274,7 +269,6 @@ fn LanguageItemCollector(crate: @crate,\n     item_refs.insert(@~\"const\", ConstTraitLangItem as uint);\n     item_refs.insert(@~\"copy\", CopyTraitLangItem as uint);\n     item_refs.insert(@~\"owned\", OwnedTraitLangItem as uint);\n-    item_refs.insert(@~\"durable\", DurableTraitLangItem as uint);\n \n     item_refs.insert(@~\"drop\", DropTraitLangItem as uint);\n "}, {"sha": "290bc9ab33d449b1a59a3bf9dbc34105d3db0ffc", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df7ed15b788508f711889eef1e3825352a46354/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=3df7ed15b788508f711889eef1e3825352a46354", "patch": "@@ -1178,8 +1178,6 @@ pub fn ty_generics(ccx: &CrateCtxt,\n                         ~[ty::bound_copy]\n                     } else if trait_ref.def_id == li.const_trait() {\n                         ~[ty::bound_const]\n-                    } else if trait_ref.def_id == li.durable_trait() {\n-                        ~[ty::bound_durable]\n                     } else {\n                         // Must be a user-defined trait\n                         ~[ty::bound_trait(trait_ref)]"}]}