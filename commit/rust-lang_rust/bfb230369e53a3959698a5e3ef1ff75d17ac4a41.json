{"sha": "bfb230369e53a3959698a5e3ef1ff75d17ac4a41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYjIzMDM2OWU1M2EzOTU5Njk4YTVlM2VmMWZmNzVkMTdhYzRhNDE=", "commit": {"author": {"name": "Vincent Dal Maso", "email": "vincent.dalmaso.ext@delair-tech.com", "date": "2019-05-16T12:13:57Z"}, "committer": {"name": "Vincent Dal Maso", "email": "vincent.dalmaso.ext@delair-tech.com", "date": "2019-05-16T12:13:57Z"}, "message": "Add test for multiple same arms lints\n\nChanges:\n- Add a test to match multiple arms in the same match statement", "tree": {"sha": "21f1cf56ac2c05abde98d8379a38d3aa7a58a767", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21f1cf56ac2c05abde98d8379a38d3aa7a58a767"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfb230369e53a3959698a5e3ef1ff75d17ac4a41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb230369e53a3959698a5e3ef1ff75d17ac4a41", "html_url": "https://github.com/rust-lang/rust/commit/bfb230369e53a3959698a5e3ef1ff75d17ac4a41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfb230369e53a3959698a5e3ef1ff75d17ac4a41/comments", "author": null, "committer": null, "parents": [{"sha": "902726c38d79d4e63567f2bbd5ddff475c2f1b2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/902726c38d79d4e63567f2bbd5ddff475c2f1b2b", "html_url": "https://github.com/rust-lang/rust/commit/902726c38d79d4e63567f2bbd5ddff475c2f1b2b"}], "stats": {"total": 84, "additions": 44, "deletions": 40}, "files": [{"sha": "5c65ea0a10cd011d3706d45eab7a871fa1503b74", "filename": "tests/ui/match_same_arms.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bfb230369e53a3959698a5e3ef1ff75d17ac4a41/tests%2Fui%2Fmatch_same_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb230369e53a3959698a5e3ef1ff75d17ac4a41/tests%2Fui%2Fmatch_same_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_same_arms.rs?ref=bfb230369e53a3959698a5e3ef1ff75d17ac4a41", "patch": "@@ -108,6 +108,14 @@ fn match_same_arms() {\n         (None, Some(a)) => bar(a), // bindings have different types\n         _ => (),\n     }\n+\n+    let _ = match 42 {\n+        42 => 1,\n+        51 => 1, //~ ERROR match arms have same body\n+        41 => 2,\n+        52 => 2, //~ ERROR match arms have same body\n+        _ => 0,\n+    };\n }\n \n fn main() {}"}, {"sha": "47440af2485ee2d4feed1432d1c0fb9442264dbb", "filename": "tests/ui/match_same_arms.stderr", "status": "modified", "additions": 36, "deletions": 40, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/bfb230369e53a3959698a5e3ef1ff75d17ac4a41/tests%2Fui%2Fmatch_same_arms.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bfb230369e53a3959698a5e3ef1ff75d17ac4a41/tests%2Fui%2Fmatch_same_arms.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_same_arms.stderr?ref=bfb230369e53a3959698a5e3ef1ff75d17ac4a41", "patch": "@@ -1,48 +1,10 @@\n-error: this `match` has identical arm bodies\n-  --> $DIR/match_same_arms.rs:37:14\n-   |\n-LL |           _ => {\n-   |  ______________^\n-LL | |             //~ ERROR match arms have same body\n-LL | |             foo();\n-LL | |             let mut a = 42 + [23].len() as i32;\n-...  |\n-LL | |             a\n-LL | |         },\n-   | |_________^\n-   |\n-   = note: `-D clippy::match-same-arms` implied by `-D warnings`\n-note: same as this\n-  --> $DIR/match_same_arms.rs:28:15\n-   |\n-LL |           42 => {\n-   |  _______________^\n-LL | |             foo();\n-LL | |             let mut a = 42 + [23].len() as i32;\n-LL | |             if true {\n-...  |\n-LL | |             a\n-LL | |         },\n-   | |_________^\n-note: `42` has the same arm body as the `_` wildcard, consider removing it`\n-  --> $DIR/match_same_arms.rs:28:15\n-   |\n-LL |           42 => {\n-   |  _______________^\n-LL | |             foo();\n-LL | |             let mut a = 42 + [23].len() as i32;\n-LL | |             if true {\n-...  |\n-LL | |             a\n-LL | |         },\n-   | |_________^\n-\n error: this `match` has identical arm bodies\n   --> $DIR/match_same_arms.rs:52:14\n    |\n LL |         _ => 0, //~ ERROR match arms have same body\n    |              ^\n    |\n+   = note: `-D clippy::match-same-arms` implied by `-D warnings`\n note: same as this\n   --> $DIR/match_same_arms.rs:50:19\n    |\n@@ -139,5 +101,39 @@ note: consider refactoring into `(1, .., 3) | (.., 3)`\n LL |         (1, .., 3) => 42,\n    |                       ^^\n \n-error: aborting due to 7 previous errors\n+error: this `match` has identical arm bodies\n+  --> $DIR/match_same_arms.rs:114:15\n+   |\n+LL |         51 => 1, //~ ERROR match arms have same body\n+   |               ^\n+   |\n+note: same as this\n+  --> $DIR/match_same_arms.rs:113:15\n+   |\n+LL |         42 => 1,\n+   |               ^\n+note: consider refactoring into `42 | 51`\n+  --> $DIR/match_same_arms.rs:113:15\n+   |\n+LL |         42 => 1,\n+   |               ^\n+\n+error: this `match` has identical arm bodies\n+  --> $DIR/match_same_arms.rs:116:15\n+   |\n+LL |         52 => 2, //~ ERROR match arms have same body\n+   |               ^\n+   |\n+note: same as this\n+  --> $DIR/match_same_arms.rs:115:15\n+   |\n+LL |         41 => 2,\n+   |               ^\n+note: consider refactoring into `41 | 52`\n+  --> $DIR/match_same_arms.rs:115:15\n+   |\n+LL |         41 => 2,\n+   |               ^\n+\n+error: aborting due to 8 previous errors\n "}]}