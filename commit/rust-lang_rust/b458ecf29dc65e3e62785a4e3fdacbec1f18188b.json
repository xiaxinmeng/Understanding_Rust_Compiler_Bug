{"sha": "b458ecf29dc65e3e62785a4e3fdacbec1f18188b", "node_id": "C_kwDOAAsO6NoAKGI0NThlY2YyOWRjNjVlM2U2Mjc4NWE0ZTNmZGFjYmVjMWYxODE4OGI", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-01T21:46:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-01T21:46:51Z"}, "message": "Rollup merge of #89440 - chrismit3s:issue-84488-fix, r=steveklabnik\n\nClarify a sentence in the documentation of Vec (#84488)\n\n I literally changed a single word, but this should clear up the confusion of #84488. Can probably be `rollup`ed :) (My first PR, hope I'm doing this right)\n\nfixes #84488\n\nr? `@steveklabnik`", "tree": {"sha": "675c2adc6f4cfc1e87693f43721503191de022c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/675c2adc6f4cfc1e87693f43721503191de022c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b458ecf29dc65e3e62785a4e3fdacbec1f18188b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhV4HLCRBK7hj4Ov3rIwAA/FwIALNW8hHfNVo6bIKNRsH5wXAB\nS3KHRB2VGGQRrMzS8yIpE2uQskR6KyHfQ17ERUW9QrqUhIe+o0jNyhrMvOH6Nzsx\nEwzTRkqXWqklo4ZyICwSkrukWVAQ2BuiVmYRIcpnMd+PSMmqdZ7rOtC47Lya/8F6\nG+dNL3SbTDxwOCq2C8naSc1N96pOON9o/6Y/UchYB7oTTc7cnutWpQISvVg4/yqE\nlwiC0n5ZsG5zWe6Wi8vNjZ4RZXvssU7A57UB2pMPciRe/OweS5R1m5hDXwSCXsOC\njt1m+IVqypaLCP9nTx9GS1tN15PKP0+HC/+HPOUM/74BR4CuHHnOJX2kt9XkXAc=\n=ghQ1\n-----END PGP SIGNATURE-----\n", "payload": "tree 675c2adc6f4cfc1e87693f43721503191de022c8\nparent 04ba15392b6fefbb6121d7bab9a64a90437ce6a8\nparent 1a796441f5d4578923cb5dd6859dacc8c7b823d0\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633124811 -0700\ncommitter GitHub <noreply@github.com> 1633124811 -0700\n\nRollup merge of #89440 - chrismit3s:issue-84488-fix, r=steveklabnik\n\nClarify a sentence in the documentation of Vec (#84488)\n\n I literally changed a single word, but this should clear up the confusion of #84488. Can probably be `rollup`ed :) (My first PR, hope I'm doing this right)\n\nfixes #84488\n\nr? `@steveklabnik`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b458ecf29dc65e3e62785a4e3fdacbec1f18188b", "html_url": "https://github.com/rust-lang/rust/commit/b458ecf29dc65e3e62785a4e3fdacbec1f18188b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b458ecf29dc65e3e62785a4e3fdacbec1f18188b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04ba15392b6fefbb6121d7bab9a64a90437ce6a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/04ba15392b6fefbb6121d7bab9a64a90437ce6a8", "html_url": "https://github.com/rust-lang/rust/commit/04ba15392b6fefbb6121d7bab9a64a90437ce6a8"}, {"sha": "1a796441f5d4578923cb5dd6859dacc8c7b823d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a796441f5d4578923cb5dd6859dacc8c7b823d0", "html_url": "https://github.com/rust-lang/rust/commit/1a796441f5d4578923cb5dd6859dacc8c7b823d0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "92b6aaadf587c881f192277870346220189a1849", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b458ecf29dc65e3e62785a4e3fdacbec1f18188b/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b458ecf29dc65e3e62785a4e3fdacbec1f18188b/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=b458ecf29dc65e3e62785a4e3fdacbec1f18188b", "patch": "@@ -369,7 +369,7 @@ mod spec_extend;\n /// scratch space that it may use however it wants. It will generally just do\n /// whatever is most efficient or otherwise easy to implement. Do not rely on\n /// removed data to be erased for security purposes. Even if you drop a `Vec`, its\n-/// buffer may simply be reused by another `Vec`. Even if you zero a `Vec`'s memory\n+/// buffer may simply be reused by another allocation. Even if you zero a `Vec`'s memory\n /// first, that might not actually happen because the optimizer does not consider\n /// this a side-effect that must be preserved. There is one case which we will\n /// not break, however: using `unsafe` code to write to the excess capacity,"}]}