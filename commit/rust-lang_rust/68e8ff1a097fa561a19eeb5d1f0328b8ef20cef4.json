{"sha": "68e8ff1a097fa561a19eeb5d1f0328b8ef20cef4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZThmZjFhMDk3ZmE1NjFhMTllZWI1ZDFmMDMyOGI4ZWYyMGNlZjQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-07T17:04:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-07T17:04:58Z"}, "message": "flush stdout/stderr to make sure it appears on the screen", "tree": {"sha": "52b43f74c8af6de877faf4ebdb0908f9d3666f9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52b43f74c8af6de877faf4ebdb0908f9d3666f9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68e8ff1a097fa561a19eeb5d1f0328b8ef20cef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68e8ff1a097fa561a19eeb5d1f0328b8ef20cef4", "html_url": "https://github.com/rust-lang/rust/commit/68e8ff1a097fa561a19eeb5d1f0328b8ef20cef4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68e8ff1a097fa561a19eeb5d1f0328b8ef20cef4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1b9387c336d403a7dc0510f7aaa505123ab3cf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b9387c336d403a7dc0510f7aaa505123ab3cf6", "html_url": "https://github.com/rust-lang/rust/commit/b1b9387c336d403a7dc0510f7aaa505123ab3cf6"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "56cb38645090895cc281b67b4a18c3c4438eca0e", "filename": "src/fn_call.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/68e8ff1a097fa561a19eeb5d1f0328b8ef20cef4/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68e8ff1a097fa561a19eeb5d1f0328b8ef20cef4/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=68e8ff1a097fa561a19eeb5d1f0328b8ef20cef4", "patch": "@@ -390,10 +390,15 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n                     use std::io::{self, Write};\n \n                     let buf_cont = this.memory().read_bytes(buf, Size::from_bytes(n))?;\n+                    // We need to flush to make sure this actually appears on the screen\n                     let res = if fd == 1 {\n-                        io::stdout().write(buf_cont)\n+                        let res = io::stdout().write(buf_cont);\n+                        io::stdout().flush().unwrap();\n+                        res\n                     } else {\n-                        io::stderr().write(buf_cont)\n+                        let res = io::stderr().write(buf_cont);\n+                        io::stderr().flush().unwrap();\n+                        res\n                     };\n                     match res {\n                         Ok(n) => n as i64,"}]}