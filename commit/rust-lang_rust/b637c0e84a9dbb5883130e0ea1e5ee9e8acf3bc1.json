{"sha": "b637c0e84a9dbb5883130e0ea1e5ee9e8acf3bc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MzdjMGU4NGE5ZGJiNTg4MzEzMGUwZWExZTVlZTllOGFjZjNiYzE=", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-02-10T19:47:26Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-02-10T22:28:31Z"}, "message": "Add initial debug fmt for Backtrace", "tree": {"sha": "d0d1cb822aa4746d593229c2d1154144f695b58c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0d1cb822aa4746d593229c2d1154144f695b58c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b637c0e84a9dbb5883130e0ea1e5ee9e8acf3bc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b637c0e84a9dbb5883130e0ea1e5ee9e8acf3bc1", "html_url": "https://github.com/rust-lang/rust/commit/b637c0e84a9dbb5883130e0ea1e5ee9e8acf3bc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b637c0e84a9dbb5883130e0ea1e5ee9e8acf3bc1/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6ec0d125eba4074122b187032474b4174fb9d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6ec0d125eba4074122b187032474b4174fb9d31", "html_url": "https://github.com/rust-lang/rust/commit/e6ec0d125eba4074122b187032474b4174fb9d31"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "6b4ae77cec77d66dafafcb6d3b659625f1f8a96b", "filename": "src/libstd/backtrace.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b637c0e84a9dbb5883130e0ea1e5ee9e8acf3bc1/src%2Flibstd%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b637c0e84a9dbb5883130e0ea1e5ee9e8acf3bc1/src%2Flibstd%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbacktrace.rs?ref=b637c0e84a9dbb5883130e0ea1e5ee9e8acf3bc1", "patch": "@@ -106,6 +106,7 @@ use backtrace_rs as backtrace;\n /// previous point in time. In some instances the `Backtrace` type may\n /// internally be empty due to configuration. For more information see\n /// `Backtrace::capture`.\n+#[derive(Debug)]\n pub struct Backtrace {\n     inner: Inner,\n }\n@@ -126,12 +127,14 @@ pub enum BacktraceStatus {\n     Captured,\n }\n \n+#[derive(Debug)]\n enum Inner {\n     Unsupported,\n     Disabled,\n     Captured(Mutex<Capture>),\n }\n \n+#[derive(Debug)]\n struct Capture {\n     actual_start: usize,\n     resolved: bool,\n@@ -143,11 +146,13 @@ fn _assert_send_sync() {\n     _assert::<Backtrace>();\n }\n \n+#[derive(Debug)]\n struct BacktraceFrame {\n     frame: backtrace::Frame,\n     symbols: Vec<BacktraceSymbol>,\n }\n \n+#[derive(Debug)]\n struct BacktraceSymbol {\n     name: Option<Vec<u8>>,\n     filename: Option<BytesOrWide>,\n@@ -159,6 +164,20 @@ enum BytesOrWide {\n     Wide(Vec<u16>),\n }\n \n+impl fmt::Debug for BytesOrWide {\n+    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        output_filename(\n+            fmt,\n+            match self {\n+                BytesOrWide::Bytes(w) => BytesOrWideString::Bytes(w),\n+                BytesOrWide::Wide(w) => BytesOrWideString::Wide(w),\n+            },\n+            backtrace::PrintFmt::Full,\n+            crate::env::current_dir().as_ref().ok(),\n+        )\n+    }\n+}\n+\n impl Backtrace {\n     /// Returns whether backtrace captures are enabled through environment\n     /// variables.\n@@ -267,12 +286,6 @@ impl Backtrace {\n }\n \n impl fmt::Display for Backtrace {\n-    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        fmt::Debug::fmt(self, fmt)\n-    }\n-}\n-\n-impl fmt::Debug for Backtrace {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let mut capture = match &self.inner {\n             Inner::Unsupported => return fmt.write_str(\"unsupported backtrace\"),"}]}