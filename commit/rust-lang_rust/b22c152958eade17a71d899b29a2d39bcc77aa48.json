{"sha": "b22c152958eade17a71d899b29a2d39bcc77aa48", "node_id": "C_kwDOAAsO6NoAKGIyMmMxNTI5NThlYWRlMTdhNzFkODk5YjI5YTJkMzliY2M3N2FhNDg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-11T11:17:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-11T11:17:22Z"}, "message": "Auto merge of #106458 - albertlarsan68:move-tests, r=jyn514\n\nMove src/test to the root\n\nSee MCP at rust-lang/compiler-team#573\n\nThere may be more changes needed.\n\nThe first commit is just the move of the files:\nYou can check that the first commit did not do anything else than renames by running\n```\ngit diff --diff-filter=r -M100% <rust-lang remote>/master <first commit hash>\n```\nThe output should be empty, because the filter excludes renames, and the match threshold for qualifying a rename is 100%.\n\nThe second one is mostly a \"find and replace\" of `src/test` to `tests` and whatever is needed to make CI pass.\n\nWhat is left to do:\n---\n\n- [x] Move directory\n- [ ] Change references to `src/test`\n    - [x] Change references in-tree\n    - [ ] Change references in submodules / out-of-tree docs\n- [x] Make CI pass:\n    - [x] Fix tidy\n    - [x] Fix tests\n    - [x] Bless tests if needed (shouldn't normally)\n- [ ] Merge it !", "tree": {"sha": "ec6da75dc598a0a4086c0cc032c86d7241be1bc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec6da75dc598a0a4086c0cc032c86d7241be1bc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b22c152958eade17a71d899b29a2d39bcc77aa48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b22c152958eade17a71d899b29a2d39bcc77aa48", "html_url": "https://github.com/rust-lang/rust/commit/b22c152958eade17a71d899b29a2d39bcc77aa48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b22c152958eade17a71d899b29a2d39bcc77aa48/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ecaad85f61375b18e1667b51a3ef350121d2ca0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ecaad85f61375b18e1667b51a3ef350121d2ca0", "html_url": "https://github.com/rust-lang/rust/commit/8ecaad85f61375b18e1667b51a3ef350121d2ca0"}, {"sha": "40ba0e84d53f605ccf01836e9c2d27892728ae81", "url": "https://api.github.com/repos/rust-lang/rust/commits/40ba0e84d53f605ccf01836e9c2d27892728ae81", "html_url": "https://github.com/rust-lang/rust/commit/40ba0e84d53f605ccf01836e9c2d27892728ae81"}], "stats": {"total": 654, "additions": 329, "deletions": 325}, "files": [{"sha": "82048f800d0e889e3318e59f48043e6e515f529f", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -342,7 +342,7 @@ jobs:\n             os: macos-12-xl\n           - name: x86_64-apple-1\n             env:\n-              SCRIPT: \"./x.py --stage 2 test --exclude src/test/ui --exclude src/test/rustdoc --exclude src/test/run-make-fulldeps\"\n+              SCRIPT: \"./x.py --stage 2 test --exclude tests/ui --exclude tests/rustdoc --exclude tests/run-make-fulldeps\"\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.8\n@@ -353,7 +353,7 @@ jobs:\n             os: macos-12-xl\n           - name: x86_64-apple-2\n             env:\n-              SCRIPT: \"./x.py --stage 2 test src/test/ui src/test/rustdoc src/test/run-make-fulldeps\"\n+              SCRIPT: \"./x.py --stage 2 test tests/ui tests/rustdoc tests/run-make-fulldeps\"\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.8"}, {"sha": "e5ca3e503130f63c8fb35475b0658dd4316a31b5", "filename": ".gitignore", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -26,7 +26,7 @@ Session.vim\n .valgrindrc\n .cargo\n # Included because it is part of the test case\n-!/src/test/run-make/thumb-none-qemu/example/.cargo\n+!/tests/run-make/thumb-none-qemu/example/.cargo\n \n ## Configuration\n /config.toml\n@@ -74,6 +74,6 @@ package-lock.json\n package.json\n \n ## Rustdoc GUI tests\n-src/test/rustdoc-gui/src/**.lock\n+tests/rustdoc-gui/src/**.lock\n \n # Before adding new lines, see the comment at the top."}, {"sha": "15cbb2659c9b335ea3f1bb9b77af86f3b74bd8fc", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -51,7 +51,7 @@ exclude = [\n   \"compiler/rustc_codegen_cranelift\",\n   \"compiler/rustc_codegen_gcc\",\n   \"src/bootstrap\",\n-  \"src/test/rustdoc-gui\",\n+  \"tests/rustdoc-gui\",\n   # HACK(eddyb) This hardcodes the fact that our CI uses `/checkout/obj`.\n   \"obj\",\n   # The `x` binary is a thin wrapper that calls `x.py`, which initializes"}, {"sha": "14f082be9ba8c0293797f7aebab975c423085cab", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -689,8 +689,8 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         // call (like the identity function), as otherwise type and lifetime\n         // inference have a hard time figuring things out.\n         // Without this, we would get:\n-        // E0720 in src/test/ui/impl-trait/in-trait/default-body-with-rpit.rs\n-        // E0700 in src/test/ui/self/self_lifetime-async.rs\n+        // E0720 in tests/ui/impl-trait/in-trait/default-body-with-rpit.rs\n+        // E0700 in tests/ui/self/self_lifetime-async.rs\n \n         // `future::identity_future`:\n         let identity_future ="}, {"sha": "055b281bc2e70fb587aa5a48b2b09b8f4e70080f", "filename": "compiler/rustc_borrowck/src/consumers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_borrowck%2Fsrc%2Fconsumers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_borrowck%2Fsrc%2Fconsumers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fconsumers.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -25,7 +25,7 @@ pub use super::{\n ///     can, for example, happen when requesting a body of a `const` function\n ///     because they are evaluated during typechecking. The panic can be avoided\n ///     by overriding the `mir_borrowck` query. You can find a complete example\n-///     that shows how to do this at `src/test/run-make/obtain-borrowck/`.\n+///     that shows how to do this at `tests/run-make/obtain-borrowck/`.\n ///\n /// *   Polonius is highly unstable, so expect regular changes in its signature or other details.\n pub fn get_body_with_borrowck_facts("}, {"sha": "6658ee89ad6f1bd0c86c011afc14e83be2413d0b", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1737,7 +1737,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n                 /// We check that there's a single level of block nesting to ensure always correct\n                 /// suggestions. If we don't, then we only provide a free-form message to avoid\n-                /// misleading users in cases like `src/test/ui/nll/borrowed-temporary-error.rs`.\n+                /// misleading users in cases like `tests/ui/nll/borrowed-temporary-error.rs`.\n                 /// We could expand the analysis to suggest hoising all of the relevant parts of\n                 /// the users' code to make the code compile, but that could be too much.\n                 struct NestedStatementVisitor {"}, {"sha": "767f9fe39c68b7162092c6b53e2cb00383373a84", "filename": "compiler/rustc_borrowck/src/region_infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -262,7 +262,7 @@ impl<'tcx> InferCtxtExt<'tcx> for InferCtxt<'tcx> {\n             return self.tcx.ty_error();\n         }\n \n-        // Only check this for TAIT. RPIT already supports `src/test/ui/impl-trait/nested-return-type2.rs`\n+        // Only check this for TAIT. RPIT already supports `tests/ui/impl-trait/nested-return-type2.rs`\n         // on stable and we'd break that.\n         let OpaqueTyOrigin::TyAlias = origin else {\n             return definition_ty;"}, {"sha": "12ecb8cf4e17d6473d36610183c6e5224d196db9", "filename": "compiler/rustc_codegen_cranelift/scripts/test_rustc_tests.sh", "status": "modified", "additions": 66, "deletions": 66, "changes": 132, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_codegen_cranelift%2Fscripts%2Ftest_rustc_tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_codegen_cranelift%2Fscripts%2Ftest_rustc_tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fscripts%2Ftest_rustc_tests.sh?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -10,118 +10,118 @@ pushd rust\n \n command -v rg >/dev/null 2>&1 || cargo install ripgrep\n \n-rm -r src/test/ui/{extern/,unsized-locals/,lto/,linkage*} || true\n-for test in $(rg --files-with-matches \"lto|// needs-asm-support|// needs-unwind\" src/test/{ui,incremental}); do\n+rm -r tests/ui/{extern/,unsized-locals/,lto/,linkage*} || true\n+for test in $(rg --files-with-matches \"lto|// needs-asm-support|// needs-unwind\" tests/{ui,incremental}); do\n   rm $test\n done\n \n-for test in $(rg -i --files-with-matches \"//(\\[\\w+\\])?~[^\\|]*\\s*ERR|// error-pattern:|// build-fail|// run-fail|-Cllvm-args\" src/test/ui); do\n+for test in $(rg -i --files-with-matches \"//(\\[\\w+\\])?~[^\\|]*\\s*ERR|// error-pattern:|// build-fail|// run-fail|-Cllvm-args\" tests/ui); do\n   rm $test\n done\n \n-git checkout -- src/test/ui/issues/auxiliary/issue-3136-a.rs # contains //~ERROR, but shouldn't be removed\n-git checkout -- src/test/ui/proc-macro/pretty-print-hack/\n+git checkout -- tests/ui/issues/auxiliary/issue-3136-a.rs # contains //~ERROR, but shouldn't be removed\n+git checkout -- tests/ui/proc-macro/pretty-print-hack/\n \n # missing features\n # ================\n \n # requires stack unwinding\n-rm src/test/incremental/change_crate_dep_kind.rs\n-rm src/test/incremental/issue-80691-bad-eval-cache.rs # -Cpanic=abort causes abort instead of exit(101)\n+rm tests/incremental/change_crate_dep_kind.rs\n+rm tests/incremental/issue-80691-bad-eval-cache.rs # -Cpanic=abort causes abort instead of exit(101)\n \n # requires compiling with -Cpanic=unwind\n-rm -r src/test/ui/macros/rfc-2011-nicer-assert-messages/\n-rm -r src/test/run-make/test-benches\n+rm -r tests/ui/macros/rfc-2011-nicer-assert-messages/\n+rm -r tests/run-make/test-benches\n \n # vendor intrinsics\n-rm src/test/ui/sse2.rs # cpuid not supported, so sse2 not detected\n-rm src/test/ui/intrinsics/const-eval-select-x86_64.rs # requires x86_64 vendor intrinsics\n-rm src/test/ui/simd/array-type.rs # \"Index argument for `simd_insert` is not a constant\"\n-rm src/test/ui/simd/intrinsic/generic-bitmask-pass.rs # simd_bitmask unimplemented\n-rm src/test/ui/simd/intrinsic/generic-as.rs # simd_as unimplemented\n-rm src/test/ui/simd/intrinsic/generic-arithmetic-saturating-pass.rs # simd_saturating_add unimplemented\n-rm src/test/ui/simd/intrinsic/float-math-pass.rs # simd_fcos unimplemented\n-rm src/test/ui/simd/intrinsic/generic-gather-pass.rs # simd_gather unimplemented\n-rm src/test/ui/simd/intrinsic/generic-select-pass.rs # simd_select_bitmask unimplemented\n-rm src/test/ui/simd/issue-85915-simd-ptrs.rs # simd_gather unimplemented\n-rm src/test/ui/simd/issue-89193.rs # simd_gather unimplemented\n-rm src/test/ui/simd/simd-bitmask.rs # simd_bitmask unimplemented\n+rm tests/ui/sse2.rs # cpuid not supported, so sse2 not detected\n+rm tests/ui/intrinsics/const-eval-select-x86_64.rs # requires x86_64 vendor intrinsics\n+rm tests/ui/simd/array-type.rs # \"Index argument for `simd_insert` is not a constant\"\n+rm tests/ui/simd/intrinsic/generic-bitmask-pass.rs # simd_bitmask unimplemented\n+rm tests/ui/simd/intrinsic/generic-as.rs # simd_as unimplemented\n+rm tests/ui/simd/intrinsic/generic-arithmetic-saturating-pass.rs # simd_saturating_add unimplemented\n+rm tests/ui/simd/intrinsic/float-math-pass.rs # simd_fcos unimplemented\n+rm tests/ui/simd/intrinsic/generic-gather-pass.rs # simd_gather unimplemented\n+rm tests/ui/simd/intrinsic/generic-select-pass.rs # simd_select_bitmask unimplemented\n+rm tests/ui/simd/issue-85915-simd-ptrs.rs # simd_gather unimplemented\n+rm tests/ui/simd/issue-89193.rs # simd_gather unimplemented\n+rm tests/ui/simd/simd-bitmask.rs # simd_bitmask unimplemented\n \n # exotic linkages\n-rm src/test/ui/issues/issue-33992.rs # unsupported linkages\n-rm src/test/incremental/hashes/function_interfaces.rs # same\n-rm src/test/incremental/hashes/statics.rs # same\n+rm tests/ui/issues/issue-33992.rs # unsupported linkages\n+rm tests/incremental/hashes/function_interfaces.rs # same\n+rm tests/incremental/hashes/statics.rs # same\n \n # variadic arguments\n-rm src/test/ui/abi/mir/mir_codegen_calls_variadic.rs # requires float varargs\n-rm src/test/ui/abi/variadic-ffi.rs # requires callee side vararg support\n+rm tests/ui/abi/mir/mir_codegen_calls_variadic.rs # requires float varargs\n+rm tests/ui/abi/variadic-ffi.rs # requires callee side vararg support\n \n # unsized locals\n-rm -r src/test/run-pass-valgrind/unsized-locals\n+rm -r tests/run-pass-valgrind/unsized-locals\n \n # misc unimplemented things\n-rm src/test/ui/intrinsics/intrinsic-nearby.rs # unimplemented nearbyintf32 and nearbyintf64 intrinsics\n-rm src/test/ui/target-feature/missing-plusminus.rs # error not implemented\n-rm src/test/ui/fn/dyn-fn-alignment.rs # wants a 256 byte alignment\n-rm -r src/test/run-make/emit-named-files # requires full --emit support\n-rm src/test/ui/abi/stack-probes.rs # stack probes not yet implemented\n-rm src/test/ui/simd/intrinsic/ptr-cast.rs # simd_expose_addr intrinsic unimplemented\n-rm -r src/test/run-make/repr128-dwarf # debuginfo test\n-rm src/test/codegen-units/item-collection/asm-sym.rs # requires support for sym in asm!()\n+rm tests/ui/intrinsics/intrinsic-nearby.rs # unimplemented nearbyintf32 and nearbyintf64 intrinsics\n+rm tests/ui/target-feature/missing-plusminus.rs # error not implemented\n+rm tests/ui/fn/dyn-fn-alignment.rs # wants a 256 byte alignment\n+rm -r tests/run-make/emit-named-files # requires full --emit support\n+rm tests/ui/abi/stack-probes.rs # stack probes not yet implemented\n+rm tests/ui/simd/intrinsic/ptr-cast.rs # simd_expose_addr intrinsic unimplemented\n+rm -r tests/run-make/repr128-dwarf # debuginfo test\n+rm tests/codegen-units/item-collection/asm-sym.rs # requires support for sym in asm!()\n \n # optimization tests\n # ==================\n-rm src/test/ui/codegen/issue-28950.rs # depends on stack size optimizations\n-rm src/test/ui/codegen/init-large-type.rs # same\n-rm src/test/ui/issues/issue-40883.rs # same\n-rm -r src/test/run-make/fmt-write-bloat/ # tests an optimization\n+rm tests/ui/codegen/issue-28950.rs # depends on stack size optimizations\n+rm tests/ui/codegen/init-large-type.rs # same\n+rm tests/ui/issues/issue-40883.rs # same\n+rm -r tests/run-make/fmt-write-bloat/ # tests an optimization\n \n # backend specific tests\n # ======================\n-rm src/test/incremental/thinlto/cgu_invalidated_when_import_{added,removed}.rs # requires LLVM\n-rm src/test/ui/abi/stack-protector.rs # requires stack protector support\n+rm tests/incremental/thinlto/cgu_invalidated_when_import_{added,removed}.rs # requires LLVM\n+rm tests/ui/abi/stack-protector.rs # requires stack protector support\n \n # giving different but possibly correct results\n # =============================================\n-rm src/test/ui/mir/mir_misc_casts.rs # depends on deduplication of constants\n-rm src/test/ui/mir/mir_raw_fat_ptr.rs # same\n-rm src/test/ui/consts/issue-33537.rs # same\n-rm src/test/ui/layout/valid_range_oob.rs # different ICE message\n+rm tests/ui/mir/mir_misc_casts.rs # depends on deduplication of constants\n+rm tests/ui/mir/mir_raw_fat_ptr.rs # same\n+rm tests/ui/consts/issue-33537.rs # same\n+rm tests/ui/layout/valid_range_oob.rs # different ICE message\n \n # doesn't work due to the way the rustc test suite is invoked.\n # should work when using ./x.py test the way it is intended\n # ============================================================\n-rm -r src/test/run-make/emit-shared-files # requires the rustdoc executable in dist/bin/\n-rm -r src/test/run-make/unstable-flag-required # same\n-rm -r src/test/run-make/rustdoc-* # same\n-rm -r src/test/run-make/issue-88756-default-output # same\n-rm -r src/test/run-make/remap-path-prefix-dwarf # requires llvm-dwarfdump\n-rm -r src/test/ui/consts/missing_span_in_backtrace.rs # expects sysroot source to be elsewhere\n+rm -r tests/run-make/emit-shared-files # requires the rustdoc executable in dist/bin/\n+rm -r tests/run-make/unstable-flag-required # same\n+rm -r tests/run-make/rustdoc-* # same\n+rm -r tests/run-make/issue-88756-default-output # same\n+rm -r tests/run-make/remap-path-prefix-dwarf # requires llvm-dwarfdump\n+rm -r tests/ui/consts/missing_span_in_backtrace.rs # expects sysroot source to be elsewhere\n \n # genuine bugs\n # ============\n-rm src/test/incremental/spike-neg1.rs # errors out for some reason\n-rm src/test/incremental/spike-neg2.rs # same\n-rm src/test/ui/issues/issue-74564-if-expr-stack-overflow.rs # gives a stackoverflow before the backend runs\n-rm src/test/ui/mir/ssa-analysis-regression-50041.rs # produces ICE\n-rm src/test/ui/type-alias-impl-trait/assoc-projection-ice.rs # produces ICE\n+rm tests/incremental/spike-neg1.rs # errors out for some reason\n+rm tests/incremental/spike-neg2.rs # same\n+rm tests/ui/issues/issue-74564-if-expr-stack-overflow.rs # gives a stackoverflow before the backend runs\n+rm tests/ui/mir/ssa-analysis-regression-50041.rs # produces ICE\n+rm tests/ui/type-alias-impl-trait/assoc-projection-ice.rs # produces ICE\n \n-rm src/test/ui/simd/intrinsic/generic-reduction-pass.rs # simd_reduce_add_unordered doesn't accept an accumulator for integer vectors\n+rm tests/ui/simd/intrinsic/generic-reduction-pass.rs # simd_reduce_add_unordered doesn't accept an accumulator for integer vectors\n \n-rm src/test/ui/runtime/out-of-stack.rs # SIGSEGV instead of SIGABRT for some reason (#1301)\n+rm tests/ui/runtime/out-of-stack.rs # SIGSEGV instead of SIGABRT for some reason (#1301)\n \n # bugs in the test suite\n # ======================\n-rm src/test/ui/backtrace.rs # TODO warning\n-rm src/test/ui/simple_global_asm.rs # TODO add needs-asm-support\n-rm src/test/ui/test-attrs/test-type.rs # TODO panic message on stderr. correct stdout\n+rm tests/ui/backtrace.rs # TODO warning\n+rm tests/ui/simple_global_asm.rs # TODO add needs-asm-support\n+rm tests/ui/test-attrs/test-type.rs # TODO panic message on stderr. correct stdout\n # not sure if this is actually a bug in the test suite, but the symbol list shows the function without leading _ for some reason\n-rm -r src/test/run-make/native-link-modifier-bundle\n-rm src/test/ui/process/nofile-limit.rs # TODO some AArch64 linking issue\n-rm src/test/ui/dyn-star/dispatch-on-pin-mut.rs # TODO failed assertion in vtable::get_ptr_and_method_ref\n+rm -r tests/run-make/native-link-modifier-bundle\n+rm tests/ui/process/nofile-limit.rs # TODO some AArch64 linking issue\n+rm tests/ui/dyn-star/dispatch-on-pin-mut.rs # TODO failed assertion in vtable::get_ptr_and_method_ref\n \n-rm src/test/ui/stdio-is-blocking.rs # really slow with unoptimized libstd\n+rm tests/ui/stdio-is-blocking.rs # really slow with unoptimized libstd\n \n echo \"[TEST] rustc test suite\"\n-RUST_TEST_NOCAPTURE=1 COMPILETEST_FORCE_STAGE0=1 ./x.py test --stage 0 src/test/{codegen-units,run-make,run-pass-valgrind,ui,incremental}\n+RUST_TEST_NOCAPTURE=1 COMPILETEST_FORCE_STAGE0=1 ./x.py test --stage 0 tests/{codegen-units,run-make,run-pass-valgrind,ui,incremental}\n popd"}, {"sha": "c5ffb763673d291c30391612140cec68cbc6bc34", "filename": "compiler/rustc_codegen_gcc/test.sh", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_codegen_gcc%2Ftest.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_codegen_gcc%2Ftest.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Ftest.sh?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -253,25 +253,25 @@ rustc = \"$HOME/.rustup/toolchains/$rust_toolchain-$TARGET_TRIPLE/bin/rustc\"\n EOF\n \n     rustc -V | cut -d' ' -f3 | tr -d '('\n-    git checkout $(rustc -V | cut -d' ' -f3 | tr -d '(') src/test\n+    git checkout $(rustc -V | cut -d' ' -f3 | tr -d '(') tests\n \n-    for test in $(rg -i --files-with-matches \"//(\\[\\w+\\])?~|// error-pattern:|// build-fail|// run-fail|-Cllvm-args\" src/test/ui); do\n+    for test in $(rg -i --files-with-matches \"//(\\[\\w+\\])?~|// error-pattern:|// build-fail|// run-fail|-Cllvm-args\" tests/ui); do\n       rm $test\n     done\n \n-    git checkout -- src/test/ui/issues/auxiliary/issue-3136-a.rs # contains //~ERROR, but shouldn't be removed\n+    git checkout -- tests/ui/issues/auxiliary/issue-3136-a.rs # contains //~ERROR, but shouldn't be removed\n \n-    rm -r src/test/ui/{abi*,extern/,panic-runtime/,panics/,unsized-locals/,proc-macro/,threads-sendsync/,thinlto/,borrowck/,test*,*lto*.rs} || true\n-    for test in $(rg --files-with-matches \"catch_unwind|should_panic|thread|lto\" src/test/ui); do\n+    rm -r tests/ui/{abi*,extern/,panic-runtime/,panics/,unsized-locals/,proc-macro/,threads-sendsync/,thinlto/,borrowck/,test*,*lto*.rs} || true\n+    for test in $(rg --files-with-matches \"catch_unwind|should_panic|thread|lto\" tests/ui); do\n       rm $test\n     done\n-    git checkout src/test/ui/type-alias-impl-trait/auxiliary/cross_crate_ice.rs\n-    git checkout src/test/ui/type-alias-impl-trait/auxiliary/cross_crate_ice2.rs\n+    git checkout tests/ui/type-alias-impl-trait/auxiliary/cross_crate_ice.rs\n+    git checkout tests/ui/type-alias-impl-trait/auxiliary/cross_crate_ice2.rs\n \n     RUSTC_ARGS=\"-Zpanic-abort-tests -Csymbol-mangling-version=v0 -Zcodegen-backend=\"$(pwd)\"/../target/\"$CHANNEL\"/librustc_codegen_gcc.\"$dylib_ext\" --sysroot \"$(pwd)\"/../build_sysroot/sysroot -Cpanic=abort\"\n \n     echo \"[TEST] rustc test suite\"\n-    COMPILETEST_FORCE_STAGE0=1 ./x.py test --run always --stage 0 src/test/ui/ --rustc-args \"$RUSTC_ARGS\"\n+    COMPILETEST_FORCE_STAGE0=1 ./x.py test --run always --stage 0 tests/ui/ --rustc-args \"$RUSTC_ARGS\"\n }\n \n function clean_ui_tests() {"}, {"sha": "cf4e875c91f0b57b12abcf2ad4dee083e10fbd77", "filename": "compiler/rustc_const_eval/src/transform/check_consts/post_drop_elaboration.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -95,7 +95,7 @@ impl<'tcx> Visitor<'tcx> for CheckLiveDrops<'_, 'tcx> {\n                 }\n \n                 // Drop elaboration is not precise enough to accept code like\n-                // `src/test/ui/consts/control-flow/drop-pass.rs`; e.g., when an `Option<Vec<T>>` is\n+                // `tests/ui/consts/control-flow/drop-pass.rs`; e.g., when an `Option<Vec<T>>` is\n                 // initialized with `None` and never changed, it still emits drop glue.\n                 // Hence we additionally check the qualifs here to allow more code to pass.\n                 if self.qualifs.needs_non_const_drop(self.ccx, dropped_place.local, location) {"}, {"sha": "5368dc0735bc1994e6e4135284ef9616dbb50820", "filename": "compiler/rustc_hir_analysis/src/astconv/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -267,7 +267,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 // segments, even though `trait_ref.path.segments` is of length `1`. Work\n                 // around that bug here, even though it should be fixed elsewhere.\n                 // This would otherwise cause an invalid suggestion. For an example, look at\n-                // `src/test/ui/issues/issue-28344.rs` where instead of the following:\n+                // `tests/ui/issues/issue-28344.rs` where instead of the following:\n                 //\n                 //   error[E0191]: the value of the associated type `Output`\n                 //                 (from trait `std::ops::BitXor`) must be specified"}, {"sha": "a0e086bc26103c408a21e31919749129b6366f7e", "filename": "compiler/rustc_hir_typeck/src/coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -13,7 +13,7 @@\n //! useful for freezing mut things (that is, when the expected type is &T\n //! but you have &mut T) and also for avoiding the linearity\n //! of mut things (when the expected is &mut T and you have &mut T). See\n-//! the various `src/test/ui/coerce/*.rs` tests for\n+//! the various `tests/ui/coerce/*.rs` tests for\n //! examples of where this is useful.\n //!\n //! ## Subtle note"}, {"sha": "6c128d0aa1a658ffa149a45c995d75d0c3b3c555", "filename": "compiler/rustc_hir_typeck/src/demand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fdemand.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1855,7 +1855,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let mut expectation = Some(expected_ty);\n         while let hir::ExprKind::MethodCall(_, rcvr, ..) = expr.kind {\n             // Getting to the root receiver and asserting it is a fn call let's us ignore cases in\n-            // `src/test/ui/methods/issues/issue-90315.stderr`.\n+            // `tests/ui/methods/issues/issue-90315.stderr`.\n             expr = rcvr;\n             // If we have more than one layer of calls, then the expected ty\n             // cannot guide the method probe."}, {"sha": "2cc7b357c0a466afdce888e0f5998f8e532e0771", "filename": "compiler/rustc_hir_typeck/src/fallback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Ffallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Ffallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffallback.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -308,7 +308,7 @@ impl<'tcx> FnCtxt<'_, 'tcx> {\n \n             if relationship.self_in_trait && relationship.output {\n                 // This case falls back to () to ensure that the code pattern in\n-                // src/test/ui/never_type/fallback-closure-ret.rs continues to\n+                // tests/ui/never_type/fallback-closure-ret.rs continues to\n                 // compile when never_type_fallback is enabled.\n                 //\n                 // This rule is not readily explainable from first principles,"}, {"sha": "47c4b7d7431938d226e6ec6f201b362d2611dc33", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -670,8 +670,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // Note: this check is pessimistic, as the inference type could be matched with something other\n         // than the opaque type, but then we need a new `TypeRelation` just for this specific case and\n         // can't re-use `sup` below.\n-        // See src/test/ui/impl-trait/hidden-type-is-opaque.rs and\n-        // src/test/ui/impl-trait/hidden-type-is-opaque-2.rs for examples that hit this path.\n+        // See tests/ui/impl-trait/hidden-type-is-opaque.rs and\n+        // tests/ui/impl-trait/hidden-type-is-opaque-2.rs for examples that hit this path.\n         if formal_ret.has_infer_types() {\n             for ty in ret_ty.walk() {\n                 if let ty::subst::GenericArgKind::Type(ty) = ty.unpack()"}, {"sha": "7990d95310be59489989d8d4753c74b39aaa7eb1", "filename": "compiler/rustc_hir_typeck/src/generator_interior/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -448,7 +448,7 @@ impl<'a, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'tcx> {\n         // the yield, even if it's not borrowed or referenced after the yield. Ideally this would\n         // *only* happen for types with observable drop, not all types which wrap them, but that\n         // doesn't match the behavior of MIR borrowck and causes ICEs. See the FIXME comment in\n-        // src/test/ui/generator/drop-tracking-parent-expression.rs.\n+        // tests/ui/generator/drop-tracking-parent-expression.rs.\n         let scope = if self.drop_ranges.is_borrowed_temporary(expr)\n             || ty.map_or(true, |ty| {\n                 // Avoid ICEs in needs_drop."}, {"sha": "7d2ba1fd09df59f999cf4c45196f60e53906f7f6", "filename": "compiler/rustc_hir_typeck/src/method/confirm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fconfirm.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -90,7 +90,7 @@ impl<'a, 'tcx> ConfirmContext<'a, 'tcx> {\n         // If there is a `Self: Sized` bound and `Self` is a trait object, it is possible that\n         // something which derefs to `Self` actually implements the trait and the caller\n         // wanted to make a static dispatch on it but forgot to import the trait.\n-        // See test `src/test/ui/issue-35976.rs`.\n+        // See test `tests/ui/issue-35976.rs`.\n         //\n         // In that case, we'll error anyway, but we'll also re-run the search with all traits\n         // in scope, and if we find another method which can be used, we'll output an"}, {"sha": "5d8383170f0dcd7508acc8a2a78a7359206faf70", "filename": "compiler/rustc_hir_typeck/src/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1713,7 +1713,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n     /// probe. This will result in a pending obligation so when more type-info is available we can\n     /// make the final decision.\n     ///\n-    /// Example (`src/test/ui/method-two-trait-defer-resolution-1.rs`):\n+    /// Example (`tests/ui/method-two-trait-defer-resolution-1.rs`):\n     ///\n     /// ```ignore (illustrative)\n     /// trait Foo { ... }"}, {"sha": "e12a575d5acde1278a19d7b36ee036b8b3a3695d", "filename": "compiler/rustc_hir_typeck/src/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_hir_typeck%2Fsrc%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fupvar.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -663,7 +663,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // fields of some type, the observable drop order will remain the same as it previously\n         // was even though we're dropping each capture individually.\n         // See https://github.com/rust-lang/project-rfc-2229/issues/42 and\n-        // `src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order.rs`.\n+        // `tests/ui/closures/2229_closure_analysis/preserve_field_drop_order.rs`.\n         for (_, captures) in &mut root_var_min_capture_list {\n             captures.sort_by(|capture1, capture2| {\n                 for (p1, p2) in capture1.place.projections.iter().zip(&capture2.place.projections) {"}, {"sha": "77e38e47fcfa0b5ee9eb1e0dfd676ac9dae4ecab", "filename": "compiler/rustc_infer/src/infer/combine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -219,7 +219,7 @@ impl<'tcx> InferCtxt<'tcx> {\n     ///\n     /// As `3 + 4` contains `N` in its substs, this must not succeed.\n     ///\n-    /// See `src/test/ui/const-generics/occurs-check/` for more examples where this is relevant.\n+    /// See `tests/ui/const-generics/occurs-check/` for more examples where this is relevant.\n     #[instrument(level = \"debug\", skip(self))]\n     fn unify_const_variable(\n         &self,"}, {"sha": "66db1a2f92890fd53fb7f1bce5d30a4cc9b73e02", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -310,7 +310,7 @@ pub fn unexpected_hidden_region_diagnostic<'tcx>(\n             // Ugh. This is a painful case: the hidden region is not one\n             // that we can easily summarize or explain. This can happen\n             // in a case like\n-            // `src/test/ui/multiple-lifetimes/ordinary-bounds-unsuited.rs`:\n+            // `tests/ui/multiple-lifetimes/ordinary-bounds-unsuited.rs`:\n             //\n             // ```\n             // fn upper_bounds<'a, 'b>(a: Ordinary<'a>, b: Ordinary<'b>) -> impl Trait<'a, 'b> {\n@@ -1395,7 +1395,7 @@ impl<'tcx> TypeErrCtxt<'_, 'tcx> {\n     /// `swap_secondary_and_primary` is used to make projection errors in particular nicer by using\n     /// the message in `secondary_span` as the primary label, and apply the message that would\n     /// otherwise be used for the primary label on the `secondary_span` `Span`. This applies on\n-    /// E0271, like `src/test/ui/issues/issue-39970.stderr`.\n+    /// E0271, like `tests/ui/issues/issue-39970.stderr`.\n     #[instrument(\n         level = \"debug\",\n         skip(self, diag, secondary_span, swap_secondary_and_primary, prefer_label)"}, {"sha": "d4b1cfe433723c26157c035d3a66a07bfe8fb0bf", "filename": "compiler/rustc_mir_transform/src/unreachable_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_mir_transform%2Fsrc%2Funreachable_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_mir_transform%2Fsrc%2Funreachable_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Funreachable_prop.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -87,7 +87,7 @@ where\n                 // unless otherwise is unreachable, in which case deleting a normal branch causes it to be merged with\n                 // the otherwise, keeping its unreachable.\n                 // This looses information about reachability causing worse codegen.\n-                // For example (see src/test/codegen/match-optimizes-away.rs)\n+                // For example (see tests/codegen/match-optimizes-away.rs)\n                 //\n                 // pub enum Two { A, B }\n                 // pub fn identity(x: Two) -> Two {"}, {"sha": "564cb1baa690914fca320ceb77a56a07e17b5706", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1755,7 +1755,7 @@ impl SearchInterfaceForPrivateItemsVisitor<'_> {\n         // clauses that the compiler inferred. We only want to\n         // consider the ones that the user wrote. This is important\n         // for the inferred outlives rules; see\n-        // `src/test/ui/rfc-2093-infer-outlives/privacy.rs`.\n+        // `tests/ui/rfc-2093-infer-outlives/privacy.rs`.\n         self.visit_predicates(self.tcx.explicit_predicates_of(self.item_def_id));\n         self\n     }"}, {"sha": "58f6fd2b006ffdab465124685911464d99a31a7f", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -514,7 +514,7 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n                             ModuleKind::Block => unreachable!(),\n                         };\n                         // HACK(eddyb) unclear how good this is, but keeping `$crate`\n-                        // in `source` breaks `src/test/ui/imports/import-crate-var.rs`,\n+                        // in `source` breaks `tests/ui/imports/import-crate-var.rs`,\n                         // while the current crate doesn't have a valid `crate_name`.\n                         if crate_name != kw::Empty {\n                             // `crate_name` should not be interpreted as relative."}, {"sha": "258d2e2d28c9db5db8efc8e8dfcfb9b734d20be0", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -749,7 +749,7 @@ impl<'tcx> TypeVisitor<'tcx> for OrphanChecker<'tcx> {\n     ///\n     /// This means that we can completely ignore constants during the orphan check.\n     ///\n-    /// See `src/test/ui/coherence/const-generics-orphan-check-ok.rs` for examples.\n+    /// See `tests/ui/coherence/const-generics-orphan-check-ok.rs` for examples.\n     ///\n     /// [^1]: This might not hold for function pointers or trait objects in the future.\n     /// As these should be quite rare as const arguments and especially rare as impl"}, {"sha": "81966f3fcb231791b5cc098dab611e9b81fde698", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -282,7 +282,7 @@ fn project_and_unify_type<'cx, 'tcx>(\n     };\n     debug!(?normalized, ?obligations, \"project_and_unify_type result\");\n     let actual = obligation.predicate.term;\n-    // For an example where this is necessary see src/test/ui/impl-trait/nested-return-type2.rs\n+    // For an example where this is necessary see tests/ui/impl-trait/nested-return-type2.rs\n     // This allows users to omit re-mentioning all bounds on an associated type and just use an\n     // `impl Trait` for the assoc type to add more bounds.\n     let InferOk { value: actual, obligations: new } ="}, {"sha": "fec4047ff49ba4d4a675b7cd97c4bd8d31c1085a", "filename": "compiler/rustc_trait_selection/src/traits/wf.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -232,7 +232,7 @@ fn extend_cause_with_original_assoc_item_obligation<'tcx>(\n             // The obligation comes not from the current `impl` nor the `trait` being implemented,\n             // but rather from a \"second order\" obligation, where an associated type has a\n             // projection coming from another associated type. See\n-            // `src/test/ui/associated-types/point-at-type-on-obligation-failure.rs` and\n+            // `tests/ui/associated-types/point-at-type-on-obligation-failure.rs` and\n             // `traits-assoc-type-in-supertrait-bad.rs`.\n             if let Some(ty::Alias(ty::Projection, projection_ty)) = proj.term.ty().map(|ty| ty.kind())\n                 && let Some(&impl_item_id) =\n@@ -640,7 +640,7 @@ impl<'tcx> WfPredicates<'tcx> {\n                     // hidden type that is not actually well formed and\n                     // can cause compiler crashes when the user abuses unsafe\n                     // code to procure such a closure.\n-                    // See src/test/ui/type-alias-impl-trait/wf_check_closures.rs\n+                    // See tests/ui/type-alias-impl-trait/wf_check_closures.rs\n                     let obligations = self.nominal_obligations(did, substs);\n                     self.out.extend(obligations);\n                 }"}, {"sha": "dc1dd1bfaf8e7f30ddd14374c59375957472ed3c", "filename": "compiler/rustc_ty_utils/src/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_ty_utils%2Fsrc%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/compiler%2Frustc_ty_utils%2Fsrc%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fabi.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -35,7 +35,7 @@ fn fn_sig_for_fn_abi<'tcx>(\n             // HACK(davidtwco,eddyb): This is a workaround for polymorphization considering\n             // parameters unused if they show up in the signature, but not in the `mir::Body`\n             // (i.e. due to being inside a projection that got normalized, see\n-            // `src/test/ui/polymorphization/normalized_sig_types.rs`), and codegen not keeping\n+            // `tests/ui/polymorphization/normalized_sig_types.rs`), and codegen not keeping\n             // track of a polymorphization `ParamEnv` to allow normalizing later.\n             //\n             // We normalize the `fn_sig` again after substituting at a later point."}, {"sha": "4c87f633a260919fb958b204c0cdf6c1a2ff9aaf", "filename": "library/std/src/sys/unix/process/process_unix/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix%2Ftests.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -3,7 +3,7 @@ use crate::panic::catch_unwind;\n use crate::process::Command;\n \n // Many of the other aspects of this situation, including heap alloc concurrency\n-// safety etc., are tested in src/test/ui/process/process-panic-after-fork.rs\n+// safety etc., are tested in tests/ui/process/process-panic-after-fork.rs\n \n #[test]\n fn exitstatus_display_tests() {"}, {"sha": "828d492a3d19c892b53168bbe8f280641f6b28bd", "filename": "rustfmt.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/rustfmt.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/rustfmt.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt.toml?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -13,7 +13,7 @@ ignore = [\n \n     # tests for now are not formatted, as they are sometimes pretty-printing constrained\n     # (and generally rustfmt can move around comments in UI-testing incompatible ways)\n-    \"src/test\",\n+    \"tests\",\n \n     # do not format submodules\n     \"library/backtrace\","}, {"sha": "8dce9e79e16b88aeecae40e1b00219f0cfdb1448", "filename": "src/bootstrap/README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FREADME.md?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -59,10 +59,10 @@ The script accepts commands, flags, and arguments to determine what to do:\n   ./x.py test tidy\n \n   # execute the UI test suite\n-  ./x.py test src/test/ui\n+  ./x.py test tests/ui\n \n   # execute only some tests in the UI test suite\n-  ./x.py test src/test/ui --test-args substring-of-test-name\n+  ./x.py test tests/ui --test-args substring-of-test-name\n \n   # execute tests in the standard library in stage0\n   ./x.py test --stage 0 library/std"}, {"sha": "52a83fa29c7047b3596a30d78a675cba601293bd", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -191,9 +191,9 @@ pub enum PathSet {\n     /// A \"suite\" of paths.\n     ///\n     /// These can match as a path suffix (like `Set`), or as a prefix. For\n-    /// example, a command-line value of `src/test/ui/abi/variadic-ffi.rs`\n-    /// will match `src/test/ui`. A command-line value of `ui` would also\n-    /// match `src/test/ui`.\n+    /// example, a command-line value of `tests/ui/abi/variadic-ffi.rs`\n+    /// will match `tests/ui`. A command-line value of `ui` would also\n+    /// match `tests/ui`.\n     Suite(TaskPath),\n }\n "}, {"sha": "d5fcd107502e3b84082a924b6dd89385a012351d", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -78,7 +78,7 @@ macro_rules! rustc {\n #[test]\n fn test_valid() {\n     // make sure multi suite paths are accepted\n-    check_cli([\"test\", \"src/test/ui/attr-start.rs\", \"src/test/ui/attr-shebang.rs\"]);\n+    check_cli([\"test\", \"tests/ui/attr-start.rs\", \"tests/ui/attr-shebang.rs\"]);\n }\n \n #[test]"}, {"sha": "68d1db0160a2e7cd0872fd56dd6003245f9acc7d", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1193,7 +1193,7 @@ impl Step for Sysroot {\n             );\n             if builder.config.rust_remap_debuginfo {\n                 eprintln!(\n-                    \"warning: some `src/test/ui` tests will fail when lacking `{}`\",\n+                    \"warning: some `tests/ui` tests will fail when lacking `{}`\",\n                     sysroot_lib_rustlib_src_rust.display(),\n                 );\n             }"}, {"sha": "0af329e7007ac7016f4f1df9e0104f1804a71c28", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -45,7 +45,7 @@ def v(*args):\n o(\"llvm-link-shared\", \"llvm.link-shared\", \"prefer shared linking to LLVM (llvm-config --link-shared)\")\n o(\"rpath\", \"rust.rpath\", \"build rpaths into rustc itself\")\n o(\"llvm-version-check\", \"llvm.version-check\", \"check if the LLVM version is supported, build anyway\")\n-o(\"codegen-tests\", \"rust.codegen-tests\", \"run the src/test/codegen tests\")\n+o(\"codegen-tests\", \"rust.codegen-tests\", \"run the tests/codegen tests\")\n o(\"option-checking\", None, \"complain about unrecognized options in this configure script\")\n o(\"ninja\", \"llvm.ninja\", \"build LLVM using the Ninja generator (for MSVC, requires building in the correct environment)\")\n o(\"locked-deps\", \"build.locked-deps\", \"force Cargo.lock to be up to date\")"}, {"sha": "52c3dc0bf7591b6a03ea000519151e8fe2d76e7a", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -487,13 +487,13 @@ Arguments:\n     This subcommand accepts a number of paths to test directories that\n     should be compiled and run. For example:\n \n-        ./x.py test src/test/ui\n+        ./x.py test tests/ui\n         ./x.py test library/std --test-args hash_map\n         ./x.py test library/std --stage 0 --no-doc\n-        ./x.py test src/test/ui --bless\n-        ./x.py test src/test/ui --compare-mode chalk\n+        ./x.py test tests/ui --bless\n+        ./x.py test tests/ui --compare-mode chalk\n \n-    Note that `test src/test/* --stage N` does NOT depend on `build compiler/rustc --stage N`;\n+    Note that `test tests/* --stage N` does NOT depend on `build compiler/rustc --stage N`;\n     just like `build library/std --stage N` it tests the compiler produced by the previous\n     stage.\n "}, {"sha": "d54a21b9f16415d24ed1e555b5ff5708f4154eb0", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -58,7 +58,7 @@ prepare:\n \t$(Q)$(BOOTSTRAP) build --stage 2 nonexistent/path/to/trigger/cargo/metadata\n \n TESTS_IN_2 := \\\n-\tsrc/test/ui \\\n+\ttests/ui \\\n \tsrc/tools/linkchecker\n \n ## MSVC native builders\n@@ -72,7 +72,7 @@ ci-subset-2:\n ## MingW native builders\n \n TESTS_IN_MINGW_2 := \\\n-\tsrc/test/ui\n+\ttests/ui\n \n ci-mingw-subset-1:\n \t$(Q)$(CFG_SRC_DIR)/x test --stage 2 $(TESTS_IN_MINGW_2:%=--exclude %)"}, {"sha": "e0d1504c9c780a85ae83d32f81ae8fc0c7086375", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -907,7 +907,7 @@ impl Step for TestHelpers {\n     type Output = ();\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src/test/auxiliary/rust_test_helpers.c\")\n+        run.path(\"tests/auxiliary/rust_test_helpers.c\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -929,7 +929,7 @@ impl Step for TestHelpers {\n             self.target\n         };\n         let dst = builder.test_helpers_out(target);\n-        let src = builder.src.join(\"src/test/auxiliary/rust_test_helpers.c\");\n+        let src = builder.src.join(\"tests/auxiliary/rust_test_helpers.c\");\n         if up_to_date(&src, &dst.join(\"librust_test_helpers.a\")) {\n             return;\n         }\n@@ -958,7 +958,7 @@ impl Step for TestHelpers {\n             .opt_level(0)\n             .warnings(false)\n             .debug(false)\n-            .file(builder.src.join(\"src/test/auxiliary/rust_test_helpers.c\"))\n+            .file(builder.src.join(\"tests/auxiliary/rust_test_helpers.c\"))\n             .compile(\"rust_test_helpers\");\n     }\n }"}, {"sha": "004601cb68b10b1dbc36f2c5e3bb37e7c86af23c", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -144,7 +144,7 @@ pub fn setup(config: &Config, profile: Profile) {\n         Profile::Tools => &[\n             \"check\",\n             \"build\",\n-            \"test src/test/rustdoc*\",\n+            \"test tests/rustdoc*\",\n             \"test src/tools/clippy\",\n             \"test src/tools/miri\",\n             \"test src/tools/rustfmt\","}, {"sha": "159f2fba671c99c6f1e46bbe1ca43ea604a0b906", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 30, "deletions": 38, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -841,7 +841,7 @@ impl Step for RustdocJSStd {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.suite_path(\"src/test/rustdoc-js-std\")\n+        run.suite_path(\"tests/rustdoc-js-std\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -860,10 +860,10 @@ impl Step for RustdocJSStd {\n                 .arg(\"--doc-folder\")\n                 .arg(builder.doc_out(self.target))\n                 .arg(\"--test-folder\")\n-                .arg(builder.src.join(\"src/test/rustdoc-js-std\"));\n+                .arg(builder.src.join(\"tests/rustdoc-js-std\"));\n             for path in &builder.paths {\n                 if let Some(p) =\n-                    util::is_valid_test_suite_arg(path, \"src/test/rustdoc-js-std\", builder)\n+                    util::is_valid_test_suite_arg(path, \"tests/rustdoc-js-std\", builder)\n                 {\n                     if !p.ends_with(\".js\") {\n                         eprintln!(\"A non-js file was given: `{}`\", path.display());\n@@ -879,7 +879,7 @@ impl Step for RustdocJSStd {\n             });\n             builder.run(&mut command);\n         } else {\n-            builder.info(\"No nodejs found, skipping \\\"src/test/rustdoc-js-std\\\" tests\");\n+            builder.info(\"No nodejs found, skipping \\\"tests/rustdoc-js-std\\\" tests\");\n         }\n     }\n }\n@@ -896,7 +896,7 @@ impl Step for RustdocJSNotStd {\n     const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.suite_path(\"src/test/rustdoc-js\")\n+        run.suite_path(\"tests/rustdoc-js\")\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -911,11 +911,11 @@ impl Step for RustdocJSNotStd {\n                 target: self.target,\n                 mode: \"js-doc-test\",\n                 suite: \"rustdoc-js\",\n-                path: \"src/test/rustdoc-js\",\n+                path: \"tests/rustdoc-js\",\n                 compare_mode: None,\n             });\n         } else {\n-            builder.info(\"No nodejs found, skipping \\\"src/test/rustdoc-js\\\" tests\");\n+            builder.info(\"No nodejs found, skipping \\\"tests/rustdoc-js\\\" tests\");\n         }\n     }\n }\n@@ -976,7 +976,7 @@ impl Step for RustdocGUI {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n-        let run = run.suite_path(\"src/test/rustdoc-gui\");\n+        let run = run.suite_path(\"tests/rustdoc-gui\");\n         run.lazy_default_condition(Box::new(move || {\n             builder.config.nodejs.is_some()\n                 && builder\n@@ -1025,7 +1025,7 @@ impl Step for RustdocGUI {\n         // We remove existing folder to be sure there won't be artifacts remaining.\n         builder.clear_if_dirty(&out_dir, &builder.rustdoc(self.compiler));\n \n-        let src_path = builder.build.src.join(\"src/test/rustdoc-gui/src\");\n+        let src_path = builder.build.src.join(\"tests/rustdoc-gui/src\");\n         // We generate docs for the libraries present in the rustdoc-gui's src folder.\n         for entry in src_path.read_dir().expect(\"read_dir call failed\") {\n             if let Ok(entry) = entry {\n@@ -1064,9 +1064,9 @@ impl Step for RustdocGUI {\n             .arg(\"--doc-folder\")\n             .arg(out_dir.join(\"doc\"))\n             .arg(\"--tests-folder\")\n-            .arg(builder.build.src.join(\"src/test/rustdoc-gui\"));\n+            .arg(builder.build.src.join(\"tests/rustdoc-gui\"));\n         for path in &builder.paths {\n-            if let Some(p) = util::is_valid_test_suite_arg(path, \"src/test/rustdoc-gui\", builder) {\n+            if let Some(p) = util::is_valid_test_suite_arg(path, \"tests/rustdoc-gui\", builder) {\n                 if !p.ends_with(\".goml\") {\n                     eprintln!(\"A non-goml file was given: `{}`\", path.display());\n                     panic!(\"Cannot run rustdoc-gui tests\");\n@@ -1308,59 +1308,51 @@ macro_rules! test_definitions {\n     };\n }\n \n-default_test!(Ui { path: \"src/test/ui\", mode: \"ui\", suite: \"ui\" });\n+default_test!(Ui { path: \"tests/ui\", mode: \"ui\", suite: \"ui\" });\n \n default_test!(RunPassValgrind {\n-    path: \"src/test/run-pass-valgrind\",\n+    path: \"tests/run-pass-valgrind\",\n     mode: \"run-pass-valgrind\",\n     suite: \"run-pass-valgrind\"\n });\n \n-default_test!(MirOpt { path: \"src/test/mir-opt\", mode: \"mir-opt\", suite: \"mir-opt\" });\n+default_test!(MirOpt { path: \"tests/mir-opt\", mode: \"mir-opt\", suite: \"mir-opt\" });\n \n-default_test!(Codegen { path: \"src/test/codegen\", mode: \"codegen\", suite: \"codegen\" });\n+default_test!(Codegen { path: \"tests/codegen\", mode: \"codegen\", suite: \"codegen\" });\n \n default_test!(CodegenUnits {\n-    path: \"src/test/codegen-units\",\n+    path: \"tests/codegen-units\",\n     mode: \"codegen-units\",\n     suite: \"codegen-units\"\n });\n \n-default_test!(Incremental {\n-    path: \"src/test/incremental\",\n-    mode: \"incremental\",\n-    suite: \"incremental\"\n-});\n+default_test!(Incremental { path: \"tests/incremental\", mode: \"incremental\", suite: \"incremental\" });\n \n default_test_with_compare_mode!(Debuginfo {\n-    path: \"src/test/debuginfo\",\n+    path: \"tests/debuginfo\",\n     mode: \"debuginfo\",\n     suite: \"debuginfo\",\n     compare_mode: \"split-dwarf\"\n });\n \n-host_test!(UiFullDeps { path: \"src/test/ui-fulldeps\", mode: \"ui\", suite: \"ui-fulldeps\" });\n+host_test!(UiFullDeps { path: \"tests/ui-fulldeps\", mode: \"ui\", suite: \"ui-fulldeps\" });\n \n-host_test!(Rustdoc { path: \"src/test/rustdoc\", mode: \"rustdoc\", suite: \"rustdoc\" });\n-host_test!(RustdocUi { path: \"src/test/rustdoc-ui\", mode: \"ui\", suite: \"rustdoc-ui\" });\n+host_test!(Rustdoc { path: \"tests/rustdoc\", mode: \"rustdoc\", suite: \"rustdoc\" });\n+host_test!(RustdocUi { path: \"tests/rustdoc-ui\", mode: \"ui\", suite: \"rustdoc-ui\" });\n \n-host_test!(RustdocJson {\n-    path: \"src/test/rustdoc-json\",\n-    mode: \"rustdoc-json\",\n-    suite: \"rustdoc-json\"\n-});\n+host_test!(RustdocJson { path: \"tests/rustdoc-json\", mode: \"rustdoc-json\", suite: \"rustdoc-json\" });\n \n-host_test!(Pretty { path: \"src/test/pretty\", mode: \"pretty\", suite: \"pretty\" });\n+host_test!(Pretty { path: \"tests/pretty\", mode: \"pretty\", suite: \"pretty\" });\n \n-default_test!(RunMake { path: \"src/test/run-make\", mode: \"run-make\", suite: \"run-make\" });\n+default_test!(RunMake { path: \"tests/run-make\", mode: \"run-make\", suite: \"run-make\" });\n \n host_test!(RunMakeFullDeps {\n-    path: \"src/test/run-make-fulldeps\",\n+    path: \"tests/run-make-fulldeps\",\n     mode: \"run-make\",\n     suite: \"run-make-fulldeps\"\n });\n \n-default_test!(Assembly { path: \"src/test/assembly\", mode: \"assembly\", suite: \"assembly\" });\n+default_test!(Assembly { path: \"tests/assembly\", mode: \"assembly\", suite: \"assembly\" });\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n struct Compiletest {\n@@ -1472,7 +1464,7 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             cmd.arg(\"--rust-demangler-path\").arg(rust_demangler);\n         }\n \n-        cmd.arg(\"--src-base\").arg(builder.src.join(\"src/test\").join(suite));\n+        cmd.arg(\"--src-base\").arg(builder.src.join(\"tests\").join(suite));\n         cmd.arg(\"--build-base\").arg(testdir(builder, compiler.host).join(suite));\n         cmd.arg(\"--sysroot-base\").arg(builder.sysroot(compiler));\n         cmd.arg(\"--stage-id\").arg(format!(\"stage{}-{}\", compiler.stage, target));\n@@ -1936,7 +1928,7 @@ impl Step for ErrorIndex {\n     fn make_run(run: RunConfig<'_>) {\n         // error_index_generator depends on librustdoc. Use the compiler that\n         // is normally used to build rustdoc for other tests (like compiletest\n-        // tests in src/test/rustdoc) so that it shares the same artifacts.\n+        // tests in tests/rustdoc) so that it shares the same artifacts.\n         let compiler = run.builder.compiler(run.builder.top_stage, run.builder.config.build);\n         run.builder.ensure(ErrorIndex { compiler });\n     }\n@@ -2233,7 +2225,7 @@ impl Step for CrateRustdoc {\n             builder.compiler(builder.top_stage, target)\n         } else {\n             // Use the previous stage compiler to reuse the artifacts that are\n-            // created when running compiletest for src/test/rustdoc. If this used\n+            // created when running compiletest for tests/rustdoc. If this used\n             // `compiler`, then it would cause rustdoc to be built *again*, which\n             // isn't really necessary.\n             builder.compiler_for(builder.top_stage, target, target)\n@@ -2349,7 +2341,7 @@ impl Step for CrateRustdocJsonTypes {\n         let target = self.host;\n \n         // Use the previous stage compiler to reuse the artifacts that are\n-        // created when running compiletest for src/test/rustdoc. If this used\n+        // created when running compiletest for tests/rustdoc. If this used\n         // `compiler`, then it would cause rustdoc to be built *again*, which\n         // isn't really necessary.\n         let compiler = builder.compiler_for(builder.top_stage, target, target);"}, {"sha": "34829adf79bcf936c400c0abfc6e381ea01494db", "filename": "src/ci/docker/host-x86_64/dist-i586-gnu-i586-i686-musl/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i586-gnu-i586-i686-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i586-gnu-i586-i686-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-i586-gnu-i586-i686-musl%2FDockerfile?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -48,7 +48,7 @@ RUN CC=gcc CFLAGS=\"-m32 -Wa,-mrelax-relocations=no\" \\\n     rm -rf /build\n \n # FIXME: musl really shouldn't be linking libgcc_s.so, as it's linked to glibc,\n-# but it's required by src/test/ui/proc-macro/crt-static.rs. Ubuntu:16.04 gcc-5\n+# but it's required by tests/ui/proc-macro/crt-static.rs. Ubuntu:16.04 gcc-5\n # had libgcc_s.so as a symlink to the absolute libgcc_s.so.1, but now it's an\n # ld-script that expects to find libgcc_s.so.1 in the library search path.\n # See also https://github.com/rust-lang/rust/issues/82521"}, {"sha": "4576e6d4fa2560c57fd051688d5ff04433e26d2f", "filename": "src/ci/docker/host-x86_64/dist-various-1/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -183,7 +183,7 @@ ENV RUST_CONFIGURE_ARGS \\\n       --disable-docs\n \n ENV SCRIPT \\\n-      python3 ../x.py --stage 2 test --host='' --target $RUN_MAKE_TARGETS src/test/run-make && \\\n+      python3 ../x.py --stage 2 test --host='' --target $RUN_MAKE_TARGETS tests/run-make && \\\n       python3 ../x.py dist --host='' --target $TARGETS\n \n # sccache"}, {"sha": "d9e58386256d37753a4b7c9c0ee3fb7f5a610c69", "filename": "src/ci/docker/host-x86_64/i686-gnu/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -27,6 +27,6 @@ ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu\n # this slow job.\n ENV SCRIPT python3 ../x.py --stage 2 test \\\n   --exclude src/bootstrap \\\n-  --exclude src/test/rustdoc-js \\\n+  --exclude tests/rustdoc-js \\\n   --exclude src/tools/error_index_generator \\\n   --exclude src/tools/linkchecker"}, {"sha": "930f58baf02e26425b9d042a2a0ccca82f2b8cd1", "filename": "src/ci/docker/host-x86_64/test-various/Dockerfile", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -59,16 +59,16 @@ ENV NO_OVERFLOW_CHECKS=1\n \n ENV WASM_TARGETS=wasm32-unknown-unknown\n ENV WASM_SCRIPT python3 /checkout/x.py --stage 2 test --host='' --target $WASM_TARGETS \\\n-  src/test/run-make \\\n-  src/test/ui \\\n-  src/test/mir-opt \\\n-  src/test/codegen-units \\\n+  tests/run-make \\\n+  tests/ui \\\n+  tests/mir-opt \\\n+  tests/codegen-units \\\n   library/core\n \n ENV NVPTX_TARGETS=nvptx64-nvidia-cuda\n ENV NVPTX_SCRIPT python3 /checkout/x.py --stage 2 test --host='' --target $NVPTX_TARGETS \\\n-  src/test/run-make \\\n-  src/test/assembly\n+  tests/run-make \\\n+  tests/assembly\n \n ENV MUSL_TARGETS=x86_64-unknown-linux-musl \\\n     CC_x86_64_unknown_linux_musl=x86_64-linux-musl-gcc \\"}, {"sha": "735d4d4dfcfa103486f69f34d21e5a6082be0680", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-debug/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -46,4 +46,4 @@ ENV RUST_CONFIGURE_ARGS \\\n \n ENV SCRIPT \\\n   python3 ../x.py --stage 2 build && \\\n-  python3 ../x.py --stage 2 test src/test/run-make-fulldeps --test-args clang\n+  python3 ../x.py --stage 2 test tests/run-make-fulldeps --test-args clang"}, {"sha": "bcbf58253b1902901f8b95d7f2037c60c05f9c50", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-13-stage1/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13-stage1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13-stage1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13-stage1%2FDockerfile?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -45,5 +45,5 @@ ENV SCRIPT python2.7 ../x.py --stage 1 test --exclude src/tools/tidy && \\\n     # the PR is approved and tested for merging.\n     # It will also detect tests lacking `// EMIT_MIR_FOR_EACH_BIT_WIDTH`,\n     # despite having different output on 32-bit vs 64-bit targets.\n-    python2.7 ../x.py --stage 1 test src/test/mir-opt \\\n+    python2.7 ../x.py --stage 1 test tests/mir-opt \\\n     --host='' --target=i686-unknown-linux-gnu"}, {"sha": "9fc9e9cbffbed349157cd0f9f28756cce69a54a0", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-13/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13%2FDockerfile?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -56,14 +56,14 @@ ENV SCRIPT ../x.py --stage 2 test --exclude src/tools/tidy && \\\n            # the PR is approved and tested for merging.\n            # It will also detect tests lacking `// EMIT_MIR_FOR_EACH_BIT_WIDTH`,\n            # despite having different output on 32-bit vs 64-bit targets.\n-           ../x --stage 2 test src/test/mir-opt \\\n+           ../x --stage 2 test tests/mir-opt \\\n                              --host='' --target=i686-unknown-linux-gnu && \\\n            # Run the UI test suite again, but in `--pass=check` mode\n            #\n            # This is intended to make sure that both `--pass=check` continues to\n            # work.\n            #\n-           ../x.ps1 --stage 2 test src/test/ui --pass=check \\\n+           ../x.ps1 --stage 2 test tests/ui --pass=check \\\n                              --host='' --target=i686-unknown-linux-gnu && \\\n            # Run tidy at the very end, after all the other tests.\n            python2.7 ../x.py --stage 2 test src/tools/tidy"}, {"sha": "85f2f84a44c32087c79075d016bcaecc8cc23610", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -84,5 +84,5 @@ ENV RUST_CONFIGURE_ARGS \\\n   --save-toolstates=/tmp/toolstate/toolstates.json\n \n ENV SCRIPT /tmp/checktools.sh ../x.py && \\\n-  NODE_PATH=`npm root -g` python3 ../x.py test src/test/rustdoc-gui --stage 2 \\\n+  NODE_PATH=`npm root -g` python3 ../x.py test tests/rustdoc-gui --stage 2 \\\n     --test-args \"'--no-sandbox --jobs 1'\""}, {"sha": "d2a9264c84a12c77dd0abb631ac01537564a28e3", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -511,7 +511,7 @@ jobs:\n \n           - name: x86_64-apple-1\n             env: &env-x86_64-apple-tests\n-              SCRIPT: ./x.py --stage 2 test --exclude src/test/ui --exclude src/test/rustdoc --exclude src/test/run-make-fulldeps\n+              SCRIPT: ./x.py --stage 2 test --exclude tests/ui --exclude tests/rustdoc --exclude tests/run-make-fulldeps\n               RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.8\n@@ -523,7 +523,7 @@ jobs:\n \n           - name: x86_64-apple-2\n             env:\n-              SCRIPT: ./x.py --stage 2 test src/test/ui src/test/rustdoc src/test/run-make-fulldeps\n+              SCRIPT: ./x.py --stage 2 test tests/ui tests/rustdoc tests/run-make-fulldeps\n               <<: *env-x86_64-apple-tests\n             <<: *job-macos-xl\n "}, {"sha": "85d772253808ae5a6cdfe74ad6b336f214aec102", "filename": "src/ci/scripts/should-skip-this.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fci%2Fscripts%2Fshould-skip-this.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fshould-skip-this.sh?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -27,7 +27,7 @@ if [[ -n \"${CI_ONLY_WHEN_SUBMODULES_CHANGED-}\" ]]; then\n         # that breaks Miri.\n         echo \"Tool subtrees were updated\"\n     elif ! (git diff --quiet \"$BASE_COMMIT\" -- \\\n-             src/test/rustdoc-gui \\\n+             tests/rustdoc-gui \\\n              src/librustdoc \\\n              src/ci/docker/host-x86_64/x86_64-gnu-tools/Dockerfile \\\n              src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version \\"}, {"sha": "29e70129a62ed42527835c9be04dfe89ecbdb283", "filename": "src/doc/rustc/src/platform-support/fuchsia.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -705,15 +705,15 @@ Where `${RUST_SRC_PATH}/install` is the `prefix` set in `config.toml` and\n \n Once our environment is started, we can run our tests using `x.py` as usual. The\n test runner script will run the compiled tests on an emulated Fuchsia device. To\n-run the full `src/test/ui` test suite:\n+run the full `tests/ui` test suite:\n \n ```sh\n ( \\\n     source config-env.sh &&                                                   \\\n     ./x.py                                                                    \\\n     --config config.toml                                                      \\\n     --stage=2                                                                 \\\n-    test src/test/ui                                                          \\\n+    test tests/ui                                                             \\\n     --target x86_64-unknown-fuchsia                                           \\\n     --run=always --jobs 1                                                     \\\n     --test-args --target-rustcflags                                           \\"}, {"sha": "67634be6993169370eae0973ab3321df46efe610", "filename": "src/doc/unstable-book/src/compiler-flags/codegen-backend.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcodegen-backend.md", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcodegen-backend.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcodegen-backend.md?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -12,7 +12,7 @@ backend. The library must be of crate type `dylib` and must contain a function\n named `__rustc_codegen_backend` with a signature of `fn() -> Box<dyn rustc_codegen_ssa::traits::CodegenBackend>`.\n \n ## Example\n-See also the [`hotplug_codegen_backend`](https://github.com/rust-lang/rust/tree/master/src/test/run-make-fulldeps/hotplug_codegen_backend) test\n+See also the [`hotplug_codegen_backend`](https://github.com/rust-lang/rust/tree/master/tests/run-make-fulldeps/hotplug_codegen_backend) test\n for a full example.\n \n ```rust,ignore (partial-example)"}, {"sha": "dfbb468d4df94298fd5c4f3d97aef579a2a0c10b", "filename": "src/doc/unstable-book/src/language-features/plugin.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -33,7 +33,7 @@ of a library.\n Plugins can extend [Rust's lint\n infrastructure](../../reference/attributes/diagnostics.md#lint-check-attributes) with\n additional checks for code style, safety, etc. Now let's write a plugin\n-[`lint-plugin-test.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui-fulldeps/auxiliary/lint-plugin-test.rs)\n+[`lint-plugin-test.rs`](https://github.com/rust-lang/rust/blob/master/tests/ui-fulldeps/auxiliary/lint-plugin-test.rs)\n that warns about any item named `lintme`.\n \n ```rust,ignore (requires-stage-2)"}, {"sha": "b2fa6e82acce263db35d53ea01688ea98d8cedf2", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -707,7 +707,7 @@ h2.small-section-header > .anchor {\n \n /*  In most contexts we use `overflow-wrap: anywhere` to ensure that we can wrap\n \tas much as needed on mobile (see\n-\tsrc/test/rustdoc-gui/type-declaration-overflow.goml for an example of why\n+\ttests/rustdoc-gui/type-declaration-overflow.goml for an example of why\n \tthis matters). The `anywhere` value means:\n \n \t\"Soft wrap opportunities introduced by the word break are considered when"}, {"sha": "735d91bd27c51b512b6bb4b17a1e01f7efa02f05", "filename": "src/test/run-make-fulldeps/alloc-no-oom-handling/Makefile", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-oom-handling%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-oom-handling%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-oom-handling%2FMakefile?ref=8ecaad85f61375b18e1667b51a3ef350121d2ca0", "patch": "@@ -1,4 +0,0 @@\n-include ../tools.mk\n-\n-all:\n-\t$(RUSTC) --edition=2021 -Dwarnings --crate-type=rlib ../../../../library/alloc/src/lib.rs --cfg no_global_oom_handling"}, {"sha": "5f7ae70fa0268bb0b5eae6e2ead37c5945293496", "filename": "src/test/run-make-fulldeps/alloc-no-rc/Makefile", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-rc%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-rc%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-rc%2FMakefile?ref=8ecaad85f61375b18e1667b51a3ef350121d2ca0", "patch": "@@ -1,4 +0,0 @@\n-include ../tools.mk\n-\n-all:\n-\t$(RUSTC) --edition=2021 -Dwarnings --crate-type=rlib ../../../../library/alloc/src/lib.rs --cfg no_rc"}, {"sha": "6a258a2ddfd6952edecaf05ffb6f8a6908f17046", "filename": "src/test/run-make-fulldeps/alloc-no-sync/Makefile", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-sync%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-sync%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-sync%2FMakefile?ref=8ecaad85f61375b18e1667b51a3ef350121d2ca0", "patch": "@@ -1,4 +0,0 @@\n-include ../tools.mk\n-\n-all:\n-\t$(RUSTC) --edition=2021 -Dwarnings --crate-type=rlib ../../../../library/alloc/src/lib.rs --cfg no_sync"}, {"sha": "ec05ebea55582f22894bc7d7e63103e3c1495b4d", "filename": "src/test/run-make-fulldeps/core-no-fp-fmt-parse/Makefile", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make-fulldeps%2Fcore-no-fp-fmt-parse%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make-fulldeps%2Fcore-no-fp-fmt-parse%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcore-no-fp-fmt-parse%2FMakefile?ref=8ecaad85f61375b18e1667b51a3ef350121d2ca0", "patch": "@@ -1,4 +0,0 @@\n-include ../tools.mk\n-\n-all:\n-\t$(RUSTC) --edition=2021 -Dwarnings --crate-type=rlib ../../../../library/core/src/lib.rs --cfg no_fp_fmt_parse"}, {"sha": "b533b272d38cf58c27d223f1ea451104683c85cc", "filename": "src/test/run-make/coverage/compiletest-ignore-dir", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make%2Fcoverage%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/8ecaad85f61375b18e1667b51a3ef350121d2ca0/src%2Ftest%2Frun-make%2Fcoverage%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcoverage%2Fcompiletest-ignore-dir?ref=8ecaad85f61375b18e1667b51a3ef350121d2ca0", "patch": "@@ -1,3 +0,0 @@\n-# Directory \"coverage\" supports the tests at prefix ../coverage-*\n-\n-# Use ./x.py [options] test src/test/run-make/coverage to run all related tests."}, {"sha": "8af60890390e79d7b48dd6fecd83045f93875e63", "filename": "src/tools/clippy/tests/ui/crashes/ice-6254.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6254.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6254.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6254.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1,4 +1,4 @@\n-// originally from ./src/test/ui/pattern/usefulness/consts-opaque.rs\n+// originally from ./tests/ui/pattern/usefulness/consts-opaque.rs\n // panicked at 'assertion failed: rows.iter().all(|r| r.len() == v.len())',\n // compiler/rustc_mir_build/src/thir/pattern/_match.rs:2030:5\n "}, {"sha": "ccde6aa2b0f770147abb8cbae217bab9ff83e3b4", "filename": "src/tools/clippy/tests/ui/crashes/ice-6255.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6255.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6255.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6255.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1,4 +1,4 @@\n-// originally from rustc ./src/test/ui/macros/issue-78325-inconsistent-resolution.rs\n+// originally from rustc ./tests/ui/macros/issue-78325-inconsistent-resolution.rs\n // inconsistent resolution for a macro\n \n macro_rules! define_other_core {"}, {"sha": "f9ee3e058c111470ba38775b7780044ae245e75e", "filename": "src/tools/clippy/tests/ui/crashes/ice-6256.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6256.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6256.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-6256.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1,4 +1,4 @@\n-// originally from rustc ./src/test/ui/regions/issue-78262.rs\n+// originally from rustc ./tests/ui/regions/issue-78262.rs\n // ICE: to get the signature of a closure, use substs.as_closure().sig() not fn_sig()\n #![allow(clippy::upper_case_acronyms)]\n "}, {"sha": "a5f5eb447da6ccdde644a47e48c4ef2705986ec4", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -240,7 +240,7 @@ pub struct Config {\n     pub mode: Mode,\n \n     /// The test suite (essentially which directory is running, but without the\n-    /// directory prefix such as src/test)\n+    /// directory prefix such as tests)\n     pub suite: String,\n \n     /// The debugger to use in debuginfo mode. Unset otherwise."}, {"sha": "2aea30870ff5e6dc97ebf1543ebe6b5cb34fd34b", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -774,7 +774,7 @@ fn make_test_name(\n     revision: Option<&String>,\n ) -> test::TestName {\n     // Print the name of the file, relative to the repository root.\n-    // `src_base` looks like `/path/to/rust/src/test/ui`\n+    // `src_base` looks like `/path/to/rust/tests/ui`\n     let root_directory = config.src_base.parent().unwrap().parent().unwrap().parent().unwrap();\n     let path = testpaths.file.strip_prefix(root_directory).unwrap();\n     let debugger = match config.debugger {"}, {"sha": "a16ab11e2f9788b377edbae1511983c05b9d3b60", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -2102,9 +2102,7 @@ impl<'test> TestCx<'test> {\n                 .parent()\n                 .unwrap() // chop off `ui`\n                 .parent()\n-                .unwrap() // chop off `test`\n-                .parent()\n-                .unwrap(); // chop off `src`\n+                .unwrap(); // chop off `tests`\n             args.push(src.join(\"src/etc/wasm32-shim.js\").display().to_string());\n         }\n \n@@ -2932,7 +2930,7 @@ impl<'test> TestCx<'test> {\n \n     fn run_rmake_test(&self) {\n         let cwd = env::current_dir().unwrap();\n-        let src_root = self.config.src_base.parent().unwrap().parent().unwrap().parent().unwrap();\n+        let src_root = self.config.src_base.parent().unwrap().parent().unwrap();\n         let src_root = cwd.join(&src_root);\n \n         let tmpdir = cwd.join(self.output_base_name());\n@@ -3548,8 +3546,8 @@ impl<'test> TestCx<'test> {\n         normalize_path(parent_dir, \"$DIR\");\n \n         let source_bases = &[\n-            // Source base on the current filesystem (calculated as parent of `src/test/$suite`):\n-            Some(self.config.src_base.parent().unwrap().parent().unwrap().parent().unwrap().into()),\n+            // Source base on the current filesystem (calculated as parent of `tests/$suite`):\n+            Some(self.config.src_base.parent().unwrap().parent().unwrap().into()),\n             // Source base on the sysroot (from the src components downloaded by `download-rustc`):\n             Some(self.config.sysroot_base.join(\"lib\").join(\"rustlib\").join(\"src\").join(\"rust\")),\n             // Virtual `/rustc/$sha` remapped paths (if `remap-debuginfo` is enabled):"}, {"sha": "7e7b40044218774b3673b1b407502e3ea851c02f", "filename": "src/tools/rust-analyzer/crates/hir-def/src/macro_expansion_tests/mbe/meta_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmeta_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmeta_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmeta_syntax.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -94,7 +94,7 @@ macro_rules! m2 { () => ( ${invalid()} ) }\n \n #[test]\n fn test_rustc_issue_57597() {\n-    // <https://github.com/rust-lang/rust/blob/master/src/test/ui/issues/issue-57597.rs>\n+    // <https://github.com/rust-lang/rust/blob/master/tests/ui/issues/issue-57597.rs>\n     check(\n         r#\"\n macro_rules! m0 { ($($($i:ident)?)+) => {}; }"}, {"sha": "f0c3690962aff09652baaade9cad1f882a38822a", "filename": "src/tools/rust-analyzer/crates/ide-db/src/generated/lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frust-analyzer%2Fcrates%2Fide-db%2Fsrc%2Fgenerated%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frust-analyzer%2Fcrates%2Fide-db%2Fsrc%2Fgenerated%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-analyzer%2Fcrates%2Fide-db%2Fsrc%2Fgenerated%2Flints.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -3624,7 +3624,7 @@ of a library.\n Plugins can extend [Rust's lint\n infrastructure](../../reference/attributes/diagnostics.md#lint-check-attributes) with\n additional checks for code style, safety, etc. Now let's write a plugin\n-[`lint-plugin-test.rs`](https://github.com/rust-lang/rust/blob/master/src/test/ui-fulldeps/auxiliary/lint-plugin-test.rs)\n+[`lint-plugin-test.rs`](https://github.com/rust-lang/rust/blob/master/tests/ui-fulldeps/auxiliary/lint-plugin-test.rs)\n that warns about any item named `lintme`.\n \n ```rust,ignore (requires-stage-2)"}, {"sha": "2f0ca1ec3d0bfb62e4596de3d2842dac63397163", "filename": "src/tools/rustdoc-gui/tester.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frustdoc-gui%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frustdoc-gui%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2Ftester.js?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -262,7 +262,7 @@ async function main(argv) {\n             console.log(\"\");\n             console.log(\n                 \"`browser-ui-test` crashed unexpectedly. Please try again with adding `--test-args \\\n---no-sandbox` at the end. For example: `x.py test src/test/rustdoc-gui --test-args --no-sandbox`\");\n+--no-sandbox` at the end. For example: `x.py test tests/rustdoc-gui --test-args --no-sandbox`\");\n             console.log(\"\");\n         }\n     };"}, {"sha": "deef429dbee08b2d154b9fd35861f7eb51636409", "filename": "src/tools/rustfmt/tests/source/issue-2445.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frustfmt%2Ftests%2Fsource%2Fissue-2445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frustfmt%2Ftests%2Fsource%2Fissue-2445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Ftests%2Fsource%2Fissue-2445.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1,6 +1,6 @@\n test!(RunPassPretty {\n             // comment\n-    path: \"src/test/run-pass/pretty\",\n+    path: \"tests/run-pass/pretty\",\n     mode: \"pretty\",\n     suite: \"run-pass\",\n     default: false,\n@@ -9,7 +9,7 @@ test!(RunPassPretty {\n \n test!(RunPassPretty {\n             // comment\n-    path: \"src/test/run-pass/pretty\",\n+    path: \"tests/run-pass/pretty\",\n     mode: \"pretty\",\n     suite: \"run-pass\",\n     default: false,"}, {"sha": "463c5d4957686470d7d91bcf10cd6a47a599e2f3", "filename": "src/tools/rustfmt/tests/target/issue-2445.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frustfmt%2Ftests%2Ftarget%2Fissue-2445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Frustfmt%2Ftests%2Ftarget%2Fissue-2445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Ftests%2Ftarget%2Fissue-2445.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1,6 +1,6 @@\n test!(RunPassPretty {\n     // comment\n-    path: \"src/test/run-pass/pretty\",\n+    path: \"tests/run-pass/pretty\",\n     mode: \"pretty\",\n     suite: \"run-pass\",\n     default: false,\n@@ -9,7 +9,7 @@ test!(RunPassPretty {\n \n test!(RunPassPretty {\n     // comment\n-    path: \"src/test/run-pass/pretty\",\n+    path: \"tests/run-pass/pretty\",\n     mode: \"pretty\",\n     suite: \"run-pass\",\n     default: false,"}, {"sha": "0dd9c1e160ceef3d3825aca2ecec36f4d16864b4", "filename": "src/tools/tidy/src/debug_artifacts.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fdebug_artifacts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fdebug_artifacts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdebug_artifacts.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1,14 +1,12 @@\n //! Tidy check to prevent creation of unnecessary debug artifacts while running tests.\n \n use crate::walk::{filter_dirs, walk};\n-use std::path::{Path, PathBuf};\n+use std::path::Path;\n \n const GRAPHVIZ_POSTFLOW_MSG: &str = \"`borrowck_graphviz_postflow` attribute in test\";\n \n-pub fn check(path: &Path, bad: &mut bool) {\n-    let test_dir: PathBuf = path.join(\"test\");\n-\n-    walk(&test_dir, &mut filter_dirs, &mut |entry, contents| {\n+pub fn check(test_dir: &Path, bad: &mut bool) {\n+    walk(test_dir, &mut filter_dirs, &mut |entry, contents| {\n         let filename = entry.path();\n         let is_rust = filename.extension().map_or(false, |ext| ext == \"rs\");\n         if !is_rust {"}, {"sha": "8172e3d292bd98a5734f56102f8396707423f501", "filename": "src/tools/tidy/src/edition.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -11,7 +11,10 @@ fn is_edition_2021(mut line: &str) -> bool {\n pub fn check(path: &Path, bad: &mut bool) {\n     walk(\n         path,\n-        &mut |path| filter_dirs(path) || path.ends_with(\"src/test\"),\n+        &mut |path| {\n+            filter_dirs(path)\n+                || (path.ends_with(\"tests\") && path.join(\"COMPILER_TESTS.md\").exists())\n+        },\n         &mut |entry, contents| {\n             let file = entry.path();\n             let filename = file.file_name().unwrap();"}, {"sha": "ac8b5f6834c63472ccd98b81f3af96139b884d8b", "filename": "src/tools/tidy/src/error_codes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -8,7 +8,7 @@\n //!   - The explanation is expected to contain a `doctest` that fails with the correct error code. (`EXEMPT_FROM_DOCTEST` *currently* bypasses this check)\n //!   - Note that other stylistic conventions for markdown files are checked in the `style.rs` tidy check.\n //!\n-//! 3. We check that the error code has a UI test in `src/test/ui/error-codes/`.\n+//! 3. We check that the error code has a UI test in `tests/ui/error-codes/`.\n //!   - We ensure that there is both a `Exxxx.rs` file and a corresponding `Exxxx.stderr` file.\n //!   - We also ensure that the error code is used in the tests.\n //!   - *Currently*, it is possible to opt-out of this check with the `EXEMPTED_FROM_TEST` constant.\n@@ -24,7 +24,7 @@ use crate::walk::{filter_dirs, walk, walk_many};\n \n const ERROR_CODES_PATH: &str = \"compiler/rustc_error_codes/src/error_codes.rs\";\n const ERROR_DOCS_PATH: &str = \"compiler/rustc_error_codes/src/error_codes/\";\n-const ERROR_TESTS_PATH: &str = \"src/test/ui/error-codes/\";\n+const ERROR_TESTS_PATH: &str = \"tests/ui/error-codes/\";\n \n // Error codes that (for some reason) can't have a doctest in their explanation. Error codes are still expected to provide a code example, even if untested.\n const IGNORE_DOCTEST_CHECK: &[&str] =\n@@ -270,14 +270,14 @@ fn check_error_codes_tests(\n         if !test_path.exists() && !IGNORE_UI_TEST_CHECK.contains(&code.as_str()) {\n             verbose_print!(\n                 verbose,\n-                \"warning: Error code `{code}` needs to have at least one UI test in the `src/test/ui/error-codes/` directory`!\"\n+                \"warning: Error code `{code}` needs to have at least one UI test in the `tests/error-codes/` directory`!\"\n             );\n             continue;\n         }\n         if IGNORE_UI_TEST_CHECK.contains(&code.as_str()) {\n             if test_path.exists() {\n                 errors.push(format!(\n-                    \"Error code `{code}` has a UI test in `src/test/ui/error-codes/{code}.rs`, it shouldn't be listed in `EXEMPTED_FROM_TEST`!\"\n+                    \"Error code `{code}` has a UI test in `tests/ui/error-codes/{code}.rs`, it shouldn't be listed in `EXEMPTED_FROM_TEST`!\"\n                 ));\n             }\n             continue;"}, {"sha": "af92e6eb8637605a0906d60965ade46036b01ae6", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -82,6 +82,7 @@ pub fn collect_lib_features(base_src_path: &Path) -> Features {\n \n pub fn check(\n     src_path: &Path,\n+    tests_path: &Path,\n     compiler_path: &Path,\n     lib_path: &Path,\n     bad: &mut bool,\n@@ -95,10 +96,10 @@ pub fn check(\n \n     walk_many(\n         &[\n-            &src_path.join(\"test/ui\"),\n-            &src_path.join(\"test/ui-fulldeps\"),\n-            &src_path.join(\"test/rustdoc-ui\"),\n-            &src_path.join(\"test/rustdoc\"),\n+            &tests_path.join(\"ui\"),\n+            &tests_path.join(\"ui-fulldeps\"),\n+            &tests_path.join(\"rustdoc-ui\"),\n+            &tests_path.join(\"rustdoc\"),\n         ],\n         &mut filter_dirs,\n         &mut |entry, contents| {\n@@ -480,7 +481,7 @@ fn map_lib_features(\n ) {\n     walk(\n         base_src_path,\n-        &mut |path| filter_dirs(path) || path.ends_with(\"src/test\"),\n+        &mut |path| filter_dirs(path) || path.ends_with(\"tests\"),\n         &mut |entry, contents| {\n             let file = entry.path();\n             let filename = file.file_name().unwrap().to_string_lossy();"}, {"sha": "2a4853b37be391e402553505ea4da3072508ae1c", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -25,6 +25,7 @@ fn main() {\n             .expect(\"concurrency must be a number\");\n \n     let src_path = root_path.join(\"src\");\n+    let tests_path = root_path.join(\"tests\");\n     let library_path = root_path.join(\"library\");\n     let compiler_path = root_path.join(\"compiler\");\n     let librustdoc_path = src_path.join(\"librustdoc\");\n@@ -68,16 +69,16 @@ fn main() {\n             }\n         }\n \n-        check!(target_specific_tests, &src_path);\n+        check!(target_specific_tests, &tests_path);\n \n         // Checks that are done on the cargo workspace.\n         check!(deps, &root_path, &cargo);\n         check!(extdeps, &root_path);\n \n         // Checks over tests.\n-        check!(debug_artifacts, &src_path);\n-        check!(ui_tests, &src_path);\n-        check!(mir_opt_tests, &src_path, bless);\n+        check!(debug_artifacts, &tests_path);\n+        check!(ui_tests, &tests_path);\n+        check!(mir_opt_tests, &tests_path, bless);\n \n         // Checks that only make sense for the compiler.\n         check!(error_codes, &root_path, &[&compiler_path, &librustdoc_path], verbose);\n@@ -88,6 +89,7 @@ fn main() {\n \n         // Checks that need to be done for both the compiler and std libraries.\n         check!(unit_tests, &src_path);\n+        check!(unit_tests, &tests_path);\n         check!(unit_tests, &compiler_path);\n         check!(unit_tests, &library_path);\n \n@@ -96,14 +98,17 @@ fn main() {\n         }\n \n         check!(style, &src_path);\n+        check!(style, &tests_path);\n         check!(style, &compiler_path);\n         check!(style, &library_path);\n \n         check!(edition, &src_path);\n         check!(edition, &compiler_path);\n         check!(edition, &library_path);\n+        check!(edition, &tests_path);\n \n         check!(alphabetical, &src_path);\n+        check!(alphabetical, &tests_path);\n         check!(alphabetical, &compiler_path);\n         check!(alphabetical, &library_path);\n \n@@ -113,7 +118,14 @@ fn main() {\n             drain_handles(&mut handles);\n \n             let mut flag = false;\n-            let r = features::check(&src_path, &compiler_path, &library_path, &mut flag, verbose);\n+            let r = features::check(\n+                &src_path,\n+                &tests_path,\n+                &compiler_path,\n+                &library_path,\n+                &mut flag,\n+                verbose,\n+            );\n             if flag {\n                 bad.store(true, Ordering::Relaxed);\n             }"}, {"sha": "2a9dcac2e8d38e4f6bf21e8637bcbbe8ccf4fd78", "filename": "src/tools/tidy/src/mir_opt_tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fmir_opt_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fmir_opt_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmir_opt_tests.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -6,7 +6,7 @@ use std::path::{Path, PathBuf};\n fn check_unused_files(path: &Path, bless: bool, bad: &mut bool) {\n     let mut rs_files = Vec::<PathBuf>::new();\n     let mut output_files = HashSet::<PathBuf>::new();\n-    let files = walkdir::WalkDir::new(&path.join(\"test/mir-opt\")).into_iter();\n+    let files = walkdir::WalkDir::new(&path.join(\"mir-opt\")).into_iter();\n \n     for file in files.filter_map(Result::ok).filter(|e| e.file_type().is_file()) {\n         let filepath = file.path();\n@@ -41,7 +41,7 @@ fn check_unused_files(path: &Path, bless: bool, bad: &mut bool) {\n }\n \n fn check_dash_files(path: &Path, bless: bool, bad: &mut bool) {\n-    for file in walkdir::WalkDir::new(&path.join(\"test/mir-opt\"))\n+    for file in walkdir::WalkDir::new(&path.join(\"mir-opt\"))\n         .into_iter()\n         .filter_map(Result::ok)\n         .filter(|e| e.file_type().is_file())"}, {"sha": "5c4ba86936456f683e6dd5386be061cba7ec57f2", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -246,7 +246,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n             // This list should ideally be sourced from rustfmt.toml but we don't want to add a toml\n             // parser to tidy.\n             !file.ancestors().any(|a| {\n-                a.ends_with(\"src/test\") ||\n+                (a.ends_with(\"tests\") && a.join(\"COMPILER_TESTS.md\").exists()) ||\n                     a.ends_with(\"src/doc/book\")\n             });\n \n@@ -324,9 +324,10 @@ pub fn check(path: &Path, bad: &mut bool) {\n \n             if trimmed.contains(\"dbg!\")\n                 && !trimmed.starts_with(\"//\")\n-                && !file\n-                    .ancestors()\n-                    .any(|a| a.ends_with(\"src/test\") || a.ends_with(\"library/alloc/tests\"))\n+                && !file.ancestors().any(|a| {\n+                    (a.ends_with(\"tests\") && a.join(\"COMPILER_TESTS.md\").exists())\n+                        || a.ends_with(\"library/alloc/tests\")\n+                })\n                 && filename != \"tests.rs\"\n             {\n                 suppressible_tidy_err!("}, {"sha": "d7a157672cf5b633766de637521bbc74cd684e2d", "filename": "src/tools/tidy/src/target_specific_tests.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Ftarget_specific_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Ftarget_specific_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ftarget_specific_tests.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -35,9 +35,8 @@ struct RevisionInfo<'a> {\n }\n \n pub fn check(path: &Path, bad: &mut bool) {\n-    let tests = path.join(\"test\");\n     crate::walk::walk(\n-        &tests,\n+        path,\n         &mut |path| path.extension().map(|p| p == \"rs\") == Some(false),\n         &mut |entry, content| {\n             let file = entry.path().display();"}, {"sha": "806e84025c4a28cb37b5f841f70e6580e27d1bcc", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -13,13 +13,13 @@ const ROOT_ENTRY_LIMIT: usize = 939;\n const ISSUES_ENTRY_LIMIT: usize = 1998;\n \n fn check_entries(path: &Path, bad: &mut bool) {\n-    for dir in Walk::new(&path.join(\"test/ui\")) {\n+    for dir in Walk::new(&path.join(\"ui\")) {\n         if let Ok(entry) = dir {\n             if entry.file_type().map(|ft| ft.is_dir()).unwrap_or(false) {\n                 let dir_path = entry.path();\n                 // Use special values for these dirs.\n-                let is_root = path.join(\"test/ui\") == dir_path;\n-                let is_issues_dir = path.join(\"test/ui/issues\") == dir_path;\n+                let is_root = path.join(\"ui\") == dir_path;\n+                let is_issues_dir = path.join(\"ui/issues\") == dir_path;\n                 let limit = if is_root {\n                     ROOT_ENTRY_LIMIT\n                 } else if is_issues_dir {\n@@ -53,7 +53,7 @@ fn check_entries(path: &Path, bad: &mut bool) {\n \n pub fn check(path: &Path, bad: &mut bool) {\n     check_entries(&path, bad);\n-    for path in &[&path.join(\"test/ui\"), &path.join(\"test/ui-fulldeps\")] {\n+    for path in &[&path.join(\"ui\"), &path.join(\"ui-fulldeps\")] {\n         crate::walk::walk_no_read(path, &mut |_| false, &mut |entry| {\n             let file_path = entry.path();\n             if let Some(ext) = file_path.extension() {"}, {"sha": "27f36c855613d69b2c85004ec1b309d62b26a99c", "filename": "src/tools/tidy/src/unit_tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Funit_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Funit_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Funit_tests.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -22,7 +22,7 @@ pub fn check(root_path: &Path, bad: &mut bool) {\n         let file_name = path.file_name().unwrap_or_default();\n         if path.is_dir() {\n             filter_dirs(path)\n-                || path.ends_with(\"src/test\")\n+                || path.ends_with(\"tests\")\n                 || path.ends_with(\"src/doc\")\n                 || (file_name == \"tests\" || file_name == \"benches\") && !is_core(path)\n         } else {"}, {"sha": "ea540bd0b18a98e7b9bae81b0c9a37d4d6281e19", "filename": "tests/COMPILER_TESTS.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2FCOMPILER_TESTS.md", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2FCOMPILER_TESTS.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2FCOMPILER_TESTS.md?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/COMPILER_TESTS.md"}, {"sha": "79b0bb2d7eead1ee88de7fc419d382d921c2f149", "filename": "tests/assembly/aarch64-naked-fn-no-bti-prolog.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Faarch64-naked-fn-no-bti-prolog.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Faarch64-naked-fn-no-bti-prolog.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Faarch64-naked-fn-no-bti-prolog.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/aarch64-naked-fn-no-bti-prolog.rs"}, {"sha": "da14cd026780a0dba968ddb1205e52140d4c130a", "filename": "tests/assembly/aarch64-pointer-auth.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Faarch64-pointer-auth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Faarch64-pointer-auth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Faarch64-pointer-auth.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/aarch64-pointer-auth.rs"}, {"sha": "c5eefca3467bbb91f8ee321a14e999072a172483", "filename": "tests/assembly/align_offset.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Falign_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Falign_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Falign_offset.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/align_offset.rs"}, {"sha": "1908ffb8ff3f0aad5efc6aeb10f01dba49dc65ed", "filename": "tests/assembly/asm/aarch64-el2vmsa.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Faarch64-el2vmsa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Faarch64-el2vmsa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Faarch64-el2vmsa.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/aarch64-el2vmsa.rs"}, {"sha": "5196aa9fa1759e3a0c9b0b051113fcb491d68a73", "filename": "tests/assembly/asm/aarch64-modifiers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Faarch64-modifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Faarch64-modifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Faarch64-modifiers.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/aarch64-modifiers.rs"}, {"sha": "c2ec4e911b9d17152ae919bad65f424347a1e7d7", "filename": "tests/assembly/asm/aarch64-outline-atomics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Faarch64-outline-atomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Faarch64-outline-atomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Faarch64-outline-atomics.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/aarch64-outline-atomics.rs"}, {"sha": "66c39a48c6e1d5fbc1ecb2ea3207c5dedeb4af37", "filename": "tests/assembly/asm/aarch64-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Faarch64-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Faarch64-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Faarch64-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/aarch64-types.rs"}, {"sha": "88ffeaecfecb6e86f6e5ae921db213d72b38993b", "filename": "tests/assembly/asm/arm-modifiers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Farm-modifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Farm-modifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Farm-modifiers.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/arm-modifiers.rs"}, {"sha": "b22a26ce36f140d975e81843bc6da7b3ad16ad83", "filename": "tests/assembly/asm/arm-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Farm-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Farm-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Farm-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/arm-types.rs"}, {"sha": "ffdc8f2e351dd0b1ab5256080e7dea03f3b83bcd", "filename": "tests/assembly/asm/avr-modifiers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Favr-modifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Favr-modifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Favr-modifiers.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/avr-modifiers.rs"}, {"sha": "b2d11a8826f6be04d76793911d9825b9ec91dd90", "filename": "tests/assembly/asm/avr-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Favr-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Favr-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Favr-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/avr-types.rs"}, {"sha": "e177b8d0dbe509a31ba53357bea539f39595fc30", "filename": "tests/assembly/asm/bpf-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fbpf-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fbpf-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fbpf-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/bpf-types.rs"}, {"sha": "0b361a7ed963d99510d4a44467e4513d7fe0d9af", "filename": "tests/assembly/asm/global_asm.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fglobal_asm.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/global_asm.rs"}, {"sha": "af16faedbc4a2ed04e4ba18eb4ffec401b3560b1", "filename": "tests/assembly/asm/hexagon-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fhexagon-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fhexagon-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fhexagon-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/hexagon-types.rs"}, {"sha": "6aa28b062db8a0a9aa5ba8d17630469b6efa617d", "filename": "tests/assembly/asm/mips-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fmips-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fmips-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fmips-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/mips-types.rs"}, {"sha": "2c73b3b098de49eaf1116e915c193e474c1a4dae", "filename": "tests/assembly/asm/msp430-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fmsp430-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fmsp430-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fmsp430-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/msp430-types.rs"}, {"sha": "c319946b5f5c11dc456904941c3c6e13337be323", "filename": "tests/assembly/asm/nvptx-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fnvptx-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fnvptx-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fnvptx-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/nvptx-types.rs"}, {"sha": "e27b005206835ee6de6f1b46cfd4c46169c5469a", "filename": "tests/assembly/asm/powerpc-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fpowerpc-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fpowerpc-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fpowerpc-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/powerpc-types.rs"}, {"sha": "f18ba294d0cff82d709231a36c17cf4a45591711", "filename": "tests/assembly/asm/riscv-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Friscv-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Friscv-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Friscv-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/riscv-types.rs"}, {"sha": "2fb404dd9b280c49240554d5c041b89ec3f3ab90", "filename": "tests/assembly/asm/s390x-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fs390x-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fs390x-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fs390x-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/s390x-types.rs"}, {"sha": "3b1ac1b455ad8c478cf2873c76ee63fd751eae17", "filename": "tests/assembly/asm/wasm-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fwasm-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fwasm-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fwasm-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/wasm-types.rs"}, {"sha": "574fdf12cd0401194a11afd13c5fbd4512929d9c", "filename": "tests/assembly/asm/x86-modifiers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fx86-modifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fx86-modifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fx86-modifiers.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/x86-modifiers.rs"}, {"sha": "81be79cbaac18c25d8e9516bd8bb6327bdb6b92d", "filename": "tests/assembly/asm/x86-types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fx86-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fasm%2Fx86-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fx86-types.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/asm/x86-types.rs"}, {"sha": "d54c1181e1a0c64fc87e7f15fb8c7e80a89fe340", "filename": "tests/assembly/auxiliary/breakpoint-panic-handler.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fauxiliary%2Fbreakpoint-panic-handler.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fauxiliary%2Fbreakpoint-panic-handler.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fauxiliary%2Fbreakpoint-panic-handler.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/auxiliary/breakpoint-panic-handler.rs"}, {"sha": "57f3ee87cdb9d7bad8e324ca310503ee023c8dbd", "filename": "tests/assembly/auxiliary/non-inline-dependency.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fauxiliary%2Fnon-inline-dependency.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fauxiliary%2Fnon-inline-dependency.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fauxiliary%2Fnon-inline-dependency.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/auxiliary/non-inline-dependency.rs"}, {"sha": "f41e6bd55be7ddb2a07a1fbccc8ce65577518f52", "filename": "tests/assembly/dwarf5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fdwarf5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fdwarf5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fdwarf5.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/dwarf5.rs"}, {"sha": "04b5de83423709c09a5980b1ec645712715956bb", "filename": "tests/assembly/is_aligned.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fis_aligned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fis_aligned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fis_aligned.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/is_aligned.rs"}, {"sha": "0ab37a618daaca6796d76e11658394670f006b3d", "filename": "tests/assembly/niche-prefer-zero.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fniche-prefer-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fniche-prefer-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fniche-prefer-zero.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/niche-prefer-zero.rs"}, {"sha": "8a71a6370f112e4ca61f452ced2dfa51ce727e07", "filename": "tests/assembly/nvptx-arch-default.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-arch-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-arch-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-arch-default.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-arch-default.rs"}, {"sha": "b252b450fa77d09fb5bed5cccc511731f75d35bd", "filename": "tests/assembly/nvptx-arch-emit-asm.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-arch-emit-asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-arch-emit-asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-arch-emit-asm.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-arch-emit-asm.rs"}, {"sha": "025a9ad498778565be6811c362d949dac77218f6", "filename": "tests/assembly/nvptx-arch-link-arg.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-arch-link-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-arch-link-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-arch-link-arg.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-arch-link-arg.rs"}, {"sha": "824ee9cd89732163cf4812d1b420d59a89af4947", "filename": "tests/assembly/nvptx-arch-target-cpu.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-arch-target-cpu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-arch-target-cpu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-arch-target-cpu.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-arch-target-cpu.rs"}, {"sha": "f96398064492883754d1cefdf6d846fab535a6a0", "filename": "tests/assembly/nvptx-atomics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-atomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-atomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-atomics.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-atomics.rs"}, {"sha": "0004fcea7a20b32786ccbf6376fa1fb542d55b7a", "filename": "tests/assembly/nvptx-internalizing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-internalizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-internalizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-internalizing.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-internalizing.rs"}, {"sha": "5bf44f949fdf666a4e346a1a046c062a48cceaf0", "filename": "tests/assembly/nvptx-kernel-abi/nvptx-kernel-args-abi-v7.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-kernel-abi%2Fnvptx-kernel-args-abi-v7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-kernel-abi%2Fnvptx-kernel-args-abi-v7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-kernel-abi%2Fnvptx-kernel-args-abi-v7.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-kernel-abi/nvptx-kernel-args-abi-v7.rs"}, {"sha": "64b9c2f17aa7df6fa525db944bbb41e42c06ed3b", "filename": "tests/assembly/nvptx-linking-binary.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-linking-binary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-linking-binary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-linking-binary.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-linking-binary.rs"}, {"sha": "bdbc30ea97fe2b157b22ffc2c0a2625beecf4912", "filename": "tests/assembly/nvptx-linking-cdylib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-linking-cdylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-linking-cdylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-linking-cdylib.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-linking-cdylib.rs"}, {"sha": "80bb04fc0f2fbc6b268cd4ee855ea941bb7cac17", "filename": "tests/assembly/nvptx-safe-naming.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-safe-naming.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fnvptx-safe-naming.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fnvptx-safe-naming.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/nvptx-safe-naming.rs"}, {"sha": "499d4e69867174d48625d32bd936a6a605b73aa5", "filename": "tests/assembly/panic-no-unwind-no-uwtable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fpanic-no-unwind-no-uwtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fpanic-no-unwind-no-uwtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fpanic-no-unwind-no-uwtable.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/panic-no-unwind-no-uwtable.rs"}, {"sha": "8eed72b2fca6963310ed25a09d937af02e6571e7", "filename": "tests/assembly/panic-unwind-no-uwtable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fpanic-unwind-no-uwtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fpanic-unwind-no-uwtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fpanic-unwind-no-uwtable.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/panic-unwind-no-uwtable.rs"}, {"sha": "72471ffcdb0cb3f1f2b129b6c50497de39617737", "filename": "tests/assembly/pic-relocation-model.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fpic-relocation-model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fpic-relocation-model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fpic-relocation-model.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/pic-relocation-model.rs"}, {"sha": "e40797e038d4b43f411d7e8849dd0cf7c44a056d", "filename": "tests/assembly/pie-relocation-model.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fpie-relocation-model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fpie-relocation-model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fpie-relocation-model.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/pie-relocation-model.rs"}, {"sha": "6309dd420ffa4d5c8c42915fdbfd6a9e86b43924", "filename": "tests/assembly/sparc-struct-abi.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fsparc-struct-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fsparc-struct-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fsparc-struct-abi.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/sparc-struct-abi.rs"}, {"sha": "7c2b605509053c7fb4d8e974d50973203b038cc8", "filename": "tests/assembly/stack-protector/stack-protector-heuristics-effect.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fstack-protector%2Fstack-protector-heuristics-effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fstack-protector%2Fstack-protector-heuristics-effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fstack-protector%2Fstack-protector-heuristics-effect.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/stack-protector/stack-protector-heuristics-effect.rs"}, {"sha": "d5b48105ef26716dff4acbcb1e9c2dbe3b411062", "filename": "tests/assembly/stack-protector/stack-protector-target-support.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fstack-protector%2Fstack-protector-target-support.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fstack-protector%2Fstack-protector-target-support.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fstack-protector%2Fstack-protector-target-support.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/stack-protector/stack-protector-target-support.rs"}, {"sha": "faa2e3952096dbe5571619770419b9fb385567b5", "filename": "tests/assembly/static-relocation-model.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fstatic-relocation-model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fstatic-relocation-model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fstatic-relocation-model.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/static-relocation-model.rs"}, {"sha": "01f1957d5f6674aa7842ab451982fcf8d2b640a1", "filename": "tests/assembly/strict_provenance.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fstrict_provenance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fstrict_provenance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fstrict_provenance.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/strict_provenance.rs"}, {"sha": "5c5d93863d71e70a1a1f9841bdd185e93ba5179a", "filename": "tests/assembly/target-feature-multiple.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Ftarget-feature-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Ftarget-feature-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Ftarget-feature-multiple.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -14,7 +14,7 @@\n // > LLVM ERROR: Cannot select: 0x7f00f400c010: i32,i32,ch = X86ISD::RDSEED 0x7f00f400bfa8:2\n // > In function: foo\n //\n-// See also src/test/codegen/target-feature-overrides.rs\n+// See also tests/codegen/target-feature-overrides.rs\n #![feature(no_core, lang_items, link_llvm_intrinsics, abi_unadjusted)]\n #![crate_type = \"lib\"]\n #![no_core]", "previous_filename": "src/test/assembly/target-feature-multiple.rs"}, {"sha": "c7141fb208a0d940031e26f1fd0633b9684430e3", "filename": "tests/assembly/x86-stack-probes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86-stack-probes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86-stack-probes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fx86-stack-probes.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/x86-stack-probes.rs"}, {"sha": "0f3b465d08d4f13bdb831217333da782521f86a2", "filename": "tests/assembly/x86_64-floating-point-clamp.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-floating-point-clamp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-floating-point-clamp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fx86_64-floating-point-clamp.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/x86_64-floating-point-clamp.rs"}, {"sha": "79d82cf70d381374af922e500e62f26b1cab45ca", "filename": "tests/assembly/x86_64-fortanix-unknown-sgx-lvi-generic-load.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-generic-load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-generic-load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-generic-load.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/x86_64-fortanix-unknown-sgx-lvi-generic-load.rs"}, {"sha": "a21ef6b75894e441a60c2f965d030be0d486d99c", "filename": "tests/assembly/x86_64-fortanix-unknown-sgx-lvi-generic-ret.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-generic-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-generic-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-generic-ret.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/x86_64-fortanix-unknown-sgx-lvi-generic-ret.rs"}, {"sha": "c316379d5b12e4be84bc532854616db68ffd23a2", "filename": "tests/assembly/x86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/x86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs"}, {"sha": "bedcded731d95a015962e30fb636e6a58f67ac21", "filename": "tests/assembly/x86_64-naked-fn-no-cet-prolog.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-naked-fn-no-cet-prolog.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-naked-fn-no-cet-prolog.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fx86_64-naked-fn-no-cet-prolog.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/x86_64-naked-fn-no-cet-prolog.rs"}, {"sha": "007c3591a4a6fda0a32241d71ef21a8389df80ac", "filename": "tests/assembly/x86_64-no-jump-tables.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-no-jump-tables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-no-jump-tables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fx86_64-no-jump-tables.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/x86_64-no-jump-tables.rs"}, {"sha": "cdbf057b80bdd6a1c93a9809a27cb943204f0007", "filename": "tests/assembly/x86_64-sse_crc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-sse_crc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fassembly%2Fx86_64-sse_crc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fx86_64-sse_crc.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/assembly/x86_64-sse_crc.rs"}, {"sha": "977ea487a9804b229f83a93402020ca65487b124", "filename": "tests/auxiliary/rust_test_helpers.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fauxiliary%2Frust_test_helpers.c", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fauxiliary%2Frust_test_helpers.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fauxiliary%2Frust_test_helpers.c?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/auxiliary/rust_test_helpers.c"}, {"sha": "8bafb95bc16d9e31a002f71fe0ed482f89166ecd", "filename": "tests/codegen-units/item-collection/asm-sym.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fasm-sym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fasm-sym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fasm-sym.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/asm-sym.rs"}, {"sha": "ecea26dc4be46280a5de778fcb5725262b136835", "filename": "tests/codegen-units/item-collection/auxiliary/cgu_export_trait_method.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fauxiliary%2Fcgu_export_trait_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fauxiliary%2Fcgu_export_trait_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fauxiliary%2Fcgu_export_trait_method.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/auxiliary/cgu_export_trait_method.rs"}, {"sha": "05ea0a89ff29c79a35eae7e50496016a15e544ed", "filename": "tests/codegen-units/item-collection/auxiliary/cgu_extern_closures.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fauxiliary%2Fcgu_extern_closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fauxiliary%2Fcgu_extern_closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fauxiliary%2Fcgu_extern_closures.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/auxiliary/cgu_extern_closures.rs"}, {"sha": "3926f295742bca276d3a18506478973a51731486", "filename": "tests/codegen-units/item-collection/auxiliary/cgu_generic_function.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fauxiliary%2Fcgu_generic_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fauxiliary%2Fcgu_generic_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fauxiliary%2Fcgu_generic_function.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/auxiliary/cgu_generic_function.rs"}, {"sha": "6af344fab15125428d6bc0251eb3123a7377e836", "filename": "tests/codegen-units/item-collection/cross-crate-closures.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fcross-crate-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fcross-crate-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fcross-crate-closures.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/cross-crate-closures.rs"}, {"sha": "7289ceee95b1c28b850ac097ab6765c4ff1adc4a", "filename": "tests/codegen-units/item-collection/cross-crate-generic-functions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fcross-crate-generic-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fcross-crate-generic-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fcross-crate-generic-functions.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/cross-crate-generic-functions.rs"}, {"sha": "dc0984c8a981510c4c55fb37ea81fe25c7711038", "filename": "tests/codegen-units/item-collection/cross-crate-trait-method.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fcross-crate-trait-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fcross-crate-trait-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fcross-crate-trait-method.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/cross-crate-trait-method.rs"}, {"sha": "a3f1fb5e7a25cac05750c5a7f00169387f463eb3", "filename": "tests/codegen-units/item-collection/drop_in_place_intrinsic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fdrop_in_place_intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fdrop_in_place_intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fdrop_in_place_intrinsic.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/drop_in_place_intrinsic.rs"}, {"sha": "ea500c3111a2e877109b43b3215b7bf84295e3ae", "filename": "tests/codegen-units/item-collection/function-as-argument.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ffunction-as-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ffunction-as-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Ffunction-as-argument.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/function-as-argument.rs"}, {"sha": "6df4ff7e58bb2839493bbc39a29656ca26190210", "filename": "tests/codegen-units/item-collection/generic-drop-glue.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fgeneric-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fgeneric-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fgeneric-drop-glue.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/generic-drop-glue.rs"}, {"sha": "04383bb8edb7c9eb0be4fc8f6acd19a673f8c93f", "filename": "tests/codegen-units/item-collection/generic-functions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fgeneric-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fgeneric-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fgeneric-functions.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/generic-functions.rs"}, {"sha": "4260230c2c674113235a37263d714699b6da4264", "filename": "tests/codegen-units/item-collection/generic-impl.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fgeneric-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fgeneric-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fgeneric-impl.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/generic-impl.rs"}, {"sha": "c01398eb2341c6262d9d0bdbd1b769ba33934169", "filename": "tests/codegen-units/item-collection/impl-in-non-instantiated-generic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fimpl-in-non-instantiated-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fimpl-in-non-instantiated-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fimpl-in-non-instantiated-generic.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/impl-in-non-instantiated-generic.rs"}, {"sha": "abec7ad50aed6c4ec9f1abc1e5a75b4be2d16129", "filename": "tests/codegen-units/item-collection/implicit-panic-call.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fimplicit-panic-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fimplicit-panic-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fimplicit-panic-call.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/implicit-panic-call.rs"}, {"sha": "e78226d4083a46c503c6a749fe8e5c9db824b037", "filename": "tests/codegen-units/item-collection/instantiation-through-vtable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/instantiation-through-vtable.rs"}, {"sha": "d37d7f7d9b2b33f1030e92a7fbd7d0725724a9b0", "filename": "tests/codegen-units/item-collection/items-within-generic-items.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fitems-within-generic-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fitems-within-generic-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fitems-within-generic-items.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/items-within-generic-items.rs"}, {"sha": "379fbcf2613e08d3fc910a262359057aa3a13945", "filename": "tests/codegen-units/item-collection/non-generic-closures.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fnon-generic-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fnon-generic-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fnon-generic-closures.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/non-generic-closures.rs"}, {"sha": "06f76f7db3660302acd34c89fa1eef87d7e6dd92", "filename": "tests/codegen-units/item-collection/non-generic-drop-glue.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fnon-generic-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fnon-generic-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fnon-generic-drop-glue.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/non-generic-drop-glue.rs"}, {"sha": "092e64562c525d3d1108857077e8c78ca535b636", "filename": "tests/codegen-units/item-collection/non-generic-functions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fnon-generic-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fnon-generic-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fnon-generic-functions.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/non-generic-functions.rs"}, {"sha": "2be7eba1d84a71733c5d2465f29212332a3499b4", "filename": "tests/codegen-units/item-collection/overloaded-operators.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Foverloaded-operators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Foverloaded-operators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Foverloaded-operators.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/overloaded-operators.rs"}, {"sha": "287ec8f24ebc3b73a6952bf5225601649329fc69", "filename": "tests/codegen-units/item-collection/static-init.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fstatic-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fstatic-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fstatic-init.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/static-init.rs"}, {"sha": "49a8d3dff639433f202f0593dead4bf2d37bd8a0", "filename": "tests/codegen-units/item-collection/statics-and-consts.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fstatics-and-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Fstatics-and-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Fstatics-and-consts.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/statics-and-consts.rs"}, {"sha": "a816cb0324135782a6dcc7b26078acdf75b3661f", "filename": "tests/codegen-units/item-collection/trait-implementations.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftrait-implementations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftrait-implementations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Ftrait-implementations.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/trait-implementations.rs"}, {"sha": "235569728a2e01f62f09a4832048df3910fef271", "filename": "tests/codegen-units/item-collection/trait-method-as-argument.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftrait-method-as-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftrait-method-as-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Ftrait-method-as-argument.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/trait-method-as-argument.rs"}, {"sha": "bfcdb6fa142bcde2869a386012f129bce586e9dd", "filename": "tests/codegen-units/item-collection/trait-method-default-impl.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftrait-method-default-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftrait-method-default-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Ftrait-method-default-impl.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/trait-method-default-impl.rs"}, {"sha": "e286c800b7cae4c048253ee84d785a1235e78e25", "filename": "tests/codegen-units/item-collection/transitive-drop-glue.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftransitive-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftransitive-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Ftransitive-drop-glue.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/transitive-drop-glue.rs"}, {"sha": "ae3b2e081ffaea269bc174fe0b5ef4d6ceb064fc", "filename": "tests/codegen-units/item-collection/tuple-drop-glue.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftuple-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Ftuple-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Ftuple-drop-glue.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/tuple-drop-glue.rs"}, {"sha": "17b92eae00d0680e9eea740db9a87bccc8f82043", "filename": "tests/codegen-units/item-collection/unreferenced-const-fn.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Funreferenced-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Funreferenced-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Funreferenced-const-fn.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/unreferenced-const-fn.rs"}, {"sha": "4d095e4d6c7e99753222ec0cc3a01ddc58583196", "filename": "tests/codegen-units/item-collection/unreferenced-inline-function.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Funreferenced-inline-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Funreferenced-inline-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Funreferenced-inline-function.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/unreferenced-inline-function.rs"}, {"sha": "111a7231209a15f41ed394937ac4d4e6fdf03a40", "filename": "tests/codegen-units/item-collection/unsizing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Funsizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Funsizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Funsizing.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/unsizing.rs"}, {"sha": "561dc1a5c0763c617a7eee9fa8c90bc2f2650e77", "filename": "tests/codegen-units/item-collection/unused-traits-and-generics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Funused-traits-and-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fitem-collection%2Funused-traits-and-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fitem-collection%2Funused-traits-and-generics.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/item-collection/unused-traits-and-generics.rs"}, {"sha": "4a3a63cc1b4adc16107dbcdb232b3f861bc6e57c", "filename": "tests/codegen-units/partitioning/auxiliary/cgu_explicit_inlining.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fcgu_explicit_inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fcgu_explicit_inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fcgu_explicit_inlining.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/auxiliary/cgu_explicit_inlining.rs"}, {"sha": "b5fec23375a5e6c8a67925691d73972fc777cd05", "filename": "tests/codegen-units/partitioning/auxiliary/cgu_extern_drop_glue.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fcgu_extern_drop_glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fcgu_extern_drop_glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fcgu_extern_drop_glue.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/auxiliary/cgu_extern_drop_glue.rs"}, {"sha": "3926f295742bca276d3a18506478973a51731486", "filename": "tests/codegen-units/partitioning/auxiliary/cgu_generic_function.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fcgu_generic_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fcgu_generic_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fcgu_generic_function.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/auxiliary/cgu_generic_function.rs"}, {"sha": "ffbd0dc54844913a1f562c5b05c707d8879337c1", "filename": "tests/codegen-units/partitioning/auxiliary/shared_generics_aux.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fshared_generics_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fshared_generics_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fauxiliary%2Fshared_generics_aux.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/auxiliary/shared_generics_aux.rs"}, {"sha": "c73d2a10a967bd3911425714e414af06864a340e", "filename": "tests/codegen-units/partitioning/extern-drop-glue.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/extern-drop-glue.rs"}, {"sha": "638ec079a0bce75a454e29f37fdf4e72f984cc2f", "filename": "tests/codegen-units/partitioning/extern-generic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/extern-generic.rs"}, {"sha": "118b7bdf4da8b9ee0c7a6508cf17089fd6b134a1", "filename": "tests/codegen-units/partitioning/incremental-merging.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fincremental-merging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fincremental-merging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fincremental-merging.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/incremental-merging.rs"}, {"sha": "1cc21632e4818ff8b6980ae76102a97b47baa349", "filename": "tests/codegen-units/partitioning/inlining-from-extern-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/inlining-from-extern-crate.rs"}, {"sha": "2fd853a44b8ffc12d97d6d0342e426bf10ee0fee", "filename": "tests/codegen-units/partitioning/local-drop-glue.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/local-drop-glue.rs"}, {"sha": "38aec7291df3f45817157a5f9d415493bb9bbe18", "filename": "tests/codegen-units/partitioning/local-generic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/local-generic.rs"}, {"sha": "318f0c28a5981a4a44cde8fb580cf2f15de2b111", "filename": "tests/codegen-units/partitioning/local-inlining-but-not-all.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-inlining-but-not-all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-inlining-but-not-all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Flocal-inlining-but-not-all.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/local-inlining-but-not-all.rs"}, {"sha": "841a428e9dd2ffb9ef0f473737571a89b7b259a9", "filename": "tests/codegen-units/partitioning/local-inlining.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/local-inlining.rs"}, {"sha": "03c37954d151363e2252e156cc9c2c1f104ab012", "filename": "tests/codegen-units/partitioning/local-transitive-inlining.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/local-transitive-inlining.rs"}, {"sha": "8220dc12ee0c6ac7dc44f4258edda4e8e45dc997", "filename": "tests/codegen-units/partitioning/methods-are-with-self-type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/methods-are-with-self-type.rs"}, {"sha": "ce7fe9c3a4ff3ae4c1fe30fed39c774d4f329315", "filename": "tests/codegen-units/partitioning/regular-modules.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/regular-modules.rs"}, {"sha": "ebe96bfb746af1962dcad076d453324b837f445e", "filename": "tests/codegen-units/partitioning/shared-generics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fshared-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fshared-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fshared-generics.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/shared-generics.rs"}, {"sha": "b11d6696dc00ad80288c5d78b0cc93f8d4163b7c", "filename": "tests/codegen-units/partitioning/statics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fstatics.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/statics.rs"}, {"sha": "cedcca804b36581722e5c75e3d256ec64b2114b9", "filename": "tests/codegen-units/partitioning/vtable-through-const.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/partitioning/vtable-through-const.rs"}, {"sha": "c2e06d067dc6ef0bdacb5d70fa594ed5c7f1801d", "filename": "tests/codegen-units/polymorphization/unused_type_parameters.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpolymorphization%2Funused_type_parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen-units%2Fpolymorphization%2Funused_type_parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpolymorphization%2Funused_type_parameters.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen-units/polymorphization/unused_type_parameters.rs"}, {"sha": "8f2daaafcc77a8cb71a68ad2a4f0a0cadea72f55", "filename": "tests/codegen/README.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2FREADME.md?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/README.md"}, {"sha": "9061d7432a3fa862018919df76baa71f36febb2e", "filename": "tests/codegen/abi-efiapi.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-efiapi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-efiapi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fabi-efiapi.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/abi-efiapi.rs"}, {"sha": "4ed491dfb2b43b21fa32e85456761f963222a90f", "filename": "tests/codegen/abi-main-signature-16bit-c-int.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-main-signature-16bit-c-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-main-signature-16bit-c-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fabi-main-signature-16bit-c-int.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/abi-main-signature-16bit-c-int.rs"}, {"sha": "7f22ddcfc12fff34b8c746b8fb2ef24805ebc9b5", "filename": "tests/codegen/abi-main-signature-32bit-c-int.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-main-signature-32bit-c-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-main-signature-32bit-c-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fabi-main-signature-32bit-c-int.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/abi-main-signature-32bit-c-int.rs"}, {"sha": "23ade3c7216d3c46070fbc49556281bbdbfbab02", "filename": "tests/codegen/abi-repr-ext.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-repr-ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-repr-ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fabi-repr-ext.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/abi-repr-ext.rs"}, {"sha": "dfc312279083d6fe576440b4e6fa7bb796651ec0", "filename": "tests/codegen/abi-sysv64.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-sysv64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-sysv64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fabi-sysv64.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/abi-sysv64.rs"}, {"sha": "d612f603e4fea0d27e64b0e4f17b914f565a195d", "filename": "tests/codegen/abi-x86-interrupt.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-x86-interrupt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-x86-interrupt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fabi-x86-interrupt.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/abi-x86-interrupt.rs"}, {"sha": "84e06023e9c3f48f6311760b5bc43b919883f904", "filename": "tests/codegen/abi-x86_64_sysv.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-x86_64_sysv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fabi-x86_64_sysv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fabi-x86_64_sysv.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/abi-x86_64_sysv.rs"}, {"sha": "39880c9341f4f96aea9585835053c12f00f93775", "filename": "tests/codegen/adjustments.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fadjustments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fadjustments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fadjustments.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/adjustments.rs"}, {"sha": "70f09ace0062cd9bc0e3052417515f96d70f9360", "filename": "tests/codegen/align-enum.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Falign-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Falign-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Falign-enum.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/align-enum.rs"}, {"sha": "c5886cf28081a3b6186c5bb01ca454276a53f803", "filename": "tests/codegen/align-fn.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Falign-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Falign-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Falign-fn.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/align-fn.rs"}, {"sha": "a2f47354b2b37afda843d81f8f767cad7ed049b0", "filename": "tests/codegen/align-struct.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Falign-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Falign-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Falign-struct.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/align-struct.rs"}, {"sha": "c3ffaeb9547b3c20a43168cc88d3aed04cbb29d3", "filename": "tests/codegen/alloc-optimisation.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Falloc-optimisation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Falloc-optimisation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Falloc-optimisation.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/alloc-optimisation.rs"}, {"sha": "0d42963bcd2ceaba9b2d6dd426716cde6ff987e6", "filename": "tests/codegen/array-clone.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Farray-clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Farray-clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Farray-clone.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/array-clone.rs"}, {"sha": "cd5e82a9205c1052420006085fb00f4fa35a43fb", "filename": "tests/codegen/array-equality.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Farray-equality.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Farray-equality.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Farray-equality.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/array-equality.rs"}, {"sha": "f70caea2fb9e26417730742ec11bff205e4f536a", "filename": "tests/codegen/asm-clobber_abi.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-clobber_abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-clobber_abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasm-clobber_abi.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/asm-clobber_abi.rs"}, {"sha": "2ef10a2837d22621a755662122adc7ddb3de97a3", "filename": "tests/codegen/asm-clobbers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-clobbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-clobbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasm-clobbers.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/asm-clobbers.rs"}, {"sha": "c97933035d101898a690d27ab9c62388d2649422", "filename": "tests/codegen/asm-may_unwind.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-may_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-may_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasm-may_unwind.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/asm-may_unwind.rs"}, {"sha": "1ae37d627d67147700c392f5906f5117a866a165", "filename": "tests/codegen/asm-multiple-options.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-multiple-options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-multiple-options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasm-multiple-options.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/asm-multiple-options.rs"}, {"sha": "963b60cfe35b706b9c34baf64f3e61f2ceac3941", "filename": "tests/codegen/asm-options.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasm-options.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/asm-options.rs"}, {"sha": "10b20ba6beb0a614cdb53a13ceed46fc8fa97978", "filename": "tests/codegen/asm-powerpc-clobbers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-powerpc-clobbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-powerpc-clobbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasm-powerpc-clobbers.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/asm-powerpc-clobbers.rs"}, {"sha": "6dcacd08cacdd94badb77f24053ef36edfa71fdc", "filename": "tests/codegen/asm-sanitize-llvm.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-sanitize-llvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-sanitize-llvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasm-sanitize-llvm.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/asm-sanitize-llvm.rs"}, {"sha": "ac30e18ec52346791a68bf118c4dc26bc966bd5b", "filename": "tests/codegen/asm-target-clobbers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-target-clobbers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasm-target-clobbers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasm-target-clobbers.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/asm-target-clobbers.rs"}, {"sha": "bc2686158140106026ca75b7895d0ce2e644c709", "filename": "tests/codegen/async-fn-debug-awaitee-field.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasync-fn-debug-awaitee-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasync-fn-debug-awaitee-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasync-fn-debug-awaitee-field.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/async-fn-debug-awaitee-field.rs"}, {"sha": "73c652c9dd15ea3a87323f63628b2f5f356309e7", "filename": "tests/codegen/async-fn-debug-msvc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasync-fn-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasync-fn-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasync-fn-debug-msvc.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/async-fn-debug-msvc.rs"}, {"sha": "9f6058a71b3433a4ff12622850fae3bda78ad29b", "filename": "tests/codegen/async-fn-debug.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasync-fn-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fasync-fn-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fasync-fn-debug.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/async-fn-debug.rs"}, {"sha": "d2bc618dfc528f35318a093ee892b6e421c2b26c", "filename": "tests/codegen/atomic-operations.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fatomic-operations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fatomic-operations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fatomic-operations.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/atomic-operations.rs"}, {"sha": "6b09c8fc99860c8c5bd2ea30c325e3f91b5e5abe", "filename": "tests/codegen/autovectorize-f32x4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fautovectorize-f32x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fautovectorize-f32x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fautovectorize-f32x4.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/autovectorize-f32x4.rs"}, {"sha": "edc48351869a6a2e7192d43e99ccca138ec8f681", "filename": "tests/codegen/auxiliary/extern_decl.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fauxiliary%2Fextern_decl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fauxiliary%2Fextern_decl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fauxiliary%2Fextern_decl.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/auxiliary/extern_decl.rs"}, {"sha": "73c5aee3387887d721c154ce416d21a1cbc53887", "filename": "tests/codegen/auxiliary/nounwind.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fauxiliary%2Fnounwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fauxiliary%2Fnounwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fauxiliary%2Fnounwind.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/auxiliary/nounwind.rs"}, {"sha": "afb0dc42f443a8938cce94c2ca301a1cb1a7a9f3", "filename": "tests/codegen/auxiliary/static_dllimport_aux.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fauxiliary%2Fstatic_dllimport_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fauxiliary%2Fstatic_dllimport_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fauxiliary%2Fstatic_dllimport_aux.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/auxiliary/static_dllimport_aux.rs"}, {"sha": "bebaa7754dd5a55dd061beac22bbdb5a63b8661e", "filename": "tests/codegen/auxiliary/thread_local_aux.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fauxiliary%2Fthread_local_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fauxiliary%2Fthread_local_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fauxiliary%2Fthread_local_aux.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/auxiliary/thread_local_aux.rs"}, {"sha": "e9740e30da483d6a5231c8e47a17fe2a678d015a", "filename": "tests/codegen/avr/avr-func-addrspace.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Favr%2Favr-func-addrspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Favr%2Favr-func-addrspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Favr%2Favr-func-addrspace.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/avr/avr-func-addrspace.rs"}, {"sha": "c1766a4a44ae122689302ab5f749789e2f8fd78b", "filename": "tests/codegen/binary-search-index-no-bound-check.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbinary-search-index-no-bound-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbinary-search-index-no-bound-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fbinary-search-index-no-bound-check.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/binary-search-index-no-bound-check.rs"}, {"sha": "5090f7c378c3662f23071ee6edd9b7ee2ecb1503", "filename": "tests/codegen/bool-cmp.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbool-cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbool-cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fbool-cmp.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/bool-cmp.rs"}, {"sha": "7b5ae894311eff15f8d2e9184a23fbe426a230ac", "filename": "tests/codegen/box-maybe-uninit-llvm14.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbox-maybe-uninit-llvm14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbox-maybe-uninit-llvm14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fbox-maybe-uninit-llvm14.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/box-maybe-uninit-llvm14.rs"}, {"sha": "c82b56a71f5cfde9d3c9a90f2143841536110119", "filename": "tests/codegen/box-maybe-uninit.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbox-maybe-uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbox-maybe-uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fbox-maybe-uninit.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/box-maybe-uninit.rs"}, {"sha": "c68bffd03e289e445ea86cf3aff04ddea704e05a", "filename": "tests/codegen/bpf-alu32.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbpf-alu32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbpf-alu32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fbpf-alu32.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/bpf-alu32.rs"}, {"sha": "994c71b261982e599b51721d8134f04aea4878dc", "filename": "tests/codegen/branch-protection.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbranch-protection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fbranch-protection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fbranch-protection.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/branch-protection.rs"}, {"sha": "4c61c4fcf68d3289d8bc3a4a4eda52256ed43cfb", "filename": "tests/codegen/c-variadic-copy.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fc-variadic-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fc-variadic-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fc-variadic-copy.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/c-variadic-copy.rs"}, {"sha": "969dce80f587153ccbda12de9f3fc27a7f528fb3", "filename": "tests/codegen/c-variadic-opt.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fc-variadic-opt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fc-variadic-opt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fc-variadic-opt.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/c-variadic-opt.rs"}, {"sha": "a5be56c47be81e131c5ec114531dbc4f56f76804", "filename": "tests/codegen/c-variadic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fc-variadic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fc-variadic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fc-variadic.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/c-variadic.rs"}, {"sha": "998099c23909855e163986cbd410adc5828307c7", "filename": "tests/codegen/call-llvm-intrinsics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcall-llvm-intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcall-llvm-intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcall-llvm-intrinsics.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/call-llvm-intrinsics.rs"}, {"sha": "1c30c08d3b2e2ce80aa93c8e95269521f7792c45", "filename": "tests/codegen/call-metadata.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcall-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcall-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcall-metadata.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/call-metadata.rs"}, {"sha": "b90ef104ce72a3fd2c2a28744066d545c42d6b34", "filename": "tests/codegen/catch-unwind.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcatch-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcatch-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcatch-unwind.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/catch-unwind.rs"}, {"sha": "9118afd43d88b3ee09098def716a4dd55353f8ac", "filename": "tests/codegen/cdylib-external-inline-fns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcdylib-external-inline-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcdylib-external-inline-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcdylib-external-inline-fns.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/cdylib-external-inline-fns.rs"}, {"sha": "ccbc863f57177cf7e156f61565aec96481c27b72", "filename": "tests/codegen/cf-protection.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcf-protection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcf-protection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcf-protection.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/cf-protection.rs"}, {"sha": "571a2654bcbfd2f6d7f6543479d009f6abe3cad7", "filename": "tests/codegen/cfguard-checks.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcfguard-checks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcfguard-checks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcfguard-checks.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/cfguard-checks.rs"}, {"sha": "c3f8f4116819ce2bf420dce85a50b7c7926dc24c", "filename": "tests/codegen/cfguard-disabled.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcfguard-disabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcfguard-disabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcfguard-disabled.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/cfguard-disabled.rs"}, {"sha": "3847c3e81ed7a6d78f2e3e6b50741fb549c68431", "filename": "tests/codegen/cfguard-nochecks.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcfguard-nochecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcfguard-nochecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcfguard-nochecks.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/cfguard-nochecks.rs"}, {"sha": "6278a951e35f1565151946520f4919088e9b20eb", "filename": "tests/codegen/cfguard-non-msvc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcfguard-non-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcfguard-non-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcfguard-non-msvc.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/cfguard-non-msvc.rs"}, {"sha": "2328f5feb4e1ca6d12df76f3e2489cef3883413e", "filename": "tests/codegen/codemodels.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcodemodels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcodemodels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcodemodels.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/codemodels.rs"}, {"sha": "d645ca6b13aed21414771c3b2ed3222633b025f3", "filename": "tests/codegen/coercions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcoercions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcoercions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcoercions.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/coercions.rs"}, {"sha": "71d49478bfc74074b3a14dfe976f0b9cd1a21949", "filename": "tests/codegen/cold-call-declare-and-call.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcold-call-declare-and-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcold-call-declare-and-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcold-call-declare-and-call.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/cold-call-declare-and-call.rs"}, {"sha": "5cf6c3ac0a2333f55db87a00349ae93ae0ee9fef", "filename": "tests/codegen/comparison-operators-newtype.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcomparison-operators-newtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fcomparison-operators-newtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fcomparison-operators-newtype.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/comparison-operators-newtype.rs"}, {"sha": "260d9de867087696af0675fb36d1dab22c2aa68c", "filename": "tests/codegen/consts.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fconsts.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/consts.rs"}, {"sha": "3812ef44ff2ac3e1f5c606d59b07a7dcd0a27314", "filename": "tests/codegen/dealloc-no-unwind.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdealloc-no-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdealloc-no-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdealloc-no-unwind.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/dealloc-no-unwind.rs"}, {"sha": "f6c1062e0fc6cee420a54df67690129bf5efb884", "filename": "tests/codegen/debug-alignment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-alignment.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/debug-alignment.rs"}, {"sha": "aad8b372a8a928d1b6327e8e0b6ff1677f0a87df", "filename": "tests/codegen/debug-column-msvc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-column-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-column-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-column-msvc.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/debug-column-msvc.rs"}, {"sha": "e61642b8e1be2ef2446e843a3f7039cb22d6534d", "filename": "tests/codegen/debug-column.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-column.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-column.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-column.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/debug-column.rs"}, {"sha": "3661be046d0f7bf581df4afd99795df6ce102107", "filename": "tests/codegen/debug-compile-unit-path.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-compile-unit-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-compile-unit-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-compile-unit-path.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/debug-compile-unit-path.rs"}, {"sha": "9011a7da51db8e72e8f755c953b45f6ae4199818", "filename": "tests/codegen/debug-linkage-name.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-linkage-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-linkage-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-linkage-name.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/debug-linkage-name.rs"}, {"sha": "bdd312878ec887bb5ade80915bdde69fce5060f7", "filename": "tests/codegen/debug-vtable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-vtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebug-vtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-vtable.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/debug-vtable.rs"}, {"sha": "b29f8b4a029d08ff0cf75a4668584d3f05d1318b", "filename": "tests/codegen/debuginfo-generic-closure-env-names.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebuginfo-generic-closure-env-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdebuginfo-generic-closure-env-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebuginfo-generic-closure-env-names.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/debuginfo-generic-closure-env-names.rs"}, {"sha": "153046eef3c75299c132da9e1c10b6d8dcee63a1", "filename": "tests/codegen/deduced-param-attrs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdeduced-param-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdeduced-param-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdeduced-param-attrs.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/deduced-param-attrs.rs"}, {"sha": "5d77d3f14bb12bd9066a362ec6acdbbdfab0f062", "filename": "tests/codegen/default-requires-uwtable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdefault-requires-uwtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdefault-requires-uwtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdefault-requires-uwtable.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/default-requires-uwtable.rs"}, {"sha": "113a164f1457f37d69f49b0884754dbcbeddb8e4", "filename": "tests/codegen/dllimports/auxiliary/dummy.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdllimports%2Fauxiliary%2Fdummy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdllimports%2Fauxiliary%2Fdummy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdllimports%2Fauxiliary%2Fdummy.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/dllimports/auxiliary/dummy.rs"}, {"sha": "7aa90920a3ed1a4ca583899cde39094f1cc733d0", "filename": "tests/codegen/dllimports/auxiliary/wrapper.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdllimports%2Fauxiliary%2Fwrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdllimports%2Fauxiliary%2Fwrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdllimports%2Fauxiliary%2Fwrapper.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/dllimports/auxiliary/wrapper.rs"}, {"sha": "ab599992ffd79d70de76b07846caf2c999cc7567", "filename": "tests/codegen/dllimports/main.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdllimports%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdllimports%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdllimports%2Fmain.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/dllimports/main.rs"}, {"sha": "994028271583f09c7e6a6f97fee3a55661ec3027", "filename": "tests/codegen/drop.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdrop.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/drop.rs"}, {"sha": "54f6e7f992fe65f3bdbdfa3d953ada730ab4b3dd", "filename": "tests/codegen/dst-vtable-align-nonzero.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdst-vtable-align-nonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdst-vtable-align-nonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdst-vtable-align-nonzero.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/dst-vtable-align-nonzero.rs"}, {"sha": "671c8abdebd275ba60960fa7033a55308740e025", "filename": "tests/codegen/dst-vtable-size-range.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdst-vtable-size-range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fdst-vtable-size-range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdst-vtable-size-range.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/dst-vtable-size-range.rs"}, {"sha": "aa66c2ed08edb777fc24e53c76b870c99b93026d", "filename": "tests/codegen/enum-bounds-check-derived-idx.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-bounds-check-derived-idx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-bounds-check-derived-idx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-bounds-check-derived-idx.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-bounds-check-derived-idx.rs"}, {"sha": "b26945bc54940642ee5fc04aa5600bd13a8f87b4", "filename": "tests/codegen/enum-bounds-check-issue-13926.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-bounds-check-issue-13926.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-bounds-check-issue-13926.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-bounds-check-issue-13926.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-bounds-check-issue-13926.rs"}, {"sha": "32fdc4a5f4fab96d020626640c495e6871abe95e", "filename": "tests/codegen/enum-bounds-check-issue-82871.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-bounds-check-issue-82871.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-bounds-check-issue-82871.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-bounds-check-issue-82871.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-bounds-check-issue-82871.rs"}, {"sha": "17322d5911b9228ab1e66f35e4800d16f5b48613", "filename": "tests/codegen/enum-bounds-check.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-bounds-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-bounds-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-bounds-check.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-bounds-check.rs"}, {"sha": "1e369a2c4e6a7972d8edd43c290f5f8a97df6d31", "filename": "tests/codegen/enum-debug-clike.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-debug-clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-debug-clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-debug-clike.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-debug-clike.rs"}, {"sha": "9c72ad9d248a0d3b703148a179bf7e239c3f2212", "filename": "tests/codegen/enum-debug-niche-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-debug-niche-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-debug-niche-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-debug-niche-2.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-debug-niche-2.rs"}, {"sha": "b718a6854dd7e0ccfbc1bccfa73fae2651767072", "filename": "tests/codegen/enum-debug-niche.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-debug-niche.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-debug-niche.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-debug-niche.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-debug-niche.rs"}, {"sha": "095c49ac3acb9b99c87068d9b0541057725dda08", "filename": "tests/codegen/enum-debug-tagged.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-debug-tagged.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-debug-tagged.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-debug-tagged.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-debug-tagged.rs"}, {"sha": "cc14c21200253249e48a6b0388997e361857e265", "filename": "tests/codegen/enum-discriminant-value.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-discriminant-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-discriminant-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-discriminant-value.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-discriminant-value.rs"}, {"sha": "827eb20154afd0195cc1da957b67aa483444f56b", "filename": "tests/codegen/enum-match.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fenum-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fenum-match.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/enum-match.rs"}, {"sha": "a89d48ee1533ff655617e0e333a1e03bef64680b", "filename": "tests/codegen/export-no-mangle.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fexport-no-mangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fexport-no-mangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fexport-no-mangle.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/export-no-mangle.rs"}, {"sha": "70349b2ec4f6b6cd4d7550b38fa0b9df7d88f104", "filename": "tests/codegen/external-no-mangle-fns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fexternal-no-mangle-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fexternal-no-mangle-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fexternal-no-mangle-fns.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/external-no-mangle-fns.rs"}, {"sha": "c6ecb7aa96abcaf2defd9c6724c04385fc768c1a", "filename": "tests/codegen/external-no-mangle-statics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fexternal-no-mangle-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fexternal-no-mangle-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fexternal-no-mangle-statics.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/external-no-mangle-statics.rs"}, {"sha": "d426ade28dd12696dd41073ef60b46ff526f8793", "filename": "tests/codegen/fastcall-inreg.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffastcall-inreg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffastcall-inreg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Ffastcall-inreg.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/fastcall-inreg.rs"}, {"sha": "1c49b5714ef51df098a9e888532696a1c825664b", "filename": "tests/codegen/fatptr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffatptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffatptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Ffatptr.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/fatptr.rs"}, {"sha": "7307e0379dfa042eb02b7484b556f2393b61c590", "filename": "tests/codegen/fewer-names.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffewer-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffewer-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Ffewer-names.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/fewer-names.rs"}, {"sha": "93720503480881a3ccf0df16ae6e81bdeea30a90", "filename": "tests/codegen/ffi-const.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fffi-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fffi-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fffi-const.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/ffi-const.rs"}, {"sha": "099726b2f086e3c02764709de3b4aa40689f65b4", "filename": "tests/codegen/ffi-out-of-bounds-loads.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fffi-out-of-bounds-loads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fffi-out-of-bounds-loads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fffi-out-of-bounds-loads.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/ffi-out-of-bounds-loads.rs"}, {"sha": "2ed735813582f67138a6e92689509d06ae6c6b75", "filename": "tests/codegen/ffi-pure.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fffi-pure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fffi-pure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fffi-pure.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/ffi-pure.rs"}, {"sha": "0fbe03f0bb6f1338226552b57b4c58630bead0c1", "filename": "tests/codegen/ffi-returns-twice.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fffi-returns-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fffi-returns-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fffi-returns-twice.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/ffi-returns-twice.rs"}, {"sha": "592e09452df6fdfde857b4cde58d229c4690e6ce", "filename": "tests/codegen/float_math.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffloat_math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffloat_math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Ffloat_math.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/float_math.rs"}, {"sha": "0abc8a409ed7a5346c995ce235171a6103ebe408", "filename": "tests/codegen/fn-impl-trait-self.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffn-impl-trait-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffn-impl-trait-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Ffn-impl-trait-self.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/fn-impl-trait-self.rs"}, {"sha": "304d82aa0c653d6a55a87d04463fb9c74694a345", "filename": "tests/codegen/foo.s", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffoo.s", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffoo.s", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Ffoo.s?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/foo.s"}, {"sha": "637c4234654b49d8f14065dc7ef29aae3bd4efa0", "filename": "tests/codegen/force-frame-pointers.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fforce-frame-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fforce-frame-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fforce-frame-pointers.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/force-frame-pointers.rs"}, {"sha": "3ee23f05eb2b1d11a968091803b23e36a6351792", "filename": "tests/codegen/force-no-unwind-tables.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fforce-no-unwind-tables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fforce-no-unwind-tables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fforce-no-unwind-tables.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/force-no-unwind-tables.rs"}, {"sha": "4c0a5602c6dad73ecb37e59e3431696749631f2a", "filename": "tests/codegen/force-unwind-tables.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fforce-unwind-tables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fforce-unwind-tables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fforce-unwind-tables.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/force-unwind-tables.rs"}, {"sha": "f7c02d47939fed4314f87dde85ba35526761d7da", "filename": "tests/codegen/frame-pointer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fframe-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fframe-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fframe-pointer.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/frame-pointer.rs"}, {"sha": "ff76405a4ea323338c45c98751756216f76f4f30", "filename": "tests/codegen/function-arguments-noopt.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffunction-arguments-noopt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffunction-arguments-noopt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Ffunction-arguments-noopt.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/function-arguments-noopt.rs"}, {"sha": "0f9e90f6ba77990d2c265057699170a5cd372dbe", "filename": "tests/codegen/function-arguments.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Ffunction-arguments.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/function-arguments.rs"}, {"sha": "002be8d1b419233ca33760a36ba2b57468f1960b", "filename": "tests/codegen/gdb_debug_script_load.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fgdb_debug_script_load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fgdb_debug_script_load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fgdb_debug_script_load.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/gdb_debug_script_load.rs"}, {"sha": "9d70ccdef032fc04a5af73a5493b9d4fa549957b", "filename": "tests/codegen/generator-debug-msvc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fgenerator-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fgenerator-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fgenerator-debug-msvc.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/generator-debug-msvc.rs"}, {"sha": "3ec860f2cbc0681370b27d30788be1699d2fe1af", "filename": "tests/codegen/generator-debug.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fgenerator-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fgenerator-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fgenerator-debug.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/generator-debug.rs"}, {"sha": "eea16805c596821b25e6b713e7ae9f32f592631c", "filename": "tests/codegen/generic-debug.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fgeneric-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fgeneric-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fgeneric-debug.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/generic-debug.rs"}, {"sha": "fab84868fdfbbb9529db73b9e464a889db1000a0", "filename": "tests/codegen/global_asm.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fglobal_asm.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/global_asm.rs"}, {"sha": "02ee916458f4ad1dcc91de2b3d2f17ff1fb1cf17", "filename": "tests/codegen/global_asm_include.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fglobal_asm_include.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fglobal_asm_include.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fglobal_asm_include.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/global_asm_include.rs"}, {"sha": "bdcf0ea843c4c53012bcd21214d98db804983f2a", "filename": "tests/codegen/global_asm_x2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fglobal_asm_x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fglobal_asm_x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fglobal_asm_x2.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/global_asm_x2.rs"}, {"sha": "17258a264a5e60c668ea3166219346e4f06f91fe", "filename": "tests/codegen/i686-macosx-deployment-target.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fi686-macosx-deployment-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fi686-macosx-deployment-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fi686-macosx-deployment-target.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/i686-macosx-deployment-target.rs"}, {"sha": "043040a95e364b89a3f9c421cd106e2120631d77", "filename": "tests/codegen/i686-no-macosx-deployment-target.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fi686-no-macosx-deployment-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Fi686-no-macosx-deployment-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fi686-no-macosx-deployment-target.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/i686-no-macosx-deployment-target.rs"}, {"sha": "912af782a8f361aa805bb63d866a139a811ed970", "filename": "tests/codegen/inline-always-works-always.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Finline-always-works-always.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Finline-always-works-always.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Finline-always-works-always.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/inline-always-works-always.rs"}, {"sha": "5b230361f397146cc37013f25e51ecc64abe2eb6", "filename": "tests/codegen/inline-debuginfo.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Finline-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/tests%2Fcodegen%2Finline-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Finline-debuginfo.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "previous_filename": "src/test/codegen/inline-debuginfo.rs"}]}