{"sha": "9c3f00a90651998c2cd4151f43f17cd92ef8eef1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljM2YwMGE5MDY1MTk5OGMyY2Q0MTUxZjQzZjE3Y2Q5MmVmOGVlZjE=", "commit": {"author": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2019-12-20T17:27:51Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2019-12-20T17:28:21Z"}, "message": "Fix coercion of last expression in function body", "tree": {"sha": "2b96a667cd1d7bee5ec41abe38d777bc181b674d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b96a667cd1d7bee5ec41abe38d777bc181b674d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c3f00a90651998c2cd4151f43f17cd92ef8eef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c3f00a90651998c2cd4151f43f17cd92ef8eef1", "html_url": "https://github.com/rust-lang/rust/commit/9c3f00a90651998c2cd4151f43f17cd92ef8eef1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c3f00a90651998c2cd4151f43f17cd92ef8eef1/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99d6f544f2a590d3feef47ce62d5cd9a8b463a47", "url": "https://api.github.com/repos/rust-lang/rust/commits/99d6f544f2a590d3feef47ce62d5cd9a8b463a47", "html_url": "https://github.com/rust-lang/rust/commit/99d6f544f2a590d3feef47ce62d5cd9a8b463a47"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "e97b8147395b4e1efa1ab27628797a821c121040", "filename": "crates/ra_hir_ty/src/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c3f00a90651998c2cd4151f43f17cd92ef8eef1/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3f00a90651998c2cd4151f43f17cd92ef8eef1/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs?ref=9c3f00a90651998c2cd4151f43f17cd92ef8eef1", "patch": "@@ -460,7 +460,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n     }\n \n     fn infer_body(&mut self) {\n-        self.infer_expr(self.body.body_expr, &Expectation::has_type(self.return_ty.clone()));\n+        self.infer_expr_coerce(self.body.body_expr, &Expectation::has_type(self.return_ty.clone()));\n     }\n \n     fn resolve_into_iter_item(&self) -> Option<TypeAliasId> {"}, {"sha": "3af05394c6b86254bf6f2ef7911fafba5884ea43", "filename": "crates/ra_hir_ty/src/infer/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c3f00a90651998c2cd4151f43f17cd92ef8eef1/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3f00a90651998c2cd4151f43f17cd92ef8eef1/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=9c3f00a90651998c2cd4151f43f17cd92ef8eef1", "patch": "@@ -41,7 +41,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n \n     /// Infer type of expression with possibly implicit coerce to the expected type.\n     /// Return the type after possible coercion.\n-    fn infer_expr_coerce(&mut self, expr: ExprId, expected: &Expectation) -> Ty {\n+    pub(super) fn infer_expr_coerce(&mut self, expr: ExprId, expected: &Expectation) -> Ty {\n         let ty = self.infer_expr_inner(expr, &expected);\n         let ty = if !self.coerce(&ty, &expected.ty) {\n             self.result"}, {"sha": "793c23e41c64f725dc6658fda506f374b571d259", "filename": "crates/ra_hir_ty/src/tests/coercion.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9c3f00a90651998c2cd4151f43f17cd92ef8eef1/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3f00a90651998c2cd4151f43f17cd92ef8eef1/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=9c3f00a90651998c2cd4151f43f17cd92ef8eef1", "patch": "@@ -369,6 +369,22 @@ fn test() {\n     );\n }\n \n+#[test]\n+fn return_coerce_unknown() {\n+    assert_snapshot!(\n+        infer_with_mismatches(r#\"\n+fn foo() -> u32 {\n+    return unknown;\n+}\n+\"#, true),\n+        @r###\"\n+    [17; 40) '{     ...own; }': !\n+    [23; 37) 'return unknown': !\n+    [30; 37) 'unknown': u32\n+    \"###\n+    );\n+}\n+\n #[test]\n fn coerce_autoderef() {\n     assert_snapshot!("}]}