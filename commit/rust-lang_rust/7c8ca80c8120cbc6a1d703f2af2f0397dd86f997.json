{"sha": "7c8ca80c8120cbc6a1d703f2af2f0397dd86f997", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjOGNhODBjODEyMGNiYzZhMWQ3MDNmMmFmMmYwMzk3ZGQ4NmY5OTc=", "commit": {"author": {"name": "king6cong", "email": "king6cong@gmail.com", "date": "2017-04-15T03:43:35Z"}, "committer": {"name": "king6cong", "email": "king6cong@gmail.com", "date": "2017-04-15T03:43:35Z"}, "message": "code format", "tree": {"sha": "545ca0244520b87a414f219b30f7bf7d63ceadaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/545ca0244520b87a414f219b30f7bf7d63ceadaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c8ca80c8120cbc6a1d703f2af2f0397dd86f997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c8ca80c8120cbc6a1d703f2af2f0397dd86f997", "html_url": "https://github.com/rust-lang/rust/commit/7c8ca80c8120cbc6a1d703f2af2f0397dd86f997", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c8ca80c8120cbc6a1d703f2af2f0397dd86f997/comments", "author": {"login": "king6cong", "id": 302560, "node_id": "MDQ6VXNlcjMwMjU2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/302560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/king6cong", "html_url": "https://github.com/king6cong", "followers_url": "https://api.github.com/users/king6cong/followers", "following_url": "https://api.github.com/users/king6cong/following{/other_user}", "gists_url": "https://api.github.com/users/king6cong/gists{/gist_id}", "starred_url": "https://api.github.com/users/king6cong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/king6cong/subscriptions", "organizations_url": "https://api.github.com/users/king6cong/orgs", "repos_url": "https://api.github.com/users/king6cong/repos", "events_url": "https://api.github.com/users/king6cong/events{/privacy}", "received_events_url": "https://api.github.com/users/king6cong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "king6cong", "id": 302560, "node_id": "MDQ6VXNlcjMwMjU2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/302560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/king6cong", "html_url": "https://github.com/king6cong", "followers_url": "https://api.github.com/users/king6cong/followers", "following_url": "https://api.github.com/users/king6cong/following{/other_user}", "gists_url": "https://api.github.com/users/king6cong/gists{/gist_id}", "starred_url": "https://api.github.com/users/king6cong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/king6cong/subscriptions", "organizations_url": "https://api.github.com/users/king6cong/orgs", "repos_url": "https://api.github.com/users/king6cong/repos", "events_url": "https://api.github.com/users/king6cong/events{/privacy}", "received_events_url": "https://api.github.com/users/king6cong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0ca5d4bad07a4fc8497bd9766cdadaee1bd0ac6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0ca5d4bad07a4fc8497bd9766cdadaee1bd0ac6", "html_url": "https://github.com/rust-lang/rust/commit/f0ca5d4bad07a4fc8497bd9766cdadaee1bd0ac6"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "3ad91ef15ea7bfa8ba08e3e00398cc8edf1c0cf3", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7c8ca80c8120cbc6a1d703f2af2f0397dd86f997/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c8ca80c8120cbc6a1d703f2af2f0397dd86f997/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=7c8ca80c8120cbc6a1d703f2af2f0397dd86f997", "patch": "@@ -2164,16 +2164,16 @@ pub trait Iterator {\n     }\n }\n \n-/// Select an element from an iterator based on the given projection\n+/// Select an element from an iterator based on the given \"projection\"\n /// and \"comparison\" function.\n ///\n /// This is an idiosyncratic helper to try to factor out the\n /// commonalities of {max,min}{,_by}. In particular, this avoids\n /// having to implement optimizations several times.\n #[inline]\n-fn select_fold1<I,B, FProj, FCmp>(mut it: I,\n-                                  mut f_proj: FProj,\n-                                  mut f_cmp: FCmp) -> Option<(B, I::Item)>\n+fn select_fold1<I, B, FProj, FCmp>(mut it: I,\n+                                   mut f_proj: FProj,\n+                                   mut f_cmp: FCmp) -> Option<(B, I::Item)>\n     where I: Iterator,\n           FProj: FnMut(&I::Item) -> B,\n           FCmp: FnMut(&B, &I::Item, &B, &I::Item) -> bool\n@@ -2186,7 +2186,7 @@ fn select_fold1<I,B, FProj, FCmp>(mut it: I,\n \n         for x in it {\n             let x_p = f_proj(&x);\n-            if f_cmp(&sel_p,  &sel, &x_p, &x) {\n+            if f_cmp(&sel_p, &sel, &x_p, &x) {\n                 sel = x;\n                 sel_p = x_p;\n             }"}]}