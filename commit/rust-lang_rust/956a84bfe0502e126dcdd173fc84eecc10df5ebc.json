{"sha": "956a84bfe0502e126dcdd173fc84eecc10df5ebc", "node_id": "C_kwDOAAsO6NoAKDk1NmE4NGJmZTA1MDJlMTI2ZGNkZDE3M2ZjODRlZWNjMTBkZjVlYmM", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-06-08T16:22:48Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-06-08T16:22:48Z"}, "message": "Optimize `SbTag::eq`\n\nThe code before generated really bad code with a branch.\nThis nudges LLVM towards being smarter and simply comparing\nthe integers.", "tree": {"sha": "0f1056dfff9de4def55111f8cbf3f3e2672a98bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1056dfff9de4def55111f8cbf3f3e2672a98bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/956a84bfe0502e126dcdd173fc84eecc10df5ebc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/956a84bfe0502e126dcdd173fc84eecc10df5ebc", "html_url": "https://github.com/rust-lang/rust/commit/956a84bfe0502e126dcdd173fc84eecc10df5ebc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/956a84bfe0502e126dcdd173fc84eecc10df5ebc/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8d5ee037b705b842e5647c4f24d5d930c9d8bc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8d5ee037b705b842e5647c4f24d5d930c9d8bc2", "html_url": "https://github.com/rust-lang/rust/commit/b8d5ee037b705b842e5647c4f24d5d930c9d8bc2"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "fd33eea79026c087375f20b55a1f9634e9d5ccee", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/956a84bfe0502e126dcdd173fc84eecc10df5ebc/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956a84bfe0502e126dcdd173fc84eecc10df5ebc/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=956a84bfe0502e126dcdd173fc84eecc10df5ebc", "patch": "@@ -27,12 +27,27 @@ pub type CallId = NonZeroU64;\n pub type AllocExtra = Stacks;\n \n /// Tracking pointer provenance\n-#[derive(Copy, Clone, Hash, PartialEq, Eq)]\n+#[derive(Copy, Clone, Hash, Eq)]\n pub enum SbTag {\n     Tagged(PtrId),\n     Untagged,\n }\n \n+impl SbTag {\n+    fn as_u64(self) -> u64 {\n+        match self {\n+            SbTag::Tagged(id) => id.get(),\n+            SbTag::Untagged => 0,\n+        }\n+    }\n+}\n+\n+impl PartialEq for SbTag {\n+    fn eq(&self, other: &Self) -> bool {\n+        self.as_u64() == other.as_u64()\n+    }\n+}\n+\n impl fmt::Debug for SbTag {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self {"}]}