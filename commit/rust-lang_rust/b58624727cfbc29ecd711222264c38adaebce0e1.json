{"sha": "b58624727cfbc29ecd711222264c38adaebce0e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ODYyNDcyN2NmYmMyOWVjZDcxMTIyMjI2NGMzOGFkYWViY2UwZTE=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-04-02T20:51:13Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-04-12T00:44:43Z"}, "message": "describe_enum_variant: Reduce code duplication", "tree": {"sha": "a582d8ae1b92481c0bbbc3926ea02dd636ac3263", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a582d8ae1b92481c0bbbc3926ea02dd636ac3263"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b58624727cfbc29ecd711222264c38adaebce0e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b58624727cfbc29ecd711222264c38adaebce0e1", "html_url": "https://github.com/rust-lang/rust/commit/b58624727cfbc29ecd711222264c38adaebce0e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b58624727cfbc29ecd711222264c38adaebce0e1/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3de0106789468b211bcc3a25c09c0cf07119186d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3de0106789468b211bcc3a25c09c0cf07119186d", "html_url": "https://github.com/rust-lang/rust/commit/3de0106789468b211bcc3a25c09c0cf07119186d"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "ca056c6034af0a47b97522c2c719d75230ab0109", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b58624727cfbc29ecd711222264c38adaebce0e1/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b58624727cfbc29ecd711222264c38adaebce0e1/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=b58624727cfbc29ecd711222264c38adaebce0e1", "patch": "@@ -1535,6 +1535,14 @@ fn describe_enum_variant(\n                                            unique_type_id,\n                                            Some(containing_scope));\n \n+    let arg_name = |i: usize| {\n+        if variant.ctor_kind == CtorKind::Fn {\n+            format!(\"__{}\", i)\n+        } else {\n+            variant.fields[i].ident.to_string()\n+        }\n+    };\n+\n     // Build an array of (field name, field type) pairs to be captured in the factory closure.\n     let (offsets, args) = if use_enum_fallback(cx) {\n         // If this is not a univariant enum, there is also the discriminant field.\n@@ -1552,12 +1560,7 @@ fn describe_enum_variant(\n                 layout.fields.offset(i)\n             })).collect(),\n             discr_arg.into_iter().chain((0..layout.fields.count()).map(|i| {\n-                let name = if variant.ctor_kind == CtorKind::Fn {\n-                    format!(\"__{}\", i)\n-                } else {\n-                    variant.fields[i].ident.to_string()\n-                };\n-                (name, layout.field(cx, i).ty)\n+                (arg_name(i), layout.field(cx, i).ty)\n             })).collect()\n         )\n     } else {\n@@ -1566,12 +1569,7 @@ fn describe_enum_variant(\n                 layout.fields.offset(i)\n             }).collect(),\n             (0..layout.fields.count()).map(|i| {\n-                let name = if variant.ctor_kind == CtorKind::Fn {\n-                    format!(\"__{}\", i)\n-                } else {\n-                    variant.fields[i].ident.to_string()\n-                };\n-                (name, layout.field(cx, i).ty)\n+                (arg_name(i), layout.field(cx, i).ty)\n             }).collect()\n         )\n     };"}]}