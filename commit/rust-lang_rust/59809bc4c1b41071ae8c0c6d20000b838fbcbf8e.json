{"sha": "59809bc4c1b41071ae8c0c6d20000b838fbcbf8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ODA5YmM0YzFiNDEwNzFhZThjMGM2ZDIwMDAwYjgzOGZiY2JmOGU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-03-31T17:29:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-31T17:29:35Z"}, "message": "Rollup merge of #70614 - RalfJung:cons-prop-reloc, r=wesleywiser\n\nremove unnecessary relocation check in const_prop\n\nUnnecessary as per https://github.com/rust-lang/rust/issues/70356#issuecomment-606615292\n\nFixes https://github.com/rust-lang/rust/issues/70356\nr? @oli-obk Cc @wesleywiser", "tree": {"sha": "d793f0eda3ceec892d2cf975e98cfc47af601cbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d793f0eda3ceec892d2cf975e98cfc47af601cbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59809bc4c1b41071ae8c0c6d20000b838fbcbf8e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeg33/CRBK7hj4Ov3rIwAAdHIIAHOKpuRp8Hh9jfFQf2TlnNLT\nok42bWr1Vy7Imy/9CcNdjrQ90v6LVABk/A2aeES+Vsy6Iu8uozuk95Ne+93w5n7s\nMkHD98K7f/xl5BI1jBn+pDYLqqPQkM5WyyE26aN2u5k9anTSdH+9QrnIX27kQyh8\nXhFp9z8cPvzJ1oUJitLORt0UNxWWZhXfTH0Y/f0hY14SHMOqDc8VSfx+HNwydX94\nf3x0qDWwfcsd20xxptv+IJG9qeiLFIyOsThmyz/D3dOqy482SLHtXjAvhLxkxiUH\nVrPtlbR+FOMjsmTOmjtu+ykE1SkV736+NBEC6ZF5NatpGqz8JLXcARE1EIlAjno=\n=KWgO\n-----END PGP SIGNATURE-----\n", "payload": "tree d793f0eda3ceec892d2cf975e98cfc47af601cbd\nparent 6248b59316ee25e00ed9ae4f3a823dad1801361e\nparent afe1ffb19004fc472294b8cacc34c64d28dd9abc\nauthor Dylan DPC <dylan.dpc@gmail.com> 1585675775 +0200\ncommitter GitHub <noreply@github.com> 1585675775 +0200\n\nRollup merge of #70614 - RalfJung:cons-prop-reloc, r=wesleywiser\n\nremove unnecessary relocation check in const_prop\n\nUnnecessary as per https://github.com/rust-lang/rust/issues/70356#issuecomment-606615292\n\nFixes https://github.com/rust-lang/rust/issues/70356\nr? @oli-obk Cc @wesleywiser\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59809bc4c1b41071ae8c0c6d20000b838fbcbf8e", "html_url": "https://github.com/rust-lang/rust/commit/59809bc4c1b41071ae8c0c6d20000b838fbcbf8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59809bc4c1b41071ae8c0c6d20000b838fbcbf8e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6248b59316ee25e00ed9ae4f3a823dad1801361e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6248b59316ee25e00ed9ae4f3a823dad1801361e", "html_url": "https://github.com/rust-lang/rust/commit/6248b59316ee25e00ed9ae4f3a823dad1801361e"}, {"sha": "afe1ffb19004fc472294b8cacc34c64d28dd9abc", "url": "https://api.github.com/repos/rust-lang/rust/commits/afe1ffb19004fc472294b8cacc34c64d28dd9abc", "html_url": "https://github.com/rust-lang/rust/commit/afe1ffb19004fc472294b8cacc34c64d28dd9abc"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "f1ddf3c635f7a4d870fb464342f56894c94c8497", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/59809bc4c1b41071ae8c0c6d20000b838fbcbf8e/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59809bc4c1b41071ae8c0c6d20000b838fbcbf8e/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=59809bc4c1b41071ae8c0c6d20000b838fbcbf8e", "patch": "@@ -274,19 +274,16 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine {\n         _memory_extra: &(),\n         _alloc_id: AllocId,\n         allocation: &Allocation<Self::PointerTag, Self::AllocExtra>,\n-        static_def_id: Option<DefId>,\n+        _static_def_id: Option<DefId>,\n         is_write: bool,\n     ) -> InterpResult<'tcx> {\n         if is_write {\n             throw_machine_stop_str!(\"can't write to global\");\n         }\n-        // If the static allocation is mutable or if it has relocations (it may be legal to mutate\n-        // the memory behind that in the future), then we can't const prop it.\n+        // If the static allocation is mutable, then we can't const prop it as its content\n+        // might be different at runtime.\n         if allocation.mutability == Mutability::Mut {\n-            throw_machine_stop_str!(\"can't eval mutable globals in ConstProp\");\n-        }\n-        if static_def_id.is_some() && allocation.relocations().len() > 0 {\n-            throw_machine_stop_str!(\"can't eval statics with pointers in ConstProp\");\n+            throw_machine_stop_str!(\"can't access mutable globals in ConstProp\");\n         }\n \n         Ok(())"}]}