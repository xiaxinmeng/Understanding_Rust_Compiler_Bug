{"sha": "75155cd1b0c134056e86addbbf9097a26fe6a1f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MTU1Y2QxYjBjMTM0MDU2ZTg2YWRkYmJmOTA5N2EyNmZlNmExZjU=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-08-01T22:02:03Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-03T07:17:07Z"}, "message": "Explicitly impl Clone for RWArc\n\nRWArc had a clone() method, but it was part of impl RWArc instead of\nan implementation of Clone.\n\nStick with the explicit implementation instead of deriving Clone so we\ncan have a docstring.\n\nFixes #8052.", "tree": {"sha": "1737e4d87a3c916f2a454d2d4853a0d8c7c534c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1737e4d87a3c916f2a454d2d4853a0d8c7c534c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75155cd1b0c134056e86addbbf9097a26fe6a1f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75155cd1b0c134056e86addbbf9097a26fe6a1f5", "html_url": "https://github.com/rust-lang/rust/commit/75155cd1b0c134056e86addbbf9097a26fe6a1f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75155cd1b0c134056e86addbbf9097a26fe6a1f5/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1992765dd3b689fa62764eba99ed0610654b070f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1992765dd3b689fa62764eba99ed0610654b070f", "html_url": "https://github.com/rust-lang/rust/commit/1992765dd3b689fa62764eba99ed0610654b070f"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "af69997f02e8d9a70de872b58cc93ccfe68c1989", "filename": "src/libextra/arc.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/75155cd1b0c134056e86addbbf9097a26fe6a1f5/src%2Flibextra%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75155cd1b0c134056e86addbbf9097a26fe6a1f5/src%2Flibextra%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farc.rs?ref=75155cd1b0c134056e86addbbf9097a26fe6a1f5", "patch": "@@ -140,14 +140,14 @@ impl<T:Freeze+Send> Arc<T> {\n     }\n }\n \n-/**\n- * Duplicate an atomically reference counted wrapper.\n- *\n- * The resulting two `arc` objects will point to the same underlying data\n- * object. However, one of the `arc` objects can be sent to another task,\n- * allowing them to share the underlying data.\n- */\n impl<T:Freeze + Send> Clone for Arc<T> {\n+    /**\n+    * Duplicate an atomically reference counted wrapper.\n+    *\n+    * The resulting two `arc` objects will point to the same underlying data\n+    * object. However, one of the `arc` objects can be sent to another task,\n+    * allowing them to share the underlying data.\n+    */\n     fn clone(&self) -> Arc<T> {\n         Arc { x: self.x.clone() }\n     }\n@@ -164,7 +164,7 @@ struct MutexArc<T> { priv x: UnsafeAtomicRcBox<MutexArcInner<T>> }\n \n \n impl<T:Send> Clone for MutexArc<T> {\n-    /// Duplicate a mutex-protected Arc, as arc::clone.\n+    /// Duplicate a mutex-protected Arc. See arc::clone for more details.\n     fn clone(&self) -> MutexArc<T> {\n         // NB: Cloning the underlying mutex is not necessary. Its reference\n         // count would be exactly the same as the shared state's.\n@@ -312,12 +312,10 @@ struct RWArc<T> {\n     priv x: UnsafeAtomicRcBox<RWArcInner<T>>,\n }\n \n-impl<T:Freeze + Send> RWArc<T> {\n-    /// Duplicate a rwlock-protected Arc, as arc::clone.\n-    pub fn clone(&self) -> RWArc<T> {\n-        RWArc {\n-            x: self.x.clone(),\n-        }\n+impl<T:Freeze + Send> Clone for RWArc<T> {\n+    /// Duplicate a rwlock-protected Arc. See arc::clone for more details.\n+    fn clone(&self) -> RWArc<T> {\n+        RWArc { x: self.x.clone() }\n     }\n \n }"}]}