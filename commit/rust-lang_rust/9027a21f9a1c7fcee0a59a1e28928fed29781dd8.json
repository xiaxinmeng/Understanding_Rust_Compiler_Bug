{"sha": "9027a21f9a1c7fcee0a59a1e28928fed29781dd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwMjdhMjFmOWExYzdmY2VlMGE1OWExZTI4OTI4ZmVkMjk3ODFkZDg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T22:53:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T22:53:54Z"}, "message": "Introduce SourceItemId", "tree": {"sha": "48a1d6ae7046e995baafbb053c43688cd9496935", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48a1d6ae7046e995baafbb053c43688cd9496935"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9027a21f9a1c7fcee0a59a1e28928fed29781dd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9027a21f9a1c7fcee0a59a1e28928fed29781dd8", "html_url": "https://github.com/rust-lang/rust/commit/9027a21f9a1c7fcee0a59a1e28928fed29781dd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00df339c419fc75af6a939b75be8bef5b5a69732", "url": "https://api.github.com/repos/rust-lang/rust/commits/00df339c419fc75af6a939b75be8bef5b5a69732", "html_url": "https://github.com/rust-lang/rust/commit/00df339c419fc75af6a939b75be8bef5b5a69732"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "0998295f521735dca197960f55af91d3377c08ae", "filename": "crates/ra_analysis/src/hir/db.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Fhir%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Fhir%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fdb.rs?ref=9027a21f9a1c7fcee0a59a1e28928fed29781dd8", "patch": "@@ -8,7 +8,7 @@ use ra_syntax::{\n use crate::{\n     FileId,\n     db::SyntaxDatabase,\n-    hir::{SourceFileItems, SourceFileItemId},\n+    hir::{SourceFileItems, SourceItemId},\n     hir::query_definitions,\n     hir::function::{FnId, FnScopes},\n     hir::module::{\n@@ -39,7 +39,7 @@ pub(crate) trait HirDatabase: SyntaxDatabase {\n         use fn query_definitions::file_items;\n     }\n \n-    fn file_item(file_id: FileId, file_item_id: SourceFileItemId) -> SyntaxNode {\n+    fn file_item(source_item_id: SourceItemId) -> SyntaxNode {\n         type FileItemQuery;\n         storage dependencies;\n         use fn query_definitions::file_item;"}, {"sha": "9527cc33fa886689bfcf42dbbf96868d75ad22d3", "filename": "crates/ra_analysis/src/hir/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs?ref=9027a21f9a1c7fcee0a59a1e28928fed29781dd8", "patch": "@@ -16,6 +16,7 @@ use std::ops::Index;\n use ra_syntax::{SyntaxNodeRef, SyntaxNode};\n \n use crate::{\n+    FileId,\n     hir::db::HirDatabase,\n     loc2id::{DefId, DefLoc},\n     Cancelable,\n@@ -53,6 +54,12 @@ impl DefId {\n /// it's OK to use it as a salsa key/value.\n pub(crate) type SourceFileItemId = Id<SyntaxNode>;\n \n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n+pub(crate) struct SourceItemId {\n+    file_id: FileId,\n+    item_id: SourceFileItemId,\n+}\n+\n /// Maps item's `SyntaxNode`s to `SourceFileItemId` and back.\n #[derive(Debug, PartialEq, Eq, Default)]\n pub(crate) struct SourceFileItems {"}, {"sha": "f22832edaf9d76890ccf42b261a85bd9c4ae212a", "filename": "crates/ra_analysis/src/hir/module/nameres.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fnameres.rs?ref=9027a21f9a1c7fcee0a59a1e28928fed29781dd8", "patch": "@@ -30,7 +30,7 @@ use crate::{\n     Cancelable, FileId,\n     loc2id::{DefId, DefLoc},\n     hir::{\n-        SourceFileItemId, SourceFileItems,\n+        SourceItemId, SourceFileItemId, SourceFileItems,\n         Path, PathKind,\n         HirDatabase,\n         module::{ModuleId, ModuleTree},\n@@ -99,7 +99,11 @@ pub(crate) struct NamedImport {\n \n impl NamedImport {\n     pub(crate) fn range(&self, db: &impl HirDatabase, file_id: FileId) -> TextRange {\n-        let syntax = db.file_item(file_id, self.file_item_id);\n+        let source_item_id = SourceItemId {\n+            file_id,\n+            item_id: self.file_item_id,\n+        };\n+        let syntax = db.file_item(source_item_id);\n         let offset = syntax.borrowed().range().start();\n         self.relative_range + offset\n     }\n@@ -247,8 +251,10 @@ where\n                 continue;\n             }\n             let def_loc = DefLoc::Item {\n-                file_id,\n-                id: item.id,\n+                source_item_id: SourceItemId {\n+                    file_id,\n+                    item_id: item.id,\n+                },\n             };\n             let def_id = self.db.id_maps().def_id(def_loc);\n             let resolution = Resolution {"}, {"sha": "ae292e96464f29d03ba717ae4abe6fee80bd358f", "filename": "crates/ra_analysis/src/hir/query_definitions.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Fhir%2Fquery_definitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Fhir%2Fquery_definitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fquery_definitions.rs?ref=9027a21f9a1c7fcee0a59a1e28928fed29781dd8", "patch": "@@ -12,7 +12,7 @@ use ra_syntax::{\n use crate::{\n     FileId, Cancelable,\n     hir::{\n-        SourceFileItems, SourceFileItemId,\n+        SourceFileItems, SourceItemId,\n         db::HirDatabase,\n         function::{FnId, FnScopes},\n         module::{\n@@ -52,12 +52,8 @@ pub(super) fn file_items(db: &impl HirDatabase, file_id: FileId) -> Arc<SourceFi\n     Arc::new(res)\n }\n \n-pub(super) fn file_item(\n-    db: &impl HirDatabase,\n-    file_id: FileId,\n-    file_item_id: SourceFileItemId,\n-) -> SyntaxNode {\n-    db.file_items(file_id)[file_item_id].clone()\n+pub(super) fn file_item(db: &impl HirDatabase, source_item_id: SourceItemId) -> SyntaxNode {\n+    db.file_items(source_item_id.file_id)[source_item_id.item_id].clone()\n }\n \n pub(crate) fn submodules("}, {"sha": "5b2c0f615f5402959c94687c0f42c3b63d31a93f", "filename": "crates/ra_analysis/src/loc2id.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Floc2id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9027a21f9a1c7fcee0a59a1e28928fed29781dd8/crates%2Fra_analysis%2Fsrc%2Floc2id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Floc2id.rs?ref=9027a21f9a1c7fcee0a59a1e28928fed29781dd8", "patch": "@@ -8,8 +8,7 @@ use std::{\n use rustc_hash::FxHashMap;\n \n use crate::{\n-    FileId,\n-    hir::{SourceFileItemId, ModuleId},\n+    hir::{SourceItemId, ModuleId},\n     syntax_ptr::SyntaxPtr,\n     input::SourceRootId,\n };\n@@ -103,8 +102,7 @@ pub(crate) enum DefLoc {\n         source_root: SourceRootId,\n     },\n     Item {\n-        file_id: FileId,\n-        id: SourceFileItemId,\n+        source_item_id: SourceItemId,\n     },\n }\n "}]}