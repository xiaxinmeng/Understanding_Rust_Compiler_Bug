{"sha": "32aa327ba35c4b0f95c7c4cd983f1867fc498897", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYWEzMjdiYTM1YzRiMGY5NWM3YzRjZDk4M2YxODY3ZmM0OTg4OTc=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-08T04:42:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-08T04:42:12Z"}, "message": "Rollup merge of #65554 - gliderkite:bufreader-doc-enhance, r=KodrAus\n\nEnhance the documentation of BufReader for potential data loss\n\nThis is (IMO) and enhancement of the `std::io::BufReader` documentation, that aims to highlight how relatively easy is to end up with data loss when improperly using an instance of this class.\n\nThis is following the issue I had figuring out why my application was loosing data, because I focused my attention on the word *multiple instances* of `BufReader` in its `struct` documentation, even if I ever only had one instance.\n\nLink to the issue: https://github.com/tokio-rs/tokio/issues/1662", "tree": {"sha": "67cd0ea353e5a27d99c7249f93c9d49d93081b32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67cd0ea353e5a27d99c7249f93c9d49d93081b32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32aa327ba35c4b0f95c7c4cd983f1867fc498897", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdxPIlCRBK7hj4Ov3rIwAAdHIIABbV3kldYRiZT1BmhWM7fufh\nmlFSTjB9pQfn3HMoU7mMRcxLn3k5fnSZP8A/+v03NvL999XVAiQ58sHsykd3/YK2\nD7XtICmPMS8BND+KEYjDl7uNtzhvv0KUJgxp/zEEEt1ogPMc8Kmv7Hhn1+zWig1o\ng50lcLuGlN9e/u3F25VEB1gmQgnlE/MUu50WbQvT7IUrYig/WY5BLFtez6XrQSM0\nMY5RrB+bQUepzpEzbRiD8SzDDGMn7mryn5NEW9oBTZP25BeBCT+s7t72Ij09vkEv\nLTqPgrtKX9yixv5Bm922f2uWMqGLrYAazcZmYrrDYAR9PnjwLrP/eylgd0ptDME=\n=mF1g\n-----END PGP SIGNATURE-----\n", "payload": "tree 67cd0ea353e5a27d99c7249f93c9d49d93081b32\nparent d2574403b31508be9cfed468e352467043d2354d\nparent 5b5196ad65db877c2f140dfc7a25f3fc6f2e40c6\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573188132 +0900\ncommitter GitHub <noreply@github.com> 1573188132 +0900\n\nRollup merge of #65554 - gliderkite:bufreader-doc-enhance, r=KodrAus\n\nEnhance the documentation of BufReader for potential data loss\n\nThis is (IMO) and enhancement of the `std::io::BufReader` documentation, that aims to highlight how relatively easy is to end up with data loss when improperly using an instance of this class.\n\nThis is following the issue I had figuring out why my application was loosing data, because I focused my attention on the word *multiple instances* of `BufReader` in its `struct` documentation, even if I ever only had one instance.\n\nLink to the issue: https://github.com/tokio-rs/tokio/issues/1662\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32aa327ba35c4b0f95c7c4cd983f1867fc498897", "html_url": "https://github.com/rust-lang/rust/commit/32aa327ba35c4b0f95c7c4cd983f1867fc498897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32aa327ba35c4b0f95c7c4cd983f1867fc498897/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2574403b31508be9cfed468e352467043d2354d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2574403b31508be9cfed468e352467043d2354d", "html_url": "https://github.com/rust-lang/rust/commit/d2574403b31508be9cfed468e352467043d2354d"}, {"sha": "5b5196ad65db877c2f140dfc7a25f3fc6f2e40c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b5196ad65db877c2f140dfc7a25f3fc6f2e40c6", "html_url": "https://github.com/rust-lang/rust/commit/5b5196ad65db877c2f140dfc7a25f3fc6f2e40c6"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "ad567c97c2c402a2054fe80d6950b86a66643f28", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/32aa327ba35c4b0f95c7c4cd983f1867fc498897/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32aa327ba35c4b0f95c7c4cd983f1867fc498897/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=32aa327ba35c4b0f95c7c4cd983f1867fc498897", "patch": "@@ -24,7 +24,9 @@ use crate::memchr;\n ///\n /// When the `BufReader<R>` is dropped, the contents of its buffer will be\n /// discarded. Creating multiple instances of a `BufReader<R>` on the same\n-/// stream can cause data loss.\n+/// stream can cause data loss. Reading from the underlying reader after\n+/// unwrapping the `BufReader<R>` with `BufReader::into_inner` can also cause\n+/// data loss.\n ///\n /// [`Read`]: ../../std/io/trait.Read.html\n /// [`TcpStream::read`]: ../../std/net/struct.TcpStream.html#method.read\n@@ -179,7 +181,8 @@ impl<R> BufReader<R> {\n \n     /// Unwraps this `BufReader<R>`, returning the underlying reader.\n     ///\n-    /// Note that any leftover data in the internal buffer is lost.\n+    /// Note that any leftover data in the internal buffer is lost. Therefore,\n+    /// a following read from the underlying reader may lead to data loss.\n     ///\n     /// # Examples\n     ///"}]}