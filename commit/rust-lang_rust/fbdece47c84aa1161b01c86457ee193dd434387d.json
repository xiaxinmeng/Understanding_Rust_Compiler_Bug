{"sha": "fbdece47c84aa1161b01c86457ee193dd434387d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiZGVjZTQ3Yzg0YWExMTYxYjAxYzg2NDU3ZWUxOTNkZDQzNDM4N2Q=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-02-28T08:10:43Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-02-28T08:10:43Z"}, "message": "Ensure `record_layout_for_printing()` is inlined.\n\nThis reduces instruction counts for the `ctfe-stress-2` benchmark by\nabout 1%.", "tree": {"sha": "8f9fc357ae937e4f488adbaabab7426be1b58f3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f9fc357ae937e4f488adbaabab7426be1b58f3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbdece47c84aa1161b01c86457ee193dd434387d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbdece47c84aa1161b01c86457ee193dd434387d", "html_url": "https://github.com/rust-lang/rust/commit/fbdece47c84aa1161b01c86457ee193dd434387d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbdece47c84aa1161b01c86457ee193dd434387d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02c4c28920ddfdb43e68a363b7fe59ac4c92399c", "url": "https://api.github.com/repos/rust-lang/rust/commits/02c4c28920ddfdb43e68a363b7fe59ac4c92399c", "html_url": "https://github.com/rust-lang/rust/commit/02c4c28920ddfdb43e68a363b7fe59ac4c92399c"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "7d2b21b9aecdaed1f0c8e579f001907204ea2a22", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbdece47c84aa1161b01c86457ee193dd434387d/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdece47c84aa1161b01c86457ee193dd434387d/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=fbdece47c84aa1161b01c86457ee193dd434387d", "patch": "@@ -1176,25 +1176,27 @@ impl<'a, 'tcx> LayoutCx<'tcx, TyCtxt<'a, 'tcx, 'tcx>> {\n \n     /// This is invoked by the `layout_raw` query to record the final\n     /// layout of each type.\n-    #[inline]\n+    #[inline(always)]\n     fn record_layout_for_printing(&self, layout: TyLayout<'tcx>) {\n-        // If we are running with `-Zprint-type-sizes`, record layouts for\n-        // dumping later. Ignore layouts that are done with non-empty\n-        // environments or non-monomorphic layouts, as the user only wants\n-        // to see the stuff resulting from the final codegen session.\n+        // If we are running with `-Zprint-type-sizes`, maybe record layouts\n+        // for dumping later.\n+        if self.tcx.sess.opts.debugging_opts.print_type_sizes {\n+            self.record_layout_for_printing_outlined(layout)\n+        }\n+    }\n+\n+    fn record_layout_for_printing_outlined(&self, layout: TyLayout<'tcx>) {\n+        // Ignore layouts that are done with non-empty environments or\n+        // non-monomorphic layouts, as the user only wants to see the stuff\n+        // resulting from the final codegen session.\n         if\n-            !self.tcx.sess.opts.debugging_opts.print_type_sizes ||\n             layout.ty.has_param_types() ||\n             layout.ty.has_self_ty() ||\n             !self.param_env.caller_bounds.is_empty()\n         {\n             return;\n         }\n \n-        self.record_layout_for_printing_outlined(layout)\n-    }\n-\n-    fn record_layout_for_printing_outlined(&self, layout: TyLayout<'tcx>) {\n         // (delay format until we actually need it)\n         let record = |kind, packed, opt_discr_size, variants| {\n             let type_desc = format!(\"{:?}\", layout.ty);"}]}