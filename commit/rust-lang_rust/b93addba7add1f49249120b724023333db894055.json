{"sha": "b93addba7add1f49249120b724023333db894055", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5M2FkZGJhN2FkZDFmNDkyNDkxMjBiNzI0MDIzMzMzZGI4OTQwNTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T02:03:48Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T06:42:26Z"}, "message": "move in_derive_expansion as Span method", "tree": {"sha": "8379a07a89f168eeb3e7a1f78ba1516bbd222c44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8379a07a89f168eeb3e7a1f78ba1516bbd222c44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b93addba7add1f49249120b724023333db894055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b93addba7add1f49249120b724023333db894055", "html_url": "https://github.com/rust-lang/rust/commit/b93addba7add1f49249120b724023333db894055", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b93addba7add1f49249120b724023333db894055/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a2af3242c7009247e99e9bc087b1c0b72913d0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a2af3242c7009247e99e9bc087b1c0b72913d0f", "html_url": "https://github.com/rust-lang/rust/commit/3a2af3242c7009247e99e9bc087b1c0b72913d0f"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "944868e79099b0bab2fdef743e58abc023910fb5", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b93addba7add1f49249120b724023333db894055/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b93addba7add1f49249120b724023333db894055/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=b93addba7add1f49249120b724023333db894055", "patch": "@@ -494,11 +494,3 @@ pub fn in_external_macro(sess: &Session, span: Span) -> bool {\n         ExpnKind::Macro(..) => true, // definitely a plugin\n     }\n }\n-\n-/// Returns `true` if `span` originates in a derive-macro's expansion.\n-pub fn in_derive_expansion(span: Span) -> bool {\n-    if let ExpnKind::Macro(MacroKind::Derive, _) = span.ctxt().outer_expn_data().kind {\n-        return true;\n-    }\n-    false\n-}"}, {"sha": "1176ffc79d26d0749080c114d1d2161170b5278e", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b93addba7add1f49249120b724023333db894055/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b93addba7add1f49249120b724023333db894055/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=b93addba7add1f49249120b724023333db894055", "patch": "@@ -3,7 +3,6 @@\n \n pub use self::StabilityLevel::*;\n \n-use crate::lint::in_derive_expansion;\n use crate::session::{DiagnosticMessageId, Session};\n use crate::ty::{self, TyCtxt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -201,7 +200,7 @@ pub fn early_report_deprecation(\n     lint: &'static Lint,\n     span: Span,\n ) {\n-    if in_derive_expansion(span) {\n+    if span.in_derive_expansion() {\n         return;\n     }\n \n@@ -218,7 +217,7 @@ fn late_report_deprecation(\n     def_id: DefId,\n     hir_id: HirId,\n ) {\n-    if in_derive_expansion(span) {\n+    if span.in_derive_expansion() {\n         return;\n     }\n "}, {"sha": "f20cd6ae955f42b38015da73ed2a5b1410c1caa8", "filename": "src/librustc_span/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b93addba7add1f49249120b724023333db894055/src%2Flibrustc_span%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b93addba7add1f49249120b724023333db894055/src%2Flibrustc_span%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Flib.rs?ref=b93addba7add1f49249120b724023333db894055", "patch": "@@ -309,6 +309,11 @@ impl Span {\n         self.ctxt() != SyntaxContext::root()\n     }\n \n+    /// Returns `true` if `span` originates in a derive-macro's expansion.\n+    pub fn in_derive_expansion(self) -> bool {\n+        matches!(self.ctxt().outer_expn_data().kind, ExpnKind::Macro(MacroKind::Derive, _))\n+    }\n+\n     #[inline]\n     pub fn with_root_ctxt(lo: BytePos, hi: BytePos) -> Span {\n         Span::new(lo, hi, SyntaxContext::root())"}]}