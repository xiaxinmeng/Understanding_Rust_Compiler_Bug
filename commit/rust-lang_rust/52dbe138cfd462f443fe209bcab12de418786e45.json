{"sha": "52dbe138cfd462f443fe209bcab12de418786e45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZGJlMTM4Y2ZkNDYyZjQ0M2ZlMjA5YmNhYjEyZGU0MTg3ODZlNDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-29T01:49:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-29T01:49:24Z"}, "message": "auto merge of #8100 : blake2-ppc/rust/str-collect, r=pcwalton\n\nFromIterator initially only implemented for Iterator<char>, which is the\r\ntype of the main iterator.", "tree": {"sha": "70583c03af5aa3bea23f30c74c09f7e1a5e013f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70583c03af5aa3bea23f30c74c09f7e1a5e013f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52dbe138cfd462f443fe209bcab12de418786e45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52dbe138cfd462f443fe209bcab12de418786e45", "html_url": "https://github.com/rust-lang/rust/commit/52dbe138cfd462f443fe209bcab12de418786e45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52dbe138cfd462f443fe209bcab12de418786e45/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cc3bbb83d3e45cac17537514d08257e5a94cc61", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cc3bbb83d3e45cac17537514d08257e5a94cc61", "html_url": "https://github.com/rust-lang/rust/commit/4cc3bbb83d3e45cac17537514d08257e5a94cc61"}, {"sha": "4849a42bf6dc2db72797d3c0a8a197c69f4872be", "url": "https://api.github.com/repos/rust-lang/rust/commits/4849a42bf6dc2db72797d3c0a8a197c69f4872be", "html_url": "https://github.com/rust-lang/rust/commit/4849a42bf6dc2db72797d3c0a8a197c69f4872be"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "c616689d966618d2ec54b4f4aa0db10af90441dd", "filename": "src/libstd/str.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/52dbe138cfd462f443fe209bcab12de418786e45/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52dbe138cfd462f443fe209bcab12de418786e45/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=52dbe138cfd462f443fe209bcab12de418786e45", "patch": "@@ -23,7 +23,7 @@ use char::Char;\n use clone::Clone;\n use container::{Container, Mutable};\n use iter::Times;\n-use iterator::{Iterator, IteratorUtil, FilterIterator, AdditiveIterator, MapIterator};\n+use iterator::{Iterator, FromIterator, IteratorUtil, FilterIterator, AdditiveIterator, MapIterator};\n use libc;\n use num::Zero;\n use option::{None, Option, Some};\n@@ -2319,6 +2319,18 @@ impl<'self> Iterator<u8> for BytesRevIterator<'self> {\n     }\n }\n \n+impl<T: Iterator<char>> FromIterator<char, T> for ~str {\n+    #[inline]\n+    fn from_iterator(iterator: &mut T) -> ~str {\n+        let (lower, _) = iterator.size_hint();\n+        let mut buf = with_capacity(lower);\n+        for iterator.advance |ch| {\n+            buf.push_char(ch)\n+        }\n+        buf\n+    }\n+}\n+\n // This works because every lifetime is a sub-lifetime of 'static\n impl<'self> Zero for &'self str {\n     fn zero() -> &'self str { \"\" }\n@@ -2482,6 +2494,16 @@ mod tests {\n         assert_eq!(~\"\u534e\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22\u4e2d\", data);\n     }\n \n+    #[test]\n+    fn test_collect() {\n+        let empty = \"\";\n+        let s: ~str = empty.iter().collect();\n+        assert_eq!(empty, s.as_slice());\n+        let data = \"\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22\u4e2d\";\n+        let s: ~str = data.iter().collect();\n+        assert_eq!(data, s.as_slice());\n+    }\n+\n     #[test]\n     fn test_clear() {\n         let mut empty = ~\"\";"}]}