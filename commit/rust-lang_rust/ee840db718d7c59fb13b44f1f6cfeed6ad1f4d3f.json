{"sha": "ee840db718d7c59fb13b44f1f6cfeed6ad1f4d3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlODQwZGI3MThkN2M1OWZiMTNiNDRmMWY2Y2ZlZWQ2YWQxZjRkM2Y=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-06T23:17:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-06T23:17:54Z"}, "message": "Rollup merge of #76302 - jyn514:peekable-2, r=Dylan-DPC\n\nAddress review comments on `Peekable::next_if`\n\nr? @pickfire\nSee https://github.com/rust-lang/rust/pull/72310#pullrequestreview-480895893 for context.", "tree": {"sha": "47a15c328307773c5b71462c0601049860cc5d30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47a15c328307773c5b71462c0601049860cc5d30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee840db718d7c59fb13b44f1f6cfeed6ad1f4d3f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfVW4iCRBK7hj4Ov3rIwAAdHIIAB4B5mcUd9ZchP7yFr0bd3zJ\nNOMloeWhljGhzbxRm+dtYJOl9PLpuH1a8MTH4xvrGDA4ldDEvpvE7QUjjajqIkox\nByB65FxuZ5v6/U5TBeESCVuvTBCnbyMQNk7Nt3r1tpBHoFsH8oR9QwXJupgUlTR8\nQUZls2CS6pRGjsadMA2xLW8SzxMVD4XnyefRp0JfiF4NPcJP/1hQA1F4xFvTLK18\n+CelB403AZ5JrrXohpEtwbnmpeYe2W/U+b2OUNtZuP45x9Fm5TvWqCowD7xLsSLj\nmV0+JQo+FdG+vYxm1hMgCf9/1enN/Kyby8YXBFQGWQunIX8MMY7aOrYS+DSMaWo=\n=4BFm\n-----END PGP SIGNATURE-----\n", "payload": "tree 47a15c328307773c5b71462c0601049860cc5d30\nparent 2c62189db1def0d47a0e55218bbbe305cbea18bc\nparent 8c93125c17aeb9e9252054d4ddd0095ff4e60a2e\nauthor Dylan DPC <dylan.dpc@gmail.com> 1599434274 +0200\ncommitter GitHub <noreply@github.com> 1599434274 +0200\n\nRollup merge of #76302 - jyn514:peekable-2, r=Dylan-DPC\n\nAddress review comments on `Peekable::next_if`\n\nr? @pickfire\nSee https://github.com/rust-lang/rust/pull/72310#pullrequestreview-480895893 for context.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee840db718d7c59fb13b44f1f6cfeed6ad1f4d3f", "html_url": "https://github.com/rust-lang/rust/commit/ee840db718d7c59fb13b44f1f6cfeed6ad1f4d3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee840db718d7c59fb13b44f1f6cfeed6ad1f4d3f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c62189db1def0d47a0e55218bbbe305cbea18bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c62189db1def0d47a0e55218bbbe305cbea18bc", "html_url": "https://github.com/rust-lang/rust/commit/2c62189db1def0d47a0e55218bbbe305cbea18bc"}, {"sha": "8c93125c17aeb9e9252054d4ddd0095ff4e60a2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c93125c17aeb9e9252054d4ddd0095ff4e60a2e", "html_url": "https://github.com/rust-lang/rust/commit/8c93125c17aeb9e9252054d4ddd0095ff4e60a2e"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "8afe032c5a2085095f115f3d8fd184fc9f73917a", "filename": "library/core/src/iter/adapters/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee840db718d7c59fb13b44f1f6cfeed6ad1f4d3f/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee840db718d7c59fb13b44f1f6cfeed6ad1f4d3f/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs?ref=ee840db718d7c59fb13b44f1f6cfeed6ad1f4d3f", "patch": "@@ -1772,7 +1772,7 @@ impl<I: Iterator> Peekable<I> {\n         self.peeked.get_or_insert_with(|| iter.next()).as_ref()\n     }\n \n-    /// Consume the next value of this iterator if a condition is true.\n+    /// Consume and return the next value of this iterator if a condition is true.\n     ///\n     /// If `func` returns `true` for the next value of this iterator, consume and return it.\n     /// Otherwise, return `None`.\n@@ -1812,7 +1812,7 @@ impl<I: Iterator> Peekable<I> {\n         }\n     }\n \n-    /// Consume the next item if it is equal to `expected`.\n+    /// Consume and return the next item if it is equal to `expected`.\n     ///\n     /// # Example\n     /// Consume a number if it's equal to 0.\n@@ -1827,10 +1827,10 @@ impl<I: Iterator> Peekable<I> {\n     /// assert_eq!(iter.next(), Some(1));\n     /// ```\n     #[unstable(feature = \"peekable_next_if\", issue = \"72480\")]\n-    pub fn next_if_eq<R>(&mut self, expected: &R) -> Option<I::Item>\n+    pub fn next_if_eq<T>(&mut self, expected: &T) -> Option<I::Item>\n     where\n-        R: ?Sized,\n-        I::Item: PartialEq<R>,\n+        T: ?Sized,\n+        I::Item: PartialEq<T>,\n     {\n         self.next_if(|next| next == expected)\n     }"}]}