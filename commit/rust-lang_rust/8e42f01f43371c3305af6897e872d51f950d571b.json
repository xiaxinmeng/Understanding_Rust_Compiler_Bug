{"sha": "8e42f01f43371c3305af6897e872d51f950d571b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNDJmMDFmNDMzNzFjMzMwNWFmNjg5N2U4NzJkNTFmOTUwZDU3MWI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-10-15T17:15:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-15T17:15:19Z"}, "message": "Rollup merge of #55060 - jannic:patch-1, r=joshtriplett\n\nclarify pointer add/sub function safety concerns\n\nRalf Jung made the same changes to the offset functions' documentation\nin commit fb089156. As add/sub just call offset, the same limitation\napplies here, as well.\n\nI did not copy the whole explanation (\"In particular, the resulting pointer may *not* be used to access a different allocated object [...]\") because I'd consider that as being too repetitive. The documentation of add/sub already refers to the offset function, so people interested in the details can look it up, there.\nBut changing 'an object' to 'the same object' is a small change which improves clarity a lot.", "tree": {"sha": "79c0ad4f69832de5c18f2a88707c9678adb421d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79c0ad4f69832de5c18f2a88707c9678adb421d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e42f01f43371c3305af6897e872d51f950d571b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbxMsnCRBK7hj4Ov3rIwAAdHIIAKZ5HngqSvMuwUD52YBpLsbf\nPjQ8GJjcLT3hVOrfCIM0augaxsQg0oyT/yCXoqJ1thH0t/GRzOLgvebq7ZWE9Plq\nRX8KCEIGPBYI5m4AyWJV8jr70ttmrSs2+uc1Ba1kQv02I5mHvElWCqamtNafEn72\n47F5aQcpdNd5/MdjBOGpbyTFChdMXVdXdtZNGDqDWre7zjQXTLdef9KGq/fvo6zG\nc23XFVGG/EveylsiNpmVfhRqpOQE6YYyhZE9xMYR5qfw1tUxnSzQpqWdh0nVAZgJ\nmfspvrjipFCQHTkRpM8j/5WpYqx/nnt4R21hW3UnP4e/zXzBRC3S2Kow62vdVKA=\n=NdxS\n-----END PGP SIGNATURE-----\n", "payload": "tree 79c0ad4f69832de5c18f2a88707c9678adb421d2\nparent 2e8b61dce6b2dfd96575183cfdc9be03fdf21a53\nparent 6cc84acc60c21389107dac5f9dd70f08862519fd\nauthor Manish Goregaokar <manishsmail@gmail.com> 1539623719 -0700\ncommitter GitHub <noreply@github.com> 1539623719 -0700\n\nRollup merge of #55060 - jannic:patch-1, r=joshtriplett\n\nclarify pointer add/sub function safety concerns\n\nRalf Jung made the same changes to the offset functions' documentation\nin commit fb089156. As add/sub just call offset, the same limitation\napplies here, as well.\n\nI did not copy the whole explanation (\"In particular, the resulting pointer may *not* be used to access a different allocated object [...]\") because I'd consider that as being too repetitive. The documentation of add/sub already refers to the offset function, so people interested in the details can look it up, there.\nBut changing 'an object' to 'the same object' is a small change which improves clarity a lot.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e42f01f43371c3305af6897e872d51f950d571b", "html_url": "https://github.com/rust-lang/rust/commit/8e42f01f43371c3305af6897e872d51f950d571b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e42f01f43371c3305af6897e872d51f950d571b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e8b61dce6b2dfd96575183cfdc9be03fdf21a53", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e8b61dce6b2dfd96575183cfdc9be03fdf21a53", "html_url": "https://github.com/rust-lang/rust/commit/2e8b61dce6b2dfd96575183cfdc9be03fdf21a53"}, {"sha": "6cc84acc60c21389107dac5f9dd70f08862519fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cc84acc60c21389107dac5f9dd70f08862519fd", "html_url": "https://github.com/rust-lang/rust/commit/6cc84acc60c21389107dac5f9dd70f08862519fd"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "1c761ba21b3ec860ef4cb35675569ac197ee67fa", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8e42f01f43371c3305af6897e872d51f950d571b/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e42f01f43371c3305af6897e872d51f950d571b/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=8e42f01f43371c3305af6897e872d51f950d571b", "patch": "@@ -1037,7 +1037,7 @@ impl<T: ?Sized> *const T {\n     /// Behavior:\n     ///\n     /// * Both the starting and resulting pointer must be either in bounds or one\n-    ///   byte past the end of *the same* allocated object.\n+    ///   byte past the end of the same allocated object.\n     ///\n     /// * The computed offset, **in bytes**, cannot overflow an `isize`.\n     ///\n@@ -1255,7 +1255,7 @@ impl<T: ?Sized> *const T {\n     /// Behavior:\n     ///\n     /// * Both the starting and resulting pointer must be either in bounds or one\n-    ///   byte past the end of an allocated object.\n+    ///   byte past the end of the same allocated object.\n     ///\n     /// * The computed offset, **in bytes**, cannot overflow an `isize`.\n     ///\n@@ -1312,7 +1312,7 @@ impl<T: ?Sized> *const T {\n     /// Behavior:\n     ///\n     /// * Both the starting and resulting pointer must be either in bounds or one\n-    ///   byte past the end of an allocated object.\n+    ///   byte past the end of the same allocated object.\n     ///\n     /// * The computed offset cannot exceed `isize::MAX` **bytes**.\n     ///\n@@ -1657,7 +1657,7 @@ impl<T: ?Sized> *mut T {\n     /// Behavior:\n     ///\n     /// * Both the starting and resulting pointer must be either in bounds or one\n-    ///   byte past the end of *the same* allocated object.\n+    ///   byte past the end of the same allocated object.\n     ///\n     /// * The computed offset, **in bytes**, cannot overflow an `isize`.\n     ///\n@@ -1893,7 +1893,7 @@ impl<T: ?Sized> *mut T {\n     /// Behavior:\n     ///\n     /// * Both the starting and resulting pointer must be either in bounds or one\n-    ///   byte past the end of an allocated object.\n+    ///   byte past the end of the same allocated object.\n     ///\n     /// * The computed offset, **in bytes**, cannot overflow an `isize`.\n     ///\n@@ -1950,7 +1950,7 @@ impl<T: ?Sized> *mut T {\n     /// Behavior:\n     ///\n     /// * Both the starting and resulting pointer must be either in bounds or one\n-    ///   byte past the end of an allocated object.\n+    ///   byte past the end of the same allocated object.\n     ///\n     /// * The computed offset cannot exceed `isize::MAX` **bytes**.\n     ///"}]}