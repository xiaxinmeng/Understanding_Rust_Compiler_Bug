{"sha": "7064a0ec59005f1e67e89a794ff70d687d2d7041", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNjRhMGVjNTkwMDVmMWU2N2U4OWE3OTRmZjcwZDY4N2QyZDcwNDE=", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-02-11T05:07:36Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2020-02-11T05:07:36Z"}, "message": "maximum alternative consistency!", "tree": {"sha": "cc4865f54768fba703c1f71e8dc71d4728eff564", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc4865f54768fba703c1f71e8dc71d4728eff564"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7064a0ec59005f1e67e89a794ff70d687d2d7041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7064a0ec59005f1e67e89a794ff70d687d2d7041", "html_url": "https://github.com/rust-lang/rust/commit/7064a0ec59005f1e67e89a794ff70d687d2d7041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7064a0ec59005f1e67e89a794ff70d687d2d7041/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "192b10391784de14e8cc672314e3b68e9c450fce", "url": "https://api.github.com/repos/rust-lang/rust/commits/192b10391784de14e8cc672314e3b68e9c450fce", "html_url": "https://github.com/rust-lang/rust/commit/192b10391784de14e8cc672314e3b68e9c450fce"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "448b988d99c1c44902caf76114d563ecde0ea6a8", "filename": "src/libstd/backtrace.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7064a0ec59005f1e67e89a794ff70d687d2d7041/src%2Flibstd%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7064a0ec59005f1e67e89a794ff70d687d2d7041/src%2Flibstd%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbacktrace.rs?ref=7064a0ec59005f1e67e89a794ff70d687d2d7041", "patch": "@@ -168,11 +168,17 @@ impl fmt::Debug for Backtrace {\n         };\n         capture.resolve();\n \n+        let frames = if fmt.alternate() {\n+            &capture.frames[..]\n+        } else {\n+            &capture.frames[capture.actual_start..]\n+        };\n+\n         write!(fmt, \"Backtrace \")?;\n \n         let mut dbg = fmt.debug_list();\n \n-        for frame in &capture.frames {\n+        for frame in frames {\n             if frame.frame.ip().is_null() {\n                 continue;\n             }\n@@ -215,7 +221,7 @@ impl fmt::Debug for BytesOrWide {\n                 BytesOrWide::Bytes(w) => BytesOrWideString::Bytes(w),\n                 BytesOrWide::Wide(w) => BytesOrWideString::Wide(w),\n             },\n-            backtrace::PrintFmt::Full,\n+            if fmt.alternate() { backtrace::PrintFmt::Full } else { backtrace::PrintFmt::Short },\n             crate::env::current_dir().as_ref().ok(),\n         )\n     }\n@@ -419,6 +425,7 @@ mod tests {\n         let bt = Backtrace::force_capture();\n         eprintln!(\"captured: {:?}\", bt);\n         eprintln!(\"display print: {}\", bt);\n+        eprintln!(\"display print alt: {:#}\", bt);\n         eprintln!(\"resolved: {:?}\", bt);\n         eprintln!(\"resolved alt: {:#?}\", bt);\n         unimplemented!();"}]}