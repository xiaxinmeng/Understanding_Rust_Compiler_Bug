{"sha": "2de4932453a99a19e9033edb47db7a66a612188c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZTQ5MzI0NTNhOTlhMTllOTAzM2VkYjQ3ZGI3YTY2YTYxMjE4OGM=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-03-08T02:17:31Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-03-08T02:17:31Z"}, "message": "update error messages in parse-fail tests", "tree": {"sha": "40a2d311c084984adf4cfb5077d5b6579a9d8998", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40a2d311c084984adf4cfb5077d5b6579a9d8998"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2de4932453a99a19e9033edb47db7a66a612188c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2de4932453a99a19e9033edb47db7a66a612188c", "html_url": "https://github.com/rust-lang/rust/commit/2de4932453a99a19e9033edb47db7a66a612188c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2de4932453a99a19e9033edb47db7a66a612188c/comments", "author": null, "committer": null, "parents": [{"sha": "210dd611aa1bd80ed2f4e663b3c4b87b3cea069a", "url": "https://api.github.com/repos/rust-lang/rust/commits/210dd611aa1bd80ed2f4e663b3c4b87b3cea069a", "html_url": "https://github.com/rust-lang/rust/commit/210dd611aa1bd80ed2f4e663b3c4b87b3cea069a"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "6ba0fb5f15bb139c99c6acd7d00ebfdb9c49e412", "filename": "src/test/parse-fail/issue-19096.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fissue-19096.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fissue-19096.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-19096.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -12,5 +12,5 @@\n \n fn main() {\n     let t = (42, 42);\n-    t.0::<isize>; //~ ERROR expected one of `.`, `;`, `}`, or an operator, found `::`\n+    t.0::<isize>; //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `::`\n }"}, {"sha": "229b12136fc6c2d52126e55543656e622ce03c8a", "filename": "src/test/parse-fail/issue-3036.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fissue-3036.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fissue-3036.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-3036.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -15,4 +15,4 @@\n fn main()\n {\n     let x = 3\n-} //~ ERROR: expected one of `.`, `;`, or an operator, found `}`\n+} //~ ERROR: expected one of `.`, `;`, `?`, or an operator, found `}`"}, {"sha": "1c55d70f607379d294c88f6dd0a3e938fdb0fe6b", "filename": "src/test/parse-fail/macros-no-semicolon.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fmacros-no-semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fmacros-no-semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fmacros-no-semicolon.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -12,6 +12,6 @@\n \n fn main() {\n     assert_eq!(1, 2)\n-    assert_eq!(3, 4) //~ ERROR expected one of `.`, `;`, `}`, or an operator, found `assert_eq`\n+    assert_eq!(3, 4) //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `assert_eq`\n     println!(\"hello\");\n }"}, {"sha": "37b66601e7092d2f5519c59cad4c4247e720ac7c", "filename": "src/test/parse-fail/match-refactor-to-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fmatch-refactor-to-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fmatch-refactor-to-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fmatch-refactor-to-expr.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -14,7 +14,7 @@ fn main() {\n     let foo =\n         match //~ NOTE did you mean to remove this `match` keyword?\n         Some(4).unwrap_or_else(5)\n-        ; //~ ERROR expected one of `.`, `{`, or an operator, found `;`\n+        ; //~ ERROR expected one of `.`, `?`, `{`, or an operator, found `;`\n \n     println!(\"{}\", foo)\n }"}, {"sha": "95aa71b0cdfdbcd41c6bfc7225c2de917e77c233", "filename": "src/test/parse-fail/range-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Frange-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Frange-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Frange-3.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -14,5 +14,5 @@\n \n pub fn main() {\n     let r = 1..2..3;\n-    //~^ ERROR expected one of `.`, `;`, or an operator, found `..`\n+    //~^ ERROR expected one of `.`, `;`, `?`, or an operator, found `..`\n }"}, {"sha": "4500df116a2de5cb25c192707992481c523091b8", "filename": "src/test/parse-fail/range-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Frange-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Frange-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Frange-4.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -14,5 +14,5 @@\n \n pub fn main() {\n     let r = ..1..2;\n-    //~^ ERROR expected one of `.`, `;`, or an operator, found `..`\n+    //~^ ERROR expected one of `.`, `;`, `?`, or an operator, found `..`\n }"}, {"sha": "5c09f68970bc4b462801ae5103ea761da4f64b73", "filename": "src/test/parse-fail/raw-str-unbalanced.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fraw-str-unbalanced.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fraw-str-unbalanced.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fraw-str-unbalanced.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -12,5 +12,5 @@\n \n static s: &'static str =\n     r#\"\n-      \"## //~ ERROR expected one of `.`, `;`, or an operator, found `#`\n+      \"## //~ ERROR expected one of `.`, `;`, `?`, or an operator, found `#`\n ;"}, {"sha": "301bd0e8b1c9c08e94179a05761d0e1e8d6ccf0e", "filename": "src/test/parse-fail/removed-syntax-mut-vec-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fremoved-syntax-mut-vec-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fremoved-syntax-mut-vec-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fremoved-syntax-mut-vec-expr.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -13,5 +13,5 @@\n fn f() {\n     let v = [mut 1, 2, 3, 4];\n     //~^  ERROR expected identifier, found keyword `mut`\n-    //~^^ ERROR expected one of `!`, `,`, `.`, `::`, `;`, `]`, `{`, or an operator, found `1`\n+    //~^^ ERROR expected one of `!`, `,`, `.`, `::`, `;`, `?`, `]`, `{`, or an operator, found `1`\n }"}, {"sha": "2f637cf0b4e7633d63a1eaf8dd5546a3f6ce576d", "filename": "src/test/parse-fail/removed-syntax-uniq-mut-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fremoved-syntax-uniq-mut-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fremoved-syntax-uniq-mut-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fremoved-syntax-uniq-mut-expr.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -13,5 +13,5 @@\n fn f() {\n     let a_box = box mut 42;\n     //~^  ERROR expected identifier, found keyword `mut`\n-    //~^^ ERROR expected one of `!`, `.`, `::`, `;`, `{`, or an operator, found `42`\n+    //~^^ ERROR expected one of `!`, `.`, `::`, `;`, `?`, `{`, or an operator, found `42`\n }"}, {"sha": "156b172a94402c695f07333943459416757e5cda", "filename": "src/test/parse-fail/removed-syntax-with-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fremoved-syntax-with-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fremoved-syntax-with-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fremoved-syntax-with-1.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -18,5 +18,5 @@ fn removed_with() {\n \n     let a = S { foo: (), bar: () };\n     let b = S { foo: () with a };\n-    //~^ ERROR expected one of `,`, `.`, `}`, or an operator, found `with`\n+    //~^ ERROR expected one of `,`, `.`, `?`, `}`, or an operator, found `with`\n }"}, {"sha": "930984555600be3e094cf17c15d25ce95e6bc81c", "filename": "src/test/parse-fail/struct-literal-in-for.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-for.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -23,7 +23,7 @@ impl Foo {\n fn main() {\n     for x in Foo {\n         x: 3    //~ ERROR expected type, found `3`\n-    }.hi() { //~ ERROR expected one of `.`, `;`, `}`, or an operator, found `{`\n+    }.hi() { //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `{`\n         println!(\"yo\");\n     }\n }"}, {"sha": "db6a360a5675a46334df05afb095e4367da1df73", "filename": "src/test/parse-fail/struct-literal-in-if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-if.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -23,7 +23,7 @@ impl Foo {\n fn main() {\n     if Foo {\n         x: 3    //~ ERROR expected type, found `3`\n-    }.hi() { //~ ERROR expected one of `.`, `;`, `}`, or an operator, found `{`\n+    }.hi() { //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `{`\n         println!(\"yo\");\n     }\n }"}, {"sha": "7038cc798c41542580e4599dc03246ce521e8f6e", "filename": "src/test/parse-fail/struct-literal-in-match-discriminant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-match-discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-match-discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-match-discriminant.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -20,6 +20,6 @@ fn main() {\n     } {\n         Foo {\n             x: x\n-        } => {} //~ ERROR expected one of `.`, `;`, `}`, or an operator, found `=>`\n+        } => {} //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `=>`\n     }\n }"}, {"sha": "75e4eb3de070bc3315912a28c2ee6486b08c8cc8", "filename": "src/test/parse-fail/struct-literal-in-while.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2de4932453a99a19e9033edb47db7a66a612188c/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fstruct-literal-in-while.rs?ref=2de4932453a99a19e9033edb47db7a66a612188c", "patch": "@@ -23,7 +23,7 @@ impl Foo {\n fn main() {\n     while Foo {\n         x: 3    //~ ERROR expected type, found `3`\n-    }.hi() { //~ ERROR expected one of `.`, `;`, `}`, or an operator, found `{`\n+    }.hi() { //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `{`\n         println!(\"yo\");\n     }\n }"}]}