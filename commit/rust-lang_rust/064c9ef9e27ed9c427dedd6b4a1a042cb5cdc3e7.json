{"sha": "064c9ef9e27ed9c427dedd6b4a1a042cb5cdc3e7", "node_id": "C_kwDOAAsO6NoAKDA2NGM5ZWY5ZTI3ZWQ5YzQyN2RlZGQ2YjRhMWEwNDJjYjVjZGMzZTc", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-08-31T16:54:19Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-09-08T15:25:28Z"}, "message": "Make clicking closing brace hint go to the opening brace", "tree": {"sha": "984eecf2b1267247c6b970ab5cb4514727a70eb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/984eecf2b1267247c6b970ab5cb4514727a70eb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/064c9ef9e27ed9c427dedd6b4a1a042cb5cdc3e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/064c9ef9e27ed9c427dedd6b4a1a042cb5cdc3e7", "html_url": "https://github.com/rust-lang/rust/commit/064c9ef9e27ed9c427dedd6b4a1a042cb5cdc3e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/064c9ef9e27ed9c427dedd6b4a1a042cb5cdc3e7/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "241807dbf9785748a76cb61358a68214fc24e013", "url": "https://api.github.com/repos/rust-lang/rust/commits/241807dbf9785748a76cb61358a68214fc24e013", "html_url": "https://github.com/rust-lang/rust/commit/241807dbf9785748a76cb61358a68214fc24e013"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "d1b1d2c331a513d3ca6a17d4de2609f672f6ed92", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/064c9ef9e27ed9c427dedd6b4a1a042cb5cdc3e7/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064c9ef9e27ed9c427dedd6b4a1a042cb5cdc3e7/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=064c9ef9e27ed9c427dedd6b4a1a042cb5cdc3e7", "patch": "@@ -129,6 +129,11 @@ impl fmt::Debug for InlayHintLabel {\n \n pub struct InlayHintLabelPart {\n     pub text: String,\n+    /// Source location represented by this label part. The client will use this to fetch the part's\n+    /// hover tooltip, and Ctrl+Clicking the label part will navigate to the definition the location\n+    /// refers to (not necessarily the location itself).\n+    /// When setting this, no tooltip must be set on the containing hint, or VS Code will display\n+    /// them both.\n     pub linked_location: Option<FileRange>,\n }\n \n@@ -266,10 +271,10 @@ fn closing_brace_hints(\n ) -> Option<()> {\n     let min_lines = config.closing_brace_hints_min_lines?;\n \n-    let name = |it: ast::Name| it.syntax().text_range().start();\n+    let name = |it: ast::Name| it.syntax().text_range();\n \n     let mut closing_token;\n-    let (label, name_offset) = if let Some(item_list) = ast::AssocItemList::cast(node.clone()) {\n+    let (label, name_range) = if let Some(item_list) = ast::AssocItemList::cast(node.clone()) {\n         closing_token = item_list.r_curly_token()?;\n \n         let parent = item_list.syntax().parent()?;\n@@ -279,11 +284,11 @@ fn closing_brace_hints(\n                     let imp = sema.to_def(&imp)?;\n                     let ty = imp.self_ty(sema.db);\n                     let trait_ = imp.trait_(sema.db);\n-\n-                    (match trait_ {\n+                    let hint_text = match trait_ {\n                         Some(tr) => format!(\"impl {} for {}\", tr.name(sema.db), ty.display_truncated(sema.db, config.max_length)),\n                         None => format!(\"impl {}\", ty.display_truncated(sema.db, config.max_length)),\n-                    }, None)\n+                    };\n+                    (hint_text, None)\n                 },\n                 ast::Trait(tr) => {\n                     (format!(\"trait {}\", tr.name()?), tr.name().map(name))\n@@ -327,7 +332,7 @@ fn closing_brace_hints(\n \n         (\n             format!(\"{}!\", mac.path()?),\n-            mac.path().and_then(|it| it.segment()).map(|it| it.syntax().text_range().start()),\n+            mac.path().and_then(|it| it.segment()).map(|it| it.syntax().text_range()),\n         )\n     } else {\n         return None;\n@@ -352,11 +357,12 @@ fn closing_brace_hints(\n         return None;\n     }\n \n+    let linked_location = name_range.map(|range| FileRange { file_id, range });\n     acc.push(InlayHint {\n         range: closing_token.text_range(),\n         kind: InlayKind::ClosingBraceHint,\n-        label: label.into(),\n-        tooltip: name_offset.map(|it| InlayTooltip::HoverOffset(file_id, it)),\n+        label: InlayHintLabel { parts: vec![InlayHintLabelPart { text: label, linked_location }] },\n+        tooltip: None, // provided by label part location\n     });\n \n     None"}]}