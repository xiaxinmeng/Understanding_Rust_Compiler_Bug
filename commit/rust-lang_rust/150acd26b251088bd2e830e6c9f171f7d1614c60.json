{"sha": "150acd26b251088bd2e830e6c9f171f7d1614c60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MGFjZDI2YjI1MTA4OGJkMmU4MzBlNmM5ZjE3MWY3ZDE2MTRjNjA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-18T18:40:43Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-18T18:41:06Z"}, "message": "docs: Doc tests may use elipses", "tree": {"sha": "7495a1f95655ebc3ee1e01c9c59b667b5d48861a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7495a1f95655ebc3ee1e01c9c59b667b5d48861a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/150acd26b251088bd2e830e6c9f171f7d1614c60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/150acd26b251088bd2e830e6c9f171f7d1614c60", "html_url": "https://github.com/rust-lang/rust/commit/150acd26b251088bd2e830e6c9f171f7d1614c60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/150acd26b251088bd2e830e6c9f171f7d1614c60/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0d8b7fe6491d539254d281f39a6c0aa0261e42d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0d8b7fe6491d539254d281f39a6c0aa0261e42d", "html_url": "https://github.com/rust-lang/rust/commit/d0d8b7fe6491d539254d281f39a6c0aa0261e42d"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "8b872a9a736ddaad231f66a52eccdb8c86786054", "filename": "doc/rust.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/150acd26b251088bd2e830e6c9f171f7d1614c60/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/150acd26b251088bd2e830e6c9f171f7d1614c60/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=150acd26b251088bd2e830e6c9f171f7d1614c60", "patch": "@@ -749,15 +749,15 @@ An example of a module:\n mod math {\n     type complex = (f64, f64);\n     fn sin(f: f64) -> f64 {\n-        // ...\n+        ...\n # fail;\n     }\n     fn cos(f: f64) -> f64 {\n-        // ...\n+        ...\n # fail;\n     }\n     fn tan(f: f64) -> f64 {\n-        // ...\n+        ...\n # fail;\n     }\n }\n@@ -884,7 +884,7 @@ mod foo {\n     }\n \n     fn helper(x: int, y: int) {\n-        // ...\n+        ...\n     }\n }\n \n@@ -912,11 +912,11 @@ mod foo {\n     }\n \n     fn secondary() {\n-        // ...\n+        ...\n     }\n \n     fn helper(x: int, y: int) {\n-        // ...\n+        ...\n     }\n }\n ~~~~~~~~\n@@ -1028,7 +1028,7 @@ pure fn lt_42(x: int) -> bool {\n Pure functions may call other pure functions:\n \n ~~~~{.xfail-test}\n-pure fn pure_length<T>(ls: List<T>) -> uint { /* ... */ }\n+pure fn pure_length<T>(ls: List<T>) -> uint { ... }\n \n pure fn nonempty_list<T>(ls: List<T>) -> bool { pure_length(ls) > 0u }\n ~~~~\n@@ -1327,7 +1327,7 @@ specified, after the `impl` keyword.\n # trait seq<T> { }\n \n impl<T> ~[T]: seq<T> {\n-   // ...\n+   ...\n }\n impl u32: seq<bool> {\n    /* Treat the integer as a sequence of bits */\n@@ -1426,13 +1426,13 @@ An example of attributes:\n // A function marked as a unit test\n #[test]\n fn test_foo() {\n-  // ...\n+  ...\n }\n \n // A conditionally-compiled module\n #[cfg(target_os=\"linux\")]\n mod bar {\n-  // ...\n+  ...\n }\n \n // A documentation attribute\n@@ -3036,7 +3036,7 @@ let ch = comm::Chan(po);\n \n do task::spawn {\n     // let task run, do other things\n-    // ...\n+    ...\n     comm::send(ch, true);\n };\n "}]}