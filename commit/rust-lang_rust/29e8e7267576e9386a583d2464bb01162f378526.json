{"sha": "29e8e7267576e9386a583d2464bb01162f378526", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZThlNzI2NzU3NmU5Mzg2YTU4M2QyNDY0YmIwMTE2MmYzNzg1MjY=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-11-25T08:18:09Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-11-25T19:18:36Z"}, "message": "Fix typos", "tree": {"sha": "1a2b6f886aa3c41d05ccf91383a817be58089915", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a2b6f886aa3c41d05ccf91383a817be58089915"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29e8e7267576e9386a583d2464bb01162f378526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29e8e7267576e9386a583d2464bb01162f378526", "html_url": "https://github.com/rust-lang/rust/commit/29e8e7267576e9386a583d2464bb01162f378526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29e8e7267576e9386a583d2464bb01162f378526/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db79d2f63780613e700cb58b4339c48287555ae0", "url": "https://api.github.com/repos/rust-lang/rust/commits/db79d2f63780613e700cb58b4339c48287555ae0", "html_url": "https://github.com/rust-lang/rust/commit/db79d2f63780613e700cb58b4339c48287555ae0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d0730bd121c9815c68ccf3d9c4f1d8a06eb1ea89", "filename": "compiler/rustc_middle/src/ty/query/plumbing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29e8e7267576e9386a583d2464bb01162f378526/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29e8e7267576e9386a583d2464bb01162f378526/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs?ref=29e8e7267576e9386a583d2464bb01162f378526", "patch": "@@ -128,7 +128,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     pub fn try_print_query_stack(handler: &Handler, num_frames: Option<usize>) {\n         eprintln!(\"query stack during panic:\");\n \n-        // Be careful reyling on global state here: this code is called from\n+        // Be careful relying on global state here: this code is called from\n         // a panic hook, which means that the global `Handler` may be in a weird\n         // state if it was responsible for triggering the panic.\n         let mut i = 0;\n@@ -507,7 +507,7 @@ macro_rules! define_queries_struct {\n     (tcx: $tcx:tt,\n      input: ($(([$($modifiers:tt)*] [$($attr:tt)*] [$name:ident]))*)) => {\n         pub struct Queries<$tcx> {\n-            /// This provides access to the incremental comilation on-disk cache for query results.\n+            /// This provides access to the incremental compilation on-disk cache for query results.\n             /// Do not access this directly. It is only meant to be used by\n             /// `DepGraph::try_mark_green()` and the query infrastructure.\n             /// This is `None` if we are not incremental compilation mode"}]}