{"sha": "50e0fbc9042856527dc35a0dfd9a7716dcf69ccd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZTBmYmM5MDQyODU2NTI3ZGMzNWEwZGZkOWE3NzE2ZGNmNjljY2Q=", "commit": {"author": {"name": "Matthew Piziak", "email": "matthew.piziak@gmail.com", "date": "2016-08-17T18:12:19Z"}, "committer": {"name": "Matthew Piziak", "email": "matthew.piziak@gmail.com", "date": "2016-08-26T15:54:32Z"}, "message": "accumulate vector and assert for RangeFrom and RangeInclusive examples\n\nPR #35695 for `Range` was approved, so it seems that this side-effect-free style is preferred for Range* examples. This PR performs the same translation for `RangeFrom` and `RangeInclusive`. It also removes what looks to be an erroneously commented line for `#![feature(step_by)]`, and an unnecessary primitive-type annotation in `0u8..`.\n\nadd `fn main` wrappers to enable Rust Playground \"Run\" button", "tree": {"sha": "94435efec5aa505fe631296b5096c6689d411334", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94435efec5aa505fe631296b5096c6689d411334"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50e0fbc9042856527dc35a0dfd9a7716dcf69ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50e0fbc9042856527dc35a0dfd9a7716dcf69ccd", "html_url": "https://github.com/rust-lang/rust/commit/50e0fbc9042856527dc35a0dfd9a7716dcf69ccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50e0fbc9042856527dc35a0dfd9a7716dcf69ccd/comments", "author": {"login": "matthew-piziak", "id": 6801001, "node_id": "MDQ6VXNlcjY4MDEwMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/6801001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-piziak", "html_url": "https://github.com/matthew-piziak", "followers_url": "https://api.github.com/users/matthew-piziak/followers", "following_url": "https://api.github.com/users/matthew-piziak/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-piziak/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-piziak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-piziak/subscriptions", "organizations_url": "https://api.github.com/users/matthew-piziak/orgs", "repos_url": "https://api.github.com/users/matthew-piziak/repos", "events_url": "https://api.github.com/users/matthew-piziak/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-piziak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthew-piziak", "id": 6801001, "node_id": "MDQ6VXNlcjY4MDEwMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/6801001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-piziak", "html_url": "https://github.com/matthew-piziak", "followers_url": "https://api.github.com/users/matthew-piziak/followers", "following_url": "https://api.github.com/users/matthew-piziak/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-piziak/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-piziak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-piziak/subscriptions", "organizations_url": "https://api.github.com/users/matthew-piziak/orgs", "repos_url": "https://api.github.com/users/matthew-piziak/repos", "events_url": "https://api.github.com/users/matthew-piziak/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-piziak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaf71f8d1034f16140791f566cab3f3c9a0bf96a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf71f8d1034f16140791f566cab3f3c9a0bf96a", "html_url": "https://github.com/rust-lang/rust/commit/eaf71f8d1034f16140791f566cab3f3c9a0bf96a"}], "stats": {"total": 32, "additions": 10, "deletions": 22}, "files": [{"sha": "66d05d81d80cd7e92157bfd865eb5d353713791f", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/50e0fbc9042856527dc35a0dfd9a7716dcf69ccd/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50e0fbc9042856527dc35a0dfd9a7716dcf69ccd/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=50e0fbc9042856527dc35a0dfd9a7716dcf69ccd", "patch": "@@ -263,14 +263,12 @@ impl<A: Step> ops::RangeFrom<A> {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(step_by)]\n-    ///\n-    /// for i in (0u8..).step_by(2).take(10) {\n-    ///     println!(\"{}\", i);\n+    /// #![feature(step_by)]\n+    /// fn main() {\n+    ///     let result: Vec<_> = (0..).step_by(2).take(5).collect();\n+    ///     assert_eq!(result, vec![0, 2, 4, 6, 8]);\n     /// }\n     /// ```\n-    ///\n-    /// This prints the first ten even natural integers (0 to 18).\n     #[unstable(feature = \"step_by\", reason = \"recent addition\",\n                issue = \"27741\")]\n     pub fn step_by(self, by: A) -> StepBy<A, Self> {\n@@ -291,8 +289,10 @@ impl<A: Step> ops::Range<A> {\n     ///\n     /// ```\n     /// #![feature(step_by)]\n-    /// let result: Vec<_> = (0..10).step_by(2).collect();\n-    /// assert_eq!(result, vec![0, 2, 4, 6, 8]);\n+    /// fn main() {\n+    ///     let result: Vec<_> = (0..10).step_by(2).collect();\n+    ///     assert_eq!(result, vec![0, 2, 4, 6, 8]);\n+    /// }\n     /// ```\n     #[unstable(feature = \"step_by\", reason = \"recent addition\",\n                issue = \"27741\")]\n@@ -315,20 +315,8 @@ impl<A: Step> ops::RangeInclusive<A> {\n     /// ```\n     /// #![feature(step_by, inclusive_range_syntax)]\n     ///\n-    /// for i in (0...10).step_by(2) {\n-    ///     println!(\"{}\", i);\n-    /// }\n-    /// ```\n-    ///\n-    /// This prints:\n-    ///\n-    /// ```text\n-    /// 0\n-    /// 2\n-    /// 4\n-    /// 6\n-    /// 8\n-    /// 10\n+    /// let result: Vec<_> = (0...10).step_by(2).collect();\n+    /// assert_eq!(result, vec![0, 2, 4, 6, 8, 10]);\n     /// ```\n     #[unstable(feature = \"step_by\", reason = \"recent addition\",\n                issue = \"27741\")]"}]}