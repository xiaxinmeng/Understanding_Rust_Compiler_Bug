{"sha": "9db6061d64fbec7470f4e4419d16c47fe9aeb322", "node_id": "C_kwDOAAsO6NoAKDlkYjYwNjFkNjRmYmVjNzQ3MGY0ZTQ0MTlkMTZjNDdmZTlhZWIzMjI", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-11T15:09:48Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-13T04:37:14Z"}, "message": "Fix line lengths", "tree": {"sha": "916bd8c4297d8d78ffb75992daaff9957058ee6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/916bd8c4297d8d78ffb75992daaff9957058ee6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9db6061d64fbec7470f4e4419d16c47fe9aeb322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9db6061d64fbec7470f4e4419d16c47fe9aeb322", "html_url": "https://github.com/rust-lang/rust/commit/9db6061d64fbec7470f4e4419d16c47fe9aeb322", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9db6061d64fbec7470f4e4419d16c47fe9aeb322/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13d53273f81142cbea70e63730f0adc199723153", "url": "https://api.github.com/repos/rust-lang/rust/commits/13d53273f81142cbea70e63730f0adc199723153", "html_url": "https://github.com/rust-lang/rust/commit/13d53273f81142cbea70e63730f0adc199723153"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "baf95627c702820ea56bac0fea38841e73383ed6", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9db6061d64fbec7470f4e4419d16c47fe9aeb322/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/9db6061d64fbec7470f4e4419d16c47fe9aeb322/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=9db6061d64fbec7470f4e4419d16c47fe9aeb322", "patch": "@@ -544,17 +544,21 @@ def check_command(c, cache):\n         cerr = \"\"\n         if c.cmd in ['has', 'hasraw', 'matches', 'matchesraw']:  # string test\n             regexp = c.cmd.startswith('matches')\n-            if len(c.args) == 1 and not regexp and 'raw' not in c.cmd:  # @has <path> = file existence\n+\n+            # @has <path> = file existence\n+            if len(c.args) == 1 and not regexp and 'raw' not in c.cmd:\n                 try:\n                     cache.get_file(c.args[0])\n                     ret = True\n                 except FailedCheck as err:\n                     cerr = str(err)\n                     ret = False\n-            elif len(c.args) == 2 and 'raw' in c.cmd:  # @hasraw/matchesraw <path> <pat> = string test\n+            # @hasraw/matchesraw <path> <pat> = string test\n+            elif len(c.args) == 2 and 'raw' in c.cmd:\n                 cerr = \"`PATTERN` did not match\"\n                 ret = check_string(cache.get_file(c.args[0]), c.args[1], regexp)\n-            elif len(c.args) == 3 and 'raw' not in c.cmd:  # @has/matches <path> <pat> <match> = XML tree test\n+            # @has/matches <path> <pat> <match> = XML tree test\n+            elif len(c.args) == 3 and 'raw' not in c.cmd:\n                 cerr = \"`XPATH PATTERN` did not match\"\n                 ret = get_nb_matching_elements(cache, c, regexp, True) != 0\n             else:"}]}