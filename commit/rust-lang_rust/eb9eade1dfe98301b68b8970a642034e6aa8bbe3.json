{"sha": "eb9eade1dfe98301b68b8970a642034e6aa8bbe3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViOWVhZGUxZGZlOTgzMDFiNjhiODk3MGE2NDIwMzRlNmFhOGJiZTM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T04:24:18Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:29Z"}, "message": "librustc: De-`@mut` the `CollectFreevarsVisitor`", "tree": {"sha": "4cbeafe74f7d59fe9f807a731c8957f2f26a2b2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cbeafe74f7d59fe9f807a731c8957f2f26a2b2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb9eade1dfe98301b68b8970a642034e6aa8bbe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb9eade1dfe98301b68b8970a642034e6aa8bbe3", "html_url": "https://github.com/rust-lang/rust/commit/eb9eade1dfe98301b68b8970a642034e6aa8bbe3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb9eade1dfe98301b68b8970a642034e6aa8bbe3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fa456d4f4980eba1d8efa23e7290dcefb4346d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fa456d4f4980eba1d8efa23e7290dcefb4346d4", "html_url": "https://github.com/rust-lang/rust/commit/2fa456d4f4980eba1d8efa23e7290dcefb4346d4"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "2b1154480c82a18f151a5256081a07d1c8f49a7d", "filename": "src/librustc/middle/freevars.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/eb9eade1dfe98301b68b8970a642034e6aa8bbe3/src%2Flibrustc%2Fmiddle%2Ffreevars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb9eade1dfe98301b68b8970a642034e6aa8bbe3/src%2Flibrustc%2Fmiddle%2Ffreevars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffreevars.rs?ref=eb9eade1dfe98301b68b8970a642034e6aa8bbe3", "patch": "@@ -33,8 +33,8 @@ pub type freevar_info = @~[@freevar_entry];\n pub type freevar_map = @mut HashMap<ast::NodeId, freevar_info>;\n \n struct CollectFreevarsVisitor {\n-    seen: @mut HashMap<ast::NodeId, ()>,\n-    refs: @mut ~[@freevar_entry],\n+    seen: HashMap<ast::NodeId, ()>,\n+    refs: ~[@freevar_entry],\n     def_map: resolve::DefMap,\n }\n \n@@ -90,8 +90,8 @@ impl Visitor<int> for CollectFreevarsVisitor {\n // in order to start the search.\n fn collect_freevars(def_map: resolve::DefMap, blk: ast::P<ast::Block>)\n     -> freevar_info {\n-    let seen = @mut HashMap::new();\n-    let refs = @mut ~[];\n+    let seen = HashMap::new();\n+    let refs = ~[];\n \n     let mut v = CollectFreevarsVisitor {\n         seen: seen,\n@@ -100,7 +100,11 @@ fn collect_freevars(def_map: resolve::DefMap, blk: ast::P<ast::Block>)\n     };\n \n     v.visit_block(blk, 1);\n-    return @(*refs).clone();\n+    let CollectFreevarsVisitor {\n+        refs,\n+        ..\n+    } = v;\n+    return @refs;\n }\n \n struct AnnotateFreevarsVisitor {"}]}