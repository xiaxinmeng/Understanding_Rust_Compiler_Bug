{"sha": "27b4c3f96231099c32c789a8671632f78431bb69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3YjRjM2Y5NjIzMTA5OWMzMmM3ODlhODY3MTYzMmY3ODQzMWJiNjk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-06T20:55:27Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-06T20:55:27Z"}, "message": "Whitespace cleanup, and copy target into closure.", "tree": {"sha": "bcb3a25624bba0e3c2aad4a40c4ddb7b5b2a6db8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcb3a25624bba0e3c2aad4a40c4ddb7b5b2a6db8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27b4c3f96231099c32c789a8671632f78431bb69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27b4c3f96231099c32c789a8671632f78431bb69", "html_url": "https://github.com/rust-lang/rust/commit/27b4c3f96231099c32c789a8671632f78431bb69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27b4c3f96231099c32c789a8671632f78431bb69/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb8eff95e2ae88206867366971e02cbb7d95b62d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb8eff95e2ae88206867366971e02cbb7d95b62d", "html_url": "https://github.com/rust-lang/rust/commit/fb8eff95e2ae88206867366971e02cbb7d95b62d"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "5f72ddf54966ca0e160d50ab5e4c3af3f7ea4cc3", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/27b4c3f96231099c32c789a8671632f78431bb69/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27b4c3f96231099c32c789a8671632f78431bb69/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=27b4c3f96231099c32c789a8671632f78431bb69", "patch": "@@ -1990,8 +1990,7 @@ impure fn trans_bind(@block_ctxt cx, @ast.expr f,\n \n             // Synthesize a closure type.\n             let @ty.t bindings_ty = ty.plain_ty(ty.ty_tup(bound_tys));\n-            let TypeRef llbindings_ty = type_of(bcx.fcx.ccx,\n-                                                bindings_ty);\n+            let TypeRef llbindings_ty = type_of(bcx.fcx.ccx, bindings_ty);\n             let TypeRef llclosure_ty =\n                 T_ptr(T_box(T_struct(vec(T_ptr(T_tydesc()),\n                                          type_of(bcx.fcx.ccx,\n@@ -2013,23 +2012,27 @@ impure fn trans_bind(@block_ctxt cx, @ast.expr f,\n                                   C_int(abi.box_rc_field_body)));\n             bcx.build.Store(C_int(1), rc);\n \n-\n             // Store bindings tydesc.\n             auto bound_tydesc =\n                 bcx.build.GEP(closure,\n                               vec(C_int(0),\n                                   C_int(abi.closure_elt_tydesc)));\n-\n             auto bindings_tydesc = get_tydesc(bcx, bindings_ty);\n             bcx.build.Store(bindings_tydesc, bound_tydesc);\n \n-            // Copy args into body fields.\n-            auto bindings =\n+            // Store thunk-target.\n+            auto bound_target =\n                 bcx.build.GEP(closure,\n                               vec(C_int(0),\n-                                  C_int(abi.closure_elt_bindings)));\n+                                  C_int(abi.closure_elt_target)));\n+            bcx.build.Store(bcx.build.Load(f_res.res.val), bound_target);\n \n+            // Copy expr values into boxed bindings.\n             let int i = 0;\n+            auto bindings =\n+                bcx.build.GEP(closure,\n+                              vec(C_int(0),\n+                                  C_int(abi.closure_elt_bindings)));\n             for (ValueRef v in bound_vals) {\n                 auto bound = bcx.build.GEP(bindings,\n                                            vec(C_int(0),C_int(i)));"}]}