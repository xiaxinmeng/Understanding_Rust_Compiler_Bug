{"sha": "7064f69c43296ca0200c7892422ea9411c322181", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNjRmNjljNDMyOTZjYTAyMDBjNzg5MjQyMmVhOTQxMWMzMjIxODE=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-20T16:43:46Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-20T17:00:48Z"}, "message": "Abort instead of UB if promotion fails", "tree": {"sha": "72ae6a3784e0d54edbb5315fcbedd4ec695d69f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72ae6a3784e0d54edbb5315fcbedd4ec695d69f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7064f69c43296ca0200c7892422ea9411c322181", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7064f69c43296ca0200c7892422ea9411c322181", "html_url": "https://github.com/rust-lang/rust/commit/7064f69c43296ca0200c7892422ea9411c322181", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7064f69c43296ca0200c7892422ea9411c322181/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bea4d1fc66b0ab1406c4c0e184af761485a3c6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bea4d1fc66b0ab1406c4c0e184af761485a3c6a", "html_url": "https://github.com/rust-lang/rust/commit/3bea4d1fc66b0ab1406c4c0e184af761485a3c6a"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "52234af08c1ab5d8f7103a0e9681dac27f9905e9", "filename": "src/librustc_codegen_llvm/mir/operand.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7064f69c43296ca0200c7892422ea9411c322181/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7064f69c43296ca0200c7892422ea9411c322181/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs?ref=7064f69c43296ca0200c7892422ea9411c322181", "patch": "@@ -18,7 +18,7 @@ use rustc_data_structures::indexed_vec::Idx;\n use rustc_data_structures::sync::Lrc;\n \n use base;\n-use common::{CodegenCx, C_null, C_undef, C_usize};\n+use common::{CodegenCx, C_undef, C_usize};\n use builder::{Builder, MemFlags};\n use value::Value;\n use type_of::LayoutLlvmExt;\n@@ -411,7 +411,10 @@ impl<'a, 'tcx> FunctionCx<'a, 'tcx> {\n                     .unwrap_or_else(|err| {\n                         match constant.literal {\n                             mir::Literal::Promoted { .. } => {\n-                                // FIXME: generate a panic here\n+                                // this is unreachable as long as runtime\n+                                // and compile-time agree on values\n+                                // With floats that won't always be true\n+                                // so we generate an abort below\n                             },\n                             mir::Literal::Value { .. } => {\n                                 err.report_as_error(\n@@ -420,10 +423,12 @@ impl<'a, 'tcx> FunctionCx<'a, 'tcx> {\n                                 );\n                             },\n                         }\n+                        let fnname = bx.cx.get_intrinsic(&(\"llvm.trap\"));\n+                        bx.call(fnname, &[], None);\n                         // We've errored, so we don't have to produce working code.\n                         let layout = bx.cx.layout_of(ty);\n                         PlaceRef::new_sized(\n-                            C_null(layout.llvm_type(bx.cx).ptr_to()),\n+                            C_undef(layout.llvm_type(bx.cx).ptr_to()),\n                             layout,\n                             layout.align,\n                         ).load(bx)"}]}