{"sha": "4168c25b0f8aadcfe38c8bdae7cc51c22c2f45d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNjhjMjViMGY4YWFkY2ZlMzhjOGJkYWU3Y2M1MWMyMmMyZjQ1ZDE=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-03-07T21:46:15Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-03-07T21:48:10Z"}, "message": "refactor: Add an alias for the SmallVec in dep_graph", "tree": {"sha": "18326109aad2302b5031fd60107c3df13763590b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18326109aad2302b5031fd60107c3df13763590b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4168c25b0f8aadcfe38c8bdae7cc51c22c2f45d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4168c25b0f8aadcfe38c8bdae7cc51c22c2f45d1", "html_url": "https://github.com/rust-lang/rust/commit/4168c25b0f8aadcfe38c8bdae7cc51c22c2f45d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4168c25b0f8aadcfe38c8bdae7cc51c22c2f45d1/comments", "author": null, "committer": null, "parents": [{"sha": "c6f1215d925561021eec296d9e88aa0305d0a18d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6f1215d925561021eec296d9e88aa0305d0a18d", "html_url": "https://github.com/rust-lang/rust/commit/c6f1215d925561021eec296d9e88aa0305d0a18d"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "a37a7e760d82b09588ee08b53e4db992f22dcfc6", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4168c25b0f8aadcfe38c8bdae7cc51c22c2f45d1/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4168c25b0f8aadcfe38c8bdae7cc51c22c2f45d1/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=4168c25b0f8aadcfe38c8bdae7cc51c22c2f45d1", "patch": "@@ -350,12 +350,7 @@ impl DepGraph {\n     {\n         if let Some(ref data) = self.data {\n             let (result, task_deps) = ty::tls::with_context(|icx| {\n-                let task_deps = Lock::new(TaskDeps {\n-                    #[cfg(debug_assertions)]\n-                    node: None,\n-                    reads: SmallVec::new(),\n-                    read_set: Default::default(),\n-                });\n+                let task_deps = Lock::new(TaskDeps::default());\n \n                 let r = {\n                     let icx = ty::tls::ImplicitCtxt { task_deps: Some(&task_deps), ..icx.clone() };\n@@ -968,7 +963,7 @@ pub enum WorkProductFileKind {\n #[derive(Clone)]\n struct DepNodeData {\n     node: DepNode,\n-    edges: SmallVec<[DepNodeIndex; 8]>,\n+    edges: EdgesVec,\n     fingerprint: Fingerprint,\n }\n \n@@ -1093,7 +1088,7 @@ impl CurrentDepGraph {\n     fn alloc_node(\n         &self,\n         dep_node: DepNode,\n-        edges: SmallVec<[DepNodeIndex; 8]>,\n+        edges: EdgesVec,\n         fingerprint: Fingerprint,\n     ) -> DepNodeIndex {\n         debug_assert!(\n@@ -1105,7 +1100,7 @@ impl CurrentDepGraph {\n     fn intern_node(\n         &self,\n         dep_node: DepNode,\n-        edges: SmallVec<[DepNodeIndex; 8]>,\n+        edges: EdgesVec,\n         fingerprint: Fingerprint,\n     ) -> DepNodeIndex {\n         match self.node_to_node_index.get_shard_by_value(&dep_node).lock().entry(dep_node) {\n@@ -1168,11 +1163,14 @@ impl DepGraphData {\n     }\n }\n \n+/// The capacity of the `reads` field `SmallVec`\n const TASK_DEPS_READS_CAP: usize = 8;\n+type EdgesVec = SmallVec<[DepNodeIndex; TASK_DEPS_READS_CAP]>;\n+#[derive(Default)]\n pub struct TaskDeps {\n     #[cfg(debug_assertions)]\n     node: Option<DepNode>,\n-    reads: SmallVec<[DepNodeIndex; TASK_DEPS_READS_CAP]>,\n+    reads: EdgesVec,\n     read_set: FxHashSet<DepNodeIndex>,\n }\n "}]}