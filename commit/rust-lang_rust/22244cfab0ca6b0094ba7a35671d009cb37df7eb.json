{"sha": "22244cfab0ca6b0094ba7a35671d009cb37df7eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMjQ0Y2ZhYjBjYTZiMDA5NGJhN2EzNTY3MWQwMDljYjM3ZGY3ZWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-10T11:14:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-10T11:14:28Z"}, "message": "Rollup merge of #61501 - RalfJung:intrinsics, r=rkruppe\n\nget rid of real_intrinsics module\n\ninstead import intrinsics locally in their wrapper functions.\n\n(These functions are wrapper functions as a preparation to fixing https://github.com/rust-lang/rust/issues/53871.)", "tree": {"sha": "e874dc229479b9e42488a4882d305a6ede7ca043", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e874dc229479b9e42488a4882d305a6ede7ca043"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22244cfab0ca6b0094ba7a35671d009cb37df7eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc/juUCRBK7hj4Ov3rIwAAdHIIAH9/GUSfaNDTat4KCQgJ3vOT\n3n19Ev0m+ZscJI5cUqZ8gcSMwyUo2HsynoBqJ67ytpkcF2jzMtgFTp1rh9dnxoIw\nD4UTPoYq8J5dCy00Og4/pAgLOajeutftk/+JaS9Vbe0mUMGncu2hjwJetQg3Pvi7\nvqJpi8NkNAMHc0iSdnn/nOaCs/k26ffZHzVrrlwc4iWvtfKtfHWlW7mICZDYkwiq\nCXlSK+fM2Hdu81cv6zOktU+Fano3QBRR1pSV+YTuLo5k+pHhBP9br1JewtN+YNwn\nz8sCGd1qIPpeUXHcU+HxQJ3Sk30ANmlNfNlrSJsCYN/XZkPjzSC3acpWrUyBe+I=\n=0Dnh\n-----END PGP SIGNATURE-----\n", "payload": "tree e874dc229479b9e42488a4882d305a6ede7ca043\nparent 97df8676b7fb856e396057b8ecfc231489456b10\nparent ff7e044f570f2389092f3d077c92017e727fa111\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1560165268 +0200\ncommitter GitHub <noreply@github.com> 1560165268 +0200\n\nRollup merge of #61501 - RalfJung:intrinsics, r=rkruppe\n\nget rid of real_intrinsics module\n\ninstead import intrinsics locally in their wrapper functions.\n\n(These functions are wrapper functions as a preparation to fixing https://github.com/rust-lang/rust/issues/53871.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22244cfab0ca6b0094ba7a35671d009cb37df7eb", "html_url": "https://github.com/rust-lang/rust/commit/22244cfab0ca6b0094ba7a35671d009cb37df7eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22244cfab0ca6b0094ba7a35671d009cb37df7eb/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97df8676b7fb856e396057b8ecfc231489456b10", "url": "https://api.github.com/repos/rust-lang/rust/commits/97df8676b7fb856e396057b8ecfc231489456b10", "html_url": "https://github.com/rust-lang/rust/commit/97df8676b7fb856e396057b8ecfc231489456b10"}, {"sha": "ff7e044f570f2389092f3d077c92017e727fa111", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff7e044f570f2389092f3d077c92017e727fa111", "html_url": "https://github.com/rust-lang/rust/commit/ff7e044f570f2389092f3d077c92017e727fa111"}], "stats": {"total": 43, "additions": 16, "deletions": 27}, "files": [{"sha": "8d9a51742fd97ac9159c514c293f8cbb3bf19f9d", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 16, "deletions": 27, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/22244cfab0ca6b0094ba7a35671d009cb37df7eb/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22244cfab0ca6b0094ba7a35671d009cb37df7eb/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=22244cfab0ca6b0094ba7a35671d009cb37df7eb", "patch": "@@ -1326,30 +1326,10 @@ extern \"rust-intrinsic\" {\n     pub fn nontemporal_store<T>(ptr: *mut T, val: T);\n }\n \n-mod real_intrinsics {\n-  extern \"rust-intrinsic\" {\n-    /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n-    /// and destination must *not* overlap.\n-    /// For the full docs, see the stabilized wrapper [`copy_nonoverlapping`].\n-    ///\n-    /// [`copy_nonoverlapping`]: ../../std/ptr/fn.copy_nonoverlapping.html\n-    pub fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize);\n-\n-    /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n-    /// and destination may overlap.\n-    /// For the full docs, see the stabilized wrapper [`copy`].\n-    ///\n-    /// [`copy`]: ../../std/ptr/fn.copy.html\n-    pub fn copy<T>(src: *const T, dst: *mut T, count: usize);\n-\n-    /// Sets `count * size_of::<T>()` bytes of memory starting at `dst` to\n-    /// `val`.\n-    /// For the full docs, see the stabilized wrapper [`write_bytes`].\n-    ///\n-    /// [`write_bytes`]: ../../std/ptr/fn.write_bytes.html\n-    pub fn write_bytes<T>(dst: *mut T, val: u8, count: usize);\n-  }\n-}\n+// Some functions are defined here because they accidentally got made\n+// available in this module on stable. See <https://github.com/rust-lang/rust/issues/15702>.\n+// (`transmute` also falls into this category, but it cannot be wrapped due to the\n+// check that `T` and `U` have the same size.)\n \n /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n /// and destination must *not* overlap.\n@@ -1437,7 +1417,10 @@ mod real_intrinsics {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[inline]\n pub unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n-    real_intrinsics::copy_nonoverlapping(src, dst, count);\n+    extern \"rust-intrinsic\" {\n+        fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize);\n+    }\n+    copy_nonoverlapping(src, dst, count);\n }\n \n /// Copies `count * size_of::<T>()` bytes from `src` to `dst`. The source\n@@ -1494,7 +1477,10 @@ pub unsafe fn copy_nonoverlapping<T>(src: *const T, dst: *mut T, count: usize) {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[inline]\n pub unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n-    real_intrinsics::copy(src, dst, count)\n+    extern \"rust-intrinsic\" {\n+        fn copy<T>(src: *const T, dst: *mut T, count: usize);\n+    }\n+    copy(src, dst, count)\n }\n \n /// Sets `count * size_of::<T>()` bytes of memory starting at `dst` to\n@@ -1572,7 +1558,10 @@ pub unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[inline]\n pub unsafe fn write_bytes<T>(dst: *mut T, val: u8, count: usize) {\n-    real_intrinsics::write_bytes(dst, val, count)\n+    extern \"rust-intrinsic\" {\n+        fn write_bytes<T>(dst: *mut T, val: u8, count: usize);\n+    }\n+    write_bytes(dst, val, count)\n }\n \n // Simple bootstrap implementations of minnum/maxnum for stage0 compilation."}]}