{"sha": "39598e46f6777e0f5eee8177c347fec431d2b591", "node_id": "C_kwDOAAsO6NoAKDM5NTk4ZTQ2ZjY3NzdlMGY1ZWVlODE3N2MzNDdmZWM0MzFkMmI1OTE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-29T10:17:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-29T10:21:14Z"}, "message": "merge rustup-toolchain into ./miri", "tree": {"sha": "18093ac00c00e509235dac293870668046e0df6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18093ac00c00e509235dac293870668046e0df6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39598e46f6777e0f5eee8177c347fec431d2b591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39598e46f6777e0f5eee8177c347fec431d2b591", "html_url": "https://github.com/rust-lang/rust/commit/39598e46f6777e0f5eee8177c347fec431d2b591", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39598e46f6777e0f5eee8177c347fec431d2b591/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f3a9881da89361358247ba58574b9eee37df4aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3a9881da89361358247ba58574b9eee37df4aa", "html_url": "https://github.com/rust-lang/rust/commit/4f3a9881da89361358247ba58574b9eee37df4aa"}], "stats": {"total": 126, "additions": 58, "deletions": 68}, "files": [{"sha": "607ffe0cc59feb11d3c735ea3bddd0d7b53aa0c3", "filename": "src/tools/miri/.github/workflows/ci.yml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2F.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2F.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2F.github%2Fworkflows%2Fci.yml?ref=39598e46f6777e0f5eee8177c347fec431d2b591", "patch": "@@ -67,9 +67,9 @@ jobs:\n         shell: bash\n         run: |\n           if [[ ${{ github.event_name }} == 'schedule' ]]; then\n-            ./rustup-toolchain HEAD --host ${{ matrix.host_target }}\n+            ./miri toolchain HEAD --host ${{ matrix.host_target }}\n           else\n-            ./rustup-toolchain \"\" --host ${{ matrix.host_target }}\n+            ./miri toolchain \"\" --host ${{ matrix.host_target }}\n           fi\n \n       - name: Show Rust version\n@@ -118,7 +118,7 @@ jobs:\n       - name: Install \"master\" toolchain\n         shell: bash\n         run: |\n-          ./rustup-toolchain \"\" -c clippy\n+          ./miri toolchain\n \n       - name: Show Rust version\n         run: |"}, {"sha": "724cf26df2b9b3f85a26b45e7ea8144233dfea05", "filename": "src/tools/miri/.gitpod.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2F.gitpod.yml", "raw_url": "https://github.com/rust-lang/rust/raw/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2F.gitpod.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2F.gitpod.yml?ref=39598e46f6777e0f5eee8177c347fec431d2b591", "patch": "@@ -4,6 +4,6 @@ tasks:\n   - before: echo \"...\"\n     init: |\n       cargo install rustup-toolchain-install-master\n-      ./rustup-toolchain\n+      ./miri toolchain\n       ./miri build\n-    command: echo \"Run tests with ./miri test\"\n\\ No newline at end of file\n+    command: echo \"Run tests with ./miri test\""}, {"sha": "3e36c2ea5f97c8d108a1a300f568dfd86843f09e", "filename": "src/tools/miri/CONTRIBUTING.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2FCONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2FCONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2FCONTRIBUTING.md?ref=39598e46f6777e0f5eee8177c347fec431d2b591", "patch": "@@ -23,13 +23,13 @@ tested against. Other versions will likely not work. After installing\n [`rustup-toolchain-install-master`], you can run the following command to\n install that exact version of rustc as a toolchain:\n ```\n-./rustup-toolchain\n+./miri toolchain\n ```\n This will set up a rustup toolchain called `miri` and set it as an override for\n the current directory.\n \n You can also create a `.auto-everything` file (contents don't matter, can be empty), which\n-will cause any `./miri` command to automatically call `rustup-toolchain`, `clippy` and `rustfmt`\n+will cause any `./miri` command to automatically call `./miri toolchain`, `clippy` and `rustfmt`\n for you. If you don't want all of these to happen, you can add individual `.auto-toolchain`,\n `.auto-clippy` and `.auto-fmt` files respectively.\n \n@@ -132,7 +132,7 @@ development version of Miri using\n and then you can use it as if it was installed by `rustup`.  Make sure you use\n the same toolchain when calling `cargo miri` that you used when installing Miri!\n Usually this means you have to write `cargo +miri miri ...` to select the `miri`\n-toolchain that was installed by `./rustup-toolchain`.\n+toolchain that was installed by `./miri toolchain`.\n \n There's a test for the cargo wrapper in the `test-cargo-miri` directory; run\n `./run-test.py` in there to execute it. Like `./miri test`, this respects the\n@@ -214,7 +214,7 @@ for changes in rustc. In both cases, `rustc-version` needs updating.\n \n To update the `rustc-version` file and install the latest rustc, you can run:\n ```\n-./rustup-toolchain HEAD\n+./miri toolchain HEAD\n ```\n \n Now edit Miri until `./miri test` passes, and submit a PR. Generally, it is\n@@ -297,7 +297,7 @@ We assume we start on an up-to-date master branch in the Miri repo.\n # Fetch and merge rustc side of the history. Takes ca 5 min the first time.\n ./miri rustc-pull\n # Update toolchain reference and apply formatting.\n-./rustup-toolchain HEAD && ./miri fmt\n+./miri toolchain HEAD && ./miri fmt\n git commit -am \"rustup\"\n ```\n "}, {"sha": "1b84d188c55db27c915204522039d7336670ff59", "filename": "src/tools/miri/README.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2FREADME.md?ref=39598e46f6777e0f5eee8177c347fec431d2b591", "patch": "@@ -419,9 +419,9 @@ Some native rustc `-Z` flags are also very relevant for Miri:\n \n Moreover, Miri recognizes some environment variables:\n \n-* `MIRI_AUTO_OPS` indicates whether the automatic execution of rustfmt, clippy and rustup-toolchain\n-  should be skipped. If it is set to any value, they are skipped. This is used for avoiding\n-  infinite recursion in `./miri` and to allow automated IDE actions to avoid the auto ops.\n+* `MIRI_AUTO_OPS` indicates whether the automatic execution of rustfmt, clippy and toolchain setup\n+  should be skipped. If it is set to any value, they are skipped. This is used for avoiding infinite\n+  recursion in `./miri` and to allow automated IDE actions to avoid the auto ops.\n * `MIRI_LOG`, `MIRI_BACKTRACE` control logging and backtrace printing during\n   Miri executions, also [see \"Testing the Miri driver\" in `CONTRIBUTING.md`][testing-miri].\n * `MIRIFLAGS` (recognized by `cargo miri` and the test suite) defines extra"}, {"sha": "52902410a6b2d598397703a4e59de35039af8daf", "filename": "src/tools/miri/miri", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2Fmiri", "raw_url": "https://github.com/rust-lang/rust/raw/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2Fmiri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fmiri?ref=39598e46f6777e0f5eee8177c347fec431d2b591", "patch": "@@ -51,6 +51,13 @@ in the Rust fork of the given user to upstream. It will also pull a copy of the\n rustc history into the Miri repo, unless you set the RUSTC_GIT env var to an\n existing clone of the rustc repo.\n \n+./miri toolchain <commit> <flags>:\n+Update and activate the rustup toolchain 'miri'. If no commit is given, updates\n+to the commit given in the `rust-version` file. If the commit is `HEAD`, updates\n+to the latest upstream rustc commit.\n+`rustup-toolchain-install-master` must be installed for this to work. Any extra\n+flags are passed to `rustup-toolchain-install-master`.\n+\n   ENVIRONMENT VARIABLES\n \n MIRI_SYSROOT:\n@@ -75,6 +82,42 @@ JOSH_FILTER=\":at_commit=75dd959a3a40eb5b4574f8d2e23aa6efbeb33573[:prefix=src/too\n \n ## Early commands, that don't do auto-things and don't want the environment-altering things happening below.\n case \"$COMMAND\" in\n+toolchain)\n+    cd \"$MIRIDIR\"\n+    # Make sure rustup-toolchain-install-master is installed.\n+    if ! which rustup-toolchain-install-master >/dev/null; then\n+        echo \"Please install rustup-toolchain-install-master by running 'cargo install rustup-toolchain-install-master'\"\n+        exit 1\n+    fi\n+    # Determine new commit.\n+    if [[ \"$1\" == \"\" ]]; then\n+        NEW_COMMIT=$(cat rust-version)\n+    elif [[ \"$1\" == \"HEAD\" ]]; then\n+        NEW_COMMIT=$(git ls-remote https://github.com/rust-lang/rust/ HEAD | cut -f 1)\n+    else\n+        NEW_COMMIT=\"$1\"\n+    fi\n+    echo \"$NEW_COMMIT\" > rust-version\n+    shift || true # don't fail if shifting fails because no commit was given\n+    # Check if we already are at that commit.\n+    CUR_COMMIT=$(rustc +miri --version -v 2>/dev/null | grep \"^commit-hash: \" | cut -d \" \" -f 2)\n+    if [[ \"$CUR_COMMIT\" == \"$NEW_COMMIT\" ]]; then\n+        echo \"miri toolchain is already at commit $CUR_COMMIT.\"\n+        rustup override set miri\n+        exit 0\n+    fi\n+    # Install and setup new toolchain.\n+    rustup toolchain uninstall miri\n+    rustup-toolchain-install-master -n miri -c cargo -c rust-src -c rustc-dev -c llvm-tools -c rustfmt -c clippy \"$@\" -- \"$NEW_COMMIT\"\n+    rustup override set miri\n+    # Cleanup.\n+    cargo clean\n+    # Call 'cargo metadata' on the sources in case that changes the lockfile\n+    # (which fails under some setups when it is done from inside vscode).\n+    cargo metadata --format-version 1 --manifest-path \"$(rustc --print sysroot)/lib/rustlib/rustc-src/rust/compiler/rustc/Cargo.toml\" >/dev/null\n+    # Done!\n+    exit 0\n+    ;;\n rustc-pull)\n     cd \"$MIRIDIR\"\n     git fetch http://localhost:8000/rust-lang/rust.git$JOSH_FILTER.git master\n@@ -145,7 +188,7 @@ if [ -z \"$MIRI_AUTO_OPS\" ]; then\n     # Run this first, so that the toolchain doesn't change after\n     # other code has run.\n     if [ -f \"$MIRIDIR/.auto-everything\" ] || [ -f \"$MIRIDIR/.auto-toolchain\" ] ; then\n-        (cd \"$MIRIDIR\" && ./rustup-toolchain)\n+        $0 toolchain\n     fi\n \n     if [ -f \"$MIRIDIR/.auto-everything\" ] || [ -f \"$MIRIDIR/.auto-fmt\" ] ; then"}, {"sha": "e582bf35356d6d196030aa0363d6c6f38fc99d0d", "filename": "src/tools/miri/rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2Frust-version", "raw_url": "https://github.com/rust-lang/rust/raw/39598e46f6777e0f5eee8177c347fec431d2b591/src%2Ftools%2Fmiri%2Frust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Frust-version?ref=39598e46f6777e0f5eee8177c347fec431d2b591", "patch": "@@ -1 +1 @@\n-85d089b41e2a0c0f07ab34f6c5a7c451389f25e6\n+607878d069267e1402ad792c9331b426e4c6d0f9"}, {"sha": "d7730f2b06d36a33cceb880461bef5213ff719c3", "filename": "src/tools/miri/rustup-toolchain", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/4f3a9881da89361358247ba58574b9eee37df4aa/src%2Ftools%2Fmiri%2Frustup-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/4f3a9881da89361358247ba58574b9eee37df4aa/src%2Ftools%2Fmiri%2Frustup-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Frustup-toolchain?ref=4f3a9881da89361358247ba58574b9eee37df4aa", "patch": "@@ -1,53 +0,0 @@\n-#!/bin/bash\n-set -e\n-# Manages a rustup toolchain called \"miri\".\n-#\n-# All commands set \"miri\" as the override toolchain for the current directory,\n-# and make the `rust-version` file match that toolchain.\n-#\n-# USAGE:\n-#\n-# ./rustup-toolchain: Update \"miri\" toolchain to match `rust-version` (the known-good version for this commit).\n-#\n-# ./rustup-toolchain HEAD: Update \"miri\" toolchain and `rust-version` file to latest rustc HEAD.\n-#\n-# ./rustup-toolchain $COMMIT: Update \"miri\" toolchain and `rust-version` file to match that commit.\n-#\n-# Any extra parameters are passed to `rustup-toolchain-install-master`.\n-\n-# Make sure rustup-toolchain-install-master is installed.\n-if ! which rustup-toolchain-install-master >/dev/null; then\n-    echo \"Please install rustup-toolchain-install-master by running 'cargo install rustup-toolchain-install-master'\"\n-    exit 1\n-fi\n-\n-# Determine new commit.\n-if [[ \"$1\" == \"\" ]]; then\n-    NEW_COMMIT=$(cat rust-version)\n-elif [[ \"$1\" == \"HEAD\" ]]; then\n-    NEW_COMMIT=$(git ls-remote https://github.com/rust-lang/rust/ HEAD | cut -f 1)\n-else\n-    NEW_COMMIT=\"$1\"\n-fi\n-echo \"$NEW_COMMIT\" > rust-version\n-shift || true # don't fail if shifting fails\n-\n-# Check if we already are at that commit.\n-CUR_COMMIT=$(rustc +miri --version -v 2>/dev/null | grep \"^commit-hash: \" | cut -d \" \" -f 2)\n-if [[ \"$CUR_COMMIT\" == \"$NEW_COMMIT\" ]]; then\n-    echo \"miri toolchain is already at commit $CUR_COMMIT.\"\n-    rustup override set miri\n-    exit 0\n-fi\n-\n-# Install and setup new toolchain.\n-rustup toolchain uninstall miri\n-rustup-toolchain-install-master -n miri -c cargo -c rust-src -c rustc-dev -c llvm-tools -c rustfmt -c clippy \"$@\" -- \"$NEW_COMMIT\"\n-rustup override set miri\n-\n-# Cleanup.\n-cargo clean\n-\n-# Call 'cargo metadata' on the sources in case that changes the lockfile\n-# (which fails under some setups when it is done from inside vscode).\n-cargo metadata --format-version 1 --manifest-path \"$(rustc --print sysroot)/lib/rustlib/rustc-src/rust/compiler/rustc/Cargo.toml\" >/dev/null"}]}