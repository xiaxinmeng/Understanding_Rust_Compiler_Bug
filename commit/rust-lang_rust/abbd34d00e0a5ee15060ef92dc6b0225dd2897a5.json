{"sha": "abbd34d00e0a5ee15060ef92dc6b0225dd2897a5", "node_id": "C_kwDOAAsO6NoAKGFiYmQzNGQwMGUwYTVlZTE1MDYwZWY5MmRjNmIwMjI1ZGQyODk3YTU", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-08-09T03:27:53Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-08-09T03:27:53Z"}, "message": "avoid `&str` to `String` conversions", "tree": {"sha": "edfa4d69162f4c0e1628f1090e0f0e309a58ac27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edfa4d69162f4c0e1628f1090e0f0e309a58ac27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abbd34d00e0a5ee15060ef92dc6b0225dd2897a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abbd34d00e0a5ee15060ef92dc6b0225dd2897a5", "html_url": "https://github.com/rust-lang/rust/commit/abbd34d00e0a5ee15060ef92dc6b0225dd2897a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abbd34d00e0a5ee15060ef92dc6b0225dd2897a5/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93ab13b4e894ab74258c40aaf29872db2b17b6b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/93ab13b4e894ab74258c40aaf29872db2b17b6b4", "html_url": "https://github.com/rust-lang/rust/commit/93ab13b4e894ab74258c40aaf29872db2b17b6b4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "540a8c3a83d9576d1c25b0860de4dcd8d4e0307d", "filename": "compiler/rustc_typeck/src/check/coercion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abbd34d00e0a5ee15060ef92dc6b0225dd2897a5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abbd34d00e0a5ee15060ef92dc6b0225dd2897a5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs?ref=abbd34d00e0a5ee15060ef92dc6b0225dd2897a5", "patch": "@@ -1589,11 +1589,11 @@ impl<'tcx, 'exprs, E: AsCoercionSite> CoerceMany<'tcx, 'exprs, E> {\n     ) {\n         let hir::ExprKind::Loop(_, _, _, loop_span) = expr.kind else { return;};\n         let mut span: MultiSpan = vec![loop_span].into();\n-        span.push_span_label(loop_span, \"this might have zero elements to iterate on\".to_string());\n+        span.push_span_label(loop_span, \"this might have zero elements to iterate on\");\n         for ret_expr in ret_exprs {\n             span.push_span_label(\n                 ret_expr.span,\n-                \"if the loop doesn't execute, this value would never get returned\".to_string(),\n+                \"if the loop doesn't execute, this value would never get returned\",\n             );\n         }\n         err.span_note("}]}