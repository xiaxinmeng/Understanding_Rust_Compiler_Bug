{"sha": "ab08639e5950f5c8a42a2870c9636181308c3686", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMDg2MzllNTk1MGY1YzhhNDJhMjg3MGM5NjM2MTgxMzA4YzM2ODY=", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-07-28T13:28:06Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-08-19T19:02:40Z"}, "message": "Add comments about impls for File, TcpStream, ChildStdin, etc.", "tree": {"sha": "245f45be84189214437520b49522401dc3a24390", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/245f45be84189214437520b49522401dc3a24390"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab08639e5950f5c8a42a2870c9636181308c3686", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab08639e5950f5c8a42a2870c9636181308c3686", "html_url": "https://github.com/rust-lang/rust/commit/ab08639e5950f5c8a42a2870c9636181308c3686", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab08639e5950f5c8a42a2870c9636181308c3686/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68964a7d6854826fd3cf4033f1a90dbb920f667b", "url": "https://api.github.com/repos/rust-lang/rust/commits/68964a7d6854826fd3cf4033f1a90dbb920f667b", "html_url": "https://github.com/rust-lang/rust/commit/68964a7d6854826fd3cf4033f1a90dbb920f667b"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "bdb172907ffed39b770d802093c2ea416d485365", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab08639e5950f5c8a42a2870c9636181308c3686/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab08639e5950f5c8a42a2870c9636181308c3686/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=ab08639e5950f5c8a42a2870c9636181308c3686", "patch": "@@ -587,6 +587,12 @@ impl File {\n     }\n }\n \n+// In addition to the `impl`s here, `File` also has `impl`s for\n+// `AsFd`/`From<OwnedFd>`/`Into<OwnedFd>` and\n+// `AsRawFd`/`IntoRawFd`/`FromRawFd`, on Unix and WASI, and\n+// `AsHandle`/`From<OwnedHandle>`/`Into<OwnedHandle>` and\n+// `AsRawHandle`/`IntoRawHandle`/`FromRawHandle` on Windows.\n+\n impl AsInner<fs_imp::File> for File {\n     fn as_inner(&self) -> &fs_imp::File {\n         &self.inner"}, {"sha": "7f964e5c5a9176511a76f23e2140f14f4ce99560", "filename": "library/std/src/net/tcp.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ab08639e5950f5c8a42a2870c9636181308c3686/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab08639e5950f5c8a42a2870c9636181308c3686/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs?ref=ab08639e5950f5c8a42a2870c9636181308c3686", "patch": "@@ -546,6 +546,12 @@ impl TcpStream {\n     }\n }\n \n+// In addition to the `impl`s here, `TcpStream` also has `impl`s for\n+// `AsFd`/`From<OwnedFd>`/`Into<OwnedFd>` and\n+// `AsRawFd`/`IntoRawFd`/`FromRawFd`, on Unix and WASI, and\n+// `AsSocket`/`From<OwnedSocket>`/`Into<OwnedSocket>` and\n+// `AsRawSocket`/`IntoRawSocket`/`FromRawSocket` on Windows.\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Read for TcpStream {\n     fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n@@ -908,6 +914,12 @@ impl TcpListener {\n     }\n }\n \n+// In addition to the `impl`s here, `TcpListener` also has `impl`s for\n+// `AsFd`/`From<OwnedFd>`/`Into<OwnedFd>` and\n+// `AsRawFd`/`IntoRawFd`/`FromRawFd`, on Unix and WASI, and\n+// `AsSocket`/`From<OwnedSocket>`/`Into<OwnedSocket>` and\n+// `AsRawSocket`/`IntoRawSocket`/`FromRawSocket` on Windows.\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> Iterator for Incoming<'a> {\n     type Item = io::Result<TcpStream>;"}, {"sha": "871505843af23c5ca513c85c0e45d40d0fe1a382", "filename": "library/std/src/net/udp.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab08639e5950f5c8a42a2870c9636181308c3686/library%2Fstd%2Fsrc%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab08639e5950f5c8a42a2870c9636181308c3686/library%2Fstd%2Fsrc%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fudp.rs?ref=ab08639e5950f5c8a42a2870c9636181308c3686", "patch": "@@ -779,6 +779,12 @@ impl UdpSocket {\n     }\n }\n \n+// In addition to the `impl`s here, `UdpSocket` also has `impl`s for\n+// `AsFd`/`From<OwnedFd>`/`Into<OwnedFd>` and\n+// `AsRawFd`/`IntoRawFd`/`FromRawFd`, on Unix and WASI, and\n+// `AsSocket`/`From<OwnedSocket>`/`Into<OwnedSocket>` and\n+// `AsRawSocket`/`IntoRawSocket`/`FromRawSocket` on Windows.\n+\n impl AsInner<net_imp::UdpSocket> for UdpSocket {\n     fn as_inner(&self) -> &net_imp::UdpSocket {\n         &self.0"}, {"sha": "c9b21fcf9c6d2eef7a2a006e6e3a65082d634f51", "filename": "library/std/src/process.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ab08639e5950f5c8a42a2870c9636181308c3686/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab08639e5950f5c8a42a2870c9636181308c3686/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=ab08639e5950f5c8a42a2870c9636181308c3686", "patch": "@@ -258,6 +258,12 @@ pub struct ChildStdin {\n     inner: AnonPipe,\n }\n \n+// In addition to the `impl`s here, `ChildStdin` also has `impl`s for\n+// `AsFd`/`From<OwnedFd>`/`Into<OwnedFd>` and\n+// `AsRawFd`/`IntoRawFd`/`FromRawFd`, on Unix and WASI, and\n+// `AsHandle`/`From<OwnedHandle>`/`Into<OwnedHandle>` and\n+// `AsRawHandle`/`IntoRawHandle`/`FromRawHandle` on Windows.\n+\n #[stable(feature = \"process\", since = \"1.0.0\")]\n impl Write for ChildStdin {\n     fn write(&mut self, buf: &[u8]) -> io::Result<usize> {\n@@ -335,6 +341,12 @@ pub struct ChildStdout {\n     inner: AnonPipe,\n }\n \n+// In addition to the `impl`s here, `ChildStdout` also has `impl`s for\n+// `AsFd`/`From<OwnedFd>`/`Into<OwnedFd>` and\n+// `AsRawFd`/`IntoRawFd`/`FromRawFd`, on Unix and WASI, and\n+// `AsHandle`/`From<OwnedHandle>`/`Into<OwnedHandle>` and\n+// `AsRawHandle`/`IntoRawHandle`/`FromRawHandle` on Windows.\n+\n #[stable(feature = \"process\", since = \"1.0.0\")]\n impl Read for ChildStdout {\n     fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n@@ -396,6 +408,12 @@ pub struct ChildStderr {\n     inner: AnonPipe,\n }\n \n+// In addition to the `impl`s here, `ChildStderr` also has `impl`s for\n+// `AsFd`/`From<OwnedFd>`/`Into<OwnedFd>` and\n+// `AsRawFd`/`IntoRawFd`/`FromRawFd`, on Unix and WASI, and\n+// `AsHandle`/`From<OwnedHandle>`/`Into<OwnedHandle>` and\n+// `AsRawHandle`/`IntoRawHandle`/`FromRawHandle` on Windows.\n+\n #[stable(feature = \"process\", since = \"1.0.0\")]\n impl Read for ChildStderr {\n     fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {"}]}