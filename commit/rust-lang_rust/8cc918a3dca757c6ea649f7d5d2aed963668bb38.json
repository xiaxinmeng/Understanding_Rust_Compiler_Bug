{"sha": "8cc918a3dca757c6ea649f7d5d2aed963668bb38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYzkxOGEzZGNhNzU3YzZlYTY0OWY3ZDVkMmFlZDk2MzY2OGJiMzg=", "commit": {"author": {"name": "Edd Barrett", "email": "vext01@gmail.com", "date": "2021-04-20T09:19:25Z"}, "committer": {"name": "Edd Barrett", "email": "vext01@gmail.com", "date": "2021-04-20T09:28:17Z"}, "message": "Improve the docstrings of the `Lto` struct.", "tree": {"sha": "593f860d8e74090f4b38293dfd9c1af3f964ebf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/593f860d8e74090f4b38293dfd9c1af3f964ebf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cc918a3dca757c6ea649f7d5d2aed963668bb38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cc918a3dca757c6ea649f7d5d2aed963668bb38", "html_url": "https://github.com/rust-lang/rust/commit/8cc918a3dca757c6ea649f7d5d2aed963668bb38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cc918a3dca757c6ea649f7d5d2aed963668bb38/comments", "author": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c", "html_url": "https://github.com/rust-lang/rust/commit/a70fbf6620ddaacc2ef805fa8c4ac2dc9bf02f3c"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "b683626bbd64d5753053b38d706cb81a6eeb62b6", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8cc918a3dca757c6ea649f7d5d2aed963668bb38/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cc918a3dca757c6ea649f7d5d2aed963668bb38/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=8cc918a3dca757c6ea649f7d5d2aed963668bb38", "patch": "@@ -75,19 +75,21 @@ impl_stable_hash_via_hash!(OptLevel);\n \n /// This is what the `LtoCli` values get mapped to after resolving defaults and\n /// and taking other command line options into account.\n+///\n+/// Note that linker plugin-based LTO is a different mechanism entirely.\n #[derive(Clone, PartialEq)]\n pub enum Lto {\n-    /// Don't do any LTO whatsoever\n+    /// Don't do any LTO whatsoever.\n     No,\n \n-    /// Do a full crate graph LTO with ThinLTO\n+    /// Do a full-crate-graph (inter-crate) LTO with ThinLTO.\n     Thin,\n \n-    /// Do a local graph LTO with ThinLTO (only relevant for multiple codegen\n-    /// units).\n+    /// Do a local ThinLTO (intra-crate, over the CodeGen Units of the local crate only). This is\n+    /// only relevant if multiple CGUs are used.\n     ThinLocal,\n \n-    /// Do a full crate graph LTO with \"fat\" LTO\n+    /// Do a full-crate-graph (inter-crate) LTO with \"fat\" LTO.\n     Fat,\n }\n "}]}