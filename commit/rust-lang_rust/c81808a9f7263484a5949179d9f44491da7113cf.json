{"sha": "c81808a9f7263484a5949179d9f44491da7113cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MTgwOGE5ZjcyNjM0ODRhNTk0OTE3OWQ5ZjQ0NDkxZGE3MTEzY2Y=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-23T03:59:20Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-24T23:06:18Z"}, "message": "update intrinsics file", "tree": {"sha": "df093870beb11c218791df027f106aba43e13519", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df093870beb11c218791df027f106aba43e13519"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c81808a9f7263484a5949179d9f44491da7113cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c81808a9f7263484a5949179d9f44491da7113cf", "html_url": "https://github.com/rust-lang/rust/commit/c81808a9f7263484a5949179d9f44491da7113cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c81808a9f7263484a5949179d9f44491da7113cf/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "973a2853719ddf5aa23bec8d6aeb41b8a803c7ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/973a2853719ddf5aa23bec8d6aeb41b8a803c7ff", "html_url": "https://github.com/rust-lang/rust/commit/973a2853719ddf5aa23bec8d6aeb41b8a803c7ff"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "2d53f170e00c3739ea0acfd161c7ee7bad7eb239", "filename": "src/rt/intrinsics/intrinsics.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c81808a9f7263484a5949179d9f44491da7113cf/src%2Frt%2Fintrinsics%2Fintrinsics.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/c81808a9f7263484a5949179d9f44491da7113cf/src%2Frt%2Fintrinsics%2Fintrinsics.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fintrinsics%2Fintrinsics.cpp?ref=c81808a9f7263484a5949179d9f44491da7113cf", "patch": "@@ -7,7 +7,7 @@\n #include <cstring>\n \n extern \"C\" CDECL void\n-upcall_fail(rust_task *task, char const *expr, char const *file, size_t line);\n+upcall_fail(char const *expr, char const *file, size_t line);\n \n extern \"C\" void\n rust_intrinsic_vec_len(rust_task *task, size_t *retptr, type_desc *ty,"}, {"sha": "aabc5bcd2453a5e6aa3e672dfbcf97fe0157ebcb", "filename": "src/rt/intrinsics/intrinsics.ll.in", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c81808a9f7263484a5949179d9f44491da7113cf/src%2Frt%2Fintrinsics%2Fintrinsics.ll.in", "raw_url": "https://github.com/rust-lang/rust/raw/c81808a9f7263484a5949179d9f44491da7113cf/src%2Frt%2Fintrinsics%2Fintrinsics.ll.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fintrinsics%2Fintrinsics.ll.in?ref=c81808a9f7263484a5949179d9f44491da7113cf", "patch": "@@ -52,7 +52,7 @@ target triple = \"@CFG_LLVM_TRIPLE@\"\n %struct.rust_vec = type { i32, i32, [0 x i8] }\n %\"struct.std::_Rb_tree<void *, std::pair<void *const, const type_desc *>, std::_Select1st<std::pair<void *const, const type_desc *> >, std::less<void *>, std::allocator<std::pair<void *const, const type_desc *> > >::_Rb_tree_impl\" = type { %struct.rust_cond, %\"struct.std::_Rb_tree_node_base\", i32 }\n %\"struct.std::_Rb_tree_node_base\" = type { i32, %\"struct.std::_Rb_tree_node_base\"*, %\"struct.std::_Rb_tree_node_base\"*, %\"struct.std::_Rb_tree_node_base\"* }\n-%struct.type_desc = type { %struct.type_desc**, i32, i32, void (i8*, %struct.rust_task*, i8*, %struct.type_desc**, i8*)*, void (i8*, %struct.rust_task*, i8*, %struct.type_desc**, i8*)*, void (i8*, %struct.rust_task*, i8*, %struct.type_desc**, i8*)*, i8*, void (i8*, %struct.rust_task*, i8*, %struct.type_desc**, i8*)*, void (i8*, %struct.rust_task*, i8*, %struct.type_desc**, i8*)*, i32, void (i8*, %struct.rust_task*, i8*, %struct.type_desc**, i8*, i8*, i8)*, i8*, %struct.rust_shape_tables*, i32, i32, %struct.UT_hash_handle, i32, [0 x %struct.type_desc*] }\n+%struct.type_desc = type { %struct.type_desc**, i32, i32, void (i8*, i8*, %struct.type_desc**, i8*)*, void (i8*, i8*, %struct.type_desc**, i8*)*, void (i8*, i8*, %struct.type_desc**, i8*)*, i8*, void (i8*, i8*, %struct.type_desc**, i8*)*, void (i8*, i8*, %struct.type_desc**, i8*)*, i32, void (i8*, i8*, %struct.type_desc**, i8*, i8*, i8)*, i8*, %struct.rust_shape_tables*, i32, i32, %struct.UT_hash_handle, i32, [0 x %struct.type_desc*] }\n \n @.str = private unnamed_addr constant [42 x i8] c\"attempt to cast values of differing sizes\\00\"\n @.str1 = private unnamed_addr constant [15 x i8] c\"intrinsics.cpp\\00\"\n@@ -77,17 +77,17 @@ define void @rust_intrinsic_ptr_offset(%struct.rust_task* nocapture %task, i8**\n   ret void\n }\n \n-define void @rust_intrinsic_cast(%struct.rust_task* %task, i8* nocapture %retptr, %struct.type_desc* nocapture %t1, %struct.type_desc* nocapture %t2, i8* nocapture %src) {\n+define void @rust_intrinsic_cast(%struct.rust_task* nocapture %task, i8* nocapture %retptr, %struct.type_desc* nocapture %t1, %struct.type_desc* nocapture %t2, i8* nocapture %src) {\n   %1 = getelementptr inbounds %struct.type_desc* %t1, i32 0, i32 1\n   %2 = load i32* %1, align 4\n   %3 = getelementptr inbounds %struct.type_desc* %t2, i32 0, i32 1\n   %4 = load i32* %3, align 4\n   %5 = icmp eq i32 %2, %4\n   br i1 %5, label %7, label %6\n \n-if.then:                                          ; preds = %entry\n-  tail call void @upcall_fail(i8* getelementptr inbounds ([42 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str1, i32 0, i32 0), i32 45)\n-  br label %return\n+; <label>:6                                       ; preds = %0\n+  tail call void @upcall_fail(i8* getelementptr inbounds ([42 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str1, i32 0, i32 0), i32 32)\n+  br label %8\n \n ; <label>:7                                       ; preds = %0\n   tail call void @llvm.memmove.p0i8.p0i8.i32(i8* %retptr, i8* %src, i32 %2, i32 1, i1 false)\n@@ -106,10 +106,9 @@ define void @rust_intrinsic_addr_of(%struct.rust_task* nocapture %task, i8** noc\n   ret void\n }\n \n-define linkonce_odr void @rust_intrinsic_recv(%struct.rust_task* %task, i8** %retptr, %struct.type_desc* nocapture %ty, %class.rust_port* %port) {\n-entry:\n-  %0 = bitcast i8** %retptr to i32*\n-  tail call void @port_recv(i32* %0, %class.rust_port* %port)\n+define void @rust_intrinsic_recv(%struct.rust_task* nocapture %task, i8** %retptr, %struct.type_desc* nocapture %ty, %class.rust_port* %port) {\n+  %1 = bitcast i8** %retptr to i32*\n+  tail call void @port_recv(i32* %1, %class.rust_port* %port)\n   ret void\n }\n "}]}