{"sha": "081d65fa4a9fdf6703e93511632582b9fad383ee", "node_id": "C_kwDOAAsO6NoAKDA4MWQ2NWZhNGE5ZmRmNjcwM2U5MzUxMTYzMjU4MmI5ZmFkMzgzZWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-21T21:03:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-21T21:03:19Z"}, "message": "Rollup merge of #93134 - tlyu:delete-stdin-split, r=Amanieu\n\ndelete `Stdin::split` forwarder\n\nPart of #87096. Delete the `Stdin::split` forwarder because it's seen as too niche to expose at this level.\n\n`@rustbot` label T-libs-api A-io", "tree": {"sha": "09b6188af438b8f64cb9908b4ab84c0310b3d0b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09b6188af438b8f64cb9908b4ab84c0310b3d0b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/081d65fa4a9fdf6703e93511632582b9fad383ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6x+XCRBK7hj4Ov3rIwAAzyoIACWCswdG+GhobM51zvhy6drX\nM31dhRSZFTAzSJTjcHiK/0Wg45w7XP+jgO17rKP+uPNhqlsIl3kXpkN8OjuH+Dsd\nNXEOPnK6xZgaooWR61d73mjp8XhoAIaBq7tYn/vDQZP2UivRcXt7E9EBbUpnITHu\n+6ew7eASmnil4oRttmtX+zMGUgK0J4RO2ULq74a/pBwPYso52GUFdT3eNDIk2GW8\nYXkLBDlBBjxS2n0rHiJNPsv4e5Lm9ph98j7w26gqItmf4l0LfmB5FfOIARW8h4+G\n3SiHcIxCVglArcfhmXfKE/HT32iMErxqB7dP3RU065XLKfP2QCnOwIbg6Pk1StQ=\n=/Fs5\n-----END PGP SIGNATURE-----\n", "payload": "tree 09b6188af438b8f64cb9908b4ab84c0310b3d0b7\nparent 9474c74fb6eec4e84ecf26b950c0e27c7cf5f448\nparent fdf930ce0193d0b3fe1ad711a07061ba29f8072a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642798999 +0100\ncommitter GitHub <noreply@github.com> 1642798999 +0100\n\nRollup merge of #93134 - tlyu:delete-stdin-split, r=Amanieu\n\ndelete `Stdin::split` forwarder\n\nPart of #87096. Delete the `Stdin::split` forwarder because it's seen as too niche to expose at this level.\n\n`@rustbot` label T-libs-api A-io\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/081d65fa4a9fdf6703e93511632582b9fad383ee", "html_url": "https://github.com/rust-lang/rust/commit/081d65fa4a9fdf6703e93511632582b9fad383ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/081d65fa4a9fdf6703e93511632582b9fad383ee/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9474c74fb6eec4e84ecf26b950c0e27c7cf5f448", "url": "https://api.github.com/repos/rust-lang/rust/commits/9474c74fb6eec4e84ecf26b950c0e27c7cf5f448", "html_url": "https://github.com/rust-lang/rust/commit/9474c74fb6eec4e84ecf26b950c0e27c7cf5f448"}, {"sha": "fdf930ce0193d0b3fe1ad711a07061ba29f8072a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf930ce0193d0b3fe1ad711a07061ba29f8072a", "html_url": "https://github.com/rust-lang/rust/commit/fdf930ce0193d0b3fe1ad711a07061ba29f8072a"}], "stats": {"total": 25, "additions": 1, "deletions": 24}, "files": [{"sha": "3d6de20d8609142a50544cf4331a9e87e68746d3", "filename": "library/std/src/io/stdio.rs", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/081d65fa4a9fdf6703e93511632582b9fad383ee/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/081d65fa4a9fdf6703e93511632582b9fad383ee/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs?ref=081d65fa4a9fdf6703e93511632582b9fad383ee", "patch": "@@ -7,7 +7,7 @@ use crate::io::prelude::*;\n \n use crate::cell::{Cell, RefCell};\n use crate::fmt;\n-use crate::io::{self, BufReader, IoSlice, IoSliceMut, LineWriter, Lines, Split};\n+use crate::io::{self, BufReader, IoSlice, IoSliceMut, LineWriter, Lines};\n use crate::lazy::SyncOnceCell;\n use crate::pin::Pin;\n use crate::sync::atomic::{AtomicBool, Ordering};\n@@ -465,29 +465,6 @@ impl Stdin {\n     pub fn lines(self) -> Lines<StdinLock<'static>> {\n         self.into_locked().lines()\n     }\n-\n-    /// Consumes this handle and returns an iterator over input bytes,\n-    /// split at the specified byte value.\n-    ///\n-    /// For detailed semantics of this method, see the documentation on\n-    /// [`BufRead::split`].\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```no_run\n-    /// #![feature(stdin_forwarders)]\n-    /// use std::io;\n-    ///\n-    /// let splits = io::stdin().split(b'-');\n-    /// for split in splits {\n-    ///     println!(\"got a chunk: {}\", String::from_utf8_lossy(&split.unwrap()));\n-    /// }\n-    /// ```\n-    #[must_use = \"`self` will be dropped if the result is not used\"]\n-    #[unstable(feature = \"stdin_forwarders\", issue = \"87096\")]\n-    pub fn split(self, byte: u8) -> Split<StdinLock<'static>> {\n-        self.into_locked().split(byte)\n-    }\n }\n \n #[stable(feature = \"std_debug\", since = \"1.16.0\")]"}]}