{"sha": "9088a56db14fc9adad609c9e20a89428f4815734", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwODhhNTZkYjE0ZmM5YWRhZDYwOWM5ZTIwYTg5NDI4ZjQ4MTU3MzQ=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-05-24T16:10:18Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-05-24T16:11:30Z"}, "message": "Removed unnecessary macro declaration", "tree": {"sha": "b55b600859af13a406608d0eb0625b2d5a520671", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b55b600859af13a406608d0eb0625b2d5a520671"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9088a56db14fc9adad609c9e20a89428f4815734", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9088a56db14fc9adad609c9e20a89428f4815734", "html_url": "https://github.com/rust-lang/rust/commit/9088a56db14fc9adad609c9e20a89428f4815734", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9088a56db14fc9adad609c9e20a89428f4815734/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39c1ecd4113703495c551b1875b284a998ed44df", "url": "https://api.github.com/repos/rust-lang/rust/commits/39c1ecd4113703495c551b1875b284a998ed44df", "html_url": "https://github.com/rust-lang/rust/commit/39c1ecd4113703495c551b1875b284a998ed44df"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "11acd8f30d905b9512e56da88249cea353e792c2", "filename": "src/libserialize/serialize.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9088a56db14fc9adad609c9e20a89428f4815734/src%2Flibserialize%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9088a56db14fc9adad609c9e20a89428f4815734/src%2Flibserialize%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fserialize.rs?ref=9088a56db14fc9adad609c9e20a89428f4815734", "patch": "@@ -171,10 +171,6 @@ pub trait Decodable<D:Decoder<E>, E> {\n     fn decode(d: &mut D) -> Result<Self, E>;\n }\n \n-macro_rules! try ( ($e:expr) => (\n-    match $e { Ok(v) => v, Err(e) => return Err(e) }\n-))\n-\n impl<E, S:Encoder<E>> Encodable<S, E> for uint {\n     fn encode(&self, s: &mut S) -> Result<(), E> {\n         s.emit_uint(*self)"}]}