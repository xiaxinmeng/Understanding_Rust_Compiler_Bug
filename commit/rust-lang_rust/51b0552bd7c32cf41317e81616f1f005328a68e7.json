{"sha": "51b0552bd7c32cf41317e81616f1f005328a68e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYjA1NTJiZDdjMzJjZjQxMzE3ZTgxNjE2ZjFmMDA1MzI4YTY4ZTc=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-07T13:37:32Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-14T15:36:00Z"}, "message": "Added some debug logging.", "tree": {"sha": "7c2682ed8ed882435b8a1567bc42fb8a74e30e71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c2682ed8ed882435b8a1567bc42fb8a74e30e71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51b0552bd7c32cf41317e81616f1f005328a68e7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlty9uAACgkQAXYLT59T\n8VSMohAAnU2wB1gUkH5mQ1z4Bd7meIXM4tt9OfCT+RXXWsB6NqGB1DPBrQXluVwg\nbhS5norcYVtEntMw1e6OGl7MF/SP+9uK4sTp5XT5+M3BFDRZuBn2w2WgtvZhh6vx\nQZsX11/Mjy+uSBCP2YNI3mPdlSuhHrzskItw4IdEUEjFKAz9vMOCfY4H9bgiEWh9\nC9z1iKeTfj9EjsEhagM1z2/BBp++SvHaXFh6X78uTeYHISai8RMG6ECn2+TBlriT\n3G1hgoGQfmN5epPQAXuSxJYIpoEL94Skd/S1H0m/IQbuf//ggDNrqopXca7Doh2d\nbI3W82zeImTFIQN02NrZRAiJfb+uZJ+jxlHtkscpYZE0mGO8hUaywXZScXgVvxIZ\nOh8HaWwLXfMYvw9HWHZQmYP0bbqbKWzFnHkomIKn0c8xh7K1bg8tUU9SxZPVHXwe\nNCNszFNYfh69oJddWb6+JxZdycghdGJ67N6FiqeFl+/Dl7gh7OxzlzEwyZg3YBHI\ntUNtfSNiY1Hos0wcwDPIGtQVnXVWSCQfCWMSB1IeM5EqKFdHTdNoU5120u6iFVVR\ndXl/XUpC1wiRy7TbWxDAjgUjC2oUFtYw2T2LuGWxrY+Wo1TCQ1Qe3hlApm9dYWvI\nn5ixKPCItQZlACfpWB3v3pa7gVhkR9Fu6YfSKZXbC94htWPPOgk=\n=ZAEe\n-----END PGP SIGNATURE-----", "payload": "tree 7c2682ed8ed882435b8a1567bc42fb8a74e30e71\nparent f45f52532a394d2d607fc5693364ad820049376d\nauthor David Wood <david@davidtw.co> 1533649052 +0200\ncommitter David Wood <david@davidtw.co> 1534260960 +0200\n\nAdded some debug logging.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51b0552bd7c32cf41317e81616f1f005328a68e7", "html_url": "https://github.com/rust-lang/rust/commit/51b0552bd7c32cf41317e81616f1f005328a68e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51b0552bd7c32cf41317e81616f1f005328a68e7/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f45f52532a394d2d607fc5693364ad820049376d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f45f52532a394d2d607fc5693364ad820049376d", "html_url": "https://github.com/rust-lang/rust/commit/f45f52532a394d2d607fc5693364ad820049376d"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "86bbec795b0f4fc00e2d50684c5b1ec0c3f99e14", "filename": "src/librustc_mir/borrow_check/move_errors.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/51b0552bd7c32cf41317e81616f1f005328a68e7/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51b0552bd7c32cf41317e81616f1f005328a68e7/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs?ref=51b0552bd7c32cf41317e81616f1f005328a68e7", "patch": "@@ -221,6 +221,7 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n                 | GroupedMoveError::OtherIllegalMove { span, ref kind } => (span, kind),\n             };\n             let origin = Origin::Mir;\n+            debug!(\"report: span={:?}, kind={:?}\", span, kind);\n             (\n                 match kind {\n                     IllegalMoveOriginKind::Static => {\n@@ -262,6 +263,10 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n                                     }\n                                     None => bug!(\"closure kind not inferred by borrowck\"),\n                                 };\n+                                debug!(\"report: closure_kind_ty={:?} closure_kind={:?} \\\n+                                       place_description={:?}\", closure_kind_ty, closure_kind,\n+                                       place_description);\n+\n                                 self.tcx.cannot_move_out_of(span, place_description, origin)\n                             }\n                             _ => self"}, {"sha": "25428d2c4241f57b273037fe43c23ff199e5ea89", "filename": "src/librustc_mir/borrow_check/mutability_errors.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/51b0552bd7c32cf41317e81616f1f005328a68e7/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51b0552bd7c32cf41317e81616f1f005328a68e7/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs?ref=51b0552bd7c32cf41317e81616f1f005328a68e7", "patch": "@@ -36,10 +36,18 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n         error_access: AccessKind,\n         location: Location,\n     ) {\n+        debug!(\n+            \"report_mutability_error(\\\n+                access_place={:?}, span={:?}, the_place_err={:?}, error_access={:?}, location={:?},\\\n+            )\",\n+            access_place, span, the_place_err, error_access, location,\n+        );\n+\n         let mut err;\n         let item_msg;\n         let reason;\n         let access_place_desc = self.describe_place(access_place);\n+        debug!(\"report_mutability_error: access_place_desc={:?}\", access_place_desc);\n \n         match the_place_err {\n             Place::Local(local) => {\n@@ -155,6 +163,8 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n             }) => bug!(\"Unexpected immutable place.\"),\n         }\n \n+        debug!(\"report_mutability_error: item_msg={:?}, reason={:?}\", item_msg, reason);\n+\n         // `act` and `acted_on` are strings that let us abstract over\n         // the verbs used in some diagnostic messages.\n         let act;\n@@ -199,6 +209,8 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n             }\n         };\n \n+        debug!(\"report_mutability_error: act={:?}, acted_on={:?}\", act, acted_on);\n+\n         match the_place_err {\n             // We want to suggest users use `let mut` for local (user\n             // variable) mutations..."}]}