{"sha": "2d84d0361d04b5220214bdad9dbf3714d3d8affe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkODRkMDM2MWQwNGI1MjIwMjE0YmRhZDlkYmYzNzE0ZDNkOGFmZmU=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-04T06:24:23Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-04T06:24:23Z"}, "message": "Split up cast.rs tests, run-rustfix for unnecessary_cast\n\nThis splits up the cast.rs tests and enables rustfix tests for the part\nof the `unnecessary_cast` lint that emits `MachineApplicable`\nsuggestions.\n\ncc #3630", "tree": {"sha": "cd95609ed5676726465ecdd28a7e9554cbbfb495", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd95609ed5676726465ecdd28a7e9554cbbfb495"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d84d0361d04b5220214bdad9dbf3714d3d8affe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl1Gem4QHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5hzKD/9S7Xhx6p35V8lPxAuElSkdSalLk7rasyCk\nZbGfBkeF/Hn4TT5qjKdF7O/dQJSm3bALxHs/CLrCfH3FLt3fEFKUnG71XtyRH9xf\nTzxQ+6DY9w8869yom9gMFae6kUuYduuu+Ryp1Pr/KuzH9q++BIqylGyX+RVLKr2v\ndoQmzRta+5bEExrY1LMYKCoNa1KYyrSEah/ghThyX0j9jLSvNHHmsZqfdowRFX6G\nBxwc5MOIcpTDZiT6DJ4IrDv7EZwMuTQAIt7j/y8YEUa5glTm5RS+k9ZpPFqJSfNz\njbeev7rX3d0sdlQBJRFYtCB0H6mpBgemhiF8zKRi9+7rKJdTGETwuy+d85KidM/s\nw9+Fjg2J4fcZSE988JIRU0JE2Bo8Dt1j7zXBnQ/bGJDWS33R1YQXpP9kz8+SpxJ/\n+nwgW5GekfFi/eqEM8ybqhnnDnonSZSt4sGRhSTW2qTrAEEcvqjYTwyrkMHVHydB\nLWo9o2sf6wys2UObzGgwTgbCeYGHHWJg6qNCGoebHs3cQXQ1p3VLWZLJiZaFanN0\nvMKBf1+By9GdZrjYITYD2LeAOohGMMZJMYzrpLHwgsw06snkmqp8f0JK0Kf6LaAa\nSmoMfmjEXvdlQzzOsrPkOdwFlnQuLWG3gbFjJV8Lq1xFWG2waRTWoD9vFNsljcDG\nSEcGz9LgYQ==\n=Ymn7\n-----END PGP SIGNATURE-----", "payload": "tree cd95609ed5676726465ecdd28a7e9554cbbfb495\nparent 5c1e30ab05841af32e206c8111f5343be3475a90\nauthor Philipp Hansch <dev@phansch.net> 1564899863 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1564899863 +0200\n\nSplit up cast.rs tests, run-rustfix for unnecessary_cast\n\nThis splits up the cast.rs tests and enables rustfix tests for the part\nof the `unnecessary_cast` lint that emits `MachineApplicable`\nsuggestions.\n\ncc #3630\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d84d0361d04b5220214bdad9dbf3714d3d8affe", "html_url": "https://github.com/rust-lang/rust/commit/2d84d0361d04b5220214bdad9dbf3714d3d8affe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d84d0361d04b5220214bdad9dbf3714d3d8affe/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c1e30ab05841af32e206c8111f5343be3475a90", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c1e30ab05841af32e206c8111f5343be3475a90", "html_url": "https://github.com/rust-lang/rust/commit/5c1e30ab05841af32e206c8111f5343be3475a90"}], "stats": {"total": 169, "additions": 102, "deletions": 67}, "files": [{"sha": "79705071999249b6570967f82de4281633d41172", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=2d84d0361d04b5220214bdad9dbf3714d3d8affe", "patch": "@@ -42,32 +42,4 @@ fn main() {\n     i32::max_value() as u32;\n     i64::max_value() as u64;\n     i128::max_value() as u128;\n-    // Extra checks for *size\n-    // Test cast_unnecessary\n-    1i32 as i32;\n-    1f32 as f32;\n-    false as bool;\n-    &1i32 as &i32;\n-    // macro version\n-    macro_rules! foo {\n-        ($a:ident, $b:ident) => {\n-            pub fn $a() -> $b {\n-                1 as $b\n-            }\n-        };\n-    }\n-    foo!(a, i32);\n-    foo!(b, f32);\n-    foo!(c, f64);\n-\n-    // casting integer literal to float is unnecessary\n-    100 as f32;\n-    100 as f64;\n-    100_i32 as f64;\n-    // Should not trigger\n-    #[rustfmt::skip]\n-    let v = vec!(1);\n-    &v as &[i32];\n-    1.0 as f64;\n-    1 as u64;\n }"}, {"sha": "0ebd3a1f184dcade930e41e73263903dc2e64ace", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 1, "deletions": 39, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=2d84d0361d04b5220214bdad9dbf3714d3d8affe", "patch": "@@ -138,43 +138,5 @@ error: casting isize to usize may lose the sign of the value\n LL |     -1isize as usize;\n    |     ^^^^^^^^^^^^^^^^\n \n-error: casting to the same type is unnecessary (`i32` -> `i32`)\n-  --> $DIR/cast.rs:47:5\n-   |\n-LL |     1i32 as i32;\n-   |     ^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n-\n-error: casting to the same type is unnecessary (`f32` -> `f32`)\n-  --> $DIR/cast.rs:48:5\n-   |\n-LL |     1f32 as f32;\n-   |     ^^^^^^^^^^^\n-\n-error: casting to the same type is unnecessary (`bool` -> `bool`)\n-  --> $DIR/cast.rs:49:5\n-   |\n-LL |     false as bool;\n-   |     ^^^^^^^^^^^^^\n-\n-error: casting integer literal to f32 is unnecessary\n-  --> $DIR/cast.rs:64:5\n-   |\n-LL |     100 as f32;\n-   |     ^^^^^^^^^^ help: try: `100_f32`\n-\n-error: casting integer literal to f64 is unnecessary\n-  --> $DIR/cast.rs:65:5\n-   |\n-LL |     100 as f64;\n-   |     ^^^^^^^^^^ help: try: `100_f64`\n-\n-error: casting integer literal to f64 is unnecessary\n-  --> $DIR/cast.rs:66:5\n-   |\n-LL |     100_i32 as f64;\n-   |     ^^^^^^^^^^^^^^ help: try: `100_f64`\n-\n-error: aborting due to 28 previous errors\n+error: aborting due to 22 previous errors\n "}, {"sha": "df9b227eeb3f55ad2cc6acb1f69c3ad040d9b11b", "filename": "tests/ui/unnecessary_cast.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.rs?ref=2d84d0361d04b5220214bdad9dbf3714d3d8affe", "patch": "@@ -0,0 +1,23 @@\n+#![warn(clippy::unnecessary_cast)]\n+#![allow(clippy::no_effect)]\n+\n+fn main() {\n+    // Test cast_unnecessary\n+    1i32 as i32;\n+    1f32 as f32;\n+    false as bool;\n+    &1i32 as &i32;\n+\n+    // macro version\n+    macro_rules! foo {\n+        ($a:ident, $b:ident) => {\n+            #[allow(unused)]\n+            pub fn $a() -> $b {\n+                1 as $b\n+            }\n+        };\n+    }\n+    foo!(a, i32);\n+    foo!(b, f32);\n+    foo!(c, f64);\n+}"}, {"sha": "8981d13e8eabb61c1e2888f237af5016c8e9ccbe", "filename": "tests/ui/unnecessary_cast.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.stderr?ref=2d84d0361d04b5220214bdad9dbf3714d3d8affe", "patch": "@@ -0,0 +1,22 @@\n+error: casting to the same type is unnecessary (`i32` -> `i32`)\n+  --> $DIR/unnecessary_cast.rs:6:5\n+   |\n+LL |     1i32 as i32;\n+   |     ^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n+\n+error: casting to the same type is unnecessary (`f32` -> `f32`)\n+  --> $DIR/unnecessary_cast.rs:7:5\n+   |\n+LL |     1f32 as f32;\n+   |     ^^^^^^^^^^^\n+\n+error: casting to the same type is unnecessary (`bool` -> `bool`)\n+  --> $DIR/unnecessary_cast.rs:8:5\n+   |\n+LL |     false as bool;\n+   |     ^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "8c659df831e3d949a1aa558514c08a1dab28ad63", "filename": "tests/ui/unnecessary_cast_fixable.fixed", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.fixed?ref=2d84d0361d04b5220214bdad9dbf3714d3d8affe", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_cast)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n+\n+fn main() {\n+    // casting integer literal to float is unnecessary\n+    100_f32;\n+    100_f64;\n+    100_f64;\n+    // Should not trigger\n+    #[rustfmt::skip]\n+    let v = vec!(1);\n+    &v as &[i32];\n+    1.0 as f64;\n+    1 as u64;\n+}"}, {"sha": "7bab5540c42f7f866f55e945fb79b5047364238e", "filename": "tests/ui/unnecessary_cast_fixable.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.rs?ref=2d84d0361d04b5220214bdad9dbf3714d3d8affe", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+\n+#![warn(clippy::unnecessary_cast)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n+\n+fn main() {\n+    // casting integer literal to float is unnecessary\n+    100 as f32;\n+    100 as f64;\n+    100_i32 as f64;\n+    // Should not trigger\n+    #[rustfmt::skip]\n+    let v = vec!(1);\n+    &v as &[i32];\n+    1.0 as f64;\n+    1 as u64;\n+}"}, {"sha": "74616bb90822b547670eeeb0118396a1a016880f", "filename": "tests/ui/unnecessary_cast_fixable.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2d84d0361d04b5220214bdad9dbf3714d3d8affe/tests%2Fui%2Funnecessary_cast_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.stderr?ref=2d84d0361d04b5220214bdad9dbf3714d3d8affe", "patch": "@@ -0,0 +1,22 @@\n+error: casting integer literal to f32 is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:8:5\n+   |\n+LL |     100 as f32;\n+   |     ^^^^^^^^^^ help: try: `100_f32`\n+   |\n+   = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n+\n+error: casting integer literal to f64 is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:9:5\n+   |\n+LL |     100 as f64;\n+   |     ^^^^^^^^^^ help: try: `100_f64`\n+\n+error: casting integer literal to f64 is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:10:5\n+   |\n+LL |     100_i32 as f64;\n+   |     ^^^^^^^^^^^^^^ help: try: `100_f64`\n+\n+error: aborting due to 3 previous errors\n+"}]}