{"sha": "e822235323ba4f732bf2bb930d1a430b70ba5501", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MjIyMzUzMjNiYTRmNzMyYmYyYmI5MzBkMWE0MzBiNzBiYTU1MDE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-05T13:33:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-05T13:33:37Z"}, "message": "add a test", "tree": {"sha": "fb3f63f4537273cecd3b0f00d2bdaa414596ec1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb3f63f4537273cecd3b0f00d2bdaa414596ec1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e822235323ba4f732bf2bb930d1a430b70ba5501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e822235323ba4f732bf2bb930d1a430b70ba5501", "html_url": "https://github.com/rust-lang/rust/commit/e822235323ba4f732bf2bb930d1a430b70ba5501", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e822235323ba4f732bf2bb930d1a430b70ba5501/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8655ad5936dda66a9123251c4c3fa43b7e5b80a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8655ad5936dda66a9123251c4c3fa43b7e5b80a4", "html_url": "https://github.com/rust-lang/rust/commit/8655ad5936dda66a9123251c4c3fa43b7e5b80a4"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "65e07fff1e44dd53a3221143849304c6491aa0b5", "filename": "src/test/codegen/set-discriminant-invalid.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/e822235323ba4f732bf2bb930d1a430b70ba5501/src%2Ftest%2Fcodegen%2Fset-discriminant-invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e822235323ba4f732bf2bb930d1a430b70ba5501/src%2Ftest%2Fcodegen%2Fset-discriminant-invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fset-discriminant-invalid.rs?ref=e822235323ba4f732bf2bb930d1a430b70ba5501", "patch": "@@ -0,0 +1,43 @@\n+// compile-flags: -C opt-level=0\n+#![crate_type = \"lib\"]\n+\n+pub enum ApiError {}\n+#[allow(dead_code)]\n+pub struct TokioError {\n+    b: bool,\n+}\n+pub enum Error {\n+    Api {\n+        source: ApiError,\n+    },\n+    Ethereum,\n+    Tokio {\n+        source: TokioError,\n+    },\n+}\n+struct Api;\n+impl IntoError<Error> for Api\n+{\n+    type Source = ApiError;\n+    // CHECK-LABEL: @into_error\n+    // CHECK: unreachable\n+    // Also check the next two instructions to make sure we do not match against `unreachable`\n+    // elsewhere in the code (e.g., in the closure bode).\n+    // CHECK-NEXT: load\n+    // CHECK-NEXT: ret\n+    #[no_mangle]\n+    fn into_error(self, error: Self::Source) -> Error {\n+        Error::Api {\n+            source: (|v| v)(error),\n+        }\n+    }\n+}\n+\n+pub trait IntoError<E>\n+{\n+    /// The underlying error\n+    type Source;\n+\n+    /// Combine the information to produce the error\n+    fn into_error(self, source: Self::Source) -> E;\n+}"}]}