{"sha": "8655ad5936dda66a9123251c4c3fa43b7e5b80a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NTVhZDU5MzZkZGE2NmE5MTIzMjUxYzRjM2ZhNDNiN2U1YjgwYTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-05T13:20:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-05T13:20:53Z"}, "message": "codegen: mark invalid SetDiscriminant unreachable", "tree": {"sha": "dcca4e809f53aef5a54c668d10842a4f62c26e5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcca4e809f53aef5a54c668d10842a4f62c26e5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8655ad5936dda66a9123251c4c3fa43b7e5b80a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8655ad5936dda66a9123251c4c3fa43b7e5b80a4", "html_url": "https://github.com/rust-lang/rust/commit/8655ad5936dda66a9123251c4c3fa43b7e5b80a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8655ad5936dda66a9123251c4c3fa43b7e5b80a4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aeaaf8f640c919074983edd8366ab3d10321f2b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/aeaaf8f640c919074983edd8366ab3d10321f2b5", "html_url": "https://github.com/rust-lang/rust/commit/aeaaf8f640c919074983edd8366ab3d10321f2b5"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "4b8819d11f4f874c2b745c73ba85d5b02de61d8e", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8655ad5936dda66a9123251c4c3fa43b7e5b80a4/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8655ad5936dda66a9123251c4c3fa43b7e5b80a4/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=8655ad5936dda66a9123251c4c3fa43b7e5b80a4", "patch": "@@ -333,6 +333,7 @@ impl<'a, 'tcx, V: CodegenObject> PlaceRef<'tcx, V> {\n         variant_index: VariantIdx\n     ) {\n         if self.layout.for_variant(bx.cx(), variant_index).abi.is_uninhabited() {\n+            bx.unreachable();\n             return;\n         }\n         match self.layout.variants {\n@@ -488,9 +489,9 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                     },\n                     Err(_) => {\n                         // This is unreachable as long as runtime\n-                        // and compile-time agree on values\n+                        // and compile-time agree perfectly.\n                         // With floats that won't always be true,\n-                        // so we generate an abort.\n+                        // so we generate a (safe) abort.\n                         bx.abort();\n                         let llval = bx.cx().const_undef(\n                             bx.cx().type_ptr_to(bx.cx().backend_type(layout))"}]}