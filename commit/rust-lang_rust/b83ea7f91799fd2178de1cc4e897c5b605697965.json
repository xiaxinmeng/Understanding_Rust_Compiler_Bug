{"sha": "b83ea7f91799fd2178de1cc4e897c5b605697965", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4M2VhN2Y5MTc5OWZkMjE3OGRlMWNjNGU4OTdjNWI2MDU2OTc5NjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-22T21:51:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-22T21:51:38Z"}, "message": "reduce visibility", "tree": {"sha": "fe94120f52c608ede6e263289dd39eed21a4a11e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe94120f52c608ede6e263289dd39eed21a4a11e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b83ea7f91799fd2178de1cc4e897c5b605697965", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b83ea7f91799fd2178de1cc4e897c5b605697965", "html_url": "https://github.com/rust-lang/rust/commit/b83ea7f91799fd2178de1cc4e897c5b605697965", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b83ea7f91799fd2178de1cc4e897c5b605697965/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28ce23fe8bfee55a0810b4347423e66c7621650a", "url": "https://api.github.com/repos/rust-lang/rust/commits/28ce23fe8bfee55a0810b4347423e66c7621650a", "html_url": "https://github.com/rust-lang/rust/commit/28ce23fe8bfee55a0810b4347423e66c7621650a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1abc7832ffa0f9e369238077da4ce3c3ea9812bb", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b83ea7f91799fd2178de1cc4e897c5b605697965/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b83ea7f91799fd2178de1cc4e897c5b605697965/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=b83ea7f91799fd2178de1cc4e897c5b605697965", "patch": "@@ -366,7 +366,7 @@ fn char_lit(lit: &str, diag: Option<(Span, &Handler)>) -> (char, isize) {\n }\n \n /// Parses a string representing a string literal into its final form. Does unescaping.\n-pub fn str_lit(lit: &str, diag: Option<(Span, &Handler)>) -> String {\n+fn str_lit(lit: &str, diag: Option<(Span, &Handler)>) -> String {\n     debug!(\"str_lit: given {}\", lit.escape_default());\n     let mut res = String::with_capacity(lit.len());\n "}]}