{"sha": "a8cc89f97566521cd54ea424eea09099b2531b03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4Y2M4OWY5NzU2NjUyMWNkNTRlYTQyNGVlYTA5MDk5YjI1MzFiMDM=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-29T06:02:20Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-03-26T23:19:58Z"}, "message": "Update imports from `dataflow::generic` to `dataflow`", "tree": {"sha": "4d1824915d6d1386715958ac6d93d45451d4c258", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d1824915d6d1386715958ac6d93d45451d4c258"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8cc89f97566521cd54ea424eea09099b2531b03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8cc89f97566521cd54ea424eea09099b2531b03", "html_url": "https://github.com/rust-lang/rust/commit/a8cc89f97566521cd54ea424eea09099b2531b03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8cc89f97566521cd54ea424eea09099b2531b03/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93ce5ff5874c1a6b31bef120ffa4a8824e3d9216", "url": "https://api.github.com/repos/rust-lang/rust/commits/93ce5ff5874c1a6b31bef120ffa4a8824e3d9216", "html_url": "https://github.com/rust-lang/rust/commit/93ce5ff5874c1a6b31bef120ffa4a8824e3d9216"}], "stats": {"total": 39, "additions": 19, "deletions": 20}, "files": [{"sha": "882c6bd0333eeaffc6f4cac9c7dd8279c90db799", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -29,12 +29,12 @@ use std::mem;\n use std::rc::Rc;\n \n use crate::dataflow;\n-use crate::dataflow::generic::{Analysis, BorrowckFlowState as Flows, BorrowckResults};\n use crate::dataflow::indexes::{BorrowIndex, InitIndex, MoveOutIndex, MovePathIndex};\n use crate::dataflow::move_paths::{InitLocation, LookupResult, MoveData, MoveError};\n use crate::dataflow::Borrows;\n use crate::dataflow::EverInitializedPlaces;\n use crate::dataflow::MoveDataParamEnv;\n+use crate::dataflow::{Analysis, BorrowckFlowState as Flows, BorrowckResults};\n use crate::dataflow::{MaybeInitializedPlaces, MaybeUninitializedPlaces};\n use crate::transform::MirSource;\n \n@@ -298,7 +298,7 @@ fn do_mir_borrowck<'a, 'tcx>(\n         mbcx.report_move_errors(errors);\n     }\n \n-    dataflow::generic::visit_results(\n+    dataflow::visit_results(\n         &*body,\n         traversal::reverse_postorder(&*body).map(|(bb, _)| bb),\n         &results,\n@@ -509,7 +509,7 @@ crate struct MirBorrowckCtxt<'cx, 'tcx> {\n // 2. loans made in overlapping scopes do not conflict\n // 3. assignments do not affect things loaned out as immutable\n // 4. moves do not affect things loaned out in any way\n-impl<'cx, 'tcx> dataflow::generic::ResultsVisitor<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tcx> {\n+impl<'cx, 'tcx> dataflow::ResultsVisitor<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tcx> {\n     type FlowState = Flows<'cx, 'tcx>;\n \n     fn visit_statement("}, {"sha": "8e929a4fa22f48ee640d73dee11f434985525069", "filename": "src/librustc_mir/borrow_check/nll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -21,9 +21,9 @@ use std::str::FromStr;\n use self::mir_util::PassWhere;\n use polonius_engine::{Algorithm, Output};\n \n-use crate::dataflow::generic::ResultsCursor;\n use crate::dataflow::move_paths::{InitKind, InitLocation, MoveData};\n use crate::dataflow::MaybeInitializedPlaces;\n+use crate::dataflow::ResultsCursor;\n use crate::transform::MirSource;\n use crate::util as mir_util;\n use crate::util::pretty;"}, {"sha": "a55529ed0ef12efd2c1adc93d76c40013a480f83", "filename": "src/librustc_mir/borrow_check/type_check/liveness/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -3,9 +3,9 @@ use rustc::ty::{RegionVid, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use std::rc::Rc;\n \n-use crate::dataflow::generic::ResultsCursor;\n use crate::dataflow::move_paths::MoveData;\n use crate::dataflow::MaybeInitializedPlaces;\n+use crate::dataflow::ResultsCursor;\n \n use crate::borrow_check::{\n     constraints::OutlivesConstraintSet,"}, {"sha": "75b269c79b96e59e16b45957cd4cb9348f3ff06e", "filename": "src/librustc_mir/borrow_check/type_check/liveness/trace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -8,10 +8,10 @@ use rustc_trait_selection::traits::query::type_op::outlives::DropckOutlives;\n use rustc_trait_selection::traits::query::type_op::TypeOp;\n use std::rc::Rc;\n \n-use crate::dataflow::generic::ResultsCursor;\n use crate::dataflow::indexes::MovePathIndex;\n use crate::dataflow::move_paths::{HasMoveData, MoveData};\n use crate::dataflow::MaybeInitializedPlaces;\n+use crate::dataflow::ResultsCursor;\n \n use crate::borrow_check::{\n     region_infer::values::{self, PointIndex, RegionValueElements},"}, {"sha": "02f6bcade23a2cdc1200caaa039571b6e0af23f5", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -39,9 +39,9 @@ use rustc_trait_selection::traits::query::type_op::custom::CustomTypeOp;\n use rustc_trait_selection::traits::query::{Fallible, NoSolution};\n use rustc_trait_selection::traits::{self, ObligationCause, PredicateObligations};\n \n-use crate::dataflow::generic::ResultsCursor;\n use crate::dataflow::move_paths::MoveData;\n use crate::dataflow::MaybeInitializedPlaces;\n+use crate::dataflow::ResultsCursor;\n use crate::transform::promote_consts::should_suggest_const_in_array_repeat_expressions_attribute;\n \n use crate::borrow_check::{"}, {"sha": "955021d83aa098a69ba4e50cbde0f58219546286", "filename": "src/librustc_mir/dataflow/impls/borrowed_locals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrowed_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrowed_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrowed_locals.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -1,6 +1,6 @@\n pub use super::*;\n \n-use crate::dataflow::generic::{AnalysisDomain, GenKill, GenKillAnalysis};\n+use crate::dataflow::{AnalysisDomain, GenKill, GenKillAnalysis};\n use rustc::mir::visit::Visitor;\n use rustc::mir::*;\n use rustc::ty::{ParamEnv, TyCtxt};"}, {"sha": "9e9e414ad648bf4445c815de5ef5c2f6177b7fd9", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -8,8 +8,8 @@ use rustc_index::bit_set::BitSet;\n use crate::borrow_check::{\n     places_conflict, BorrowSet, PlaceConflictBias, PlaceExt, RegionInferenceContext, ToRegionVid,\n };\n-use crate::dataflow::generic::{self, GenKill};\n use crate::dataflow::BottomValue;\n+use crate::dataflow::{self, GenKill};\n \n use std::rc::Rc;\n \n@@ -226,7 +226,7 @@ impl<'a, 'tcx> Borrows<'a, 'tcx> {\n     }\n }\n \n-impl<'tcx> generic::AnalysisDomain<'tcx> for Borrows<'_, 'tcx> {\n+impl<'tcx> dataflow::AnalysisDomain<'tcx> for Borrows<'_, 'tcx> {\n     type Idx = BorrowIndex;\n \n     const NAME: &'static str = \"borrows\";\n@@ -245,7 +245,7 @@ impl<'tcx> generic::AnalysisDomain<'tcx> for Borrows<'_, 'tcx> {\n     }\n }\n \n-impl<'tcx> generic::GenKillAnalysis<'tcx> for Borrows<'_, 'tcx> {\n+impl<'tcx> dataflow::GenKillAnalysis<'tcx> for Borrows<'_, 'tcx> {\n     fn before_statement_effect(\n         &self,\n         trans: &mut impl GenKill<Self::Idx>,"}, {"sha": "180094e412b15ce665d905c802aea283a3b7b00f", "filename": "src/librustc_mir/dataflow/impls/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -12,9 +12,8 @@ use super::MoveDataParamEnv;\n \n use crate::util::elaborate_drops::DropFlagState;\n \n-use super::generic::{AnalysisDomain, GenKill, GenKillAnalysis};\n use super::move_paths::{HasMoveData, InitIndex, InitKind, LookupResult, MoveData, MovePathIndex};\n-use super::BottomValue;\n+use super::{AnalysisDomain, BottomValue, GenKill, GenKillAnalysis};\n \n use super::drop_flag_effects_for_function_entry;\n use super::drop_flag_effects_for_location;"}, {"sha": "f8d1efabd33c055197790e198f4f9532ed309ed2", "filename": "src/librustc_mir/dataflow/impls/storage_liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fstorage_liveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fstorage_liveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fstorage_liveness.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -1,7 +1,7 @@\n pub use super::*;\n \n-use crate::dataflow::generic::{self as dataflow, GenKill, Results, ResultsRefCursor};\n use crate::dataflow::BottomValue;\n+use crate::dataflow::{self, GenKill, Results, ResultsRefCursor};\n use rustc::mir::visit::{NonMutatingUseContext, PlaceContext, Visitor};\n use rustc::mir::*;\n use std::cell::RefCell;"}, {"sha": "5f761ce344880baec15db92e3a2164d1ec1f6b15", "filename": "src/librustc_mir/transform/check_consts/resolver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -9,7 +9,7 @@ use rustc_index::bit_set::BitSet;\n use std::marker::PhantomData;\n \n use super::{qualifs, Item, Qualif};\n-use crate::dataflow::{self as old_dataflow, generic as dataflow};\n+use crate::dataflow;\n \n /// A `Visitor` that propagates qualifs between locals. This defines the transfer function of\n /// `FlowSensitiveAnalysis`.\n@@ -165,7 +165,7 @@ where\n     }\n }\n \n-impl<Q> old_dataflow::BottomValue for FlowSensitiveAnalysis<'_, '_, '_, Q> {\n+impl<Q> dataflow::BottomValue for FlowSensitiveAnalysis<'_, '_, '_, Q> {\n     const BOTTOM_VALUE: bool = false;\n }\n "}, {"sha": "7f4714e9f9c1999e2276ba5c4a6747db92ab69bd", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -22,8 +22,8 @@ use super::qualifs::{self, HasMutInterior, NeedsDrop};\n use super::resolver::FlowSensitiveAnalysis;\n use super::{is_lang_panic_fn, ConstKind, Item, Qualif};\n use crate::const_eval::{is_const_fn, is_unstable_const_fn};\n-use crate::dataflow::generic::{self as dataflow, Analysis};\n use crate::dataflow::MaybeMutBorrowedLocals;\n+use crate::dataflow::{self, Analysis};\n \n // We are using `MaybeMutBorrowedLocals` as a proxy for whether an item may have been mutated\n // through a pointer prior to the given point. This is okay even though `MaybeMutBorrowedLocals`"}, {"sha": "4ec4ef0206105c82e0eee6f372f3273c01946546", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -1,9 +1,9 @@\n use crate::dataflow;\n-use crate::dataflow::generic::{Analysis, ResultsCursor};\n use crate::dataflow::move_paths::{LookupResult, MoveData, MovePathIndex};\n use crate::dataflow::on_lookup_result_bits;\n use crate::dataflow::MoveDataParamEnv;\n use crate::dataflow::{on_all_children_bits, on_all_drop_children_bits};\n+use crate::dataflow::{Analysis, ResultsCursor};\n use crate::dataflow::{MaybeInitializedPlaces, MaybeUninitializedPlaces};\n use crate::transform::{MirPass, MirSource};\n use crate::util::elaborate_drops::{elaborate_drop, DropFlagState, Unwind};"}, {"sha": "1945efb6bf7ccf8f9b3d78c418c8a69a494942bb", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -49,7 +49,7 @@\n //! For generators with state 1 (returned) and state 2 (poisoned) it does nothing.\n //! Otherwise it drops all the values in scope at the last suspension point.\n \n-use crate::dataflow::generic::{self as dataflow, Analysis};\n+use crate::dataflow::{self, Analysis};\n use crate::dataflow::{MaybeBorrowedLocals, MaybeRequiresStorage, MaybeStorageLive};\n use crate::transform::no_landing_pads::no_landing_pads;\n use crate::transform::simplify;"}, {"sha": "c9a00166f0f9c9b61f757d6ae974552fd2ef6c1b", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cc89f97566521cd54ea424eea09099b2531b03/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=a8cc89f97566521cd54ea424eea09099b2531b03", "patch": "@@ -9,11 +9,11 @@ use rustc::ty::{self, Ty, TyCtxt};\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;\n \n-use crate::dataflow::generic::{Analysis, Results, ResultsCursor};\n use crate::dataflow::move_paths::{HasMoveData, MoveData};\n use crate::dataflow::move_paths::{LookupResult, MovePathIndex};\n use crate::dataflow::MaybeMutBorrowedLocals;\n use crate::dataflow::MoveDataParamEnv;\n+use crate::dataflow::{Analysis, Results, ResultsCursor};\n use crate::dataflow::{\n     DefinitelyInitializedPlaces, MaybeInitializedPlaces, MaybeUninitializedPlaces,\n };"}]}