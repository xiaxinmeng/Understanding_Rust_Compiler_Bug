{"sha": "93655863a34d8bb5c9a840cc89975a79de3b35c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNjU1ODYzYTM0ZDhiYjVjOWE4NDBjYzg5OTc1YTc5ZGUzYjM1YzQ=", "commit": {"author": {"name": "Ryan Senior", "email": "ryan.senior@puppetlabs.com", "date": "2016-10-18T03:54:27Z"}, "committer": {"name": "Ryan Senior", "email": "ryan.senior@puppetlabs.com", "date": "2016-10-21T12:23:41Z"}, "message": "Add an error explaination for E0399", "tree": {"sha": "44f7c66905c5ae95097a3beaed2a397160afa2fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44f7c66905c5ae95097a3beaed2a397160afa2fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93655863a34d8bb5c9a840cc89975a79de3b35c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93655863a34d8bb5c9a840cc89975a79de3b35c4", "html_url": "https://github.com/rust-lang/rust/commit/93655863a34d8bb5c9a840cc89975a79de3b35c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93655863a34d8bb5c9a840cc89975a79de3b35c4/comments", "author": null, "committer": null, "parents": [{"sha": "e7d01cfe02f2f0348bce7bbd8b11efc63123bbf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7d01cfe02f2f0348bce7bbd8b11efc63123bbf5", "html_url": "https://github.com/rust-lang/rust/commit/e7d01cfe02f2f0348bce7bbd8b11efc63123bbf5"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "3258ec9546c4aad84ec2ea0ccf3266498ce0bdf8", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/93655863a34d8bb5c9a840cc89975a79de3b35c4/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93655863a34d8bb5c9a840cc89975a79de3b35c4/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=93655863a34d8bb5c9a840cc89975a79de3b35c4", "patch": "@@ -3630,6 +3630,44 @@ fn together_we_will_rule_the_galaxy(son: &A<i32>) {} // Ok!\n ```\n \"##,\n \n+E0399: r##\"\n+You implemented a trait, overriding one or more of its associated types but did\n+not reimplement its default methods.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0399\n+#![feature(associated_type_defaults)]\n+\n+pub trait Foo {\n+    type Assoc = u8;\n+    fn bar(&self) {}\n+}\n+\n+impl Foo for i32 {\n+    // error - the following trait items need to be reimplemented as\n+    //         `Assoc` was overridden: `bar`\n+    type Assoc = i32;\n+}\n+```\n+\n+To fix this, add an implementation for each default method from the trait:\n+\n+```\n+#![feature(associated_type_defaults)]\n+\n+pub trait Foo {\n+    type Assoc = u8;\n+    fn bar(&self) {}\n+}\n+\n+impl Foo for i32 {\n+    type Assoc = i32;\n+    fn bar(&self) {} // ok!\n+}\n+```\n+\"##,\n+\n E0439: r##\"\n The length of the platform-intrinsic function `simd_shuffle`\n wasn't specified. Erroneous code example:\n@@ -4161,8 +4199,6 @@ register_diagnostics! {\n //  E0372, // coherence not object safe\n     E0377, // the trait `CoerceUnsized` may only be implemented for a coercion\n            // between structures with the same definition\n-    E0399, // trait items need to be implemented because the associated\n-           // type `{}` was overridden\n     E0436, // functional record update requires a struct\n     E0521, // redundant default implementations of trait\n     E0533, // `{}` does not name a unit variant, unit struct or a constant"}]}