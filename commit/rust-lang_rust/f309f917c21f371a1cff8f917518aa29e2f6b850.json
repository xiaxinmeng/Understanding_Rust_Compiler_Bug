{"sha": "f309f917c21f371a1cff8f917518aa29e2f6b850", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMDlmOTE3YzIxZjM3MWExY2ZmOGY5MTc1MThhYTI5ZTJmNmI4NTA=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-05-04T21:28:22Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-06-03T11:59:08Z"}, "message": "Add method to note types don't implement `Copy`", "tree": {"sha": "15c0a1f3054c678db786d3b3b9259ed312b02d9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15c0a1f3054c678db786d3b3b9259ed312b02d9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f309f917c21f371a1cff8f917518aa29e2f6b850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f309f917c21f371a1cff8f917518aa29e2f6b850", "html_url": "https://github.com/rust-lang/rust/commit/f309f917c21f371a1cff8f917518aa29e2f6b850", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f309f917c21f371a1cff8f917518aa29e2f6b850/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cfa70f76088f973dd66f5bea9c6b0867378c16d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cfa70f76088f973dd66f5bea9c6b0867378c16d", "html_url": "https://github.com/rust-lang/rust/commit/5cfa70f76088f973dd66f5bea9c6b0867378c16d"}], "stats": {"total": 63, "additions": 38, "deletions": 25}, "files": [{"sha": "f8e73e838df49263c383da04ad68ddd20adae38a", "filename": "src/librustc_mir/borrow_check/conflict_errors.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f309f917c21f371a1cff8f917518aa29e2f6b850/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f309f917c21f371a1cff8f917518aa29e2f6b850/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs?ref=f309f917c21f371a1cff8f917518aa29e2f6b850", "patch": "@@ -234,22 +234,18 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                         );\n                     }\n                 }\n-                if let Place::Base(PlaceBase::Local(local)) = place {\n+                let span = if let Place::Base(PlaceBase::Local(local)) = place {\n                     let decl = &self.mir.local_decls[*local];\n-                    err.span_label(\n-                        decl.source_info.span,\n-                        format!(\n-                            \"move occurs because {} has type `{}`, \\\n-                                which does not implement the `Copy` trait\",\n-                            note_msg, ty,\n-                    ));\n+                    Some(decl.source_info.span)\n                 } else {\n-                    err.note(&format!(\n-                        \"move occurs because {} has type `{}`, \\\n-                         which does not implement the `Copy` trait\",\n-                        note_msg, ty\n-                    ));\n-                }\n+                    None\n+                };\n+                self.note_type_does_not_implement_copy(\n+                    &mut err,\n+                    &note_msg,\n+                    ty,\n+                    span,\n+                );\n             }\n \n             if let Some((_, mut old_err)) = self.move_error_reported"}, {"sha": "3f977ea198b6dd00c11bdbb91917f7019a2112cf", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f309f917c21f371a1cff8f917518aa29e2f6b850/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f309f917c21f371a1cff8f917518aa29e2f6b850/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=f309f917c21f371a1cff8f917518aa29e2f6b850", "patch": "@@ -2,9 +2,9 @@ use rustc::hir;\n use rustc::hir::def::Namespace;\n use rustc::hir::def_id::DefId;\n use rustc::mir::{\n-    AggregateKind, BindingForm, ClearCrossCrate, Constant, Field, Local,\n-    LocalKind, Location, Operand, Place, PlaceBase, ProjectionElem, Rvalue,\n-    Statement, StatementKind, Static, StaticKind, TerminatorKind,\n+    AggregateKind, Constant, Field, Local, LocalKind, Location, Operand,\n+    Place, PlaceBase, ProjectionElem, Rvalue, Statement, StatementKind, Static,\n+    StaticKind, TerminatorKind,\n };\n use rustc::ty::{self, DefIdTree, Ty};\n use rustc::ty::layout::VariantIdx;\n@@ -381,6 +381,26 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n             false\n         }\n     }\n+\n+    /// Add a note that a type does not implement `Copy`\n+    pub(super) fn note_type_does_not_implement_copy(\n+        &self,\n+        err: &mut DiagnosticBuilder<'a>,\n+        place_desc: &str,\n+        ty: Ty<'tcx>,\n+        span: Option<Span>,\n+    ) {\n+        let message = format!(\n+            \"move occurs because {} has type `{}`, which does not implement the `Copy` trait\",\n+            place_desc,\n+            ty,\n+        );\n+        if let Some(span) = span {\n+            err.span_label(span, message);\n+        } else {\n+            err.note(&message);\n+        }\n+    }\n }\n \n impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {"}, {"sha": "2e3c92acb2c780e051c3ff8c5adc09f1997f7d5e", "filename": "src/librustc_mir/borrow_check/move_errors.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f309f917c21f371a1cff8f917518aa29e2f6b850/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f309f917c21f371a1cff8f917518aa29e2f6b850/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs?ref=f309f917c21f371a1cff8f917518aa29e2f6b850", "patch": "@@ -473,14 +473,11 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n             }\n \n             if binds_to.len() == 1 {\n-                err.span_note(\n-                    binding_span,\n-                    &format!(\n-                        \"move occurs because `{}` has type `{}`, \\\n-                            which does not implement the `Copy` trait\",\n-                        bind_to.name.unwrap(),\n-                        bind_to.ty\n-                    ),\n+                self.note_type_does_not_implement_copy(\n+                    err,\n+                    &format!(\"`{}`\", bind_to.name.unwrap()),\n+                    bind_to.ty,\n+                    Some(binding_span)\n                 );\n             } else {\n                 noncopy_var_spans.push(binding_span);"}]}