{"sha": "9c521f00ff118c38cbec730ffae1cee5f465f6ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNTIxZjAwZmYxMThjMzhjYmVjNzMwZmZhZTFjZWU1ZjQ2NWY2YWM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-23T02:33:14Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-23T02:33:14Z"}, "message": "Improve fail case in expand_macro", "tree": {"sha": "9e2a135b29fff2ad6ec496cc3a9f5e169c757827", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e2a135b29fff2ad6ec496cc3a9f5e169c757827"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c521f00ff118c38cbec730ffae1cee5f465f6ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c521f00ff118c38cbec730ffae1cee5f465f6ac", "html_url": "https://github.com/rust-lang/rust/commit/9c521f00ff118c38cbec730ffae1cee5f465f6ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c521f00ff118c38cbec730ffae1cee5f465f6ac/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b19202e00fffe62a1a9c07f4b974f0affdd0c66", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b19202e00fffe62a1a9c07f4b974f0affdd0c66", "html_url": "https://github.com/rust-lang/rust/commit/5b19202e00fffe62a1a9c07f4b974f0affdd0c66"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "0b540b8cdead6a1e67446103b414838a2ac73c32", "filename": "crates/ra_ide_api/src/expand_macro.rs", "status": "modified", "additions": 31, "deletions": 9, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9c521f00ff118c38cbec730ffae1cee5f465f6ac/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c521f00ff118c38cbec730ffae1cee5f465f6ac/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs?ref=9c521f00ff118c38cbec730ffae1cee5f465f6ac", "patch": "@@ -47,15 +47,15 @@ fn expand_macro_recur(\n \n     for child in children.into_iter() {\n         let node = hir::Source::new(macro_file_id, &child);\n-        let new_node = expand_macro_recur(db, source, node)?;\n-\n-        // Replace the whole node if it is root\n-        // `replace_descendants` will not replace the parent node\n-        // but `SyntaxNode::descendants include itself\n-        if expanded == *child.syntax() {\n-            expanded = new_node;\n-        } else {\n-            replaces.insert(child.syntax().clone().into(), new_node.into());\n+        if let Some(new_node) = expand_macro_recur(db, source, node) {\n+            // Replace the whole node if it is root\n+            // `replace_descendants` will not replace the parent node\n+            // but `SyntaxNode::descendants include itself\n+            if expanded == *child.syntax() {\n+                expanded = new_node;\n+            } else {\n+                replaces.insert(child.syntax().clone().into(), new_node.into());\n+            }\n         }\n     }\n \n@@ -247,4 +247,26 @@ fn some_thing() -> u32 {\n         assert_eq!(res.name, \"match_ast\");\n         assert_snapshot!(res.expansion, @r###\"{}\"###);\n     }\n+\n+    #[test]\n+    fn macro_expand_inner_macro_fail_to_expand() {\n+        let res = check_expand_macro(\n+            r#\"\n+        //- /lib.rs\n+        macro_rules! bar {\n+            (BAD) => {};\n+        }\n+        macro_rules! foo {\n+            () => {bar!()};\n+        }        \n+\n+        fn main() {        \n+            let res = fo<|>o!();\n+        }\n+        \"#,\n+        );\n+\n+        assert_eq!(res.name, \"foo\");\n+        assert_snapshot!(res.expansion, @r###\"bar!()\"###);\n+    }\n }"}]}