{"sha": "934a30a8fd756d6b1b9f2453ca24097c3c8e2157", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNGEzMGE4ZmQ3NTZkNmIxYjlmMjQ1M2NhMjQwOTdjM2M4ZTIxNTc=", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-04-07T16:45:27Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2021-04-07T16:45:27Z"}, "message": "Fix outdated crate names in `rustc_interface::callbacks`", "tree": {"sha": "10091e9e1ba81c36e4ea0d2aeaa9c961cb23498d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10091e9e1ba81c36e4ea0d2aeaa9c961cb23498d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/934a30a8fd756d6b1b9f2453ca24097c3c8e2157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/934a30a8fd756d6b1b9f2453ca24097c3c8e2157", "html_url": "https://github.com/rust-lang/rust/commit/934a30a8fd756d6b1b9f2453ca24097c3c8e2157", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/934a30a8fd756d6b1b9f2453ca24097c3c8e2157/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b01026de465d5a5ef51e32c1012c43927d2a111c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b01026de465d5a5ef51e32c1012c43927d2a111c", "html_url": "https://github.com/rust-lang/rust/commit/b01026de465d5a5ef51e32c1012c43927d2a111c"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "3b852b8ccf9d0ffffb47e80769ac77abe64113da", "filename": "compiler/rustc_interface/src/callbacks.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/934a30a8fd756d6b1b9f2453ca24097c3c8e2157/compiler%2Frustc_interface%2Fsrc%2Fcallbacks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/934a30a8fd756d6b1b9f2453ca24097c3c8e2157/compiler%2Frustc_interface%2Fsrc%2Fcallbacks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fcallbacks.rs?ref=934a30a8fd756d6b1b9f2453ca24097c3c8e2157", "patch": "@@ -1,6 +1,6 @@\n //! Throughout the compiler tree, there are several places which want to have\n //! access to state or queries while being inside crates that are dependencies\n-//! of librustc_middle. To facilitate this, we have the\n+//! of `rustc_middle`. To facilitate this, we have the\n //! `rustc_data_structures::AtomicRef` type, which allows us to setup a global\n //! static which can then be set in this file at program startup.\n //!\n@@ -13,8 +13,8 @@ use rustc_errors::{Diagnostic, TRACK_DIAGNOSTICS};\n use rustc_middle::ty::tls;\n use std::fmt;\n \n-/// This is a callback from librustc_ast as it cannot access the implicit state\n-/// in librustc_middle otherwise.\n+/// This is a callback from `rustc_ast` as it cannot access the implicit state\n+/// in `rustc_middle` otherwise.\n fn span_debug(span: rustc_span::Span, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n     tls::with_opt(|tcx| {\n         if let Some(tcx) = tcx {\n@@ -25,8 +25,8 @@ fn span_debug(span: rustc_span::Span, f: &mut fmt::Formatter<'_>) -> fmt::Result\n     })\n }\n \n-/// This is a callback from librustc_ast as it cannot access the implicit state\n-/// in librustc_middle otherwise. It is used to when diagnostic messages are\n+/// This is a callback from `rustc_ast` as it cannot access the implicit state\n+/// in `rustc_middle` otherwise. It is used to when diagnostic messages are\n /// emitted and stores them in the current query, if there is one.\n fn track_diagnostic(diagnostic: &Diagnostic) {\n     tls::with_context_opt(|icx| {\n@@ -39,8 +39,8 @@ fn track_diagnostic(diagnostic: &Diagnostic) {\n     })\n }\n \n-/// This is a callback from librustc_hir as it cannot access the implicit state\n-/// in librustc_middle otherwise.\n+/// This is a callback from `rustc_hir` as it cannot access the implicit state\n+/// in `rustc_middle` otherwise.\n fn def_id_debug(def_id: rustc_hir::def_id::DefId, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n     write!(f, \"DefId({}:{}\", def_id.krate, def_id.index.index())?;\n     tls::with_opt(|opt_tcx| {"}]}