{"sha": "76371d1ff1b6fc7c84e12513816a4586e14aa24b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MzcxZDFmZjFiNmZjN2M4NGUxMjUxMzgxNmE0NTg2ZTE0YWEyNGI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-06-12T03:35:57Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-06-21T21:42:22Z"}, "message": "serialize: Simplify the json docs", "tree": {"sha": "9811379328253d4ca40bcb5e0d95ab8e95e903ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9811379328253d4ca40bcb5e0d95ab8e95e903ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76371d1ff1b6fc7c84e12513816a4586e14aa24b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76371d1ff1b6fc7c84e12513816a4586e14aa24b", "html_url": "https://github.com/rust-lang/rust/commit/76371d1ff1b6fc7c84e12513816a4586e14aa24b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76371d1ff1b6fc7c84e12513816a4586e14aa24b/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0fb520f7260d345d6060322ca74b94b00e283d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0fb520f7260d345d6060322ca74b94b00e283d8", "html_url": "https://github.com/rust-lang/rust/commit/b0fb520f7260d345d6060322ca74b94b00e283d8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0439306ffdeac10750a3c1c570667f86a9c28fab", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76371d1ff1b6fc7c84e12513816a4586e14aa24b/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76371d1ff1b6fc7c84e12513816a4586e14aa24b/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=76371d1ff1b6fc7c84e12513816a4586e14aa24b", "patch": "@@ -71,7 +71,7 @@ fn main() {\n     let to_encode_object = TestStruct{data_str:\"example of string to encode\".to_string()};\n     let mut m = io::MemWriter::new();\n     {\n-        let mut encoder = json::Encoder::new(&mut m as &mut std::io::Writer);\n+        let mut encoder = json::Encoder::new(&mut m as &mut Writer);\n         match to_encode_object.encode(&mut encoder) {\n             Ok(()) => (),\n             Err(e) => fail!(\"json encoding error: {}\", e)"}]}