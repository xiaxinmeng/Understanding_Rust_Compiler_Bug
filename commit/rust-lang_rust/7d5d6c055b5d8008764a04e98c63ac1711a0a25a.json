{"sha": "7d5d6c055b5d8008764a04e98c63ac1711a0a25a", "node_id": "C_kwDOAAsO6NoAKDdkNWQ2YzA1NWI1ZDgwMDg3NjRhMDRlOThjNjNhYzE3MTFhMGEyNWE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-07T15:07:12Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-21T06:09:11Z"}, "message": "update rustdoc", "tree": {"sha": "ad75f2fa51ac032de9276cf29af785231150be84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad75f2fa51ac032de9276cf29af785231150be84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d5d6c055b5d8008764a04e98c63ac1711a0a25a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d5d6c055b5d8008764a04e98c63ac1711a0a25a", "html_url": "https://github.com/rust-lang/rust/commit/7d5d6c055b5d8008764a04e98c63ac1711a0a25a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d5d6c055b5d8008764a04e98c63ac1711a0a25a/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "880343c61feb5e7c09c27e9851413d71b0f6a3dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/880343c61feb5e7c09c27e9851413d71b0f6a3dd", "html_url": "https://github.com/rust-lang/rust/commit/880343c61feb5e7c09c27e9851413d71b0f6a3dd"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "76994f2ee17127d3ba75ab94a30071389694d657", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d5d6c055b5d8008764a04e98c63ac1711a0a25a/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5d6c055b5d8008764a04e98c63ac1711a0a25a/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7d5d6c055b5d8008764a04e98c63ac1711a0a25a", "patch": "@@ -1543,7 +1543,7 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n \n                 DynTrait(bounds, lifetime)\n             }\n-            ty::Tuple(t) => Tuple(t.iter().map(|t| t.expect_ty().clean(cx)).collect()),\n+            ty::Tuple(t) => Tuple(t.iter().map(|t| t.clean(cx)).collect()),\n \n             ty::Projection(ref data) => data.clean(cx),\n "}, {"sha": "c2d1d4756fd8172d86cf8562e4544ca849d90f86", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d5d6c055b5d8008764a04e98c63ac1711a0a25a/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d5d6c055b5d8008764a04e98c63ac1711a0a25a/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=7d5d6c055b5d8008764a04e98c63ac1711a0a25a", "patch": "@@ -109,7 +109,7 @@ fn external_generic_args(\n \n     if cx.tcx.fn_trait_kind_from_lang_item(did).is_some() {\n         let inputs = match ty_kind.unwrap() {\n-            ty::Tuple(tys) => tys.iter().map(|t| t.expect_ty().clean(cx)).collect(),\n+            ty::Tuple(tys) => tys.iter().map(|t| t.clean(cx)).collect(),\n             _ => return GenericArgs::AngleBracketed { args, bindings: bindings.into() },\n         };\n         let output = None;"}]}