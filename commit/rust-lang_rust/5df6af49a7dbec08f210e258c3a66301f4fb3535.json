{"sha": "5df6af49a7dbec08f210e258c3a66301f4fb3535", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZjZhZjQ5YTdkYmVjMDhmMjEwZTI1OGMzYTY2MzAxZjRmYjM1MzU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-13T11:54:49Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-13T11:54:49Z"}, "message": "Update tests to show diagnostics", "tree": {"sha": "029ac1142a3eda386d8f27f193e1d8e7cfc92b7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/029ac1142a3eda386d8f27f193e1d8e7cfc92b7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5df6af49a7dbec08f210e258c3a66301f4fb3535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5df6af49a7dbec08f210e258c3a66301f4fb3535", "html_url": "https://github.com/rust-lang/rust/commit/5df6af49a7dbec08f210e258c3a66301f4fb3535", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5df6af49a7dbec08f210e258c3a66301f4fb3535/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25a4f76d63e64784cc35396f2295197130ad1a85", "url": "https://api.github.com/repos/rust-lang/rust/commits/25a4f76d63e64784cc35396f2295197130ad1a85", "html_url": "https://github.com/rust-lang/rust/commit/25a4f76d63e64784cc35396f2295197130ad1a85"}], "stats": {"total": 149, "additions": 129, "deletions": 20}, "files": [{"sha": "421f35438302b6d1d927405a9fd1c1242b14d8ae", "filename": "src/test/run-pass/ctfe/references.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Frun-pass%2Fctfe%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Frun-pass%2Fctfe%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fctfe%2Freferences.rs?ref=5df6af49a7dbec08f210e258c3a66301f4fb3535", "patch": "@@ -31,7 +31,7 @@ fn main() {\n     #[allow(unreachable_patterns)]\n     match &43 {\n         &42 => panic!(),\n-        BOO => panic!(), // pattern is unreachable\n+        BOO => panic!(),\n         _ => println!(\"d\"),\n     }\n }"}, {"sha": "6496a2ab69f5c1dafea68750e0fd5731e61bc8dc", "filename": "src/test/ui/pattern/const-pat-ice.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fconst-pat-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fconst-pat-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fconst-pat-ice.rs?ref=5df6af49a7dbec08f210e258c3a66301f4fb3535", "patch": "@@ -0,0 +1,13 @@\n+// failure-status: 101\n+\n+// This is a repro test for an ICE in our pattern handling of constants.\n+\n+const FOO: &&&u32 = &&&42;\n+\n+fn main() {\n+    match unimplemented!() {\n+        &&&42 => {},\n+        FOO => {},\n+        _ => {},\n+    }\n+}"}, {"sha": "6cfef115d08dc0fc0697211e4d56d45e3b92c253", "filename": "src/test/ui/pattern/slice-pattern-const-2.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-2.rs?ref=5df6af49a7dbec08f210e258c3a66301f4fb3535", "patch": "@@ -1,31 +1,31 @@\n-// compile-pass\n+#![deny(unreachable_patterns)]\n \n fn main() {\n     let s = &[0x00; 4][..]; //Slice of any value\n     const MAGIC_TEST: &[u32] = &[4, 5, 6, 7]; //Const slice to pattern match with\n     match s {\n         MAGIC_TEST => (),\n         [0x00, 0x00, 0x00, 0x00] => (),\n-        [4, 5, 6, 7] => (), // this should warn\n+        [4, 5, 6, 7] => (), //~ ERROR unreachable pattern\n         _ => (),\n     }\n     match s {\n         [0x00, 0x00, 0x00, 0x00] => (),\n         MAGIC_TEST => (),\n-        [4, 5, 6, 7] => (), // this should warn\n+        [4, 5, 6, 7] => (), //~ ERROR unreachable pattern\n         _ => (),\n     }\n     match s {\n         [0x00, 0x00, 0x00, 0x00] => (),\n         [4, 5, 6, 7] => (),\n-        MAGIC_TEST => (), // this should warn\n+        MAGIC_TEST => (), // FIXME(oli-obk): this should warn, but currently does not\n         _ => (),\n     }\n     const FOO: [u32; 1] = [4];\n     match [99] {\n         [0x00] => (),\n         [4] => (),\n-        FOO => (), // this should warn\n+        FOO => (), //~ ERROR unreachable pattern\n         _ => (),\n     }\n }"}, {"sha": "95651ccc401e04579fe87bdf1bf95c6fc255ca97", "filename": "src/test/ui/pattern/slice-pattern-const-2.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-2.stderr?ref=5df6af49a7dbec08f210e258c3a66301f4fb3535", "patch": "@@ -0,0 +1,26 @@\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const-2.rs:9:9\n+   |\n+LL |         [4, 5, 6, 7] => (), //~ ERROR unreachable pattern\n+   |         ^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/slice-pattern-const-2.rs:1:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const-2.rs:15:9\n+   |\n+LL |         [4, 5, 6, 7] => (), //~ ERROR unreachable pattern\n+   |         ^^^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const-2.rs:28:9\n+   |\n+LL |         FOO => (), //~ ERROR unreachable pattern\n+   |         ^^^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "8805c43ba0283bdabe7f46093ee46b6be341470b", "filename": "src/test/ui/pattern/slice-pattern-const-3.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-3.rs?ref=5df6af49a7dbec08f210e258c3a66301f4fb3535", "patch": "@@ -1,31 +1,31 @@\n-// compile-pass\n+#![deny(unreachable_patterns)]\n \n fn main() {\n     let s = &[\"0x00\"; 4][..]; //Slice of any value\n     const MAGIC_TEST: &[&str] = &[\"4\", \"5\", \"6\", \"7\"]; //Const slice to pattern match with\n     match s {\n         MAGIC_TEST => (),\n         [\"0x00\", \"0x00\", \"0x00\", \"0x00\"] => (),\n-        [\"4\", \"5\", \"6\", \"7\"] => (), // this should warn\n+        [\"4\", \"5\", \"6\", \"7\"] => (), // FIXME(oli-obk): this should warn, but currently does not\n         _ => (),\n     }\n     match s {\n         [\"0x00\", \"0x00\", \"0x00\", \"0x00\"] => (),\n         MAGIC_TEST => (),\n-        [\"4\", \"5\", \"6\", \"7\"] => (), // this should warn\n+        [\"4\", \"5\", \"6\", \"7\"] => (), // FIXME(oli-obk): this should warn, but currently does not\n         _ => (),\n     }\n     match s {\n         [\"0x00\", \"0x00\", \"0x00\", \"0x00\"] => (),\n         [\"4\", \"5\", \"6\", \"7\"] => (),\n-        MAGIC_TEST => (), // this should warn\n+        MAGIC_TEST => (), // FIXME(oli-obk): this should warn, but currently does not\n         _ => (),\n     }\n     const FOO: [&str; 1] = [\"boo\"];\n     match [\"baa\"] {\n         [\"0x00\"] => (),\n         [\"boo\"] => (),\n-        FOO => (), // this should warn\n+        FOO => (), //~ ERROR unreachable pattern\n         _ => (),\n     }\n }"}, {"sha": "531bbbc84d038fb28ba941800749352866654188", "filename": "src/test/ui/pattern/slice-pattern-const-3.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const-3.stderr?ref=5df6af49a7dbec08f210e258c3a66301f4fb3535", "patch": "@@ -0,0 +1,14 @@\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const-3.rs:28:9\n+   |\n+LL |         FOO => (), //~ ERROR unreachable pattern\n+   |         ^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/slice-pattern-const-3.rs:1:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "f0a04513f91fb71d11cc68154225df0c0ed10176", "filename": "src/test/ui/pattern/slice-pattern-const.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const.rs?ref=5df6af49a7dbec08f210e258c3a66301f4fb3535", "patch": "@@ -1,47 +1,47 @@\n-//compile-pass\n+#![deny(unreachable_patterns)]\n \n fn main() {\n     let s = &[0x00; 4][..]; //Slice of any value\n     const MAGIC_TEST: &[u8] = b\"TEST\"; //Const slice to pattern match with\n     match s {\n         MAGIC_TEST => (),\n         [0x00, 0x00, 0x00, 0x00] => (),\n-        [84, 69, 83, 84] => (), // this should warn\n+        [84, 69, 83, 84] => (), //~ ERROR unreachable pattern\n         _ => (),\n     }\n     match s {\n         [0x00, 0x00, 0x00, 0x00] => (),\n         MAGIC_TEST => (),\n-        [84, 69, 83, 84] => (), // this should warn\n+        [84, 69, 83, 84] => (), //~ ERROR unreachable pattern\n         _ => (),\n     }\n     match s {\n         [0x00, 0x00, 0x00, 0x00] => (),\n         [84, 69, 83, 84] => (),\n-        MAGIC_TEST => (), // this should warn\n+        MAGIC_TEST => (), //~ ERROR unreachable pattern\n         _ => (),\n     }\n     const FOO: [u8; 1] = [4];\n     match [99] {\n         [0x00] => (),\n         [4] => (),\n-        FOO => (), // this should warn\n+        FOO => (), //~ ERROR unreachable pattern\n         _ => (),\n     }\n     const BAR: &[u8; 1] = &[4];\n     match &[99] {\n         [0x00] => (),\n         [4] => (),\n-        BAR => (), // this should warn\n+        BAR => (), //~ ERROR unreachable pattern\n         b\"a\" => (),\n         _ => (),\n     }\n \n     const BOO: &[u8; 0] = &[];\n     match &[] {\n         [] => (),\n-        BOO => (), // this should warn\n-        b\"\" => (),\n-        _ => (),\n+        BOO => (), //~ ERROR unreachable pattern\n+        b\"\" => (), //~ ERROR unreachable pattern\n+        _ => (), //~ ERROR unreachable pattern\n     }\n }"}, {"sha": "412e0158c01c7462415034a0c1a547c9849b86f0", "filename": "src/test/ui/pattern/slice-pattern-const.stderr", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5df6af49a7dbec08f210e258c3a66301f4fb3535/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fslice-pattern-const.stderr?ref=5df6af49a7dbec08f210e258c3a66301f4fb3535", "patch": "@@ -0,0 +1,56 @@\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const.rs:9:9\n+   |\n+LL |         [84, 69, 83, 84] => (), //~ ERROR unreachable pattern\n+   |         ^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/slice-pattern-const.rs:1:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const.rs:15:9\n+   |\n+LL |         [84, 69, 83, 84] => (), //~ ERROR unreachable pattern\n+   |         ^^^^^^^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const.rs:21:9\n+   |\n+LL |         MAGIC_TEST => (), //~ ERROR unreachable pattern\n+   |         ^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const.rs:28:9\n+   |\n+LL |         FOO => (), //~ ERROR unreachable pattern\n+   |         ^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const.rs:35:9\n+   |\n+LL |         BAR => (), //~ ERROR unreachable pattern\n+   |         ^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const.rs:43:9\n+   |\n+LL |         BOO => (), //~ ERROR unreachable pattern\n+   |         ^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const.rs:44:9\n+   |\n+LL |         b\"\" => (), //~ ERROR unreachable pattern\n+   |         ^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-pattern-const.rs:45:9\n+   |\n+LL |         _ => (), //~ ERROR unreachable pattern\n+   |         ^\n+\n+error: aborting due to 8 previous errors\n+"}]}