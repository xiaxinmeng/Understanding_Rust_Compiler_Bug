{"sha": "8309d50ff4ead4dd58b8f3c8388d5668e2e0d152", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMDlkNTBmZjRlYWQ0ZGQ1OGI4ZjNjODM4OGQ1NjY4ZTJlMGQxNTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-13T06:30:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-13T06:30:58Z"}, "message": "core: Add iter::filter_map", "tree": {"sha": "59542dccabc38031c794e2a178c7bc9a38a41db4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59542dccabc38031c794e2a178c7bc9a38a41db4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8309d50ff4ead4dd58b8f3c8388d5668e2e0d152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8309d50ff4ead4dd58b8f3c8388d5668e2e0d152", "html_url": "https://github.com/rust-lang/rust/commit/8309d50ff4ead4dd58b8f3c8388d5668e2e0d152", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8309d50ff4ead4dd58b8f3c8388d5668e2e0d152/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e360ddbd65e2501028f80e17a1ec7ad92904f39c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e360ddbd65e2501028f80e17a1ec7ad92904f39c", "html_url": "https://github.com/rust-lang/rust/commit/e360ddbd65e2501028f80e17a1ec7ad92904f39c"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "e9327a26017eb2d228f92450a5f6ba91c5a11098", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8309d50ff4ead4dd58b8f3c8388d5668e2e0d152/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8309d50ff4ead4dd58b8f3c8388d5668e2e0d152/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=8309d50ff4ead4dd58b8f3c8388d5668e2e0d152", "patch": "@@ -57,6 +57,16 @@ fn filter<A,IA:iterable<A>>(self: IA, prd: fn@(A) -> bool, blk: fn(A)) {\n     }\n }\n \n+fn filter_map<A,B,IA:iterable<A>>(self: IA, cnv: fn@(A) -> option<B>,\n+                                  blk: fn(B)) {\n+    self.iter {|a|\n+        alt cnv(a) {\n+          some(b) { blk(b) }\n+          none { }\n+        }\n+    }\n+}\n+\n fn map<A,B,IA:iterable<A>>(self: IA, cnv: fn@(A) -> B, blk: fn(B)) {\n     self.iter {|a|\n         let b = cnv(a);\n@@ -188,6 +198,21 @@ fn test_filter_on_uint_range() {\n     assert l == [0u, 2u, 4u, 6u, 8u];\n }\n \n+#[test]\n+fn test_filter_map() {\n+    fn negativate_the_evens(&&i: int) -> option<int> {\n+        if i % 2 == 0 {\n+            some(-i)\n+        } else {\n+            none\n+        }\n+    }\n+\n+    let l = to_list(bind filter_map(\n+        bind int::range(0, 5, _), negativate_the_evens, _));\n+    assert l == [0, -2, -4];\n+}\n+\n #[test]\n fn test_flat_map_with_option() {\n     fn if_even(&&i: int) -> option<int> {"}]}