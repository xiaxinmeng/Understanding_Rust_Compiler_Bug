{"sha": "645f685e1b05f3f62de26ea1579861e83cbd0d74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NWY2ODVlMWIwNWYzZjYyZGUyNmVhMTU3OTg2MWU4M2NiZDBkNzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-27T20:40:13Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-27T20:40:28Z"}, "message": "Box::into_vec: use Box::into_raw instead of mem::forget", "tree": {"sha": "a1ac8315a89309c3ef7d75c95fe5fe337ecdfc63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1ac8315a89309c3ef7d75c95fe5fe337ecdfc63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/645f685e1b05f3f62de26ea1579861e83cbd0d74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/645f685e1b05f3f62de26ea1579861e83cbd0d74", "html_url": "https://github.com/rust-lang/rust/commit/645f685e1b05f3f62de26ea1579861e83cbd0d74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/645f685e1b05f3f62de26ea1579861e83cbd0d74/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a56ec4dae92538ab6e0ecf993c61f3b50ed77cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a56ec4dae92538ab6e0ecf993c61f3b50ed77cf", "html_url": "https://github.com/rust-lang/rust/commit/1a56ec4dae92538ab6e0ecf993c61f3b50ed77cf"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "aeb7f90d3e60e946d0d0e8efc19948bb8b2ef6a0", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/645f685e1b05f3f62de26ea1579861e83cbd0d74/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/645f685e1b05f3f62de26ea1579861e83cbd0d74/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=645f685e1b05f3f62de26ea1579861e83cbd0d74", "patch": "@@ -137,17 +137,16 @@ pub use hack::to_vec;\n // `core::slice::SliceExt` - we need to supply these functions for the\n // `test_permutations` test\n mod hack {\n-    use core::mem;\n-\n     use crate::boxed::Box;\n     use crate::vec::Vec;\n     #[cfg(test)]\n     use crate::string::ToString;\n \n-    pub fn into_vec<T>(mut b: Box<[T]>) -> Vec<T> {\n+    pub fn into_vec<T>(b: Box<[T]>) -> Vec<T> {\n         unsafe {\n-            let xs = Vec::from_raw_parts(b.as_mut_ptr(), b.len(), b.len());\n-            mem::forget(b);\n+            let len = b.len();\n+            let b = Box::into_raw(b);\n+            let xs = Vec::from_raw_parts(b as *mut T, len, len);\n             xs\n         }\n     }"}]}