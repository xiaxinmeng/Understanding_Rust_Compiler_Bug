{"sha": "b41fd6104591a99f61554ebd7ce0b6480830116c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MWZkNjEwNDU5MWE5OWY2MTU1NGViZDdjZTBiNjQ4MDgzMDExNmM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-08T09:20:02Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-08T09:55:15Z"}, "message": "Make for-each bodies close over their parent's iterbody\n\nCloses issue #639", "tree": {"sha": "dce094ed81f017666e8dc512b8b07a8ecf799672", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dce094ed81f017666e8dc512b8b07a8ecf799672"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b41fd6104591a99f61554ebd7ce0b6480830116c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b41fd6104591a99f61554ebd7ce0b6480830116c", "html_url": "https://github.com/rust-lang/rust/commit/b41fd6104591a99f61554ebd7ce0b6480830116c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b41fd6104591a99f61554ebd7ce0b6480830116c/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ed556cf8e3f6b7cb36e9e8cbb6be7e445b339c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ed556cf8e3f6b7cb36e9e8cbb6be7e445b339c9", "html_url": "https://github.com/rust-lang/rust/commit/7ed556cf8e3f6b7cb36e9e8cbb6be7e445b339c9"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "2a23d82c5bebb265efe99ea6127f12ac2e53f49c", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b41fd6104591a99f61554ebd7ce0b6480830116c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b41fd6104591a99f61554ebd7ce0b6480830116c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=b41fd6104591a99f61554ebd7ce0b6480830116c", "patch": "@@ -4488,15 +4488,20 @@ fn collect_upvars(&@block_ctxt cx, &ast::block bloc,\n // contains pointers to all of the upvars and all of the tydescs in\n // scope. Return the ValueRef and TypeRef corresponding to the closure. \n fn build_environment(&@block_ctxt cx, &ast::node_id[] upvars) ->\n-    tup(ValueRef, TypeRef)\n-{\n+    tup(ValueRef, TypeRef) {\n     auto upvar_count = std::ivec::len(upvars);\n+    auto has_iterbody = !option::is_none(cx.fcx.lliterbody);\n+    if (has_iterbody) { upvar_count += 1u; }\n     auto llbindingsptr;\n \n     if (upvar_count > 0u) {\n         // Gather up the upvars.\n         let ValueRef[] llbindings = ~[];\n         let TypeRef[] llbindingtys = ~[];\n+        if (has_iterbody) {\n+            llbindings += ~[option::get(cx.fcx.lliterbody)];\n+            llbindingtys += ~[val_ty(llbindings.(0))];\n+        }\n         for (ast::node_id nid in upvars) {\n             auto llbinding;\n             alt (cx.fcx.lllocals.find(nid)) {\n@@ -4566,9 +4571,7 @@ fn build_environment(&@block_ctxt cx, &ast::node_id[] upvars) ->\n // and a list of upvars, generate code to load and populate the environment\n // with the upvars and type descriptors.\n fn load_environment(&@block_ctxt cx, &@fn_ctxt fcx,\n-                    TypeRef llenvptrty, &ast::node_id[] upvars)\n-{\n-    auto upvar_count = std::ivec::len(upvars);\n+                    TypeRef llenvptrty, &ast::node_id[] upvars) {\n     auto copy_args_bcx = new_raw_block_ctxt(fcx, fcx.llcopyargs);\n \n     // Populate the upvars from the environment.\n@@ -4581,7 +4584,17 @@ fn load_environment(&@block_ctxt cx, &@fn_ctxt fcx,\n     auto llremotebindingsptr =\n         copy_args_bcx.build.Load(llremotebindingsptrptr);\n     auto i = 0u;\n-    while (i < upvar_count) {\n+    auto end = std::ivec::len(upvars);\n+    if (!option::is_none(cx.fcx.lliterbody)) {\n+        end += 1u;\n+        i += 1u;\n+        auto lliterbodyptr =\n+            copy_args_bcx.build.GEP(llremotebindingsptr,\n+                                    ~[C_int(0), C_int(0)]);\n+        auto lliterbody = copy_args_bcx.build.Load(lliterbodyptr);\n+        fcx.lliterbody = some(lliterbody);\n+    }\n+    while (i < end) {\n         auto upvar_id = upvars.(i);\n         auto llupvarptrptr =\n             copy_args_bcx.build.GEP(llremotebindingsptr,"}]}