{"sha": "d40be0fc6418affeeb765a9b6a99315e90aa57c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MGJlMGZjNjQxOGFmZmVlYjc2NWE5YjZhOTkzMTVlOTBhYTU3Yzg=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-14T16:48:07Z"}, "committer": {"name": "lrh2000", "email": "lrh2000@pku.edu.cn", "date": "2021-06-26T15:11:13Z"}, "message": "Check the span's edition for the reserved prefixes.", "tree": {"sha": "bb231629cba958563844965de1eda2cbd257c897", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb231629cba958563844965de1eda2cbd257c897"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d40be0fc6418affeeb765a9b6a99315e90aa57c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d40be0fc6418affeeb765a9b6a99315e90aa57c8", "html_url": "https://github.com/rust-lang/rust/commit/d40be0fc6418affeeb765a9b6a99315e90aa57c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d40be0fc6418affeeb765a9b6a99315e90aa57c8/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lrh2000", "id": 41988959, "node_id": "MDQ6VXNlcjQxOTg4OTU5", "avatar_url": "https://avatars.githubusercontent.com/u/41988959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrh2000", "html_url": "https://github.com/lrh2000", "followers_url": "https://api.github.com/users/lrh2000/followers", "following_url": "https://api.github.com/users/lrh2000/following{/other_user}", "gists_url": "https://api.github.com/users/lrh2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrh2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrh2000/subscriptions", "organizations_url": "https://api.github.com/users/lrh2000/orgs", "repos_url": "https://api.github.com/users/lrh2000/repos", "events_url": "https://api.github.com/users/lrh2000/events{/privacy}", "received_events_url": "https://api.github.com/users/lrh2000/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6adce70a58808426753fa8e74068dcb959c004a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6adce70a58808426753fa8e74068dcb959c004a6", "html_url": "https://github.com/rust-lang/rust/commit/6adce70a58808426753fa8e74068dcb959c004a6"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "21a6ace7cf48fdc920993baffafb988c6b94cc7c", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d40be0fc6418affeeb765a9b6a99315e90aa57c8/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d40be0fc6418affeeb765a9b6a99315e90aa57c8/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=d40be0fc6418affeeb765a9b6a99315e90aa57c8", "patch": "@@ -7,7 +7,6 @@ use rustc_lexer::{Base, DocStyle, RawStrError};\n use rustc_session::lint::builtin::RESERVED_PREFIX;\n use rustc_session::lint::BuiltinLintDiagnostics;\n use rustc_session::parse::ParseSess;\n-use rustc_span::edition::Edition;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{BytePos, Pos, Span};\n \n@@ -508,28 +507,30 @@ impl<'a> StringReader<'a> {\n         let prefix_span = self.mk_sp(start, self.pos);\n         let msg = format!(\"prefix `{}` is unknown\", self.str_from_to(start, self.pos));\n \n-        if self.sess.edition < Edition::Edition2021 {\n+        if prefix_span.rust_2021() {\n+            // In Rust 2021, this is a hard error.\n+            self.sess\n+                .span_diagnostic\n+                .struct_span_err(prefix_span, &msg)\n+                .span_label(prefix_span, \"unknown prefix\")\n+                .span_suggestion_verbose(\n+                    self.mk_sp(self.pos, self.pos),\n+                    \"consider inserting whitespace here\",\n+                    \" \".into(),\n+                    Applicability::MachineApplicable,\n+                )\n+                .note(\"prefixed identifiers and literals are reserved since Rust 2021\")\n+                .emit();\n+        } else {\n+            // Before Rust 2021, only emit a lint for migration.\n             self.sess.buffer_lint_with_diagnostic(\n                 &RESERVED_PREFIX,\n                 prefix_span,\n                 ast::CRATE_NODE_ID,\n                 &msg,\n                 BuiltinLintDiagnostics::ReservedPrefix(prefix_span),\n             );\n-            return;\n         }\n-\n-        let mut err = self.sess.span_diagnostic.struct_span_err(prefix_span, &msg);\n-        err.span_label(prefix_span, \"unknown prefix\");\n-        err.span_suggestion_verbose(\n-            self.mk_sp(self.pos, self.pos),\n-            \"consider inserting whitespace here\",\n-            \" \".into(),\n-            Applicability::MachineApplicable,\n-        );\n-        err.note(\"prefixed identifiers and literals are reserved since Rust 2021\");\n-\n-        err.emit();\n     }\n \n     /// Note: It was decided to not add a test case, because it would be too big."}]}