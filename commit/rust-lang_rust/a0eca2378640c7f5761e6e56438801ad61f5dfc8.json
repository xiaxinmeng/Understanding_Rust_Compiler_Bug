{"sha": "a0eca2378640c7f5761e6e56438801ad61f5dfc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZWNhMjM3ODY0MGM3ZjU3NjFlNmU1NjQzODgwMWFkNjFmNWRmYzg=", "commit": {"author": {"name": "Michael Reinhard", "email": "mcreinhard@users.noreply.github.com", "date": "2014-06-10T21:44:27Z"}, "committer": {"name": "Michael Reinhard", "email": "mcreinhard@users.noreply.github.com", "date": "2014-06-10T21:44:27Z"}, "message": "Fix deprecated use of ~", "tree": {"sha": "29cbccf23aaad9cb149f64c8f5f6e8edd2f0c01f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29cbccf23aaad9cb149f64c8f5f6e8edd2f0c01f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0eca2378640c7f5761e6e56438801ad61f5dfc8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0eca2378640c7f5761e6e56438801ad61f5dfc8", "html_url": "https://github.com/rust-lang/rust/commit/a0eca2378640c7f5761e6e56438801ad61f5dfc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0eca2378640c7f5761e6e56438801ad61f5dfc8/comments", "author": {"login": "mcreinhard", "id": 132609040, "node_id": "U_kgDOB-d0EA", "avatar_url": "https://avatars.githubusercontent.com/u/132609040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcreinhard", "html_url": "https://github.com/mcreinhard", "followers_url": "https://api.github.com/users/mcreinhard/followers", "following_url": "https://api.github.com/users/mcreinhard/following{/other_user}", "gists_url": "https://api.github.com/users/mcreinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcreinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcreinhard/subscriptions", "organizations_url": "https://api.github.com/users/mcreinhard/orgs", "repos_url": "https://api.github.com/users/mcreinhard/repos", "events_url": "https://api.github.com/users/mcreinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/mcreinhard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcreinhard", "id": 132609040, "node_id": "U_kgDOB-d0EA", "avatar_url": "https://avatars.githubusercontent.com/u/132609040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcreinhard", "html_url": "https://github.com/mcreinhard", "followers_url": "https://api.github.com/users/mcreinhard/followers", "following_url": "https://api.github.com/users/mcreinhard/following{/other_user}", "gists_url": "https://api.github.com/users/mcreinhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcreinhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcreinhard/subscriptions", "organizations_url": "https://api.github.com/users/mcreinhard/orgs", "repos_url": "https://api.github.com/users/mcreinhard/repos", "events_url": "https://api.github.com/users/mcreinhard/events{/privacy}", "received_events_url": "https://api.github.com/users/mcreinhard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bb8f88d3a79d3f8f10dca8cedf00cf57f6a94f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb8f88d3a79d3f8f10dca8cedf00cf57f6a94f6", "html_url": "https://github.com/rust-lang/rust/commit/9bb8f88d3a79d3f8f10dca8cedf00cf57f6a94f6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9e53746743e0889890b0f9b234a35fa764e8837f", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0eca2378640c7f5761e6e56438801ad61f5dfc8/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/a0eca2378640c7f5761e6e56438801ad61f5dfc8/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=a0eca2378640c7f5761e6e56438801ad61f5dfc8", "patch": "@@ -2459,7 +2459,7 @@ fn draw_all(shapes: &[Box<Drawable>]) {\n }\n ~~~~\n \n-In this example, there is no type parameter. Instead, the `~Drawable`\n+In this example, there is no type parameter. Instead, the `Box<Drawable>`\n type denotes any owned box value that implements the `Drawable` trait.\n To construct such a value, you use the `as` operator to cast a value\n to an object:"}]}