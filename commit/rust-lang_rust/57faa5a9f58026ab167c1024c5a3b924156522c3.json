{"sha": "57faa5a9f58026ab167c1024c5a3b924156522c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZmFhNWE5ZjU4MDI2YWIxNjdjMTAyNGM1YTNiOTI0MTU2NTIyYzM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-23T11:49:16Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-29T08:45:18Z"}, "message": "improve bracket display", "tree": {"sha": "316894a992553c5c0da0d4fee700a876ca6274d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/316894a992553c5c0da0d4fee700a876ca6274d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57faa5a9f58026ab167c1024c5a3b924156522c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57faa5a9f58026ab167c1024c5a3b924156522c3", "html_url": "https://github.com/rust-lang/rust/commit/57faa5a9f58026ab167c1024c5a3b924156522c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57faa5a9f58026ab167c1024c5a3b924156522c3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93d097eb12fc0b7e34187d2cac19b0059fa18ed4", "url": "https://api.github.com/repos/rust-lang/rust/commits/93d097eb12fc0b7e34187d2cac19b0059fa18ed4", "html_url": "https://github.com/rust-lang/rust/commit/93d097eb12fc0b7e34187d2cac19b0059fa18ed4"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "5b29d33e89105bb6f40e339a39b644a7c563d3af", "filename": "src/booleans.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/57faa5a9f58026ab167c1024c5a3b924156522c3/src%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57faa5a9f58026ab167c1024c5a3b924156522c3/src%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbooleans.rs?ref=57faa5a9f58026ab167c1024c5a3b924156522c3", "patch": "@@ -81,7 +81,7 @@ impl<'tcx> Hir2Qmm<'tcx> {\n }\n \n fn suggest(cx: &LateContext, suggestion: &Bool, terminals: &[&Expr]) -> String {\n-    fn recurse(cx: &LateContext, suggestion: &Bool, terminals: &[&Expr], mut s: String) -> String {\n+    fn recurse(brackets: bool, cx: &LateContext, suggestion: &Bool, terminals: &[&Expr], mut s: String) -> String {\n         use quine_mc_cluskey::Bool::*;\n         match *suggestion {\n             True => {\n@@ -94,21 +94,33 @@ fn suggest(cx: &LateContext, suggestion: &Bool, terminals: &[&Expr]) -> String {\n             },\n             Not(ref inner) => {\n                 s.push('!');\n-                recurse(cx, inner, terminals, s)\n+                recurse(true, cx, inner, terminals, s)\n             },\n             And(ref v) => {\n-                s = recurse(cx, &v[0], terminals, s);\n+                if brackets {\n+                    s.push('(');\n+                }\n+                s = recurse(true, cx, &v[0], terminals, s);\n                 for inner in &v[1..] {\n                     s.extend(\" && \".chars());\n-                    s = recurse(cx, inner, terminals, s);\n+                    s = recurse(true, cx, inner, terminals, s);\n+                }\n+                if brackets {\n+                    s.push(')');\n                 }\n                 s\n             },\n             Or(ref v) => {\n-                s = recurse(cx, &v[0], terminals, s);\n+                if brackets {\n+                    s.push('(');\n+                }\n+                s = recurse(true, cx, &v[0], terminals, s);\n                 for inner in &v[1..] {\n                     s.extend(\" || \".chars());\n-                    s = recurse(cx, inner, terminals, s);\n+                    s = recurse(true, cx, inner, terminals, s);\n+                }\n+                if brackets {\n+                    s.push(')');\n                 }\n                 s\n             },\n@@ -118,7 +130,7 @@ fn suggest(cx: &LateContext, suggestion: &Bool, terminals: &[&Expr]) -> String {\n             }\n         }\n     }\n-    recurse(cx, suggestion, terminals, String::new())\n+    recurse(false, cx, suggestion, terminals, String::new())\n }\n \n impl<'a, 'tcx> NonminimalBoolVisitor<'a, 'tcx> {"}]}