{"sha": "80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYmI3ZDg2ZWM2ZTc1NjBlYzY4ODBhMjBlYjhjNWI5ODRiMmFmNTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-02T13:49:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-02T13:49:06Z"}, "message": "align lower module query names", "tree": {"sha": "167b77c45661a107df1bdcf3af74c03df46fe232", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/167b77c45661a107df1bdcf3af74c03df46fe232"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "html_url": "https://github.com/rust-lang/rust/commit/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe5574b05a006671fb7dec44d8d6edc92c90b002", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe5574b05a006671fb7dec44d8d6edc92c90b002", "html_url": "https://github.com/rust-lang/rust/commit/fe5574b05a006671fb7dec44d8d6edc92c90b002"}], "stats": {"total": 38, "additions": 15, "deletions": 23}, "files": [{"sha": "3ac14695095705b77505e7ec82fa19025faf7a78", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "patch": "@@ -191,7 +191,7 @@ impl Module {\n     }\n \n     pub fn declarations(self, db: &impl HirDatabase) -> Vec<ModuleDef> {\n-        let (lowered_module, _) = db.lower_module(self);\n+        let lowered_module = db.lower_module(self);\n         lowered_module\n             .declarations\n             .values()"}, {"sha": "437f96942d8a703b9f1d4ffac2a25990c22d064c", "filename": "crates/ra_hir/src/code_model_impl/module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Fmodule.rs?ref=80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "patch": "@@ -47,7 +47,7 @@ impl Module {\n         db: &impl HirDatabase,\n         import: ImportId,\n     ) -> TreeArc<ast::PathSegment> {\n-        let source_map = db.lower_module_source_map(*self);\n+        let (_, source_map) = db.lower_module_with_source_map(*self);\n         let (_, source) = self.definition_source(db);\n         source_map.get(&source, import)\n     }"}, {"sha": "21d22aa7fb8001b8d5d684029e49e881b4bd9bd3", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "patch": "@@ -48,14 +48,14 @@ pub trait PersistentHirDatabase: SourceDatabase + AsRef<HirInterner> {\n         delc_id: Option<SourceFileItemId>,\n     ) -> Arc<Vec<crate::module_tree::Submodule>>;\n \n-    #[salsa::invoke(crate::nameres::lower::LoweredModule::lower_module_query)]\n-    fn lower_module(&self, module: Module) -> (Arc<LoweredModule>, Arc<ImportSourceMap>);\n-\n-    #[salsa::invoke(crate::nameres::lower::LoweredModule::lower_module_module_query)]\n-    fn lower_module_module(&self, module: Module) -> Arc<LoweredModule>;\n+    #[salsa::invoke(crate::nameres::lower::LoweredModule::lower_module_with_source_map_query)]\n+    fn lower_module_with_source_map(\n+        &self,\n+        module: Module,\n+    ) -> (Arc<LoweredModule>, Arc<ImportSourceMap>);\n \n-    #[salsa::invoke(crate::nameres::lower::LoweredModule::lower_module_source_map_query)]\n-    fn lower_module_source_map(&self, module: Module) -> Arc<ImportSourceMap>;\n+    #[salsa::invoke(crate::nameres::lower::LoweredModule::lower_module_query)]\n+    fn lower_module(&self, module: Module) -> Arc<LoweredModule>;\n \n     #[salsa::invoke(crate::nameres::ItemMap::item_map_query)]\n     fn item_map(&self, krate: Crate) -> Arc<ItemMap>;"}, {"sha": "73919ee37a62d2f7521a4a7c5a2d520858d00c45", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "patch": "@@ -481,7 +481,7 @@ impl ItemMap {\n         let module_tree = db.module_tree(krate);\n         let input = module_tree\n             .modules()\n-            .map(|module_id| (module_id, db.lower_module_module(Module { krate, module_id })))\n+            .map(|module_id| (module_id, db.lower_module(Module { krate, module_id })))\n             .collect::<FxHashMap<_, _>>();\n \n         let resolver = Resolver::new(db, &input, krate);"}, {"sha": "56262ad6d70f041a4bdad4250ee5312462c4c18c", "filename": "crates/ra_hir/src/nameres/lower.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fnameres%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fnameres%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Flower.rs?ref=80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "patch": "@@ -60,21 +60,14 @@ impl ImportSourceMap {\n }\n \n impl LoweredModule {\n-    pub(crate) fn lower_module_module_query(\n+    pub(crate) fn lower_module_query(\n         db: &impl PersistentHirDatabase,\n         module: Module,\n     ) -> Arc<LoweredModule> {\n-        db.lower_module(module).0\n-    }\n-\n-    pub(crate) fn lower_module_source_map_query(\n-        db: &impl PersistentHirDatabase,\n-        module: Module,\n-    ) -> Arc<ImportSourceMap> {\n-        db.lower_module(module).1\n+        db.lower_module_with_source_map(module).0\n     }\n \n-    pub(crate) fn lower_module_query(\n+    pub(crate) fn lower_module_with_source_map_query(\n         db: &impl PersistentHirDatabase,\n         module: Module,\n     ) -> (Arc<LoweredModule>, Arc<ImportSourceMap>) {"}, {"sha": "ea20cd15a24c50ddfe3102764905c4490c417b1a", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "patch": "@@ -157,7 +157,7 @@ pub fn macro_symbols(db: &impl HirDatabase, file_id: FileId) -> Vec<(SmolStr, Te\n         Some(it) => it,\n         None => return Vec::new(),\n     };\n-    let items = db.lower_module_module(module);\n+    let items = db.lower_module(module);\n     let mut res = Vec::new();\n \n     for macro_call_id in items"}, {"sha": "0c90ed5b571d15ccff06c627c2904e47ee84a81d", "filename": "crates/ra_ide_api/src/change.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_ide_api%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80bb7d86ec6e7560ec6880a20eb8c5b984b2af52/crates%2Fra_ide_api%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fchange.rs?ref=80bb7d86ec6e7560ec6880a20eb8c5b984b2af52", "patch": "@@ -223,8 +223,7 @@ impl RootDatabase {\n         self.query(hir::db::FileItemsQuery).sweep(sweep);\n         self.query(hir::db::FileItemQuery).sweep(sweep);\n \n-        self.query(hir::db::LowerModuleQuery).sweep(sweep);\n-        self.query(hir::db::LowerModuleSourceMapQuery).sweep(sweep);\n+        self.query(hir::db::LowerModuleWithSourceMapQuery).sweep(sweep);\n         self.query(hir::db::BodyWithSourceMapQuery).sweep(sweep);\n     }\n }"}]}