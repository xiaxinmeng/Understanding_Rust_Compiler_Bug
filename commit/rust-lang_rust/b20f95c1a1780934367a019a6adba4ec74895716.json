{"sha": "b20f95c1a1780934367a019a6adba4ec74895716", "node_id": "C_kwDOAAsO6NoAKGIyMGY5NWMxYTE3ODA5MzQzNjdhMDE5YTZhZGJhNGVjNzQ4OTU3MTY", "commit": {"author": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-06-01T22:36:02Z"}, "committer": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-06-01T22:53:15Z"}, "message": "Combine doc examples", "tree": {"sha": "e96110559a6122326b5c1f01373f39f3fefcb3e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e96110559a6122326b5c1f01373f39f3fefcb3e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b20f95c1a1780934367a019a6adba4ec74895716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b20f95c1a1780934367a019a6adba4ec74895716", "html_url": "https://github.com/rust-lang/rust/commit/b20f95c1a1780934367a019a6adba4ec74895716", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b20f95c1a1780934367a019a6adba4ec74895716/comments", "author": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adafb6c41620b91ebd131c2c893f7f13caf9b60c", "url": "https://api.github.com/repos/rust-lang/rust/commits/adafb6c41620b91ebd131c2c893f7f13caf9b60c", "html_url": "https://github.com/rust-lang/rust/commit/adafb6c41620b91ebd131c2c893f7f13caf9b60c"}], "stats": {"total": 198, "additions": 88, "deletions": 110}, "files": [{"sha": "6e5c8f445818ebfb54bb5c45bbbe87b9a57b9cf9", "filename": "clippy_lints/src/as_conversions.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_conversions.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -32,12 +32,11 @@ declare_clippy_lint! {\n     /// Use instead:\n     /// ```rust,ignore\n     /// f(a.try_into()?);\n-    /// ```\n-    /// or\n-    /// ```rust,ignore\n+    ///\n+    /// // or\n+    ///\n     /// f(a.try_into().expect(\"Unexpected u16 overflow in f\"));\n     /// ```\n-    ///\n     #[clippy::version = \"1.41.0\"]\n     pub AS_CONVERSIONS,\n     restriction,"}, {"sha": "770cb6a3d7b8baf0dab02cd28b97115387a314d7", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -241,13 +241,13 @@ declare_clippy_lint! {\n     ///\n     /// Use instead:\n     /// ```rust\n+    /// # mod hidden {\n     /// #[cfg(target_os = \"linux\")]\n     /// fn conditional() { }\n-    /// ```\n+    /// # }\n     ///\n-    /// or\n+    /// // or\n     ///\n-    /// ```rust\n     /// #[cfg(unix)]\n     /// fn conditional() { }\n     /// ```"}, {"sha": "5bd7a342389fe50216553f483b4e3c236b35e969", "filename": "clippy_lints/src/blocks_in_if_conditions.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -22,21 +22,17 @@ declare_clippy_lint! {\n     ///\n     /// ### Examples\n     /// ```rust\n-    /// // Bad\n+    /// # fn somefunc() -> bool { true };\n     /// if { true } { /* ... */ }\n     ///\n-    /// // Good\n-    /// if true { /* ... */ }\n+    /// if { let x = somefunc(); x } { /* ... */ }\n     /// ```\n     ///\n-    /// or\n-    ///\n+    /// Use instead:\n     /// ```rust\n     /// # fn somefunc() -> bool { true };\n-    /// // Bad\n-    /// if { let x = somefunc(); x } { /* ... */ }\n+    /// if true { /* ... */ }\n     ///\n-    /// // Good\n     /// let res = { let x = somefunc(); x };\n     /// if res { /* ... */ }\n     /// ```"}, {"sha": "a33ef5ce6e37c5a30b4c9586ffe5590bfba66235", "filename": "clippy_lints/src/double_parens.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -13,23 +13,21 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```rust\n-    /// // Bad\n     /// fn simple_double_parens() -> i32 {\n     ///     ((0))\n     /// }\n     ///\n-    /// // Good\n+    /// # fn foo(bar: usize) {}\n+    /// foo((0));\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```rust\n     /// fn simple_no_parens() -> i32 {\n     ///     0\n     /// }\n     ///\n-    /// // or\n-    ///\n     /// # fn foo(bar: usize) {}\n-    /// // Bad\n-    /// foo((0));\n-    ///\n-    /// // Good\n     /// foo(0);\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]"}, {"sha": "c3176d987c6371ef7f631dc4f2b409bcc68099ca", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -30,9 +30,9 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # let x = 1;\n     /// if x + 1 == x + 1 {}\n-    /// ```\n-    /// or\n-    /// ```rust\n+    ///\n+    /// // or\n+    ///\n     /// # let a = 3;\n     /// # let b = 4;\n     /// assert_eq!(a, a);"}, {"sha": "d61be78895ffc50a41da823a7e10e7dfe5509197", "filename": "clippy_lints/src/loops/mod.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmod.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -180,29 +180,24 @@ declare_clippy_lint! {\n     /// ### Example\n     /// ```rust\n     /// # let opt = Some(1);\n-    ///\n-    /// // Bad\n+    /// # let res: Result<i32, std::io::Error> = Ok(1);\n     /// for x in opt {\n     ///     // ..\n     /// }\n     ///\n-    /// // Good\n-    /// if let Some(x) = opt {\n+    /// for x in &res {\n     ///     // ..\n     /// }\n     /// ```\n     ///\n-    /// or\n-    ///\n+    /// Use instead:\n     /// ```rust\n+    /// # let opt = Some(1);\n     /// # let res: Result<i32, std::io::Error> = Ok(1);\n-    ///\n-    /// // Bad\n-    /// for x in &res {\n+    /// if let Some(x) = opt {\n     ///     // ..\n     /// }\n     ///\n-    /// // Good\n     /// if let Ok(x) = res {\n     ///     // ..\n     /// }"}, {"sha": "08c89ceb79649b2d6c26edaec777539abf08157d", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 40, "deletions": 59, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -194,25 +194,18 @@ declare_clippy_lint! {\n     ///\n     /// ### Examples\n     /// ```rust\n-    /// # let opt = Some(1);\n-    ///\n-    /// // Bad\n-    /// opt.unwrap();\n-    ///\n-    /// // Good\n-    /// opt.expect(\"more helpful message\");\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// option.unwrap();\n+    /// result.unwrap();\n     /// ```\n     ///\n-    /// or\n-    ///\n+    /// Use instead:\n     /// ```rust\n-    /// # let res: Result<usize, ()> = Ok(1);\n-    ///\n-    /// // Bad\n-    /// res.unwrap();\n-    ///\n-    /// // Good\n-    /// res.expect(\"more helpful message\");\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// option.expect(\"more helpful message\");\n+    /// result.expect(\"more helpful message\");\n     /// ```\n     #[clippy::version = \"1.45.0\"]\n     pub UNWRAP_USED,\n@@ -235,27 +228,21 @@ declare_clippy_lint! {\n     ///\n     /// ### Examples\n     /// ```rust,ignore\n-    /// # let opt = Some(1);\n-    ///\n-    /// // Bad\n-    /// opt.expect(\"one\");\n-    ///\n-    /// // Good\n-    /// let opt = Some(1);\n-    /// opt?;\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// option.expect(\"one\");\n+    /// result.expect(\"one\");\n     /// ```\n     ///\n-    /// or\n-    ///\n-    /// ```rust\n-    /// # let res: Result<usize, ()> = Ok(1);\n+    /// Use instead:\n+    /// ```rust,ignore\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// option?;\n     ///\n-    /// // Bad\n-    /// res.expect(\"one\");\n+    /// // or\n     ///\n-    /// // Good\n-    /// res?;\n-    /// # Ok::<(), ()>(())\n+    /// result?;\n     /// ```\n     #[clippy::version = \"1.45.0\"]\n     pub EXPECT_USED,\n@@ -431,26 +418,20 @@ declare_clippy_lint! {\n     ///\n     /// ### Examples\n     /// ```rust\n-    /// # let x = Some(1);\n-    ///\n-    /// // Bad\n-    /// x.map(|a| a + 1).unwrap_or(0);\n-    ///\n-    /// // Good\n-    /// x.map_or(0, |a| a + 1);\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// # fn some_function(foo: ()) -> usize { 1 }\n+    /// option.map(|a| a + 1).unwrap_or(0);\n+    /// result.map(|a| a + 1).unwrap_or_else(some_function);\n     /// ```\n     ///\n-    /// or\n-    ///\n+    /// Use instead:\n     /// ```rust\n-    /// # let x: Result<usize, ()> = Ok(1);\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n     /// # fn some_function(foo: ()) -> usize { 1 }\n-    ///\n-    /// // Bad\n-    /// x.map(|a| a + 1).unwrap_or_else(some_function);\n-    ///\n-    /// // Good\n-    /// x.map_or_else(some_function, |a| a + 1);\n+    /// option.map_or(0, |a| a + 1);\n+    /// result.map_or_else(some_function, |a| a + 1);\n     /// ```\n     #[clippy::version = \"1.45.0\"]\n     pub MAP_UNWRAP_OR,\n@@ -793,13 +774,14 @@ declare_clippy_lint! {\n     /// # let foo = Some(String::new());\n     /// foo.unwrap_or(String::new());\n     /// ```\n-    /// this can instead be written:\n+    ///\n+    /// Use instead:\n     /// ```rust\n     /// # let foo = Some(String::new());\n     /// foo.unwrap_or_else(String::new);\n-    /// ```\n-    /// or\n-    /// ```rust\n+    ///\n+    /// // or\n+    ///\n     /// # let foo = Some(String::new());\n     /// foo.unwrap_or_default();\n     /// ```\n@@ -863,15 +845,14 @@ declare_clippy_lint! {\n     /// # let err_code = \"418\";\n     /// # let err_msg = \"I'm a teapot\";\n     /// foo.expect(&format!(\"Err {}: {}\", err_code, err_msg));\n-    /// ```\n-    /// or\n-    /// ```rust\n+    ///\n+    /// // or\n+    ///\n     /// # let foo = Some(String::new());\n-    /// # let err_code = \"418\";\n-    /// # let err_msg = \"I'm a teapot\";\n     /// foo.expect(format!(\"Err {}: {}\", err_code, err_msg).as_str());\n     /// ```\n-    /// this can instead be written:\n+    ///\n+    /// Use instead:\n     /// ```rust\n     /// # let foo = Some(String::new());\n     /// # let err_code = \"418\";"}, {"sha": "a081cde85725b3518b6f3ae863b2eee3d14f1e44", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -18,11 +18,11 @@ declare_clippy_lint! {\n     /// the least it hurts readability of the code.\n     ///\n     /// ### Example\n-    /// ```ignore\n+    /// ```rust,ignore\n     /// min(0, max(100, x))\n-    /// ```\n-    /// or\n-    /// ```ignore\n+    ///\n+    /// // or\n+    ///\n     /// x.max(100).min(0)\n     /// ```\n     /// It will always be equal to `0`. Probably the author meant to clamp the value"}, {"sha": "5566569945322db0f70b110946eeca6b9bb02c00", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -103,11 +103,14 @@ declare_clippy_lint! {\n     /// let x = 1.2331f64;\n     /// let y = 1.2332f64;\n     ///\n-    /// // Bad\n     /// if y == 1.23f64 { }\n     /// if y != x {} // where both are floats\n+    /// ```\n     ///\n-    /// // Good\n+    /// Use instead:\n+    /// ```rust\n+    /// # let x = 1.2331f64;\n+    /// # let y = 1.2332f64;\n     /// let error_margin = f64::EPSILON; // Use an epsilon for comparison\n     /// // Or, if Rust <= 1.42, use `std::f64::EPSILON` constant instead.\n     /// // let error_margin = std::f64::EPSILON;\n@@ -258,10 +261,13 @@ declare_clippy_lint! {\n     /// let x: f64 = 1.0;\n     /// const ONE: f64 = 1.00;\n     ///\n-    /// // Bad\n     /// if x == ONE { } // where both are floats\n+    /// ```\n     ///\n-    /// // Good\n+    /// Use instead:\n+    /// ```rust\n+    /// # let x: f64 = 1.0;\n+    /// # const ONE: f64 = 1.00;\n     /// let error_margin = f64::EPSILON; // Use an epsilon for comparison\n     /// // Or, if Rust <= 1.42, use `std::f64::EPSILON` constant instead.\n     /// // let error_margin = std::f64::EPSILON;"}, {"sha": "321db08dfe89afeceafa2ced7867c3074eaf2644", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -22,9 +22,12 @@ declare_clippy_lint! {\n     /// ### Example\n     /// ```rust,ignore\n     /// debug_assert_eq!(vec![3].pop(), Some(3));\n+    ///\n     /// // or\n-    /// fn take_a_mut_parameter(_: &mut u32) -> bool { unimplemented!() }\n-    /// debug_assert!(take_a_mut_parameter(&mut 5));\n+    ///\n+    /// # let mut x = 5;\n+    /// # fn takes_a_mut_parameter(_: &mut u32) -> bool { unimplemented!() }\n+    /// debug_assert!(takes_a_mut_parameter(&mut x));\n     /// ```\n     #[clippy::version = \"1.40.0\"]\n     pub DEBUG_ASSERT_WITH_MUT_CALL,"}, {"sha": "b91be0eb4bed8e57168c749998d1c04292ae53b6", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20f95c1a1780934367a019a6adba4ec74895716/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=b20f95c1a1780934367a019a6adba4ec74895716", "patch": "@@ -54,14 +54,14 @@ declare_clippy_lint! {\n     /// fn func<T: Clone + Default>(arg: T) where T: Clone + Default {}\n     /// ```\n     ///\n-    /// Could be written as:\n-    ///\n+    /// Use instead:\n     /// ```rust\n+    /// # mod hidden {\n     /// fn func<T: Clone + Default>(arg: T) {}\n-    /// ```\n-    /// or\n+    /// # }\n+    ///\n+    /// // or\n     ///\n-    /// ```rust\n     /// fn func<T>(arg: T) where T: Clone + Default {}\n     /// ```\n     #[clippy::version = \"1.47.0\"]"}]}