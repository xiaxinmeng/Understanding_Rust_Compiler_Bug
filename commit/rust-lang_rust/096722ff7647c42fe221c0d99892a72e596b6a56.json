{"sha": "096722ff7647c42fe221c0d99892a72e596b6a56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NjcyMmZmNzY0N2M0MmZlMjIxYzBkOTk4OTJhNzJlNTk2YjZhNTY=", "commit": {"author": {"name": "wcampbell", "email": "wcampbell1995@gmail.com", "date": "2020-10-13T21:50:10Z"}, "committer": {"name": "wcampbell", "email": "wcampbell1995@gmail.com", "date": "2020-10-13T21:50:10Z"}, "message": "Refactor collapsible_if\n\nSigned-off-by: wcampbell <wcampbell1995@gmail.com>", "tree": {"sha": "0c2dfc170dd4500f2bef092e61437658c0082187", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c2dfc170dd4500f2bef092e61437658c0082187"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/096722ff7647c42fe221c0d99892a72e596b6a56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEoLMBW/Y1Vj+lcFnQoED02vxo/+gFAl+GIR8ACgkQoED02vxo\n/+ikig/9F8GiNY3v2DNFeP5l5RjW8AbkH4ik6UwYZ8h2V4ormiXKIznC22LK+K1W\npdUMFyh4TavaKfpnlYlW+ZLQRrcLgbD+TpnNQLlEr8X2061AFeoU1fXCTHJ2D6cL\nkefbJYhkAOscMGshGkJUEJHnxS0m8EwB91QO6xi6cggsUayhi5GswVu5VGzCp3Kd\n8nY1GpV2E2gUYtIwAaLebFdioM1sD6lzuEJW/0l277r4t8/XicN/bwQiMqaV0T7B\nT2iE6gtCCf2Wepkl7kIqL/EpymoAdjrvkgJ++CbLYHOZoDALzAJzb5lpgFosAHqA\nsrjh8nPTdFk85o3VqNpAWKbTNgO1xaX8ArKtH0fFhajnYOABqaPqGEklD3MyHNpG\nfwXJeTpotTol6PLYqJSGAAFNxDtvVlfYkFX7tpfTv89UxjlHDxzFhFNnbIJqhHdB\niHmgP60Ecu9LM+2eGYFeVx3F8jksGBe9nfNL+t8s8m75hVRyXxnMmdvOWP3Of4UQ\noBFNdoa9khdbXuLTI2vbYGwmjBRm/wWZzI3LB28gMdkimvXN15vL1meIZKrWiX9Q\naTCnBzD6uBrW8kjZ2N7DY4rg0RR41qNOYrU9kPLGr355j5wqxXWA+0Kb9OdeGrY0\n2CWkXTCiS7twkzea35hhP0qus38BMEyR1WY496aQkTOTSNywNU0=\n=MkV9\n-----END PGP SIGNATURE-----", "payload": "tree 0c2dfc170dd4500f2bef092e61437658c0082187\nparent abbdec3be6cfce1175d0dc6737a2999cf43b530d\nauthor wcampbell <wcampbell1995@gmail.com> 1602625810 -0400\ncommitter wcampbell <wcampbell1995@gmail.com> 1602625810 -0400\n\nRefactor collapsible_if\n\nSigned-off-by: wcampbell <wcampbell1995@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/096722ff7647c42fe221c0d99892a72e596b6a56", "html_url": "https://github.com/rust-lang/rust/commit/096722ff7647c42fe221c0d99892a72e596b6a56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/096722ff7647c42fe221c0d99892a72e596b6a56/comments", "author": {"login": "wcampbell0x2a", "id": 15236002, "node_id": "MDQ6VXNlcjE1MjM2MDAy", "avatar_url": "https://avatars.githubusercontent.com/u/15236002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcampbell0x2a", "html_url": "https://github.com/wcampbell0x2a", "followers_url": "https://api.github.com/users/wcampbell0x2a/followers", "following_url": "https://api.github.com/users/wcampbell0x2a/following{/other_user}", "gists_url": "https://api.github.com/users/wcampbell0x2a/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcampbell0x2a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcampbell0x2a/subscriptions", "organizations_url": "https://api.github.com/users/wcampbell0x2a/orgs", "repos_url": "https://api.github.com/users/wcampbell0x2a/repos", "events_url": "https://api.github.com/users/wcampbell0x2a/events{/privacy}", "received_events_url": "https://api.github.com/users/wcampbell0x2a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wcampbell0x2a", "id": 15236002, "node_id": "MDQ6VXNlcjE1MjM2MDAy", "avatar_url": "https://avatars.githubusercontent.com/u/15236002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcampbell0x2a", "html_url": "https://github.com/wcampbell0x2a", "followers_url": "https://api.github.com/users/wcampbell0x2a/followers", "following_url": "https://api.github.com/users/wcampbell0x2a/following{/other_user}", "gists_url": "https://api.github.com/users/wcampbell0x2a/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcampbell0x2a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcampbell0x2a/subscriptions", "organizations_url": "https://api.github.com/users/wcampbell0x2a/orgs", "repos_url": "https://api.github.com/users/wcampbell0x2a/repos", "events_url": "https://api.github.com/users/wcampbell0x2a/events{/privacy}", "received_events_url": "https://api.github.com/users/wcampbell0x2a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abbdec3be6cfce1175d0dc6737a2999cf43b530d", "url": "https://api.github.com/repos/rust-lang/rust/commits/abbdec3be6cfce1175d0dc6737a2999cf43b530d", "html_url": "https://github.com/rust-lang/rust/commit/abbdec3be6cfce1175d0dc6737a2999cf43b530d"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "2ecb0f44d001b6491c7e0e77705b3ebac5876882", "filename": "library/std/src/f64.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/096722ff7647c42fe221c0d99892a72e596b6a56/library%2Fstd%2Fsrc%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096722ff7647c42fe221c0d99892a72e596b6a56/library%2Fstd%2Fsrc%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff64.rs?ref=096722ff7647c42fe221c0d99892a72e596b6a56", "patch": "@@ -920,22 +920,20 @@ impl f64 {\n     fn log_wrapper<F: Fn(f64) -> f64>(self, log_fn: F) -> f64 {\n         if !cfg!(any(target_os = \"solaris\", target_os = \"illumos\")) {\n             log_fn(self)\n-        } else {\n-            if self.is_finite() {\n-                if self > 0.0 {\n-                    log_fn(self)\n-                } else if self == 0.0 {\n-                    Self::NEG_INFINITY // log(0) = -Inf\n-                } else {\n-                    Self::NAN // log(-n) = NaN\n-                }\n-            } else if self.is_nan() {\n-                self // log(NaN) = NaN\n-            } else if self > 0.0 {\n-                self // log(Inf) = Inf\n+        } else if self.is_finite() {\n+            if self > 0.0 {\n+                log_fn(self)\n+            } else if self == 0.0 {\n+                Self::NEG_INFINITY // log(0) = -Inf\n             } else {\n-                Self::NAN // log(-Inf) = NaN\n+                Self::NAN // log(-n) = NaN\n             }\n+        } else if self.is_nan() {\n+            self // log(NaN) = NaN\n+        } else if self > 0.0 {\n+            self // log(Inf) = Inf\n+        } else {\n+            Self::NAN // log(-Inf) = NaN\n         }\n     }\n }"}]}