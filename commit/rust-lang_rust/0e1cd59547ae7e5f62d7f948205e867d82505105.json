{"sha": "0e1cd59547ae7e5f62d7f948205e867d82505105", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMWNkNTk1NDdhZTdlNWY2MmQ3Zjk0ODIwNWU4NjdkODI1MDUxMDU=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2020-01-06T18:51:01Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2020-01-12T00:38:07Z"}, "message": "Galloping search for binary_search_util", "tree": {"sha": "e27e059383526b22999c3c7fce93820f16c0e3e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e27e059383526b22999c3c7fce93820f16c0e3e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e1cd59547ae7e5f62d7f948205e867d82505105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e1cd59547ae7e5f62d7f948205e867d82505105", "html_url": "https://github.com/rust-lang/rust/commit/0e1cd59547ae7e5f62d7f948205e867d82505105", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e1cd59547ae7e5f62d7f948205e867d82505105/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebbb2bf37aedaaa64dfaa52ba337ca6efb6b9093", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebbb2bf37aedaaa64dfaa52ba337ca6efb6b9093", "html_url": "https://github.com/rust-lang/rust/commit/ebbb2bf37aedaaa64dfaa52ba337ca6efb6b9093"}], "stats": {"total": 60, "additions": 40, "deletions": 20}, "files": [{"sha": "ede5757a479de273216921e6ec9e04ee8b8b8ce9", "filename": "src/librustc_data_structures/binary_search_util/mod.rs", "status": "modified", "additions": 40, "deletions": 20, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/0e1cd59547ae7e5f62d7f948205e867d82505105/src%2Flibrustc_data_structures%2Fbinary_search_util%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1cd59547ae7e5f62d7f948205e867d82505105/src%2Flibrustc_data_structures%2Fbinary_search_util%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fbinary_search_util%2Fmod.rs?ref=0e1cd59547ae7e5f62d7f948205e867d82505105", "patch": "@@ -14,35 +14,55 @@ where\n         Ok(mid) => mid,\n         Err(_) => return &[],\n     };\n+    let size = data.len();\n \n-    // We get back *some* element with the given key -- so\n-    // search backwards to find the *first* one.\n-    //\n-    // (It'd be more efficient to use a \"galloping\" search\n-    // here, but it's not really worth it for small-ish\n-    // amounts of data.)\n+    // We get back *some* element with the given key -- so do\n+    // a galloping search backwards to find the *first* one.\n     let mut start = mid;\n-    while start > 0 {\n-        if key_fn(&data[start - 1]) == *key {\n-            start -= 1;\n-        } else {\n+    let mut previous = mid;\n+    let mut step = 1;\n+    loop {\n+        start = start.saturating_sub(step);\n+        if start == 0 || key_fn(&data[start]) != *key {\n             break;\n         }\n+        previous = start;\n+        step *= 2;\n+    }\n+    step = previous - start;\n+    while step > 1 {\n+        let half = step / 2;\n+        let mid = start + half;\n+        if key_fn(&data[mid]) != *key {\n+            start = mid;\n+        }\n+        step -= half;\n+    }\n+    // adjust by one if we have overshot\n+    if start < size && key_fn(&data[start]) != *key {\n+        start += 1;\n     }\n \n     // Now search forward to find the *last* one.\n-    //\n-    // (It'd be more efficient to use a \"galloping\" search\n-    // here, but it's not really worth it for small-ish\n-    // amounts of data.)\n-    let mut end = mid + 1;\n-    let max = data.len();\n-    while end < max {\n-        if key_fn(&data[end]) == *key {\n-            end += 1;\n-        } else {\n+    let mut end = mid;\n+    let mut previous = mid;\n+    let mut step = 1;\n+    loop {\n+        end = end.saturating_add(step).min(size);\n+        if end == size || key_fn(&data[end]) != *key {\n             break;\n         }\n+        previous = end;\n+        step *= 2;\n+    }\n+    step = end - previous;\n+    while step > 1 {\n+        let half = step / 2;\n+        let mid = end - half;\n+        if key_fn(&data[mid]) != *key {\n+            end = mid;\n+        }\n+        step -= half;\n     }\n \n     &data[start..end]"}]}