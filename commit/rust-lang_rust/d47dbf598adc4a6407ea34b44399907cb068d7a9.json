{"sha": "d47dbf598adc4a6407ea34b44399907cb068d7a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0N2RiZjU5OGFkYzRhNjQwN2VhMzRiNDQzOTk5MDdjYjA2OGQ3YTk=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-10-08T19:31:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-08T19:31:04Z"}, "message": "Merge pull request #3234 from matthiaskrgr/fix_3064_crash\n\nif_let_redundant_pattern_matching: use Span.to() instead of Span.with_hi() to fix crash.", "tree": {"sha": "a40a4f1453546d8173bbaf3c0679a12566174040", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a40a4f1453546d8173bbaf3c0679a12566174040"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d47dbf598adc4a6407ea34b44399907cb068d7a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbu7B4CRBK7hj4Ov3rIwAAdHIIAIl2Zbv/vSPhHT96ZzCn7hJG\n7AHh2l6LPgoP3S93jmX4S8v8KuWE2Z1tNm9iTU9+Cvg+hnVp8AD1fGLqighqb/gy\nYDwZNv2imH1XGIKkdZMrZzJ8pI+bQgD4NxAb0TWcsBVW14xvK4x8UJKW1phMive5\nd0iIj1u/6POl16upFLsNAijaIwjwS0jPGcsfeNqmyQljsJA8dIjaXNS6vLwYtnC3\nWvxWVb1lhOQQs9bE+6Nmc8M7pAhfiT+znkKPK9ZOLWYAAQW9Fm5OQrGERp92O/iE\nY1dMMHm9qUUQptZzxuUxVnRbJVgCMb+8liIpTKcjIlKKb27p4rO8YQrR2qkDizk=\n=gCIV\n-----END PGP SIGNATURE-----\n", "payload": "tree a40a4f1453546d8173bbaf3c0679a12566174040\nparent d67286b70b98110302c8324a2f1b2ca3d087501c\nparent a578cb2d62d4ff1ddbf9034d2924e1a68f55723c\nauthor Philipp Hansch <dev@phansch.net> 1539027064 +0200\ncommitter GitHub <noreply@github.com> 1539027064 +0200\n\nMerge pull request #3234 from matthiaskrgr/fix_3064_crash\n\nif_let_redundant_pattern_matching: use Span.to() instead of Span.with_hi() to fix crash."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d47dbf598adc4a6407ea34b44399907cb068d7a9", "html_url": "https://github.com/rust-lang/rust/commit/d47dbf598adc4a6407ea34b44399907cb068d7a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d47dbf598adc4a6407ea34b44399907cb068d7a9/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d67286b70b98110302c8324a2f1b2ca3d087501c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d67286b70b98110302c8324a2f1b2ca3d087501c", "html_url": "https://github.com/rust-lang/rust/commit/d67286b70b98110302c8324a2f1b2ca3d087501c"}, {"sha": "a578cb2d62d4ff1ddbf9034d2924e1a68f55723c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a578cb2d62d4ff1ddbf9034d2924e1a68f55723c", "html_url": "https://github.com/rust-lang/rust/commit/a578cb2d62d4ff1ddbf9034d2924e1a68f55723c"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "8b42eaa528e7f6fb2ab4e6e2feb3a57a21bd863a", "filename": "clippy_lints/src/if_let_redundant_pattern_matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d47dbf598adc4a6407ea34b44399907cb068d7a9/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47dbf598adc4a6407ea34b44399907cb068d7a9/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs?ref=d47dbf598adc4a6407ea34b44399907cb068d7a9", "patch": "@@ -87,7 +87,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     arms[0].pats[0].span,\n                     &format!(\"redundant pattern matching, consider using `{}`\", good_method),\n                     |db| {\n-                        let span = expr.span.with_hi(op.span.hi());\n+                        let span = expr.span.to(op.span);\n                         db.span_suggestion_with_applicability(\n                             span,\n                             \"try this\","}, {"sha": "5111de671890f94484396bcd59e2a22af9f122af", "filename": "tests/ui/if_let_redundant_pattern_matching.stderr", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d47dbf598adc4a6407ea34b44399907cb068d7a9/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d47dbf598adc4a6407ea34b44399907cb068d7a9/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr?ref=d47dbf598adc4a6407ea34b44399907cb068d7a9", "patch": "@@ -2,27 +2,33 @@ error: redundant pattern matching, consider using `is_ok()`\n   --> $DIR/if_let_redundant_pattern_matching.rs:19:12\n    |\n 19 |     if let Ok(_) = Ok::<i32, i32>(42) {}\n-   |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n+   |     -------^^^^^------------------------ help: try this: `if Ok::<i32, i32>(42).is_ok()`\n    |\n    = note: `-D clippy::if-let-redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_err()`\n   --> $DIR/if_let_redundant_pattern_matching.rs:21:12\n    |\n-21 |     if let Err(_) = Err::<i32, i32>(42) {\n-   |     -------^^^^^^---------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n+21 |       if let Err(_) = Err::<i32, i32>(42) {\n+   |  _____-      ^^^^^^\n+22 | |     }\n+   | |_____- help: try this: `if Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_none()`\n   --> $DIR/if_let_redundant_pattern_matching.rs:24:12\n    |\n-24 |     if let None = None::<()> {\n-   |     -------^^^^------------- help: try this: `if None::<()>.is_none()`\n+24 |       if let None = None::<()> {\n+   |  _____-      ^^^^\n+25 | |     }\n+   | |_____- help: try this: `if None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n   --> $DIR/if_let_redundant_pattern_matching.rs:27:12\n    |\n-27 |     if let Some(_) = Some(42) {\n-   |     -------^^^^^^^----------- help: try this: `if Some(42).is_some()`\n+27 |       if let Some(_) = Some(42) {\n+   |  _____-      ^^^^^^^\n+28 | |     }\n+   | |_____- help: try this: `if Some(42).is_some()`\n \n error: aborting due to 4 previous errors\n "}]}