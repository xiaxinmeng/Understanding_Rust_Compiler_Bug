{"sha": "e5e640cacef51e401286f93388002f41e8ef3328", "node_id": "C_kwDOAAsO6NoAKGU1ZTY0MGNhY2VmNTFlNDAxMjg2ZjkzMzg4MDAyZjQxZThlZjMzMjg", "commit": {"author": {"name": "Thomas Hurst", "email": "tom@hur.st", "date": "2023-04-25T20:59:50Z"}, "committer": {"name": "Thomas Hurst", "email": "tom@hur.st", "date": "2023-04-25T20:59:50Z"}, "message": "Add FreeBSD cpuset support to std::thread::available_concurrency\n\nUse libc::cpuset_getaffinity to determine the CPUs available to the current process.\n\nThe existing sysconf and sysctl paths are left as fallback.", "tree": {"sha": "8b3fc326b3d39a457db244dabb01a1325ecabf71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b3fc326b3d39a457db244dabb01a1325ecabf71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5e640cacef51e401286f93388002f41e8ef3328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e640cacef51e401286f93388002f41e8ef3328", "html_url": "https://github.com/rust-lang/rust/commit/e5e640cacef51e401286f93388002f41e8ef3328", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5e640cacef51e401286f93388002f41e8ef3328/comments", "author": {"login": "Freaky", "id": 58758, "node_id": "MDQ6VXNlcjU4NzU4", "avatar_url": "https://avatars.githubusercontent.com/u/58758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freaky", "html_url": "https://github.com/Freaky", "followers_url": "https://api.github.com/users/Freaky/followers", "following_url": "https://api.github.com/users/Freaky/following{/other_user}", "gists_url": "https://api.github.com/users/Freaky/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freaky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freaky/subscriptions", "organizations_url": "https://api.github.com/users/Freaky/orgs", "repos_url": "https://api.github.com/users/Freaky/repos", "events_url": "https://api.github.com/users/Freaky/events{/privacy}", "received_events_url": "https://api.github.com/users/Freaky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Freaky", "id": 58758, "node_id": "MDQ6VXNlcjU4NzU4", "avatar_url": "https://avatars.githubusercontent.com/u/58758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freaky", "html_url": "https://github.com/Freaky", "followers_url": "https://api.github.com/users/Freaky/followers", "following_url": "https://api.github.com/users/Freaky/following{/other_user}", "gists_url": "https://api.github.com/users/Freaky/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freaky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freaky/subscriptions", "organizations_url": "https://api.github.com/users/Freaky/orgs", "repos_url": "https://api.github.com/users/Freaky/repos", "events_url": "https://api.github.com/users/Freaky/events{/privacy}", "received_events_url": "https://api.github.com/users/Freaky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20d90b14ffe8c667757a70c08e2d9736ee89f493", "url": "https://api.github.com/repos/rust-lang/rust/commits/20d90b14ffe8c667757a70c08e2d9736ee89f493", "html_url": "https://github.com/rust-lang/rust/commit/20d90b14ffe8c667757a70c08e2d9736ee89f493"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "7307d9b2c86166983d1f9bf555cc6e7cc3d62e18", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e5e640cacef51e401286f93388002f41e8ef3328/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5e640cacef51e401286f93388002f41e8ef3328/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=e5e640cacef51e401286f93388002f41e8ef3328", "patch": "@@ -326,6 +326,25 @@ pub fn available_parallelism() -> io::Result<NonZeroUsize> {\n         } else if #[cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\", target_os = \"netbsd\"))] {\n             use crate::ptr;\n \n+            #[cfg(target_os = \"freebsd\")]\n+            {\n+                let mut set: libc::cpuset_t = unsafe { mem::zeroed() };\n+                unsafe {\n+                    if libc::cpuset_getaffinity(\n+                        libc::CPU_LEVEL_WHICH,\n+                        libc::CPU_WHICH_PID,\n+                        -1,\n+                        mem::size_of::<libc::cpuset_t>(),\n+                        &mut set,\n+                    ) == 0 {\n+                        let count = libc::CPU_COUNT(&set) as usize;\n+                        if count > 0 {\n+                            return Ok(NonZeroUsize::new_unchecked(count));\n+                        }\n+                    }\n+                }\n+            }\n+\n             let mut cpus: libc::c_uint = 0;\n             let mut cpus_size = crate::mem::size_of_val(&cpus);\n "}]}