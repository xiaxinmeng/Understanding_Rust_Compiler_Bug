{"sha": "2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMzY0ZDlhYzUwYmEyYmM4MDVhNDNkOWI5ZTg1NzNkNDlmNTNhYjg=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-09-27T04:12:01Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-09-27T04:12:01Z"}, "message": "Merge branch 'master' into unnecessary_filter_map", "tree": {"sha": "3dc16e3b5a2152f21ee2fb58024d8412eaae80d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dc16e3b5a2152f21ee2fb58024d8412eaae80d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8", "html_url": "https://github.com/rust-lang/rust/commit/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8/comments", "author": null, "committer": null, "parents": [{"sha": "f5ffac4fce524229e567b9b9f38925a49f35cd29", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5ffac4fce524229e567b9b9f38925a49f35cd29", "html_url": "https://github.com/rust-lang/rust/commit/f5ffac4fce524229e567b9b9f38925a49f35cd29"}, {"sha": "a72e786c5d8866d554effd246c30fb553b63fa06", "url": "https://api.github.com/repos/rust-lang/rust/commits/a72e786c5d8866d554effd246c30fb553b63fa06", "html_url": "https://github.com/rust-lang/rust/commit/a72e786c5d8866d554effd246c30fb553b63fa06"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "15da5d6587803c242720dc6d59701ab963bfe18d", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8", "patch": "@@ -33,6 +33,7 @@ unicode-normalization = \"0.1\"\n pulldown-cmark = \"0.1\"\n url = \"1.7.0\"\n if_chain = \"0.1.3\"\n+smallvec = { version = \"0.6.5\", features = [\"union\"] }\n \n [features]\n debugging = []"}, {"sha": "26669d8c4c2a9b32335b3bc419e710ae103f50ae", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8", "patch": "@@ -6,7 +6,7 @@ use crate::rustc_data_structures::fx::FxHashMap;\n use std::collections::hash_map::Entry;\n use std::hash::BuildHasherDefault;\n use crate::syntax::symbol::LocalInternedString;\n-use crate::rustc_data_structures::small_vec::OneVector;\n+use smallvec::SmallVec;\n use crate::utils::{SpanlessEq, SpanlessHash};\n use crate::utils::{get_parent_expr, in_macro, snippet, span_lint_and_then, span_note_and_lint};\n \n@@ -235,9 +235,9 @@ fn lint_match_arms(cx: &LateContext<'_, '_>, expr: &Expr) {\n /// sequence of `if/else`.\n /// Eg. would return `([a, b], [c, d, e])` for the expression\n /// `if a { c } else if b { d } else { e }`.\n-fn if_sequence(mut expr: &Expr) -> (OneVector<&Expr>, OneVector<&Block>) {\n-    let mut conds = OneVector::new();\n-    let mut blocks: OneVector<&Block> = OneVector::new();\n+fn if_sequence(mut expr: &Expr) -> (SmallVec<[&Expr; 1]>, SmallVec<[&Block; 1]>) {\n+    let mut conds = SmallVec::new();\n+    let mut blocks: SmallVec<[&Block; 1]> = SmallVec::new();\n \n     while let ExprKind::If(ref cond, ref then_expr, ref else_expr) = expr.node {\n         conds.push(&**cond);"}, {"sha": "2ff4274a1a92db7bba367173fc18263aea07c3e0", "filename": "tests/dogfood.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=2f364d9ac50ba2bc805a43d9b9e8573d49f53ab8", "patch": "@@ -4,14 +4,16 @@ fn dogfood() {\n         return;\n     }\n     let root_dir = std::env::current_dir().unwrap();\n-    for d in &[\".\", \"clippy_lints\"] {\n+    for d in &[\".\", \"clippy_lints\", \"rustc_tools_util\", \"clippy_dev\"] {\n         std::env::set_current_dir(root_dir.join(d)).unwrap();\n         let output = std::process::Command::new(\"cargo\")\n             .arg(\"run\")\n             .arg(\"--bin\")\n             .arg(\"cargo-clippy\")\n+            .arg(\"--all-features\")\n             .arg(\"--manifest-path\")\n             .arg(root_dir.join(\"Cargo.toml\"))\n+            .args(&[\"--\", \"-W clippy::internal\"])\n             .env(\"CLIPPY_DOGFOOD\", \"true\")\n             .output()\n             .unwrap();"}]}