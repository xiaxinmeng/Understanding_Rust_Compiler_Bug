{"sha": "e5d9da76f267d546e5b5e519b0f33f098aa2aed8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZDlkYTc2ZjI2N2Q1NDZlNWI1ZTUxOWIwZjMzZjA5OGFhMmFlZDg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-10-29T08:47:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-29T08:47:46Z"}, "message": "Rollup merge of #55423 - zackmdavis:back_out_bogus_ok_wrapping_suggestion, r=estebank\n\nback out bogus `Ok`-wrapping suggestion on `?` arm type mismatch\n\nThis suggestion was introduced in #51938 / 6cc78bf8d7 (while introducing different language for type errors coming from `?` rather than a `match`), but it has a lot of false-positives, and incorrect suggestions carry more badness than marginal good suggestions do goodness. I regret not doing this earlier. :disappointed:\n\nResolves #52537, resolves #54578.\n\nr? @estebank", "tree": {"sha": "4c9deba99fe8c55df201d060ccbdab6449e45890", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c9deba99fe8c55df201d060ccbdab6449e45890"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5d9da76f267d546e5b5e519b0f33f098aa2aed8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb1skzCRBK7hj4Ov3rIwAAdHIIACxZ8DiSaft27H6kinHK2oY5\nUC56rx9xglrzoWUMh1tB6J/qsxawL63RKpDMF+z0+PR7JYtRLIkPALe0n6BbQxER\neEoxygLTLW3OiwGd+Jcf4LRe7XQ7rcmgK0QVmKAt+uxC8fT75X8m4x/oKiB9AyQ0\nJfE1lQFXiy7Ku7lxNJ8bwlQRNkK1c5j4vB2DI68/VaRQCeIYLl5StV3jugHKNFn8\n66JrVZZFV2cI11vYpcd75D5dWHEXHhTCODi/S1smNVsOfQ7nL+EBImZYJJSf5b0a\nZ6PBQ/po4F0uzDYBbEu4+tR+c62NqgRAKx9t6ph8TLeHtFqGU61qJZV9A9dYVV8=\n=aFq9\n-----END PGP SIGNATURE-----\n", "payload": "tree 4c9deba99fe8c55df201d060ccbdab6449e45890\nparent 97ff2d6ab1bea79c7ff4ae60a8ab600ce8b82c8e\nparent b7546150b2f372bc31f908c41c0078936c3d8b66\nauthor Pietro Albini <pietro@pietroalbini.org> 1540802866 +0100\ncommitter GitHub <noreply@github.com> 1540802866 +0100\n\nRollup merge of #55423 - zackmdavis:back_out_bogus_ok_wrapping_suggestion, r=estebank\n\nback out bogus `Ok`-wrapping suggestion on `?` arm type mismatch\n\nThis suggestion was introduced in #51938 / 6cc78bf8d7 (while introducing different language for type errors coming from `?` rather than a `match`), but it has a lot of false-positives, and incorrect suggestions carry more badness than marginal good suggestions do goodness. I regret not doing this earlier. :disappointed:\n\nResolves #52537, resolves #54578.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5d9da76f267d546e5b5e519b0f33f098aa2aed8", "html_url": "https://github.com/rust-lang/rust/commit/e5d9da76f267d546e5b5e519b0f33f098aa2aed8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5d9da76f267d546e5b5e519b0f33f098aa2aed8/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97ff2d6ab1bea79c7ff4ae60a8ab600ce8b82c8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/97ff2d6ab1bea79c7ff4ae60a8ab600ce8b82c8e", "html_url": "https://github.com/rust-lang/rust/commit/97ff2d6ab1bea79c7ff4ae60a8ab600ce8b82c8e"}, {"sha": "b7546150b2f372bc31f908c41c0078936c3d8b66", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7546150b2f372bc31f908c41c0078936c3d8b66", "html_url": "https://github.com/rust-lang/rust/commit/b7546150b2f372bc31f908c41c0078936c3d8b66"}], "stats": {"total": 47, "additions": 3, "deletions": 44}, "files": [{"sha": "d19c495af3b9685c11240ace5d55bfc4dcc9b4ad", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e5d9da76f267d546e5b5e519b0f33f098aa2aed8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d9da76f267d546e5b5e519b0f33f098aa2aed8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=e5d9da76f267d546e5b5e519b0f33f098aa2aed8", "patch": "@@ -479,17 +479,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                         err.span_label(arm_span, msg);\n                     }\n                 }\n-                hir::MatchSource::TryDesugar => {\n-                    // Issue #51632\n-                    if let Ok(try_snippet) = self.tcx.sess.source_map().span_to_snippet(arm_span) {\n-                        err.span_suggestion_with_applicability(\n-                            arm_span,\n-                            \"try wrapping with a success variant\",\n-                            format!(\"Ok({})\", try_snippet),\n-                            Applicability::MachineApplicable,\n-                        );\n-                    }\n-                }\n+                hir::MatchSource::TryDesugar => {}\n                 _ => {\n                     let msg = \"match arm with an incompatible type\";\n                     if self.tcx.sess.source_map().is_multiline(arm_span) {"}, {"sha": "016cff914bd2d7ad3713cfb5908b35b1c68876f7", "filename": "src/test/ui/issues/issue-51632-try-desugar-incompatible-types.fixed", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/97ff2d6ab1bea79c7ff4ae60a8ab600ce8b82c8e/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/97ff2d6ab1bea79c7ff4ae60a8ab600ce8b82c8e/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.fixed?ref=97ff2d6ab1bea79c7ff4ae60a8ab600ce8b82c8e", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-rustfix\n-\n-#![allow(dead_code)]\n-\n-fn missing_discourses() -> Result<isize, ()> {\n-    Ok(1)\n-}\n-\n-fn forbidden_narratives() -> Result<isize, ()> {\n-    Ok(missing_discourses()?)\n-    //~^ ERROR try expression alternatives have incompatible types\n-    //~| HELP try wrapping with a success variant\n-}\n-\n-fn main() {}"}, {"sha": "32ea715b64fa7f66986a23b61329e6dd90a23314", "filename": "src/test/ui/issues/issue-51632-try-desugar-incompatible-types.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5d9da76f267d546e5b5e519b0f33f098aa2aed8/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d9da76f267d546e5b5e519b0f33f098aa2aed8/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.rs?ref=e5d9da76f267d546e5b5e519b0f33f098aa2aed8", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// run-rustfix\n-\n #![allow(dead_code)]\n \n fn missing_discourses() -> Result<isize, ()> {\n@@ -19,7 +17,6 @@ fn missing_discourses() -> Result<isize, ()> {\n fn forbidden_narratives() -> Result<isize, ()> {\n     missing_discourses()?\n     //~^ ERROR try expression alternatives have incompatible types\n-    //~| HELP try wrapping with a success variant\n }\n \n fn main() {}"}, {"sha": "590cbff67a4bc80da6aa0faead15ebcb41ca47f4", "filename": "src/test/ui/issues/issue-51632-try-desugar-incompatible-types.stderr", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e5d9da76f267d546e5b5e519b0f33f098aa2aed8/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5d9da76f267d546e5b5e519b0f33f098aa2aed8/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr?ref=e5d9da76f267d546e5b5e519b0f33f098aa2aed8", "patch": "@@ -1,11 +1,8 @@\n error[E0308]: try expression alternatives have incompatible types\n-  --> $DIR/issue-51632-try-desugar-incompatible-types.rs:20:5\n+  --> $DIR/issue-51632-try-desugar-incompatible-types.rs:18:5\n    |\n LL |     missing_discourses()?\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-   |     |\n-   |     expected enum `std::result::Result`, found isize\n-   |     help: try wrapping with a success variant: `Ok(missing_discourses()?)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^ expected enum `std::result::Result`, found isize\n    |\n    = note: expected type `std::result::Result<isize, ()>`\n               found type `isize`"}]}