{"sha": "2a25876c585ede337fc4167147bbbfa53d30ca2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMjU4NzZjNTg1ZWRlMzM3ZmM0MTY3MTQ3YmJiZmE1M2QzMGNhMmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-21T14:55:08Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-21T14:55:08Z"}, "message": "add test cases suggested by pnkfelix", "tree": {"sha": "402d3501216a09f4c7168134dbf02fd4fa1edb0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/402d3501216a09f4c7168134dbf02fd4fa1edb0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a25876c585ede337fc4167147bbbfa53d30ca2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a25876c585ede337fc4167147bbbfa53d30ca2b", "html_url": "https://github.com/rust-lang/rust/commit/2a25876c585ede337fc4167147bbbfa53d30ca2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a25876c585ede337fc4167147bbbfa53d30ca2b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36809bf260dd3951fd9ffaa14556246abb17e5ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/36809bf260dd3951fd9ffaa14556246abb17e5ea", "html_url": "https://github.com/rust-lang/rust/commit/36809bf260dd3951fd9ffaa14556246abb17e5ea"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "738e516f22ed07f066726eeb49f4c240c15339f9", "filename": "src/librustc_data_structures/transitive_relation.rs", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/2a25876c585ede337fc4167147bbbfa53d30ca2b/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a25876c585ede337fc4167147bbbfa53d30ca2b/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Ftransitive_relation.rs?ref=2a25876c585ede337fc4167147bbbfa53d30ca2b", "patch": "@@ -464,3 +464,85 @@ fn bub_lub() {\n     assert_eq!(relation.minimal_upper_bounds(&\"a\", &\"b\"), vec![&\"x\"]);\n     assert_eq!(relation.best_upper_bound(&\"a\", &\"b\"), Some(&\"x\"));\n }\n+\n+#[test]\n+fn mubs_intermediate_node_on_one_side_only() {\n+    // a -> c -> d\n+    //           ^\n+    //           |\n+    //           b\n+\n+    // \"digraph { a -> c -> d; b -> d; }\",\n+    let mut relation = TransitiveRelation::new();\n+    relation.add(\"a\",  \"c\");\n+    relation.add(\"c\",  \"d\");\n+    relation.add(\"b\",  \"d\");\n+\n+    assert_eq!(relation.minimal_upper_bounds(&\"a\", &\"b\"), vec![&\"d\"]);\n+}\n+\n+#[test]\n+fn mubs_scc_1() {\n+    // +-------------+\n+    // |    +----+   |\n+    // |    v    |   |\n+    // a -> c -> d <-+\n+    //           ^\n+    //           |\n+    //           b\n+\n+    // \"digraph { a -> c -> d; d -> c; a -> d; b -> d; }\",\n+    let mut relation = TransitiveRelation::new();\n+    relation.add(\"a\",  \"c\");\n+    relation.add(\"c\",  \"d\");\n+    relation.add(\"d\",  \"c\");\n+    relation.add(\"a\",  \"d\");\n+    relation.add(\"b\",  \"d\");\n+\n+    assert_eq!(relation.minimal_upper_bounds(&\"a\", &\"b\"), vec![&\"c\"]);\n+}\n+\n+#[test]\n+fn mubs_scc_2() {\n+    //      +----+\n+    //      v    |\n+    // a -> c -> d\n+    //      ^    ^\n+    //      |    |\n+    //      +--- b\n+\n+    // \"digraph { a -> c -> d; d -> c; b -> d; b -> c; }\",\n+    let mut relation = TransitiveRelation::new();\n+    relation.add(\"a\",  \"c\");\n+    relation.add(\"c\",  \"d\");\n+    relation.add(\"d\",  \"c\");\n+    relation.add(\"b\",  \"d\");\n+    relation.add(\"b\",  \"c\");\n+\n+    assert_eq!(relation.minimal_upper_bounds(&\"a\", &\"b\"), vec![&\"c\"]);\n+}\n+\n+#[test]\n+fn mubs_scc_3() {\n+    //      +---------+\n+    //      v         |\n+    // a -> c -> d -> e\n+    //           ^    ^\n+    //           |    |\n+    //           b ---+\n+\n+    // \"digraph { a -> c -> d -> e -> c; b -> d; b -> e; }\",\n+    let mut relation = TransitiveRelation::new();\n+    relation.add(\"a\",  \"c\");\n+    relation.add(\"c\",  \"d\");\n+    relation.add(\"e\",  \"e\");\n+    relation.add(\"e\",  \"c\");\n+    relation.add(\"b\",  \"d\");\n+    relation.add(\"b\",  \"e\");\n+\n+    assert_eq!(relation.minimal_upper_bounds(&\"a\", &\"b\"), vec![&\"c\"]);\n+}\n+\n+/*\n+    \"digraph { a -> c -> d -> e -> c; a -> d; b -> e; }\"\n+*/"}]}