{"sha": "2d3b96691e4e2aa9e724a232d6b8b00207565eaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkM2I5NjY5MWU0ZTJhYTllNzI0YTIzMmQ2YjhiMDAyMDc1NjVlYWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-30T21:22:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-30T21:22:40Z"}, "message": "Auto merge of #45497 - mikhail-m1:dump-mir-graphviz, r=nikomatsakis\n\nadd graphvis DOT files to dump mir directory\n\nr? @nikomatsakis", "tree": {"sha": "5f1b811c836cbd9dec08c89282ee306cc49f8770", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f1b811c836cbd9dec08c89282ee306cc49f8770"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d3b96691e4e2aa9e724a232d6b8b00207565eaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d3b96691e4e2aa9e724a232d6b8b00207565eaf", "html_url": "https://github.com/rust-lang/rust/commit/2d3b96691e4e2aa9e724a232d6b8b00207565eaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d3b96691e4e2aa9e724a232d6b8b00207565eaf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0fe716dbcbf2363ab8f929325d32a17e51039d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0fe716dbcbf2363ab8f929325d32a17e51039d0", "html_url": "https://github.com/rust-lang/rust/commit/f0fe716dbcbf2363ab8f929325d32a17e51039d0"}, {"sha": "b2c2ba4eb53329672f0965d2d643049fc4417835", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c2ba4eb53329672f0965d2d643049fc4417835", "html_url": "https://github.com/rust-lang/rust/commit/b2c2ba4eb53329672f0965d2d643049fc4417835"}], "stats": {"total": 56, "additions": 39, "deletions": 17}, "files": [{"sha": "0f8312abc3f9f10f7f75a0fe6d4df1dd16866ee3", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2d3b96691e4e2aa9e724a232d6b8b00207565eaf/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d3b96691e4e2aa9e724a232d6b8b00207565eaf/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=2d3b96691e4e2aa9e724a232d6b8b00207565eaf", "patch": "@@ -1057,6 +1057,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"dump MIR state at various points in translation\"),\n     dump_mir_dir: Option<String> = (None, parse_opt_string, [UNTRACKED],\n           \"the directory the MIR is dumped into\"),\n+    dump_mir_graphviz: bool = (false, parse_bool, [UNTRACKED],\n+          \"in addition to `.mir` files, create graphviz `.dot` files\"),\n     dump_mir_exclude_pass_number: bool = (false, parse_bool, [UNTRACKED],\n           \"if set, exclude the pass number when dumping MIR (used in tests)\"),\n     mir_emit_validate: usize = (0, parse_uint, [TRACKED],\n@@ -2609,6 +2611,8 @@ mod tests {\n         assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n         opts.debugging_opts.dump_mir_dir = Some(String::from(\"abc\"));\n         assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n+        opts.debugging_opts.dump_mir_graphviz = true;\n+        assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n \n         // Make sure changing a [TRACKED] option changes the hash\n         opts = reference.clone();"}, {"sha": "cec8067530b6119563798853f61f566fc1a0c52b", "filename": "src/librustc_mir/util/graphviz.rs", "status": "modified", "additions": 26, "deletions": 17, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/2d3b96691e4e2aa9e724a232d6b8b00207565eaf/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d3b96691e4e2aa9e724a232d6b8b00207565eaf/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs?ref=2d3b96691e4e2aa9e724a232d6b8b00207565eaf", "patch": "@@ -30,29 +30,38 @@ pub fn write_mir_graphviz<'a, 'tcx, W>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     for def_id in dump_mir_def_ids(tcx, single) {\n         let nodeid = tcx.hir.as_local_node_id(def_id).unwrap();\n         let mir = &tcx.optimized_mir(def_id);\n+        write_mir_fn_graphviz(tcx, nodeid, mir, w)?;\n+    }\n+    Ok(())\n+}\n \n-        writeln!(w, \"digraph Mir_{} {{\", nodeid)?;\n+/// Write a graphviz DOT graph of the MIR.\n+pub fn write_mir_fn_graphviz<'a, 'tcx, W>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                                        nodeid: NodeId,\n+                                        mir: &Mir,\n+                                        w: &mut W) -> io::Result<()>\n+    where W: Write\n+{\n+    writeln!(w, \"digraph Mir_{} {{\", nodeid)?;\n \n-        // Global graph properties\n-        writeln!(w, r#\"    graph [fontname=\"monospace\"];\"#)?;\n-        writeln!(w, r#\"    node [fontname=\"monospace\"];\"#)?;\n-        writeln!(w, r#\"    edge [fontname=\"monospace\"];\"#)?;\n+    // Global graph properties\n+    writeln!(w, r#\"    graph [fontname=\"monospace\"];\"#)?;\n+    writeln!(w, r#\"    node [fontname=\"monospace\"];\"#)?;\n+    writeln!(w, r#\"    edge [fontname=\"monospace\"];\"#)?;\n \n-        // Graph label\n-        write_graph_label(tcx, nodeid, mir, w)?;\n+    // Graph label\n+    write_graph_label(tcx, nodeid, mir, w)?;\n \n-        // Nodes\n-        for (block, _) in mir.basic_blocks().iter_enumerated() {\n-            write_node(block, mir, w)?;\n-        }\n+    // Nodes\n+    for (block, _) in mir.basic_blocks().iter_enumerated() {\n+        write_node(block, mir, w)?;\n+    }\n \n-        // Edges\n-        for (source, _) in mir.basic_blocks().iter_enumerated() {\n-            write_edges(source, mir, w)?;\n-        }\n-        writeln!(w, \"}}\")?\n+    // Edges\n+    for (source, _) in mir.basic_blocks().iter_enumerated() {\n+        write_edges(source, mir, w)?;\n     }\n-    Ok(())\n+    writeln!(w, \"}}\")\n }\n \n /// Write a graphviz HTML-styled label for the given basic block, with"}, {"sha": "9f61feabe4114492063df25ad57a94f12ee14b0e", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2d3b96691e4e2aa9e724a232d6b8b00207565eaf/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d3b96691e4e2aa9e724a232d6b8b00207565eaf/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=2d3b96691e4e2aa9e724a232d6b8b00207565eaf", "patch": "@@ -20,6 +20,7 @@ use std::fmt::Display;\n use std::fs;\n use std::io::{self, Write};\n use std::path::{PathBuf, Path};\n+use super::graphviz::write_mir_fn_graphviz;\n \n const INDENT: &'static str = \"    \";\n /// Alignment for lining up comments following MIR statements\n@@ -149,6 +150,14 @@ where\n         extra_data(PassWhere::AfterCFG, &mut file)?;\n         Ok(())\n     });\n+\n+    if tcx.sess.opts.debugging_opts.dump_mir_graphviz {\n+        file_path.set_extension(\"dot\");\n+        let _ = fs::File::create(&file_path).and_then(|mut file| {\n+            write_mir_fn_graphviz(tcx, source.item_id(), mir, &mut file)?;\n+            Ok(())\n+        });\n+    }\n }\n \n /// Write out a human-readable textual representation for the given MIR."}]}