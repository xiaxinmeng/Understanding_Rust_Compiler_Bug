{"sha": "efbf7ca61e6d024cd73c75bbbe43999350b55ac1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYmY3Y2E2MWU2ZDAyNGNkNzNjNzViYmJlNDM5OTkzNTBiNTVhYzE=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-06-28T19:05:48Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-07-18T01:25:26Z"}, "message": "Use From to convert BinOpKind", "tree": {"sha": "6d97fb63b9daadb3172daa0469dc97543e8dfa79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d97fb63b9daadb3172daa0469dc97543e8dfa79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efbf7ca61e6d024cd73c75bbbe43999350b55ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efbf7ca61e6d024cd73c75bbbe43999350b55ac1", "html_url": "https://github.com/rust-lang/rust/commit/efbf7ca61e6d024cd73c75bbbe43999350b55ac1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efbf7ca61e6d024cd73c75bbbe43999350b55ac1/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9c3991d3081c79bd712d754e6f51f456e603c6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c3991d3081c79bd712d754e6f51f456e603c6c", "html_url": "https://github.com/rust-lang/rust/commit/e9c3991d3081c79bd712d754e6f51f456e603c6c"}], "stats": {"total": 33, "additions": 4, "deletions": 29}, "files": [{"sha": "421941918374f6d524a00453164b361ba113a08c", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efbf7ca61e6d024cd73c75bbbe43999350b55ac1/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efbf7ca61e6d024cd73c75bbbe43999350b55ac1/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=efbf7ca61e6d024cd73c75bbbe43999350b55ac1", "patch": "@@ -2,7 +2,7 @@ use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::implements_trait;\n use clippy_utils::{eq_expr_value, get_trait_def_id, trait_ref_of_method};\n-use clippy_utils::{higher, paths, sugg};\n+use clippy_utils::{paths, sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n@@ -206,7 +206,7 @@ fn lint_misrefactored_assign_op(\n             if let (Some(snip_a), Some(snip_r)) = (snippet_opt(cx, assignee.span), snippet_opt(cx, rhs_other.span)) {\n                 let a = &sugg::Sugg::hir(cx, assignee, \"..\");\n                 let r = &sugg::Sugg::hir(cx, rhs, \"..\");\n-                let long = format!(\"{} = {}\", snip_a, sugg::make_binop(higher::binop(op.node), a, r));\n+                let long = format!(\"{} = {}\", snip_a, sugg::make_binop(op.node.into(), a, r));\n                 diag.span_suggestion(\n                     expr.span,\n                     &format!("}, {"sha": "d39cabfb2825beb141d1afacd5cecde3b087866d", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efbf7ca61e6d024cd73c75bbbe43999350b55ac1/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efbf7ca61e6d024cd73c75bbbe43999350b55ac1/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=efbf7ca61e6d024cd73c75bbbe43999350b55ac1", "patch": "@@ -102,7 +102,7 @@ impl<'tcx> LateLintPass<'tcx> for EqOp {\n             if macro_with_not_op(&left.kind) || macro_with_not_op(&right.kind) {\n                 return;\n             }\n-            if is_useless_with_eq_exprs(higher::binop(op.node)) && eq_expr_value(cx, left, right) {\n+            if is_useless_with_eq_exprs(op.node.into()) && eq_expr_value(cx, left, right) {\n                 span_lint(\n                     cx,\n                     EQ_OP,"}, {"sha": "f32f1109b08e64ec963dea3b653f120e816d0f0d", "filename": "clippy_utils/src/higher.rs", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/efbf7ca61e6d024cd73c75bbbe43999350b55ac1/clippy_utils%2Fsrc%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efbf7ca61e6d024cd73c75bbbe43999350b55ac1/clippy_utils%2Fsrc%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fhigher.rs?ref=efbf7ca61e6d024cd73c75bbbe43999350b55ac1", "patch": "@@ -11,31 +11,6 @@ use rustc_hir::{BorrowKind, Expr, ExprKind, StmtKind, UnOp};\n use rustc_lint::LateContext;\n use rustc_span::{sym, ExpnKind, Span, Symbol};\n \n-/// Converts a hir binary operator to the corresponding `ast` type.\n-#[must_use]\n-pub fn binop(op: hir::BinOpKind) -> ast::BinOpKind {\n-    match op {\n-        hir::BinOpKind::Eq => ast::BinOpKind::Eq,\n-        hir::BinOpKind::Ge => ast::BinOpKind::Ge,\n-        hir::BinOpKind::Gt => ast::BinOpKind::Gt,\n-        hir::BinOpKind::Le => ast::BinOpKind::Le,\n-        hir::BinOpKind::Lt => ast::BinOpKind::Lt,\n-        hir::BinOpKind::Ne => ast::BinOpKind::Ne,\n-        hir::BinOpKind::Or => ast::BinOpKind::Or,\n-        hir::BinOpKind::Add => ast::BinOpKind::Add,\n-        hir::BinOpKind::And => ast::BinOpKind::And,\n-        hir::BinOpKind::BitAnd => ast::BinOpKind::BitAnd,\n-        hir::BinOpKind::BitOr => ast::BinOpKind::BitOr,\n-        hir::BinOpKind::BitXor => ast::BinOpKind::BitXor,\n-        hir::BinOpKind::Div => ast::BinOpKind::Div,\n-        hir::BinOpKind::Mul => ast::BinOpKind::Mul,\n-        hir::BinOpKind::Rem => ast::BinOpKind::Rem,\n-        hir::BinOpKind::Shl => ast::BinOpKind::Shl,\n-        hir::BinOpKind::Shr => ast::BinOpKind::Shr,\n-        hir::BinOpKind::Sub => ast::BinOpKind::Sub,\n-    }\n-}\n-\n /// Represent a range akin to `ast::ExprKind::Range`.\n #[derive(Debug, Copy, Clone)]\n pub struct Range<'a> {"}, {"sha": "3bd75b10e90588d45f47832a08e0ea6851737398", "filename": "clippy_utils/src/sugg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efbf7ca61e6d024cd73c75bbbe43999350b55ac1/clippy_utils%2Fsrc%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efbf7ca61e6d024cd73c75bbbe43999350b55ac1/clippy_utils%2Fsrc%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fsugg.rs?ref=efbf7ca61e6d024cd73c75bbbe43999350b55ac1", "patch": "@@ -154,7 +154,7 @@ impl<'a> Sugg<'a> {\n             | hir::ExprKind::Err => Sugg::NonParen(snippet),\n             hir::ExprKind::Assign(..) => Sugg::BinOp(AssocOp::Assign, snippet),\n             hir::ExprKind::AssignOp(op, ..) => Sugg::BinOp(hirbinop2assignop(op), snippet),\n-            hir::ExprKind::Binary(op, ..) => Sugg::BinOp(AssocOp::from_ast_binop(higher::binop(op.node)), snippet),\n+            hir::ExprKind::Binary(op, ..) => Sugg::BinOp(AssocOp::from_ast_binop(op.node.into()), snippet),\n             hir::ExprKind::Cast(..) => Sugg::BinOp(AssocOp::As, snippet),\n             hir::ExprKind::Type(..) => Sugg::BinOp(AssocOp::Colon, snippet),\n         }"}]}