{"sha": "9a6d7fb9b068a0c35e469975d4b00992e0f9b8a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNmQ3ZmI5YjA2OGEwYzM1ZTQ2OTk3NWQ0YjAwOTkyZTBmOWI4YTg=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-15T00:19:26Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-17T12:45:14Z"}, "message": "factor out useful helper.", "tree": {"sha": "ec40996bc85875c779aa17b1edcc929887ced2ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec40996bc85875c779aa17b1edcc929887ced2ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a6d7fb9b068a0c35e469975d4b00992e0f9b8a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a6d7fb9b068a0c35e469975d4b00992e0f9b8a8", "html_url": "https://github.com/rust-lang/rust/commit/9a6d7fb9b068a0c35e469975d4b00992e0f9b8a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a6d7fb9b068a0c35e469975d4b00992e0f9b8a8/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7fb57529aded92c4f470568e6b5ea7a5a28f6a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7fb57529aded92c4f470568e6b5ea7a5a28f6a4", "html_url": "https://github.com/rust-lang/rust/commit/b7fb57529aded92c4f470568e6b5ea7a5a28f6a4"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "023f9e0bda1865ea41e65bee0527ad3a5269c447", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/9a6d7fb9b068a0c35e469975d4b00992e0f9b8a8/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a6d7fb9b068a0c35e469975d4b00992e0f9b8a8/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=9a6d7fb9b068a0c35e469975d4b00992e0f9b8a8", "patch": "@@ -566,6 +566,25 @@ fn cast_shift_rhs<F, G>(op: ast::BinOp_,\n     }\n }\n \n+pub fn llty_and_min_for_signed_ty<'blk, 'tcx>(cx: Block<'blk, 'tcx>,\n+                                              val_t: Ty<'tcx>) -> (Type, u64) {\n+    match val_t.sty {\n+        ty::ty_int(t) => {\n+            let llty = Type::int_from_ty(cx.ccx(), t);\n+            let min = match t {\n+                ast::TyIs if llty == Type::i32(cx.ccx()) => i32::MIN as u64,\n+                ast::TyIs => i64::MIN as u64,\n+                ast::TyI8 => i8::MIN as u64,\n+                ast::TyI16 => i16::MIN as u64,\n+                ast::TyI32 => i32::MIN as u64,\n+                ast::TyI64 => i64::MIN as u64,\n+            };\n+            (llty, min)\n+        }\n+        _ => unreachable!(),\n+    }\n+}\n+\n pub fn fail_if_zero_or_overflows<'blk, 'tcx>(\n                                 cx: Block<'blk, 'tcx>,\n                                 call_info: NodeIdAndSpan,\n@@ -620,21 +639,7 @@ pub fn fail_if_zero_or_overflows<'blk, 'tcx>(\n     // signed division/remainder which would trigger overflow. For unsigned\n     // integers, no action beyond checking for zero need be taken.\n     if is_signed {\n-        let (llty, min) = match rhs_t.sty {\n-            ty::ty_int(t) => {\n-                let llty = Type::int_from_ty(cx.ccx(), t);\n-                let min = match t {\n-                    ast::TyIs if llty == Type::i32(cx.ccx()) => i32::MIN as u64,\n-                    ast::TyIs => i64::MIN as u64,\n-                    ast::TyI8 => i8::MIN as u64,\n-                    ast::TyI16 => i16::MIN as u64,\n-                    ast::TyI32 => i32::MIN as u64,\n-                    ast::TyI64 => i64::MIN as u64,\n-                };\n-                (llty, min)\n-            }\n-            _ => unreachable!(),\n-        };\n+        let (llty, min) = llty_and_min_for_signed_ty(cx, rhs_t);\n         let minus_one = ICmp(bcx, llvm::IntEQ, rhs,\n                              C_integral(llty, !0, false), debug_loc);\n         with_cond(bcx, minus_one, |bcx| {"}]}