{"sha": "8f7fe4a303e8b62ec1906576be2a80248d78d1ce", "node_id": "C_kwDOAAsO6NoAKDhmN2ZlNGEzMDNlOGI2MmVjMTkwNjU3NmJlMmE4MDI0OGQ3OGQxY2U", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-25T16:08:43Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-25T16:12:44Z"}, "message": "Remove `tcx.mk_trait_ref`", "tree": {"sha": "7269a6b2db37dc8dacb256d94ed4c622592f90c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7269a6b2db37dc8dacb256d94ed4c622592f90c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f7fe4a303e8b62ec1906576be2a80248d78d1ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f7fe4a303e8b62ec1906576be2a80248d78d1ce", "html_url": "https://github.com/rust-lang/rust/commit/8f7fe4a303e8b62ec1906576be2a80248d78d1ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f7fe4a303e8b62ec1906576be2a80248d78d1ce/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46b01abbcd4160f0d4241bc8ec27121713d9abae", "url": "https://api.github.com/repos/rust-lang/rust/commits/46b01abbcd4160f0d4241bc8ec27121713d9abae", "html_url": "https://github.com/rust-lang/rust/commit/46b01abbcd4160f0d4241bc8ec27121713d9abae"}], "stats": {"total": 18, "additions": 0, "deletions": 18}, "files": [{"sha": "ddde5e4e97c9920a24287fdbd2bc6535817254bc", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8f7fe4a303e8b62ec1906576be2a80248d78d1ce/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7fe4a303e8b62ec1906576be2a80248d78d1ce/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=8f7fe4a303e8b62ec1906576be2a80248d78d1ce", "patch": "@@ -2261,15 +2261,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.mk_substs_from_iter(iter::once(self_ty.into()).chain(rest))\n     }\n \n-    pub fn mk_trait_ref(\n-        self,\n-        trait_def_id: DefId,\n-        substs: impl IntoIterator<Item: Into<GenericArg<'tcx>>>,\n-    ) -> ty::TraitRef<'tcx> {\n-        let substs = self.check_and_mk_substs(trait_def_id, substs);\n-        ty::TraitRef { def_id: trait_def_id, substs, _use_mk_trait_ref_instead: () }\n-    }\n-\n     pub fn mk_alias_ty(\n         self,\n         def_id: DefId,\n@@ -2473,15 +2464,6 @@ impl<'tcx> TyCtxtAt<'tcx> {\n     pub fn ty_error_with_message(self, msg: &str) -> Ty<'tcx> {\n         self.tcx.ty_error_with_message(self.span, msg)\n     }\n-\n-    pub fn mk_trait_ref(\n-        self,\n-        trait_lang_item: LangItem,\n-        substs: impl IntoIterator<Item: Into<ty::GenericArg<'tcx>>>,\n-    ) -> ty::TraitRef<'tcx> {\n-        let trait_def_id = self.require_lang_item(trait_lang_item, Some(self.span));\n-        self.tcx.mk_trait_ref(trait_def_id, substs)\n-    }\n }\n \n /// Parameter attributes that can only be determined by examining the body of a function instead"}]}