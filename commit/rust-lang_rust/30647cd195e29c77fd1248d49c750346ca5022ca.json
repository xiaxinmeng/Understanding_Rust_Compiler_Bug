{"sha": "30647cd195e29c77fd1248d49c750346ca5022ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNjQ3Y2QxOTVlMjljNzdmZDEyNDhkNDljNzUwMzQ2Y2E1MDIyY2E=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-06-15T16:36:58Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-06-15T16:36:58Z"}, "message": "Some more cleanup", "tree": {"sha": "e556559bfb2c1fdb87984b259e40fdfb13773631", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e556559bfb2c1fdb87984b259e40fdfb13773631"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30647cd195e29c77fd1248d49c750346ca5022ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30647cd195e29c77fd1248d49c750346ca5022ca", "html_url": "https://github.com/rust-lang/rust/commit/30647cd195e29c77fd1248d49c750346ca5022ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30647cd195e29c77fd1248d49c750346ca5022ca/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94a6aff9f86de0b670670baf36b95bc881d87ccc", "url": "https://api.github.com/repos/rust-lang/rust/commits/94a6aff9f86de0b670670baf36b95bc881d87ccc", "html_url": "https://github.com/rust-lang/rust/commit/94a6aff9f86de0b670670baf36b95bc881d87ccc"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5105588eeb51666f5ceed70c52318aed9bdb5efd", "filename": "crates/ra_hir/src/ty/traits/chalk.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/30647cd195e29c77fd1248d49c750346ca5022ca/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30647cd195e29c77fd1248d49c750346ca5022ca/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits%2Fchalk.rs?ref=30647cd195e29c77fd1248d49c750346ca5022ca", "patch": "@@ -273,8 +273,9 @@ where\n             id,\n             name: lalrpop_intern::intern(&type_alias.name(self.db).to_string()),\n             parameter_kinds,\n-            bounds: vec![],        // FIXME\n-            where_clauses: vec![], // FIXME\n+            // FIXME add bounds and where clauses\n+            bounds: vec![],\n+            where_clauses: vec![],\n         };\n         Arc::new(datum)\n     }\n@@ -429,13 +430,12 @@ where\n             .filter_map(|t| {\n                 let assoc_ty = trait_.associated_type_by_name(self.db, t.name(self.db))?;\n                 let ty = self.db.type_for_def(t.into(), crate::Namespace::Types).subst(&bound_vars);\n-                debug!(\"ty = {}\", ty.display(self.db));\n                 Some(chalk_rust_ir::AssociatedTyValue {\n                     impl_id,\n                     associated_ty_id: assoc_ty.to_chalk(self.db),\n                     value: chalk_ir::Binders {\n                         value: chalk_rust_ir::AssociatedTyValueBound { ty: ty.to_chalk(self.db) },\n-                        binders: vec![], // FIXME add generic params (generic associated types)\n+                        binders: vec![], // we don't support GATs yet\n                     },\n                 })\n             })"}]}