{"sha": "eb5ac84c8e14184b9b76fe088b5f5120e887ee35", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNWFjODRjOGUxNDE4NGI5Yjc2ZmUwODhiNWY1MTIwZTg4N2VlMzU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-15T21:42:31Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-15T21:53:12Z"}, "message": "iterator: add a `find` adaptor", "tree": {"sha": "6ab431c32fe519a2224b21ae9d1f877559fe75b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ab431c32fe519a2224b21ae9d1f877559fe75b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb5ac84c8e14184b9b76fe088b5f5120e887ee35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb5ac84c8e14184b9b76fe088b5f5120e887ee35", "html_url": "https://github.com/rust-lang/rust/commit/eb5ac84c8e14184b9b76fe088b5f5120e887ee35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb5ac84c8e14184b9b76fe088b5f5120e887ee35/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eac0200f18bfe19646ae5dce56acc325629224cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/eac0200f18bfe19646ae5dce56acc325629224cb", "html_url": "https://github.com/rust-lang/rust/commit/eac0200f18bfe19646ae5dce56acc325629224cb"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "7aa273f7cd81df32577c7402d85841804d19bacf", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/eb5ac84c8e14184b9b76fe088b5f5120e887ee35/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb5ac84c8e14184b9b76fe088b5f5120e887ee35/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=eb5ac84c8e14184b9b76fe088b5f5120e887ee35", "patch": "@@ -308,6 +308,9 @@ pub trait IteratorUtil<A> {\n     /// assert!(!it.any_(|&x| *x == 3));\n     /// ~~~\n     fn any_(&mut self, f: &fn(A) -> bool) -> bool;\n+\n+    /// Return the first element satisfying the specified predicate\n+    fn find(&mut self, predicate: &fn(&A) -> bool) -> Option<A>;\n }\n \n /// Iterator adaptors provided for every `Iterator` implementation. The adaptor objects are also\n@@ -421,7 +424,7 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n                 None    => { break; }\n             }\n         }\n-        return accum;\n+        accum\n     }\n \n     /// Count the number of items yielded by an iterator\n@@ -431,13 +434,22 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n     #[inline(always)]\n     fn all(&mut self, f: &fn(A) -> bool) -> bool {\n         for self.advance |x| { if !f(x) { return false; } }\n-        return true;\n+        true\n     }\n \n     #[inline(always)]\n     fn any_(&mut self, f: &fn(A) -> bool) -> bool {\n         for self.advance |x| { if f(x) { return true; } }\n-        return false;\n+        false\n+    }\n+\n+    /// Return the first element satisfying the specified predicate\n+    #[inline(always)]\n+    fn find(&mut self, predicate: &fn(&A) -> bool) -> Option<A> {\n+        for self.advance |x| {\n+            if predicate(&x) { return Some(x) }\n+        }\n+        None\n     }\n }\n \n@@ -1055,4 +1067,12 @@ mod tests {\n         assert!(!v.iter().any_(|&x| x > 100));\n         assert!(!v.slice(0, 0).iter().any_(|_| fail!()));\n     }\n+\n+    #[test]\n+    fn test_find() {\n+        let v = &[1, 3, 9, 27, 103, 14, 11];\n+        assert_eq!(*v.iter().find(|x| *x & 1 == 0).unwrap(), 14);\n+        assert_eq!(*v.iter().find(|x| *x % 3 == 0).unwrap(), 3);\n+        assert!(v.iter().find(|x| *x % 12 == 0).is_none());\n+    }\n }"}]}