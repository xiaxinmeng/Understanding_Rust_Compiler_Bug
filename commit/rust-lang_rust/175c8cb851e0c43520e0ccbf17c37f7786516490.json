{"sha": "175c8cb851e0c43520e0ccbf17c37f7786516490", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NWM4Y2I4NTFlMGM0MzUyMGUwY2NiZjE3YzM3Zjc3ODY1MTY0OTA=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-31T15:54:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-31T15:54:53Z"}, "message": "Rollup merge of #86362 - ptrojahn:insert_vars_and_temps, r=jackh726\n\nAvoid cloning LocalDecls", "tree": {"sha": "f446beb1ef8a84aa8e1a895fd3f1a34c7e36309b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f446beb1ef8a84aa8e1a895fd3f1a34c7e36309b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/175c8cb851e0c43520e0ccbf17c37f7786516490", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhLlDNCRBK7hj4Ov3rIwAA/bAIAFS8MHXgJ1eqq/j5S0F8qILV\nDO5+wqRm3tFK1ep6HCmt4fk1uCNe7b2XZpE+ZIzQwI2WkcAsq8PHHf2/mCCTZGha\nUyAjAeXRMa98xunnQhsilLDBH535P0wSPV+vVU6ahs8nn1wTlp6gz8IWpob1Sw2Y\njI5VYsxn5Zmxruw9NM9gMOT2BHy1gqo/8GMkqLKex4mS+flGBiSZ2wC1qf5VyEpb\nqXjC0O4XIM3ltiwPw6jKAdxx29LJM7pjKCrZiaReDjijcV6Yhgq+4Z7VkHPlwhyw\nicPogbJaFJQgUuJEqLepecoknQ3wno3ST9qnVSzvAm5VgeqhxfMgKvx2yKQ8/X4=\n=tFmr\n-----END PGP SIGNATURE-----\n", "payload": "tree f446beb1ef8a84aa8e1a895fd3f1a34c7e36309b\nparent e7a247dba431d6fa505ca0393ffcab5bfc65e9cb\nparent 7bcc9ae422e03cfc7855363c7e39cf737b8d3ed6\nauthor Mara Bos <m-ou.se@m-ou.se> 1630425293 +0200\ncommitter GitHub <noreply@github.com> 1630425293 +0200\n\nRollup merge of #86362 - ptrojahn:insert_vars_and_temps, r=jackh726\n\nAvoid cloning LocalDecls\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/175c8cb851e0c43520e0ccbf17c37f7786516490", "html_url": "https://github.com/rust-lang/rust/commit/175c8cb851e0c43520e0ccbf17c37f7786516490", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/175c8cb851e0c43520e0ccbf17c37f7786516490/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7a247dba431d6fa505ca0393ffcab5bfc65e9cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7a247dba431d6fa505ca0393ffcab5bfc65e9cb", "html_url": "https://github.com/rust-lang/rust/commit/e7a247dba431d6fa505ca0393ffcab5bfc65e9cb"}, {"sha": "7bcc9ae422e03cfc7855363c7e39cf737b8d3ed6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bcc9ae422e03cfc7855363c7e39cf737b8d3ed6", "html_url": "https://github.com/rust-lang/rust/commit/7bcc9ae422e03cfc7855363c7e39cf737b8d3ed6"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "346a9e8021731b233ba2ae8e62a74155618d5d76", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/175c8cb851e0c43520e0ccbf17c37f7786516490/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/175c8cb851e0c43520e0ccbf17c37f7786516490/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=175c8cb851e0c43520e0ccbf17c37f7786516490", "patch": "@@ -426,6 +426,11 @@ impl<'tcx> Body<'tcx> {\n         (arg_count + 1..local_count).map(Local::new)\n     }\n \n+    #[inline]\n+    pub fn drain_vars_and_temps<'a>(&'a mut self) -> impl Iterator<Item = LocalDecl<'tcx>> + 'a {\n+        self.local_decls.drain(self.arg_count + 1..)\n+    }\n+\n     /// Changes a statement to a nop. This is both faster than deleting instructions and avoids\n     /// invalidating statement indices in `Location`s.\n     pub fn make_statement_nop(&mut self, location: Location) {"}, {"sha": "8e9da31eba11f04bcff01ea0c3348ce8e48d0ef1", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/175c8cb851e0c43520e0ccbf17c37f7786516490/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/175c8cb851e0c43520e0ccbf17c37f7786516490/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=175c8cb851e0c43520e0ccbf17c37f7786516490", "patch": "@@ -607,13 +607,7 @@ impl Inliner<'tcx> {\n                 }\n \n                 // Insert all of the (mapped) parts of the callee body into the caller.\n-                caller_body.local_decls.extend(\n-                    // FIXME(eddyb) make `Range<Local>` iterable so that we can use\n-                    // `callee_body.local_decls.drain(callee_body.vars_and_temps())`\n-                    callee_body\n-                        .vars_and_temps_iter()\n-                        .map(|local| callee_body.local_decls[local].clone()),\n-                );\n+                caller_body.local_decls.extend(callee_body.drain_vars_and_temps());\n                 caller_body.source_scopes.extend(&mut callee_body.source_scopes.drain(..));\n                 caller_body.var_debug_info.append(&mut callee_body.var_debug_info);\n                 caller_body.basic_blocks_mut().extend(callee_body.basic_blocks_mut().drain(..));"}]}