{"sha": "8547ea32db4a6f2c5b27827b30f372859de22fbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NDdlYTMyZGI0YTZmMmM1YjI3ODI3YjMwZjM3Mjg1OWRlMjJmYmI=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-11-26T23:56:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-26T23:56:25Z"}, "message": "Rollup merge of #66788 - ecstatic-morse:const-fn-unreachable, r=Centril\n\nAllow `Unreachable` terminators through `min_const_fn` checks\n\nResolves #66756.\n\nThis allows `Unreachable` terminators through the `min_const_fn` checks if `#![feature(const_if_match)]` is enabled. We could probably just allow them with no feature flag, but it seems okay to be conservative here.\n\nr? @oli-obk", "tree": {"sha": "037952914f0ba47a34c90d43be9c92c19e940e7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/037952914f0ba47a34c90d43be9c92c19e940e7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8547ea32db4a6f2c5b27827b30f372859de22fbb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd3bupCRBK7hj4Ov3rIwAAdHIIAEthcDao/Ry0ZjFrv/3+s4fb\nyJdpLB2mngEhM3OOeQwpDcrm16D+oOSpfy+wU8UwPb+ecdZO+P9/FmIukw8s1LTj\nZAa2U5ooda/444vGeomVzlMp8rNJnHbN5ABOFSiLiUwwHmrXexbn+Az+EwxVG6c9\nkS/AJZJp7OhScNWqHOVKpIEQIFfA9qLcaY0hohnEOdWR5DvfCM4RtKgmacXCv7gJ\nOuRZ//pXwHD5/ITrr/7WQPz7E/AIuksBGJTEklLDCmZrswp+P6x+Vxk1vv64JSJ3\nMebZGux79MAk0ruy+D47shqpHoiHOx7WRUSnH0IiiWMfUit9Lhuw11ilC+JhnU0=\n=K2BO\n-----END PGP SIGNATURE-----\n", "payload": "tree 037952914f0ba47a34c90d43be9c92c19e940e7e\nparent 7f166e44ff187b517342a5ace95665743b2d222f\nparent a626bf68b882d41dc608692dc52b2a9fb06bff26\nauthor Tyler Mandry <tmandry@gmail.com> 1574812585 -0600\ncommitter GitHub <noreply@github.com> 1574812585 -0600\n\nRollup merge of #66788 - ecstatic-morse:const-fn-unreachable, r=Centril\n\nAllow `Unreachable` terminators through `min_const_fn` checks\n\nResolves #66756.\n\nThis allows `Unreachable` terminators through the `min_const_fn` checks if `#![feature(const_if_match)]` is enabled. We could probably just allow them with no feature flag, but it seems okay to be conservative here.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8547ea32db4a6f2c5b27827b30f372859de22fbb", "html_url": "https://github.com/rust-lang/rust/commit/8547ea32db4a6f2c5b27827b30f372859de22fbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8547ea32db4a6f2c5b27827b30f372859de22fbb/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f166e44ff187b517342a5ace95665743b2d222f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f166e44ff187b517342a5ace95665743b2d222f", "html_url": "https://github.com/rust-lang/rust/commit/7f166e44ff187b517342a5ace95665743b2d222f"}, {"sha": "a626bf68b882d41dc608692dc52b2a9fb06bff26", "url": "https://api.github.com/repos/rust-lang/rust/commits/a626bf68b882d41dc608692dc52b2a9fb06bff26", "html_url": "https://github.com/rust-lang/rust/commit/a626bf68b882d41dc608692dc52b2a9fb06bff26"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "81f4c277f4d76746146b02db115dda17cef98ca7", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8547ea32db4a6f2c5b27827b30f372859de22fbb/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8547ea32db4a6f2c5b27827b30f372859de22fbb/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=8547ea32db4a6f2c5b27827b30f372859de22fbb", "patch": "@@ -337,6 +337,9 @@ fn check_terminator(\n             check_operand(tcx, discr, span, def_id, body)\n         }\n \n+        // FIXME(ecstaticmorse): We probably want to allow `Unreachable` unconditionally.\n+        TerminatorKind::Unreachable if tcx.features().const_if_match => Ok(()),\n+\n         | TerminatorKind::Abort | TerminatorKind::Unreachable => {\n             Err((span, \"const fn with unreachable code is not stable\".into()))\n         }"}, {"sha": "9e22151f2e9eed5686a0aefce329160f3d9a4573", "filename": "src/test/ui/consts/control-flow/exhaustive-c-like-enum-match.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8547ea32db4a6f2c5b27827b30f372859de22fbb/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fexhaustive-c-like-enum-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8547ea32db4a6f2c5b27827b30f372859de22fbb/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fexhaustive-c-like-enum-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fexhaustive-c-like-enum-match.rs?ref=8547ea32db4a6f2c5b27827b30f372859de22fbb", "patch": "@@ -0,0 +1,21 @@\n+// Test for <https://github.com/rust-lang/rust/issues/66756>\n+\n+// check-pass\n+\n+#![feature(const_if_match)]\n+\n+enum E {\n+    A,\n+    B,\n+    C\n+}\n+\n+const fn f(e: E) {\n+    match e {\n+        E::A => {}\n+        E::B => {}\n+        E::C => {}\n+    }\n+}\n+\n+fn main() {}"}]}