{"sha": "68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4Y2MxMmFiNzFjNTBhZWExZjE3ZTZjMWNjNjMxYmI0YzZhOGViYjU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-03T17:36:48Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-03T17:36:48Z"}, "message": "Fix non-existent-field ICE for generic fields.\n\nCo-authored-by: eddyb <eddyb@lyken.rs>", "tree": {"sha": "6e35e6afadf4b26d66d8bd075398b1bbcdb1a4dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e35e6afadf4b26d66d8bd075398b1bbcdb1a4dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5", "html_url": "https://github.com/rust-lang/rust/commit/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ad11e2e25919b75ebbc36d7910f2a1126a7e873", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad11e2e25919b75ebbc36d7910f2a1126a7e873", "html_url": "https://github.com/rust-lang/rust/commit/6ad11e2e25919b75ebbc36d7910f2a1126a7e873"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "33b1c0bb2c97cb8a50ed6a8a3ef688370d23a5e7", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5", "patch": "@@ -1974,7 +1974,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             field_path.push(candidate_field.ident.normalize_to_macros_2_0());\n             let field_ty = candidate_field.ty(self.tcx, subst);\n-            if let Some((nested_fields, _)) = self.get_field_candidates(span, &field_ty) {\n+            if let Some((nested_fields, subst)) = self.get_field_candidates(span, &field_ty) {\n                 for field in nested_fields.iter() {\n                     let ident = field.ident.normalize_to_macros_2_0();\n                     if ident == target_field {"}, {"sha": "e58b4e6ca4d6f8f7f63a7b788ac83218af229243", "filename": "src/test/ui/suggestions/non-existent-field-present-in-subfield.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.fixed?ref=68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5", "patch": "@@ -3,7 +3,7 @@\n struct Foo {\n     first: Bar,\n     _second: u32,\n-    _third: u32,\n+    _third: Vec<String>,\n }\n \n struct Bar {\n@@ -32,7 +32,7 @@ fn main() {\n     let d = D { test: e };\n     let c = C { c: d };\n     let bar = Bar { bar: c };\n-    let fooer = Foo { first: bar, _second: 4, _third: 5 };\n+    let fooer = Foo { first: bar, _second: 4, _third: Vec::new() };\n \n     let _test = &fooer.first.bar.c;\n     //~^ ERROR no field"}, {"sha": "7e273ac23d8c3828167a263459aaac4b9521abc7", "filename": "src/test/ui/suggestions/non-existent-field-present-in-subfield.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield.rs?ref=68cc12ab71c50aea1f17e6c1cc631bb4c6a8ebb5", "patch": "@@ -3,7 +3,7 @@\n struct Foo {\n     first: Bar,\n     _second: u32,\n-    _third: u32,\n+    _third: Vec<String>,\n }\n \n struct Bar {\n@@ -32,7 +32,7 @@ fn main() {\n     let d = D { test: e };\n     let c = C { c: d };\n     let bar = Bar { bar: c };\n-    let fooer = Foo { first: bar, _second: 4, _third: 5 };\n+    let fooer = Foo { first: bar, _second: 4, _third: Vec::new() };\n \n     let _test = &fooer.c;\n     //~^ ERROR no field"}]}