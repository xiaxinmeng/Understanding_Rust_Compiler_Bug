{"sha": "4aef81eb85a47ff123db8204c59c610fa28f8693", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZWY4MWViODVhNDdmZjEyM2RiODIwNGM1OWM2MTBmYTI4Zjg2OTM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-27T13:26:05Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-27T13:26:05Z"}, "message": "Remove `to_ptr` uses", "tree": {"sha": "7843e01188a7adb3df9ae7a1e95ffcb54a6b0f20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7843e01188a7adb3df9ae7a1e95ffcb54a6b0f20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4aef81eb85a47ff123db8204c59c610fa28f8693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4aef81eb85a47ff123db8204c59c610fa28f8693", "html_url": "https://github.com/rust-lang/rust/commit/4aef81eb85a47ff123db8204c59c610fa28f8693", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4aef81eb85a47ff123db8204c59c610fa28f8693/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f1dec05dde67d6def6645ba82e8e7de68776766", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1dec05dde67d6def6645ba82e8e7de68776766", "html_url": "https://github.com/rust-lang/rust/commit/0f1dec05dde67d6def6645ba82e8e7de68776766"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b8bd5f9e57449e0d24847617bf3a045a324743b6", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4aef81eb85a47ff123db8204c59c610fa28f8693/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/4aef81eb85a47ff123db8204c59c610fa28f8693/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=4aef81eb85a47ff123db8204c59c610fa28f8693", "patch": "@@ -1 +1 @@\n-9ae6cedb8d1e37469be1434642a3e403fce50a03\n+8f5f8f916f00f7989a4ebf7b7dbfe1afd605f828"}, {"sha": "5bdd12b4eb1d264eccad6416062344987608c9aa", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4aef81eb85a47ff123db8204c59c610fa28f8693/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4aef81eb85a47ff123db8204c59c610fa28f8693/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=4aef81eb85a47ff123db8204c59c610fa28f8693", "patch": "@@ -271,7 +271,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 )?;\n             }\n             \"__rust_realloc\" => {\n-                let ptr = this.read_scalar(args[0])?.to_ptr()?;\n                 let old_size = this.read_scalar(args[1])?.to_machine_usize(this)?;\n                 let align = this.read_scalar(args[2])?.to_machine_usize(this)?;\n                 let new_size = this.read_scalar(args[3])?.to_machine_usize(this)?;\n@@ -281,6 +280,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 if !align.is_power_of_two() {\n                     throw_unsup!(HeapAllocNonPowerOfTwoAlignment(align));\n                 }\n+                let ptr = this.force_ptr(this.read_scalar(args[0])?.not_undef()?)?;\n                 let align = Align::from_bytes(align).unwrap();\n                 let new_ptr = this.memory.reallocate(\n                     ptr,"}, {"sha": "37aee1f5652c1a9c7e80694b3f1362937c995822", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4aef81eb85a47ff123db8204c59c610fa28f8693/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4aef81eb85a47ff123db8204c59c610fa28f8693/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=4aef81eb85a47ff123db8204c59c610fa28f8693", "patch": "@@ -575,7 +575,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                             // Do it in memory\n                             let mplace = this.force_allocation(dest)?;\n                             mplace.meta.unwrap_none();\n-                            let ptr = mplace.ptr.to_ptr()?;\n+                            let ptr = mplace.ptr.assert_ptr();\n                             // We know the return place is in-bounds\n                             this.memory.get_raw_mut(ptr.alloc_id)?.mark_definedness(\n                                 ptr,"}, {"sha": "18edb603c6cf1ffcc3be91ae2ca7a11cf5bc43b6", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4aef81eb85a47ff123db8204c59c610fa28f8693/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4aef81eb85a47ff123db8204c59c610fa28f8693/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=4aef81eb85a47ff123db8204c59c610fa28f8693", "patch": "@@ -507,7 +507,7 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     ) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n         let protector = if protect { Some(this.frame().extra.call_id) } else { None };\n-        let ptr = place.ptr.to_ptr().expect(\"we should have a proper pointer\");\n+        let ptr = place.ptr.assert_ptr();\n         trace!(\n             \"reborrow: {} reference {:?} derived from {:?} (pointee {}): {:?}, size {}\",\n             kind,"}]}