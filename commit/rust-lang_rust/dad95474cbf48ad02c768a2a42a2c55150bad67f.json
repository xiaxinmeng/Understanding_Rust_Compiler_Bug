{"sha": "dad95474cbf48ad02c768a2a42a2c55150bad67f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZDk1NDc0Y2JmNDhhZDAyYzc2OGEyYTQyYTJjNTUxNTBiYWQ2N2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-05-30T17:41:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-05-30T17:41:38Z"}, "message": "test thread-local key with no dtor", "tree": {"sha": "e0043ac2168d64a26f3925f22a4efca2c9847c10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0043ac2168d64a26f3925f22a4efca2c9847c10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dad95474cbf48ad02c768a2a42a2c55150bad67f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dad95474cbf48ad02c768a2a42a2c55150bad67f", "html_url": "https://github.com/rust-lang/rust/commit/dad95474cbf48ad02c768a2a42a2c55150bad67f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dad95474cbf48ad02c768a2a42a2c55150bad67f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24a9a14dfa2e14250e8bb60cc70a2a6b20260980", "url": "https://api.github.com/repos/rust-lang/rust/commits/24a9a14dfa2e14250e8bb60cc70a2a6b20260980", "html_url": "https://github.com/rust-lang/rust/commit/24a9a14dfa2e14250e8bb60cc70a2a6b20260980"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "81927ba32996bde8e7ee0dfdd1ca709f33b3a30d", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dad95474cbf48ad02c768a2a42a2c55150bad67f/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad95474cbf48ad02c768a2a42a2c55150bad67f/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=dad95474cbf48ad02c768a2a42a2c55150bad67f", "patch": "@@ -727,7 +727,6 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 \n                 // Extract the function type out of the signature (that seems easier than constructing it ourselves...)\n                 let dtor_ptr = args[1].read_ptr(&self.memory)?;\n-                // TODO: The null-pointer case here is entirely untested\n                 let dtor = if dtor_ptr.is_null_ptr() { None } else { Some(self.memory.get_fn(dtor_ptr.alloc_id)?) };\n                 \n                 // Figure out how large a pthread TLS key actually is. This is libc::pthread_key_t."}, {"sha": "8c69be8e2cd791c2ff83455f42aded17b593858e", "filename": "tests/run-pass/thread-local-no-dtor.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dad95474cbf48ad02c768a2a42a2c55150bad67f/tests%2Frun-pass%2Fthread-local-no-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad95474cbf48ad02c768a2a42a2c55150bad67f/tests%2Frun-pass%2Fthread-local-no-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fthread-local-no-dtor.rs?ref=dad95474cbf48ad02c768a2a42a2c55150bad67f", "patch": "@@ -0,0 +1,16 @@\n+#![feature(libc)]\n+extern crate libc;\n+\n+use std::mem;\n+\n+pub type Key = libc::pthread_key_t;\n+\n+pub unsafe fn create(dtor: Option<unsafe extern fn(*mut u8)>) -> Key {\n+    let mut key = 0;\n+    assert_eq!(libc::pthread_key_create(&mut key, mem::transmute(dtor)), 0);\n+    key\n+}\n+\n+fn main() {\n+    let _ = unsafe { create(None) };\n+}"}]}