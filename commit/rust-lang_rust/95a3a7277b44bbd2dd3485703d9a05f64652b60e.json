{"sha": "95a3a7277b44bbd2dd3485703d9a05f64652b60e", "node_id": "C_kwDOAAsO6NoAKDk1YTNhNzI3N2I0NGJiZDJkZDM0ODU3MDNkOWEwNWY2NDY1MmI2MGU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-31T18:50:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-31T18:50:06Z"}, "message": "Auto merge of #103795 - thomcc:untest, r=Mark-Simulacrum\n\nInclude both benchmarks and tests in the numbers given to `TeFiltered{,Out}`\n\nFixes #103794\n\n`#[bench]` is broken on nightly without this, sadly. It apparently has no test coverage. In addition to manually testing, I've added a run-make smokecheck for this (which would have caught the issue), but it would be nice to have a better way to test, err, libtest. For now we should get this in ASAP IMO", "tree": {"sha": "d025a9dd44178f689ba492b9a0e53c30418c5769", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d025a9dd44178f689ba492b9a0e53c30418c5769"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95a3a7277b44bbd2dd3485703d9a05f64652b60e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95a3a7277b44bbd2dd3485703d9a05f64652b60e", "html_url": "https://github.com/rust-lang/rust/commit/95a3a7277b44bbd2dd3485703d9a05f64652b60e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95a3a7277b44bbd2dd3485703d9a05f64652b60e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2afca78a0b03db144c5d8b9f8868feebfe096309", "url": "https://api.github.com/repos/rust-lang/rust/commits/2afca78a0b03db144c5d8b9f8868feebfe096309", "html_url": "https://github.com/rust-lang/rust/commit/2afca78a0b03db144c5d8b9f8868feebfe096309"}, {"sha": "bf88755f8892c1e42eccd302ed5b17716f669975", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf88755f8892c1e42eccd302ed5b17716f669975", "html_url": "https://github.com/rust-lang/rust/commit/bf88755f8892c1e42eccd302ed5b17716f669975"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "f16d94bbc81c3fca9d9d7e597e74c607c064472d", "filename": "library/test/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/95a3a7277b44bbd2dd3485703d9a05f64652b60e/library%2Ftest%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a3a7277b44bbd2dd3485703d9a05f64652b60e/library%2Ftest%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Flib.rs?ref=95a3a7277b44bbd2dd3485703d9a05f64652b60e", "patch": "@@ -246,6 +246,9 @@ impl FilteredTests {\n         }));\n         self.add_test(desc, testfn);\n     }\n+    fn total_len(&self) -> usize {\n+        self.tests.len() + self.benchs.len()\n+    }\n }\n \n pub fn run_tests<F>(\n@@ -303,13 +306,13 @@ where\n         };\n     }\n \n-    let filtered_out = tests_len - filtered.tests.len();\n+    let filtered_out = tests_len - filtered.total_len();\n     let event = TestEvent::TeFilteredOut(filtered_out);\n     notify_about_test_event(event)?;\n \n     let shuffle_seed = get_shuffle_seed(opts);\n \n-    let event = TestEvent::TeFiltered(filtered.tests.len(), shuffle_seed);\n+    let event = TestEvent::TeFiltered(filtered.total_len(), shuffle_seed);\n     notify_about_test_event(event)?;\n \n     let concurrency = opts.test_threads.unwrap_or_else(get_concurrency);"}, {"sha": "8fc122515d0a330f71b7b9efd58e190c4f0b5343", "filename": "src/test/run-make/test-benches/Makefile", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/95a3a7277b44bbd2dd3485703d9a05f64652b60e/src%2Ftest%2Frun-make%2Ftest-benches%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/95a3a7277b44bbd2dd3485703d9a05f64652b60e/src%2Ftest%2Frun-make%2Ftest-benches%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftest-benches%2FMakefile?ref=95a3a7277b44bbd2dd3485703d9a05f64652b60e", "patch": "@@ -0,0 +1,11 @@\n+include ../../run-make-fulldeps/tools.mk\n+\n+# ignore-cross-compile\n+\n+all:\n+\t# Smoke-test that `#[bench]` isn't entirely broken.\n+\t$(RUSTC) --test smokebench.rs -O\n+\t$(call RUN,smokebench --bench)\n+\t$(call RUN,smokebench --bench noiter)\n+\t$(call RUN,smokebench --bench yesiter)\n+\t$(call RUN,smokebench)"}, {"sha": "ef5e5a620684701fe7716ec325304185f5501945", "filename": "src/test/run-make/test-benches/smokebench.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/95a3a7277b44bbd2dd3485703d9a05f64652b60e/src%2Ftest%2Frun-make%2Ftest-benches%2Fsmokebench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a3a7277b44bbd2dd3485703d9a05f64652b60e/src%2Ftest%2Frun-make%2Ftest-benches%2Fsmokebench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftest-benches%2Fsmokebench.rs?ref=95a3a7277b44bbd2dd3485703d9a05f64652b60e", "patch": "@@ -0,0 +1,14 @@\n+#![feature(test)]\n+extern crate test;\n+\n+#[bench]\n+fn smoke_yesiter(b: &mut test::Bencher) {\n+    let mut i = 0usize;\n+    b.iter(|| {\n+        i = i.wrapping_add(1);\n+        i\n+    })\n+}\n+\n+#[bench]\n+fn smoke_noiter(_: &mut test::Bencher) {}"}]}