{"sha": "0af959d3a23a98e163b26fa577e4c34f3e67726d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZjk1OWQzYTIzYTk4ZTE2M2IyNmZhNTc3ZTRjMzRmM2U2NzcyNmQ=", "commit": {"author": {"name": "ankushduacodes", "email": "ankushduacodes@gmail.com", "date": "2020-11-06T03:55:58Z"}, "committer": {"name": "ankushduacodes", "email": "ankushduacodes@gmail.com", "date": "2020-11-06T03:55:58Z"}, "message": "Fixing Spelling Typos", "tree": {"sha": "a6619c9290c741b66844f97d9efa33977fafe51b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6619c9290c741b66844f97d9efa33977fafe51b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0af959d3a23a98e163b26fa577e4c34f3e67726d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0af959d3a23a98e163b26fa577e4c34f3e67726d", "html_url": "https://github.com/rust-lang/rust/commit/0af959d3a23a98e163b26fa577e4c34f3e67726d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0af959d3a23a98e163b26fa577e4c34f3e67726d/comments", "author": {"login": "ankushduacodes", "id": 61025943, "node_id": "MDQ6VXNlcjYxMDI1OTQz", "avatar_url": "https://avatars.githubusercontent.com/u/61025943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankushduacodes", "html_url": "https://github.com/ankushduacodes", "followers_url": "https://api.github.com/users/ankushduacodes/followers", "following_url": "https://api.github.com/users/ankushduacodes/following{/other_user}", "gists_url": "https://api.github.com/users/ankushduacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankushduacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankushduacodes/subscriptions", "organizations_url": "https://api.github.com/users/ankushduacodes/orgs", "repos_url": "https://api.github.com/users/ankushduacodes/repos", "events_url": "https://api.github.com/users/ankushduacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/ankushduacodes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ankushduacodes", "id": 61025943, "node_id": "MDQ6VXNlcjYxMDI1OTQz", "avatar_url": "https://avatars.githubusercontent.com/u/61025943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankushduacodes", "html_url": "https://github.com/ankushduacodes", "followers_url": "https://api.github.com/users/ankushduacodes/followers", "following_url": "https://api.github.com/users/ankushduacodes/following{/other_user}", "gists_url": "https://api.github.com/users/ankushduacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankushduacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankushduacodes/subscriptions", "organizations_url": "https://api.github.com/users/ankushduacodes/orgs", "repos_url": "https://api.github.com/users/ankushduacodes/repos", "events_url": "https://api.github.com/users/ankushduacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/ankushduacodes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d78d1d02761b906038ba4d54c5f3427f920f5fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d78d1d02761b906038ba4d54c5f3427f920f5fb", "html_url": "https://github.com/rust-lang/rust/commit/9d78d1d02761b906038ba4d54c5f3427f920f5fb"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "acec3e8f82f43bfb4d10125196d1d89c24342b5f", "filename": "compiler/rustc_mir/src/transform/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0af959d3a23a98e163b26fa577e4c34f3e67726d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0af959d3a23a98e163b26fa577e4c34f3e67726d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs?ref=0af959d3a23a98e163b26fa577e4c34f3e67726d", "patch": "@@ -693,7 +693,7 @@ pub fn check_unsafety(tcx: TyCtxt<'_>, def_id: LocalDefId) {\n                 // should only issue a warning for the sake of backwards compatibility.\n                 //\n                 // The solution those 2 expectations is to always take the minimum of both lints.\n-                // This prevent any new errors (unless both lints are explicitely set to `deny`).\n+                // This prevent any new errors (unless both lints are explicitly set to `deny`).\n                 let lint = if tcx.lint_level_at_node(SAFE_PACKED_BORROWS, lint_root).0\n                     <= tcx.lint_level_at_node(UNSAFE_OP_IN_UNSAFE_FN, lint_root).0\n                 {"}, {"sha": "f76f42dea1e037664e6faf8f5c89d9f7df966450", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0af959d3a23a98e163b26fa577e4c34f3e67726d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0af959d3a23a98e163b26fa577e4c34f3e67726d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=0af959d3a23a98e163b26fa577e4c34f3e67726d", "patch": "@@ -1500,7 +1500,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         err.span_suggestion(\n             sp,\n             &format!(\n-                \"if you don't care about {} missing field{}, you can explicitely ignore {}\",\n+                \"if you don't care about {} missing field{}, you can explicitly ignore {}\",\n                 if len == 1 { \"this\" } else { \"these\" },\n                 if len == 1 { \"\" } else { \"s\" },\n                 if len == 1 { \"it\" } else { \"them\" },"}, {"sha": "cf0ff6311483cacaed8bd5e0acc97baa459c0ffc", "filename": "src/test/ui/error-codes/E0027.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0af959d3a23a98e163b26fa577e4c34f3e67726d/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0af959d3a23a98e163b26fa577e4c34f3e67726d/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr?ref=0af959d3a23a98e163b26fa577e4c34f3e67726d", "patch": "@@ -8,7 +8,7 @@ help: include the missing field in the pattern\n    |\n LL |         Dog { age: x, name } => {}\n    |                     ^^^^^^\n-help: if you don't care about this missing field, you can explicitely ignore it\n+help: if you don't care about this missing field, you can explicitly ignore it\n    |\n LL |         Dog { age: x, .. } => {}\n    |                     ^^^^\n@@ -23,7 +23,7 @@ help: include the missing fields in the pattern\n    |\n LL |         Dog { name, age } => {}\n    |             ^^^^^^^^^^^^^\n-help: if you don't care about these missing fields, you can explicitely ignore them\n+help: if you don't care about these missing fields, you can explicitly ignore them\n    |\n LL |         Dog { .. } => {}\n    |             ^^^^^^"}, {"sha": "740ea3829dc511b2e1a683a2bc1eb45b13701984", "filename": "src/test/ui/structs/struct-field-cfg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0af959d3a23a98e163b26fa577e4c34f3e67726d/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0af959d3a23a98e163b26fa577e4c34f3e67726d/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-field-cfg.stderr?ref=0af959d3a23a98e163b26fa577e4c34f3e67726d", "patch": "@@ -22,7 +22,7 @@ help: include the missing field in the pattern\n    |\n LL |     let Foo { present } = foo;\n    |             ^^^^^^^^^^^\n-help: if you don't care about this missing field, you can explicitely ignore it\n+help: if you don't care about this missing field, you can explicitly ignore it\n    |\n LL |     let Foo { .. } = foo;\n    |             ^^^^^^"}, {"sha": "921d060faa38bdcc1e18bbc0edaef617e261f462", "filename": "src/test/ui/structs/struct-pat-derived-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0af959d3a23a98e163b26fa577e4c34f3e67726d/src%2Ftest%2Fui%2Fstructs%2Fstruct-pat-derived-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0af959d3a23a98e163b26fa577e4c34f3e67726d/src%2Ftest%2Fui%2Fstructs%2Fstruct-pat-derived-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-pat-derived-error.stderr?ref=0af959d3a23a98e163b26fa577e4c34f3e67726d", "patch": "@@ -20,7 +20,7 @@ help: include the missing fields in the pattern\n    |\n LL |         let A { x, y, b, c } = self.d;\n    |                     ^^^^^^\n-help: if you don't care about these missing fields, you can explicitely ignore them\n+help: if you don't care about these missing fields, you can explicitly ignore them\n    |\n LL |         let A { x, y, .. } = self.d;\n    |                     ^^^^"}]}