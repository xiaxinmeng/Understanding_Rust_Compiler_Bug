{"sha": "00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZDIwOGVlYTg3YzFjYmVlZmI4YTBhODMyMzdhNzFjOWVlYTJkNmM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-09-01T02:06:01Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-09-01T02:06:01Z"}, "message": "remove `normalize_infer_ctxt` constructor", "tree": {"sha": "edabee6919a61908c9074b0219e1a7f2abe37046", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edabee6919a61908c9074b0219e1a7f2abe37046"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "html_url": "https://github.com/rust-lang/rust/commit/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7057c421c0bb1cb75c26f7135b44cb7f98db6508", "url": "https://api.github.com/repos/rust-lang/rust/commits/7057c421c0bb1cb75c26f7135b44cb7f98db6508", "html_url": "https://github.com/rust-lang/rust/commit/7057c421c0bb1cb75c26f7135b44cb7f98db6508"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "b6114f293ad3a7e060d0d5766d9027a7447d071c", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "patch": "@@ -468,17 +468,6 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'gcx> {\n         }\n     }\n \n-    pub fn normalizing_infer_ctxt(self, projection_mode: Reveal)\n-                                  -> InferCtxtBuilder<'a, 'gcx, 'tcx> {\n-        InferCtxtBuilder {\n-            global_tcx: self,\n-            arenas: ty::CtxtArenas::new(),\n-            tables: None,\n-            param_env: None,\n-            projection_mode: projection_mode,\n-        }\n-    }\n-\n     /// Fake InferCtxt with the global tcx. Used by pre-MIR borrowck\n     /// for MemCategorizationContext/ExprUseVisitor.\n     /// If any inference functionality is used, ICEs will occur."}, {"sha": "f3ba4d16eb0b2f2f72914a06ca1b5484d041dd90", "filename": "src/librustc/traits/specialize/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs?ref=00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "patch": "@@ -147,7 +147,7 @@ pub fn specializes<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                              .unwrap()\n                              .subst(tcx, &penv.free_substs);\n \n-    let result = tcx.normalizing_infer_ctxt(Reveal::ExactMatch).enter(|mut infcx| {\n+    let result = tcx.infer_ctxt(None, None, Reveal::ExactMatch).enter(|mut infcx| {\n         // Normalize the trait reference, adding any obligations\n         // that arise into the impl1 assumptions.\n         let Normalized { value: impl1_trait_ref, obligations: normalization_obligations } = {"}, {"sha": "40e78c007ccfd652ed9d53eae876f05b10767fc4", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "patch": "@@ -691,7 +691,7 @@ impl LateLintPass for VariantSizeDifferences {\n         if let hir::ItemEnum(ref enum_definition, ref gens) = it.node {\n             if gens.ty_params.is_empty() {  // sizes only make sense for non-generic types\n                 let t = cx.tcx.node_id_to_type(it.id);\n-                let layout = cx.tcx.normalizing_infer_ctxt(Reveal::All).enter(|infcx| {\n+                let layout = cx.tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n                     let ty = cx.tcx.erase_regions(&t);\n                     ty.layout(&infcx).unwrap_or_else(|e| {\n                         bug!(\"failed to get layout for `{}`: {}\", t, e)"}, {"sha": "f4682de7dff6af3aceec52ab6699a8bc6dd04fb3", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "patch": "@@ -955,7 +955,7 @@ pub fn fulfill_obligation<'a, 'tcx>(scx: &SharedCrateContext<'a, 'tcx>,\n \n         // Do the initial selection for the obligation. This yields the\n         // shallow result we are looking for -- that is, what specific impl.\n-        tcx.normalizing_infer_ctxt(Reveal::All).enter(|infcx| {\n+        tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n             let mut selcx = SelectionContext::new(&infcx);\n \n             let obligation_cause = traits::ObligationCause::misc(span,\n@@ -1014,7 +1014,7 @@ pub fn normalize_and_test_predicates<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     debug!(\"normalize_and_test_predicates(predicates={:?})\",\n            predicates);\n \n-    tcx.normalizing_infer_ctxt(Reveal::All).enter(|infcx| {\n+    tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n         let mut selcx = SelectionContext::new(&infcx);\n         let mut fulfill_cx = traits::FulfillmentContext::new();\n         let cause = traits::ObligationCause::dummy();"}, {"sha": "2422b9f30069b16a38bbc0fa1817bf4c0b86ce85", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "patch": "@@ -996,7 +996,7 @@ impl<'b, 'tcx> CrateContext<'b, 'tcx> {\n     }\n \n     pub fn layout_of(&self, ty: Ty<'tcx>) -> &'tcx ty::layout::Layout {\n-        self.tcx().normalizing_infer_ctxt(traits::Reveal::All).enter(|infcx| {\n+        self.tcx().infer_ctxt(None, None, traits::Reveal::All).enter(|infcx| {\n             ty.layout(&infcx).unwrap_or_else(|e| {\n                 bug!(\"failed to get layout for `{}`: {}\", ty, e);\n             })"}, {"sha": "9e1e415f62a67b528f56e1ef70652627d0100175", "filename": "src/librustc_trans/glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_trans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_trans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fglue.rs?ref=00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "patch": "@@ -113,7 +113,7 @@ pub fn get_drop_glue_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     match t.sty {\n         ty::TyBox(typ) if !type_needs_drop(tcx, typ)\n                          && type_is_sized(tcx, typ) => {\n-            tcx.normalizing_infer_ctxt(traits::Reveal::All).enter(|infcx| {\n+            tcx.infer_ctxt(None, None, traits::Reveal::All).enter(|infcx| {\n                 let layout = t.layout(&infcx).unwrap();\n                 if layout.size(&tcx.data_layout).bytes() == 0 {\n                     // `Box<ZeroSizeType>` does not allocate."}, {"sha": "e958795570eee1ed7fe72cd99bc7a411251666fb", "filename": "src/librustc_trans/meth.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_trans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d208eea87c1cbeefb8a0a83237a71c9eea2d6c/src%2Flibrustc_trans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmeth.rs?ref=00d208eea87c1cbeefb8a0a83237a71c9eea2d6c", "patch": "@@ -314,7 +314,7 @@ pub fn get_impl_method<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     match trait_def.ancestors(impl_def_id).fn_defs(tcx, name).next() {\n         Some(node_item) => {\n-            let substs = tcx.normalizing_infer_ctxt(Reveal::All).enter(|infcx| {\n+            let substs = tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n                 let substs = substs.rebase_onto(tcx, trait_def_id, impl_substs);\n                 let substs = traits::translate_substs(&infcx, impl_def_id,\n                                                       substs, node_item.node);"}]}