{"sha": "339448157c479f724ae22fce6d5fa78f76c59720", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzOTQ0ODE1N2M0NzlmNzI0YWUyMmZjZTZkNWZhNzhmNzZjNTk3MjA=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-06-11T06:27:25Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-06-11T06:27:25Z"}, "message": "Only prefill caches in the completion benchmark", "tree": {"sha": "e69382ca1a8c98a0ff2fd6e0395d6b379f80f705", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e69382ca1a8c98a0ff2fd6e0395d6b379f80f705"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/339448157c479f724ae22fce6d5fa78f76c59720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/339448157c479f724ae22fce6d5fa78f76c59720", "html_url": "https://github.com/rust-lang/rust/commit/339448157c479f724ae22fce6d5fa78f76c59720", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/339448157c479f724ae22fce6d5fa78f76c59720/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b24f816c0d8aaa37fbc0b33f90dd67afbf28adaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/b24f816c0d8aaa37fbc0b33f90dd67afbf28adaa", "html_url": "https://github.com/rust-lang/rust/commit/b24f816c0d8aaa37fbc0b33f90dd67afbf28adaa"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "843c0ca37b0e397e682647fdaaa50bb227f33145", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=339448157c479f724ae22fce6d5fa78f76c59720", "patch": "@@ -70,6 +70,7 @@ impl AnalysisStatsCmd {\n             load_out_dirs_from_check: self.enable_build_scripts,\n             wrap_rustc: false,\n             with_proc_macro: self.enable_proc_macros,\n+            prefill_caches: false,\n         };\n         let (host, vfs, _proc_macro) =\n             load_workspace_at(&self.path, &cargo_config, &load_cargo_config, &|_| {})?;"}, {"sha": "dc9a390fe991eb733fc387051173dd5d8dedb379", "filename": "crates/rust-analyzer/src/cli/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs?ref=339448157c479f724ae22fce6d5fa78f76c59720", "patch": "@@ -34,8 +34,12 @@ pub fn diagnostics(\n     with_proc_macro: bool,\n ) -> Result<()> {\n     let cargo_config = Default::default();\n-    let load_cargo_config =\n-        LoadCargoConfig { load_out_dirs_from_check, with_proc_macro, wrap_rustc: false };\n+    let load_cargo_config = LoadCargoConfig {\n+        load_out_dirs_from_check,\n+        with_proc_macro,\n+        wrap_rustc: false,\n+        prefill_caches: false,\n+    };\n     let (host, _vfs, _proc_macro) =\n         load_workspace_at(path, &cargo_config, &load_cargo_config, &|_| {})?;\n     let db = host.raw_database();"}, {"sha": "19cb1c046d8275d859ca2a4ef5ac657bf26e8850", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=339448157c479f724ae22fce6d5fa78f76c59720", "patch": "@@ -18,6 +18,7 @@ pub(crate) struct LoadCargoConfig {\n     pub(crate) load_out_dirs_from_check: bool,\n     pub(crate) wrap_rustc: bool,\n     pub(crate) with_proc_macro: bool,\n+    pub(crate) prefill_caches: bool,\n }\n \n pub(crate) fn load_workspace_at(\n@@ -83,7 +84,9 @@ fn load_workspace(\n     let host =\n         load_crate_graph(crate_graph, project_folders.source_root_config, &mut vfs, &receiver);\n \n-    host.analysis().prime_caches(|_| {})?;\n+    if config.prefill_caches {\n+        host.analysis().prime_caches(|_| {})?;\n+    }\n     Ok((host, vfs, proc_macro_client))\n }\n \n@@ -146,6 +149,7 @@ mod tests {\n             load_out_dirs_from_check: false,\n             wrap_rustc: false,\n             with_proc_macro: false,\n+            prefill_caches: false,\n         };\n         let (host, _vfs, _proc_macro) =\n             load_workspace_at(path, &cargo_config, &load_cargo_config, &|_| {})?;"}, {"sha": "0b3475e092812bb0012febd29dac0b9ac87caa5b", "filename": "crates/rust-analyzer/src/cli/ssr.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs?ref=339448157c479f724ae22fce6d5fa78f76c59720", "patch": "@@ -13,6 +13,7 @@ pub fn apply_ssr_rules(rules: Vec<SsrRule>) -> Result<()> {\n         load_out_dirs_from_check: true,\n         wrap_rustc: false,\n         with_proc_macro: true,\n+        prefill_caches: false,\n     };\n     let (host, vfs, _proc_macro) =\n         load_workspace_at(&std::env::current_dir()?, &cargo_config, &load_cargo_config, &|_| {})?;\n@@ -39,8 +40,12 @@ pub fn search_for_patterns(patterns: Vec<SsrPattern>, debug_snippet: Option<Stri\n     use ide_db::base_db::SourceDatabaseExt;\n     use ide_db::symbol_index::SymbolsDatabase;\n     let cargo_config = Default::default();\n-    let load_cargo_config =\n-        LoadCargoConfig { load_out_dirs_from_check: true, wrap_rustc: true, with_proc_macro: true };\n+    let load_cargo_config = LoadCargoConfig {\n+        load_out_dirs_from_check: true,\n+        wrap_rustc: true,\n+        with_proc_macro: true,\n+        prefill_caches: false,\n+    };\n     let (host, _vfs, _proc_macro) =\n         load_workspace_at(&std::env::current_dir()?, &cargo_config, &load_cargo_config, &|_| {})?;\n     let db = host.raw_database();"}, {"sha": "8ddeb59f769473c9d92b1dfc61c334e418323264", "filename": "crates/rust-analyzer/src/integrated_benchmarks.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fintegrated_benchmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/339448157c479f724ae22fce6d5fa78f76c59720/crates%2Frust-analyzer%2Fsrc%2Fintegrated_benchmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fintegrated_benchmarks.rs?ref=339448157c479f724ae22fce6d5fa78f76c59720", "patch": "@@ -37,6 +37,7 @@ fn integrated_highlighting_benchmark() {\n         load_out_dirs_from_check: true,\n         wrap_rustc: false,\n         with_proc_macro: false,\n+        prefill_caches: false,\n     };\n \n     let (mut host, vfs, _proc_macro) = {\n@@ -91,6 +92,7 @@ fn integrated_completion_benchmark() {\n         load_out_dirs_from_check: true,\n         wrap_rustc: false,\n         with_proc_macro: false,\n+        prefill_caches: true,\n     };\n \n     let (mut host, vfs, _proc_macro) = {"}]}