{"sha": "cde6ad39920ddadd7c70921232ae92adff258367", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZTZhZDM5OTIwZGRhZGQ3YzcwOTIxMjMyYWU5MmFkZmYyNTgzNjc=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-08-02T01:57:58Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-08-02T21:31:44Z"}, "message": "Fix nasty double-free bug where a newrt chan could get killed after rescheduling but before suppressing_finalize.", "tree": {"sha": "242bfb44453dd28dbcc0614cb3efbb394025b413", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/242bfb44453dd28dbcc0614cb3efbb394025b413"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cde6ad39920ddadd7c70921232ae92adff258367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cde6ad39920ddadd7c70921232ae92adff258367", "html_url": "https://github.com/rust-lang/rust/commit/cde6ad39920ddadd7c70921232ae92adff258367", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cde6ad39920ddadd7c70921232ae92adff258367/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be7738bfa18989438e3597847cd6a7f3bbbfac12", "url": "https://api.github.com/repos/rust-lang/rust/commits/be7738bfa18989438e3597847cd6a7f3bbbfac12", "html_url": "https://github.com/rust-lang/rust/commit/be7738bfa18989438e3597847cd6a7f3bbbfac12"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "a060059f5fc9339b9ba2af58288d8a5a461c6358", "filename": "src/libstd/rt/comm.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cde6ad39920ddadd7c70921232ae92adff258367/src%2Flibstd%2Frt%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cde6ad39920ddadd7c70921232ae92adff258367/src%2Flibstd%2Frt%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcomm.rs?ref=cde6ad39920ddadd7c70921232ae92adff258367", "patch": "@@ -131,6 +131,13 @@ impl<T> ChanOne<T> {\n             // acquire barrier that keeps the subsequent access of the\n             // ~Task pointer from being reordered.\n             let oldstate = (*packet).state.swap(STATE_ONE, SeqCst);\n+\n+            // Suppress the synchronizing actions in the finalizer. We're\n+            // done with the packet. NB: In case of do_resched, this *must*\n+            // happen before waking up a blocked task (or be unkillable),\n+            // because we might get a kill signal during the reschedule.\n+            this.suppress_finalize = true;\n+\n             match oldstate {\n                 STATE_BOTH => {\n                     // Port is not waiting yet. Nothing to do\n@@ -165,8 +172,6 @@ impl<T> ChanOne<T> {\n             }\n         }\n \n-        // Suppress the synchronizing actions in the finalizer. We're done with the packet.\n-        this.suppress_finalize = true;\n         return recvr_active;\n     }\n }"}]}