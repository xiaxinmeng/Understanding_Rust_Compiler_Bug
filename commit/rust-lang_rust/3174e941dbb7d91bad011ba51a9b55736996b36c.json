{"sha": "3174e941dbb7d91bad011ba51a9b55736996b36c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNzRlOTQxZGJiN2Q5MWJhZDAxMWJhNTFhOWI1NTczNjk5NmIzNmM=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-08T12:57:54Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-08T13:15:41Z"}, "message": "Simplify ast::Comment api surface", "tree": {"sha": "4c5bd0d372d16fe16fd2606c46a3f544810b08c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c5bd0d372d16fe16fd2606c46a3f544810b08c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3174e941dbb7d91bad011ba51a9b55736996b36c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3174e941dbb7d91bad011ba51a9b55736996b36c", "html_url": "https://github.com/rust-lang/rust/commit/3174e941dbb7d91bad011ba51a9b55736996b36c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3174e941dbb7d91bad011ba51a9b55736996b36c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2facd9517f0c58430514b9e4aa41f5996c994747", "url": "https://api.github.com/repos/rust-lang/rust/commits/2facd9517f0c58430514b9e4aa41f5996c994747", "html_url": "https://github.com/rust-lang/rust/commit/2facd9517f0c58430514b9e4aa41f5996c994747"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "a10b1477804acd3e20d01ce7862ded255ec3864e", "filename": "crates/syntax/src/ast/token_ext.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3174e941dbb7d91bad011ba51a9b55736996b36c/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3174e941dbb7d91bad011ba51a9b55736996b36c/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs?ref=3174e941dbb7d91bad011ba51a9b55736996b36c", "patch": "@@ -18,20 +18,21 @@ impl ast::Comment {\n     }\n \n     pub fn prefix(&self) -> &'static str {\n-        let &(prefix, _kind) = CommentKind::with_prefix_from_text(self.text());\n+        let &(prefix, _kind) = CommentKind::BY_PREFIX\n+            .iter()\n+            .find(|&(prefix, kind)| self.kind() == *kind && self.text().starts_with(prefix))\n+            .unwrap();\n         prefix\n     }\n \n-    pub fn kind_and_prefix(&self) -> &(&'static str, CommentKind) {\n-        CommentKind::with_prefix_from_text(self.text())\n-    }\n-\n     /// Returns the textual content of a doc comment block as a single string.\n     /// That is, strips leading `///` (+ optional 1 character of whitespace),\n     /// trailing `*/`, trailing whitespace and then joins the lines.\n     pub fn doc_comment(&self) -> Option<&str> {\n-        match self.kind_and_prefix() {\n-            (prefix, CommentKind { shape, doc: Some(_) }) => {\n+        let kind = self.kind();\n+        match kind {\n+            CommentKind { shape, doc: Some(_) } => {\n+                let prefix = kind.prefix();\n                 let text = &self.text().as_str()[prefix.len()..];\n                 let ws = text.chars().next().filter(|c| c.is_whitespace());\n                 let text = ws.map_or(text, |ws| &text[ws.len_utf8()..]);\n@@ -88,12 +89,16 @@ impl CommentKind {\n     ];\n \n     pub(crate) fn from_text(text: &str) -> CommentKind {\n-        let &(_prefix, kind) = Self::with_prefix_from_text(text);\n+        let &(_prefix, kind) = CommentKind::BY_PREFIX\n+            .iter()\n+            .find(|&(prefix, _kind)| text.starts_with(prefix))\n+            .unwrap();\n         kind\n     }\n \n-    fn with_prefix_from_text(text: &str) -> &(&'static str, CommentKind) {\n-        CommentKind::BY_PREFIX.iter().find(|&(prefix, _kind)| text.starts_with(prefix)).unwrap()\n+    fn prefix(&self) -> &'static str {\n+        let &(prefix, _) = CommentKind::BY_PREFIX.iter().find(|(_, kind)| kind == self).unwrap();\n+        prefix\n     }\n }\n "}]}