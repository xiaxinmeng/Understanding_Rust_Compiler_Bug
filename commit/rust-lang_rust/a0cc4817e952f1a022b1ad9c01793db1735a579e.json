{"sha": "a0cc4817e952f1a022b1ad9c01793db1735a579e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwY2M0ODE3ZTk1MmYxYTAyMmIxYWQ5YzAxNzkzZGIxNzM1YTU3OWU=", "commit": {"author": {"name": "Or Brostovski", "email": "tohava@gmail.com", "date": "2010-08-05T00:44:29Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-07T00:34:31Z"}, "message": "Added AST logging, and modified AST for consistent handling of alt stmts.\n\n- Modified the arm types, instead of a single arm type, there are now 2 (soon to be 3) arm types, one for each type of alt statement\n- Added AST logging for constrained type (see fmt_constrained)\n- Added AST logging for STMT_alt_type\n- Created a generic fmt_arm for use with all alt statements", "tree": {"sha": "542e350bf1e69ebdaf2a570607b8cc2dce06600b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/542e350bf1e69ebdaf2a570607b8cc2dce06600b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0cc4817e952f1a022b1ad9c01793db1735a579e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0cc4817e952f1a022b1ad9c01793db1735a579e", "html_url": "https://github.com/rust-lang/rust/commit/a0cc4817e952f1a022b1ad9c01793db1735a579e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0cc4817e952f1a022b1ad9c01793db1735a579e/comments", "author": {"login": "tohava", "id": 329651, "node_id": "MDQ6VXNlcjMyOTY1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/329651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tohava", "html_url": "https://github.com/tohava", "followers_url": "https://api.github.com/users/tohava/followers", "following_url": "https://api.github.com/users/tohava/following{/other_user}", "gists_url": "https://api.github.com/users/tohava/gists{/gist_id}", "starred_url": "https://api.github.com/users/tohava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tohava/subscriptions", "organizations_url": "https://api.github.com/users/tohava/orgs", "repos_url": "https://api.github.com/users/tohava/repos", "events_url": "https://api.github.com/users/tohava/events{/privacy}", "received_events_url": "https://api.github.com/users/tohava/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f6e8ffe64b57b0eaba6812208e94500422ca40c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f6e8ffe64b57b0eaba6812208e94500422ca40c", "html_url": "https://github.com/rust-lang/rust/commit/3f6e8ffe64b57b0eaba6812208e94500422ca40c"}], "stats": {"total": 78, "additions": 59, "deletions": 19}, "files": [{"sha": "d4ace045439e1601ef092c501794bb456f12b978", "filename": "src/boot/fe/ast.ml", "status": "modified", "additions": 57, "deletions": 18, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/a0cc4817e952f1a022b1ad9c01793db1735a579e/src%2Fboot%2Ffe%2Fast.ml", "raw_url": "https://github.com/rust-lang/rust/raw/a0cc4817e952f1a022b1ad9c01793db1735a579e/src%2Fboot%2Ffe%2Fast.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fast.ml?ref=a0cc4817e952f1a022b1ad9c01793db1735a579e", "patch": "@@ -247,13 +247,13 @@ and stmt = stmt' identified\n and stmt_alt_tag =\n     {\n       alt_tag_lval: lval;\n-      alt_tag_arms: arm array;\n+      alt_tag_arms: tag_arm array;\n     }\n \n and stmt_alt_type =\n     {\n       alt_type_lval: lval;\n-      alt_type_arms: (ident * slot * stmt) array;\n+      alt_type_arms: type_arm array;\n       alt_type_else: stmt option;\n     }\n \n@@ -318,8 +318,11 @@ and pat =\n   | PAT_slot of ((slot identified) * ident)\n   | PAT_wild\n \n-and arm' = pat * block\n-and arm = arm' identified\n+and tag_arm' = pat * block\n+and tag_arm = tag_arm' identified\n+\n+and type_arm' = ident * slot * block\n+and type_arm = type_arm' identified\n \n and atom =\n     ATOM_literal of (lit identified)\n@@ -646,6 +649,16 @@ and fmt_iso (ff:Format.formatter) (tiso:ty_iso) : unit =\n   done;\n   fmt ff \"@]]@]\"\n \n+and fmt_constrained ff (ty, constrs) : unit =\n+  fmt ff \"@[\";\n+  fmt_ty ff ty;\n+  fmt ff \" : \";\n+  fmt ff \"@[\";\n+  fmt_constrs ff constrs;\n+  fmt ff \"@]\";\n+  fmt ff \"@]\";\n+    \n+\n and fmt_ty (ff:Format.formatter) (t:ty) : unit =\n   match t with\n     TY_any -> fmt ff \"any\"\n@@ -687,7 +700,7 @@ and fmt_ty (ff:Format.formatter) (t:ty) : unit =\n   | TY_tag ttag -> fmt_tag ff ttag\n   | TY_iso tiso -> fmt_iso ff tiso\n   | TY_idx idx -> fmt ff \"<idx#%d>\" idx\n-  | TY_constrained _ -> fmt ff \"?constrained?\"\n+  | TY_constrained ctrd -> fmt_constrained ff ctrd \n \n   | TY_obj (effect, fns) ->\n       fmt_obox ff;\n@@ -707,7 +720,13 @@ and fmt_ty (ff:Format.formatter) (t:ty) : unit =\n \n \n and fmt_constrs (ff:Format.formatter) (cc:constr array) : unit =\n-  Array.iter (fmt_constr ff) cc\n+  for i = 0 to (Array.length cc) - 1\n+  do\n+    if i != 0\n+    then fmt ff \",@ \";\n+    fmt_constr ff cc.(i)\n+  done;\n+  (* Array.iter (fmt_constr ff) cc *)\n \n and fmt_decl_constrs (ff:Format.formatter) (cc:constr array) : unit =\n   if Array.length cc = 0\n@@ -1204,25 +1223,45 @@ and fmt_stmt_body (ff:Format.formatter) (s:stmt) : unit =\n           fmt_lval ff at.alt_tag_lval;\n           fmt ff \") \";\n           fmt_obr ff;\n-          Array.iter (fmt_arm ff) at.alt_tag_arms;\n+          Array.iter (fmt_tag_arm ff) at.alt_tag_arms;\n           fmt_cbb ff;\n \n-      | STMT_alt_type _ -> fmt ff \"?stmt_alt_type?\"\n+      | STMT_alt_type at -> \n+          fmt_obox ff;\n+          fmt ff \"alt type (\";\n+          fmt_lval ff at.alt_type_lval;\n+          fmt ff \") \";\n+          fmt_obr ff;\n+          Array.iter (fmt_type_arm ff) at.alt_type_arms;\n+          fmt_cbb ff;\n+          \n       | STMT_alt_port _ -> fmt ff \"?stmt_alt_port?\"\n       | STMT_note _ -> fmt ff \"?stmt_note?\"\n       | STMT_slice _ -> fmt ff \"?stmt_slice?\"\n   end\n \n-and fmt_arm (ff:Format.formatter) (arm:arm) : unit =\n-  let (pat, block) = arm.node in\n-    fmt ff \"@\\n\";\n-    fmt_obox ff;\n-    fmt ff \"case (\";\n-    fmt_pat ff pat;\n-    fmt ff \") \";\n-    fmt_obr ff;\n-    fmt_stmts ff block.node;\n-    fmt_cbb ff;\n+and fmt_arm \n+    (ff:Format.formatter) \n+    (fmt_arm_case_expr : Format.formatter -> unit)\n+    (block : block) \n+    : unit =\n+  fmt ff \"@\\n\";\n+  fmt_obox ff;\n+  fmt ff \"case (\";\n+  fmt_arm_case_expr ff;\n+  fmt ff \") \";\n+  fmt_obr ff;\n+  fmt_stmts ff block.node;\n+  fmt_cbb ff;\n+  \n+and fmt_tag_arm (ff:Format.formatter) (tag_arm:tag_arm) : unit =\n+  let (pat, block) = tag_arm.node in\n+    fmt_arm ff (fun ff -> fmt_pat ff pat) block;\n+    \n+and fmt_type_arm (ff:Format.formatter) (type_arm:type_arm) : unit =\n+  let (_, slot, block) = type_arm.node in\n+    fmt_arm ff (fun ff -> fmt_slot ff slot) block;\n+      \n \n and fmt_pat (ff:Format.formatter) (pat:pat) : unit =\n   match pat with"}, {"sha": "7ef4bf8e3e39a4ae587ba0c8757a7f82e9cc97d5", "filename": "src/boot/me/dead.ml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a0cc4817e952f1a022b1ad9c01793db1735a579e/src%2Fboot%2Fme%2Fdead.ml", "raw_url": "https://github.com/rust-lang/rust/raw/a0cc4817e952f1a022b1ad9c01793db1735a579e/src%2Fboot%2Fme%2Fdead.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fdead.ml?ref=a0cc4817e952f1a022b1ad9c01793db1735a579e", "patch": "@@ -70,7 +70,8 @@ let dead_code_visitor\n \n         | Ast.STMT_alt_type { Ast.alt_type_arms = arms;\n                               Ast.alt_type_else = alt_type_else } ->\n-            let arm_ids = Array.map (fun (_, _, block) -> block.id) arms in\n+            let arm_ids = Array.map (fun { node = (_, _, block) } -> \n+                                       block.id) arms in\n             let else_ids =\n               begin\n                 match alt_type_else with"}]}