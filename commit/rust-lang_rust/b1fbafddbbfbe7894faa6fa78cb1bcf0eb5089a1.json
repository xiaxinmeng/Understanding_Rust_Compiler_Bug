{"sha": "b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1", "node_id": "C_kwDOAAsO6NoAKGIxZmJhZmRkYmJmYmU3ODk0ZmFhNmZhNzhjYjFiY2YwZWI1MDg5YTE", "commit": {"author": {"name": "Maxim Cournoyer", "email": "maxim.cournoyer@gmail.com", "date": "2021-11-29T21:56:45Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-12-31T18:13:24Z"}, "message": "rustbuild: Add support for a per-target default-linker option.", "tree": {"sha": "0b608b582d479450a1dab418bfec161447d6e459", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b608b582d479450a1dab418bfec161447d6e459"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1", "html_url": "https://github.com/rust-lang/rust/commit/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1/comments", "author": {"login": "Apteryks", "id": 8332263, "node_id": "MDQ6VXNlcjgzMzIyNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/8332263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Apteryks", "html_url": "https://github.com/Apteryks", "followers_url": "https://api.github.com/users/Apteryks/followers", "following_url": "https://api.github.com/users/Apteryks/following{/other_user}", "gists_url": "https://api.github.com/users/Apteryks/gists{/gist_id}", "starred_url": "https://api.github.com/users/Apteryks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Apteryks/subscriptions", "organizations_url": "https://api.github.com/users/Apteryks/orgs", "repos_url": "https://api.github.com/users/Apteryks/repos", "events_url": "https://api.github.com/users/Apteryks/events{/privacy}", "received_events_url": "https://api.github.com/users/Apteryks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a09f775e5a71ba809f465b3af377943627552001", "url": "https://api.github.com/repos/rust-lang/rust/commits/a09f775e5a71ba809f465b3af377943627552001", "html_url": "https://github.com/rust-lang/rust/commit/a09f775e5a71ba809f465b3af377943627552001"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "f24f8e81a7944ef4a49483a93abdfcb50d6ef037", "filename": "config.toml.example", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1", "patch": "@@ -488,9 +488,12 @@ changelog-seen = 2\n # FIXME(#75760): Some UI tests fail when this option is enabled.\n #parallel-compiler = false\n \n-# The default linker that will be hard-coded into the generated compiler for\n-# targets that don't specify linker explicitly in their target specifications.\n-# Note that this is not the linker used to link said compiler.\n+# The default linker that will be hard-coded into the generated\n+# compiler for targets that don't specify a default linker explicitly\n+# in their target specifications.  Note that this is not the linker\n+# used to link said compiler. It can also be set per-target (via the\n+# `[target.<triple>]` block), which may be useful in a cross-compilation\n+# setting.\n #\n # See https://doc.rust-lang.org/rustc/codegen-options/index.html#linker for more information.\n #default-linker = <none> (path)"}, {"sha": "c0ab093f9524ad8c2a443b08a92a7d45350ec103", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1", "patch": "@@ -662,6 +662,8 @@ pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetS\n         .env(\"CFG_VERSION\", builder.rust_version());\n \n     let libdir_relative = builder.config.libdir_relative().unwrap_or_else(|| Path::new(\"lib\"));\n+    let target_config = builder.config.target_config.get(&target);\n+\n     cargo.env(\"CFG_LIBDIR_RELATIVE\", libdir_relative);\n \n     if let Some(ref ver_date) = builder.rust_info.commit_date() {\n@@ -673,9 +675,15 @@ pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetS\n     if !builder.unstable_features() {\n         cargo.env(\"CFG_DISABLE_UNSTABLE_FEATURES\", \"1\");\n     }\n-    if let Some(ref s) = builder.config.rustc_default_linker {\n+\n+    // Prefer the current target's own default_linker, else a globally\n+    // specified one.\n+    if let Some(s) = target_config.and_then(|c| c.default_linker.as_ref()) {\n+        cargo.env(\"CFG_DEFAULT_LINKER\", s);\n+    } else if let Some(ref s) = builder.config.rustc_default_linker {\n         cargo.env(\"CFG_DEFAULT_LINKER\", s);\n     }\n+\n     if builder.config.rustc_parallel {\n         cargo.rustflag(\"--cfg=parallel_compiler\");\n         cargo.rustdocflag(\"--cfg=parallel_compiler\");\n@@ -700,7 +708,6 @@ pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetS\n         }\n         let llvm_config = builder.ensure(native::Llvm { target });\n         cargo.env(\"LLVM_CONFIG\", &llvm_config);\n-        let target_config = builder.config.target_config.get(&target);\n         if let Some(s) = target_config.and_then(|c| c.llvm_config.as_ref()) {\n             cargo.env(\"CFG_LLVM_ROOT\", s);\n         }"}, {"sha": "7a4593a75f280b06cd6bf9324a5947dce8d74b2d", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=b1fbafddbbfbe7894faa6fa78cb1bcf0eb5089a1", "patch": "@@ -294,6 +294,7 @@ pub struct Target {\n     pub cxx: Option<PathBuf>,\n     pub ar: Option<PathBuf>,\n     pub ranlib: Option<PathBuf>,\n+    pub default_linker: Option<PathBuf>,\n     pub linker: Option<PathBuf>,\n     pub ndk: Option<PathBuf>,\n     pub sanitizers: Option<bool>,\n@@ -531,6 +532,7 @@ struct TomlTarget {\n     cxx: Option<String>,\n     ar: Option<String>,\n     ranlib: Option<String>,\n+    default_linker: Option<PathBuf>,\n     linker: Option<String>,\n     llvm_config: Option<String>,\n     llvm_filecheck: Option<String>,"}]}