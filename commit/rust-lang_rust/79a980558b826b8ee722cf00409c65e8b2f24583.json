{"sha": "79a980558b826b8ee722cf00409c65e8b2f24583", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YTk4MDU1OGI4MjZiOGVlNzIyY2YwMDQwOWM2NWU4YjJmMjQ1ODM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-07-11T17:19:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-07-23T20:20:16Z"}, "message": "collections: Deprecate push_back/pop_back", "tree": {"sha": "f5c85d04824a7e6ba9745ddbd960c0b40110bd9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5c85d04824a7e6ba9745ddbd960c0b40110bd9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79a980558b826b8ee722cf00409c65e8b2f24583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79a980558b826b8ee722cf00409c65e8b2f24583", "html_url": "https://github.com/rust-lang/rust/commit/79a980558b826b8ee722cf00409c65e8b2f24583", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79a980558b826b8ee722cf00409c65e8b2f24583/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d36a8f3f9c70c63ed9042d83cdc47392d12b3886", "url": "https://api.github.com/repos/rust-lang/rust/commits/d36a8f3f9c70c63ed9042d83cdc47392d12b3886", "html_url": "https://github.com/rust-lang/rust/commit/d36a8f3f9c70c63ed9042d83cdc47392d12b3886"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "f4d0763421c7616bc121a7ec23b34441044c3143", "filename": "src/libcollections/dlist.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79a980558b826b8ee722cf00409c65e8b2f24583/src%2Flibcollections%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a980558b826b8ee722cf00409c65e8b2f24583/src%2Flibcollections%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fdlist.rs?ref=79a980558b826b8ee722cf00409c65e8b2f24583", "patch": "@@ -253,13 +253,15 @@ impl<T> Deque<T> for DList<T> {\n     /// Add an element last in the list\n     ///\n     /// O(1)\n+    #[deprecated = \"use the `push` method\"]\n     fn push_back(&mut self, elt: T) {\n         self.push_back_node(box Node::new(elt))\n     }\n \n     /// Remove the last element and return it, or None if the list is empty\n     ///\n     /// O(1)\n+    #[deprecated = \"use the `pop` method\"]\n     fn pop_back(&mut self) -> Option<T> {\n         self.pop_back_node().map(|box Node{value, ..}| value)\n     }"}, {"sha": "1cf660e0938d1af1ec71d7bb36472a8a005c4208", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79a980558b826b8ee722cf00409c65e8b2f24583/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a980558b826b8ee722cf00409c65e8b2f24583/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=79a980558b826b8ee722cf00409c65e8b2f24583", "patch": "@@ -492,6 +492,7 @@ pub trait Deque<T> : MutableSeq<T> {\n     /// d.push_back(2i);\n     /// assert_eq!(d.front(), Some(&1i));\n     /// ```\n+    #[deprecated = \"use the `push` method\"]\n     fn push_back(&mut self, elt: T);\n \n     /// Remove the last element and return it, or `None` if the sequence is empty.\n@@ -509,6 +510,7 @@ pub trait Deque<T> : MutableSeq<T> {\n     /// assert_eq!(d.pop_back(), Some(1i));\n     /// assert_eq!(d.pop_back(), None);\n     /// ```\n+    #[deprecated = \"use the `pop` method\"]\n     fn pop_back(&mut self) -> Option<T>;\n \n     /// Remove the first element and return it, or `None` if the sequence is empty."}, {"sha": "9d24b349c975c05afe47844a4158fee4c36e77bb", "filename": "src/libcollections/ringbuf.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79a980558b826b8ee722cf00409c65e8b2f24583/src%2Flibcollections%2Fringbuf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79a980558b826b8ee722cf00409c65e8b2f24583/src%2Flibcollections%2Fringbuf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fringbuf.rs?ref=79a980558b826b8ee722cf00409c65e8b2f24583", "patch": "@@ -81,6 +81,7 @@ impl<T> Deque<T> for RingBuf<T> {\n     }\n \n     /// Remove and return the last element in the RingBuf, or None if it is empty\n+    #[deprecated = \"use the `pop` method\"]\n     fn pop_back(&mut self) -> Option<T> {\n         if self.nelts > 0 {\n             self.nelts -= 1;\n@@ -104,6 +105,7 @@ impl<T> Deque<T> for RingBuf<T> {\n     }\n \n     /// Append an element to the RingBuf\n+    #[deprecated = \"use the `push` method\"]\n     fn push_back(&mut self, t: T) {\n         if self.nelts == self.elts.len() {\n             grow(self.nelts, &mut self.lo, &mut self.elts);"}]}