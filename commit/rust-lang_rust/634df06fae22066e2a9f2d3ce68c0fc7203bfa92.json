{"sha": "634df06fae22066e2a9f2d3ce68c0fc7203bfa92", "node_id": "C_kwDOAAsO6NoAKDYzNGRmMDZmYWUyMjA2NmUyYTlmMmQzY2U2OGMwZmM3MjAzYmZhOTI", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-20T10:56:57Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-16T09:20:28Z"}, "message": "Generalize the `ToPredicate` trait\n\nIts name is now not accurate anymore, but we'll adjust that later", "tree": {"sha": "35e9403a08fc8de998bab13318b7f263ea984285", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35e9403a08fc8de998bab13318b7f263ea984285"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/634df06fae22066e2a9f2d3ce68c0fc7203bfa92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/634df06fae22066e2a9f2d3ce68c0fc7203bfa92", "html_url": "https://github.com/rust-lang/rust/commit/634df06fae22066e2a9f2d3ce68c0fc7203bfa92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/634df06fae22066e2a9f2d3ce68c0fc7203bfa92/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b91b1a37bbb607348b8713d2e8f1051bf414048", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b91b1a37bbb607348b8713d2e8f1051bf414048", "html_url": "https://github.com/rust-lang/rust/commit/3b91b1a37bbb607348b8713d2e8f1051bf414048"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "ac44f47530ef490f1fdc500ec19c3be232e06f75", "filename": "compiler/rustc_borrowck/src/type_check/canonical.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/634df06fae22066e2a9f2d3ce68c0fc7203bfa92/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/634df06fae22066e2a9f2d3ce68c0fc7203bfa92/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fcanonical.rs?ref=634df06fae22066e2a9f2d3ce68c0fc7203bfa92", "patch": "@@ -122,7 +122,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n \n     pub(super) fn prove_predicates(\n         &mut self,\n-        predicates: impl IntoIterator<Item = impl ToPredicate<'tcx>>,\n+        predicates: impl IntoIterator<Item = impl ToPredicate<'tcx, ty::Predicate<'tcx>>>,\n         locations: Locations,\n         category: ConstraintCategory<'tcx>,\n     ) {"}, {"sha": "f87d048c6568073ab88a0308be5fffeeb5a088bf", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/634df06fae22066e2a9f2d3ce68c0fc7203bfa92/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/634df06fae22066e2a9f2d3ce68c0fc7203bfa92/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=634df06fae22066e2a9f2d3ce68c0fc7203bfa92", "patch": "@@ -1125,42 +1125,42 @@ impl<'tcx> ToPolyTraitRef<'tcx> for PolyTraitPredicate<'tcx> {\n     }\n }\n \n-pub trait ToPredicate<'tcx> {\n-    fn to_predicate(self, tcx: TyCtxt<'tcx>) -> Predicate<'tcx>;\n+pub trait ToPredicate<'tcx, Predicate> {\n+    fn to_predicate(self, tcx: TyCtxt<'tcx>) -> Predicate;\n }\n \n-impl<'tcx> ToPredicate<'tcx> for Predicate<'tcx> {\n+impl<'tcx> ToPredicate<'tcx, Predicate<'tcx>> for Predicate<'tcx> {\n     fn to_predicate(self, _tcx: TyCtxt<'tcx>) -> Predicate<'tcx> {\n         self\n     }\n }\n \n-impl<'tcx> ToPredicate<'tcx> for Binder<'tcx, PredicateKind<'tcx>> {\n+impl<'tcx> ToPredicate<'tcx, Predicate<'tcx>> for Binder<'tcx, PredicateKind<'tcx>> {\n     #[inline(always)]\n     fn to_predicate(self, tcx: TyCtxt<'tcx>) -> Predicate<'tcx> {\n         tcx.mk_predicate(self)\n     }\n }\n \n-impl<'tcx> ToPredicate<'tcx> for PolyTraitPredicate<'tcx> {\n+impl<'tcx> ToPredicate<'tcx, Predicate<'tcx>> for PolyTraitPredicate<'tcx> {\n     fn to_predicate(self, tcx: TyCtxt<'tcx>) -> Predicate<'tcx> {\n         self.map_bound(PredicateKind::Trait).to_predicate(tcx)\n     }\n }\n \n-impl<'tcx> ToPredicate<'tcx> for PolyRegionOutlivesPredicate<'tcx> {\n+impl<'tcx> ToPredicate<'tcx, Predicate<'tcx>> for PolyRegionOutlivesPredicate<'tcx> {\n     fn to_predicate(self, tcx: TyCtxt<'tcx>) -> Predicate<'tcx> {\n         self.map_bound(PredicateKind::RegionOutlives).to_predicate(tcx)\n     }\n }\n \n-impl<'tcx> ToPredicate<'tcx> for PolyTypeOutlivesPredicate<'tcx> {\n+impl<'tcx> ToPredicate<'tcx, Predicate<'tcx>> for PolyTypeOutlivesPredicate<'tcx> {\n     fn to_predicate(self, tcx: TyCtxt<'tcx>) -> Predicate<'tcx> {\n         self.map_bound(PredicateKind::TypeOutlives).to_predicate(tcx)\n     }\n }\n \n-impl<'tcx> ToPredicate<'tcx> for PolyProjectionPredicate<'tcx> {\n+impl<'tcx> ToPredicate<'tcx, Predicate<'tcx>> for PolyProjectionPredicate<'tcx> {\n     fn to_predicate(self, tcx: TyCtxt<'tcx>) -> Predicate<'tcx> {\n         self.map_bound(PredicateKind::Projection).to_predicate(tcx)\n     }"}]}