{"sha": "0146a95a3987bc8d1f68fddfc39e8a5458feae0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNDZhOTVhMzk4N2JjOGQxZjY4ZmRkZmMzOWU4YTU0NThmZWFlMGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-19T19:40:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-19T23:23:05Z"}, "message": "Cleanup", "tree": {"sha": "1ed11f0d7ba88e2e5917924b9745d1f3ddc43fab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ed11f0d7ba88e2e5917924b9745d1f3ddc43fab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0146a95a3987bc8d1f68fddfc39e8a5458feae0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0146a95a3987bc8d1f68fddfc39e8a5458feae0d", "html_url": "https://github.com/rust-lang/rust/commit/0146a95a3987bc8d1f68fddfc39e8a5458feae0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0146a95a3987bc8d1f68fddfc39e8a5458feae0d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a3a525ea93cc5761e03aa066f6703dc9563bcaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a3a525ea93cc5761e03aa066f6703dc9563bcaa", "html_url": "https://github.com/rust-lang/rust/commit/4a3a525ea93cc5761e03aa066f6703dc9563bcaa"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "770049212d29d19d50e7e4339306a9996bf08391", "filename": "crates/ra_assists/src/handlers/add_explicit_type.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0146a95a3987bc8d1f68fddfc39e8a5458feae0d/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0146a95a3987bc8d1f68fddfc39e8a5458feae0d/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs?ref=0146a95a3987bc8d1f68fddfc39e8a5458feae0d", "patch": "@@ -25,9 +25,8 @@ pub(crate) fn add_explicit_type(acc: &mut Assists, ctx: &AssistContext) -> Optio\n     let stmt = ctx.find_node_at_offset::<LetStmt>()?;\n     let module = ctx.sema.scope(stmt.syntax()).module()?;\n     let expr = stmt.initializer()?;\n-    let pat = stmt.pat()?;\n     // Must be a binding\n-    let pat = match pat {\n+    let pat = match stmt.pat()? {\n         ast::Pat::BindPat(bind_pat) => bind_pat,\n         _ => return None,\n     };\n@@ -46,7 +45,7 @@ pub(crate) fn add_explicit_type(acc: &mut Assists, ctx: &AssistContext) -> Optio\n     // Assist not applicable if the type has already been specified\n     // and it has no placeholders\n     let ascribed_ty = stmt.ascribed_type();\n-    if let Some(ref ty) = ascribed_ty {\n+    if let Some(ty) = &ascribed_ty {\n         if ty.syntax().descendants().find_map(ast::PlaceholderType::cast).is_none() {\n             return None;\n         }"}]}