{"sha": "54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0Yzc4Yzk2ZGJlNjFjMmYxYjZlYzlmODNhMzVhOGFkNmY2YWU0ZmU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-19T13:23:13Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-19T13:23:13Z"}, "message": "Rename derive-specific APIs", "tree": {"sha": "960d42c02317050c6415b13fc74ad3c1f55f1c20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/960d42c02317050c6415b13fc74ad3c1f55f1c20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe", "html_url": "https://github.com/rust-lang/rust/commit/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a627377949d308603bb0bd7ef627ffe8186e1788", "url": "https://api.github.com/repos/rust-lang/rust/commits/a627377949d308603bb0bd7ef627ffe8186e1788", "html_url": "https://github.com/rust-lang/rust/commit/a627377949d308603bb0bd7ef627ffe8186e1788"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "c9e07de86e43fa471a5d39b3870e235e73deea0f", "filename": "crates/hir_def/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe", "patch": "@@ -673,7 +673,7 @@ fn macro_call_as_call_id(\n     Ok(res)\n }\n \n-fn item_attr_as_call_id(\n+fn derive_macro_as_call_id(\n     item_attr: &AstIdWithPath<ast::Item>,\n     db: &dyn db::DefDatabase,\n     krate: CrateId,\n@@ -685,7 +685,7 @@ fn item_attr_as_call_id(\n         .as_lazy_macro(\n             db.upcast(),\n             krate,\n-            MacroCallKind::Attr(item_attr.ast_id, last_segment.to_string()),\n+            MacroCallKind::Derive(item_attr.ast_id, last_segment.to_string()),\n         )\n         .into();\n     Ok(res)"}, {"sha": "0d3a0b54fae3ab16ab7a3c7c3303d31b99034e01", "filename": "crates/hir_def/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres.rs?ref=54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe", "patch": "@@ -575,7 +575,7 @@ mod diagnostics {\n                             let node = ast.to_node(db.upcast());\n                             (ast.file_id, SyntaxNodePtr::from(AstPtr::new(&node)), None)\n                         }\n-                        MacroCallKind::Attr(ast, name) => {\n+                        MacroCallKind::Derive(ast, name) => {\n                             let node = ast.to_node(db.upcast());\n \n                             // Compute the precise location of the macro name's token in the derive\n@@ -631,7 +631,7 @@ mod diagnostics {\n                             let node = ast.to_node(db.upcast());\n                             (ast.file_id, SyntaxNodePtr::from(AstPtr::new(&node)))\n                         }\n-                        MacroCallKind::Attr(ast, _) => {\n+                        MacroCallKind::Derive(ast, _) => {\n                             let node = ast.to_node(db.upcast());\n                             (ast.file_id, SyntaxNodePtr::from(AstPtr::new(&node)))\n                         }"}, {"sha": "4bcdc0fc844babd2992eb22a34c210410c53bb53", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe", "patch": "@@ -22,7 +22,7 @@ use syntax::ast;\n use crate::{\n     attr::Attrs,\n     db::DefDatabase,\n-    item_attr_as_call_id,\n+    derive_macro_as_call_id,\n     item_scope::{ImportType, PerNsGlobImports},\n     item_tree::{\n         self, FileItemTreeId, ItemTree, ItemTreeId, MacroCall, MacroRules, Mod, ModItem, ModKind,\n@@ -820,8 +820,8 @@ impl DefCollector<'_> {\n             true\n         });\n         attribute_macros.retain(|directive| {\n-            match item_attr_as_call_id(&directive.ast_id, self.db, self.def_map.krate, |path| {\n-                self.resolve_attribute_macro(&directive, &path)\n+            match derive_macro_as_call_id(&directive.ast_id, self.db, self.def_map.krate, |path| {\n+                self.resolve_derive_macro(&directive, &path)\n             }) {\n                 Ok(call_id) => {\n                     resolved.push((directive.module_id, call_id, 0));\n@@ -844,7 +844,7 @@ impl DefCollector<'_> {\n         res\n     }\n \n-    fn resolve_attribute_macro(\n+    fn resolve_derive_macro(\n         &self,\n         directive: &DeriveDirective,\n         path: &ModPath,"}, {"sha": "6ece4b289596ab0344433ddced86e4b68a9aa154", "filename": "crates/hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe", "patch": "@@ -317,7 +317,7 @@ $0\n                 local_inner: false,\n             },\n             krate: CrateId(0),\n-            kind: MacroCallKind::Attr(attr_id, name.to_string()),\n+            kind: MacroCallKind::Derive(attr_id, name.to_string()),\n         };\n \n         let id: MacroCallId = db.intern_macro(loc).into();"}, {"sha": "c958b08659057ca31746d5cfb5c6181282354f24", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=54c78c96dbe61c2f1b6ec9f83a35a8ad6f6ae4fe", "patch": "@@ -271,21 +271,21 @@ pub struct MacroCallLoc {\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum MacroCallKind {\n     FnLike(AstId<ast::MacroCall>),\n-    Attr(AstId<ast::Item>, String),\n+    Derive(AstId<ast::Item>, String),\n }\n \n impl MacroCallKind {\n     fn file_id(&self) -> HirFileId {\n         match self {\n             MacroCallKind::FnLike(ast_id) => ast_id.file_id,\n-            MacroCallKind::Attr(ast_id, _) => ast_id.file_id,\n+            MacroCallKind::Derive(ast_id, _) => ast_id.file_id,\n         }\n     }\n \n     fn node(&self, db: &dyn db::AstDatabase) -> InFile<SyntaxNode> {\n         match self {\n             MacroCallKind::FnLike(ast_id) => ast_id.with_value(ast_id.to_node(db).syntax().clone()),\n-            MacroCallKind::Attr(ast_id, _) => {\n+            MacroCallKind::Derive(ast_id, _) => {\n                 ast_id.with_value(ast_id.to_node(db).syntax().clone())\n             }\n         }\n@@ -296,7 +296,7 @@ impl MacroCallKind {\n             MacroCallKind::FnLike(ast_id) => {\n                 Some(ast_id.to_node(db).token_tree()?.syntax().clone())\n             }\n-            MacroCallKind::Attr(ast_id, _) => Some(ast_id.to_node(db).syntax().clone()),\n+            MacroCallKind::Derive(ast_id, _) => Some(ast_id.to_node(db).syntax().clone()),\n         }\n     }\n }"}]}