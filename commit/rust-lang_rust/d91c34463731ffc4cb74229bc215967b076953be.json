{"sha": "d91c34463731ffc4cb74229bc215967b076953be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MWMzNDQ2MzczMWZmYzRjYjc0MjI5YmMyMTU5NjdiMDc2OTUzYmU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-16T12:16:29Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-16T12:16:29Z"}, "message": "Rollup merge of #30372 - sanxiyn:rustdoc-cfg, r=alexcrichton\n\nFix #30252.", "tree": {"sha": "ecd413371e11c2f74a02cc168f17b53991bcae84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecd413371e11c2f74a02cc168f17b53991bcae84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d91c34463731ffc4cb74229bc215967b076953be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d91c34463731ffc4cb74229bc215967b076953be", "html_url": "https://github.com/rust-lang/rust/commit/d91c34463731ffc4cb74229bc215967b076953be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d91c34463731ffc4cb74229bc215967b076953be/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b20f427391e9ca6c9a0439df77dfc938c0ba59da", "url": "https://api.github.com/repos/rust-lang/rust/commits/b20f427391e9ca6c9a0439df77dfc938c0ba59da", "html_url": "https://github.com/rust-lang/rust/commit/b20f427391e9ca6c9a0439df77dfc938c0ba59da"}, {"sha": "eb2572106374ba39b5787cf2495782f4538a4c24", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2572106374ba39b5787cf2495782f4538a4c24", "html_url": "https://github.com/rust-lang/rust/commit/eb2572106374ba39b5787cf2495782f4538a4c24"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "af6510cb3870e1fcf44b9739f30e596c692b68ca", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d91c34463731ffc4cb74229bc215967b076953be/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91c34463731ffc4cb74229bc215967b076953be/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=d91c34463731ffc4cb74229bc215967b076953be", "patch": "@@ -261,7 +261,7 @@ pub fn main_args(args: &[String]) -> isize {\n \n     match (should_test, markdown_input) {\n         (true, true) => {\n-            return markdown::test(input, libs, externs, test_args)\n+            return markdown::test(input, cfgs, libs, externs, test_args)\n         }\n         (true, false) => {\n             return test::run(input, cfgs, libs, externs, test_args, crate_name)"}, {"sha": "03d2c1a1b4d0d3ea2189e37ec9858faf7b68bf7b", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d91c34463731ffc4cb74229bc215967b076953be/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91c34463731ffc4cb74229bc215967b076953be/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=d91c34463731ffc4cb74229bc215967b076953be", "patch": "@@ -142,13 +142,13 @@ pub fn render(input: &str, mut output: PathBuf, matches: &getopts::Matches,\n }\n \n /// Run any tests/code examples in the markdown file `input`.\n-pub fn test(input: &str, libs: SearchPaths, externs: core::Externs,\n+pub fn test(input: &str, cfgs: Vec<String>, libs: SearchPaths, externs: core::Externs,\n             mut test_args: Vec<String>) -> isize {\n     let input_str = load_or_return!(input, 1, 2);\n \n     let mut opts = TestOptions::default();\n     opts.no_crate_inject = true;\n-    let mut collector = Collector::new(input.to_string(), libs, externs,\n+    let mut collector = Collector::new(input.to_string(), cfgs, libs, externs,\n                                        true, opts);\n     find_testable_code(&input_str, &mut collector);\n     test_args.insert(0, \"rustdoctest\".to_string());"}, {"sha": "3322794c7781e28827a66df5cb66ebb52a49d445", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d91c34463731ffc4cb74229bc215967b076953be/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91c34463731ffc4cb74229bc215967b076953be/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=d91c34463731ffc4cb74229bc215967b076953be", "patch": "@@ -85,7 +85,7 @@ pub fn run(input: &str,\n     rustc_lint::register_builtins(&mut sess.lint_store.borrow_mut(), Some(&sess));\n \n     let mut cfg = config::build_configuration(&sess);\n-    cfg.extend(config::parse_cfgspecs(cfgs));\n+    cfg.extend(config::parse_cfgspecs(cfgs.clone()));\n     let krate = driver::phase_1_parse_input(&sess, cfg, &input);\n     let krate = driver::phase_2_configure_and_expand(&sess, &cstore, krate,\n                                                      \"rustdoc-test\", None)\n@@ -122,6 +122,7 @@ pub fn run(input: &str,\n     let (krate, _) = passes::unindent_comments(krate);\n \n     let mut collector = Collector::new(krate.name.to_string(),\n+                                       cfgs,\n                                        libs,\n                                        externs,\n                                        false,\n@@ -168,7 +169,7 @@ fn scrape_test_config(krate: &::rustc_front::hir::Crate) -> TestOptions {\n     return opts;\n }\n \n-fn runtest(test: &str, cratename: &str, libs: SearchPaths,\n+fn runtest(test: &str, cratename: &str, cfgs: Vec<String>, libs: SearchPaths,\n            externs: core::Externs,\n            should_panic: bool, no_run: bool, as_test_harness: bool,\n            opts: &TestOptions) {\n@@ -239,7 +240,8 @@ fn runtest(test: &str, cratename: &str, libs: SearchPaths,\n \n     let outdir = TempDir::new(\"rustdoctest\").ok().expect(\"rustdoc needs a tempdir\");\n     let out = Some(outdir.path().to_path_buf());\n-    let cfg = config::build_configuration(&sess);\n+    let mut cfg = config::build_configuration(&sess);\n+    cfg.extend(config::parse_cfgspecs(cfgs));\n     let libdir = sess.target_filesearch(PathKind::All).get_lib_path();\n     let mut control = driver::CompileController::basic();\n     if no_run {\n@@ -349,6 +351,7 @@ fn partition_source(s: &str) -> (String, String) {\n pub struct Collector {\n     pub tests: Vec<testing::TestDescAndFn>,\n     names: Vec<String>,\n+    cfgs: Vec<String>,\n     libs: SearchPaths,\n     externs: core::Externs,\n     cnt: usize,\n@@ -359,11 +362,12 @@ pub struct Collector {\n }\n \n impl Collector {\n-    pub fn new(cratename: String, libs: SearchPaths, externs: core::Externs,\n+    pub fn new(cratename: String, cfgs: Vec<String>, libs: SearchPaths, externs: core::Externs,\n                use_headers: bool, opts: TestOptions) -> Collector {\n         Collector {\n             tests: Vec::new(),\n             names: Vec::new(),\n+            cfgs: cfgs,\n             libs: libs,\n             externs: externs,\n             cnt: 0,\n@@ -384,6 +388,7 @@ impl Collector {\n             format!(\"{}_{}\", self.names.join(\"::\"), self.cnt)\n         };\n         self.cnt += 1;\n+        let cfgs = self.cfgs.clone();\n         let libs = self.libs.clone();\n         let externs = self.externs.clone();\n         let cratename = self.cratename.to_string();\n@@ -399,6 +404,7 @@ impl Collector {\n             testfn: testing::DynTestFn(Box::new(move|| {\n                 runtest(&test,\n                         &cratename,\n+                        cfgs,\n                         libs,\n                         externs,\n                         should_panic,"}, {"sha": "11d161fe188e962dd092d48ace6ca1b084b4050c", "filename": "src/test/rustdoc/issue-30252.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d91c34463731ffc4cb74229bc215967b076953be/src%2Ftest%2Frustdoc%2Fissue-30252.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d91c34463731ffc4cb74229bc215967b076953be/src%2Ftest%2Frustdoc%2Fissue-30252.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-30252.rs?ref=d91c34463731ffc4cb74229bc215967b076953be", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--test --cfg feature=\"bar\"\n+\n+/// ```rust\n+/// assert_eq!(cfg!(feature = \"bar\"), true);\n+/// ```\n+pub fn foo() {}"}]}