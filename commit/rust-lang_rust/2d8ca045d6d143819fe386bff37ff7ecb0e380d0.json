{"sha": "2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkOGNhMDQ1ZDZkMTQzODE5ZmUzODZiZmYzN2ZmN2VjYjBlMzgwZDA=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-11-15T11:09:26Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-11-16T01:41:55Z"}, "message": "Rename IntoStr to IntoString\n\nFor consistancy with ToString", "tree": {"sha": "412dc5b62323f829c9fe5151f6ed5b2dfb2a322f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/412dc5b62323f829c9fe5151f6ed5b2dfb2a322f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "html_url": "https://github.com/rust-lang/rust/commit/2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d8ca045d6d143819fe386bff37ff7ecb0e380d0/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b156724a3ebe9fe1f1a590dfb626a31b2680145", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b156724a3ebe9fe1f1a590dfb626a31b2680145", "html_url": "https://github.com/rust-lang/rust/commit/8b156724a3ebe9fe1f1a590dfb626a31b2680145"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1b1b65bd560e16fb93b1fd73d6ece63a918f32b7", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d8ca045d6d143819fe386bff37ff7ecb0e380d0/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/2d8ca045d6d143819fe386bff37ff7ecb0e380d0/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "patch": "@@ -105,7 +105,7 @@ syn keyword rustTrait RawPtr\n syn keyword rustTrait Buffer Writer Reader Seek\n syn keyword rustTrait Str StrVector StrSlice\n syn keyword rustTrait IntoMaybeOwned StrAllocating UnicodeStrSlice\n-syn keyword rustTrait ToString IntoStr\n+syn keyword rustTrait ToString IntoString\n syn keyword rustTrait Tuple1 Tuple2 Tuple3 Tuple4\n syn keyword rustTrait Tuple5 Tuple6 Tuple7 Tuple8\n syn keyword rustTrait Tuple9 Tuple10 Tuple11 Tuple12"}, {"sha": "56b048c31877adf65ae314ce282308c37305902f", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2d8ca045d6d143819fe386bff37ff7ecb0e380d0/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8ca045d6d143819fe386bff37ff7ecb0e380d0/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "patch": "@@ -22,7 +22,7 @@ use option::{Option, Some, None};\n use slice::{SlicePrelude, AsSlice};\n use str::{Str, StrPrelude};\n use string::{mod, String};\n-use to_string::IntoStr;\n+use to_string::IntoString;\n use vec::Vec;\n \n /// Datatype to hold one ascii character. It wraps a `u8`, with the highest bit always zero.\n@@ -326,7 +326,7 @@ impl AsciiStr for [Ascii] {\n     }\n }\n \n-impl IntoStr for Vec<Ascii> {\n+impl IntoString for Vec<Ascii> {\n     #[inline]\n     fn into_string(self) -> String {\n         unsafe {"}, {"sha": "47dd07081d0e2904395004ffbf7d864206620ebb", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d8ca045d6d143819fe386bff37ff7ecb0e380d0/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8ca045d6d143819fe386bff37ff7ecb0e380d0/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "patch": "@@ -76,7 +76,7 @@\n #[doc(no_inline)] pub use io::{Buffer, Writer, Reader, Seek};\n #[doc(no_inline)] pub use str::{Str, StrVector, StrPrelude};\n #[doc(no_inline)] pub use str::{IntoMaybeOwned, StrAllocating, UnicodeStrPrelude};\n-#[doc(no_inline)] pub use to_string::{ToString, IntoStr};\n+#[doc(no_inline)] pub use to_string::{ToString, IntoString};\n #[doc(no_inline)] pub use tuple::{Tuple1, Tuple2, Tuple3, Tuple4};\n #[doc(no_inline)] pub use tuple::{Tuple5, Tuple6, Tuple7, Tuple8};\n #[doc(no_inline)] pub use tuple::{Tuple9, Tuple10, Tuple11, Tuple12};"}, {"sha": "737e467f19c790d55b91204a65342c88ff60ed06", "filename": "src/libstd/to_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d8ca045d6d143819fe386bff37ff7ecb0e380d0/src%2Flibstd%2Fto_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8ca045d6d143819fe386bff37ff7ecb0e380d0/src%2Flibstd%2Fto_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fto_string.rs?ref=2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "patch": "@@ -26,7 +26,7 @@ pub trait ToString {\n }\n \n /// Trait for converting a type to a string, consuming it in the process.\n-pub trait IntoStr {\n+pub trait IntoString {\n     /// Consume and convert to a string.\n     fn into_string(self) -> String;\n }"}]}