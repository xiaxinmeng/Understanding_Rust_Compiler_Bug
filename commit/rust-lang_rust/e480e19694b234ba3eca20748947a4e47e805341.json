{"sha": "e480e19694b234ba3eca20748947a4e47e805341", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ODBlMTk2OTRiMjM0YmEzZWNhMjA3NDg5NDdhNGU0N2U4MDUzNDE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-01T23:06:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-01T23:14:30Z"}, "message": "Attempt to fix option::test_unwrap_str breakage.", "tree": {"sha": "e11c8b18abdb460c48db5e9f463f0e4bc982e34c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e11c8b18abdb460c48db5e9f463f0e4bc982e34c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e480e19694b234ba3eca20748947a4e47e805341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e480e19694b234ba3eca20748947a4e47e805341", "html_url": "https://github.com/rust-lang/rust/commit/e480e19694b234ba3eca20748947a4e47e805341", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e480e19694b234ba3eca20748947a4e47e805341/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c8ff357272253e32f73c8170685969fb36e3ba3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8ff357272253e32f73c8170685969fb36e3ba3", "html_url": "https://github.com/rust-lang/rust/commit/9c8ff357272253e32f73c8170685969fb36e3ba3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "87d6aeefbc35e97317205bb4773e844d46a47408", "filename": "src/libcore/option.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e480e19694b234ba3eca20748947a4e47e805341/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e480e19694b234ba3eca20748947a4e47e805341/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=e480e19694b234ba3eca20748947a4e47e805341", "patch": "@@ -264,10 +264,10 @@ fn test_unwrap_ptr() {\n #[test]\n fn test_unwrap_str() {\n     let x = ~\"test\";\n-    let addr_x = str::as_buf(x, |buf, _len| ptr::p2::addr_of(&buf));\n-    let opt = Some(x);\n-    let y = unwrap(opt);\n-    let addr_y = str::as_buf(y, |buf, _len| ptr::p2::addr_of(&buf));\n+    let addr_x = str::as_buf(x, |buf, _len| buf);\n+    let opt = Some(move x);\n+    let y = unwrap(move opt);\n+    let addr_y = str::as_buf(y, |buf, _len| buf);\n     assert addr_x == addr_y;\n }\n "}]}