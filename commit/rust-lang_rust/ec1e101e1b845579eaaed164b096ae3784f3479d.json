{"sha": "ec1e101e1b845579eaaed164b096ae3784f3479d", "node_id": "C_kwDOAAsO6NoAKGVjMWUxMDFlMWI4NDU1NzllYWFlZDE2NGIwOTZhZTM3ODRmMzQ3OWQ", "commit": {"author": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-08-25T21:47:11Z"}, "committer": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-11-09T13:56:20Z"}, "message": "Fix diag() and formatting", "tree": {"sha": "fafe01e95eb03ac8225906eaac660ecf1b63ec00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fafe01e95eb03ac8225906eaac660ecf1b63ec00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec1e101e1b845579eaaed164b096ae3784f3479d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec1e101e1b845579eaaed164b096ae3784f3479d", "html_url": "https://github.com/rust-lang/rust/commit/ec1e101e1b845579eaaed164b096ae3784f3479d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec1e101e1b845579eaaed164b096ae3784f3479d/comments", "author": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f0c16576b9e094e84ec833a51a908ae5ff24d33", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f0c16576b9e094e84ec833a51a908ae5ff24d33", "html_url": "https://github.com/rust-lang/rust/commit/9f0c16576b9e094e84ec833a51a908ae5ff24d33"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "ed435e555d7e7f70e9f39d91a8c2fb43f017e12c", "filename": "compiler/rustc_codegen_llvm/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec1e101e1b845579eaaed164b096ae3784f3479d/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec1e101e1b845579eaaed164b096ae3784f3479d/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs?ref=ec1e101e1b845579eaaed164b096ae3784f3479d", "patch": "@@ -49,7 +49,7 @@ pub(crate) struct ErrorCreatingImportLibrary<'a> {\n pub(crate) struct InstrumentCoverageRequiresLLVM12;\n \n #[derive(SessionDiagnostic)]\n-#[diag(codegen_llvm::SymbolAlreadyDefined)]\n+#[diag(codegen_llvm::symbol_already_defined)]\n pub(crate) struct SymbolAlreadyDefined<'a> {\n     #[primary_span]\n     pub span: Span,"}, {"sha": "76f692b2016fd5ff64d4824206b856fc12811969", "filename": "compiler/rustc_codegen_llvm/src/mono_item.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec1e101e1b845579eaaed164b096ae3784f3479d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec1e101e1b845579eaaed164b096ae3784f3479d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fmono_item.rs?ref=ec1e101e1b845579eaaed164b096ae3784f3479d", "patch": "@@ -1,6 +1,7 @@\n use crate::attributes;\n use crate::base;\n use crate::context::CodegenCx;\n+use crate::errors::SymbolAlreadyDefined;\n use crate::llvm;\n use crate::type_of::LayoutLlvmExt;\n use rustc_codegen_ssa::traits::*;\n@@ -25,7 +26,8 @@ impl<'tcx> PreDefineMethods<'tcx> for CodegenCx<'_, 'tcx> {\n         let llty = self.layout_of(ty).llvm_type(self);\n \n         let g = self.define_global(symbol_name, llty).unwrap_or_else(|| {\n-            self.sess().emit_fatal(SymbolAlreadyDefined { span: self.tcx.def_span(def_id), symbol_name })\n+            self.sess()\n+                .emit_fatal(SymbolAlreadyDefined { span: self.tcx.def_span(def_id), symbol_name })\n         });\n \n         unsafe {"}]}