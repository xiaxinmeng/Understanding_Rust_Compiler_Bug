{"sha": "1692d0c142985a01a2770da8654912dc40342412", "node_id": "C_kwDOAAsO6NoAKDE2OTJkMGMxNDI5ODVhMDFhMjc3MGRhODY1NDkxMmRjNDAzNDI0MTI", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2023-03-23T04:13:27Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2023-03-23T11:13:16Z"}, "message": "Add a check to ensure tests with overlapping prefixes aren't added.\n\nSome tests will delete their output directory before starting.\nThe output directory is based on the test names.\nIf one test is the prefix of another test, then when that test\nstarts, it could try to delete the output directory of the other\ntest with the longer path.", "tree": {"sha": "6c99c6a9fa36331cfdc57ad4a6b65c461f8de63f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c99c6a9fa36331cfdc57ad4a6b65c461f8de63f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1692d0c142985a01a2770da8654912dc40342412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1692d0c142985a01a2770da8654912dc40342412", "html_url": "https://github.com/rust-lang/rust/commit/1692d0c142985a01a2770da8654912dc40342412", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1692d0c142985a01a2770da8654912dc40342412/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2da2ade0f7b289cd2d670fa6c77f50b3559ede2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2da2ade0f7b289cd2d670fa6c77f50b3559ede2b", "html_url": "https://github.com/rust-lang/rust/commit/2da2ade0f7b289cd2d670fa6c77f50b3559ede2b"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "c4d9bb6cec6e7607d81d78d7302ddcdcc959fcb2", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/1692d0c142985a01a2770da8654912dc40342412/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1692d0c142985a01a2770da8654912dc40342412/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=1692d0c142985a01a2770da8654912dc40342412", "patch": "@@ -12,6 +12,7 @@ use build_helper::git::{get_git_modified_files, get_git_untracked_files};\n use core::panic;\n use getopts::Options;\n use lazycell::LazyCell;\n+use std::collections::BTreeSet;\n use std::ffi::OsString;\n use std::fs;\n use std::io::{self, ErrorKind};\n@@ -406,7 +407,9 @@ pub fn run_tests(config: Config) {\n \n     let mut tests = Vec::new();\n     for c in &configs {\n-        make_tests(c, &mut tests);\n+        let mut found_paths = BTreeSet::new();\n+        make_tests(c, &mut tests, &mut found_paths);\n+        check_overlapping_tests(&found_paths);\n     }\n \n     tests.sort_by(|a, b| a.desc.name.as_slice().cmp(&b.desc.name.as_slice()));\n@@ -528,7 +531,11 @@ pub fn test_opts(config: &Config) -> test::TestOpts {\n     }\n }\n \n-pub fn make_tests(config: &Config, tests: &mut Vec<test::TestDescAndFn>) {\n+pub fn make_tests(\n+    config: &Config,\n+    tests: &mut Vec<test::TestDescAndFn>,\n+    found_paths: &mut BTreeSet<PathBuf>,\n+) {\n     debug!(\"making tests from {:?}\", config.src_base.display());\n     let inputs = common_inputs_stamp(config);\n     let modified_tests = modified_tests(config, &config.src_base).unwrap_or_else(|err| {\n@@ -540,6 +547,7 @@ pub fn make_tests(config: &Config, tests: &mut Vec<test::TestDescAndFn>) {\n         &PathBuf::new(),\n         &inputs,\n         tests,\n+        found_paths,\n         &modified_tests,\n     )\n     .unwrap_or_else(|_| panic!(\"Could not read tests from {}\", config.src_base.display()));\n@@ -610,6 +618,7 @@ fn collect_tests_from_dir(\n     relative_dir_path: &Path,\n     inputs: &Stamp,\n     tests: &mut Vec<test::TestDescAndFn>,\n+    found_paths: &mut BTreeSet<PathBuf>,\n     modified_tests: &Vec<PathBuf>,\n ) -> io::Result<()> {\n     // Ignore directories that contain a file named `compiletest-ignore-dir`.\n@@ -643,6 +652,8 @@ fn collect_tests_from_dir(\n         let file_name = file.file_name();\n         if is_test(&file_name) && (!config.only_modified || modified_tests.contains(&file_path)) {\n             debug!(\"found test file: {:?}\", file_path.display());\n+            let rel_test_path = relative_dir_path.join(file_path.file_stem().unwrap());\n+            found_paths.insert(rel_test_path);\n             let paths =\n                 TestPaths { file: file_path, relative_dir: relative_dir_path.to_path_buf() };\n \n@@ -657,6 +668,7 @@ fn collect_tests_from_dir(\n                     &relative_file_path,\n                     inputs,\n                     tests,\n+                    found_paths,\n                     modified_tests,\n                 )?;\n             }\n@@ -1072,3 +1084,24 @@ fn extract_lldb_version(full_version_line: &str) -> Option<(u32, bool)> {\n fn not_a_digit(c: char) -> bool {\n     !c.is_digit(10)\n }\n+\n+fn check_overlapping_tests(found_paths: &BTreeSet<PathBuf>) {\n+    let mut collisions = Vec::new();\n+    for path in found_paths {\n+        for ancestor in path.ancestors().skip(1) {\n+            if found_paths.contains(ancestor) {\n+                collisions.push((path, ancestor.clone()));\n+            }\n+        }\n+    }\n+    if !collisions.is_empty() {\n+        let collisions: String = collisions\n+            .into_iter()\n+            .map(|(path, check_parent)| format!(\"test {path:?} clashes with {check_parent:?}\\n\"))\n+            .collect();\n+        panic!(\n+            \"{collisions}\\n\\\n+            Tests cannot have overlapping names. Make sure they use unique prefixes.\"\n+        );\n+    }\n+}"}]}