{"sha": "74537614056f276e74903baa03d1d06985ac3b61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NTM3NjE0MDU2ZjI3NmU3NDkwM2JhYTAzZDFkMDY5ODVhYzNiNjE=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-11-12T22:13:35Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-11-12T22:13:35Z"}, "message": "Implement all binary operations on ints.", "tree": {"sha": "aced337848336803a988b83e6f0bcee1561a8129", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aced337848336803a988b83e6f0bcee1561a8129"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74537614056f276e74903baa03d1d06985ac3b61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74537614056f276e74903baa03d1d06985ac3b61", "html_url": "https://github.com/rust-lang/rust/commit/74537614056f276e74903baa03d1d06985ac3b61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74537614056f276e74903baa03d1d06985ac3b61/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e80530bdb78614b12d8a5fd3c2ec316ed82e5cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e80530bdb78614b12d8a5fd3c2ec316ed82e5cd", "html_url": "https://github.com/rust-lang/rust/commit/4e80530bdb78614b12d8a5fd3c2ec316ed82e5cd"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "63a5ae965383af508c965f3a2f624846566fbb41", "filename": "src/interpreter.rs", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/74537614056f276e74903baa03d1d06985ac3b61/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74537614056f276e74903baa03d1d06985ac3b61/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=74537614056f276e74903baa03d1d06985ac3b61", "patch": "@@ -7,6 +7,7 @@ use syntax::attr::AttrMetaMethods;\n #[derive(Clone, Debug)]\n enum Value {\n     Uninit,\n+    Bool(bool),\n     Int(i64),\n }\n \n@@ -56,16 +57,32 @@ impl<'tcx> Interpreter<'tcx> {\n         println!(\"=> {:?}\", self.result);\n     }\n \n-    fn eval_rvalue(&mut self, rv: &mir::Rvalue) -> Value {\n+    fn eval_rvalue(&mut self, rvalue: &mir::Rvalue) -> Value {\n         use rustc_mir::repr::Rvalue::*;\n+        use rustc_mir::repr::BinOp::*;\n \n-        match *rv {\n-            Use(ref op) => self.eval_operand(op),\n-            BinaryOp(mir::BinOp::Add, ref left, ref right) => {\n-                let left_val = self.eval_operand(left);\n-                let right_val = self.eval_operand(right);\n-                match (left_val, right_val) {\n-                    (Value::Int(l), Value::Int(r)) => Value::Int(l + r),\n+        match *rvalue {\n+            Use(ref operand) => self.eval_operand(operand),\n+            BinaryOp(bin_op, ref left, ref right) => {\n+                match (self.eval_operand(left), self.eval_operand(right)) {\n+                    (Value::Int(l), Value::Int(r)) => match bin_op {\n+                        Add => Value::Int(l + r),\n+                        Sub => Value::Int(l - r),\n+                        Mul => Value::Int(l * r),\n+                        Div => Value::Int(l / r),\n+                        Rem => Value::Int(l % r),\n+                        BitXor => Value::Int(l ^ r),\n+                        BitAnd => Value::Int(l & r),\n+                        BitOr => Value::Int(l | r),\n+                        Shl => Value::Int(l << r),\n+                        Shr => Value::Int(l >> r),\n+                        Eq => Value::Bool(l == r),\n+                        Lt => Value::Bool(l < r),\n+                        Le => Value::Bool(l <= r),\n+                        Ne => Value::Bool(l != r),\n+                        Ge => Value::Bool(l >= r),\n+                        Gt => Value::Bool(l > r),\n+                    },\n                     _ => unimplemented!(),\n                 }\n             }"}]}