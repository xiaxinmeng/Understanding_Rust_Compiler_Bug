{"sha": "3836578be271e02961e2d65d3fd09630deeb194b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MzY1NzhiZTI3MWUwMjk2MWUyZDY1ZDNmZDA5NjMwZGVlYjE5NGI=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-01-08T18:02:31Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-01-08T18:02:31Z"}, "message": "Rollup merge of #30758 - birkenfeld:fix-30743, r=steveklabnik\n\n (fixes #30743)\n\nNot sure if the \"Note\" should be kept.", "tree": {"sha": "27db29faf435ba8f0ee29e33d4d3db1fdb070e59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27db29faf435ba8f0ee29e33d4d3db1fdb070e59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3836578be271e02961e2d65d3fd09630deeb194b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3836578be271e02961e2d65d3fd09630deeb194b", "html_url": "https://github.com/rust-lang/rust/commit/3836578be271e02961e2d65d3fd09630deeb194b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3836578be271e02961e2d65d3fd09630deeb194b/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b5f7946d84c782d8b80a46cade9b42eed09d373", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b5f7946d84c782d8b80a46cade9b42eed09d373", "html_url": "https://github.com/rust-lang/rust/commit/0b5f7946d84c782d8b80a46cade9b42eed09d373"}, {"sha": "cdbf2d6e3643c81211da65255138caf019a80cf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbf2d6e3643c81211da65255138caf019a80cf7", "html_url": "https://github.com/rust-lang/rust/commit/cdbf2d6e3643c81211da65255138caf019a80cf7"}], "stats": {"total": 40, "additions": 17, "deletions": 23}, "files": [{"sha": "eb5ddecbd054d090700585fc3c9ef971efeaf893", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 17, "deletions": 23, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3836578be271e02961e2d65d3fd09630deeb194b/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3836578be271e02961e2d65d3fd09630deeb194b/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=3836578be271e02961e2d65d3fd09630deeb194b", "patch": "@@ -8,27 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! A type that can represent all platform-native strings, but is cheaply\n-//! interconvertable with Rust strings.\n-//!\n-//! The need for this type arises from the fact that:\n-//!\n-//! * On Unix systems, strings are often arbitrary sequences of non-zero\n-//!   bytes, in many cases interpreted as UTF-8.\n-//!\n-//! * On Windows, strings are often arbitrary sequences of non-zero 16-bit\n-//!   values, interpreted as UTF-16 when it is valid to do so.\n-//!\n-//! * In Rust, strings are always valid UTF-8, but may contain zeros.\n-//!\n-//! The types in this module bridge this gap by simultaneously representing Rust\n-//! and platform-native string values, and in particular allowing a Rust string\n-//! to be converted into an \"OS\" string with no cost.\n-//!\n-//! **Note**: At the moment, these types are extremely bare-bones, usable only\n-//! for conversion to/from various other string types. Eventually these types\n-//! will offer a full-fledged string API.\n-\n use borrow::{Borrow, Cow, ToOwned};\n use ffi::CString;\n use fmt::{self, Debug};\n@@ -42,14 +21,29 @@ use vec::Vec;\n use sys::os_str::{Buf, Slice};\n use sys_common::{AsInner, IntoInner, FromInner};\n \n-/// Owned, mutable OS strings.\n+/// A type that can represent owned, mutable platform-native strings, but is\n+/// cheaply interconvertable with Rust strings.\n+///\n+/// The need for this type arises from the fact that:\n+///\n+/// * On Unix systems, strings are often arbitrary sequences of non-zero\n+///   bytes, in many cases interpreted as UTF-8.\n+///\n+/// * On Windows, strings are often arbitrary sequences of non-zero 16-bit\n+///   values, interpreted as UTF-16 when it is valid to do so.\n+///\n+/// * In Rust, strings are always valid UTF-8, but may contain zeros.\n+///\n+/// `OsString` and `OsStr` bridge this gap by simultaneously representing Rust\n+/// and platform-native string values, and in particular allowing a Rust string\n+/// to be converted into an \"OS\" string with no cost.\n #[derive(Clone)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct OsString {\n     inner: Buf\n }\n \n-/// Slices into OS strings.\n+/// Slices into OS strings (see `OsString`).\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct OsStr {\n     inner: Slice"}]}