{"sha": "1339d0543407d653842503704642fb34f8e6a82d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMzlkMDU0MzQwN2Q2NTM4NDI1MDM3MDQ2NDJmYjM0ZjhlNmE4MmQ=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-07T15:01:46Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-07T15:01:46Z"}, "message": "Work around destructuring bug", "tree": {"sha": "94e233555aa264919bc0bcf6558a2e42ce880a7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94e233555aa264919bc0bcf6558a2e42ce880a7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1339d0543407d653842503704642fb34f8e6a82d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1339d0543407d653842503704642fb34f8e6a82d", "html_url": "https://github.com/rust-lang/rust/commit/1339d0543407d653842503704642fb34f8e6a82d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1339d0543407d653842503704642fb34f8e6a82d/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3edf8dd5e83544d769b5deb9eb1d391f8f826ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3edf8dd5e83544d769b5deb9eb1d391f8f826ee", "html_url": "https://github.com/rust-lang/rust/commit/f3edf8dd5e83544d769b5deb9eb1d391f8f826ee"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "01aced2e41dff05b5ebb251d485fffb9374b975a", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/1339d0543407d653842503704642fb34f8e6a82d/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1339d0543407d653842503704642fb34f8e6a82d/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=1339d0543407d653842503704642fb34f8e6a82d", "patch": "@@ -2055,19 +2055,27 @@ fn check_expr_with_unifier(fcx: &@fn_ctxt, expr: &@ast::expr, unify: &unifier,\n         bot = check_call_or_bind(fcx, expr.span, f, args, kind_bind);\n \n         // Pull the argument and return types out.\n-        let (proto, arg_tys, rt, cf, constrs) =\n-            alt structure_of(fcx, expr.span, expr_ty(tcx, f)) {\n-              // FIXME:\n-              // probably need to munge the constrs to drop constraints\n-              // for any bound args\n-              ty::ty_fn(proto, arg_tys, rt, cf, constrs) {\n-                (proto, arg_tys, rt, cf, constrs)\n-              }\n-              ty::ty_native_fn(_, arg_tys, rt) {\n-                (ast::proto_fn, arg_tys, rt, ast::return, [])\n-              }\n-              _ { fail \"LHS of bind expr didn't have a function type?!\"; }\n-            };\n+        let proto, arg_tys, rt, cf, constrs;\n+        alt structure_of(fcx, expr.span, expr_ty(tcx, f)) {\n+          // FIXME:\n+          // probably need to munge the constrs to drop constraints\n+          // for any bound args\n+          ty::ty_fn(proto_, arg_tys_, rt_, cf_, constrs_) {\n+            proto = proto_;\n+            arg_tys = arg_tys_;\n+            rt = rt_;\n+            cf = cf_;\n+            constrs = constrs_;\n+          }\n+          ty::ty_native_fn(_, arg_tys_, rt_) {\n+            proto = ast::proto_fn;\n+            arg_tys = arg_tys_;\n+            rt = rt_;\n+            cf = ast::return;\n+            constrs = [];\n+          }\n+          _ { fail \"LHS of bind expr didn't have a function type?!\"; }\n+        };\n \n         // For each blank argument, add the type of that argument\n         // to the resulting function type."}]}