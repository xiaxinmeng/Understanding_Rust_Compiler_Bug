{"sha": "ea042b90c9b66cf5431acddd29e54468c05ea65b", "node_id": "C_kwDOAAsO6NoAKGVhMDQyYjkwYzliNjZjZjU0MzFhY2RkZDI5ZTU0NDY4YzA1ZWE2NWI", "commit": {"author": {"name": "mujpao", "email": "mujpao@gmail.com", "date": "2021-11-24T23:05:23Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-11-27T17:38:36Z"}, "message": "Add more tests for comments in lists", "tree": {"sha": "1802807ceb500d497ca463be62d9fda4dc87863e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1802807ceb500d497ca463be62d9fda4dc87863e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea042b90c9b66cf5431acddd29e54468c05ea65b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea042b90c9b66cf5431acddd29e54468c05ea65b", "html_url": "https://github.com/rust-lang/rust/commit/ea042b90c9b66cf5431acddd29e54468c05ea65b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea042b90c9b66cf5431acddd29e54468c05ea65b/comments", "author": {"login": "mujpao", "id": 13281891, "node_id": "MDQ6VXNlcjEzMjgxODkx", "avatar_url": "https://avatars.githubusercontent.com/u/13281891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mujpao", "html_url": "https://github.com/mujpao", "followers_url": "https://api.github.com/users/mujpao/followers", "following_url": "https://api.github.com/users/mujpao/following{/other_user}", "gists_url": "https://api.github.com/users/mujpao/gists{/gist_id}", "starred_url": "https://api.github.com/users/mujpao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mujpao/subscriptions", "organizations_url": "https://api.github.com/users/mujpao/orgs", "repos_url": "https://api.github.com/users/mujpao/repos", "events_url": "https://api.github.com/users/mujpao/events{/privacy}", "received_events_url": "https://api.github.com/users/mujpao/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "243cec7a0b9cc0ba3fba6e5ed849b0635f3496db", "url": "https://api.github.com/repos/rust-lang/rust/commits/243cec7a0b9cc0ba3fba6e5ed849b0635f3496db", "html_url": "https://github.com/rust-lang/rust/commit/243cec7a0b9cc0ba3fba6e5ed849b0635f3496db"}], "stats": {"total": 199, "additions": 199, "deletions": 0}, "files": [{"sha": "b96c02802d69c23ee699fbc58c1fcc9ba8151b0a", "filename": "tests/source/comments-in-lists/wrap-comments-not-normalized.rs", "status": "renamed", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Fsource%2Fcomments-in-lists%2Fwrap-comments-not-normalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Fsource%2Fcomments-in-lists%2Fwrap-comments-not-normalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fcomments-in-lists%2Fwrap-comments-not-normalized.rs?ref=ea042b90c9b66cf5431acddd29e54468c05ea65b", "patch": "@@ -1,5 +1,6 @@\n // rustfmt-wrap_comments: true\n \n+// https://github.com/rust-lang/rustfmt/issues/4909\n pub enum E {\n     // Expand as needed, numbers should be ascending according to the stage\n     // through the inclusion pipeline, or according to the descriptions\n@@ -105,4 +106,24 @@ fn main() {\n         2,\n         // Expand as needed, numbers should be ascending according to the stage through the inclusion pipeline, or according to the descriptions\n     ];\n+\n+    // https://github.com/rust-lang/rustfmt/issues/4430\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+    }\n+\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage through the inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage through the inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage through the inclusion pipeline, or according to the descriptions\n+    }\n }", "previous_filename": "tests/source/issue-4909/wrap-comments-not-normalized.rs"}, {"sha": "360b838520eda3030167d60618818505c5f25dc9", "filename": "tests/source/comments-in-lists/wrap-comments-true.rs", "status": "renamed", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Fsource%2Fcomments-in-lists%2Fwrap-comments-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Fsource%2Fcomments-in-lists%2Fwrap-comments-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fcomments-in-lists%2Fwrap-comments-true.rs?ref=ea042b90c9b66cf5431acddd29e54468c05ea65b", "patch": "@@ -1,6 +1,7 @@\n // rustfmt-normalize_comments: true\n // rustfmt-wrap_comments: true\n \n+// https://github.com/rust-lang/rustfmt/issues/4909\n pub enum E {\n     // Expand as needed, numbers should be ascending according to the stage\n     // through the inclusion pipeline, or according to the descriptions\n@@ -106,4 +107,24 @@ fn main() {\n         2,\n         // Expand as needed, numbers should be ascending according to the stage through the inclusion pipeline, or according to the descriptions\n     ];\n+\n+    // https://github.com/rust-lang/rustfmt/issues/4430\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+    }\n+\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage through the inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage through the inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage through the inclusion pipeline, or according to the descriptions\n+    }\n }", "previous_filename": "tests/source/issue-4909/wrap-comments-true.rs"}, {"sha": "be31bf0a33198511f63e93dae7bec3cc09bd0fa1", "filename": "tests/target/comments-in-lists/format-doc-comments.rs", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Ftarget%2Fcomments-in-lists%2Fformat-doc-comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Ftarget%2Fcomments-in-lists%2Fformat-doc-comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomments-in-lists%2Fformat-doc-comments.rs?ref=ea042b90c9b66cf5431acddd29e54468c05ea65b", "patch": "@@ -0,0 +1,96 @@\n+// rustfmt-format_code_in_doc_comments: true\n+\n+// https://github.com/rust-lang/rustfmt/issues/4420\n+enum Minimal {\n+    Example,\n+    //[thisisremoved thatsleft\n+    // canbeanything\n+}\n+\n+struct Minimal2 {\n+    Example: usize,\n+    //[thisisremoved thatsleft\n+    // canbeanything\n+}\n+\n+pub enum E {\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+    Variant1,\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+    Variant2,\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+}\n+\n+pub enum E2 {\n+    // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n+// Expand as needed, numbers should be ascending according to the stage\n+// through the inclusion pipeline, or according to the descriptions\n+}\n+\n+pub struct S {\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+    some_field: usize,\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+    last_field: usize,\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+}\n+\n+pub struct S2 {\n+    // This can be changed once https://github.com/rust-lang/rustfmt/issues/4854 is fixed\n+// Expand as needed, numbers should be ascending according to the stage\n+// through the inclusion pipeline, or according to the descriptions\n+}\n+\n+fn foo(\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+    a: usize,\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+    b: usize,\n+    // Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+) -> usize {\n+    5\n+}\n+\n+fn foo2(// Expand as needed, numbers should be ascending according to the stage\n+    // through the inclusion pipeline, or according to the descriptions\n+) -> usize {\n+    5\n+}\n+\n+fn main() {\n+    let v = vec![\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        1,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        2,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+    ];\n+\n+    let v2: Vec<i32> = vec![\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+    ];\n+\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+    }\n+}"}, {"sha": "80aea59d1b520982bdec702488733c7dceb9aa1f", "filename": "tests/target/comments-in-lists/wrap-comments-false.rs", "status": "renamed", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-false.rs?ref=ea042b90c9b66cf5431acddd29e54468c05ea65b", "patch": "@@ -1,5 +1,6 @@\n // rustfmt-normalize_comments: true\n \n+// https://github.com/rust-lang/rustfmt/issues/4909\n pub enum E {\n     // Expand as needed, numbers should be ascending according to the stage\n     // through the inclusion pipeline, or according to the descriptions\n@@ -69,4 +70,16 @@ fn main() {\n         // Expand as needed, numbers should be ascending according to the stage\n         // through the inclusion pipeline, or according to the descriptions\n     ];\n+\n+    // https://github.com/rust-lang/rustfmt/issues/4430\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+    }\n }", "previous_filename": "tests/target/issue-4909/wrap-comments-false.rs"}, {"sha": "52315f470e4b9d01a53ba86f767aecbf7270290a", "filename": "tests/target/comments-in-lists/wrap-comments-not-normalized.rs", "status": "renamed", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-not-normalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-not-normalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-not-normalized.rs?ref=ea042b90c9b66cf5431acddd29e54468c05ea65b", "patch": "@@ -1,5 +1,6 @@\n // rustfmt-wrap_comments: true\n \n+// https://github.com/rust-lang/rustfmt/issues/4909\n pub enum E {\n     // Expand as needed, numbers should be ascending according to the stage\n     // through the inclusion pipeline, or according to the descriptions\n@@ -115,4 +116,27 @@ fn main() {\n         // Expand as needed, numbers should be ascending according to the stage through the\n         // inclusion pipeline, or according to the descriptions\n     ];\n+\n+    // https://github.com/rust-lang/rustfmt/issues/4430\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+    }\n+\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage through the\n+        // inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage through the\n+        // inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage through the\n+        // inclusion pipeline, or according to the descriptions\n+    }\n }", "previous_filename": "tests/target/issue-4909/wrap-comments-not-normalized.rs"}, {"sha": "e0bfcf0b5007da31ba944a6cf5ddc517e65a1aad", "filename": "tests/target/comments-in-lists/wrap-comments-true.rs", "status": "renamed", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea042b90c9b66cf5431acddd29e54468c05ea65b/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomments-in-lists%2Fwrap-comments-true.rs?ref=ea042b90c9b66cf5431acddd29e54468c05ea65b", "patch": "@@ -1,6 +1,7 @@\n // rustfmt-normalize_comments: true\n // rustfmt-wrap_comments: true\n \n+// https://github.com/rust-lang/rustfmt/issues/4909\n pub enum E {\n     // Expand as needed, numbers should be ascending according to the stage\n     // through the inclusion pipeline, or according to the descriptions\n@@ -116,4 +117,27 @@ fn main() {\n         // Expand as needed, numbers should be ascending according to the stage through the\n         // inclusion pipeline, or according to the descriptions\n     ];\n+\n+    // https://github.com/rust-lang/rustfmt/issues/4430\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage\n+        // through the inclusion pipeline, or according to the descriptions\n+    }\n+\n+    match a {\n+        // Expand as needed, numbers should be ascending according to the stage through the\n+        // inclusion pipeline, or according to the descriptions\n+        b => c,\n+        // Expand as needed, numbers should be ascending according to the stage through the\n+        // inclusion pipeline, or according to the descriptions\n+        d => e,\n+        // Expand as needed, numbers should be ascending according to the stage through the\n+        // inclusion pipeline, or according to the descriptions\n+    }\n }", "previous_filename": "tests/target/issue-4909/wrap-comments-true.rs"}]}