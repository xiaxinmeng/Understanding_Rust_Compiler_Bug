{"sha": "28b9357a0cb427b3d2bae439d393ca6bf73ad8d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YjkzNTdhMGNiNDI3YjNkMmJhZTQzOWQzOTNjYTZiZjczYWQ4ZDU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-21T15:28:19Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-21T15:28:19Z"}, "message": "Kill residual dead code in Trans.iter_tag_parts. Shaves a couple kb off rustc.", "tree": {"sha": "0438265c232f5c60103b44a04562298f1c289718", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0438265c232f5c60103b44a04562298f1c289718"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28b9357a0cb427b3d2bae439d393ca6bf73ad8d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28b9357a0cb427b3d2bae439d393ca6bf73ad8d5", "html_url": "https://github.com/rust-lang/rust/commit/28b9357a0cb427b3d2bae439d393ca6bf73ad8d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28b9357a0cb427b3d2bae439d393ca6bf73ad8d5/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71d49a20a7f76602501e274cc089758b58d225ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/71d49a20a7f76602501e274cc089758b58d225ce", "html_url": "https://github.com/rust-lang/rust/commit/71d49a20a7f76602501e274cc089758b58d225ce"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "064f027f4bf564c989bf054e9945757214a9ae8e", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/28b9357a0cb427b3d2bae439d393ca6bf73ad8d5/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/28b9357a0cb427b3d2bae439d393ca6bf73ad8d5/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=28b9357a0cb427b3d2bae439d393ca6bf73ad8d5", "patch": "@@ -2719,19 +2719,29 @@ let trans_visitor\n           if Array.length ttup <> 0\n           then\n             begin\n+              let pc0 = (emitter()).Il.emit_pc in\n               (iflog (fun _ ->\n                         annotate (Printf.sprintf \"tag case #%i\" i)));\n               let jmps =\n                 trans_compare_simple Il.JNE\n                   (Il.Cell tmp) (imm (Int64.of_int i))\n               in\n               let ttup = get_nth_tag_tup cx ttag i in\n+              let pc1 = (emitter()).Il.emit_pc in\n                 iter_tup_parts\n                   (get_element_ptr_dyn ty_params)\n                   (get_variant_ptr dst_union i)\n                   (get_variant_ptr src_union i)\n                   ttup f;\n-                List.iter patch jmps\n+\n+                (* Hack: if this variant is all dead code, blank it out. *)\n+                if pc1 = (emitter()).Il.emit_pc\n+                then\n+                  begin\n+                    for j = pc0 to (pc1-1)\n+                    do (emitter()).Il.emit_quads.(j) <- Il.deadq done\n+                  end;\n+                List.iter patch jmps;\n             end\n       done;\n "}]}