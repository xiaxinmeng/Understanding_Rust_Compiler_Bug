{"sha": "83e653920d694a010fad8c7d87d302c2d5b3a177", "node_id": "C_kwDOAAsO6NoAKDgzZTY1MzkyMGQ2OTRhMDEwZmFkOGM3ZDg3ZDMwMmMyZDViM2ExNzc", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-12-25T16:41:31Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-12-25T16:41:31Z"}, "message": "document that `Span::to` can go backwards", "tree": {"sha": "e2672d85b9620ff115561eb8c9b672dedb01a3cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2672d85b9620ff115561eb8c9b672dedb01a3cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83e653920d694a010fad8c7d87d302c2d5b3a177", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83e653920d694a010fad8c7d87d302c2d5b3a177", "html_url": "https://github.com/rust-lang/rust/commit/83e653920d694a010fad8c7d87d302c2d5b3a177", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83e653920d694a010fad8c7d87d302c2d5b3a177/comments", "author": null, "committer": null, "parents": [{"sha": "94d624500316affdbe893597ee249899991f31a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/94d624500316affdbe893597ee249899991f31a6", "html_url": "https://github.com/rust-lang/rust/commit/94d624500316affdbe893597ee249899991f31a6"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "bee4b0a2332b55022ef570f0a6cb102b93de9b92", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83e653920d694a010fad8c7d87d302c2d5b3a177/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83e653920d694a010fad8c7d87d302c2d5b3a177/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=83e653920d694a010fad8c7d87d302c2d5b3a177", "patch": "@@ -796,6 +796,9 @@ impl Span {\n \n     /// Returns a `Span` that would enclose both `self` and `end`.\n     ///\n+    /// Note that this can also be used to extend the span \"backwards\":\n+    /// `start.to(end)` and `end.to(start)` return the same `Span`.\n+    ///\n     /// ```text\n     ///     ____             ___\n     ///     self lorem ipsum end"}]}