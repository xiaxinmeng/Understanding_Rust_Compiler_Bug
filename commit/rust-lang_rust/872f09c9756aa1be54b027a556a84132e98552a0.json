{"sha": "872f09c9756aa1be54b027a556a84132e98552a0", "node_id": "C_kwDOAAsO6NoAKDg3MmYwOWM5NzU2YWExYmU1NGIwMjdhNTU2YTg0MTMyZTk4NTUyYTA", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-05-14T12:07:46Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-05-14T12:11:18Z"}, "message": "Add a test with both passing and erroneous cases.", "tree": {"sha": "a7035a80f2839534f9a7e9caf3608f73a5e33f84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7035a80f2839534f9a7e9caf3608f73a5e33f84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/872f09c9756aa1be54b027a556a84132e98552a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/872f09c9756aa1be54b027a556a84132e98552a0", "html_url": "https://github.com/rust-lang/rust/commit/872f09c9756aa1be54b027a556a84132e98552a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/872f09c9756aa1be54b027a556a84132e98552a0/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b276b65f46465cffe207b4b732e6ab4642d47558", "url": "https://api.github.com/repos/rust-lang/rust/commits/b276b65f46465cffe207b4b732e6ab4642d47558", "html_url": "https://github.com/rust-lang/rust/commit/b276b65f46465cffe207b4b732e6ab4642d47558"}], "stats": {"total": 146, "additions": 146, "deletions": 0}, "files": [{"sha": "abf6a7e956c693b68c3be0fcaf3ab62feffd4d34", "filename": "src/test/ui/impl-trait/nested-rpit-hrtb.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/872f09c9756aa1be54b027a556a84132e98552a0/src%2Ftest%2Fui%2Fimpl-trait%2Fnested-rpit-hrtb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872f09c9756aa1be54b027a556a84132e98552a0/src%2Ftest%2Fui%2Fimpl-trait%2Fnested-rpit-hrtb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fnested-rpit-hrtb.rs?ref=872f09c9756aa1be54b027a556a84132e98552a0", "patch": "@@ -0,0 +1,64 @@\n+// Test the interaction between rested RPIT and HRTB.\n+\n+trait Foo<'a> {\n+    type Assoc;\n+}\n+\n+impl Foo<'_> for () {\n+    type Assoc = ();\n+}\n+\n+// Alternative version of `Foo` whose impl uses `'a`.\n+trait Bar<'a> {\n+    type Assoc;\n+}\n+\n+impl<'a> Bar<'a> for () {\n+    type Assoc = &'a ();\n+}\n+\n+trait Qux<'a> {}\n+\n+impl Qux<'_> for () {}\n+\n+// This is not supported.\n+fn one_hrtb_outlives() -> impl for<'a> Foo<'a, Assoc = impl Sized + 'a> {}\n+//~^ ERROR higher kinded lifetime bounds on nested opaque types are not supported yet\n+\n+// This is not supported.\n+fn one_hrtb_trait_param() -> impl for<'a> Foo<'a, Assoc = impl Qux<'a>> {}\n+//~^ ERROR higher kinded lifetime bounds on nested opaque types are not supported yet\n+\n+fn one_hrtb_outlives_uses() -> impl for<'a> Bar<'a, Assoc = impl Sized + 'a> {}\n+//~^ ERROR higher kinded lifetime bounds on nested opaque types are not supported yet\n+\n+fn one_hrtb_trait_param_uses() -> impl for<'a> Bar<'a, Assoc = impl Qux<'a>> {}\n+//~^ ERROR higher kinded lifetime bounds on nested opaque types are not supported yet\n+\n+// This should pass.\n+fn one_hrtb_mention_fn_trait_param<'b>() -> impl for<'a> Foo<'a, Assoc = impl Qux<'b>> {}\n+\n+// This should pass.\n+fn one_hrtb_mention_fn_outlives<'b>() -> impl for<'a> Foo<'a, Assoc = impl Sized + 'b> {}\n+\n+// This should pass.\n+fn one_hrtb_mention_fn_trait_param_uses<'b>() -> impl for<'a> Bar<'a, Assoc = impl Qux<'b>> {}\n+\n+// This should pass.\n+fn one_hrtb_mention_fn_outlives_uses<'b>() -> impl for<'a> Bar<'a, Assoc = impl Sized + 'b> {}\n+\n+// This should pass.\n+fn two_htrb_trait_param() -> impl for<'a> Foo<'a, Assoc = impl for<'b> Qux<'b>> {}\n+\n+// `'b` is not in scope for the outlives bound.\n+fn two_htrb_outlives() -> impl for<'a> Foo<'a, Assoc = impl for<'b> Sized + 'b> {}\n+//~^ ERROR use of undeclared lifetime name `'b` [E0261]\n+\n+// This should pass.\n+fn two_htrb_trait_param_uses() -> impl for<'a> Bar<'a, Assoc = impl for<'b> Qux<'b>> {}\n+\n+// `'b` is not in scope for the outlives bound.\n+fn two_htrb_outlives_uses() -> impl for<'a> Bar<'a, Assoc = impl for<'b> Sized + 'b> {}\n+//~^ ERROR use of undeclared lifetime name `'b` [E0261]\n+\n+fn main() {}"}, {"sha": "3dbe6ebadfbfc52242e28baf111ebe27e95537e9", "filename": "src/test/ui/impl-trait/nested-rpit-hrtb.stderr", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/872f09c9756aa1be54b027a556a84132e98552a0/src%2Ftest%2Fui%2Fimpl-trait%2Fnested-rpit-hrtb.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/872f09c9756aa1be54b027a556a84132e98552a0/src%2Ftest%2Fui%2Fimpl-trait%2Fnested-rpit-hrtb.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fnested-rpit-hrtb.stderr?ref=872f09c9756aa1be54b027a556a84132e98552a0", "patch": "@@ -0,0 +1,82 @@\n+error[E0261]: use of undeclared lifetime name `'b`\n+  --> $DIR/nested-rpit-hrtb.rs:54:77\n+   |\n+LL | fn two_htrb_outlives() -> impl for<'a> Foo<'a, Assoc = impl for<'b> Sized + 'b> {}\n+   |                                                                             ^^ undeclared lifetime\n+   |\n+   = note: for more information on higher-ranked polymorphism, visit https://doc.rust-lang.org/nomicon/hrtb.html\n+help: consider making the bound lifetime-generic with a new `'b` lifetime\n+   |\n+LL | fn two_htrb_outlives() -> impl for<'b, 'a> Foo<'a, Assoc = impl for<'b> Sized + 'b> {}\n+   |                                    +++\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | fn two_htrb_outlives<'b>() -> impl for<'a> Foo<'a, Assoc = impl for<'b> Sized + 'b> {}\n+   |                     ++++\n+\n+error[E0261]: use of undeclared lifetime name `'b`\n+  --> $DIR/nested-rpit-hrtb.rs:61:82\n+   |\n+LL | fn two_htrb_outlives_uses() -> impl for<'a> Bar<'a, Assoc = impl for<'b> Sized + 'b> {}\n+   |                                                                                  ^^ undeclared lifetime\n+   |\n+help: consider making the bound lifetime-generic with a new `'b` lifetime\n+   |\n+LL | fn two_htrb_outlives_uses() -> impl for<'b, 'a> Bar<'a, Assoc = impl for<'b> Sized + 'b> {}\n+   |                                         +++\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | fn two_htrb_outlives_uses<'b>() -> impl for<'a> Bar<'a, Assoc = impl for<'b> Sized + 'b> {}\n+   |                          ++++\n+\n+error: higher kinded lifetime bounds on nested opaque types are not supported yet\n+  --> $DIR/nested-rpit-hrtb.rs:25:69\n+   |\n+LL | fn one_hrtb_outlives() -> impl for<'a> Foo<'a, Assoc = impl Sized + 'a> {}\n+   |                                                                     ^^\n+   |\n+note: lifetime declared here\n+  --> $DIR/nested-rpit-hrtb.rs:25:36\n+   |\n+LL | fn one_hrtb_outlives() -> impl for<'a> Foo<'a, Assoc = impl Sized + 'a> {}\n+   |                                    ^^\n+\n+error: higher kinded lifetime bounds on nested opaque types are not supported yet\n+  --> $DIR/nested-rpit-hrtb.rs:29:68\n+   |\n+LL | fn one_hrtb_trait_param() -> impl for<'a> Foo<'a, Assoc = impl Qux<'a>> {}\n+   |                                                                    ^^\n+   |\n+note: lifetime declared here\n+  --> $DIR/nested-rpit-hrtb.rs:29:39\n+   |\n+LL | fn one_hrtb_trait_param() -> impl for<'a> Foo<'a, Assoc = impl Qux<'a>> {}\n+   |                                       ^^\n+\n+error: higher kinded lifetime bounds on nested opaque types are not supported yet\n+  --> $DIR/nested-rpit-hrtb.rs:32:74\n+   |\n+LL | fn one_hrtb_outlives_uses() -> impl for<'a> Bar<'a, Assoc = impl Sized + 'a> {}\n+   |                                                                          ^^\n+   |\n+note: lifetime declared here\n+  --> $DIR/nested-rpit-hrtb.rs:32:41\n+   |\n+LL | fn one_hrtb_outlives_uses() -> impl for<'a> Bar<'a, Assoc = impl Sized + 'a> {}\n+   |                                         ^^\n+\n+error: higher kinded lifetime bounds on nested opaque types are not supported yet\n+  --> $DIR/nested-rpit-hrtb.rs:35:73\n+   |\n+LL | fn one_hrtb_trait_param_uses() -> impl for<'a> Bar<'a, Assoc = impl Qux<'a>> {}\n+   |                                                                         ^^\n+   |\n+note: lifetime declared here\n+  --> $DIR/nested-rpit-hrtb.rs:35:44\n+   |\n+LL | fn one_hrtb_trait_param_uses() -> impl for<'a> Bar<'a, Assoc = impl Qux<'a>> {}\n+   |                                            ^^\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0261`."}]}