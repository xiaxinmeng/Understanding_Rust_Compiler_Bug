{"sha": "2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf", "node_id": "C_kwDOAAsO6NoAKDJjMGMyNWRjYzE1OThjZDExNTgzOGUxZTFkNzRkOWYzMmZmZDhkYmY", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-05T17:31:16Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-05T17:31:16Z"}, "message": "Fix for diagnostics", "tree": {"sha": "0c3c0884734268656cd2ae248986322d6776fc70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c3c0884734268656cd2ae248986322d6776fc70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf", "html_url": "https://github.com/rust-lang/rust/commit/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fce70535676f43f21d683d67cd64eea2923f3ef5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fce70535676f43f21d683d67cd64eea2923f3ef5", "html_url": "https://github.com/rust-lang/rust/commit/fce70535676f43f21d683d67cd64eea2923f3ef5"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "0a94a08f8dca86fec574ab0833925d5f9b0df2e0", "filename": "compiler/rustc_codegen_gcc/locales/en-US.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf/compiler%2Frustc_codegen_gcc%2Flocales%2Fen-US.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf/compiler%2Frustc_codegen_gcc%2Flocales%2Fen-US.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Flocales%2Fen-US.ftl?ref=2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf", "patch": "@@ -63,3 +63,6 @@ codegen_gcc_invalid_monomorphization_unsupported_operation =\n \n codegen_gcc_invalid_minimum_alignment =\n     invalid minimum global alignment: {$err}\n+\n+codegen_gcc_tied_target_features = the target features {$features} must all be either enabled or disabled together\n+    .help = add the missing features in a `target_feature` attribute"}, {"sha": "db841b1b52408ab51d986b042f77ff74046df018", "filename": "compiler/rustc_codegen_gcc/src/attributes.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf/compiler%2Frustc_codegen_gcc%2Fsrc%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf/compiler%2Frustc_codegen_gcc%2Fsrc%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fattributes.rs?ref=2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf", "patch": "@@ -9,7 +9,7 @@ use rustc_session::Session;\n use rustc_span::symbol::sym;\n use smallvec::{smallvec, SmallVec};\n \n-use crate::context::CodegenCx;\n+use crate::{context::CodegenCx, errors::TiedTargetFeatures};\n \n // Given a map from target_features to whether they are enabled or disabled,\n // ensure only valid combinations are allowed.\n@@ -84,10 +84,11 @@ pub fn from_fn_attrs<'gcc, 'tcx>(\n         let span = cx.tcx\n             .get_attr(instance.def_id(), sym::target_feature)\n             .map_or_else(|| cx.tcx.def_span(instance.def_id()), |a| a.span);\n-        let msg = format!(\"the target features {} must all be either enabled or disabled together\", features.join(\", \"));\n-        let mut err = cx.tcx.sess.struct_span_err(span, &msg);\n-        err.help(\"add the missing features in a `target_feature` attribute\");\n-        err.emit();\n+        cx.tcx.sess.create_err(TiedTargetFeatures {\n+            features: features.join(\", \"),\n+            span,\n+        })\n+            .emit();\n         return;\n     }\n "}, {"sha": "9305bd1e043d564010bd360c27b92ef4b266e82a", "filename": "compiler/rustc_codegen_gcc/src/errors.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf/compiler%2Frustc_codegen_gcc%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf/compiler%2Frustc_codegen_gcc%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Ferrors.rs?ref=2c0c25dcc1598cd115838e1e1d74d9f32ffd8dbf", "patch": "@@ -227,3 +227,12 @@ pub(crate) struct UnwindingInlineAsm {\n pub(crate) struct InvalidMinimumAlignment {\n     pub err: String,\n }\n+\n+#[derive(Diagnostic)]\n+#[diag(codegen_gcc_tied_target_features)]\n+#[help]\n+pub(crate) struct TiedTargetFeatures {\n+    #[primary_span]\n+    pub span: Span,\n+    pub features: String,\n+}"}]}