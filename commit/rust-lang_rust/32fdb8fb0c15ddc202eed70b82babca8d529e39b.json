{"sha": "32fdb8fb0c15ddc202eed70b82babca8d529e39b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZmRiOGZiMGMxNWRkYzIwMmVlZDcwYjgyYmFiY2E4ZDUyOWUzOWI=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-10-08T21:02:16Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-10-12T21:38:31Z"}, "message": "Lint on identical variable used as args in `assert_eq!` macro call", "tree": {"sha": "37591d7b580220e3d8fb9be5903385fe56ae16ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37591d7b580220e3d8fb9be5903385fe56ae16ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32fdb8fb0c15ddc202eed70b82babca8d529e39b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32fdb8fb0c15ddc202eed70b82babca8d529e39b", "html_url": "https://github.com/rust-lang/rust/commit/32fdb8fb0c15ddc202eed70b82babca8d529e39b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32fdb8fb0c15ddc202eed70b82babca8d529e39b/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bfc19c687f30f05e33028a22bd321204c53bf43", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bfc19c687f30f05e33028a22bd321204c53bf43", "html_url": "https://github.com/rust-lang/rust/commit/6bfc19c687f30f05e33028a22bd321204c53bf43"}], "stats": {"total": 75, "additions": 72, "deletions": 3}, "files": [{"sha": "7126c98a0b438a7f29a28d2fc4c67402dcd71c1f", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/32fdb8fb0c15ddc202eed70b82babca8d529e39b/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32fdb8fb0c15ddc202eed70b82babca8d529e39b/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=32fdb8fb0c15ddc202eed70b82babca8d529e39b", "patch": "@@ -1,9 +1,13 @@\n+use crate::utils::ast_utils::eq_expr;\n use crate::utils::{\n     eq_expr_value, implements_trait, in_macro, is_copy, multispan_sugg, snippet, span_lint, span_lint_and_then,\n };\n+use if_chain::if_chain;\n+use rustc_ast::{ast, token};\n use rustc_errors::Applicability;\n use rustc_hir::{BinOp, BinOpKind, BorrowKind, Expr, ExprKind};\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass};\n+use rustc_parse::parser;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n@@ -23,6 +27,12 @@ declare_clippy_lint! {\n     /// # let x = 1;\n     /// if x + 1 == x + 1 {}\n     /// ```\n+    /// or\n+    /// ```rust\n+    /// # let a = 3;\n+    /// # let b = 4;\n+    /// assert_eq!(a, a);\n+    /// ```\n     pub EQ_OP,\n     correctness,\n     \"equal operands on both sides of a comparison or bitwise combination (e.g., `x == x`)\"\n@@ -52,6 +62,31 @@ declare_clippy_lint! {\n \n declare_lint_pass!(EqOp => [EQ_OP, OP_REF]);\n \n+impl EarlyLintPass for EqOp {\n+    fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &ast::MacCall) {\n+        if_chain! {\n+            if mac.path == sym!(assert_eq);\n+            let tokens = mac.args.inner_tokens();\n+            let mut parser = parser::Parser::new(&cx.sess.parse_sess, tokens, false, None);\n+            if let Ok(left) = parser.parse_expr();\n+            if parser.eat(&token::Comma);\n+            if let Ok(right) = parser.parse_expr();\n+            let left_expr = left.into_inner();\n+            let right_expr = right.into_inner();\n+            if eq_expr(&left_expr, &right_expr);\n+\n+            then {\n+                span_lint(\n+                    cx,\n+                    EQ_OP,\n+                    left_expr.span.to(right_expr.span),\n+                    \"identical args used in this `assert_eq!` macro call\",\n+                );\n+            }\n+        }\n+    }\n+}\n+\n impl<'tcx> LateLintPass<'tcx> for EqOp {\n     #[allow(clippy::similar_names, clippy::too_many_lines)]\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, e: &'tcx Expr<'_>) {"}, {"sha": "dd99b6b9040c94f64932047b70444ab32d28d683", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32fdb8fb0c15ddc202eed70b82babca8d529e39b/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32fdb8fb0c15ddc202eed70b82babca8d529e39b/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=32fdb8fb0c15ddc202eed70b82babca8d529e39b", "patch": "@@ -348,6 +348,7 @@ pub fn register_pre_expansion_lints(store: &mut rustc_lint::LintStore) {\n     store.register_pre_expansion_pass(|| box write::Write::default());\n     store.register_pre_expansion_pass(|| box attrs::EarlyAttributes);\n     store.register_pre_expansion_pass(|| box dbg_macro::DbgMacro);\n+    store.register_pre_expansion_pass(|| box eq_op::EqOp);\n }\n \n #[doc(hidden)]\n@@ -910,6 +911,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     let vec_box_size_threshold = conf.vec_box_size_threshold;\n     store.register_late_pass(move || box types::Types::new(vec_box_size_threshold));\n     store.register_late_pass(|| box booleans::NonminimalBool);\n+    store.register_early_pass(|| box eq_op::EqOp);\n     store.register_late_pass(|| box eq_op::EqOp);\n     store.register_late_pass(|| box enum_clike::UnportableVariant);\n     store.register_late_pass(|| box float_literal::FloatLiteral);"}, {"sha": "e369f62f8bfea28d1542e338fb625d9b2c352a0b", "filename": "tests/ui/auxiliary/proc_macro_derive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs?ref=32fdb8fb0c15ddc202eed70b82babca8d529e39b", "patch": "@@ -3,6 +3,7 @@\n \n #![crate_type = \"proc-macro\"]\n #![feature(repr128, proc_macro_quote)]\n+#![allow(clippy::eq_op)]\n \n extern crate proc_macro;\n "}, {"sha": "ff1dc76ab63b15727e6f81655177656007ea541b", "filename": "tests/ui/double_parens.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_parens.rs?ref=32fdb8fb0c15ddc202eed70b82babca8d529e39b", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::double_parens)]\n-#![allow(dead_code)]\n+#![allow(dead_code, clippy::eq_op)]\n #![feature(custom_inner_attributes)]\n #![rustfmt::skip]\n "}, {"sha": "cf5660ea98da04816e35602cfd18b0fa4b12a013", "filename": "tests/ui/eq_op_early.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Feq_op_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Feq_op_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op_early.rs?ref=32fdb8fb0c15ddc202eed70b82babca8d529e39b", "patch": "@@ -0,0 +1,15 @@\n+#![warn(clippy::eq_op)]\n+\n+fn main() {\n+    let a = 1;\n+    let b = 2;\n+\n+    // lint identical args in `assert_eq!` (see #3574)\n+    assert_eq!(a, a);\n+    assert_eq!(a + 1, a + 1);\n+\n+    // ok\n+    assert_eq!(a, b);\n+    assert_eq!(a, a + 1);\n+    assert_eq!(a + 1, b + 1);\n+}"}, {"sha": "9206e9026e95b6015dfbb33fef06c67649af9f0b", "filename": "tests/ui/eq_op_early.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Feq_op_early.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Feq_op_early.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op_early.stderr?ref=32fdb8fb0c15ddc202eed70b82babca8d529e39b", "patch": "@@ -0,0 +1,16 @@\n+error: identical args used in this `assert_eq!` macro call\n+  --> $DIR/eq_op_early.rs:8:16\n+   |\n+LL |     assert_eq!(a, a);\n+   |                ^^^^\n+   |\n+   = note: `-D clippy::eq-op` implied by `-D warnings`\n+\n+error: identical args used in this `assert_eq!` macro call\n+  --> $DIR/eq_op_early.rs:9:16\n+   |\n+LL |     assert_eq!(a + 1, a + 1);\n+   |                ^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "d8bda7e8f48a7eb32cc22fc54c4cb5d24d1ffea8", "filename": "tests/ui/used_underscore_binding.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32fdb8fb0c15ddc202eed70b82babca8d529e39b/tests%2Fui%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.rs?ref=32fdb8fb0c15ddc202eed70b82babca8d529e39b", "patch": "@@ -3,7 +3,7 @@\n \n #![feature(rustc_private)]\n #![warn(clippy::all)]\n-#![allow(clippy::blacklisted_name)]\n+#![allow(clippy::blacklisted_name, clippy::eq_op)]\n #![warn(clippy::used_underscore_binding)]\n \n #[macro_use]"}]}