{"sha": "fdfb489c48a1996076cede1bc1a417134fef57f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZmI0ODljNDhhMTk5NjA3NmNlZGUxYmMxYTQxNzEzNGZlZjU3ZjI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-14T12:43:59Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-14T12:47:55Z"}, "message": "Add a correct indent before trait's closing brace with empty body", "tree": {"sha": "95fe64fab72fdf913c3402ec58c7eb9c1a4b8f51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95fe64fab72fdf913c3402ec58c7eb9c1a4b8f51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdfb489c48a1996076cede1bc1a417134fef57f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdfb489c48a1996076cede1bc1a417134fef57f2", "html_url": "https://github.com/rust-lang/rust/commit/fdfb489c48a1996076cede1bc1a417134fef57f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdfb489c48a1996076cede1bc1a417134fef57f2/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "476992a15d4e01071ac57cec7c8e54b36e606d46", "url": "https://api.github.com/repos/rust-lang/rust/commits/476992a15d4e01071ac57cec7c8e54b36e606d46", "html_url": "https://github.com/rust-lang/rust/commit/476992a15d4e01071ac57cec7c8e54b36e606d46"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1673bffbce9b587b8b303d1933a78fe77fd8f44b", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdfb489c48a1996076cede1bc1a417134fef57f2/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdfb489c48a1996076cede1bc1a417134fef57f2/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=fdfb489c48a1996076cede1bc1a417134fef57f2", "patch": "@@ -1121,6 +1121,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n \n         let snippet = context.snippet(item.span);\n         let open_pos = snippet.find_uncommented(\"{\")? + 1;\n+        let outer_indent_str = offset.block_only().to_string_with_newline(context.config);\n \n         if !trait_items.is_empty() || contains_comment(&snippet[open_pos..]) {\n             let mut visitor = FmtVisitor::from_context(context);\n@@ -1134,13 +1135,12 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n             visitor.format_missing(item.span.hi() - BytePos(1));\n \n             let inner_indent_str = visitor.block_indent.to_string_with_newline(context.config);\n-            let outer_indent_str = offset.block_only().to_string_with_newline(context.config);\n \n             result.push_str(&inner_indent_str);\n             result.push_str(visitor.buffer.to_string().trim());\n             result.push_str(&outer_indent_str);\n         } else if result.contains('\\n') {\n-            result.push('\\n');\n+            result.push_str(&outer_indent_str);\n         }\n \n         result.push('}');"}]}