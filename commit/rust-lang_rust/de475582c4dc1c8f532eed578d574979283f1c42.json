{"sha": "de475582c4dc1c8f532eed578d574979283f1c42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNDc1NTgyYzRkYzFjOGY1MzJlZWQ1NzhkNTc0OTc5MjgzZjFjNDI=", "commit": {"author": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-04-11T19:20:25Z"}, "committer": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-04-15T21:32:58Z"}, "message": "Stop duplicating where clauses from impl's.", "tree": {"sha": "754a4d06a941680454643a0d8cdca99eedb209cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/754a4d06a941680454643a0d8cdca99eedb209cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de475582c4dc1c8f532eed578d574979283f1c42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de475582c4dc1c8f532eed578d574979283f1c42", "html_url": "https://github.com/rust-lang/rust/commit/de475582c4dc1c8f532eed578d574979283f1c42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de475582c4dc1c8f532eed578d574979283f1c42/comments", "author": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd41976fc5a13e8c9a706496d714f655a5ab995", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd41976fc5a13e8c9a706496d714f655a5ab995", "html_url": "https://github.com/rust-lang/rust/commit/ecd41976fc5a13e8c9a706496d714f655a5ab995"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "9da2c49ee5d7a3d43dac5bf873a8490708ccc65d", "filename": "src/librustc_traits/lowering.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/de475582c4dc1c8f532eed578d574979283f1c42/src%2Flibrustc_traits%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de475582c4dc1c8f532eed578d574979283f1c42/src%2Flibrustc_traits%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering.rs?ref=de475582c4dc1c8f532eed578d574979283f1c42", "patch": "@@ -251,16 +251,15 @@ pub fn program_clauses_for_associated_type_value<'a, 'tcx>(\n     // Rule Normalize-From-Impl (see rustc guide)\n     //\n     // ```impl<P0..Pn> Trait<A1..An> for A0\n-    // where WC\n     // {\n-    //     type AssocType<Pn+1..Pm> where WC1 = T;\n+    //     type AssocType<Pn+1..Pm> where WC = T;\n     // }```\n     //\n     // ```\n     // forall<P0..Pm> {\n     //   forall<Pn+1..Pm> {\n     //     Normalize(<A0 as Trait<A1..An>>::AssocType<Pn+1..Pm> -> T) :-\n-    //       WC && WC1\n+    //       Implemented(A0: Trait<A1..An>) && WC\n     //   }\n     // }\n     // ```\n@@ -276,19 +275,18 @@ pub fn program_clauses_for_associated_type_value<'a, 'tcx>(\n     let trait_ref = tcx.impl_trait_ref(impl_id).unwrap();\n     // `T`\n     let ty = tcx.type_of(item_id);\n+    // `Implemented(A0: Trait<A1..An>)`\n+    let trait_implemented = ty::Binder::dummy(ty::TraitPredicate { trait_ref }.lower());\n     // `WC`\n-    let impl_where_clauses = tcx.predicates_of(impl_id).predicates.lower();\n-    // `WC1`\n     let item_where_clauses = tcx.predicates_of(item_id).predicates.lower();\n-    // `WC && WC1`\n-    let mut where_clauses = vec![];\n-    where_clauses.extend(impl_where_clauses);\n+    // `Implemented(A0: Trait<A1..An>) && WC`\n+    let mut where_clauses = vec![trait_implemented];\n     where_clauses.extend(item_where_clauses);\n     // `<A0 as Trait<A1..An>>::AssocType<Pn+1..Pm>`\n     let projection_ty = ty::ProjectionTy::from_ref_and_name(tcx, trait_ref, item.name);\n     // `Normalize(<A0 as Trait<A1..An>>::AssocType<Pn+1..Pm> -> T)`\n     let normalize_goal = DomainGoal::Normalize(ty::ProjectionPredicate { projection_ty, ty });\n-    // `Normalize(... -> T) :- WC && WC1`\n+    // `Normalize(... -> T) :- ...`\n     let clause = ProgramClause {\n         goal: normalize_goal,\n         hypotheses: where_clauses.into_iter().map(|wc| wc.into()).collect(),"}, {"sha": "f253f9847d16294bc9fe39e55bb6c68e9351ee51", "filename": "src/test/ui/chalkify/lower_impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de475582c4dc1c8f532eed578d574979283f1c42/src%2Ftest%2Fui%2Fchalkify%2Flower_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de475582c4dc1c8f532eed578d574979283f1c42/src%2Ftest%2Fui%2Fchalkify%2Flower_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_impl.stderr?ref=de475582c4dc1c8f532eed578d574979283f1c42", "patch": "@@ -4,7 +4,7 @@ error: Implemented(T: Foo) :- ProjectionEq(<T as std::iter::Iterator>::Item == i\n LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(T: Foo) :-\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: Normalize(<T as Bar>::Assoc == std::vec::Vec<T>) :- ProjectionEq(<T as std::iter::Iterator>::Item == i32), Implemented(T: std::iter::Iterator), Implemented(T: std::marker::Sized).\n+error: Normalize(<T as Bar>::Assoc == std::vec::Vec<T>) :- Implemented(T: Bar).\n   --> $DIR/lower_impl.rs:23:5\n    |\n LL |     #[rustc_dump_program_clauses] //~ ERROR Normalize(<T as Bar>::Assoc == std::vec::Vec<T>) :-"}]}