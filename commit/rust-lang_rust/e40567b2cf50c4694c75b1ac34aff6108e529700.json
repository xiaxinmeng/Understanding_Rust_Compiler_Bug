{"sha": "e40567b2cf50c4694c75b1ac34aff6108e529700", "node_id": "C_kwDOAAsO6NoAKGU0MDU2N2IyY2Y1MGM0Njk0Yzc1YjFhYzM0YWZmNjEwOGU1Mjk3MDA", "commit": {"author": {"name": "Ali MJ Al-Nasrawy", "email": "alimjalnasrawy@gmail.com", "date": "2023-01-15T22:35:51Z"}, "committer": {"name": "Ali MJ Al-Nasrawy", "email": "alimjalnasrawy@gmail.com", "date": "2023-01-19T12:31:59Z"}, "message": "add test for ICE fix", "tree": {"sha": "e7c073151699a972c8a7ecb2936ddfb8a760dfce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7c073151699a972c8a7ecb2936ddfb8a760dfce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e40567b2cf50c4694c75b1ac34aff6108e529700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e40567b2cf50c4694c75b1ac34aff6108e529700", "html_url": "https://github.com/rust-lang/rust/commit/e40567b2cf50c4694c75b1ac34aff6108e529700", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e40567b2cf50c4694c75b1ac34aff6108e529700/comments", "author": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7a842027cfdd7ede4d44349d4c15a6b71935fa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a842027cfdd7ede4d44349d4c15a6b71935fa0", "html_url": "https://github.com/rust-lang/rust/commit/a7a842027cfdd7ede4d44349d4c15a6b71935fa0"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "b8fac45b76db7072eb2f6f3722aa0c6b843400a1", "filename": "tests/ui/type-alias-impl-trait/outlives-bound-var.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e40567b2cf50c4694c75b1ac34aff6108e529700/tests%2Fui%2Ftype-alias-impl-trait%2Foutlives-bound-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e40567b2cf50c4694c75b1ac34aff6108e529700/tests%2Fui%2Ftype-alias-impl-trait%2Foutlives-bound-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Foutlives-bound-var.rs?ref=e40567b2cf50c4694c75b1ac34aff6108e529700", "patch": "@@ -0,0 +1,18 @@\n+// Here we process outlive obligations involving\n+// opaque types with bound vars in substs.\n+// This was an ICE.\n+//\n+// check-pass\n+#![feature(type_alias_impl_trait)]\n+\n+type Ty<'a> = impl Sized + 'a;\n+fn define<'a>() -> Ty<'a> {}\n+\n+// Ty<'^0>: 'static\n+fn test1(_: &'static fn(Ty<'_>)) {}\n+\n+fn test2() {\n+    None::<&fn(Ty<'_>)>;\n+}\n+\n+fn main() { }"}]}