{"sha": "4dc3ff9c80bab9da65f3a8323882ec082a80bbeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYzNmZjljODBiYWI5ZGE2NWYzYTgzMjM4ODJlYzA4MmE4MGJiZWI=", "commit": {"author": {"name": "Florian Gilcher", "email": "florian.gilcher@asquera.de", "date": "2013-10-02T13:37:59Z"}, "committer": {"name": "Florian Gilcher", "email": "florian.gilcher@asquera.de", "date": "2013-10-02T13:37:59Z"}, "message": "Add an implementation of FromStr for ~str and @str\n\nThis fixes an issue for APIs that return FromStr. Before this change,\nthey would have to offer a seperate function for returning the source\nstring.", "tree": {"sha": "a0230fbd562712b3ca0dcecc12d21a367a54a8c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0230fbd562712b3ca0dcecc12d21a367a54a8c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dc3ff9c80bab9da65f3a8323882ec082a80bbeb", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dc3ff9c80bab9da65f3a8323882ec082a80bbeb", "html_url": "https://github.com/rust-lang/rust/commit/4dc3ff9c80bab9da65f3a8323882ec082a80bbeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dc3ff9c80bab9da65f3a8323882ec082a80bbeb/comments", "author": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "committer": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d00c9269dce3a7925d7d0bf5edb64b3c6747c6af", "url": "https://api.github.com/repos/rust-lang/rust/commits/d00c9269dce3a7925d7d0bf5edb64b3c6747c6af", "html_url": "https://github.com/rust-lang/rust/commit/d00c9269dce3a7925d7d0bf5edb64b3c6747c6af"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "56e8efe2a3c67729f484160116d1c305f0096435", "filename": "src/libstd/str.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4dc3ff9c80bab9da65f3a8323882ec082a80bbeb/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dc3ff9c80bab9da65f3a8323882ec082a80bbeb/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=4dc3ff9c80bab9da65f3a8323882ec082a80bbeb", "patch": "@@ -105,6 +105,7 @@ use option::{None, Option, Some};\n use ptr;\n use ptr::RawPtr;\n use to_str::ToStr;\n+use from_str::FromStr;\n use uint;\n use vec;\n use vec::{OwnedVector, OwnedCopyableVector, ImmutableVector, MutableVector};\n@@ -204,6 +205,11 @@ impl ToStr for ~str {\n     fn to_str(&self) -> ~str { self.to_owned() }\n }\n \n+impl FromStr for ~str {\n+    #[inline]\n+    fn from_str(s: &str) -> Option<~str> { Some(s.to_owned()) }\n+}\n+\n impl<'self> ToStr for &'self str {\n     #[inline]\n     fn to_str(&self) -> ~str { self.to_owned() }\n@@ -214,6 +220,11 @@ impl ToStr for @str {\n     fn to_str(&self) -> ~str { self.to_owned() }\n }\n \n+impl<'self> FromStr for @str {\n+    #[inline]\n+    fn from_str(s: &str) -> Option<@str> { Some(s.to_managed()) }\n+}\n+\n /// Convert a byte to a UTF-8 string\n ///\n /// # Failure\n@@ -2580,13 +2591,14 @@ impl Default for @str {\n #[cfg(test)]\n mod tests {\n     use container::Container;\n-    use option::{None, Some};\n+    use option::{None, Some, Option};\n     use ptr;\n     use str::*;\n     use vec;\n     use vec::{Vector, ImmutableVector, CopyableVector};\n     use cmp::{TotalOrd, Less, Equal, Greater};\n     use send_str::{SendStrOwned, SendStrStatic};\n+    use from_str::from_str;\n \n     #[test]\n     fn test_eq() {\n@@ -3889,6 +3901,14 @@ mod tests {\n         assert_eq!(\"abcde\".to_send_str(), SendStrStatic(\"abcde\"));\n         assert_eq!(\"abcde\".to_send_str(), SendStrOwned(~\"abcde\"));\n     }\n+\n+    #[test]\n+    fn test_from_str() {\n+      let owned: Option<~str> = from_str(&\"string\");\n+      assert_eq!(owned, Some(~\"string\"));\n+      let managed: Option<@str> = from_str(&\"string\");\n+      assert_eq!(managed, Some(@\"string\"));\n+    }\n }\n \n #[cfg(test)]"}]}