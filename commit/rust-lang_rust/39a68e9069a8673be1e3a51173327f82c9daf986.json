{"sha": "39a68e9069a8673be1e3a51173327f82c9daf986", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YTY4ZTkwNjlhODY3M2JlMWUzYTUxMTczMzI3ZjgyYzlkYWY5ODY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-15T12:48:04Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-15T13:22:25Z"}, "message": "Clean up dropck_outlives PhantomData handling", "tree": {"sha": "52b3d181baceab9e44248874839f39b6c0563f99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52b3d181baceab9e44248874839f39b6c0563f99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39a68e9069a8673be1e3a51173327f82c9daf986", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39a68e9069a8673be1e3a51173327f82c9daf986", "html_url": "https://github.com/rust-lang/rust/commit/39a68e9069a8673be1e3a51173327f82c9daf986", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39a68e9069a8673be1e3a51173327f82c9daf986/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a9371ab7738109c41bbd9c3ae2e3bd4ce49121e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a9371ab7738109c41bbd9c3ae2e3bd4ce49121e", "html_url": "https://github.com/rust-lang/rust/commit/0a9371ab7738109c41bbd9c3ae2e3bd4ce49121e"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "219c6b9aefba51f72be5cacf674fcfd98413d0b6", "filename": "src/librustc_traits/dropck_outlives.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/39a68e9069a8673be1e3a51173327f82c9daf986/src%2Flibrustc_traits%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39a68e9069a8673be1e3a51173327f82c9daf986/src%2Flibrustc_traits%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fdropck_outlives.rs?ref=39a68e9069a8673be1e3a51173327f82c9daf986", "patch": "@@ -14,7 +14,7 @@ use rustc::traits::{FulfillmentContext, Normalized, ObligationCause};\n use rustc::traits::query::{CanonicalTyGoal, NoSolution};\n use rustc::traits::query::dropck_outlives::{DtorckConstraint, DropckOutlivesResult};\n use rustc::ty::{self, ParamEnvAnd, Ty, TyCtxt};\n-use rustc::ty::subst::{UnpackedKind, Subst};\n+use rustc::ty::subst::{Subst, Substs};\n use rustc::util::nodemap::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n use syntax::codemap::{Span, DUMMY_SP};\n@@ -280,14 +280,11 @@ crate fn adt_dtorck_constraint<'a, 'tcx>(\n     if def.is_phantom_data() {\n         // The first generic parameter here is guaranteed to be a type because it's\n         // `PhantomData`.\n-        let param = &tcx.generics_of(def_id).params[0];\n-        let ty = match tcx.mk_param_from_def(param).unpack() {\n-            UnpackedKind::Type(ty) => ty,\n-            _ => unreachable!(),\n-        };\n+        let substs = Substs::identity_for_item(tcx, def_id);\n+        assert_eq!(substs.len(), 1);\n         let result = DtorckConstraint {\n             outlives: vec![],\n-            dtorck_types: vec![ty],\n+            dtorck_types: vec![substs.type_at(0)],\n             overflows: vec![],\n         };\n         debug!(\"dtorck_constraint: {:?} => {:?}\", def, result);"}]}