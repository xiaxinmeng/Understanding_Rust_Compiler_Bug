{"sha": "6e96e10f9363dc792acb02ff616aaca36764805d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlOTZlMTBmOTM2M2RjNzkyYWNiMDJmZjYxNmFhY2EzNjc2NDgwNWQ=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T13:59:11Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T13:59:11Z"}, "message": "`u64::try_from` will now fail if `ScalarInt` isn't exactly 64 bits, thus we use `to_bits` with the correct size", "tree": {"sha": "168b60cc301dc49a08b20f084e387fca72935a07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/168b60cc301dc49a08b20f084e387fca72935a07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e96e10f9363dc792acb02ff616aaca36764805d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e96e10f9363dc792acb02ff616aaca36764805d", "html_url": "https://github.com/rust-lang/rust/commit/6e96e10f9363dc792acb02ff616aaca36764805d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e96e10f9363dc792acb02ff616aaca36764805d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fa1c8f91a046b8e84443c93214d5f0e0df67eee", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fa1c8f91a046b8e84443c93214d5f0e0df67eee", "html_url": "https://github.com/rust-lang/rust/commit/5fa1c8f91a046b8e84443c93214d5f0e0df67eee"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0000866c4f6a95fd912424d5619cbf06b13680fc", "filename": "src/value_and_place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e96e10f9363dc792acb02ff616aaca36764805d/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e96e10f9363dc792acb02ff616aaca36764805d/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=6e96e10f9363dc792acb02ff616aaca36764805d", "patch": "@@ -261,7 +261,7 @@ impl<'tcx> CValue<'tcx> {\n                 fx\n                     .bcx\n                     .ins()\n-                    .iconst(clif_ty, u64::try_from(const_val).expect(\"uint\") as i64)\n+                    .iconst(clif_ty, const_val.to_bits(layout.size).unwrap() as i64)\n             }\n             ty::Float(FloatTy::F32) => {\n                 fx.bcx.ins().f32const(Ieee32::with_bits(u32::try_from(const_val).unwrap()))"}]}