{"sha": "9a9dbfff6e0622e69cb37ba0cda919f619dad1cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhOWRiZmZmNmUwNjIyZTY5Y2IzN2JhMGNkYTkxOWY2MTlkYWQxY2Q=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-05T16:08:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-10T08:11:35Z"}, "message": "vtables are not leaks", "tree": {"sha": "9c7c0c7bba082d11342ba093f12dd8020e4016b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c7c0c7bba082d11342ba093f12dd8020e4016b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a9dbfff6e0622e69cb37ba0cda919f619dad1cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a9dbfff6e0622e69cb37ba0cda919f619dad1cd", "html_url": "https://github.com/rust-lang/rust/commit/9a9dbfff6e0622e69cb37ba0cda919f619dad1cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a9dbfff6e0622e69cb37ba0cda919f619dad1cd/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fb617d0c5d0f8991aea5be29c9adda19bbd24a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fb617d0c5d0f8991aea5be29c9adda19bbd24a5", "html_url": "https://github.com/rust-lang/rust/commit/3fb617d0c5d0f8991aea5be29c9adda19bbd24a5"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "d9226e7464b4062a70e229e50487441dab72c8e7", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9a9dbfff6e0622e69cb37ba0cda919f619dad1cd/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a9dbfff6e0622e69cb37ba0cda919f619dad1cd/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=9a9dbfff6e0622e69cb37ba0cda919f619dad1cd", "patch": "@@ -584,10 +584,15 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n \n     pub fn leak_report(&self) -> usize {\n         trace!(\"### LEAK REPORT ###\");\n-        let static_kind = M::STATIC_KIND.map(|k| MemoryKind::Machine(k));\n-        let leaks: Vec<_> = self.alloc_map.filter_map_collect(|&id, &(kind, _)|\n-                // exclude mutable statics\n-                if Some(kind) == static_kind { None } else { Some(id) } );\n+        let leaks: Vec<_> = self.alloc_map.filter_map_collect(|&id, &(kind, _)| {\n+            // exclude statics and vtables\n+            let exclude = match kind {\n+                MemoryKind::Stack => false,\n+                MemoryKind::Vtable => true,\n+                MemoryKind::Machine(k) => Some(k) == M::STATIC_KIND,\n+            };\n+            if exclude { None } else { Some(id) }\n+        });\n         let n = leaks.len();\n         self.dump_allocs(leaks);\n         n"}]}