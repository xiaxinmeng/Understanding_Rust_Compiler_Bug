{"sha": "a75068ac377725655c124b38b34b0620a3049142", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NTA2OGFjMzc3NzI1NjU1YzEyNGIzOGIzNGIwNjIwYTMwNDkxNDI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-24T14:51:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-24T14:51:30Z"}, "message": "Rollup merge of #72527 - RalfJung:miri-clippy-test-args, r=Mark-Simulacrum\n\nbootstrap: propagate test-args to miri and clippy test suites\n\nFor Miri I verified this works. For clippy, unfortunately it doesn't seem to work as a stage 0 tool:\n```\n./x.py --stage 0 test src/tools/clippy --test-args init\n```\ngives\n```\n   Compiling clippy-mini-macro-test v0.2.0 (/home/r/src/rust/rustc.3/src/tools/clippy/mini-macro)\nerror[E0658]: procedural macros cannot be expanded to expressions\n  --> src/tools/clippy/mini-macro/src/lib.rs:11:5\n   |\n11 | /     quote!(\n12 | |         #[allow(unused)]\n13 | |         fn needless_take_by_value(s: String) {\n14 | |             println!(\"{}\", s.len());\n...  |\n24 | |         }\n25 | |     )\n   | |_____^\n   |\n   = note: see issue #54727 <https://github.com/rust-lang/rust/issues/54727> for more information\n   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n\n   Compiling proc-macro2 v1.0.3\n   Compiling syn v1.0.11\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `clippy-mini-macro-test`.\n```\nBut propagating `--test-args` to the test suite seems to make sense regardless.\nCc @rust-lang/clippy", "tree": {"sha": "f0717ade5a0796c5e2be01476bcd9578ad9d6ed4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0717ade5a0796c5e2be01476bcd9578ad9d6ed4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a75068ac377725655c124b38b34b0620a3049142", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeyonyCRBK7hj4Ov3rIwAAdHIIAD+RiaHNpDbKl1JexRoxg5lc\nm8XEoXt5KwaNw61s/04W/fTVwfDpPtcbeqifS7fgpv52vPw5GD4ztHbBbQG250QV\n8vkUKvUqUOHZ3iW/i9oGlSwFKRNqO3SBHMAV6STdLTXUVmc5y0Zt149iUh6H6sXc\nsAqY0uzInWMg33mSvkYAl7lq6hhUX0qIZO2MHXygiH88ndWIYYh+gi0vw6eQn2N4\nausFKEocgNbbrVaTisLadnFTTg0u46jv56BSRhlyBaiTUVoAOoKprnIPyE9rHvkG\nzVKntmqwoHnBp7NjHvy2gmoF4n9fpaMvJfL7JCnh2AxN1y9HFg7EA4/BAJm0ZrM=\n=BTpM\n-----END PGP SIGNATURE-----\n", "payload": "tree f0717ade5a0796c5e2be01476bcd9578ad9d6ed4\nparent 95c45838f03a65312ef7e6ed3a7b6fd02a1ea105\nparent 7a121ad77f0c9b501d127e23af4c53b5a9fd85ee\nauthor Ralf Jung <post@ralfj.de> 1590331890 +0200\ncommitter GitHub <noreply@github.com> 1590331890 +0200\n\nRollup merge of #72527 - RalfJung:miri-clippy-test-args, r=Mark-Simulacrum\n\nbootstrap: propagate test-args to miri and clippy test suites\n\nFor Miri I verified this works. For clippy, unfortunately it doesn't seem to work as a stage 0 tool:\n```\n./x.py --stage 0 test src/tools/clippy --test-args init\n```\ngives\n```\n   Compiling clippy-mini-macro-test v0.2.0 (/home/r/src/rust/rustc.3/src/tools/clippy/mini-macro)\nerror[E0658]: procedural macros cannot be expanded to expressions\n  --> src/tools/clippy/mini-macro/src/lib.rs:11:5\n   |\n11 | /     quote!(\n12 | |         #[allow(unused)]\n13 | |         fn needless_take_by_value(s: String) {\n14 | |             println!(\"{}\", s.len());\n...  |\n24 | |         }\n25 | |     )\n   | |_____^\n   |\n   = note: see issue #54727 <https://github.com/rust-lang/rust/issues/54727> for more information\n   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n\n   Compiling proc-macro2 v1.0.3\n   Compiling syn v1.0.11\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `clippy-mini-macro-test`.\n```\nBut propagating `--test-args` to the test suite seems to make sense regardless.\nCc @rust-lang/clippy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a75068ac377725655c124b38b34b0620a3049142", "html_url": "https://github.com/rust-lang/rust/commit/a75068ac377725655c124b38b34b0620a3049142", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a75068ac377725655c124b38b34b0620a3049142/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95c45838f03a65312ef7e6ed3a7b6fd02a1ea105", "url": "https://api.github.com/repos/rust-lang/rust/commits/95c45838f03a65312ef7e6ed3a7b6fd02a1ea105", "html_url": "https://github.com/rust-lang/rust/commit/95c45838f03a65312ef7e6ed3a7b6fd02a1ea105"}, {"sha": "7a121ad77f0c9b501d127e23af4c53b5a9fd85ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a121ad77f0c9b501d127e23af4c53b5a9fd85ee", "html_url": "https://github.com/rust-lang/rust/commit/7a121ad77f0c9b501d127e23af4c53b5a9fd85ee"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "ed50f950fb697cd1b451ddec777c26ef07ea68fd", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a75068ac377725655c124b38b34b0620a3049142/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a75068ac377725655c124b38b34b0620a3049142/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=a75068ac377725655c124b38b34b0620a3049142", "patch": "@@ -439,6 +439,8 @@ impl Step for Miri {\n             cargo.env(\"RUSTC_LIB_PATH\", builder.rustc_libdir(compiler));\n             cargo.env(\"MIRI_PATH\", miri);\n \n+            cargo.arg(\"--\").args(builder.config.cmd.test_args());\n+\n             builder.add_rustc_lib_path(compiler, &mut cargo);\n \n             if !try_run(builder, &mut cargo.into()) {\n@@ -545,6 +547,8 @@ impl Step for Clippy {\n             // clippy tests need to find the driver\n             cargo.env(\"CLIPPY_DRIVER_PATH\", clippy);\n \n+            cargo.arg(\"--\").args(builder.config.cmd.test_args());\n+\n             builder.add_rustc_lib_path(compiler, &mut cargo);\n \n             try_run(builder, &mut cargo.into());"}]}