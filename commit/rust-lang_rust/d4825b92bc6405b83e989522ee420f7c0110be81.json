{"sha": "d4825b92bc6405b83e989522ee420f7c0110be81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ODI1YjkyYmM2NDA1YjgzZTk4OTUyMmVlNDIwZjdjMDExMGJlODE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-18T17:29:50Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-18T17:32:03Z"}, "message": "Register new snapshots\n\nTime for a visit from the snapshot fairy!", "tree": {"sha": "88c2f3faac57ab5a76f01446b578bcac4f035bca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88c2f3faac57ab5a76f01446b578bcac4f035bca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4825b92bc6405b83e989522ee420f7c0110be81", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4825b92bc6405b83e989522ee420f7c0110be81", "html_url": "https://github.com/rust-lang/rust/commit/d4825b92bc6405b83e989522ee420f7c0110be81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4825b92bc6405b83e989522ee420f7c0110be81/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c33573440b61acf154a1cee55413d02f9835c9aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/c33573440b61acf154a1cee55413d02f9835c9aa", "html_url": "https://github.com/rust-lang/rust/commit/c33573440b61acf154a1cee55413d02f9835c9aa"}], "stats": {"total": 50, "additions": 9, "deletions": 41}, "files": [{"sha": "62fc08fd9d39405b4318594d02445c8df230a3af", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d4825b92bc6405b83e989522ee420f7c0110be81/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4825b92bc6405b83e989522ee420f7c0110be81/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=d4825b92bc6405b83e989522ee420f7c0110be81", "patch": "@@ -14,48 +14,13 @@ use prelude::*;\n use cast;\n use util::NonCopyable;\n \n-#[cfg(stage0)]\n-use unstable::intrinsics;\n-\n /// A mutable memory location that admits only `Pod` data.\n #[no_freeze]\n #[deriving(Clone)]\n pub struct Cell<T> {\n     priv value: T,\n }\n \n-// NB: For `stage0`, we omit the `Pod` bound. This is unsound but will help\n-// us get started on removing `@mut` from `rustc`.\n-\n-#[cfg(stage0)]\n-impl<T> Cell<T> {\n-    /// Creates a new `Cell` containing the given value.\n-    pub fn new(value: T) -> Cell<T> {\n-        Cell {\n-            value: value,\n-        }\n-    }\n-\n-    /// Returns a copy of the contained value.\n-    #[inline]\n-    pub fn get(&self) -> T {\n-        unsafe {\n-            let mut result = intrinsics::uninit();\n-            intrinsics::copy_nonoverlapping_memory(&mut result, &self.value, 1);\n-            result\n-        }\n-    }\n-\n-    /// Sets the contained value.\n-    #[inline]\n-    pub fn set(&self, value: T) {\n-        unsafe {\n-            intrinsics::copy_nonoverlapping_memory(cast::transmute_mut(&self.value), &value, 1)\n-        }\n-    }\n-}\n-\n-#[cfg(not(stage0))]\n impl<T: ::kinds::Pod> Cell<T> {\n     /// Creates a new `Cell` containing the given value.\n     pub fn new(value: T) -> Cell<T> {"}, {"sha": "b116f92f3d0c93119ff32a1fcf173fb48773d01a", "filename": "src/libstd/kinds.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4825b92bc6405b83e989522ee420f7c0110be81/src%2Flibstd%2Fkinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4825b92bc6405b83e989522ee420f7c0110be81/src%2Flibstd%2Fkinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkinds.rs?ref=d4825b92bc6405b83e989522ee420f7c0110be81", "patch": "@@ -41,7 +41,6 @@ pub trait Sized {\n /// Types that can be copied by simply copying bits (i.e. `memcpy`).\n ///\n /// The name \"POD\" stands for \"Plain Old Data\" and is borrowed from C++.\n-#[cfg(not(stage0))]\n #[lang=\"pod\"]\n pub trait Pod {\n     // Empty."}, {"sha": "47004ea173f320ca373e01f3e245af504cd7d78d", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4825b92bc6405b83e989522ee420f7c0110be81/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4825b92bc6405b83e989522ee420f7c0110be81/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=d4825b92bc6405b83e989522ee420f7c0110be81", "patch": "@@ -28,18 +28,14 @@ Rust's prelude has three main parts:\n \n // Reexported core operators\n pub use either::{Either, Left, Right};\n-pub use kinds::Sized;\n-pub use kinds::{Freeze, Send};\n+pub use kinds::{Freeze, Pod, Send, Sized};\n pub use ops::{Add, Sub, Mul, Div, Rem, Neg, Not};\n pub use ops::{BitAnd, BitOr, BitXor};\n pub use ops::{Drop};\n pub use ops::{Shl, Shr, Index};\n pub use option::{Option, Some, None};\n pub use result::{Result, Ok, Err};\n \n-#[cfg(not(stage0))]\n-pub use kinds::Pod;\n-\n // Reexported functions\n pub use from_str::from_str;\n pub use iter::range;"}, {"sha": "8b9713fc3a4b104024da578b0f716d284647b359", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d4825b92bc6405b83e989522ee420f7c0110be81/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d4825b92bc6405b83e989522ee420f7c0110be81/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=d4825b92bc6405b83e989522ee420f7c0110be81", "patch": "@@ -1,3 +1,11 @@\n+S 2013-12-17 d5798b3\n+  freebsd-x86_64 8f71dbd1aef6c59867ce6287cc82c6033e1ee5e5\n+  linux-i386 3a6e8950ef704ec57ab690b30beda19d7a63a537\n+  linux-x86_64 dc6cab75e98b6ca77ba7792aa39eda5875741d93\n+  macos-i386 ec9f8fd4b2f47f4160ed674350c70560a0cf5bb8\n+  macos-x86_64 ebae3ac1c05b42031e5f2859cd9c499dc644f8b1\n+  winnt-i386 4419876bcd00c1b75df7d86381aff4c0617030f7\n+\n S 2013-12-10 b8b16ae\n   freebsd-x86_64 08d28a3a47f4263dc0a005374e59d30b1b942ab2\n   linux-i386 4cd5d8b80014a69dea9744fd12c8cdab6269d263"}]}