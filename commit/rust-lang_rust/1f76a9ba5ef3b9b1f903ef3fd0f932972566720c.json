{"sha": "1f76a9ba5ef3b9b1f903ef3fd0f932972566720c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNzZhOWJhNWVmM2I5YjFmOTAzZWYzZmQwZjkzMjk3MjU2NjcyMGM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T22:52:51Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:37Z"}, "message": "librustc: De-`@mut` `populated_external_traits` in the type context", "tree": {"sha": "df79eb2b70ae39eda8cb703d316fcef2e895d47e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df79eb2b70ae39eda8cb703d316fcef2e895d47e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f76a9ba5ef3b9b1f903ef3fd0f932972566720c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f76a9ba5ef3b9b1f903ef3fd0f932972566720c", "html_url": "https://github.com/rust-lang/rust/commit/1f76a9ba5ef3b9b1f903ef3fd0f932972566720c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f76a9ba5ef3b9b1f903ef3fd0f932972566720c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f62faa89edb16a340a0be471037301ebf1457919", "url": "https://api.github.com/repos/rust-lang/rust/commits/f62faa89edb16a340a0be471037301ebf1457919", "html_url": "https://github.com/rust-lang/rust/commit/f62faa89edb16a340a0be471037301ebf1457919"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "ef7cd14ae9b54f8d56e34072095e07e96e87396c", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1f76a9ba5ef3b9b1f903ef3fd0f932972566720c/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f76a9ba5ef3b9b1f903ef3fd0f932972566720c/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=1f76a9ba5ef3b9b1f903ef3fd0f932972566720c", "patch": "@@ -364,7 +364,7 @@ struct ctxt_ {\n \n     // The set of external traits whose implementations have been read. This\n     // is used for lazy resolution of traits.\n-    populated_external_traits: @mut HashSet<ast::DefId>,\n+    populated_external_traits: RefCell<HashSet<ast::DefId>>,\n \n     // These two caches are used by const_eval when decoding external statics\n     // and variants that are found.\n@@ -1008,7 +1008,7 @@ pub fn mk_ctxt(s: session::Session,\n         used_mut_nodes: RefCell::new(HashSet::new()),\n         impl_vtables: RefCell::new(HashMap::new()),\n         populated_external_types: RefCell::new(HashSet::new()),\n-        populated_external_traits: @mut HashSet::new(),\n+        populated_external_traits: RefCell::new(HashSet::new()),\n \n         extern_const_statics: RefCell::new(HashMap::new()),\n         extern_const_variants: RefCell::new(HashMap::new()),\n@@ -4589,8 +4589,12 @@ pub fn populate_implementations_for_trait_if_necessary(\n     if trait_id.crate == LOCAL_CRATE {\n         return\n     }\n-    if tcx.populated_external_traits.contains(&trait_id) {\n-        return\n+    {\n+        let populated_external_traits = tcx.populated_external_traits\n+                                           .borrow();\n+        if populated_external_traits.get().contains(&trait_id) {\n+            return\n+        }\n     }\n \n     csearch::each_implementation_for_trait(tcx.sess.cstore, trait_id,\n@@ -4615,7 +4619,9 @@ pub fn populate_implementations_for_trait_if_necessary(\n         impls.get().insert(implementation_def_id, implementation);\n     });\n \n-    tcx.populated_external_traits.insert(trait_id);\n+    let mut populated_external_traits = tcx.populated_external_traits\n+                                           .borrow_mut();\n+    populated_external_traits.get().insert(trait_id);\n }\n \n /// Given the def_id of an impl, return the def_id of the trait it implements."}]}