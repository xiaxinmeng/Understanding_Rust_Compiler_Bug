{"sha": "809d4aa478f79ce4088d76a5c1f332ba66eba884", "node_id": "C_kwDOAAsO6NoAKDgwOWQ0YWE0NzhmNzljZTQwODhkNzZhNWMxZjMzMmJhNjZlYmE4ODQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-01-23T10:30:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-23T10:30:00Z"}, "message": "Rollup merge of #107148 - Ezrashaw:uncode-e0789, r=compiler-errors,GuillaumeGomez\n\nremove error code from `E0789`, add UI test/docs\n\n`E0789` shouldn't have an error code, it's explicitly internal-only and is tiny in scope. (I wonder if we can tighten the standard for this in the RFC?) I also added a UI test and error docs (done like `E0208`, they are \"no longer emitted\").\n\nr? `@GuillaumeGomez` (shouldn't need a compiler review, it's pretty minor)", "tree": {"sha": "1863cc207e6cf6ba810406eaa03e202575590fd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1863cc207e6cf6ba810406eaa03e202575590fd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/809d4aa478f79ce4088d76a5c1f332ba66eba884", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzmGoCRBK7hj4Ov3rIwAAKa4IAHfMuYZNUfK8pQXWEVxBZh26\nd4zG8HY1pXjsQvsjO8o4GgW1uz+71h2p30LHMEOg5z6eoTzxTpmQ0UBa4/9N0lzw\nXNt0Ib7lIS6kB9G1r2bBl9glO2nO+ioIFdSVhVXmB2bH+xfSRuwPthcHyTSTDhls\n71AU6vnBtLfWVDs35j1ovT7CZuj0z/uaot929KptkKW9EmJFuZcFjhYhLsOJOYB5\n3URvxcbDSVVWcmTfB49eavIBLFAZ3TOaQQA4UVGhrSId4X9LyPy6Meu8tgbqrkfL\nTTnvroiRlour4wtgzuoxLkICQK7nA69M/lQwBDXo53biD2AKSMJ5NBXFh8Lkf7c=\n=WuJJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 1863cc207e6cf6ba810406eaa03e202575590fd7\nparent 8709c395a60cbac49a9dfbf6c2c15e2d6454c286\nparent 00ff718da84b1dbe5f7851fa39987c5b801ca5ca\nauthor Yuki Okushi <jtitor@2k36.org> 1674469800 +0900\ncommitter GitHub <noreply@github.com> 1674469800 +0900\n\nRollup merge of #107148 - Ezrashaw:uncode-e0789, r=compiler-errors,GuillaumeGomez\n\nremove error code from `E0789`, add UI test/docs\n\n`E0789` shouldn't have an error code, it's explicitly internal-only and is tiny in scope. (I wonder if we can tighten the standard for this in the RFC?) I also added a UI test and error docs (done like `E0208`, they are \"no longer emitted\").\n\nr? `@GuillaumeGomez` (shouldn't need a compiler review, it's pretty minor)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/809d4aa478f79ce4088d76a5c1f332ba66eba884", "html_url": "https://github.com/rust-lang/rust/commit/809d4aa478f79ce4088d76a5c1f332ba66eba884", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/809d4aa478f79ce4088d76a5c1f332ba66eba884/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8709c395a60cbac49a9dfbf6c2c15e2d6454c286", "url": "https://api.github.com/repos/rust-lang/rust/commits/8709c395a60cbac49a9dfbf6c2c15e2d6454c286", "html_url": "https://github.com/rust-lang/rust/commit/8709c395a60cbac49a9dfbf6c2c15e2d6454c286"}, {"sha": "00ff718da84b1dbe5f7851fa39987c5b801ca5ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/00ff718da84b1dbe5f7851fa39987c5b801ca5ca", "html_url": "https://github.com/rust-lang/rust/commit/00ff718da84b1dbe5f7851fa39987c5b801ca5ca"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "4ae372bb90432cc86908ed3f41dc6d0b64982806", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/809d4aa478f79ce4088d76a5c1f332ba66eba884/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809d4aa478f79ce4088d76a5c1f332ba66eba884/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=809d4aa478f79ce4088d76a5c1f332ba66eba884", "patch": "@@ -506,6 +506,7 @@ E0785: include_str!(\"./error_codes/E0785.md\"),\n E0786: include_str!(\"./error_codes/E0786.md\"),\n E0787: include_str!(\"./error_codes/E0787.md\"),\n E0788: include_str!(\"./error_codes/E0788.md\"),\n+E0789: include_str!(\"./error_codes/E0789.md\"),\n E0790: include_str!(\"./error_codes/E0790.md\"),\n E0791: include_str!(\"./error_codes/E0791.md\"),\n E0792: include_str!(\"./error_codes/E0792.md\"),\n@@ -645,5 +646,4 @@ E0792: include_str!(\"./error_codes/E0792.md\"),\n //  E0721, // `await` keyword\n //  E0723, // unstable feature in `const` context\n //  E0738, // Removed; errored on `#[track_caller] fn`s in `extern \"Rust\" { ... }`.\n-    E0789, // rustc_allowed_through_unstable_modules without stability attribute\n }"}, {"sha": "89b7cd422fe966a56e805cfeb21061d06fedd0c6", "filename": "compiler/rustc_error_codes/src/error_codes/E0789.md", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/809d4aa478f79ce4088d76a5c1f332ba66eba884/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0789.md", "raw_url": "https://github.com/rust-lang/rust/raw/809d4aa478f79ce4088d76a5c1f332ba66eba884/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0789.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0789.md?ref=809d4aa478f79ce4088d76a5c1f332ba66eba884", "patch": "@@ -0,0 +1,30 @@\n+#### This error code is internal to the compiler and will not be emitted with normal Rust code.\n+\n+The internal `rustc_allowed_through_unstable_modules` attribute must be used\n+on an item with a `stable` attribute.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0789\n+// NOTE: both of these attributes are perma-unstable and should *never* be\n+//       used outside of the compiler and standard library.\n+#![feature(rustc_attrs)]\n+#![feature(staged_api)]\n+\n+#![unstable(feature = \"foo_module\", reason = \"...\", issue = \"123\")]\n+\n+#[rustc_allowed_through_unstable_modules]\n+// #[stable(feature = \"foo\", since = \"1.0\")]\n+struct Foo;\n+// ^^^ error: `rustc_allowed_through_unstable_modules` attribute must be\n+//            paired with a `stable` attribute\n+```\n+\n+Typically when an item is marked with a `stable` attribute, the modules that\n+enclose the item must also be marked with `stable` attributes, otherwise the\n+item becomes *de facto* unstable. `#[rustc_allowed_through_unstable_modules]`\n+is a workaround which allows an item to \"escape\" its unstable parent modules.\n+This error occurs when an item is marked with\n+`#[rustc_allowed_through_unstable_modules]` but no supplementary `stable`\n+attribute exists. See [#99288](https://github.com/rust-lang/rust/pull/99288)\n+for an example of `#[rustc_allowed_through_unstable_modules]` in use."}, {"sha": "6bb4d32f87d0a25bd2b5a065741ce3e3fc5e6cb8", "filename": "src/tools/tidy/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/809d4aa478f79ce4088d76a5c1f332ba66eba884/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809d4aa478f79ce4088d76a5c1f332ba66eba884/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs?ref=809d4aa478f79ce4088d76a5c1f332ba66eba884", "patch": "@@ -31,7 +31,7 @@ const IGNORE_DOCTEST_CHECK: &[&str] = &[\"E0464\", \"E0570\", \"E0601\", \"E0602\", \"E06\n \n // Error codes that don't yet have a UI test. This list will eventually be removed.\n const IGNORE_UI_TEST_CHECK: &[&str] =\n-    &[\"E0461\", \"E0465\", \"E0476\", \"E0514\", \"E0523\", \"E0554\", \"E0640\", \"E0717\", \"E0729\", \"E0789\"];\n+    &[\"E0461\", \"E0465\", \"E0476\", \"E0514\", \"E0523\", \"E0554\", \"E0640\", \"E0717\", \"E0729\"];\n \n macro_rules! verbose_print {\n     ($verbose:expr, $($fmt:tt)*) => {"}, {"sha": "c0cbbcc9d2dc26f758eb5780d482799453fdb8de", "filename": "tests/ui/error-codes/E0789.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/809d4aa478f79ce4088d76a5c1f332ba66eba884/tests%2Fui%2Ferror-codes%2FE0789.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809d4aa478f79ce4088d76a5c1f332ba66eba884/tests%2Fui%2Ferror-codes%2FE0789.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0789.rs?ref=809d4aa478f79ce4088d76a5c1f332ba66eba884", "patch": "@@ -0,0 +1,12 @@\n+// compile-flags: --crate-type lib\n+\n+#![feature(rustc_attrs)]\n+#![feature(staged_api)]\n+#![unstable(feature = \"foo_module\", reason = \"...\", issue = \"123\")]\n+\n+#[rustc_allowed_through_unstable_modules]\n+// #[stable(feature = \"foo\", since = \"1.0\")]\n+struct Foo;\n+//~^ ERROR `rustc_allowed_through_unstable_modules` attribute must be paired with a `stable` attribute\n+//~^^ ERROR `rustc_allowed_through_unstable_modules` attribute must be paired with a `stable` attribute\n+// FIXME: we shouldn't have two errors here, only occurs when using `-Zdeduplicate-diagnostics=no`"}, {"sha": "faab92bae035dc9408bd72006097ee68ab3d6426", "filename": "tests/ui/error-codes/E0789.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/809d4aa478f79ce4088d76a5c1f332ba66eba884/tests%2Fui%2Ferror-codes%2FE0789.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/809d4aa478f79ce4088d76a5c1f332ba66eba884/tests%2Fui%2Ferror-codes%2FE0789.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0789.stderr?ref=809d4aa478f79ce4088d76a5c1f332ba66eba884", "patch": "@@ -0,0 +1,15 @@\n+error[E0789]: `rustc_allowed_through_unstable_modules` attribute must be paired with a `stable` attribute\n+  --> $DIR/E0789.rs:9:1\n+   |\n+LL | struct Foo;\n+   | ^^^^^^^^^^^\n+\n+error[E0789]: `rustc_allowed_through_unstable_modules` attribute must be paired with a `stable` attribute\n+  --> $DIR/E0789.rs:9:1\n+   |\n+LL | struct Foo;\n+   | ^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0789`."}]}