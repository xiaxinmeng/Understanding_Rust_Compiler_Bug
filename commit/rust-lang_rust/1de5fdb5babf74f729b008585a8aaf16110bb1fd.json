{"sha": "1de5fdb5babf74f729b008585a8aaf16110bb1fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZTVmZGI1YmFiZjc0ZjcyOWIwMDg1ODVhOGFhZjE2MTEwYmIxZmQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-10T16:19:08Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-22T18:56:20Z"}, "message": "Add StableHashingContextLike to HashStable_Generic derive.", "tree": {"sha": "8e1f1b6f69cf4e20a435c1b53dab59803dee8406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e1f1b6f69cf4e20a435c1b53dab59803dee8406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1de5fdb5babf74f729b008585a8aaf16110bb1fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1de5fdb5babf74f729b008585a8aaf16110bb1fd", "html_url": "https://github.com/rust-lang/rust/commit/1de5fdb5babf74f729b008585a8aaf16110bb1fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1de5fdb5babf74f729b008585a8aaf16110bb1fd/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e969e070fcb0d8fab5d2c812edad12490fe8c1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e969e070fcb0d8fab5d2c812edad12490fe8c1d", "html_url": "https://github.com/rust-lang/rust/commit/3e969e070fcb0d8fab5d2c812edad12490fe8c1d"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "b4800796b145892ae51ad436d87dd93528257c2d", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=1de5fdb5babf74f729b008585a8aaf16110bb1fd", "patch": "@@ -17,6 +17,10 @@ use crate::hir::def_id::{DefId, CrateNum, CRATE_DEF_INDEX};\n use smallvec::SmallVec;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n \n+impl<'ctx> syntax_pos::StableHashingContextLike for StableHashingContext<'ctx> {}\n+impl<'ctx> syntax::StableHashingContextLike for StableHashingContext<'ctx> {}\n+impl<'ctx> rustc_target::StableHashingContextLike for StableHashingContext<'ctx> {}\n+\n impl_stable_hash_for!(struct ::syntax::ast::Lit {\n     kind,\n     token,"}, {"sha": "9003517d715a5b82378324d9e3a238d932aed667", "filename": "src/librustc_macros/src/hash_stable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs?ref=1de5fdb5babf74f729b008585a8aaf16110bb1fd", "patch": "@@ -51,6 +51,7 @@ pub fn hash_stable_generic_derive(mut s: synstructure::Structure<'_>) -> proc_ma\n     let generic: syn::GenericParam = parse_quote!(__CTX);\n     s.add_bounds(synstructure::AddBounds::Generics);\n     s.add_impl_generic(generic);\n+    s.add_where_predicate(parse_quote!{ __CTX: crate::StableHashingContextLike });\n     let body = s.each(|bi| {\n         let attrs = parse_attributes(bi.ast());\n         if attrs.ignore {"}, {"sha": "274f5ec7f1d0a785704ab585b9c36cb2033b6d82", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=1de5fdb5babf74f729b008585a8aaf16110bb1fd", "patch": "@@ -17,3 +17,8 @@\n \n pub mod abi;\n pub mod spec;\n+\n+/// Requirements for a `StableHashingContext` to be used in this crate.\n+/// This is a hack to allow using the `HashStable_Generic` derive macro\n+/// instead of implementing everything in librustc.\n+pub trait StableHashingContextLike {}"}, {"sha": "8f091c06b4b8a0c6013051693cbfd6e5a2f5d710", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=1de5fdb5babf74f729b008585a8aaf16110bb1fd", "patch": "@@ -110,3 +110,8 @@ pub mod print {\n }\n \n pub mod early_buffered_lints;\n+\n+/// Requirements for a `StableHashingContext` to be used in this crate.\n+/// This is a hack to allow using the `HashStable_Generic` derive macro\n+/// instead of implementing everything in librustc.\n+pub trait StableHashingContextLike {}"}, {"sha": "d11ef5fcab2e0509df5dcbeb8939fb2fcdef52d0", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de5fdb5babf74f729b008585a8aaf16110bb1fd/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=1de5fdb5babf74f729b008585a8aaf16110bb1fd", "patch": "@@ -1562,3 +1562,8 @@ fn lookup_line(lines: &[BytePos], pos: BytePos) -> isize {\n         Err(line) => line as isize - 1\n     }\n }\n+\n+/// Requirements for a `StableHashingContext` to be used in this crate.\n+/// This is a hack to allow using the `HashStable_Generic` derive macro\n+/// instead of implementing everything in librustc.\n+pub trait StableHashingContextLike {}"}]}