{"sha": "5113de90d1f986232b589c03f29c8af90fd07ed0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMTNkZTkwZDFmOTg2MjMyYjU4OWMwM2YyOWM4YWY5MGZkMDdlZDA=", "commit": {"author": {"name": "O01eg", "email": "o01eg@yandex.ru", "date": "2018-12-06T10:21:45Z"}, "committer": {"name": "O01eg", "email": "o01eg@yandex.ru", "date": "2018-12-06T10:21:45Z"}, "message": "Add sysroot gettinh code to dogfood tests.", "tree": {"sha": "fa128b7bdda9fb1be4a71230707945032097f5eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa128b7bdda9fb1be4a71230707945032097f5eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5113de90d1f986232b589c03f29c8af90fd07ed0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABEIAB0WIQTv7q0NRmbSXocCXjKPunSz54tGdwUCXAj4WAAKCRCPunSz54tG\nd3hFAQCJ7JnCOEYmtsWrXoJMkHQZDipwV75/2ftud/PdQcwDEQD+NwnzoXa14BRQ\nOnAFRd0rI03Om3FQXn76N6HzfvWXE6c=\n=UvuT\n-----END PGP SIGNATURE-----", "payload": "tree fa128b7bdda9fb1be4a71230707945032097f5eb\nparent 571d4cc7bf4c073dcb90298902188fef1721ef9b\nauthor O01eg <o01eg@yandex.ru> 1544091705 +0300\ncommitter O01eg <o01eg@yandex.ru> 1544091705 +0300\n\nAdd sysroot gettinh code to dogfood tests.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5113de90d1f986232b589c03f29c8af90fd07ed0", "html_url": "https://github.com/rust-lang/rust/commit/5113de90d1f986232b589c03f29c8af90fd07ed0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5113de90d1f986232b589c03f29c8af90fd07ed0/comments", "author": {"login": "o01eg", "id": 397177, "node_id": "MDQ6VXNlcjM5NzE3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/397177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o01eg", "html_url": "https://github.com/o01eg", "followers_url": "https://api.github.com/users/o01eg/followers", "following_url": "https://api.github.com/users/o01eg/following{/other_user}", "gists_url": "https://api.github.com/users/o01eg/gists{/gist_id}", "starred_url": "https://api.github.com/users/o01eg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o01eg/subscriptions", "organizations_url": "https://api.github.com/users/o01eg/orgs", "repos_url": "https://api.github.com/users/o01eg/repos", "events_url": "https://api.github.com/users/o01eg/events{/privacy}", "received_events_url": "https://api.github.com/users/o01eg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "o01eg", "id": 397177, "node_id": "MDQ6VXNlcjM5NzE3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/397177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/o01eg", "html_url": "https://github.com/o01eg", "followers_url": "https://api.github.com/users/o01eg/followers", "following_url": "https://api.github.com/users/o01eg/following{/other_user}", "gists_url": "https://api.github.com/users/o01eg/gists{/gist_id}", "starred_url": "https://api.github.com/users/o01eg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/o01eg/subscriptions", "organizations_url": "https://api.github.com/users/o01eg/orgs", "repos_url": "https://api.github.com/users/o01eg/repos", "events_url": "https://api.github.com/users/o01eg/events{/privacy}", "received_events_url": "https://api.github.com/users/o01eg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "571d4cc7bf4c073dcb90298902188fef1721ef9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/571d4cc7bf4c073dcb90298902188fef1721ef9b", "html_url": "https://github.com/rust-lang/rust/commit/571d4cc7bf4c073dcb90298902188fef1721ef9b"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "69f4f9901b7f0f2172ba54fb5898933fe4fe6013", "filename": "tests/dogfood.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5113de90d1f986232b589c03f29c8af90fd07ed0/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5113de90d1f986232b589c03f29c8af90fd07ed0/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=5113de90d1f986232b589c03f29c8af90fd07ed0", "patch": "@@ -7,6 +7,31 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::path::PathBuf;\n+use std::process::Command;\n+\n+fn rustc_sysroot_path() -> PathBuf {\n+    option_env!(\"SYSROOT\")\n+        .map(String::from)\n+        .or_else(|| std::env::var(\"SYSROOT\").ok())\n+        .or_else(|| {\n+            let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n+            let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n+            home.and_then(|home| toolchain.map(|toolchain| format!(\"{}/toolchains/{}\", home, toolchain)))\n+        })\n+        .or_else(|| {\n+            Command::new(\"rustc\")\n+                .arg(\"--print\")\n+                .arg(\"sysroot\")\n+                .output()\n+                .ok()\n+                .and_then(|out| String::from_utf8(out.stdout).ok())\n+                .map(|s| s.trim().to_owned())\n+        })\n+        .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\")\n+        .into()\n+}\n+\n #[test]\n fn dogfood() {\n     if option_env!(\"RUSTC_TEST_SUITE\").is_some() || cfg!(windows) {\n@@ -21,6 +46,7 @@ fn dogfood() {\n     let output = std::process::Command::new(clippy_cmd)\n         .current_dir(root_dir)\n         .env(\"CLIPPY_DOGFOOD\", \"1\")\n+        .env(\"RUSTFLAGS\", format!(\"--sysroot {}\", rustc_sysroot_path().display()))\n         .arg(\"clippy\")\n         .arg(\"--all-targets\")\n         .arg(\"--all-features\")\n@@ -59,6 +85,7 @@ fn dogfood_tests() {\n         let output = std::process::Command::new(&clippy_cmd)\n             .current_dir(root_dir.join(d))\n             .env(\"CLIPPY_DOGFOOD\", \"1\")\n+            .env(\"RUSTFLAGS\", format!(\"--sysroot {}\", rustc_sysroot_path().display()))\n             .arg(\"clippy\")\n             .arg(\"--\")\n             .args(&[\"-D\", \"clippy::all\"])"}]}