{"sha": "031529e3fe34267168a43cf74dbdd9e41f12ac43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMTUyOWUzZmUzNDI2NzE2OGE0M2NmNzRkYmRkOWU0MWYxMmFjNDM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-19T01:13:36Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-19T01:13:36Z"}, "message": "rustc: Only emit gc root intrinsic calls if the GC flag is on, to work around #836", "tree": {"sha": "022fbd9761ba1e333ec9ab53d6ecf660b02dbd7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/022fbd9761ba1e333ec9ab53d6ecf660b02dbd7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/031529e3fe34267168a43cf74dbdd9e41f12ac43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/031529e3fe34267168a43cf74dbdd9e41f12ac43", "html_url": "https://github.com/rust-lang/rust/commit/031529e3fe34267168a43cf74dbdd9e41f12ac43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/031529e3fe34267168a43cf74dbdd9e41f12ac43/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a894dae8ec784480cc7d8b127a79f9418e8fa7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a894dae8ec784480cc7d8b127a79f9418e8fa7d", "html_url": "https://github.com/rust-lang/rust/commit/4a894dae8ec784480cc7d8b127a79f9418e8fa7d"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "1302e6d0744b67276e7bddbc0e0dc9e8e29f0c8d", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/031529e3fe34267168a43cf74dbdd9e41f12ac43/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/031529e3fe34267168a43cf74dbdd9e41f12ac43/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=031529e3fe34267168a43cf74dbdd9e41f12ac43", "patch": "@@ -5626,7 +5626,9 @@ fn alloc_ty(cx: &@block_ctxt, t: &ty::t) -> result {\n     // past caller conventions and may well make sense again,\n     // so we leave it as-is.\n \n-    bcx = gc::add_gc_root(bcx, val, t);\n+    if (bcx_tcx(cx).sess.get_opts().do_gc) {\n+        bcx = gc::add_gc_root(bcx, val, t);\n+    }\n \n     ret rslt(cx, val);\n }"}]}