{"sha": "2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "node_id": "C_kwDOAAsO6NoAKDJiZTAwOTQ3YmZiYjdlMzFjZDZhNWI2Y2YxZTllMmYwYmMxYzRkYTY", "commit": {"author": {"name": "hdelc", "email": "hdelc02@gmail.com", "date": "2022-08-03T03:11:22Z"}, "committer": {"name": "hdelc", "email": "hdelc02@gmail.com", "date": "2022-08-03T03:11:22Z"}, "message": "Add items to `DocAliasBadLocation` check error match arm\n\n- Added `Impl`, `Closure`, ForeignMod` targets\n- `Target::name` changed for `Target::Impl`\n- Error output for `Target::ForeignMod` changed to \"foreign module\"", "tree": {"sha": "2d42fe432758a3d2e64b1d3c93b7f9259d18c16b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d42fe432758a3d2e64b1d3c93b7f9259d18c16b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "html_url": "https://github.com/rust-lang/rust/commit/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/comments", "author": {"login": "hdelc", "id": 62157015, "node_id": "MDQ6VXNlcjYyMTU3MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/62157015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdelc", "html_url": "https://github.com/hdelc", "followers_url": "https://api.github.com/users/hdelc/followers", "following_url": "https://api.github.com/users/hdelc/following{/other_user}", "gists_url": "https://api.github.com/users/hdelc/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdelc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdelc/subscriptions", "organizations_url": "https://api.github.com/users/hdelc/orgs", "repos_url": "https://api.github.com/users/hdelc/repos", "events_url": "https://api.github.com/users/hdelc/events{/privacy}", "received_events_url": "https://api.github.com/users/hdelc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hdelc", "id": 62157015, "node_id": "MDQ6VXNlcjYyMTU3MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/62157015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdelc", "html_url": "https://github.com/hdelc", "followers_url": "https://api.github.com/users/hdelc/followers", "following_url": "https://api.github.com/users/hdelc/following{/other_user}", "gists_url": "https://api.github.com/users/hdelc/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdelc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdelc/subscriptions", "organizations_url": "https://api.github.com/users/hdelc/orgs", "repos_url": "https://api.github.com/users/hdelc/repos", "events_url": "https://api.github.com/users/hdelc/events{/privacy}", "received_events_url": "https://api.github.com/users/hdelc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e8abe7da2ea02af86e840716e241ca0fec653f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e8abe7da2ea02af86e840716e241ca0fec653f2", "html_url": "https://github.com/rust-lang/rust/commit/1e8abe7da2ea02af86e840716e241ca0fec653f2"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "6236dea10c88f3c23258a1821f56199c7bef3085", "filename": "compiler/rustc_hir/src/target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/compiler%2Frustc_hir%2Fsrc%2Ftarget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/compiler%2Frustc_hir%2Fsrc%2Ftarget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Ftarget.rs?ref=2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "patch": "@@ -162,7 +162,7 @@ impl Target {\n             Target::Union => \"union\",\n             Target::Trait => \"trait\",\n             Target::TraitAlias => \"trait alias\",\n-            Target::Impl => \"item\",\n+            Target::Impl => \"implementation block\",\n             Target::Expression => \"expression\",\n             Target::Statement => \"statement\",\n             Target::Arm => \"match arm\","}, {"sha": "5b7d44e41cf6d35b317d3e710e70eb110831402f", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "patch": "@@ -596,8 +596,6 @@ impl CheckAttrVisitor<'_> {\n \n         let span = meta.span();\n         if let Some(location) = match target {\n-            Target::Impl => Some(\"implementation block\"),\n-            Target::ForeignMod => Some(\"extern block\"),\n             Target::AssocTy => {\n                 let parent_hir_id = self.tcx.hir().get_parent_item(hir_id);\n                 let containing_item = self.tcx.hir().expect_item(parent_hir_id);\n@@ -619,13 +617,17 @@ impl CheckAttrVisitor<'_> {\n             }\n             // we check the validity of params elsewhere\n             Target::Param => return false,\n-            Target::Expression | Target::Statement | Target::Arm => Some(target.name()),\n+            Target::Expression\n+            | Target::Statement\n+            | Target::Arm\n+            | Target::ForeignMod\n+            | Target::Closure\n+            | Target::Impl => Some(target.name()),\n             Target::ExternCrate\n             | Target::Use\n             | Target::Static\n             | Target::Const\n             | Target::Fn\n-            | Target::Closure\n             | Target::Mod\n             | Target::GlobalAsm\n             | Target::TyAlias"}, {"sha": "85c9516236c94484872270dff3059572432e9d62", "filename": "src/test/rustdoc-ui/check-doc-alias-attr-location.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr-location.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr-location.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr-location.stderr?ref=2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "patch": "@@ -1,4 +1,4 @@\n-error: `#[doc(alias = \"...\")]` isn't allowed on extern block\n+error: `#[doc(alias = \"...\")]` isn't allowed on foreign module\n   --> $DIR/check-doc-alias-attr-location.rs:7:7\n    |\n LL | #[doc(alias = \"foo\")]"}, {"sha": "310d1f720eb7cb6800ed21c32312e80700d1ba9d", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "patch": "@@ -212,7 +212,7 @@ note: the lint level is defined here\n LL | #![warn(unused_attributes, unknown_lints)]\n    |         ^^^^^^^^^^^^^^^^^\n \n-warning: `#[automatically_derived]` only has an effect on items\n+warning: `#[automatically_derived]` only has an effect on implementation blocks\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:266:1\n    |\n LL | #[automatically_derived]\n@@ -515,25 +515,25 @@ warning: `#[path]` only has an effect on modules\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n-warning: `#[automatically_derived]` only has an effect on items\n+warning: `#[automatically_derived]` only has an effect on implementation blocks\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:269:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: `#[automatically_derived]` only has an effect on items\n+warning: `#[automatically_derived]` only has an effect on implementation blocks\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:272:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: `#[automatically_derived]` only has an effect on items\n+warning: `#[automatically_derived]` only has an effect on implementation blocks\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:275:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: `#[automatically_derived]` only has an effect on items\n+warning: `#[automatically_derived]` only has an effect on implementation blocks\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:278:5\n    |\n LL |     #[automatically_derived] type T = S;\n@@ -923,7 +923,7 @@ warning: `#[must_use]` has no effect when applied to a type alias\n LL |     #[must_use] type T = S;\n    |     ^^^^^^^^^^^\n \n-warning: `#[must_use]` has no effect when applied to an item\n+warning: `#[must_use]` has no effect when applied to an implementation block\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:614:5\n    |\n LL |     #[must_use] impl S { }"}, {"sha": "317d81c591d55cd5cdb0cec79b306eb14ae84376", "filename": "src/test/ui/lint/unused/unused_attributes-must_use.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/src%2Ftest%2Fui%2Flint%2Funused%2Funused_attributes-must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/src%2Ftest%2Fui%2Flint%2Funused%2Funused_attributes-must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused_attributes-must_use.stderr?ref=2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "patch": "@@ -45,7 +45,7 @@ error: `#[must_use]` has no effect when applied to a static item\n LL | #[must_use]\n    | ^^^^^^^^^^^\n \n-error: `#[must_use]` has no effect when applied to an item\n+error: `#[must_use]` has no effect when applied to an implementation block\n   --> $DIR/unused_attributes-must_use.rs:33:1\n    |\n LL | #[must_use]\n@@ -69,7 +69,7 @@ error: `#[must_use]` has no effect when applied to a type parameter\n LL | fn qux<#[must_use] T>(_: T) {}\n    |        ^^^^^^^^^^^\n \n-error: `#[must_use]` has no effect when applied to an item\n+error: `#[must_use]` has no effect when applied to an implementation block\n   --> $DIR/unused_attributes-must_use.rs:79:1\n    |\n LL | #[must_use]"}, {"sha": "23c93a4ed8bdb248a867de0ddae844175e3f80c7", "filename": "src/test/ui/rustdoc/check-doc-alias-attr-location.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/src%2Ftest%2Fui%2Frustdoc%2Fcheck-doc-alias-attr-location.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6/src%2Ftest%2Fui%2Frustdoc%2Fcheck-doc-alias-attr-location.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frustdoc%2Fcheck-doc-alias-attr-location.stderr?ref=2be00947bfbb7e31cd6a5b6cf1e9e2f0bc1c4da6", "patch": "@@ -4,7 +4,7 @@ error: allow, cfg, cfg_attr, deny, expect, forbid, and warn are the only allowed\n LL |     fn foo(#[doc(alias = \"qux\")] _x: u32) -> Self::X {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n \n-error: `#[doc(alias = \"...\")]` isn't allowed on extern block\n+error: `#[doc(alias = \"...\")]` isn't allowed on foreign module\n   --> $DIR/check-doc-alias-attr-location.rs:9:7\n    |\n LL | #[doc(alias = \"foo\")]"}]}