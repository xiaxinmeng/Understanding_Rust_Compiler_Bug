{"sha": "9f6d0cb052e7d06685a851b0776b63dfe5883c9c", "node_id": "C_kwDOAAsO6NoAKDlmNmQwY2IwNTJlN2QwNjY4NWE4NTFiMDc3NmI2M2RmZTU4ODNjOWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-29T23:04:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-29T23:04:17Z"}, "message": "Rollup merge of #93463 - dtolnay:_args, r=cjgillot\n\nRename _args -> args in format_args expansion\n\nAs observed in https://github.com/rust-lang/rust/pull/91359#discussion_r786058960, prior to that PR this variable was sometimes never used, such as in the case of:\n\n```rust\nprintln!(\"\");\n\n// used to expand to:\n::std::io::_print(\n    ::core::fmt::Arguments::new_v1(\n        &[\"\\n\"],\n        &match () {\n            _args => [],\n        },\n    ),\n);\n```\n\nso the leading underscore in `_args` was used to suppress an unused variable lint. However after #91359 the variable is always used when present, as the unused case would instead expand to:\n\n```rust\n::std::io::_print(::core::fmt::Arguments::new_v1(&[\"\\n\"], &[]));\n```", "tree": {"sha": "54f478e686227f316669078b0f9969ca744a874c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54f478e686227f316669078b0f9969ca744a874c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f6d0cb052e7d06685a851b0776b63dfe5883c9c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh9cfxCRBK7hj4Ov3rIwAAr9QIAHixnmgWHopNJzFcDu4OzutA\ncMLdV1d3Dot2uy+8DlIQewdEK5yOdKcZXG2ZyrBzPqBih5UoV+HVAFCKSAtGz1Sg\nMAV1jeOQMH/PX3gUuguIjGaT+ntlQPJARQlSnYHOR2+Tz4DqS6fHrj/w6UMY/8wi\nsN9rSy0pfYNEPJlW6arpb9U/JfacOOeD3yR92EgtoCXgYLNZZMMwYAyje64cZAyl\nn8+gj6cYqep5umIMVCxPzUzghRv0R6YqZqgKjzydYT47MJefvTtEGxe4X9pTcCwW\ni+JyfYg7it83UOKMabxdVQY0gaoY4KseOoa4zNGsgSDLS3A8i92Y71hFRIBxMA4=\n=TCcX\n-----END PGP SIGNATURE-----\n", "payload": "tree 54f478e686227f316669078b0f9969ca744a874c\nparent 0d08bbc8c862783581ec61081af79b467ce2d98c\nparent 6667d785d879b7393093428acd6bf2c5a6c6c33b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643497457 +0100\ncommitter GitHub <noreply@github.com> 1643497457 +0100\n\nRollup merge of #93463 - dtolnay:_args, r=cjgillot\n\nRename _args -> args in format_args expansion\n\nAs observed in https://github.com/rust-lang/rust/pull/91359#discussion_r786058960, prior to that PR this variable was sometimes never used, such as in the case of:\n\n```rust\nprintln!(\"\");\n\n// used to expand to:\n::std::io::_print(\n    ::core::fmt::Arguments::new_v1(\n        &[\"\\n\"],\n        &match () {\n            _args => [],\n        },\n    ),\n);\n```\n\nso the leading underscore in `_args` was used to suppress an unused variable lint. However after #91359 the variable is always used when present, as the unused case would instead expand to:\n\n```rust\n::std::io::_print(::core::fmt::Arguments::new_v1(&[\"\\n\"], &[]));\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6d0cb052e7d06685a851b0776b63dfe5883c9c", "html_url": "https://github.com/rust-lang/rust/commit/9f6d0cb052e7d06685a851b0776b63dfe5883c9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f6d0cb052e7d06685a851b0776b63dfe5883c9c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d08bbc8c862783581ec61081af79b467ce2d98c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d08bbc8c862783581ec61081af79b467ce2d98c", "html_url": "https://github.com/rust-lang/rust/commit/0d08bbc8c862783581ec61081af79b467ce2d98c"}, {"sha": "6667d785d879b7393093428acd6bf2c5a6c6c33b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6667d785d879b7393093428acd6bf2c5a6c6c33b", "html_url": "https://github.com/rust-lang/rust/commit/6667d785d879b7393093428acd6bf2c5a6c6c33b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bdc92a2c096a4a2a7980d8f74e98440b3079a595", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f6d0cb052e7d06685a851b0776b63dfe5883c9c/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f6d0cb052e7d06685a851b0776b63dfe5883c9c/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=9f6d0cb052e7d06685a851b0776b63dfe5883c9c", "patch": "@@ -791,7 +791,7 @@ impl<'a, 'b> Context<'a, 'b> {\n         // Thus in the not nicely ordered case we emit the following instead:\n         //\n         //     match (&$arg0, &$arg1, \u2026) {\n-        //         _args => [ArgumentV1::new(_args.$i, \u2026), ArgumentV1::new(_args.$j, \u2026), \u2026]\n+        //         args => [ArgumentV1::new(args.$i, \u2026), ArgumentV1::new(args.$j, \u2026), \u2026]\n         //     }\n         //\n         // for the sequence of indices $i, $j, \u2026 governed by fmt_arg_index_and_ty.\n@@ -804,7 +804,7 @@ impl<'a, 'b> Context<'a, 'b> {\n                 self.ecx.expr_addr_of(expansion_span, P(e.take()))\n             } else {\n                 let def_site = self.ecx.with_def_site_ctxt(span);\n-                let args_tuple = self.ecx.expr_ident(def_site, Ident::new(sym::_args, def_site));\n+                let args_tuple = self.ecx.expr_ident(def_site, Ident::new(sym::args, def_site));\n                 let member = Ident::new(sym::integer(arg_index), def_site);\n                 self.ecx.expr(def_site, ast::ExprKind::Field(args_tuple, member))\n             };\n@@ -828,7 +828,7 @@ impl<'a, 'b> Context<'a, 'b> {\n                     .map(|e| self.ecx.expr_addr_of(e.span.with_ctxt(self.macsp.ctxt()), e))\n                     .collect();\n \n-                let pat = self.ecx.pat_ident(self.macsp, Ident::new(sym::_args, self.macsp));\n+                let pat = self.ecx.pat_ident(self.macsp, Ident::new(sym::args, self.macsp));\n                 let arm = self.ecx.arm(self.macsp, pat, args_array);\n                 let head = self.ecx.expr(self.macsp, ast::ExprKind::Tup(heads));\n                 self.ecx.expr_match(self.macsp, head, vec![arm])"}, {"sha": "757c430e7999c27dec4da9653418d0f339f32491", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f6d0cb052e7d06685a851b0776b63dfe5883c9c/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f6d0cb052e7d06685a851b0776b63dfe5883c9c/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=9f6d0cb052e7d06685a851b0776b63dfe5883c9c", "patch": "@@ -272,7 +272,6 @@ symbols! {\n         __H,\n         __S,\n         __try_var,\n-        _args,\n         _d,\n         _e,\n         _task_context,\n@@ -324,6 +323,7 @@ symbols! {\n         append_const_msg,\n         arbitrary_enum_discriminant,\n         arbitrary_self_types,\n+        args,\n         arith_offset,\n         arm,\n         arm_target_feature,"}]}