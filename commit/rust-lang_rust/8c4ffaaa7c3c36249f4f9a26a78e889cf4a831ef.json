{"sha": "8c4ffaaa7c3c36249f4f9a26a78e889cf4a831ef", "node_id": "C_kwDOAAsO6NoAKDhjNGZmYWFhN2MzYzM2MjQ5ZjRmOWEyNmE3OGU4ODljZjRhODMxZWY", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-02-10T19:39:52Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-02-14T15:57:22Z"}, "message": "Inline loose_check fn on call site", "tree": {"sha": "f319130bff6be1bafb56ab8597c2f4fc9422db49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f319130bff6be1bafb56ab8597c2f4fc9422db49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c4ffaaa7c3c36249f4f9a26a78e889cf4a831ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmIKe+IACgkQgTGiTgx5\n76/YmBAAuMPr5+0pTEst6gAtl1sOQsOgtpqtY6jzW6XrZurAMCE0KJiIIOFs1DtP\nzi4XLYY0cQuthQIy8XYCqAPK/uEARdRY4ag2Fugjjv1YhbE+zmC5FlBHnYAynXkx\nTu9WMLa60ywvMjUvBvwoEUMmE6MazCbkzjLcqjS7SUtoWFBZWEPLnnJU19MKNJ8C\nsucQTJgqVckm/wE52VvqZfWRmmUpTMYOdw1kEyRo3uRoikJm2kz+JD5s0b1/OSa+\nOsKLp7I0YurudUJ1laScMmipA3k2SV+MPZESsPgq/4UO4+fL+fqcxZTYyWPKeipn\nJ4mAAgVZ2cHuy77dNxqi9DJMH28koycZFITT9PizjB/vLqB8rvcrGjbwczLvDOD/\nlkwa6+urplnsY+9yGUWc5v/9gBih4dUC29a4wNHWz9p0NMyeaLftI1Wu7cxY69UB\nMMqmn5cNlkMY+xfnQXe6ng0zZT9UjeufpHoC0sYEbXXOCnnqvfJYKvHrZqoTbi16\nf3mFBPWTi0ESgp0ouPDqzLQWfXIeFPvcRGw5c3PIRNCeG8lYtANMfVRpfF8ibaUg\nnKXI/2uF0ip9qeFSMTF5xYPyGnkXzJ9NBOqaJopnwnXDSuzkU2pJuLkYkGVOGSgO\n/kJvzVdcCsudoe+kuRmwt+O4PEPDJSYglCNnIzcakLlaMn+YZhs=\n=yovQ\n-----END PGP SIGNATURE-----", "payload": "tree f319130bff6be1bafb56ab8597c2f4fc9422db49\nparent 45983fecff0d4bf66e80c1299697b591757a81c0\nauthor Santiago Pastorino <spastorino@gmail.com> 1644521992 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1644854242 -0300\n\nInline loose_check fn on call site\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c4ffaaa7c3c36249f4f9a26a78e889cf4a831ef", "html_url": "https://github.com/rust-lang/rust/commit/8c4ffaaa7c3c36249f4f9a26a78e889cf4a831ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c4ffaaa7c3c36249f4f9a26a78e889cf4a831ef/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45983fecff0d4bf66e80c1299697b591757a81c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/45983fecff0d4bf66e80c1299697b591757a81c0", "html_url": "https://github.com/rust-lang/rust/commit/45983fecff0d4bf66e80c1299697b591757a81c0"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "ed55da623cb202f70a57cf01d5d59f7bb44c7301", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8c4ffaaa7c3c36249f4f9a26a78e889cf4a831ef/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c4ffaaa7c3c36249f4f9a26a78e889cf4a831ef/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=8c4ffaaa7c3c36249f4f9a26a78e889cf4a831ef", "patch": "@@ -287,7 +287,7 @@ fn implicit_negative<'cx, 'tcx>(\n             predicate: p,\n         })\n         .chain(obligations)\n-        .find(|o| loose_check(selcx, o));\n+        .find(|o| !selcx.predicate_may_hold_fatal(o));\n \n     if let Some(failing_obligation) = opt_failing_obligation {\n         debug!(\"overlap: obligation unsatisfiable {:?}\", failing_obligation);\n@@ -363,16 +363,6 @@ fn negative_impl<'cx, 'tcx>(\n     })\n }\n \n-fn loose_check<'cx, 'tcx>(\n-    selcx: &mut SelectionContext<'cx, 'tcx>,\n-    o: &PredicateObligation<'tcx>,\n-) -> bool {\n-    // FIXME: the call to `selcx.predicate_may_hold_fatal` below should be ported\n-    // to the canonical trait query form, `infcx.predicate_may_hold`, once\n-    // the new system supports intercrate mode (which coherence needs).\n-    !selcx.predicate_may_hold_fatal(o)\n-}\n-\n fn negative_impl_exists<'cx, 'tcx>(\n     selcx: &SelectionContext<'cx, 'tcx>,\n     param_env: ty::ParamEnv<'tcx>,"}]}