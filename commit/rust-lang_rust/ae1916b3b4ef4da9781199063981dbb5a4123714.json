{"sha": "ae1916b3b4ef4da9781199063981dbb5a4123714", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMTkxNmIzYjRlZjRkYTk3ODExOTkwNjM5ODFkYmI1YTQxMjM3MTQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-15T12:40:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-15T12:40:03Z"}, "message": "Rollup merge of #79058 - dtolnay:likelymacro, r=Mark-Simulacrum\n\nMove likely/unlikely argument outside of invisible unsafe block\n\nThe previous `likely!`/`unlikely!` macros were unsound because it permits the caller's expr to contain arbitrary unsafe code.\n\n```rust\npub fn huh() -> bool {\n    likely!(std::ptr::read(&() as *const () as *const bool))\n}\n```\n\n**Before:** compiles cleanly.\n**After:**\n\n```console\nerror[E0133]: call to unsafe function is unsafe and requires unsafe function or block\n   |\n70 |     likely!(std::ptr::read(&() as *const () as *const bool))\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n   |\n   = note: consult the function's documentation for information on how to avoid undefined behavior\n```", "tree": {"sha": "980588a0a7fa8e7869072a99bf4db7a0bf8b8f3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/980588a0a7fa8e7869072a99bf4db7a0bf8b8f3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae1916b3b4ef4da9781199063981dbb5a4123714", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfsSGkCRBK7hj4Ov3rIwAAdHIIAHaOukJm8aVlZZxpfof8s1mo\n2yMqDcuwI7jUFenlwvd9J9L9UFQOZ8d/aDH3hUpIKKyPu66dBHGMGzChm7P1pGbG\ntvNWCw7wcoMLKO7Rb2S4FUAbQGZX9MfkYXKVMzO9I9SoT7dY2J1C9Tjk8gobDVMf\n4NbMUg7mn1plj5RAYQyBcLcXjPFUcBIhhzSfleseb2XdUG0kBPL5MtF4tOhQWgB3\naxDFQPzyos5lw4l6TtG17SASlKKQIaqdc7JwqNzthqPBqeUrgiv96LJOWHgbUIz9\n9QwB5VhC/zacBN6KjFavXt6tp4aBwC9S6vjY4hkmno3ZiMFuDzkvDpR7X4Sg+HA=\n=Cz3T\n-----END PGP SIGNATURE-----\n", "payload": "tree 980588a0a7fa8e7869072a99bf4db7a0bf8b8f3c\nparent bc9ef6cf72ba7f8f70dca18d50e1ab2492efa31a\nparent afb817054c7e95ef1cef879030062b67d5a2d5e3\nauthor Jonas Schievink <jonasschievink@gmail.com> 1605444003 +0100\ncommitter GitHub <noreply@github.com> 1605444003 +0100\n\nRollup merge of #79058 - dtolnay:likelymacro, r=Mark-Simulacrum\n\nMove likely/unlikely argument outside of invisible unsafe block\n\nThe previous `likely!`/`unlikely!` macros were unsound because it permits the caller's expr to contain arbitrary unsafe code.\n\n```rust\npub fn huh() -> bool {\n    likely!(std::ptr::read(&() as *const () as *const bool))\n}\n```\n\n**Before:** compiles cleanly.\n**After:**\n\n```console\nerror[E0133]: call to unsafe function is unsafe and requires unsafe function or block\n   |\n70 |     likely!(std::ptr::read(&() as *const () as *const bool))\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n   |\n   = note: consult the function's documentation for information on how to avoid undefined behavior\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae1916b3b4ef4da9781199063981dbb5a4123714", "html_url": "https://github.com/rust-lang/rust/commit/ae1916b3b4ef4da9781199063981dbb5a4123714", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae1916b3b4ef4da9781199063981dbb5a4123714/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc9ef6cf72ba7f8f70dca18d50e1ab2492efa31a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc9ef6cf72ba7f8f70dca18d50e1ab2492efa31a", "html_url": "https://github.com/rust-lang/rust/commit/bc9ef6cf72ba7f8f70dca18d50e1ab2492efa31a"}, {"sha": "afb817054c7e95ef1cef879030062b67d5a2d5e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/afb817054c7e95ef1cef879030062b67d5a2d5e3", "html_url": "https://github.com/rust-lang/rust/commit/afb817054c7e95ef1cef879030062b67d5a2d5e3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "322c7a71160cdcb9f46765860b7966be0b9f3e27", "filename": "compiler/rustc_data_structures/src/lib.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ae1916b3b4ef4da9781199063981dbb5a4123714/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae1916b3b4ef4da9781199063981dbb5a4123714/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs?ref=ae1916b3b4ef4da9781199063981dbb5a4123714", "patch": "@@ -47,19 +47,19 @@ pub fn cold_path<F: FnOnce() -> R, R>(f: F) -> R {\n #[macro_export]\n macro_rules! likely {\n     ($e:expr) => {\n-        #[allow(unused_unsafe)]\n-        {\n-            unsafe { std::intrinsics::likely($e) }\n+        match $e {\n+            #[allow(unused_unsafe)]\n+            e => unsafe { std::intrinsics::likely(e) },\n         }\n     };\n }\n \n #[macro_export]\n macro_rules! unlikely {\n     ($e:expr) => {\n-        #[allow(unused_unsafe)]\n-        {\n-            unsafe { std::intrinsics::unlikely($e) }\n+        match $e {\n+            #[allow(unused_unsafe)]\n+            e => unsafe { std::intrinsics::unlikely(e) },\n         }\n     };\n }"}]}