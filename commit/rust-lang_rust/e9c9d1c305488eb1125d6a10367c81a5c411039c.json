{"sha": "e9c9d1c305488eb1125d6a10367c81a5c411039c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YzlkMWMzMDU0ODhlYjExMjVkNmExMDM2N2M4MWE1YzQxMTAzOWM=", "commit": {"author": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-04-12T06:29:30Z"}, "committer": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-04-12T06:29:30Z"}, "message": "Add comment that field projectin also works with mutable fields", "tree": {"sha": "8e7abd939af9ffdf4f4263dd4c8d0be1617fc169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e7abd939af9ffdf4f4263dd4c8d0be1617fc169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9c9d1c305488eb1125d6a10367c81a5c411039c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c9d1c305488eb1125d6a10367c81a5c411039c", "html_url": "https://github.com/rust-lang/rust/commit/e9c9d1c305488eb1125d6a10367c81a5c411039c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9c9d1c305488eb1125d6a10367c81a5c411039c/comments", "author": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94a5c3b2b2ea51bbe079796f24912ba4d0311e95", "url": "https://api.github.com/repos/rust-lang/rust/commits/94a5c3b2b2ea51bbe079796f24912ba4d0311e95", "html_url": "https://github.com/rust-lang/rust/commit/94a5c3b2b2ea51bbe079796f24912ba4d0311e95"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "e1fe0044cc480c4ccfe5da947e577cfb0e89cd81", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e9c9d1c305488eb1125d6a10367c81a5c411039c/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c9d1c305488eb1125d6a10367c81a5c411039c/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=e9c9d1c305488eb1125d6a10367c81a5c411039c", "patch": "@@ -171,11 +171,12 @@\n //!\n //! # Projections and Structural Pinning\n //!\n-//! One interesting question arises when considering the interaction of pinning and\n-//! the fields of a struct. When can a struct have a \"pinning projection\", i.e.,\n-//! an operation with type `fn(Pin<&Struct>) -> Pin<&Field>`?\n-//! In a similar vein, when can a generic wrapper type (such as `Vec<T>`, `Box<T>`, or `RefCell<T>`)\n-//! have an operation with type `fn(Pin<&Wrapper<T>>) -> Pin<&T>`?\n+//! One interesting question arises when considering the interaction of pinning\n+//! and the fields of a struct. When can a struct have a \"pinning projection\",\n+//! i.e., an operation with type `fn(Pin<&Struct>) -> Pin<&Field>`?  In a\n+//! similar vein, when can a generic wrapper type (such as `Vec<T>`, `Box<T>`,\n+//! or `RefCell<T>`) have an operation with type `fn(Pin<&Wrapper<T>>) ->\n+//! Pin<&T>` (or similarly `fn(Pin<&mut Wrapper<T>>) -> Pin<&mut T>`)?\n //!\n //! Having a pinning projection for some field means that pinning is \"structural\":\n //! when the wrapper is pinned, the field must be considered pinned, too."}]}