{"sha": "f9f1effd011b906903891c09f1cb6b2a42f73e95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZjFlZmZkMDExYjkwNjkwMzg5MWMwOWYxY2I2YjJhNDJmNzNlOTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-03T14:41:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-03T14:41:30Z"}, "message": "Merge #2160\n\n2160: Set `deprecated` field on `CompletionItem`s r=matklad a=martskins\n\nThis PR aims to address #2042 by setting the deprecated field for completion items.\r\n\r\nThe setting the tags field for LSP 3.15 part still needs fixing, but that one is blocked due to lsp-types not being up to date with 3.15 yet.\n\nCo-authored-by: Martin Asquino <martin.asquino@gmail.com>", "tree": {"sha": "9f1587de5feffce6f480947fd525b993de6843b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f1587de5feffce6f480947fd525b993de6843b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9f1effd011b906903891c09f1cb6b2a42f73e95", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdvucaCRBK7hj4Ov3rIwAAdHIIAI3yORoLQcLsAjoj2bbx6Igd\nB76K3wcB6BHf6R96ECV8HW2TF1MKeQKJy+miHqL0VvaqYz5NPNXqtpZqmbg4klWv\ncOPeTZGJ9wDbcBWI1zllW2FB+fH9P6C/TUwGD+SSb8ybZO5tyXhshrA1IluWE2D9\nPNgzakpTYqtqMfo2gEsWMWHyNNcNPTkIy2S0EHdW9c5tvVwQo3B5CpYIKHP35+PC\nzELkE2bRsr5DftZ1ZWgcBZfEmK1AI4T04OxqdQvE5ZS5Uwo8yD7qi+xOscV+dmol\npy0bscj9SHnrWw8xqGC3UITjpzhBWVfXzQO9dJqiR/Gcicpq20MfU45LBmDyoOo=\n=WIf2\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f1587de5feffce6f480947fd525b993de6843b2\nparent 5d96ade59484927e7e590b64e2846ab409bbe63b\nparent ccf8817d181ab9430a00c38d96b481a07af701bb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1572792090 +0000\ncommitter GitHub <noreply@github.com> 1572792090 +0000\n\nMerge #2160\n\n2160: Set `deprecated` field on `CompletionItem`s r=matklad a=martskins\n\nThis PR aims to address #2042 by setting the deprecated field for completion items.\r\n\r\nThe setting the tags field for LSP 3.15 part still needs fixing, but that one is blocked due to lsp-types not being up to date with 3.15 yet.\n\nCo-authored-by: Martin Asquino <martin.asquino@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f1effd011b906903891c09f1cb6b2a42f73e95", "html_url": "https://github.com/rust-lang/rust/commit/f9f1effd011b906903891c09f1cb6b2a42f73e95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9f1effd011b906903891c09f1cb6b2a42f73e95/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d96ade59484927e7e590b64e2846ab409bbe63b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d96ade59484927e7e590b64e2846ab409bbe63b", "html_url": "https://github.com/rust-lang/rust/commit/5d96ade59484927e7e590b64e2846ab409bbe63b"}, {"sha": "ccf8817d181ab9430a00c38d96b481a07af701bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccf8817d181ab9430a00c38d96b481a07af701bb", "html_url": "https://github.com/rust-lang/rust/commit/ccf8817d181ab9430a00c38d96b481a07af701bb"}], "stats": {"total": 114, "additions": 113, "deletions": 1}, "files": [{"sha": "0295b8101373f200632aef7fbb2c61cbde159e5d", "filename": "crates/ra_ide_api/src/completion/complete_record_literal.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f9f1effd011b906903891c09f1cb6b2a42f73e95/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f1effd011b906903891c09f1cb6b2a42f73e95/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs?ref=f9f1effd011b906903891c09f1cb6b2a42f73e95", "patch": "@@ -31,6 +31,34 @@ mod tests {\n         do_completion(code, CompletionKind::Reference)\n     }\n \n+    #[test]\n+    fn test_record_literal_deprecated_field() {\n+        let completions = complete(\n+            r\"\n+            struct A {\n+                #[deprecated]\n+                the_field: u32,\n+            }\n+            fn foo() {\n+               A { the<|> }\n+            }\n+            \",\n+        );\n+        assert_debug_snapshot!(completions, @r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"the_field\",\n+       \u22ee        source_range: [142; 145),\n+       \u22ee        delete: [142; 145),\n+       \u22ee        insert: \"the_field\",\n+       \u22ee        kind: Field,\n+       \u22ee        detail: \"u32\",\n+       \u22ee        deprecated: true,\n+       \u22ee    },\n+       \u22ee]\n+        \"###);\n+    }\n+\n     #[test]\n     fn test_record_literal_field() {\n         let completions = complete("}, {"sha": "93f336370915a11db85079b13285655faacbbefa", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f9f1effd011b906903891c09f1cb6b2a42f73e95/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f1effd011b906903891c09f1cb6b2a42f73e95/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=f9f1effd011b906903891c09f1cb6b2a42f73e95", "patch": "@@ -44,6 +44,9 @@ pub struct CompletionItem {\n     /// Additional info to show in the UI pop up.\n     detail: Option<String>,\n     documentation: Option<Documentation>,\n+\n+    /// Whether this item is marked as deprecated\n+    deprecated: bool,\n }\n \n // We use custom debug for CompletionItem to make `insta`'s diffs more readable.\n@@ -70,6 +73,9 @@ impl fmt::Debug for CompletionItem {\n         if let Some(documentation) = self.documentation() {\n             s.field(\"documentation\", &documentation);\n         }\n+        if self.deprecated {\n+            s.field(\"deprecated\", &true);\n+        }\n         s.finish()\n     }\n }\n@@ -132,6 +138,7 @@ impl CompletionItem {\n             lookup: None,\n             kind: None,\n             text_edit: None,\n+            deprecated: None,\n         }\n     }\n     /// What user sees in pop-up in the UI.\n@@ -166,6 +173,10 @@ impl CompletionItem {\n     pub fn kind(&self) -> Option<CompletionItemKind> {\n         self.kind\n     }\n+\n+    pub fn deprecated(&self) -> bool {\n+        self.deprecated\n+    }\n }\n \n /// A helper to make `CompletionItem`s.\n@@ -181,6 +192,7 @@ pub(crate) struct Builder {\n     lookup: Option<String>,\n     kind: Option<CompletionItemKind>,\n     text_edit: Option<TextEdit>,\n+    deprecated: Option<bool>,\n }\n \n impl Builder {\n@@ -208,6 +220,7 @@ impl Builder {\n             lookup: self.lookup,\n             kind: self.kind,\n             completion_kind: self.completion_kind,\n+            deprecated: self.deprecated.unwrap_or(false),\n         }\n     }\n     pub(crate) fn lookup_by(mut self, lookup: impl Into<String>) -> Builder {\n@@ -254,6 +267,10 @@ impl Builder {\n         self.documentation = docs.map(Into::into);\n         self\n     }\n+    pub(crate) fn set_deprecated(mut self, deprecated: bool) -> Builder {\n+        self.deprecated = Some(deprecated);\n+        self\n+    }\n }\n \n impl<'a> Into<CompletionItem> for Builder {"}, {"sha": "cb55d18751b39ba7ba55b8a38cef310e398b877f", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 67, "deletions": 1, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/f9f1effd011b906903891c09f1cb6b2a42f73e95/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f1effd011b906903891c09f1cb6b2a42f73e95/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=f9f1effd011b906903891c09f1cb6b2a42f73e95", "patch": "@@ -2,7 +2,7 @@\n \n use hir::{db::HirDatabase, Docs, HasSource, HirDisplay, ScopeDef, Ty, TypeWalk};\n use join_to_string::join;\n-use ra_syntax::ast::NameOwner;\n+use ra_syntax::ast::{AttrsOwner, NameOwner};\n use test_utils::tested_by;\n \n use crate::completion::{\n@@ -18,6 +18,11 @@ impl Completions {\n         field: hir::StructField,\n         substs: &hir::Substs,\n     ) {\n+        let ast_node = field.source(ctx.db).ast;\n+        let is_deprecated = match ast_node {\n+            hir::FieldSource::Named(m) => is_deprecated(m),\n+            hir::FieldSource::Pos(m) => is_deprecated(m),\n+        };\n         CompletionItem::new(\n             CompletionKind::Reference,\n             ctx.source_range(),\n@@ -26,6 +31,7 @@ impl Completions {\n         .kind(CompletionItemKind::Field)\n         .detail(field.ty(ctx.db).subst(substs).display(ctx.db).to_string())\n         .set_documentation(field.docs(ctx.db))\n+        .set_deprecated(is_deprecated)\n         .add_to(self);\n     }\n \n@@ -179,6 +185,7 @@ impl Completions {\n             CompletionItem::new(CompletionKind::Reference, ctx.source_range(), &macro_declaration)\n                 .kind(CompletionItemKind::Macro)\n                 .set_documentation(docs.clone())\n+                .set_deprecated(is_deprecated(ast_node))\n                 .detail(detail);\n \n         builder = if ctx.use_item_syntax.is_some() {\n@@ -211,6 +218,7 @@ impl Completions {\n                     CompletionItemKind::Function\n                 })\n                 .set_documentation(func.docs(ctx.db))\n+                .set_deprecated(is_deprecated(ast_node))\n                 .detail(detail);\n \n         // Add `<>` for generic types\n@@ -242,6 +250,7 @@ impl Completions {\n         CompletionItem::new(CompletionKind::Reference, ctx.source_range(), name.text().to_string())\n             .kind(CompletionItemKind::Const)\n             .set_documentation(constant.docs(ctx.db))\n+            .set_deprecated(is_deprecated(ast_node))\n             .detail(detail)\n             .add_to(self);\n     }\n@@ -257,11 +266,13 @@ impl Completions {\n         CompletionItem::new(CompletionKind::Reference, ctx.source_range(), name.text().to_string())\n             .kind(CompletionItemKind::TypeAlias)\n             .set_documentation(type_alias.docs(ctx.db))\n+            .set_deprecated(is_deprecated(type_def))\n             .detail(detail)\n             .add_to(self);\n     }\n \n     pub(crate) fn add_enum_variant(&mut self, ctx: &CompletionContext, variant: hir::EnumVariant) {\n+        let is_deprecated = is_deprecated(variant.source(ctx.db).ast);\n         let name = match variant.name(ctx.db) {\n             Some(it) => it,\n             None => return,\n@@ -274,11 +285,16 @@ impl Completions {\n         CompletionItem::new(CompletionKind::Reference, ctx.source_range(), name.to_string())\n             .kind(CompletionItemKind::EnumVariant)\n             .set_documentation(variant.docs(ctx.db))\n+            .set_deprecated(is_deprecated)\n             .detail(detail)\n             .add_to(self);\n     }\n }\n \n+fn is_deprecated(node: impl AttrsOwner) -> bool {\n+    node.attrs().filter_map(|x| x.simple_name()).any(|x| x == \"deprecated\")\n+}\n+\n fn has_non_default_type_params(def: hir::GenericDef, db: &db::RootDatabase) -> bool {\n     let subst = db.generic_defaults(def);\n     subst.iter().any(|ty| ty == &Ty::Unknown)\n@@ -295,6 +311,56 @@ mod tests {\n         do_completion(code, CompletionKind::Reference)\n     }\n \n+    #[test]\n+    fn sets_deprecated_flag_in_completion_items() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r#\"\n+                #[deprecated]\n+                fn something_deprecated() {}\n+\n+                #[deprecated(since = \"1.0.0\")]\n+                fn something_else_deprecated() {}\n+\n+                fn main() { som<|> }\n+                \"#,\n+            ),\n+            @r###\"\n+            [\n+                CompletionItem {\n+                    label: \"main()\",\n+                    source_range: [203; 206),\n+                    delete: [203; 206),\n+                    insert: \"main()$0\",\n+                    kind: Function,\n+                    lookup: \"main\",\n+                    detail: \"fn main()\",\n+                },\n+                CompletionItem {\n+                    label: \"something_deprecated()\",\n+                    source_range: [203; 206),\n+                    delete: [203; 206),\n+                    insert: \"something_deprecated()$0\",\n+                    kind: Function,\n+                    lookup: \"something_deprecated\",\n+                    detail: \"fn something_deprecated()\",\n+                    deprecated: true,\n+                },\n+                CompletionItem {\n+                    label: \"something_else_deprecated()\",\n+                    source_range: [203; 206),\n+                    delete: [203; 206),\n+                    insert: \"something_else_deprecated()$0\",\n+                    kind: Function,\n+                    lookup: \"something_else_deprecated\",\n+                    detail: \"fn something_else_deprecated()\",\n+                    deprecated: true,\n+                },\n+            ]\n+            \"###\n+        );\n+    }\n+\n     #[test]\n     fn inserts_parens_for_function_calls() {\n         covers!(inserts_parens_for_function_calls);"}, {"sha": "94ed619faeca131300f02ccbe8d2fa3934738cfd", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f9f1effd011b906903891c09f1cb6b2a42f73e95/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f1effd011b906903891c09f1cb6b2a42f73e95/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=f9f1effd011b906903891c09f1cb6b2a42f73e95", "patch": "@@ -127,6 +127,7 @@ impl ConvWith<(&LineIndex, LineEndings)> for CompletionItem {\n             text_edit: Some(text_edit),\n             additional_text_edits: Some(additional_text_edits),\n             documentation: self.documentation().map(|it| it.conv()),\n+            deprecated: Some(self.deprecated()),\n             ..Default::default()\n         };\n         res.insert_text_format = Some(match self.insert_text_format() {"}]}