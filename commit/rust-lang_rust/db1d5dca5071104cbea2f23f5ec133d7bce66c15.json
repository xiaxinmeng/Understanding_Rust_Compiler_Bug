{"sha": "db1d5dca5071104cbea2f23f5ec133d7bce66c15", "node_id": "C_kwDOAAsO6NoAKGRiMWQ1ZGNhNTA3MTEwNGNiZWEyZjIzZjVlYzEzM2Q3YmNlNjZjMTU", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2022-04-07T15:24:10Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2022-04-07T15:24:10Z"}, "message": "Fix internal::INVALID_PATHS lint", "tree": {"sha": "1bcac1ba68677dfec5190855bd2db0bd9180580a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bcac1ba68677dfec5190855bd2db0bd9180580a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db1d5dca5071104cbea2f23f5ec133d7bce66c15", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmJPAhoACgkQHKDfKvWd\naKVNKQ//ZQR1Zlx85dHuzYBiCPFBXurMCrFjY0xOIrmAzwtbiQN65aIwUIJ9ZlbL\nhLBvaZe+5D9u2PTMcXsbfizuiCop0H6CcGU/AgMR/YIrk82HYZEtM57gvjv9IyLJ\nD8gdnPcv0GHnd8K7sfFfyxEjoN6462exKRimcfcOOegZ6HPeOAMZglVHy/2BtEml\nu/4z8Kou0sCg2+8d+yF0PRRQNQTgnGPmewe7rMF8vfWWUyng3Pk/ornRd1PbAyjp\nM3t1SG538YbjnE+yEtQg6q8VQG0JdU+Oy/FqZ9Ap4/3DJ/MKwHyIH/JyS6SOHe0i\nD2/KOip8VR4XZ2Gzf1T7sos6Kd6YpfJKQFJbr/E43lPOtpLhwGhbvePZnjGyiWtg\nLQEFx3qLXnrCQaiSQXaCDRrGh5tfUsgp0dheSzgTIL2nRS62htTBE5qwwIsem3ad\nQodADuXKKpnXpHR3Y3DORFaP4KRlMm1nURUDOhFCHoZs3KWAlfZ3MDw+TUpcBSO5\nKog6YXR6jENU7Kd7iRYFPP/Kw1KSDXJKow0kAwYl7C4LiPgCN/aZoDQc3EEQqfy2\nQs/wnNLNfBAQq+o1QzoRwDnxnFdwdXVkaosIuPOHOjhAvlO0lQcjRStYW0fJ/XgP\nCiCSAyHUeSDOLG6iXzJjxyWdz1zYVagRz3DXz9G38QGdBDN7cm0=\n=j3Ws\n-----END PGP SIGNATURE-----", "payload": "tree 1bcac1ba68677dfec5190855bd2db0bd9180580a\nparent 669fddab370cff36fb476a520326785d33db65be\nauthor flip1995 <philipp.krones@embecosm.com> 1649345050 +0100\ncommitter flip1995 <philipp.krones@embecosm.com> 1649345050 +0100\n\nFix internal::INVALID_PATHS lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db1d5dca5071104cbea2f23f5ec133d7bce66c15", "html_url": "https://github.com/rust-lang/rust/commit/db1d5dca5071104cbea2f23f5ec133d7bce66c15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db1d5dca5071104cbea2f23f5ec133d7bce66c15/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "669fddab370cff36fb476a520326785d33db65be", "url": "https://api.github.com/repos/rust-lang/rust/commits/669fddab370cff36fb476a520326785d33db65be", "html_url": "https://github.com/rust-lang/rust/commit/669fddab370cff36fb476a520326785d33db65be"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "25d74b8c49939da8a643e60a2da1e4b264440d91", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/db1d5dca5071104cbea2f23f5ec133d7bce66c15/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1d5dca5071104cbea2f23f5ec133d7bce66c15/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=db1d5dca5071104cbea2f23f5ec133d7bce66c15", "patch": "@@ -25,7 +25,7 @@ use rustc_hir::{\n use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n use rustc_middle::hir::nested_filter;\n use rustc_middle::mir::interpret::ConstValue;\n-use rustc_middle::ty::{self, subst::GenericArgKind};\n+use rustc_middle::ty::{self, fast_reject::SimplifiedTypeGen, subst::GenericArgKind, FloatTy};\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Spanned;\n@@ -934,7 +934,16 @@ pub fn check_path(cx: &LateContext<'_>, path: &[&str]) -> bool {\n     // implementations of native types. Check lang items.\n     let path_syms: Vec<_> = path.iter().map(|p| Symbol::intern(p)).collect();\n     let lang_items = cx.tcx.lang_items();\n-    for item_def_id in lang_items.items().iter().flatten() {\n+    // This list isn't complete, but good enough for our current list of paths.\n+    let incoherent_impls = [\n+        SimplifiedTypeGen::FloatSimplifiedType(FloatTy::F32),\n+        SimplifiedTypeGen::FloatSimplifiedType(FloatTy::F64),\n+        SimplifiedTypeGen::SliceSimplifiedType,\n+        SimplifiedTypeGen::StrSimplifiedType,\n+    ]\n+    .iter()\n+    .flat_map(|&ty| cx.tcx.incoherent_impls(ty));\n+    for item_def_id in lang_items.items().iter().flatten().chain(incoherent_impls) {\n         let lang_item_path = cx.get_def_path(*item_def_id);\n         if path_syms.starts_with(&lang_item_path) {\n             if let [item] = &path_syms[lang_item_path.len()..] {"}]}