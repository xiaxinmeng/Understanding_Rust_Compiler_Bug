{"sha": "61dd0075360dbb65e4673a1d156f7983602abda8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZGQwMDc1MzYwZGJiNjVlNDY3M2ExZDE1NmY3OTgzNjAyYWJkYTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-16T17:16:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-16T17:16:07Z"}, "message": "Auto merge of #6042 - euclio:println-empty, r=flip1995\n\n{print,write}-with-newline: do not suggest empty format string\n\nchangelog: do not suggest empty format strings in `print-with-newline` and `write-with-newline`", "tree": {"sha": "5930e8f1d9ce60ac77827b958e2bda562a37b7ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5930e8f1d9ce60ac77827b958e2bda562a37b7ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61dd0075360dbb65e4673a1d156f7983602abda8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61dd0075360dbb65e4673a1d156f7983602abda8", "html_url": "https://github.com/rust-lang/rust/commit/61dd0075360dbb65e4673a1d156f7983602abda8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61dd0075360dbb65e4673a1d156f7983602abda8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7bff507cd50d79eabf6818f469275f3c440c330", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7bff507cd50d79eabf6818f469275f3c440c330", "html_url": "https://github.com/rust-lang/rust/commit/e7bff507cd50d79eabf6818f469275f3c440c330"}, {"sha": "0261e341fd435f0b42954510fb436cb0b289cdac", "url": "https://api.github.com/repos/rust-lang/rust/commits/0261e341fd435f0b42954510fb436cb0b289cdac", "html_url": "https://github.com/rust-lang/rust/commit/0261e341fd435f0b42954510fb436cb0b289cdac"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "fac63bcb9937838cb2020409275ec7f889d44db5", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61dd0075360dbb65e4673a1d156f7983602abda8/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61dd0075360dbb65e4673a1d156f7983602abda8/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=61dd0075360dbb65e4673a1d156f7983602abda8", "patch": "@@ -322,11 +322,15 @@ impl EarlyLintPass for Write {\n }\n \n /// Given a format string that ends in a newline and its span, calculates the span of the\n-/// newline.\n+/// newline, or the format string itself if the format string consists solely of a newline.\n fn newline_span(fmtstr: &StrLit) -> Span {\n     let sp = fmtstr.span;\n     let contents = &fmtstr.symbol.as_str();\n \n+    if *contents == r\"\\n\" {\n+        return sp;\n+    }\n+\n     let newline_sp_hi = sp.hi()\n         - match fmtstr.style {\n             StrStyle::Cooked => BytePos(1),"}, {"sha": "a43a1fc4f5241c33a5ebe6416196793ad2b057cf", "filename": "tests/ui/print_with_newline.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61dd0075360dbb65e4673a1d156f7983602abda8/tests%2Fui%2Fprint_with_newline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61dd0075360dbb65e4673a1d156f7983602abda8/tests%2Fui%2Fprint_with_newline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.rs?ref=61dd0075360dbb65e4673a1d156f7983602abda8", "patch": "@@ -9,6 +9,7 @@ fn main() {\n     print!(\"Hello {}\\n\", \"world\");\n     print!(\"Hello {} {}\\n\", \"world\", \"#2\");\n     print!(\"{}\\n\", 1265);\n+    print!(\"\\n\");\n \n     // these are all fine\n     print!(\"\");"}, {"sha": "54b3ad75b31e83bb9a893ee910257a29de946fcd", "filename": "tests/ui/print_with_newline.stderr", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/61dd0075360dbb65e4673a1d156f7983602abda8/tests%2Fui%2Fprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61dd0075360dbb65e4673a1d156f7983602abda8/tests%2Fui%2Fprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.stderr?ref=61dd0075360dbb65e4673a1d156f7983602abda8", "patch": "@@ -44,7 +44,18 @@ LL |     println!(\"{}\", 1265);\n    |     ^^^^^^^    --\n \n error: using `print!()` with a format string that ends in a single newline\n-  --> $DIR/print_with_newline.rs:30:5\n+  --> $DIR/print_with_newline.rs:12:5\n+   |\n+LL |     print!(\"/n\");\n+   |     ^^^^^^^^^^^^\n+   |\n+help: use `println!` instead\n+   |\n+LL |     println!();\n+   |     ^^^^^^^ --\n+\n+error: using `print!()` with a format string that ends in a single newline\n+  --> $DIR/print_with_newline.rs:31:5\n    |\n LL |     print!(\"//n\"); // should fail\n    |     ^^^^^^^^^^^^^^\n@@ -55,7 +66,7 @@ LL |     println!(\"/\"); // should fail\n    |     ^^^^^^^    --\n \n error: using `print!()` with a format string that ends in a single newline\n-  --> $DIR/print_with_newline.rs:37:5\n+  --> $DIR/print_with_newline.rs:38:5\n    |\n LL | /     print!(\n LL | |         \"\n@@ -70,7 +81,7 @@ LL |         \"\"\n    |\n \n error: using `print!()` with a format string that ends in a single newline\n-  --> $DIR/print_with_newline.rs:41:5\n+  --> $DIR/print_with_newline.rs:42:5\n    |\n LL | /     print!(\n LL | |         r\"\n@@ -85,7 +96,7 @@ LL |         r\"\"\n    |\n \n error: using `print!()` with a format string that ends in a single newline\n-  --> $DIR/print_with_newline.rs:49:5\n+  --> $DIR/print_with_newline.rs:50:5\n    |\n LL |     print!(\"/r/n\"); //~ ERROR\n    |     ^^^^^^^^^^^^^^^\n@@ -96,7 +107,7 @@ LL |     println!(\"/r\"); //~ ERROR\n    |     ^^^^^^^     --\n \n error: using `print!()` with a format string that ends in a single newline\n-  --> $DIR/print_with_newline.rs:50:5\n+  --> $DIR/print_with_newline.rs:51:5\n    |\n LL |     print!(\"foo/rbar/n\") // ~ ERROR\n    |     ^^^^^^^^^^^^^^^^^^^^\n@@ -106,5 +117,5 @@ help: use `println!` instead\n LL |     println!(\"foo/rbar\") // ~ ERROR\n    |     ^^^^^^^          --\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 10 previous errors\n "}, {"sha": "1c1b1b58402e830393a9f2e57a43918d414f6f85", "filename": "tests/ui/write_with_newline.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61dd0075360dbb65e4673a1d156f7983602abda8/tests%2Fui%2Fwrite_with_newline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61dd0075360dbb65e4673a1d156f7983602abda8/tests%2Fui%2Fwrite_with_newline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_with_newline.rs?ref=61dd0075360dbb65e4673a1d156f7983602abda8", "patch": "@@ -14,6 +14,7 @@ fn main() {\n     write!(&mut v, \"Hello {}\\n\", \"world\");\n     write!(&mut v, \"Hello {} {}\\n\", \"world\", \"#2\");\n     write!(&mut v, \"{}\\n\", 1265);\n+    write!(&mut v, \"\\n\");\n \n     // These should be fine\n     write!(&mut v, \"\");"}, {"sha": "a14e86122ee5d0b54c64d4d0aa48b7a0e0389da6", "filename": "tests/ui/write_with_newline.stderr", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/61dd0075360dbb65e4673a1d156f7983602abda8/tests%2Fui%2Fwrite_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61dd0075360dbb65e4673a1d156f7983602abda8/tests%2Fui%2Fwrite_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_with_newline.stderr?ref=61dd0075360dbb65e4673a1d156f7983602abda8", "patch": "@@ -44,7 +44,18 @@ LL |     writeln!(&mut v, \"{}\", 1265);\n    |     ^^^^^^^            --\n \n error: using `write!()` with a format string that ends in a single newline\n-  --> $DIR/write_with_newline.rs:35:5\n+  --> $DIR/write_with_newline.rs:17:5\n+   |\n+LL |     write!(&mut v, \"/n\");\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: use `writeln!()` instead\n+   |\n+LL |     writeln!(&mut v, );\n+   |     ^^^^^^^         --\n+\n+error: using `write!()` with a format string that ends in a single newline\n+  --> $DIR/write_with_newline.rs:36:5\n    |\n LL |     write!(&mut v, \"//n\"); // should fail\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n@@ -55,7 +66,7 @@ LL |     writeln!(&mut v, \"/\"); // should fail\n    |     ^^^^^^^            --\n \n error: using `write!()` with a format string that ends in a single newline\n-  --> $DIR/write_with_newline.rs:42:5\n+  --> $DIR/write_with_newline.rs:43:5\n    |\n LL | /     write!(\n LL | |         &mut v,\n@@ -72,7 +83,7 @@ LL |         \"\"\n    |\n \n error: using `write!()` with a format string that ends in a single newline\n-  --> $DIR/write_with_newline.rs:47:5\n+  --> $DIR/write_with_newline.rs:48:5\n    |\n LL | /     write!(\n LL | |         &mut v,\n@@ -89,7 +100,7 @@ LL |         r\"\"\n    |\n \n error: using `write!()` with a format string that ends in a single newline\n-  --> $DIR/write_with_newline.rs:56:5\n+  --> $DIR/write_with_newline.rs:57:5\n    |\n LL |     write!(&mut v, \"/r/n\"); //~ ERROR\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -100,7 +111,7 @@ LL |     writeln!(&mut v, \"/r\"); //~ ERROR\n    |     ^^^^^^^             --\n \n error: using `write!()` with a format string that ends in a single newline\n-  --> $DIR/write_with_newline.rs:57:5\n+  --> $DIR/write_with_newline.rs:58:5\n    |\n LL |     write!(&mut v, \"foo/rbar/n\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -110,5 +121,5 @@ help: use `writeln!()` instead\n LL |     writeln!(&mut v, \"foo/rbar\");\n    |     ^^^^^^^                  --\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 10 previous errors\n "}]}