{"sha": "ec560e2c6d0e7ab17763208a8313d919602d6dd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNTYwZTJjNmQwZTdhYjE3NzYzMjA4YTgzMTNkOTE5NjAyZDZkZDQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-06-04T22:05:23Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-07-02T16:15:19Z"}, "message": "remove deref impl and add an index impl\n\nThe constraint set is going to be more than just a set of outlives\nconstraints.", "tree": {"sha": "ed05e95cefd6a65e2e25129627dc3d7c6b2f2685", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed05e95cefd6a65e2e25129627dc3d7c6b2f2685"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec560e2c6d0e7ab17763208a8313d919602d6dd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec560e2c6d0e7ab17763208a8313d919602d6dd4", "html_url": "https://github.com/rust-lang/rust/commit/ec560e2c6d0e7ab17763208a8313d919602d6dd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec560e2c6d0e7ab17763208a8313d919602d6dd4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f673b24ba25a3ead2da990de9d308f5e15b7f710", "url": "https://api.github.com/repos/rust-lang/rust/commits/f673b24ba25a3ead2da990de9d308f5e15b7f710", "html_url": "https://github.com/rust-lang/rust/commit/f673b24ba25a3ead2da990de9d308f5e15b7f710"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "727e573f1a1f0df8863db2ef615903cfb18c92a5", "filename": "src/librustc_mir/borrow_check/nll/constraints/mod.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraints%2Fmod.rs?ref=ec560e2c6d0e7ab17763208a8313d919602d6dd4", "patch": "@@ -1,11 +1,10 @@\n+use crate::borrow_check::nll::type_check::Locations;\n use rustc::mir::ConstraintCategory;\n use rustc::ty::RegionVid;\n use rustc_data_structures::graph::scc::Sccs;\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n-use crate::borrow_check::nll::type_check::Locations;\n-\n use std::fmt;\n-use std::ops::Deref;\n+use std::ops::Index;\n \n crate mod graph;\n \n@@ -58,13 +57,17 @@ impl ConstraintSet {\n         let region_graph = &constraint_graph.region_graph(self, static_region);\n         Sccs::new(region_graph)\n     }\n+\n+    crate fn outlives(&self) -> &IndexVec<OutlivesConstraintIndex, OutlivesConstraint> {\n+        &self.outlives\n+    }\n }\n \n-impl Deref for ConstraintSet {\n-    type Target = IndexVec<OutlivesConstraintIndex, OutlivesConstraint>;\n+impl Index<OutlivesConstraintIndex> for ConstraintSet {\n+    type Output = OutlivesConstraint;\n \n-    fn deref(&self) -> &Self::Target {\n-        &self.outlives\n+    fn index(&self, i: OutlivesConstraintIndex) -> &Self::Output {\n+        &self.outlives[i]\n     }\n }\n "}, {"sha": "d4f6ce8801e63689639e3949c20cadca1a1d619b", "filename": "src/librustc_mir/borrow_check/nll/region_infer/dump_mir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fdump_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fdump_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fdump_mir.rs?ref=ec560e2c6d0e7ab17763208a8313d919602d6dd4", "patch": "@@ -71,7 +71,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             }\n         }\n \n-        let mut constraints: Vec<_> = self.constraints.iter().collect();\n+        let mut constraints: Vec<_> = self.constraints.outlives().iter().collect();\n         constraints.sort();\n         for constraint in &constraints {\n             let OutlivesConstraint {"}, {"sha": "fdf2af9f44ebcae25a6825d8753f5611a01f0ac1", "filename": "src/librustc_mir/borrow_check/nll/region_infer/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fgraphviz.rs?ref=ec560e2c6d0e7ab17763208a8313d919602d6dd4", "patch": "@@ -63,7 +63,7 @@ impl<'a, 'this, 'tcx> dot::GraphWalk<'this> for RawConstraints<'a, 'tcx> {\n         vids.into()\n     }\n     fn edges(&'this self) -> dot::Edges<'this, OutlivesConstraint> {\n-        (&self.regioncx.constraints.raw[..]).into()\n+        (&self.regioncx.constraints.outlives().raw[..]).into()\n     }\n \n     // Render `a: b` as `a -> b`, indicating the flow"}, {"sha": "5a56e8ba18683ff10621742fe0feb0b16a0b8e47", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=ec560e2c6d0e7ab17763208a8313d919602d6dd4", "patch": "@@ -472,7 +472,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         debug!(\"propagate_constraints()\");\n \n         debug!(\"propagate_constraints: constraints={:#?}\", {\n-            let mut constraints: Vec<_> = self.constraints.iter().collect();\n+            let mut constraints: Vec<_> = self.constraints.outlives().iter().collect();\n             constraints.sort();\n             constraints\n                 .into_iter()"}, {"sha": "08553e6e81fcaad0890303ce65a2c1730a59f026", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec560e2c6d0e7ab17763208a8313d919602d6dd4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=ec560e2c6d0e7ab17763208a8313d919602d6dd4", "patch": "@@ -215,7 +215,7 @@ fn translate_outlives_facts(cx: &mut BorrowCheckContext<'_, '_>) {\n         let location_table = cx.location_table;\n         facts\n             .outlives\n-            .extend(cx.constraints.outlives_constraints.iter().flat_map(\n+            .extend(cx.constraints.outlives_constraints.outlives().iter().flat_map(\n                 |constraint: &OutlivesConstraint| {\n                     if let Some(from_location) = constraint.locations.from_location() {\n                         Either::Left(iter::once((\n@@ -582,7 +582,7 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n         );\n \n         let locations = location.to_locations();\n-        for constraint in constraints.iter() {\n+        for constraint in constraints.outlives().iter() {\n             let mut constraint = *constraint;\n             constraint.locations = locations;\n             if let ConstraintCategory::Return"}]}