{"sha": "d931b031b48d20759e876a52ea0ec304343c2dc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MzFiMDMxYjQ4ZDIwNzU5ZTg3NmE1MmVhMGVjMzA0MzQzYzJkYzk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-02T07:15:24Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-07T08:12:21Z"}, "message": "rename FalseEdges -> FalseEdge", "tree": {"sha": "a64018de79d568fb18e2eb5c8519ff1564295c73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a64018de79d568fb18e2eb5c8519ff1564295c73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d931b031b48d20759e876a52ea0ec304343c2dc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d931b031b48d20759e876a52ea0ec304343c2dc9", "html_url": "https://github.com/rust-lang/rust/commit/d931b031b48d20759e876a52ea0ec304343c2dc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d931b031b48d20759e876a52ea0ec304343c2dc9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "450abe80f193ccefbfcd48214d70520f2d507f0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/450abe80f193ccefbfcd48214d70520f2d507f0e", "html_url": "https://github.com/rust-lang/rust/commit/450abe80f193ccefbfcd48214d70520f2d507f0e"}], "stats": {"total": 132, "additions": 66, "deletions": 66}, "files": [{"sha": "61692280d2a775e3ef4b4a271a9a9c33eaf936af", "filename": "src/librustc_codegen_ssa/mir/analyze.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -357,7 +357,7 @@ pub fn cleanup_kinds(mir: &mir::Body<'_>) -> IndexVec<mir::BasicBlock, CleanupKi\n                 | TerminatorKind::Unreachable\n                 | TerminatorKind::SwitchInt { .. }\n                 | TerminatorKind::Yield { .. }\n-                | TerminatorKind::FalseEdges { .. }\n+                | TerminatorKind::FalseEdge { .. }\n                 | TerminatorKind::FalseUnwind { .. }\n                 | TerminatorKind::InlineAsm { .. } => { /* nothing to do */ }\n                 TerminatorKind::Call { cleanup: unwind, .. }"}, {"sha": "30a84c4e47b03a183088afe5d4b90f1cf7c9e418", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -1030,7 +1030,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n             mir::TerminatorKind::GeneratorDrop | mir::TerminatorKind::Yield { .. } => {\n                 bug!(\"generator ops in codegen\")\n             }\n-            mir::TerminatorKind::FalseEdges { .. } | mir::TerminatorKind::FalseUnwind { .. } => {\n+            mir::TerminatorKind::FalseEdge { .. } | mir::TerminatorKind::FalseUnwind { .. } => {\n                 bug!(\"borrowck false edges in codegen\")\n             }\n "}, {"sha": "98973f1b6fb7d889270d3a42f72795fbe04e7d44", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -1160,7 +1160,7 @@ pub enum TerminatorKind<'tcx> {\n \n     /// A block where control flow only ever takes one real path, but borrowck\n     /// needs to be more conservative.\n-    FalseEdges {\n+    FalseEdge {\n         /// The target normal control flow will take.\n         real_target: BasicBlock,\n         /// A block control flow could conceptually jump to, but won't in\n@@ -1314,7 +1314,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n                 Some(t).into_iter().chain(slice::from_ref(u))\n             }\n             SwitchInt { ref targets, .. } => None.into_iter().chain(&targets[..]),\n-            FalseEdges { ref real_target, ref imaginary_target } => {\n+            FalseEdge { ref real_target, ref imaginary_target } => {\n                 Some(real_target).into_iter().chain(slice::from_ref(imaginary_target))\n             }\n         }\n@@ -1348,7 +1348,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n                 Some(t).into_iter().chain(slice::from_mut(u))\n             }\n             SwitchInt { ref mut targets, .. } => None.into_iter().chain(&mut targets[..]),\n-            FalseEdges { ref mut real_target, ref mut imaginary_target } => {\n+            FalseEdge { ref mut real_target, ref mut imaginary_target } => {\n                 Some(real_target).into_iter().chain(slice::from_mut(imaginary_target))\n             }\n         }\n@@ -1364,7 +1364,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n             | TerminatorKind::GeneratorDrop\n             | TerminatorKind::Yield { .. }\n             | TerminatorKind::SwitchInt { .. }\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::InlineAsm { .. } => None,\n             TerminatorKind::Call { cleanup: ref unwind, .. }\n             | TerminatorKind::Assert { cleanup: ref unwind, .. }\n@@ -1384,7 +1384,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n             | TerminatorKind::GeneratorDrop\n             | TerminatorKind::Yield { .. }\n             | TerminatorKind::SwitchInt { .. }\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::InlineAsm { .. } => None,\n             TerminatorKind::Call { cleanup: ref mut unwind, .. }\n             | TerminatorKind::Assert { cleanup: ref mut unwind, .. }\n@@ -1598,7 +1598,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n                 msg.fmt_assert_args(fmt)?;\n                 write!(fmt, \")\")\n             }\n-            FalseEdges { .. } => write!(fmt, \"falseEdges\"),\n+            FalseEdge { .. } => write!(fmt, \"falseEdge\"),\n             FalseUnwind { .. } => write!(fmt, \"falseUnwind\"),\n             InlineAsm { template, ref operands, options, .. } => {\n                 write!(fmt, \"asm!(\\\"{}\\\"\", InlineAsmTemplatePiece::to_string(template))?;\n@@ -1683,7 +1683,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n             }\n             Assert { cleanup: None, .. } => vec![\"\".into()],\n             Assert { .. } => vec![\"success\".into(), \"unwind\".into()],\n-            FalseEdges { .. } => vec![\"real\".into(), \"imaginary\".into()],\n+            FalseEdge { .. } => vec![\"real\".into(), \"imaginary\".into()],\n             FalseUnwind { unwind: Some(_), .. } => vec![\"real\".into(), \"cleanup\".into()],\n             FalseUnwind { unwind: None, .. } => vec![\"real\".into()],\n             InlineAsm { destination: Some(_), .. } => vec![\"\".into()],"}, {"sha": "97c6d6bf5f40b5f3c0845502c977790446bc49eb", "filename": "src/librustc_middle/mir/type_foldable.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_middle%2Fmir%2Ftype_foldable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_middle%2Fmir%2Ftype_foldable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Ftype_foldable.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -74,8 +74,8 @@ impl<'tcx> TypeFoldable<'tcx> for Terminator<'tcx> {\n             Abort => Abort,\n             Return => Return,\n             Unreachable => Unreachable,\n-            FalseEdges { real_target, imaginary_target } => {\n-                FalseEdges { real_target, imaginary_target }\n+            FalseEdge { real_target, imaginary_target } => {\n+                FalseEdge { real_target, imaginary_target }\n             }\n             FalseUnwind { real_target, unwind } => FalseUnwind { real_target, unwind },\n             InlineAsm { template, ref operands, options, line_spans, destination } => InlineAsm {\n@@ -134,7 +134,7 @@ impl<'tcx> TypeFoldable<'tcx> for Terminator<'tcx> {\n             | Return\n             | GeneratorDrop\n             | Unreachable\n-            | FalseEdges { .. }\n+            | FalseEdge { .. }\n             | FalseUnwind { .. } => false,\n         }\n     }"}, {"sha": "9f886cbc9fb5baf5b2e98d114a2cf1eb2261d9a4", "filename": "src/librustc_middle/mir/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_middle%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_middle%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fvisit.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -429,7 +429,7 @@ macro_rules! make_mir_visitor {\n                     TerminatorKind::Abort |\n                     TerminatorKind::GeneratorDrop |\n                     TerminatorKind::Unreachable |\n-                    TerminatorKind::FalseEdges { .. } |\n+                    TerminatorKind::FalseEdge { .. } |\n                     TerminatorKind::FalseUnwind { .. } => {\n                     }\n "}, {"sha": "77d16458383d1885539d72fe5e3303b5a9ee1481", "filename": "src/librustc_mir/borrow_check/invalidation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -215,7 +215,7 @@ impl<'cx, 'tcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx> {\n             TerminatorKind::Goto { target: _ }\n             | TerminatorKind::Abort\n             | TerminatorKind::Unreachable\n-            | TerminatorKind::FalseEdges { real_target: _, imaginary_target: _ }\n+            | TerminatorKind::FalseEdge { real_target: _, imaginary_target: _ }\n             | TerminatorKind::FalseUnwind { real_target: _, unwind: _ } => {\n                 // no data used, thus irrelevant to borrowck\n             }"}, {"sha": "736cda83ca5121847da49c0a8520e42a065e7c7a", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -770,7 +770,7 @@ impl<'cx, 'tcx> dataflow::ResultsVisitor<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tc\n             | TerminatorKind::Resume\n             | TerminatorKind::Return\n             | TerminatorKind::GeneratorDrop\n-            | TerminatorKind::FalseEdges { real_target: _, imaginary_target: _ }\n+            | TerminatorKind::FalseEdge { real_target: _, imaginary_target: _ }\n             | TerminatorKind::FalseUnwind { real_target: _, unwind: _ } => {\n                 // no data used, thus irrelevant to borrowck\n             }\n@@ -814,7 +814,7 @@ impl<'cx, 'tcx> dataflow::ResultsVisitor<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tc\n             | TerminatorKind::Call { .. }\n             | TerminatorKind::Drop { .. }\n             | TerminatorKind::DropAndReplace { .. }\n-            | TerminatorKind::FalseEdges { real_target: _, imaginary_target: _ }\n+            | TerminatorKind::FalseEdge { real_target: _, imaginary_target: _ }\n             | TerminatorKind::FalseUnwind { real_target: _, unwind: _ }\n             | TerminatorKind::Goto { .. }\n             | TerminatorKind::SwitchInt { .. }"}, {"sha": "e2255d170f9c96ac0d8137380713c0e1b18a1f2f", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -1547,7 +1547,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n             | TerminatorKind::GeneratorDrop\n             | TerminatorKind::Unreachable\n             | TerminatorKind::Drop { .. }\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::InlineAsm { .. } => {\n                 // no checks needed for these\n@@ -1843,7 +1843,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                     self.assert_iscleanup(body, block_data, cleanup, true);\n                 }\n             }\n-            TerminatorKind::FalseEdges { real_target, imaginary_target } => {\n+            TerminatorKind::FalseEdge { real_target, imaginary_target } => {\n                 self.assert_iscleanup(body, block_data, real_target, is_cleanup);\n                 self.assert_iscleanup(body, block_data, imaginary_target, is_cleanup);\n             }"}, {"sha": "da4ad9b6168ed8e3353f6b535ae891e747ac52e4", "filename": "src/librustc_mir/dataflow/framework/direction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fdirection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fdirection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fdirection.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -453,7 +453,7 @@ impl Direction for Forward {\n                 propagate(target, exit_state);\n             }\n \n-            FalseEdges { real_target, imaginary_target } => {\n+            FalseEdge { real_target, imaginary_target } => {\n                 propagate(real_target, exit_state);\n                 propagate(imaginary_target, exit_state);\n             }"}, {"sha": "608237087732e90577a321ea315b93b820925d44", "filename": "src/librustc_mir/dataflow/impls/borrowed_locals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrowed_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrowed_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrowed_locals.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -203,7 +203,7 @@ where\n             TerminatorKind::Abort\n             | TerminatorKind::Assert { .. }\n             | TerminatorKind::Call { .. }\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::GeneratorDrop\n             | TerminatorKind::Goto { .. }"}, {"sha": "c0ab356756acfa6f217730ccf6ea68b8559a8b73", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -365,7 +365,7 @@ impl<'b, 'a, 'tcx> Gatherer<'b, 'a, 'tcx> {\n             | TerminatorKind::Resume\n             | TerminatorKind::Abort\n             | TerminatorKind::GeneratorDrop\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::Unreachable => {}\n "}, {"sha": "4a63884be4c4d6964234b280e87fcc6842dd5264", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -129,7 +129,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n             // These should never occur for MIR we actually run.\n             DropAndReplace { .. }\n-            | FalseEdges { .. }\n+            | FalseEdge { .. }\n             | FalseUnwind { .. }\n             | Yield { .. }\n             | GeneratorDrop => span_bug!("}, {"sha": "f3d3666b99f9f0467a6decd2324ede09a26628b0", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -649,7 +649,7 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n             | mir::TerminatorKind::Assert { .. } => {}\n             mir::TerminatorKind::GeneratorDrop\n             | mir::TerminatorKind::Yield { .. }\n-            | mir::TerminatorKind::FalseEdges { .. }\n+            | mir::TerminatorKind::FalseEdge { .. }\n             | mir::TerminatorKind::FalseUnwind { .. } => bug!(),\n         }\n "}, {"sha": "ab87d70da7da3f678b2cf441557d7377e3cff5d7", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -609,7 +609,7 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n             // instead.\n             TerminatorKind::Abort\n             | TerminatorKind::Assert { .. }\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::GeneratorDrop\n             | TerminatorKind::Goto { .. }"}, {"sha": "7dbb2ebad8b996b0c43b28978368fe60c1b93fa8", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -76,7 +76,7 @@ impl<'a, 'tcx> Visitor<'tcx> for UnsafetyChecker<'a, 'tcx> {\n             | TerminatorKind::Abort\n             | TerminatorKind::Return\n             | TerminatorKind::Unreachable\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. } => {\n                 // safe (at least as emitted during MIR construction)\n             }"}, {"sha": "0ff60cbd55d3ca790433e18e3139c03fd45882cf", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -1013,7 +1013,7 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n             | TerminatorKind::DropAndReplace { .. }\n             | TerminatorKind::Yield { .. }\n             | TerminatorKind::GeneratorDrop\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::InlineAsm { .. } => {}\n             // Every argument in our function calls can be const propagated."}, {"sha": "c7b2316bfbc5ef854850aeae6518dc7588bca23e", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -971,7 +971,7 @@ fn can_unwind<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>) -> bool {\n             | TerminatorKind::Return\n             | TerminatorKind::Unreachable\n             | TerminatorKind::GeneratorDrop\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::InlineAsm { .. } => {}\n "}, {"sha": "47aa4fbf60c034cefff77cc49963c4b4803b8df2", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -791,7 +791,7 @@ impl<'a, 'tcx> MutVisitor<'tcx> for Integrator<'a, 'tcx> {\n             }\n             TerminatorKind::Abort => {}\n             TerminatorKind::Unreachable => {}\n-            TerminatorKind::FalseEdges { ref mut real_target, ref mut imaginary_target } => {\n+            TerminatorKind::FalseEdge { ref mut real_target, ref mut imaginary_target } => {\n                 *real_target = self.update_target(*real_target);\n                 *imaginary_target = self.update_target(*imaginary_target);\n             }"}, {"sha": "5c78307d882fcaa8b962452f1b989c7347730eba", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -342,7 +342,7 @@ fn check_terminator(\n ) -> McfResult {\n     let span = terminator.source_info.span;\n     match &terminator.kind {\n-        TerminatorKind::FalseEdges { .. }\n+        TerminatorKind::FalseEdge { .. }\n         | TerminatorKind::FalseUnwind { .. }\n         | TerminatorKind::Goto { .. }\n         | TerminatorKind::Return"}, {"sha": "bf63bf24447a4634450f8b31d5e6fe7ee3bd9701", "filename": "src/librustc_mir/transform/remove_noop_landing_pads.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -65,7 +65,7 @@ impl RemoveNoopLandingPads {\n             TerminatorKind::Goto { .. }\n             | TerminatorKind::Resume\n             | TerminatorKind::SwitchInt { .. }\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. } => {\n                 terminator.successors().all(|&succ| nop_landing_pads.contains(succ))\n             }"}, {"sha": "4c30a0946bccfcefadd8a7e96411647606c583bc", "filename": "src/librustc_mir/transform/simplify_branches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fsimplify_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fsimplify_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify_branches.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -53,7 +53,7 @@ impl<'tcx> MirPass<'tcx> for SimplifyBranches {\n                 } if (c.literal.try_eval_bool(tcx, param_env) == Some(true)) == expected => {\n                     TerminatorKind::Goto { target }\n                 }\n-                TerminatorKind::FalseEdges { real_target, .. } => {\n+                TerminatorKind::FalseEdge { real_target, .. } => {\n                     TerminatorKind::Goto { target: real_target }\n                 }\n                 TerminatorKind::FalseUnwind { real_target, .. } => {"}, {"sha": "1433d39abfbba93ddb5204e446d01dd76b97bce0", "filename": "src/librustc_mir/transform/validate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -159,7 +159,7 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                     self.check_bb(location, *drop);\n                 }\n             }\n-            TerminatorKind::FalseEdges { real_target, imaginary_target } => {\n+            TerminatorKind::FalseEdge { real_target, imaginary_target } => {\n                 self.check_bb(location, *real_target);\n                 self.check_bb(location, *imaginary_target);\n             }"}, {"sha": "7d89a93129b1bb8b325dafba255e82e8840a0928", "filename": "src/librustc_mir_build/build/matches/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Futil.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -85,7 +85,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 self.cfg.terminate(\n                     from_block,\n                     source_info,\n-                    TerminatorKind::FalseEdges { real_target, imaginary_target: target },\n+                    TerminatorKind::FalseEdge { real_target, imaginary_target: target },\n                 );\n             }\n             _ => self.cfg.goto(from_block, source_info, real_target),"}, {"sha": "ac5d128a1baa26ded9d12d616534f7bd4416afbb", "filename": "src/librustc_mir_build/lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir_build%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Flibrustc_mir_build%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Flints.rs?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -128,7 +128,7 @@ impl<'mir, 'tcx> TriColorVisitor<&'mir Body<'tcx>> for Search<'mir, 'tcx> {\n             | TerminatorKind::Call { .. }\n             | TerminatorKind::Drop { .. }\n             | TerminatorKind::DropAndReplace { .. }\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::Goto { .. }\n             | TerminatorKind::SwitchInt { .. } => ControlFlow::Continue,\n@@ -153,7 +153,7 @@ impl<'mir, 'tcx> TriColorVisitor<&'mir Body<'tcx>> for Search<'mir, 'tcx> {\n             TerminatorKind::Call { ref func, .. } => self.is_recursive_call(func),\n \n             TerminatorKind::FalseUnwind { unwind: Some(imaginary_target), .. }\n-            | TerminatorKind::FalseEdges { imaginary_target, .. } => imaginary_target == target,\n+            | TerminatorKind::FalseEdge { imaginary_target, .. } => imaginary_target == target,\n \n             _ => false,\n         }"}, {"sha": "3c1c02da42ff8d9cd885b9e12ef497c7892fc73c", "filename": "src/test/mir-opt/exponential-or/rustc.match_tuple.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fexponential-or%2Frustc.match_tuple.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fexponential-or%2Frustc.match_tuple.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fexponential-or%2Frustc.match_tuple.SimplifyCfg-initial.after.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -87,7 +87,7 @@ fn match_tuple(_1: (u32, bool, std::option::Option<i32>, u32)) -> u32 {\n     }\n \n     bb8: {\n-        falseEdges -> [real: bb9, imaginary: bb1]; // scope 0 at $DIR/exponential-or.rs:8:9: 8:79\n+        falseEdge -> [real: bb9, imaginary: bb1]; // scope 0 at $DIR/exponential-or.rs:8:9: 8:79\n     }\n \n     bb9: {"}, {"sha": "7b58dc1f624a594cd2d2e5aa5013d3b2e11231e1", "filename": "src/test/mir-opt/issue-38669/rustc.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fissue-38669%2Frustc.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fissue-38669%2Frustc.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-38669%2Frustc.main.SimplifyCfg-initial.after.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -41,7 +41,7 @@ fn main() -> () {\n     }\n \n     bb4: {\n-        falseEdges -> [real: bb6, imaginary: bb5]; // scope 1 at $DIR/issue-38669.rs:7:9: 9:10\n+        falseEdge -> [real: bb6, imaginary: bb5]; // scope 1 at $DIR/issue-38669.rs:7:9: 9:10\n     }\n \n     bb5: {"}, {"sha": "7299a683a9f0b3ba00acbcff491a974a8ad5924e", "filename": "src/test/mir-opt/issue-49232/rustc.main.mir_map.0.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fissue-49232%2Frustc.main.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fissue-49232%2Frustc.main.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-49232%2Frustc.main.mir_map.0.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -43,7 +43,7 @@ fn main() -> () {\n     }\n \n     bb5: {\n-        falseEdges -> [real: bb7, imaginary: bb6]; // scope 0 at $DIR/issue-49232.rs:9:17: 9:22\n+        falseEdge -> [real: bb7, imaginary: bb6]; // scope 0 at $DIR/issue-49232.rs:9:17: 9:22\n     }\n \n     bb6: {"}, {"sha": "7046ebb793466de1503dd8398ebc0e2a1736b09c", "filename": "src/test/mir-opt/loop_test/rustc.main.SimplifyCfg-qualify-consts.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Floop_test%2Frustc.main.SimplifyCfg-qualify-consts.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Floop_test%2Frustc.main.SimplifyCfg-qualify-consts.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Floop_test%2Frustc.main.SimplifyCfg-qualify-consts.after.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -31,7 +31,7 @@ fn main() -> () {\n     }\n \n     bb2: {\n-        falseEdges -> [real: bb4, imaginary: bb3]; // scope 0 at $DIR/loop_test.rs:10:5: 12:6\n+        falseEdge -> [real: bb4, imaginary: bb3]; // scope 0 at $DIR/loop_test.rs:10:5: 12:6\n     }\n \n     bb3: {"}, {"sha": "1f6b2c982fee0fb5231f8824f663003999fb1180", "filename": "src/test/mir-opt/match-arm-scopes/rustc.complicated_match.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.SimplifyCfg-initial.after.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -39,23 +39,23 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb2: {\n-        falseEdges -> [real: bb9, imaginary: bb4]; // scope 0 at $DIR/match-arm-scopes.rs:16:9: 16:22\n+        falseEdge -> [real: bb9, imaginary: bb4]; // scope 0 at $DIR/match-arm-scopes.rs:16:9: 16:22\n     }\n \n     bb3: {\n         switchInt((_2.1: bool)) -> [false: bb4, otherwise: bb5]; // scope 0 at $DIR/match-arm-scopes.rs:16:29: 16:34\n     }\n \n     bb4: {\n-        falseEdges -> [real: bb18, imaginary: bb6]; // scope 0 at $DIR/match-arm-scopes.rs:16:25: 16:38\n+        falseEdge -> [real: bb18, imaginary: bb6]; // scope 0 at $DIR/match-arm-scopes.rs:16:25: 16:38\n     }\n \n     bb5: {\n         switchInt((_2.0: bool)) -> [false: bb7, otherwise: bb6]; // scope 0 at $DIR/match-arm-scopes.rs:17:10: 17:14\n     }\n \n     bb6: {\n-        falseEdges -> [real: bb26, imaginary: bb7]; // scope 0 at $DIR/match-arm-scopes.rs:17:9: 17:21\n+        falseEdge -> [real: bb26, imaginary: bb7]; // scope 0 at $DIR/match-arm-scopes.rs:17:9: 17:21\n     }\n \n     bb7: {\n@@ -92,7 +92,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb10: {\n-        falseEdges -> [real: bb12, imaginary: bb11]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+        falseEdge -> [real: bb12, imaginary: bb11]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb11: {\n@@ -145,7 +145,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n         StorageDead(_9);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n         StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n         StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        falseEdges -> [real: bb3, imaginary: bb4]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+        falseEdge -> [real: bb3, imaginary: bb4]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb18: {\n@@ -163,7 +163,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n     }\n \n     bb19: {\n-        falseEdges -> [real: bb21, imaginary: bb20]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+        falseEdge -> [real: bb21, imaginary: bb20]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb20: {\n@@ -204,7 +204,7 @@ fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n         StorageDead(_12);                // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n         StorageDead(_8);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n         StorageDead(_6);                 // scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n-        falseEdges -> [real: bb5, imaginary: bb6]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+        falseEdge -> [real: bb5, imaginary: bb6]; // scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb24: {"}, {"sha": "3e1dec697b76f4ecea869b57a560b2a1941e0dad", "filename": "src/test/mir-opt/match_false_edges/rustc.full_tested_match.PromoteTemps.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match.PromoteTemps.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match.PromoteTemps.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match.PromoteTemps.after.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -60,11 +60,11 @@ fn full_tested_match() -> () {\n     }\n \n     bb3: {\n-        falseEdges -> [real: bb6, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:16:9: 16:16\n+        falseEdge -> [real: bb6, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:16:9: 16:16\n     }\n \n     bb4: {\n-        falseEdges -> [real: bb10, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:17:9: 17:16\n+        falseEdge -> [real: bb10, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:17:9: 17:16\n     }\n \n     bb5: {"}, {"sha": "4e6dc6e13ff629467e00f863443dbd43687772bd", "filename": "src/test/mir-opt/match_false_edges/rustc.full_tested_match2.PromoteTemps.before.mir", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match2.PromoteTemps.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match2.PromoteTemps.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.full_tested_match2.PromoteTemps.before.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -42,11 +42,11 @@ fn full_tested_match2() -> () {\n     }\n \n     bb2: {\n-        falseEdges -> [real: bb10, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:28:9: 28:13\n+        falseEdge -> [real: bb10, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:28:9: 28:13\n     }\n \n     bb3: {\n-        falseEdges -> [real: bb6, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:27:9: 27:16\n+        falseEdge -> [real: bb6, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:27:9: 27:16\n     }\n \n     bb4: {\n@@ -112,7 +112,7 @@ fn full_tested_match2() -> () {\n     bb9: {\n         StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:27:37: 27:38\n         StorageDead(_6);                 // scope 0 at $DIR/match_false_edges.rs:27:37: 27:38\n-        falseEdges -> [real: bb4, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:27:20: 27:27\n+        falseEdge -> [real: bb4, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:27:20: 27:27\n     }\n \n     bb10: {"}, {"sha": "b54058ca73f6f4d5bb38394e673ee6727825380f", "filename": "src/test/mir-opt/match_false_edges/rustc.main.PromoteTemps.before.mir", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.main.PromoteTemps.before.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.main.PromoteTemps.before.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges%2Frustc.main.PromoteTemps.before.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -53,11 +53,11 @@ fn main() -> () {\n     }\n \n     bb2: {\n-        falseEdges -> [real: bb10, imaginary: bb5]; // scope 0 at $DIR/match_false_edges.rs:37:9: 37:11\n+        falseEdge -> [real: bb10, imaginary: bb5]; // scope 0 at $DIR/match_false_edges.rs:37:9: 37:11\n     }\n \n     bb3: {\n-        falseEdges -> [real: bb6, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:36:9: 36:17\n+        falseEdge -> [real: bb6, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:36:9: 36:17\n     }\n \n     bb4: {\n@@ -75,7 +75,7 @@ fn main() -> () {\n     }\n \n     bb5: {\n-        falseEdges -> [real: bb11, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:38:9: 38:16\n+        falseEdge -> [real: bb11, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:38:9: 38:16\n     }\n \n     bb6: {\n@@ -117,7 +117,7 @@ fn main() -> () {\n     bb9: {\n         StorageDead(_8);                 // scope 0 at $DIR/match_false_edges.rs:36:33: 36:34\n         StorageDead(_7);                 // scope 0 at $DIR/match_false_edges.rs:36:33: 36:34\n-        falseEdges -> [real: bb2, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:36:21: 36:28\n+        falseEdge -> [real: bb2, imaginary: bb2]; // scope 0 at $DIR/match_false_edges.rs:36:21: 36:28\n     }\n \n     bb10: {\n@@ -176,7 +176,7 @@ fn main() -> () {\n     bb14: {\n         StorageDead(_12);                // scope 0 at $DIR/match_false_edges.rs:38:34: 38:35\n         StorageDead(_11);                // scope 0 at $DIR/match_false_edges.rs:38:34: 38:35\n-        falseEdges -> [real: bb4, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:38:20: 38:29\n+        falseEdge -> [real: bb4, imaginary: bb4]; // scope 0 at $DIR/match_false_edges.rs:38:20: 38:29\n     }\n \n     bb15: {"}, {"sha": "5996496406a9f8584ca6eaee623001d1fda86fc2", "filename": "src/test/mir-opt/match_test/rustc.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch_test%2Frustc.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fmatch_test%2Frustc.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_test%2Frustc.main.SimplifyCfg-initial.after.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -61,7 +61,7 @@ fn main() -> () {\n     }\n \n     bb2: {\n-        falseEdges -> [real: bb9, imaginary: bb6]; // scope 2 at $DIR/match_test.rs:13:9: 13:14\n+        falseEdge -> [real: bb9, imaginary: bb6]; // scope 2 at $DIR/match_test.rs:13:9: 13:14\n     }\n \n     bb3: {\n@@ -98,15 +98,15 @@ fn main() -> () {\n     }\n \n     bb6: {\n-        falseEdges -> [real: bb12, imaginary: bb8]; // scope 2 at $DIR/match_test.rs:14:9: 14:16\n+        falseEdge -> [real: bb12, imaginary: bb8]; // scope 2 at $DIR/match_test.rs:14:9: 14:16\n     }\n \n     bb7: {\n         switchInt(_1) -> [-1i32: bb8, otherwise: bb3]; // scope 2 at $DIR/match_test.rs:15:9: 15:11\n     }\n \n     bb8: {\n-        falseEdges -> [real: bb13, imaginary: bb3]; // scope 2 at $DIR/match_test.rs:15:9: 15:11\n+        falseEdge -> [real: bb13, imaginary: bb3]; // scope 2 at $DIR/match_test.rs:15:9: 15:11\n     }\n \n     bb9: {\n@@ -131,7 +131,7 @@ fn main() -> () {\n \n     bb11: {\n         StorageDead(_9);                 // scope 2 at $DIR/match_test.rs:13:24: 13:25\n-        falseEdges -> [real: bb3, imaginary: bb6]; // scope 2 at $DIR/match_test.rs:13:18: 13:19\n+        falseEdge -> [real: bb3, imaginary: bb6]; // scope 2 at $DIR/match_test.rs:13:18: 13:19\n     }\n \n     bb12: {"}, {"sha": "e3f113fea285140937976d3d49bc7e56d7ee0c8f", "filename": "src/test/mir-opt/nll/region-subtyping-basic/32bit/rustc.main.nll.0.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F32bit%2Frustc.main.nll.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F32bit%2Frustc.main.nll.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F32bit%2Frustc.main.nll.0.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -102,7 +102,7 @@ fn main() -> () {\n     }\n \n     bb3: {\n-        falseEdges -> [real: bb5, imaginary: bb4]; // bb3[0]: scope 3 at $DIR/region-subtyping-basic.rs:20:5: 24:6\n+        falseEdge -> [real: bb5, imaginary: bb4]; // bb3[0]: scope 3 at $DIR/region-subtyping-basic.rs:20:5: 24:6\n     }\n \n     bb4: {"}, {"sha": "a69952ff07f34990079cad845b9004f00785e740", "filename": "src/test/mir-opt/nll/region-subtyping-basic/64bit/rustc.main.nll.0.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F64bit%2Frustc.main.nll.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F64bit%2Frustc.main.nll.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic%2F64bit%2Frustc.main.nll.0.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -102,7 +102,7 @@ fn main() -> () {\n     }\n \n     bb3: {\n-        falseEdges -> [real: bb5, imaginary: bb4]; // bb3[0]: scope 3 at $DIR/region-subtyping-basic.rs:20:5: 24:6\n+        falseEdge -> [real: bb5, imaginary: bb4]; // bb3[0]: scope 3 at $DIR/region-subtyping-basic.rs:20:5: 24:6\n     }\n \n     bb4: {"}, {"sha": "cc2738b5e50a36b00c79f9483f3f5c8dd27d77ef", "filename": "src/test/mir-opt/simple-match/32bit/rustc.match_bool.mir_map.0.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fsimple-match%2F32bit%2Frustc.match_bool.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fsimple-match%2F32bit%2Frustc.match_bool.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimple-match%2F32bit%2Frustc.match_bool.mir_map.0.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -14,7 +14,7 @@ fn match_bool(_1: bool) -> usize {\n     }\n \n     bb2: {\n-        falseEdges -> [real: bb4, imaginary: bb3]; // scope 0 at $DIR/simple-match.rs:7:9: 7:13\n+        falseEdge -> [real: bb4, imaginary: bb3]; // scope 0 at $DIR/simple-match.rs:7:9: 7:13\n     }\n \n     bb3: {"}, {"sha": "309041abef9be180e04cb7613b0405abb39d4c94", "filename": "src/test/mir-opt/simple-match/64bit/rustc.match_bool.mir_map.0.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fsimple-match%2F64bit%2Frustc.match_bool.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fsimple-match%2F64bit%2Frustc.match_bool.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimple-match%2F64bit%2Frustc.match_bool.mir_map.0.mir?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -14,7 +14,7 @@ fn match_bool(_1: bool) -> usize {\n     }\n \n     bb2: {\n-        falseEdges -> [real: bb4, imaginary: bb3]; // scope 0 at $DIR/simple-match.rs:7:9: 7:13\n+        falseEdge -> [real: bb4, imaginary: bb3]; // scope 0 at $DIR/simple-match.rs:7:9: 7:13\n     }\n \n     bb3: {"}, {"sha": "1ba05b1cb3881e9240533bfa35b709528f8368db", "filename": "src/test/mir-opt/simplify_cfg/rustc.main.SimplifyCfg-initial.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fsimplify_cfg%2Frustc.main.SimplifyCfg-initial.diff", "raw_url": "https://github.com/rust-lang/rust/raw/d931b031b48d20759e876a52ea0ec304343c2dc9/src%2Ftest%2Fmir-opt%2Fsimplify_cfg%2Frustc.main.SimplifyCfg-initial.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_cfg%2Frustc.main.SimplifyCfg-initial.diff?ref=d931b031b48d20759e876a52ea0ec304343c2dc9", "patch": "@@ -45,9 +45,9 @@\n       }\n   \n -     bb6: {\n--         falseEdges -> [real: bb8, imaginary: bb7]; // scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n+-         falseEdge -> [real: bb8, imaginary: bb7]; // scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n +     bb4: {\n-+         falseEdges -> [real: bb6, imaginary: bb5]; // scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n++         falseEdge -> [real: bb6, imaginary: bb5]; // scope 0 at $DIR/simplify_cfg.rs:7:9: 9:10\n       }\n   \n -     bb7: {"}]}