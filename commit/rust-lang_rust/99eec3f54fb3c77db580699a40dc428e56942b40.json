{"sha": "99eec3f54fb3c77db580699a40dc428e56942b40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZWVjM2Y1NGZiM2M3N2RiNTgwNjk5YTQwZGM0MjhlNTY5NDJiNDA=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2020-01-08T04:59:58Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2020-01-08T05:18:00Z"}, "message": "Fix `redundant_clone`", "tree": {"sha": "7c6133d6543a055e497f14d5e88532b0072f6723", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c6133d6543a055e497f14d5e88532b0072f6723"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99eec3f54fb3c77db580699a40dc428e56942b40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99eec3f54fb3c77db580699a40dc428e56942b40", "html_url": "https://github.com/rust-lang/rust/commit/99eec3f54fb3c77db580699a40dc428e56942b40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99eec3f54fb3c77db580699a40dc428e56942b40/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c09206899656f5730f8007dbc86385122c34a9ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/c09206899656f5730f8007dbc86385122c34a9ca", "html_url": "https://github.com/rust-lang/rust/commit/c09206899656f5730f8007dbc86385122c34a9ca"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "2b475efbd7632f95cb8d01f66a7fa6908b549082", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/99eec3f54fb3c77db580699a40dc428e56942b40/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99eec3f54fb3c77db580699a40dc428e56942b40/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=99eec3f54fb3c77db580699a40dc428e56942b40", "patch": "@@ -307,6 +307,13 @@ fn find_stmt_assigns_to<'tcx>(\n         (true, mir::Rvalue::Ref(_, _, place)) | (false, mir::Rvalue::Use(mir::Operand::Copy(place))) => {\n             base_local_and_movability(cx, mir, place)\n         },\n+        (false, mir::Rvalue::Ref(_, _, place)) => {\n+            if let [mir::ProjectionElem::Deref] = place.as_ref().projection {\n+                base_local_and_movability(cx, mir, place)\n+            } else {\n+                None\n+            }\n+        },\n         _ => None,\n     }\n }"}, {"sha": "84931f66fa8d438ba3cc6c4db79697594b14234a", "filename": "tests/ui/redundant_clone.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99eec3f54fb3c77db580699a40dc428e56942b40/tests%2Fui%2Fredundant_clone.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/99eec3f54fb3c77db580699a40dc428e56942b40/tests%2Fui%2Fredundant_clone.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.fixed?ref=99eec3f54fb3c77db580699a40dc428e56942b40", "patch": "@@ -18,11 +18,11 @@ fn main() {\n \n     let _s = Path::new(\"/a/b/\").join(\"c\");\n \n-    let _s = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n+    let _s = Path::new(\"/a/b/\").join(\"c\");\n \n     let _s = OsString::new();\n \n-    let _s = OsString::new().to_os_string();\n+    let _s = OsString::new();\n \n     // Check that lint level works\n     #[allow(clippy::redundant_clone)]"}, {"sha": "0f185cda0197f0272c33f67ec762a5908319b634", "filename": "tests/ui/redundant_clone.stderr", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/99eec3f54fb3c77db580699a40dc428e56942b40/tests%2Fui%2Fredundant_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99eec3f54fb3c77db580699a40dc428e56942b40/tests%2Fui%2Fredundant_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.stderr?ref=99eec3f54fb3c77db580699a40dc428e56942b40", "patch": "@@ -59,6 +59,18 @@ note: this value is dropped without further use\n LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_owned();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+error: redundant clone\n+  --> $DIR/redundant_clone.rs:21:42\n+   |\n+LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n+   |                                          ^^^^^^^^^^^^^^ help: remove this\n+   |\n+note: this value is dropped without further use\n+  --> $DIR/redundant_clone.rs:21:14\n+   |\n+LL |     let _s = Path::new(\"/a/b/\").join(\"c\").to_path_buf();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error: redundant clone\n   --> $DIR/redundant_clone.rs:23:29\n    |\n@@ -71,6 +83,18 @@ note: this value is dropped without further use\n LL |     let _s = OsString::new().to_owned();\n    |              ^^^^^^^^^^^^^^^\n \n+error: redundant clone\n+  --> $DIR/redundant_clone.rs:25:29\n+   |\n+LL |     let _s = OsString::new().to_os_string();\n+   |                             ^^^^^^^^^^^^^^^ help: remove this\n+   |\n+note: this value is dropped without further use\n+  --> $DIR/redundant_clone.rs:25:14\n+   |\n+LL |     let _s = OsString::new().to_os_string();\n+   |              ^^^^^^^^^^^^^^^\n+\n error: redundant clone\n   --> $DIR/redundant_clone.rs:32:19\n    |\n@@ -131,5 +155,5 @@ note: this value is dropped without further use\n LL |         let _f = f.clone();\n    |                  ^\n \n-error: aborting due to 11 previous errors\n+error: aborting due to 13 previous errors\n "}]}