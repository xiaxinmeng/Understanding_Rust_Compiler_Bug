{"sha": "9e3e98db8ac9374916e76de42e6710dc23caacbc", "node_id": "C_kwDOAAsO6NoAKDllM2U5OGRiOGFjOTM3NDkxNmU3NmRlNDJlNjcxMGRjMjNjYWFjYmM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-29T17:21:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-29T17:21:56Z"}, "message": "Merge #10384\n\n10384: Add vscode native onEnterRules r=matklad,lnicola a=HKalbasi\n\nThis PR copy onEnterRules configurations [from vscode-rust](https://github.com/rust-lang/vscode-rust/blob/master/src/extension.ts#L287) based on discussion in #6254 \r\n\r\nI understand that the ideal way is to use parser data for this, and probably all other things that language-config do. But since it can't be enabled (or at least it isn't enabled) by default in vscode, I think this is needed (until onEnter becomes official LSP and get vscode support).\r\n\r\nPeople can still configure shortcut and use the parser based onEnter, so it wouldn't harm anyone.\r\n\n\nCo-authored-by: hamidreza kalbasi <hamidrezakalbasi@protonmail.com>", "tree": {"sha": "c5309385c160d3544e35a664f7cfb9fafa7195cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5309385c160d3544e35a664f7cfb9fafa7195cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e3e98db8ac9374916e76de42e6710dc23caacbc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhVKC0CRBK7hj4Ov3rIwAAH70IACMf5LDMTjmIiF93Pl6Q8WIN\n4MEdRaR8dKUW91ADUAhe0VY6x2x7aJAKwBE4TMxQtcmOozePieIHEmCB01eeyJyQ\nzLbT1bNmg6vKRGg9sZ2CUBvNvRfl6mi4gQ1D4dJo98hlWJ7xfEPO5PO8aX7iymVb\n9f8KgwBo1h2VcjZTAH6M2EHCbg++zqTDjPOV5NuLYQB4wJDu5lBAjCXByZ0u+BXH\ne+ZDjhb4g7IWA0mqWJjhZ/AcA1AWH2bjNXG6p1Moo0dHVdRG9sFx9f2IYU5QIWJp\nw8EgU2Cyd3fMiMa9bUKdyEDiZdz7+/KivgbmJqVgujqJqurSqYG6H56yAbf5MBY=\n=a5a/\n-----END PGP SIGNATURE-----\n", "payload": "tree c5309385c160d3544e35a664f7cfb9fafa7195cc\nparent ee12b0f173c9780df95df801c8d418245da752b2\nparent 0dbaf64b12fc2b55144b2a762095d91f2a9f0592\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1632936116 +0000\ncommitter GitHub <noreply@github.com> 1632936116 +0000\n\nMerge #10384\n\n10384: Add vscode native onEnterRules r=matklad,lnicola a=HKalbasi\n\nThis PR copy onEnterRules configurations [from vscode-rust](https://github.com/rust-lang/vscode-rust/blob/master/src/extension.ts#L287) based on discussion in #6254 \r\n\r\nI understand that the ideal way is to use parser data for this, and probably all other things that language-config do. But since it can't be enabled (or at least it isn't enabled) by default in vscode, I think this is needed (until onEnter becomes official LSP and get vscode support).\r\n\r\nPeople can still configure shortcut and use the parser based onEnter, so it wouldn't harm anyone.\r\n\n\nCo-authored-by: hamidreza kalbasi <hamidrezakalbasi@protonmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e3e98db8ac9374916e76de42e6710dc23caacbc", "html_url": "https://github.com/rust-lang/rust/commit/9e3e98db8ac9374916e76de42e6710dc23caacbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e3e98db8ac9374916e76de42e6710dc23caacbc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee12b0f173c9780df95df801c8d418245da752b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee12b0f173c9780df95df801c8d418245da752b2", "html_url": "https://github.com/rust-lang/rust/commit/ee12b0f173c9780df95df801c8d418245da752b2"}, {"sha": "0dbaf64b12fc2b55144b2a762095d91f2a9f0592", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dbaf64b12fc2b55144b2a762095d91f2a9f0592", "html_url": "https://github.com/rust-lang/rust/commit/0dbaf64b12fc2b55144b2a762095d91f2a9f0592"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "da04eec92b1ffe32aa2cf077298230df2fd50e93", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/9e3e98db8ac9374916e76de42e6710dc23caacbc/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9e3e98db8ac9374916e76de42e6710dc23caacbc/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=9e3e98db8ac9374916e76de42e6710dc23caacbc", "patch": "@@ -63,6 +63,8 @@ async function tryActivate(context: vscode.ExtensionContext) {\n     activateInlayHints(ctx);\n     warnAboutExtensionConflicts();\n \n+    ctx.pushCleanup(configureLanguage());\n+\n     vscode.workspace.onDidChangeConfiguration(\n         _ => ctx?.client?.sendNotification('workspace/didChangeConfiguration', { settings: \"\" }),\n         null,\n@@ -474,3 +476,54 @@ function warnAboutExtensionConflicts() {\n             .then(() => { }, console.error);\n     };\n }\n+\n+/**\n+ * Sets up additional language configuration that's impossible to do via a\n+ * separate language-configuration.json file. See [1] for more information.\n+ *\n+ * [1]: https://github.com/Microsoft/vscode/issues/11514#issuecomment-244707076\n+ */\n+function configureLanguage(): vscode.Disposable {\n+    const indentAction = vscode.IndentAction.None;\n+    return vscode.languages.setLanguageConfiguration('rust', {\n+        onEnterRules: [\n+            {\n+                // Doc single-line comment\n+                // e.g. ///|\n+                beforeText: /^\\s*\\/{3}.*$/,\n+                action: { indentAction, appendText: '/// ' },\n+            },\n+            {\n+                // Parent doc single-line comment\n+                // e.g. //!|\n+                beforeText: /^\\s*\\/{2}\\!.*$/,\n+                action: { indentAction, appendText: '//! ' },\n+            },\n+            {\n+                // Begins an auto-closed multi-line comment (standard or parent doc)\n+                // e.g. /** | */ or /*! | */\n+                beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n+                afterText: /^\\s*\\*\\/$/,\n+                action: { indentAction: vscode.IndentAction.IndentOutdent, appendText: ' * ' },\n+            },\n+            {\n+                // Begins a multi-line comment (standard or parent doc)\n+                // e.g. /** ...| or /*! ...|\n+                beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n+                action: { indentAction, appendText: ' * ' },\n+            },\n+            {\n+                // Continues a multi-line comment\n+                // e.g.  * ...|\n+                beforeText: /^(\\ \\ )*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n+                action: { indentAction, appendText: '* ' },\n+            },\n+            {\n+                // Dedents after closing a multi-line comment\n+                // e.g.  */|\n+                beforeText: /^(\\ \\ )*\\ \\*\\/\\s*$/,\n+                action: { indentAction, removeText: 1 },\n+            },\n+        ],\n+    });\n+}"}]}