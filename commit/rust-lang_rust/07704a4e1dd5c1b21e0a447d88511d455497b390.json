{"sha": "07704a4e1dd5c1b21e0a447d88511d455497b390", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NzA0YTRlMWRkNWMxYjIxZTBhNDQ3ZDg4NTExZDQ1NTQ5N2IzOTA=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-03-21T11:23:57Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-04-06T10:14:08Z"}, "message": "Allow for re-using hidden monomorphizations on platforms that don't support Rust dylibs.", "tree": {"sha": "7f77e8f1eaca58dafb81b4d50112be6d17bbcfcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f77e8f1eaca58dafb81b4d50112be6d17bbcfcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07704a4e1dd5c1b21e0a447d88511d455497b390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07704a4e1dd5c1b21e0a447d88511d455497b390", "html_url": "https://github.com/rust-lang/rust/commit/07704a4e1dd5c1b21e0a447d88511d455497b390", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07704a4e1dd5c1b21e0a447d88511d455497b390/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec55390387ac068184ded9283aece14aab9bfaf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec55390387ac068184ded9283aece14aab9bfaf8", "html_url": "https://github.com/rust-lang/rust/commit/ec55390387ac068184ded9283aece14aab9bfaf8"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "69b33efdb3542c02bace3f32fb00ac3560ef3498", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07704a4e1dd5c1b21e0a447d88511d455497b390/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07704a4e1dd5c1b21e0a447d88511d455497b390/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=07704a4e1dd5c1b21e0a447d88511d455497b390", "patch": "@@ -1521,6 +1521,8 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n     #[inline]\n     pub fn local_crate_exports_generics(self) -> bool {\n+        debug_assert!(self.share_generics());\n+\n         self.sess.crate_types.borrow().iter().any(|crate_type| {\n             match crate_type {\n                 CrateTypeExecutable |"}, {"sha": "acd2a7657307c4db2d1a6d2d69c1a53336bcb06c", "filename": "src/librustc_trans/back/symbol_export.rs", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/07704a4e1dd5c1b21e0a447d88511d455497b390/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07704a4e1dd5c1b21e0a447d88511d455497b390/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs?ref=07704a4e1dd5c1b21e0a447d88511d455497b390", "patch": "@@ -247,19 +247,37 @@ fn exported_symbols_provider_local<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         use rustc::mir::mono::{Linkage, Visibility, MonoItem};\n         use rustc::ty::InstanceDef;\n \n+        // Normally, we require that shared monomorphizations are not hidden,\n+        // because if we want to re-use a monomorphization from a Rust dylib, it\n+        // needs to be exported.\n+        // However, on platforms that don't allow for Rust dylibs, having\n+        // external linkage is enough for monomorphization to be linked to.\n+        let need_visibility = tcx.sess.target.target.options.dynamic_linking &&\n+                              !tcx.sess.target.target.options.only_cdylib;\n+\n         let (_, cgus) = tcx.collect_and_partition_translation_items(LOCAL_CRATE);\n \n         for (mono_item, &(linkage, visibility)) in cgus.iter()\n                                                        .flat_map(|cgu| cgu.items().iter()) {\n-            if linkage == Linkage::External && visibility == Visibility::Default {\n-                if let &MonoItem::Fn(Instance {\n-                    def: InstanceDef::Item(def_id),\n-                    substs,\n-                }) = mono_item {\n-                    if substs.types().next().is_some() {\n-                        symbols.push((ExportedSymbol::Generic(def_id, substs),\n-                                      SymbolExportLevel::Rust));\n-                    }\n+            if linkage != Linkage::External {\n+                // We can only re-use things with external linkage, otherwise\n+                // we'll get a linker error\n+                continue\n+            }\n+\n+            if need_visibility && visibility == Visibility::Hidden {\n+                // If we potentially share things from Rust dylibs, they must\n+                // not be hidden\n+                continue\n+            }\n+\n+            if let &MonoItem::Fn(Instance {\n+                def: InstanceDef::Item(def_id),\n+                substs,\n+            }) = mono_item {\n+                if substs.types().next().is_some() {\n+                    symbols.push((ExportedSymbol::Generic(def_id, substs),\n+                                  SymbolExportLevel::Rust));\n                 }\n             }\n         }"}]}