{"sha": "e303c250f11c470b57688399959cfef017668ed7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMDNjMjUwZjExYzQ3MGI1NzY4ODM5OTk1OWNmZWYwMTc2NjhlZDc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-11-18T09:16:25Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-11-19T00:23:29Z"}, "message": "Change to a BTreeMap rather than sorting the keys of a FnvHashMap.", "tree": {"sha": "ed924656fc637dd9537d37a1fca710a5d00ef67e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed924656fc637dd9537d37a1fca710a5d00ef67e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e303c250f11c470b57688399959cfef017668ed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e303c250f11c470b57688399959cfef017668ed7", "html_url": "https://github.com/rust-lang/rust/commit/e303c250f11c470b57688399959cfef017668ed7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e303c250f11c470b57688399959cfef017668ed7/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db97c93c9982f106c6eae1f7754a332f094b5647", "url": "https://api.github.com/repos/rust-lang/rust/commits/db97c93c9982f106c6eae1f7754a332f094b5647", "html_url": "https://github.com/rust-lang/rust/commit/db97c93c9982f106c6eae1f7754a332f094b5647"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "95d73daa632b15eaea6752a8f7d6c2d48ddde8bb", "filename": "src/librustc_front/hir.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e303c250f11c470b57688399959cfef017668ed7/src%2Flibrustc_front%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e303c250f11c470b57688399959cfef017668ed7/src%2Flibrustc_front%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fhir.rs?ref=e303c250f11c470b57688399959cfef017668ed7", "patch": "@@ -36,7 +36,7 @@ pub use self::Visibility::*;\n pub use self::PathParameters::*;\n \n use intravisit::Visitor;\n-use rustc_data_structures::fnv::FnvHashMap;\n+use std::collections::BTreeMap;\n use syntax::codemap::{self, Span, Spanned, DUMMY_SP, ExpnId};\n use syntax::abi::Abi;\n use syntax::ast::{Name, Ident, NodeId, DUMMY_NODE_ID, TokenTree, AsmDialect};\n@@ -329,7 +329,14 @@ pub struct Crate {\n     pub config: CrateConfig,\n     pub span: Span,\n     pub exported_macros: Vec<MacroDef>,\n-    pub items: FnvHashMap<NodeId, Item>,\n+\n+    // NB: We use a BTreeMap here so that `visit_all_items` iterates\n+    // over the ids in increasing order. In principle it should not\n+    // matter what order we visit things in, but in *practice* it\n+    // does, because it can affect the order in which errors are\n+    // detected, which in turn can make compile-fail tests yield\n+    // slightly different results.\n+    pub items: BTreeMap<NodeId, Item>,\n }\n \n impl Crate {\n@@ -346,15 +353,7 @@ impl Crate {\n     /// approach. You should override `visit_nested_item` in your\n     /// visitor and then call `intravisit::walk_crate` instead.\n     pub fn visit_all_items<'hir, V:Visitor<'hir>>(&'hir self, visitor: &mut V) {\n-        // In principle, we could just iterate over the hashmap, but\n-        // in practice that makes the order of error reporting vary\n-        // with small changes in the input etc etc, which makes the\n-        // test base hard to maintain. So instead we sort by node-id\n-        // so as to get reproducible results.\n-        let mut pairs: Vec<_> = self.items.iter().collect();\n-        pairs.sort_by(|&(id1, _), &(id2, _)| id1.cmp(id2));\n-\n-        for (_, item) in pairs {\n+        for (_, item) in &self.items {\n             visitor.visit_item(item);\n         }\n     }"}, {"sha": "b984f23c4c02a8541bd63f8dad750fc597a6a1ed", "filename": "src/librustc_front/lowering.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e303c250f11c470b57688399959cfef017668ed7/src%2Flibrustc_front%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e303c250f11c470b57688399959cfef017668ed7/src%2Flibrustc_front%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Flowering.rs?ref=e303c250f11c470b57688399959cfef017668ed7", "patch": "@@ -63,16 +63,15 @@\n \n use hir;\n \n+use std::collections::BTreeMap;\n use std::collections::HashMap;\n-\n use syntax::ast::*;\n use syntax::ptr::P;\n use syntax::codemap::{respan, Spanned, Span};\n use syntax::owned_slice::OwnedSlice;\n use syntax::parse::token::{self, str_to_ident};\n use syntax::std_inject;\n use syntax::visit::{self, Visitor};\n-use rustc_data_structures::fnv::FnvHashMap;\n \n use std::cell::{Cell, RefCell};\n \n@@ -700,7 +699,7 @@ pub fn lower_mod(lctx: &LoweringContext, m: &Mod) -> hir::Mod {\n }\n \n struct ItemLowerer<'lcx, 'interner: 'lcx> {\n-    items: FnvHashMap<NodeId, hir::Item>,\n+    items: BTreeMap<NodeId, hir::Item>,\n     lctx: &'lcx LoweringContext<'interner>,\n }\n \n@@ -713,7 +712,7 @@ impl<'lcx, 'interner> Visitor<'lcx> for ItemLowerer<'lcx, 'interner> {\n \n pub fn lower_crate(lctx: &LoweringContext, c: &Crate) -> hir::Crate {\n     let items = {\n-        let mut item_lowerer = ItemLowerer { items: FnvHashMap(), lctx: lctx };\n+        let mut item_lowerer = ItemLowerer { items: BTreeMap::new(), lctx: lctx };\n         visit::walk_crate(&mut item_lowerer, c);\n         item_lowerer.items\n     };"}]}