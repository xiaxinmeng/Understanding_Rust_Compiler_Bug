{"sha": "70293c658f326ff5efb9a2fcf049f8c9e7ee9916", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMjkzYzY1OGYzMjZmZjVlZmI5YTJmY2YwNDlmOGM5ZTdlZTk5MTY=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-23T18:34:26Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:20Z"}, "message": "make tidy happy", "tree": {"sha": "292dc2742e6d3837d9f20bf24e5d12476f56338b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/292dc2742e6d3837d9f20bf24e5d12476f56338b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70293c658f326ff5efb9a2fcf049f8c9e7ee9916", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70293c658f326ff5efb9a2fcf049f8c9e7ee9916", "html_url": "https://github.com/rust-lang/rust/commit/70293c658f326ff5efb9a2fcf049f8c9e7ee9916", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70293c658f326ff5efb9a2fcf049f8c9e7ee9916/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21a17d105c9cd81dfa8bd3a178e4a6b095f69e5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/21a17d105c9cd81dfa8bd3a178e4a6b095f69e5d", "html_url": "https://github.com/rust-lang/rust/commit/21a17d105c9cd81dfa8bd3a178e4a6b095f69e5d"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "0ad279c55337a576f645cd2b69aae3074a16b2fa", "filename": "library/core/src/iter/adapters/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/70293c658f326ff5efb9a2fcf049f8c9e7ee9916/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70293c658f326ff5efb9a2fcf049f8c9e7ee9916/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs?ref=70293c658f326ff5efb9a2fcf049f8c9e7ee9916", "patch": "@@ -1166,7 +1166,8 @@ unsafe impl<S: Iterator, P, I: Iterator> SourceIter for Filter<I, P> where\n }\n \n #[unstable(issue = \"0\", feature = \"inplace_iteration\")]\n-unsafe impl<I: InPlaceIterable, P> InPlaceIterable for Filter<I, P> where P: FnMut(&I::Item) -> bool {}\n+unsafe impl<I: InPlaceIterable, P> InPlaceIterable for Filter<I, P>\n+    where P: FnMut(&I::Item) -> bool {}\n \n /// An iterator that uses `f` to both filter and map elements from `iter`.\n ///\n@@ -1308,7 +1309,8 @@ unsafe impl<S: Iterator, B, I: Iterator, F> SourceIter for FilterMap<I, F> where\n }\n \n #[unstable(issue = \"0\", feature = \"inplace_iteration\")]\n-unsafe impl<B, I: InPlaceIterable, F> InPlaceIterable for FilterMap<I, F> where F: FnMut(I::Item) -> Option<B> {}\n+unsafe impl<B, I: InPlaceIterable, F> InPlaceIterable for FilterMap<I, F>\n+    where F: FnMut(I::Item) -> Option<B> {}\n \n \n /// An iterator that yields the current count and the element during iteration.\n@@ -1957,7 +1959,8 @@ unsafe impl<S: Iterator, P, I: Iterator> SourceIter for SkipWhile<I, P> where\n }\n \n #[unstable(issue = \"0\", feature = \"inplace_iteration\")]\n-unsafe impl<I: InPlaceIterable, F> InPlaceIterable for SkipWhile<I, F> where F: FnMut(&I::Item) -> bool {}\n+unsafe impl<I: InPlaceIterable, F> InPlaceIterable for SkipWhile<I, F>\n+    where F: FnMut(&I::Item) -> bool {}\n \n /// An iterator that only accepts elements while `predicate` returns `true`.\n ///\n@@ -2164,7 +2167,8 @@ unsafe impl<S: Iterator, P, I: Iterator> SourceIter for TakeWhile<I, P> where\n }\n \n #[unstable(issue = \"0\", feature = \"inplace_iteration\")]\n-unsafe impl<I: InPlaceIterable, F> InPlaceIterable for TakeWhile<I, F> where F: FnMut(&I::Item) -> bool {}\n+unsafe impl<I: InPlaceIterable, F> InPlaceIterable for TakeWhile<I, F>\n+    where F: FnMut(&I::Item) -> bool {}\n \n \n /// An iterator that skips over `n` elements of `iter`."}]}