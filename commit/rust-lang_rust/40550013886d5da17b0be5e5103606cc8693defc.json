{"sha": "40550013886d5da17b0be5e5103606cc8693defc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNTUwMDEzODg2ZDVkYTE3YjBiZTVlNTEwMzYwNmNjODY5M2RlZmM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-06T23:36:26Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-06T23:38:04Z"}, "message": "test: Fix shootout-mandelbrot.rs. rs=bustage", "tree": {"sha": "0df39b88d9a8e415a09e89fdc129759f2bdd79b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0df39b88d9a8e415a09e89fdc129759f2bdd79b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40550013886d5da17b0be5e5103606cc8693defc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40550013886d5da17b0be5e5103606cc8693defc", "html_url": "https://github.com/rust-lang/rust/commit/40550013886d5da17b0be5e5103606cc8693defc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40550013886d5da17b0be5e5103606cc8693defc/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3464f60c00b7bd95c9cf5e52040870a55fd4c1ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/3464f60c00b7bd95c9cf5e52040870a55fd4c1ed", "html_url": "https://github.com/rust-lang/rust/commit/3464f60c00b7bd95c9cf5e52040870a55fd4c1ed"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "2d51c902c39be4af72c52e12781453850024b6f9", "filename": "src/test/bench/shootout-mandelbrot.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/40550013886d5da17b0be5e5103606cc8693defc/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40550013886d5da17b0be5e5103606cc8693defc/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs?ref=40550013886d5da17b0be5e5103606cc8693defc", "patch": "@@ -33,7 +33,7 @@ impl cmplx : ops::Mul<cmplx,cmplx> {\n }\n \n impl cmplx : ops::Add<cmplx,cmplx> {\n-    pure fn add(x: &cmplx) -> cmplx {\n+    pure fn add(&self, x: &cmplx) -> cmplx {\n         cmplx {\n             re: self.re + (*x).re,\n             im: self.im + (*x).im\n@@ -145,7 +145,7 @@ fn writer(path: ~str, writech: comm::Chan<comm::Chan<line>>, size: uint)\n         }\n         else {\n             debug!(\"S %u\", aline.i);\n-            lines.insert(aline.i, aline.b);\n+            lines.insert(aline.i, copy aline.b);    // FIXME: bad for perf\n         };\n         i += 1_u;\n     }\n@@ -160,7 +160,7 @@ fn main() {\n     };\n \n     let path = if vec::len(args) < 4_u { ~\"\" }\n-    else { args[3] };\n+    else { copy args[3] };  // FIXME: bad for perf\n \n     let yieldevery = if vec::len(args) < 3_u { 10_u }\n     else { uint::from_str(args[2]).get() };\n@@ -170,8 +170,8 @@ fn main() {\n \n     let writep = comm::Port();\n     let writech = comm::Chan(&writep);\n-    do task::spawn {\n-        writer(path, writech, size);\n+    do task::spawn |move path| {\n+        writer(copy path, writech, size);\n     };\n     let ch = comm::recv(writep);\n     for uint::range(0_u, size) |j| {"}]}