{"sha": "3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "node_id": "C_kwDOAAsO6NoAKDNjM2M1ZGE5YWRmZGYzMDhiNTE4OWI4MDM0YzA3ZTBkYzU0OTJhNTQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-20T10:47:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-20T10:47:18Z"}, "message": "Rollup merge of #99345 - compiler-errors:issue-99073-redux, r=oli-obk\n\nDo not allow typeck children items to constrain outer RPITs\n\nFixes #99073 in a simpler and more conservative way than #99079. Simply raise a mismatched types error if we try to constrain an RPIT in an item that isn't the RPIT's parent.\n\nr? `@oli-obk`", "tree": {"sha": "3cc513972303b50ca8129237e8b7ac13ce496d1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cc513972303b50ca8129237e8b7ac13ce496d1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi1902CRBK7hj4Ov3rIwAAVl8IAJGGB7bNAwQp+GPfk9rzzIZZ\nk/8WY7sQzjCjQctKLXKtgQmgLdekUj7Knx52vGUV6ydlxIVas0Rf8vf5qJY9dgF5\nl2k7y5ss9znmLwCTyQ6rJn97Xo4VIv2ZAw3NrWQoMQuI7PNFaBcvwAMzd1yeZ22p\nzhfjCoj+QEukiGlihiLzURIeNtmnVT7rdUPU+ZQZX7oZ7qJmcxvHcVzjEIAxT1lB\n05JQ6piFnpzS/NgukgGe8g+svVh+aY5kzMZ7Y47RHO+t9Pp4vzDP78xmKd6euSLo\nxFftRScgrBD59MmWBp5QjL+0IB3m0cIquHONLk3w0Oym4Z9OQuxsxwvC0iKAmfw=\n=7Wk7\n-----END PGP SIGNATURE-----\n", "payload": "tree 3cc513972303b50ca8129237e8b7ac13ce496d1d\nparent 90c59e736b142965ce42c4a41f50d447c28faa74\nparent 5a4601fea56502e4f50df046c4205e678397599b\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1658314038 +0530\ncommitter GitHub <noreply@github.com> 1658314038 +0530\n\nRollup merge of #99345 - compiler-errors:issue-99073-redux, r=oli-obk\n\nDo not allow typeck children items to constrain outer RPITs\n\nFixes #99073 in a simpler and more conservative way than #99079. Simply raise a mismatched types error if we try to constrain an RPIT in an item that isn't the RPIT's parent.\n\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "html_url": "https://github.com/rust-lang/rust/commit/3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90c59e736b142965ce42c4a41f50d447c28faa74", "url": "https://api.github.com/repos/rust-lang/rust/commits/90c59e736b142965ce42c4a41f50d447c28faa74", "html_url": "https://github.com/rust-lang/rust/commit/90c59e736b142965ce42c4a41f50d447c28faa74"}, {"sha": "5a4601fea56502e4f50df046c4205e678397599b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a4601fea56502e4f50df046c4205e678397599b", "html_url": "https://github.com/rust-lang/rust/commit/5a4601fea56502e4f50df046c4205e678397599b"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "508903049db805e25941aea35347d7c2a3feac28", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "patch": "@@ -21,6 +21,7 @@ use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKi\n use rustc_infer::infer::{\n     InferCtxt, InferOk, LateBoundRegion, LateBoundRegionConversionTime, NllRegionVariableOrigin,\n };\n+use rustc_infer::traits::ObligationCause;\n use rustc_middle::mir::tcx::PlaceTy;\n use rustc_middle::mir::visit::{NonMutatingUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::AssertKind;\n@@ -224,6 +225,26 @@ pub(crate) fn type_check<'mir, 'tcx>(\n                     )\n                     .unwrap();\n                     let mut hidden_type = infcx.resolve_vars_if_possible(decl.hidden_type);\n+                    // Check that RPITs are only constrained in their outermost\n+                    // function, otherwise report a mismatched types error.\n+                    if let OpaqueTyOrigin::FnReturn(parent) | OpaqueTyOrigin::AsyncFn(parent)\n+                            = infcx.opaque_ty_origin_unchecked(opaque_type_key.def_id, hidden_type.span)\n+                        && parent.to_def_id() != body.source.def_id()\n+                    {\n+                        infcx\n+                            .report_mismatched_types(\n+                                &ObligationCause::misc(\n+                                    hidden_type.span,\n+                                    infcx.tcx.hir().local_def_id_to_hir_id(\n+                                        body.source.def_id().expect_local(),\n+                                    ),\n+                                ),\n+                                infcx.tcx.mk_opaque(opaque_type_key.def_id.to_def_id(), opaque_type_key.substs),\n+                                hidden_type.ty,\n+                                ty::error::TypeError::Mismatch,\n+                            )\n+                            .emit();\n+                    }\n                     trace!(\n                         \"finalized opaque type {:?} to {:#?}\",\n                         opaque_type_key,"}, {"sha": "81c3bf5d441f847a3513948e433991a23a31a88e", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "patch": "@@ -433,7 +433,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     }\n \n     #[instrument(skip(self), level = \"trace\")]\n-    fn opaque_ty_origin_unchecked(&self, def_id: LocalDefId, span: Span) -> OpaqueTyOrigin {\n+    pub fn opaque_ty_origin_unchecked(&self, def_id: LocalDefId, span: Span) -> OpaqueTyOrigin {\n         let origin = match self.tcx.hir().expect_item(def_id).kind {\n             hir::ItemKind::OpaqueTy(hir::OpaqueTy { origin, .. }) => origin,\n             ref itemkind => {"}, {"sha": "bebd8286de9fec2060420df8abaadb25aec45aac", "filename": "src/test/ui/impl-trait/issue-99073-2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073-2.rs?ref=3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "patch": "@@ -0,0 +1,17 @@\n+use std::fmt::Display;\n+\n+fn main() {\n+    test(\"hi\", true);\n+}\n+\n+fn test<T: Display>(t: T, recurse: bool) -> impl Display {\n+    let f = || {\n+        let i: u32 = test::<i32>(-1, false);\n+        //~^ ERROR mismatched types\n+        println!(\"{i}\");\n+    };\n+    if recurse {\n+        f();\n+    }\n+    t\n+}"}, {"sha": "c1e4b823c08e7873bb4a5ba5618cba50e5e66f99", "filename": "src/test/ui/impl-trait/issue-99073-2.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073-2.stderr?ref=3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-99073-2.rs:9:22\n+   |\n+LL | fn test<T: Display>(t: T, recurse: bool) -> impl Display {\n+   |                                             ------------ the expected opaque type\n+LL |     let f = || {\n+LL |         let i: u32 = test::<i32>(-1, false);\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^ types differ\n+   |\n+   = note: expected opaque type `impl std::fmt::Display`\n+                     found type `u32`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "1d75f6086664fd6db66f24379727b7388495ff86", "filename": "src/test/ui/impl-trait/issue-99073.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073.rs?ref=3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    let _ = fix(|_: &dyn Fn()| {});\n+}\n+\n+fn fix<F: Fn(G), G: Fn()>(f: F) -> impl Fn() {\n+    move || f(fix(&f))\n+    //~^ ERROR mismatched types\n+}"}, {"sha": "b35d58093d5fc89c00f20762a201a11db5084879", "filename": "src/test/ui/impl-trait/issue-99073.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c3c5da9adfdf308b5189b8034c07e0dc5492a54/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-99073.stderr?ref=3c3c5da9adfdf308b5189b8034c07e0dc5492a54", "patch": "@@ -0,0 +1,14 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-99073.rs:6:13\n+   |\n+LL | fn fix<F: Fn(G), G: Fn()>(f: F) -> impl Fn() {\n+   |                                    --------- the expected opaque type\n+LL |     move || f(fix(&f))\n+   |             ^^^^^^^^^^ types differ\n+   |\n+   = note: expected opaque type `impl Fn()`\n+           found type parameter `G`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}