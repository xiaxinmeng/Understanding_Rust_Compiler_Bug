{"sha": "334d266b7704419a6122b283a740c7baa36695b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNGQyNjZiNzcwNDQxOWE2MTIyYjI4M2E3NDBjN2JhYTM2Njk1YjQ=", "commit": {"author": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-10-04T13:35:55Z"}, "committer": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2018-10-04T13:35:55Z"}, "message": "Simplify extend_single_word_in_comment", "tree": {"sha": "db550ddee6671bea7c9f4363fa73d3137f3ef361", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db550ddee6671bea7c9f4363fa73d3137f3ef361"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/334d266b7704419a6122b283a740c7baa36695b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/334d266b7704419a6122b283a740c7baa36695b4", "html_url": "https://github.com/rust-lang/rust/commit/334d266b7704419a6122b283a740c7baa36695b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/334d266b7704419a6122b283a740c7baa36695b4/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c2be06a7eb8fc93faf00909384912dc9e9fa39b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c2be06a7eb8fc93faf00909384912dc9e9fa39b", "html_url": "https://github.com/rust-lang/rust/commit/4c2be06a7eb8fc93faf00909384912dc9e9fa39b"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "a6cb1acf5fea8e2075e3ad077109afc3f318ebaf", "filename": "crates/ra_editor/src/extend_selection.rs", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/334d266b7704419a6122b283a740c7baa36695b4/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/334d266b7704419a6122b283a740c7baa36695b4/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs?ref=334d266b7704419a6122b283a740c7baa36695b4", "patch": "@@ -20,7 +20,7 @@ pub(crate) fn extend(root: SyntaxNodeRef, range: TextRange) -> Option<TextRange>\n             LeafAtOffset::None => return None,\n             LeafAtOffset::Single(l) => {\n                 if l.kind() == COMMENT {\n-                    extend_single_word_in_comment(l, range).unwrap_or_else(||l.range())\n+                    extend_single_word_in_comment(l, offset).unwrap_or_else(||l.range())\n                 } else {\n                     l.range()\n                 }\n@@ -42,22 +42,18 @@ pub(crate) fn extend(root: SyntaxNodeRef, range: TextRange) -> Option<TextRange>\n     }\n }\n \n-fn extend_single_word_in_comment(leaf: SyntaxNodeRef, range: TextRange) -> Option<TextRange> {\n-    let text : &str = leaf.leaf_text().unwrap();\n-    let cursor_position: u32 = (range.start() - leaf.range().start()).into();\n+fn extend_single_word_in_comment(leaf: SyntaxNodeRef, offset: TextUnit) -> Option<TextRange> {\n+    let text : &str = leaf.leaf_text()?;\n+    let cursor_position: u32 = (offset - leaf.range().start()).into();\n \n     let (before, after) = text.split_at(cursor_position as usize);\n-    let start_idx = before.rfind(char::is_whitespace);\n-    let end_idx = after.find(char::is_whitespace);\n-\n-    match (start_idx, end_idx) {\n-        (Some(start), Some(end)) => {\n-            let from : TextUnit = (start as u32 + 1).into();\n-            let to : TextUnit = (cursor_position + (end as u32)).into();\n-            Some(TextRange::from_to(from, to))\n-        },\n-        (_, _) => None\n-    }\n+    let start_idx = before.rfind(char::is_whitespace)?;\n+    let end_idx = after.find(char::is_whitespace)?;\n+\n+    let from : TextUnit = (start_idx as u32 + 1).into();\n+    let to : TextUnit = (cursor_position + (end_idx as u32)).into();\n+\n+    Some(TextRange::from_to(from, to))\n }\n \n fn extend_ws(root: SyntaxNodeRef, ws: SyntaxNodeRef, offset: TextUnit) -> TextRange {"}]}