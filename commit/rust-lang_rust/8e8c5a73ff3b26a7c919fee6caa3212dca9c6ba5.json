{"sha": "8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlOGM1YTczZmYzYjI2YTdjOTE5ZmVlNmNhYTMyMTJkY2E5YzZiYTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-06T17:09:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-06T17:09:58Z"}, "message": "Merge #3498\n\n3498: Trigger parameter info automatically r=matklad a=matklad\n\nSee https://github.com/Microsoft/vscode/issues/64023\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "22a0cb43006931d9acfb77940b2cda2d16f702d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22a0cb43006931d9acfb77940b2cda2d16f702d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeYoPmCRBK7hj4Ov3rIwAAdHIIAF8Uwyz2NgIheG+xEncA9lSa\nygrud/FVkNA3aXSPklS1hLXz54O06s3oonTNXz9F4p0ep3+28yrJ73FmVVS3t4tD\nX96ejHp0zvfrjwlPhWXAg/QLeCE0ldN86CZ1PhpsDBM993h5v5ok1z8idq9D/aFA\nojW3/8le+jO8tQUMLDLNKFbn+XQYDLGnbKfFwkBWgNRBNP3z5+owzHDj9oEjw8Et\nbYhFhue+bkx/hcxTVUuJVSYcdXnQizHYoZSDMffdEOwYewROmux8yvsUSqI/l4lm\nW9TvM2XMCigpPvSNTXlUaq51TbVSgQUF9wK3bqGBJ4V3IUJA6UfXa6zIO6Wrg08=\n=zdd0\n-----END PGP SIGNATURE-----\n", "payload": "tree 22a0cb43006931d9acfb77940b2cda2d16f702d6\nparent ce7496ec2227746cfcd2147fadf58fa71f65e35b\nparent 3ff170d65872d9965c4bd88184701d957f23570e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1583514598 +0000\ncommitter GitHub <noreply@github.com> 1583514598 +0000\n\nMerge #3498\n\n3498: Trigger parameter info automatically r=matklad a=matklad\n\nSee https://github.com/Microsoft/vscode/issues/64023\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5", "html_url": "https://github.com/rust-lang/rust/commit/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce7496ec2227746cfcd2147fadf58fa71f65e35b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce7496ec2227746cfcd2147fadf58fa71f65e35b", "html_url": "https://github.com/rust-lang/rust/commit/ce7496ec2227746cfcd2147fadf58fa71f65e35b"}, {"sha": "3ff170d65872d9965c4bd88184701d957f23570e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ff170d65872d9965c4bd88184701d957f23570e", "html_url": "https://github.com/rust-lang/rust/commit/3ff170d65872d9965c4bd88184701d957f23570e"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "19bbb2517034291e4487022297cc5ca1a62e0d6a", "filename": "crates/ra_ide/src/completion/completion_item.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5", "patch": "@@ -47,6 +47,10 @@ pub struct CompletionItem {\n \n     /// Whether this item is marked as deprecated\n     deprecated: bool,\n+\n+    /// If completing a function call, ask the editor to show parameter popup\n+    /// after completion.\n+    trigger_call_info: bool,\n }\n \n // We use custom debug for CompletionItem to make `insta`'s diffs more readable.\n@@ -139,6 +143,7 @@ impl CompletionItem {\n             kind: None,\n             text_edit: None,\n             deprecated: None,\n+            trigger_call_info: None,\n         }\n     }\n     /// What user sees in pop-up in the UI.\n@@ -177,6 +182,10 @@ impl CompletionItem {\n     pub fn deprecated(&self) -> bool {\n         self.deprecated\n     }\n+\n+    pub fn trigger_call_info(&self) -> bool {\n+        self.trigger_call_info\n+    }\n }\n \n /// A helper to make `CompletionItem`s.\n@@ -193,6 +202,7 @@ pub(crate) struct Builder {\n     kind: Option<CompletionItemKind>,\n     text_edit: Option<TextEdit>,\n     deprecated: Option<bool>,\n+    trigger_call_info: Option<bool>,\n }\n \n impl Builder {\n@@ -221,6 +231,7 @@ impl Builder {\n             kind: self.kind,\n             completion_kind: self.completion_kind,\n             deprecated: self.deprecated.unwrap_or(false),\n+            trigger_call_info: self.trigger_call_info.unwrap_or(false),\n         }\n     }\n     pub(crate) fn lookup_by(mut self, lookup: impl Into<String>) -> Builder {\n@@ -271,6 +282,10 @@ impl Builder {\n         self.deprecated = Some(deprecated);\n         self\n     }\n+    pub(crate) fn trigger_call_info(mut self) -> Builder {\n+        self.trigger_call_info = Some(true);\n+        self\n+    }\n }\n \n impl<'a> Into<CompletionItem> for Builder {"}, {"sha": "d6196a5cedc80dfcc15fe6de14d97339cd88fe8a", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5", "patch": "@@ -103,7 +103,7 @@ impl Completions {\n             }\n         };\n \n-        // If not an import, add parenthesis automatically.\n+        // Add `<>` for generic types\n         if ctx.is_path_type\n             && !ctx.has_type_args\n             && ctx.db.feature_flags.get(\"completion.insertion.add-call-parenthesis\")\n@@ -211,7 +211,7 @@ impl Completions {\n                 .set_deprecated(is_deprecated(func, ctx.db))\n                 .detail(function_signature.to_string());\n \n-        // Add `<>` for generic types\n+        // If not an import, add parenthesis automatically.\n         if ctx.use_item_syntax.is_none()\n             && !ctx.is_call\n             && ctx.db.feature_flags.get(\"completion.insertion.add-call-parenthesis\")\n@@ -221,16 +221,26 @@ impl Completions {\n             let (snippet, label) = if params.is_empty() || has_self_param && params.len() == 1 {\n                 (format!(\"{}()$0\", name), format!(\"{}()\", name))\n             } else {\n-                let to_skip = if has_self_param { 1 } else { 0 };\n-                let function_params_snippet =\n-                    join(\n+                builder = builder.trigger_call_info();\n+                let snippet = if ctx\n+                    .db\n+                    .feature_flags\n+                    .get(\"completion.insertion.add-argument-sippets\")\n+                {\n+                    let to_skip = if has_self_param { 1 } else { 0 };\n+                    let function_params_snippet = join(\n                         function_signature.parameter_names.iter().skip(to_skip).enumerate().map(\n                             |(index, param_name)| format!(\"${{{}:{}}}\", index + 1, param_name),\n                         ),\n                     )\n                     .separator(\", \")\n                     .to_string();\n-                (format!(\"{}({})$0\", name, function_params_snippet), format!(\"{}(\u2026)\", name))\n+                    format!(\"{}({})$0\", name, function_params_snippet)\n+                } else {\n+                    format!(\"{}($0)\", name)\n+                };\n+\n+                (snippet, format!(\"{}(\u2026)\", name))\n             };\n             builder = builder.lookup_by(name).label(label).insert_snippet(snippet);\n         }"}, {"sha": "d9c9d6cd2b7978b887559b873b08b9b2c163d1dc", "filename": "crates/ra_ide_db/src/feature_flags.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/crates%2Fra_ide_db%2Fsrc%2Ffeature_flags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/crates%2Fra_ide_db%2Fsrc%2Ffeature_flags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Ffeature_flags.rs?ref=8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5", "patch": "@@ -54,6 +54,7 @@ impl Default for FeatureFlags {\n         FeatureFlags::new(&[\n             (\"lsp.diagnostics\", true),\n             (\"completion.insertion.add-call-parenthesis\", true),\n+            (\"completion.insertion.add-argument-sippets\", true),\n             (\"completion.enable-postfix\", true),\n             (\"notifications.workspace-loaded\", true),\n             (\"notifications.cargo-toml-not-found\", true),"}, {"sha": "fe3b588e4a9c9733c4c2a5a6bb33bb116aa1ae58", "filename": "crates/rust-analyzer/src/conv.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconv.rs?ref=8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5", "patch": "@@ -150,6 +150,16 @@ impl ConvWith<(&LineIndex, LineEndings)> for CompletionItem {\n             additional_text_edits: Some(additional_text_edits),\n             documentation: self.documentation().map(|it| it.conv()),\n             deprecated: Some(self.deprecated()),\n+            command: if self.trigger_call_info() {\n+                let cmd = lsp_types::Command {\n+                    title: \"triggerParameterHints\".into(),\n+                    command: \"editor.action.triggerParameterHints\".into(),\n+                    arguments: None,\n+                };\n+                Some(cmd)\n+            } else {\n+                None\n+            },\n             ..Default::default()\n         };\n "}, {"sha": "2f442aae8226ce3edb134c2105508354adc1c9f3", "filename": "editors/code/package.json", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=8e8c5a73ff3b26a7c919fee6caa3212dca9c6ba5", "patch": "@@ -197,6 +197,10 @@\n                             \"type\": \"boolean\",\n                             \"description\": \"Whether to add parenthesis when completing functions\"\n                         },\n+                        \"completion.insertion.add-argument-sippets\": {\n+                            \"type\": \"boolean\",\n+                            \"description\": \"Whether to add argument snippets when completing functions\"\n+                        },\n                         \"completion.enable-postfix\": {\n                             \"type\": \"boolean\",\n                             \"description\": \"Whether to show postfix snippets like `dbg`, `if`, `not`, etc.\""}]}