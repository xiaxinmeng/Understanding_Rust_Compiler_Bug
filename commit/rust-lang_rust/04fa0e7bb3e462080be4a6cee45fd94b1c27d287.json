{"sha": "04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZmEwZTdiYjNlNDYyMDgwYmU0YTZjZWU0NWZkOTRiMWMyN2QyODc=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-04-25T16:30:39Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-04-26T14:49:16Z"}, "message": "rustc_target: move in syntax::abi and flip dependency.", "tree": {"sha": "13f3f018ba821be9c9375d5d06b3314e7994d7a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13f3f018ba821be9c9375d5d06b3314e7994d7a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "html_url": "https://github.com/rust-lang/rust/commit/04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "030244cd4a76914af7dc2939ed1a16f394ceda48", "url": "https://api.github.com/repos/rust-lang/rust/commits/030244cd4a76914af7dc2939ed1a16f394ceda48", "html_url": "https://github.com/rust-lang/rust/commit/030244cd4a76914af7dc2939ed1a16f394ceda48"}], "stats": {"total": 183, "additions": 106, "deletions": 77}, "files": [{"sha": "e14b9da971301eca0970d7349056e20971321228", "filename": "src/Cargo.lock", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -1833,6 +1833,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_errors 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]\n@@ -1885,6 +1886,7 @@ name = \"rustc_cratesio_shim\"\n version = \"0.0.0\"\n dependencies = [\n  \"bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1896,6 +1898,7 @@ dependencies = [\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot_core 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc_cratesio_shim 0.0.0\",\n  \"serialize 0.0.0\",\n  \"stable_deref_trait 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1966,6 +1969,7 @@ dependencies = [\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n  \"rustc_mir 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]\n@@ -2106,6 +2110,7 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_data_structures 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"rustc_typeck 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n@@ -2117,8 +2122,8 @@ version = \"0.0.0\"\n dependencies = [\n  \"bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc_cratesio_shim 0.0.0\",\n  \"serialize 0.0.0\",\n- \"syntax 0.0.0\",\n ]\n \n [[package]]\n@@ -2204,6 +2209,7 @@ dependencies = [\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n  \"rustc_platform_intrinsics 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]\n@@ -2542,9 +2548,9 @@ version = \"0.0.0\"\n dependencies = [\n  \"bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc_cratesio_shim 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"scoped-tls 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serialize 0.0.0\",\n  \"syntax_pos 0.0.0\",\n@@ -2558,6 +2564,7 @@ dependencies = [\n  \"proc_macro 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]"}, {"sha": "62f3f9f4486adde80e575350cfb8027c3950f8bd", "filename": "src/librustc/hir/intravisit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -41,7 +41,7 @@\n //! This order consistency is required in a few places in rustc, for\n //! example generator inference, and possibly also HIR borrowck.\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast::{NodeId, CRATE_NODE_ID, Name, Attribute};\n use syntax_pos::Span;\n use hir::*;"}, {"sha": "362c0bf07f73bcb3c7ac54b060d036e58a59d6ec", "filename": "src/librustc/hir/map/blocks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -25,7 +25,7 @@ use hir as ast;\n use hir::map::{self, Node};\n use hir::{Expr, FnDecl};\n use hir::intravisit::FnKind;\n-use syntax::abi;\n+use rustc_target::spec::abi;\n use syntax::ast::{Attribute, Name, NodeId};\n use syntax_pos::Span;\n "}, {"sha": "a9613a60a57c089f9ec87127bcc94d1076199b96", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -21,7 +21,7 @@ use hir::def_id::{CRATE_DEF_INDEX, DefId, LocalDefId, DefIndexAddressSpace};\n \n use middle::cstore::CrateStore;\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, Name, NodeId, CRATE_NODE_ID};\n use syntax::codemap::Spanned;\n use syntax::ext::base::MacroKind;"}, {"sha": "0dc89d64bd50116b02d71039e34e6e32c05eb4d3", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -34,7 +34,7 @@ use mir::mono::Linkage;\n \n use syntax_pos::{Span, DUMMY_SP};\n use syntax::codemap::{self, Spanned};\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, Name, NodeId, DUMMY_NODE_ID, AsmDialect};\n use syntax::ast::{Attribute, Lit, StrStyle, FloatTy, IntTy, UintTy, MetaItem};\n use syntax::attr::InlineAttr;"}, {"sha": "3943c30127d6f73f9c1800fa2cd4dc63c5ebdda9", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -10,7 +10,7 @@\n \n pub use self::AnnNode::*;\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::codemap::{CodeMap, Spanned};\n use syntax::parse::{token, ParseSess};"}, {"sha": "d7e16ab36205ecd6a58bcceac7c93ef0d0fc6f3f", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -82,7 +82,7 @@ impl_stable_hash_for!(enum ::syntax::ext::base::MacroKind {\n });\n \n \n-impl_stable_hash_for!(enum ::syntax::abi::Abi {\n+impl_stable_hash_for!(enum ::rustc_target::spec::abi::Abi {\n     Cdecl,\n     Stdcall,\n     Fastcall,"}, {"sha": "27f7dbf508db029a8d4f89496ac5fef59a39df4d", "filename": "src/librustc/middle/intrinsicck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -13,7 +13,7 @@ use hir::def_id::DefId;\n use ty::{self, Ty, TyCtxt};\n use ty::layout::{LayoutError, Pointer, SizeSkeleton};\n \n-use syntax::abi::Abi::RustIntrinsic;\n+use rustc_target::spec::abi::Abi::RustIntrinsic;\n use syntax_pos::Span;\n use hir::intravisit::{self, Visitor, NestedVisitorMap};\n use hir;"}, {"sha": "0aeb15b49fbbd0177a2053a4ebd83d728cc2eaee", "filename": "src/librustc/middle/reachable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fmiddle%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fmiddle%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Freachable.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -26,7 +26,7 @@ use middle::privacy;\n use session::config;\n use util::nodemap::{NodeSet, FxHashSet};\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n use hir;"}, {"sha": "33abc0c7e15aa4a58dfb2afc75e18306055fcd60", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -1091,15 +1091,15 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                     tcx.mk_infer(ty::TyVar(ty::TyVid { index: 0 })),\n                     false,\n                     hir::Unsafety::Normal,\n-                    ::syntax::abi::Abi::Rust\n+                    ::rustc_target::spec::abi::Abi::Rust\n                 )\n             } else {\n                 tcx.mk_fn_sig(\n                     ::std::iter::once(inputs),\n                     tcx.mk_infer(ty::TyVar(ty::TyVid { index: 0 })),\n                     false,\n                     hir::Unsafety::Normal,\n-                    ::syntax::abi::Abi::Rust\n+                    ::rustc_target::spec::abi::Abi::Rust\n                 )\n             };\n             format!(\"{}\", ty::Binder::bind(sig))"}, {"sha": "f43f5cf3e3ff4db9d9dafba222858e0042e6dbf2", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -51,7 +51,7 @@ use std::cmp;\n use std::fmt;\n use std::mem;\n use std::rc::Rc;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use hir;\n use util::nodemap::{FxHashMap, FxHashSet};\n "}, {"sha": "b9e8cd454a0eece1f780ebff14feb855fcc8569a", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -70,7 +70,7 @@ use std::ops::Deref;\n use std::iter;\n use std::sync::mpsc;\n use std::sync::Arc;\n-use syntax::abi;\n+use rustc_target::spec::abi;\n use syntax::ast::{self, NodeId};\n use syntax::attr;\n use syntax::codemap::MultiSpan;"}, {"sha": "cf2004a681e6238c85c57f811d1e2ce778bf92ac", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -11,7 +11,7 @@\n use hir::def_id::DefId;\n use ty::{self, BoundRegion, Region, Ty, TyCtxt};\n use std::fmt;\n-use syntax::abi;\n+use rustc_target::spec::abi;\n use syntax::ast;\n use errors::DiagnosticBuilder;\n use syntax_pos::Span;"}, {"sha": "ecd415c4bc42082ff801944f75aeaecbc919b619", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -12,7 +12,7 @@ use hir::def_id::DefId;\n use ty::{self, Ty, TypeFoldable, Substs, TyCtxt};\n use ty::subst::Kind;\n use traits;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use util::ppaux;\n \n use std::fmt;"}, {"sha": "03ed6e7ac90d1dd778cfed126d898a19318acc6a", "filename": "src/librustc/ty/relate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Frelate.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -22,7 +22,7 @@ use mir::interpret::{GlobalId, Value, PrimVal};\n use util::common::ErrorReported;\n use std::rc::Rc;\n use std::iter;\n-use syntax::abi;\n+use rustc_target::spec::abi;\n use hir as ast;\n use rustc_data_structures::accumulate_vec::AccumulateVec;\n "}, {"sha": "9b20fce667318ea1fbd3a8d0062c9f0868321c67", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -44,7 +44,7 @@ CloneTypeFoldableAndLiftImpls! {\n     ::hir::MatchSource,\n     ::hir::Mutability,\n     ::hir::Unsafety,\n-    ::syntax::abi::Abi,\n+    ::rustc_target::spec::abi::Abi,\n     ::mir::Local,\n     ::mir::Promoted,\n     ::traits::Reveal,"}, {"sha": "0dfae13cc753af8619bb9f1b3ea6e3741afd1825", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -22,7 +22,7 @@ use util::captures::Captures;\n \n use std::iter;\n use std::cmp::Ordering;\n-use syntax::abi;\n+use rustc_target::spec::abi;\n use syntax::ast::{self, Name};\n use syntax::symbol::{keywords, InternedString};\n "}, {"sha": "905776373bd37707f7066a458df7f5dc063dabd2", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -28,7 +28,7 @@ use std::fmt;\n use std::usize;\n \n use rustc_data_structures::indexed_vec::Idx;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast::CRATE_NODE_ID;\n use syntax::symbol::{Symbol, InternedString};\n use hir;"}, {"sha": "765cb80f35710b30e742711ff434cdca4c9c1de4", "filename": "src/librustc_allocator/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_allocator%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_allocator%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_allocator%2FCargo.toml?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -11,5 +11,6 @@ test = false\n [dependencies]\n rustc = { path = \"../librustc\" }\n rustc_errors = { path = \"../librustc_errors\" }\n+rustc_target = { path = \"../librustc_target\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "de8814d3d6a73244721a3f50eb2db355f603b28f", "filename": "src/librustc_allocator/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_allocator%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_allocator%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_allocator%2Fexpand.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -10,7 +10,7 @@\n \n use rustc::middle::allocator::AllocatorKind;\n use rustc_errors;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast::{Attribute, Crate, LitKind, StrStyle};\n use syntax::ast::{Arg, Constness, Generics, Mac, Mutability, Ty, Unsafety};\n use syntax::ast::{self, Expr, Ident, Item, ItemKind, TyKind, VisibilityKind};"}, {"sha": "6595564fb30b5ccc0f1ab750ce258bb631721452", "filename": "src/librustc_allocator/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_allocator%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_allocator%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_allocator%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -12,6 +12,7 @@\n \n extern crate rustc;\n extern crate rustc_errors;\n+extern crate rustc_target;\n extern crate syntax;\n extern crate syntax_pos;\n "}, {"sha": "342c7d1b67866b73573050a2bda970a2cb6b216b", "filename": "src/librustc_cratesio_shim/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_cratesio_shim%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_cratesio_shim%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_cratesio_shim%2FCargo.toml?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -21,3 +21,4 @@ crate-type = [\"dylib\"]\n \n [dependencies]\n bitflags = \"1.0\"\n+log = \"0.4\""}, {"sha": "85a5b331d8c452794bdbbd94b0527cee6502f291", "filename": "src/librustc_cratesio_shim/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_cratesio_shim%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_cratesio_shim%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_cratesio_shim%2Fsrc%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -12,3 +12,4 @@\n #![allow(unused_extern_crates)]\n \n extern crate bitflags;\n+extern crate log;"}, {"sha": "9178d0d00faa49ae0c34f68e9d2a214b32ae047c", "filename": "src/librustc_data_structures/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_data_structures%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_data_structures%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2FCargo.toml?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -11,6 +11,7 @@ crate-type = [\"dylib\"]\n [dependencies]\n ena = \"0.9.1\"\n log = \"0.4\"\n+rustc_cratesio_shim = { path = \"../librustc_cratesio_shim\" }\n serialize = { path = \"../libserialize\" }\n cfg-if = \"0.1.2\"\n stable_deref_trait = \"1.0.0\""}, {"sha": "1320fe75bc526c1b81ba8929f082d77ead16500c", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -45,6 +45,10 @@ extern crate parking_lot;\n extern crate cfg_if;\n extern crate stable_deref_trait;\n \n+// See librustc_cratesio_shim/Cargo.toml for a comment explaining this.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_cratesio_shim;\n+\n pub use rustc_serialize::hex::ToHex;\n \n pub mod array_vec;"}, {"sha": "47c49fbe9ef475633d041fbcfbcc8ce983dec3ac", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -31,7 +31,7 @@ use rustc::session::config::{OutputFilenames, OutputTypes};\n use rustc_data_structures::sync::{self, Lrc};\n use syntax;\n use syntax::ast;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::codemap::{CodeMap, FilePathMapping, FileName};\n use errors;\n use errors::emitter::Emitter;"}, {"sha": "f097095abe4e923431dd128cdcabfff373e4e5f3", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -13,5 +13,6 @@ test = false\n log = \"0.4\"\n rustc = { path = \"../librustc\" }\n rustc_mir = { path = \"../librustc_mir\"}\n+rustc_target = { path = \"../librustc_target\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "651a2e187f6b40d1f3967f19fc354da269cb1a02", "filename": "src/librustc_lint/bad_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2Fbad_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2Fbad_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbad_style.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -13,7 +13,7 @@ use rustc::ty;\n use lint::{LateContext, LintContext, LintArray};\n use lint::{LintPass, LateLintPass};\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n use syntax_pos::Span;"}, {"sha": "91ce6f3854a501cb17f5ba01842975cf1bc67cec", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -1169,7 +1169,7 @@ impl LintPass for MutableTransmutes {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MutableTransmutes {\n     fn check_expr(&mut self, cx: &LateContext, expr: &hir::Expr) {\n-        use syntax::abi::Abi::RustIntrinsic;\n+        use rustc_target::spec::abi::Abi::RustIntrinsic;\n \n         let msg = \"mutating transmuted &mut T from &T may cause undefined behavior, \\\n                    consider instead using an UnsafeCell\";"}, {"sha": "65b340d65686d13c7e2730ebcc28e711962adf7c", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -37,6 +37,7 @@ extern crate rustc;\n #[macro_use]\n extern crate log;\n extern crate rustc_mir;\n+extern crate rustc_target;\n extern crate syntax_pos;\n \n use rustc::lint;"}, {"sha": "904a3e4c4274f47d55edc0ecaf11824e6165d517", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -22,7 +22,7 @@ use std::cmp;\n use std::{i8, i16, i32, i64, u8, u16, u32, u64, f32, f64};\n \n use syntax::{ast, attr};\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax_pos::Span;\n use syntax::codemap;\n "}, {"sha": "b699885b0eb9243e9cf6634e126cd1c2a0524d82", "filename": "src/librustc_metadata/link_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_metadata%2Flink_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_metadata%2Flink_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flink_args.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -11,7 +11,7 @@\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::hir;\n use rustc::ty::TyCtxt;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n \n pub fn collect<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) -> Vec<String> {\n     let mut collector = Collector {"}, {"sha": "70b8c7b11fdb2be0f88aef8b6008dd4b9305b23b", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -14,7 +14,7 @@ use rustc::middle::cstore::{self, NativeLibrary};\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc::util::nodemap::FxHashSet;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::attr;\n use syntax::codemap::Span;\n use syntax::feature_gate::{self, GateIssue};"}, {"sha": "c130b4f550fd429aab70cf451224f7d800859d8d", "filename": "src/librustc_mir/build/expr/into.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -16,7 +16,7 @@ use hair::*;\n use rustc::ty;\n use rustc::mir::*;\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n \n impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n     /// Compile `expr`, storing the result into `destination`, which"}, {"sha": "0d836f5cb9737f72963d40a6421ffb3f19371000", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -25,7 +25,7 @@ use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use shim;\n use std::mem;\n use std::u32;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr::{self, UnwindAttr};\n use syntax::symbol::keywords;"}, {"sha": "aa80ee7af18fc306129d0df96b0f170b0c9547b4", "filename": "src/librustc_mir/interpret/terminator/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -2,7 +2,7 @@ use rustc::mir;\n use rustc::ty::{self, Ty};\n use rustc::ty::layout::LayoutOf;\n use syntax::codemap::Span;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n \n use rustc::mir::interpret::{EvalResult, PrimVal, Value};\n use super::{EvalContext, Place, Machine, ValTy};"}, {"sha": "9e0c977a3f0627d0b55a1bb22194492c3c27403b", "filename": "src/librustc_mir/monomorphize/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -339,7 +339,7 @@ impl<'a, 'tcx> DefPathBasedNames<'a, 'tcx> {\n                 }\n \n                 let abi = sig.abi();\n-                if abi != ::syntax::abi::Abi::Rust {\n+                if abi != ::rustc_target::spec::abi::Abi::Rust {\n                     output.push_str(\"extern \\\"\");\n                     output.push_str(abi.name());\n                     output.push_str(\"\\\" \");"}, {"sha": "af60a83a4a2e9269c487f5b5be8cee4cfb93ff62", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -20,7 +20,7 @@ use rustc::mir::interpret::{Value, PrimVal};\n \n use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax_pos::Span;\n "}, {"sha": "2b491385d661d98b6c7f7b2710e522e4028ca068", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -28,7 +28,7 @@ use transform::{MirPass, MirSource};\n use super::simplify::{remove_dead_blocks, CfgSimplifier};\n \n use syntax::{attr};\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n \n const DEFAULT_THRESHOLD: usize = 50;\n const HINT_THRESHOLD: usize = 100;"}, {"sha": "ff7551ed6f4f8d242f138bc423d6ddeac3b5e236", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -29,7 +29,7 @@ use rustc::mir::*;\n use rustc::mir::traversal::ReversePostorder;\n use rustc::mir::visit::{PlaceContext, Visitor};\n use rustc::middle::lang_items;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::attr;\n use syntax::ast::LitKind;\n use syntax::feature_gate::UnstableFeatures;"}, {"sha": "8f67b9e7c3d9d406abee9929566035716b7c6f20", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use syntax::abi::{Abi};\n+use rustc_target::spec::abi::{Abi};\n use syntax::ast;\n use syntax_pos::Span;\n "}, {"sha": "976614c9542a8255e3f99a21635024074348dad1", "filename": "src/librustc_save_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_save_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_save_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2FCargo.toml?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -12,6 +12,7 @@ crate-type = [\"dylib\"]\n log = \"0.4\"\n rustc = { path = \"../librustc\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_target = { path = \"../librustc_target\" }\n rustc_typeck = { path = \"../librustc_typeck\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "401a280412a114eb448d13d95d2231e6ce15b2d4", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -22,6 +22,7 @@ extern crate rustc;\n extern crate log;\n extern crate rustc_data_structures;\n extern crate rustc_serialize;\n+extern crate rustc_target;\n extern crate rustc_typeck;\n #[macro_use]\n extern crate syntax;"}, {"sha": "829ed320d753bfd18ed1c39dcf0a0c7a22c2cf11", "filename": "src/librustc_save_analysis/sig.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_save_analysis%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_save_analysis%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fsig.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -237,7 +237,7 @@ impl Sig for ast::Ty {\n                 if f.unsafety == ast::Unsafety::Unsafe {\n                     text.push_str(\"unsafe \");\n                 }\n-                if f.abi != ::syntax::abi::Abi::Rust {\n+                if f.abi != ::rustc_target::spec::abi::Abi::Rust {\n                     text.push_str(\"extern\");\n                     text.push_str(&f.abi.to_string());\n                     text.push(' ');\n@@ -388,7 +388,7 @@ impl Sig for ast::Item {\n                 if unsafety == ast::Unsafety::Unsafe {\n                     text.push_str(\"unsafe \");\n                 }\n-                if abi != ::syntax::abi::Abi::Rust {\n+                if abi != ::rustc_target::spec::abi::Abi::Rust {\n                     text.push_str(\"extern\");\n                     text.push_str(&abi.to_string());\n                     text.push(' ');\n@@ -931,7 +931,7 @@ fn make_method_signature(\n     if m.unsafety == ast::Unsafety::Unsafe {\n         text.push_str(\"unsafe \");\n     }\n-    if m.abi != ::syntax::abi::Abi::Rust {\n+    if m.abi != ::rustc_target::spec::abi::Abi::Rust {\n         text.push_str(\"extern\");\n         text.push_str(&m.abi.to_string());\n         text.push(' ');"}, {"sha": "bb686e914a0486c098e6fea02d4541ecb6c24717", "filename": "src/librustc_target/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2FCargo.toml?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -11,7 +11,7 @@ crate-type = [\"dylib\"]\n [dependencies]\n bitflags = \"1.0\"\n log = \"0.4\"\n-syntax = { path = \"../libsyntax\" }\n+rustc_cratesio_shim = { path = \"../librustc_cratesio_shim\" }\n serialize = { path = \"../libserialize\" }\n \n [features]"}, {"sha": "34f28301e5456034d2867a64beaff225e530e291", "filename": "src/librustc_target/abi/call/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -458,22 +458,22 @@ pub struct FnType<'a, Ty> {\n }\n \n impl<'a, Ty> FnType<'a, Ty> {\n-    pub fn adjust_for_cabi<C>(&mut self, cx: C, abi: ::syntax::abi::Abi) -> Result<(), String>\n+    pub fn adjust_for_cabi<C>(&mut self, cx: C, abi: ::spec::abi::Abi) -> Result<(), String>\n         where Ty: TyLayoutMethods<'a, C> + Copy,\n               C: LayoutOf<Ty = Ty, TyLayout = TyLayout<'a, Ty>> + HasDataLayout + HasTargetSpec\n     {\n         match &cx.target_spec().arch[..] {\n             \"x86\" => {\n-                let flavor = if abi == ::syntax::abi::Abi::Fastcall {\n+                let flavor = if abi == ::spec::abi::Abi::Fastcall {\n                     x86::Flavor::Fastcall\n                 } else {\n                     x86::Flavor::General\n                 };\n                 x86::compute_abi_info(cx, self, flavor);\n             },\n-            \"x86_64\" => if abi == ::syntax::abi::Abi::SysV64 {\n+            \"x86_64\" => if abi == ::spec::abi::Abi::SysV64 {\n                 x86_64::compute_abi_info(cx, self);\n-            } else if abi == ::syntax::abi::Abi::Win64 || cx.target_spec().options.is_like_windows {\n+            } else if abi == ::spec::abi::Abi::Win64 || cx.target_spec().options.is_like_windows {\n                 x86_win64::compute_abi_info(self);\n             } else {\n                 x86_64::compute_abi_info(cx, self);"}, {"sha": "8f4911574398ba84d2f6874f334e371d8e93666f", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -33,11 +33,14 @@\n \n #[macro_use]\n extern crate bitflags;\n-extern crate syntax;\n extern crate serialize;\n #[macro_use] extern crate log;\n \n extern crate serialize as rustc_serialize; // used by deriving\n \n+// See librustc_cratesio_shim/Cargo.toml for a comment explaining this.\n+#[allow(unused_extern_crates)]\n+extern crate rustc_cratesio_shim;\n+\n pub mod abi;\n pub mod spec;"}, {"sha": "ed2eb209906958a079fef8d48f6b85965a8f7a32", "filename": "src/librustc_target/spec/abi.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Fspec%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Fspec%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fabi.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "previous_filename": "src/libsyntax/abi.rs"}, {"sha": "635b8ae7388fee5c990c8d8a7abc7df36da549a1", "filename": "src/librustc_target/spec/arm_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Fspec%2Farm_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Fspec%2Farm_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_base.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use syntax::abi::Abi;\n+use spec::abi::Abi;\n \n // All the calling conventions trigger an assertion(Unsupported calling convention) in llvm on arm\n pub fn abi_blacklist() -> Vec<Abi> {"}, {"sha": "1e94f03788586c2fbeac7c3abd4a07f7e53adfa0", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -50,8 +50,9 @@ use std::default::Default;\n use std::{fmt, io};\n use std::path::{Path, PathBuf};\n use std::str::FromStr;\n-use syntax::abi::{Abi, lookup as lookup_abi};\n+use spec::abi::{Abi, lookup as lookup_abi};\n \n+pub mod abi;\n mod android_base;\n mod apple_base;\n mod apple_ios_base;"}, {"sha": "483f36afe27d66e1f0b761166fda0edae03d68f6", "filename": "src/librustc_trans/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_trans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_trans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fabi.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -24,7 +24,7 @@ use rustc::ty::layout;\n \n use libc::c_uint;\n \n-pub use syntax::abi::Abi;\n+pub use rustc_target::spec::abi::Abi;\n pub use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n pub use rustc_target::abi::call::*;\n "}, {"sha": "25ca2152b2768ea849fcc869adb686284aca8043", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -32,7 +32,7 @@ use rustc::hir;\n use libc::{c_uint, c_char};\n use std::iter;\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::symbol::InternedString;\n use syntax_pos::{Span, DUMMY_SP};\n "}, {"sha": "70c13e9b7d637a6599e613a0e84c246954d40018", "filename": "src/librustc_typeck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2FCargo.toml?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -18,5 +18,6 @@ rustc = { path = \"../librustc\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_platform_intrinsics = { path = \"../librustc_platform_intrinsics\" }\n+rustc_target = { path = \"../librustc_target\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "6cdce127308f6583fd3e0c8120802b5f9c3f3473", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -23,14 +23,15 @@ use rustc::ty::subst::{Kind, UnpackedKind, Subst, Substs};\n use rustc::traits;\n use rustc::ty::{self, RegionKind, Ty, TyCtxt, ToPredicate, TypeFoldable};\n use rustc::ty::wf::object_region_bounds;\n+use rustc_target::spec::abi;\n use std::slice;\n use require_c_abi_if_variadic;\n use util::common::ErrorReported;\n use util::nodemap::FxHashSet;\n use errors::FatalError;\n \n use std::iter;\n-use syntax::{abi, ast};\n+use syntax::ast;\n use syntax::feature_gate::{GateIssue, emit_feature_err};\n use syntax_pos::Span;\n "}, {"sha": "4df496763e40a9807d833dc00fe7069b7c70698c", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -17,7 +17,7 @@ use hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::{infer, traits};\n use rustc::ty::{self, TyCtxt, TypeFoldable, Ty};\n use rustc::ty::adjustment::{Adjustment, Adjust, AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n-use syntax::abi;\n+use rustc_target::spec::abi;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n "}, {"sha": "3b9d561ffc5a5f86f883e9aeef8b676a88d52b69", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -23,7 +23,7 @@ use rustc::ty::subst::Substs;\n use rustc::ty::TypeFoldable;\n use std::cmp;\n use std::iter;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::codemap::Span;\n use rustc::hir;\n "}, {"sha": "283fbf8fecc4264ef9c5434432eb2e4baf342092", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -17,7 +17,7 @@ use rustc::ty::{self, TyCtxt, Ty};\n use rustc::util::nodemap::FxHashMap;\n use require_same_types;\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;"}, {"sha": "787df7c647969d354f42916eaede63704a096477", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -118,7 +118,7 @@ use std::fmt::Display;\n use std::mem::replace;\n use std::iter;\n use std::ops::{self, Deref};\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n use syntax::codemap::{original_sp, Spanned};"}, {"sha": "2ebbd64cab90e027c7cf04263b8479b6ad002cf0", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -38,8 +38,9 @@ use rustc::ty::util::IntTypeExt;\n use rustc::ty::util::Discr;\n use rustc::util::captures::Captures;\n use rustc::util::nodemap::FxHashMap;\n+use rustc_target::spec::abi;\n \n-use syntax::{abi, ast};\n+use syntax::ast;\n use syntax::ast::MetaItemKind;\n use syntax::attr::{InlineAttr, list_contains_name, mark_used};\n use syntax::codemap::Spanned;"}, {"sha": "23fe91ffdebb641984993f3b49e7adb431397fe5", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -94,6 +94,7 @@ extern crate rustc_platform_intrinsics as intrinsics;\n extern crate rustc_const_math;\n extern crate rustc_data_structures;\n extern crate rustc_errors as errors;\n+extern crate rustc_target;\n \n use rustc::hir;\n use rustc::lint;\n@@ -111,7 +112,7 @@ use session::{CompileIncomplete, config};\n use util::common::time;\n \n use syntax::ast;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax_pos::Span;\n \n use std::iter;"}, {"sha": "26fba71c8128533810315b0d962f7d0e98a05848", "filename": "src/librustc_typeck/outlives/implicit_infer.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Foutlives%2Fimplicit_infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustc_typeck%2Foutlives%2Fimplicit_infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Fimplicit_infer.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -23,7 +23,8 @@ use rustc::ty::{self, AdtKind, CratePredicatesMap, Region, RegionKind, ReprOptio\n                 ToPolyTraitRef, ToPredicate, Ty, TyCtxt};\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n-use syntax::{abi, ast};\n+use rustc_target::spec::abi;\n+use syntax::ast;\n use syntax_pos::{Span, DUMMY_SP};\n \n /// Infer predicates for the items in the crate."}, {"sha": "fb05cbfe32c70a8514d671d91733afff4a9cada7", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -20,7 +20,7 @@ pub use self::FunctionRetTy::*;\n pub use self::Visibility::*;\n \n use syntax;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, AttrStyle, Ident};\n use syntax::attr;\n use syntax::codemap::{dummy_spanned, Spanned};"}, {"sha": "f85a70a6d401f24c5bcb09f4923426df1b74b1cd", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -13,7 +13,7 @@\n pub use self::StructType::*;\n pub use self::TypeBound::*;\n \n-use syntax::abi;\n+use rustc_target::spec::abi;\n use syntax::ast;\n use syntax::ast::{Name, NodeId};\n use syntax::attr;"}, {"sha": "a9a4c5113747ec685f80ce7c6f74ef4097a3a669", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -19,7 +19,7 @@ use std::fmt;\n use std::iter::repeat;\n \n use rustc::hir::def_id::DefId;\n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use rustc::hir;\n \n use clean::{self, PrimitiveType};"}, {"sha": "82449e9b5f90a68220d7fc1b657b7f7c510d113b", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -54,14 +54,15 @@ use std::sync::Arc;\n use externalfiles::ExternalHtml;\n \n use serialize::json::{ToJson, Json, as_json};\n-use syntax::{abi, ast};\n+use syntax::ast;\n use syntax::codemap::FileName;\n use rustc::hir::def_id::{CrateNum, CRATE_DEF_INDEX, DefId};\n use rustc::middle::privacy::AccessLevels;\n use rustc::middle::stability;\n use rustc::hir;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::flock;\n+use rustc_target::spec::abi;\n \n use clean::{self, AttributesExt, GetDefId, SelfTy, Mutability};\n use doctree;"}, {"sha": "614386a583a7772ae76c30af1779791da9e70439", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -36,6 +36,7 @@ extern crate rustc_driver;\n extern crate rustc_resolve;\n extern crate rustc_lint;\n extern crate rustc_metadata;\n+extern crate rustc_target;\n extern crate rustc_typeck;\n extern crate serialize;\n #[macro_use] extern crate syntax;"}, {"sha": "967c50e62db5dde41a6ad138fba57742a2362b6e", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -13,7 +13,7 @@\n \n use std::mem;\n \n-use syntax::abi;\n+use rustc_target::spec::abi;\n use syntax::ast;\n use syntax::attr;\n use syntax_pos::Span;"}, {"sha": "d1a5ab0211b3b08f57c02c3a5e686e838fd011db", "filename": "src/libsyntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2FCargo.toml?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -14,6 +14,6 @@ serialize = { path = \"../libserialize\" }\n log = \"0.4\"\n scoped-tls = \"0.1\"\n syntax_pos = { path = \"../libsyntax_pos\" }\n-rustc_cratesio_shim = { path = \"../librustc_cratesio_shim\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_target = { path = \"../librustc_target\" }"}, {"sha": "cbfcad12f1e52f772ff5dccac6b0e74ba2243f7a", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -19,7 +19,7 @@ pub use util::parser::ExprPrecedence;\n \n use syntax_pos::{Span, DUMMY_SP};\n use codemap::{respan, Spanned};\n-use abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use ext::hygiene::{Mark, SyntaxContext};\n use print::pprust;\n use ptr::P;"}, {"sha": "0b64189b2bc2b55aac5d395b816889c34d3df96e", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use ast::{self, Ident, Generics, Expr, BlockCheckMode, UnOp, PatKind};\n use attr;\n use syntax_pos::{Pos, Span, DUMMY_SP};"}, {"sha": "0331e90164f0c763e41acde31537f49de1985db1", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -25,7 +25,7 @@\n use self::AttributeType::*;\n use self::AttributeGate::*;\n \n-use abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use ast::{self, NodeId, PatKind, RangeEnd};\n use attr;\n use edition::{ALL_EDITIONS, Edition};"}, {"sha": "870ce1926ade43995c4da7a627b03c43f799a58d", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -28,17 +28,14 @@\n \n #![recursion_limit=\"256\"]\n \n-// See librustc_cratesio_shim/Cargo.toml for a comment explaining this.\n-#[allow(unused_extern_crates)]\n-extern crate rustc_cratesio_shim;\n-\n #[macro_use] extern crate bitflags;\n extern crate core;\n extern crate serialize;\n #[macro_use] extern crate log;\n pub extern crate rustc_errors as errors;\n extern crate syntax_pos;\n extern crate rustc_data_structures;\n+extern crate rustc_target;\n #[macro_use] extern crate scoped_tls;\n \n extern crate serialize as rustc_serialize; // used by deriving\n@@ -138,7 +135,6 @@ pub mod syntax {\n     pub use ast;\n }\n \n-pub mod abi;\n pub mod ast;\n pub mod attr;\n pub mod codemap;"}, {"sha": "ff09c6aa2f006c9f7f23eb197ddd012e65927c72", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -678,7 +678,7 @@ mod tests {\n     use syntax_pos::{self, Span, BytePos, Pos, NO_EXPANSION};\n     use codemap::{respan, Spanned};\n     use ast::{self, Ident, PatKind};\n-    use abi::Abi;\n+    use rustc_target::spec::abi::Abi;\n     use attr::first_attr_value_str_by_name;\n     use parse;\n     use parse::parser::Parser;"}, {"sha": "324cadc84e862722281a3a07950a19206f7eb410", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use abi::{self, Abi};\n+use rustc_target::spec::abi::{self, Abi};\n use ast::{AngleBracketedParameterData, ParenthesizedParameterData, AttrStyle, BareFnTy};\n use ast::{RegionTyParamBound, TraitTyParamBound, TraitBoundModifier};\n use ast::Unsafety;"}, {"sha": "88860df10e2c3766fb60755d96fff84838671154", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -10,7 +10,7 @@\n \n pub use self::AnnNode::*;\n \n-use abi::{self, Abi};\n+use rustc_target::spec::abi::{self, Abi};\n use ast::{self, BlockCheckMode, PatKind, RangeEnd, RangeSyntax};\n use ast::{SelfKind, RegionTyParamBound, TraitTyParamBound, TraitBoundModifier};\n use ast::Attribute;"}, {"sha": "e2a9f8715e24fd3097ef654cd32f23781c452952", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -563,7 +563,7 @@ fn mk_main(cx: &mut TestCtxt) -> P<ast::Item> {\n     let main = ast::ItemKind::Fn(ecx.fn_decl(vec![], ast::FunctionRetTy::Ty(main_ret_ty)),\n                            ast::Unsafety::Normal,\n                            dummy_spanned(ast::Constness::NotConst),\n-                           ::abi::Abi::Rust, ast::Generics::default(), main_body);\n+                           ::rustc_target::spec::abi::Abi::Rust, ast::Generics::default(), main_body);\n     P(ast::Item {\n         ident: Ident::from_str(\"main\"),\n         attrs: vec![main_attr],"}, {"sha": "40d59d3ff8b8d0c7c980b467dbd66b57e6bca1a6", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -23,7 +23,7 @@\n //! instance, a walker looking for item names in a module will miss all of\n //! those that are created by the expansion of a macro.\n \n-use abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use ast::*;\n use syntax_pos::Span;\n use codemap::Spanned;"}, {"sha": "1676757d9b89da186cae413333749efe3a85f9fa", "filename": "src/libsyntax_ext/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax_ext%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax_ext%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2FCargo.toml?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -14,4 +14,5 @@ proc_macro = { path = \"../libproc_macro\" }\n rustc_errors = { path = \"../librustc_errors\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n-rustc_data_structures = { path = \"../librustc_data_structures\" }\n\\ No newline at end of file\n+rustc_data_structures = { path = \"../librustc_data_structures\" }\n+rustc_target = { path = \"../librustc_target\" }\n\\ No newline at end of file"}, {"sha": "becd70149fd1e96b3964623b459c3b8fb3f96264", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -191,7 +191,7 @@ use std::cell::RefCell;\n use std::collections::HashSet;\n use std::vec;\n \n-use syntax::abi::Abi;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast::{\n     self, BinOpKind, EnumDef, Expr, GenericParam, Generics, Ident, PatKind, VariantData\n };"}, {"sha": "b6721dd28f3674d008f709112a76222aab38c07e", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04fa0e7bb3e462080be4a6cee45fd94b1c27d287/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=04fa0e7bb3e462080be4a6cee45fd94b1c27d287", "patch": "@@ -27,6 +27,7 @@ extern crate syntax_pos;\n extern crate proc_macro;\n extern crate rustc_data_structures;\n extern crate rustc_errors as errors;\n+extern crate rustc_target;\n \n #[cfg(not(stage0))]\n mod diagnostics;"}]}