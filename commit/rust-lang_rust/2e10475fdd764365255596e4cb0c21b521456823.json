{"sha": "2e10475fdd764365255596e4cb0c21b521456823", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMTA0NzVmZGQ3NjQzNjUyNTU1OTZlNGNiMGMyMWI1MjE0NTY4MjM=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2020-09-23T21:14:43Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2020-10-28T15:44:59Z"}, "message": "rustdoc: js: Use getSettingValue for all rustdoc-* values\n\nCurrently, storage.js and main.js have many open-coded calls to\ngetCurrentValue for \"rustdoc-\" values, but these are settings and\nshould be handled by getSettingValue.\n\nSo make getSettingValue part of storage.js (where everyone can call\nit) and use it everywhere.\n\nNo functional change yet.  We are going to make getSettingValue do\nsomething more sophisticated in a moment.\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "dd5d1bad4aac66aced836bccc11f8aa589071c58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd5d1bad4aac66aced836bccc11f8aa589071c58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e10475fdd764365255596e4cb0c21b521456823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e10475fdd764365255596e4cb0c21b521456823", "html_url": "https://github.com/rust-lang/rust/commit/2e10475fdd764365255596e4cb0c21b521456823", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e10475fdd764365255596e4cb0c21b521456823/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2eb4fc800aaf5006f89af3af591e2aa34f469d81", "url": "https://api.github.com/repos/rust-lang/rust/commits/2eb4fc800aaf5006f89af3af591e2aa34f469d81", "html_url": "https://github.com/rust-lang/rust/commit/2eb4fc800aaf5006f89af3af591e2aa34f469d81"}], "stats": {"total": 49, "additions": 25, "deletions": 24}, "files": [{"sha": "28bd1ba5247d600858c77bff1c08889fa271480c", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2e10475fdd764365255596e4cb0c21b521456823/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/2e10475fdd764365255596e4cb0c21b521456823/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=2e10475fdd764365255596e4cb0c21b521456823", "patch": "@@ -89,7 +89,7 @@ function defocusSearchBar() {\n                      \"derive\",\n                      \"traitalias\"];\n \n-    var disableShortcuts = getCurrentValue(\"rustdoc-disable-shortcuts\") === \"true\";\n+    var disableShortcuts = getSettingValue(\"disable-shortcuts\") === \"true\";\n     var search_input = getSearchInput();\n     var searchTimeout = null;\n     var toggleAllDocsId = \"toggle-all-docs\";\n@@ -1580,7 +1580,7 @@ function defocusSearchBar() {\n         function showResults(results) {\n             var search = getSearchElement();\n             if (results.others.length === 1\n-                && getCurrentValue(\"rustdoc-go-to-only-result\") === \"true\"\n+                && getSettingValue(\"go-to-only-result\") === \"true\"\n                 // By default, the search DOM element is \"empty\" (meaning it has no children not\n                 // text content). Once a search has been run, it won't be empty, even if you press\n                 // ESC or empty the search input (which also \"cancels\" the search).\n@@ -2296,7 +2296,7 @@ function defocusSearchBar() {\n     function autoCollapse(pageId, collapse) {\n         if (collapse) {\n             toggleAllDocs(pageId, true);\n-        } else if (getCurrentValue(\"rustdoc-auto-hide-trait-implementations\") !== \"false\") {\n+        } else if (getSettingValue(\"auto-hide-trait-implementations\") !== \"false\") {\n             var impl_list = document.getElementById(\"trait-implementations-list\");\n \n             if (impl_list !== null) {\n@@ -2370,8 +2370,8 @@ function defocusSearchBar() {\n         }\n \n         var toggle = createSimpleToggle(false);\n-        var hideMethodDocs = getCurrentValue(\"rustdoc-auto-hide-method-docs\") === \"true\";\n-        var hideImplementors = getCurrentValue(\"rustdoc-auto-collapse-implementors\") !== \"false\";\n+        var hideMethodDocs = getSettingValue(\"auto-hide-method-docs\") === \"true\";\n+        var hideImplementors = getSettingValue(\"auto-collapse-implementors\") !== \"false\";\n         var pageId = getPageId();\n \n         var func = function(e) {\n@@ -2487,15 +2487,15 @@ function defocusSearchBar() {\n                 });\n             }\n         }\n-        var showItemDeclarations = getCurrentValue(\"rustdoc-auto-hide-\" + className);\n+        var showItemDeclarations = getSettingValue(\"auto-hide-\" + className);\n         if (showItemDeclarations === null) {\n             if (className === \"enum\" || className === \"macro\") {\n                 showItemDeclarations = \"false\";\n             } else if (className === \"struct\" || className === \"union\" || className === \"trait\") {\n                 showItemDeclarations = \"true\";\n             } else {\n                 // In case we found an unknown type, we just use the \"parent\" value.\n-                showItemDeclarations = getCurrentValue(\"rustdoc-auto-hide-declarations\");\n+                showItemDeclarations = getSettingValue(\"auto-hide-declarations\");\n             }\n         }\n         showItemDeclarations = showItemDeclarations === \"false\";\n@@ -2569,7 +2569,7 @@ function defocusSearchBar() {\n         onEachLazy(document.getElementsByClassName(\"sub-variant\"), buildToggleWrapper);\n         var pageId = getPageId();\n \n-        autoCollapse(pageId, getCurrentValue(\"rustdoc-collapse\") === \"true\");\n+        autoCollapse(pageId, getSettingValue(\"collapse\") === \"true\");\n \n         if (pageId !== null) {\n             expandSection(pageId);\n@@ -2592,7 +2592,7 @@ function defocusSearchBar() {\n     (function() {\n         // To avoid checking on \"rustdoc-item-attributes\" value on every loop...\n         var itemAttributesFunc = function() {};\n-        if (getCurrentValue(\"rustdoc-auto-hide-attributes\") !== \"false\") {\n+        if (getSettingValue(\"auto-hide-attributes\") !== \"false\") {\n             itemAttributesFunc = function(x) {\n                 collapseDocs(x.previousSibling.childNodes[0], \"toggle\");\n             };\n@@ -2611,7 +2611,7 @@ function defocusSearchBar() {\n     (function() {\n         // To avoid checking on \"rustdoc-line-numbers\" value on every loop...\n         var lineNumbersFunc = function() {};\n-        if (getCurrentValue(\"rustdoc-line-numbers\") === \"true\") {\n+        if (getSettingValue(\"line-numbers\") === \"true\") {\n             lineNumbersFunc = function(x) {\n                 var count = x.textContent.split(\"\\n\").length;\n                 var elems = [];\n@@ -2768,7 +2768,7 @@ function defocusSearchBar() {\n             }\n             return 0;\n         });\n-        var savedCrate = getCurrentValue(\"rustdoc-saved-filter-crate\");\n+        var savedCrate = getSettingValue(\"saved-filter-crate\");\n         for (var i = 0; i < crates_text.length; ++i) {\n             var option = document.createElement(\"option\");\n             option.value = crates_text[i];"}, {"sha": "da3378ccf0dd06f128ccdd11116fa427ff08622f", "filename": "src/librustdoc/html/static/settings.js", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e10475fdd764365255596e4cb0c21b521456823/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/2e10475fdd764365255596e4cb0c21b521456823/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.js?ref=2e10475fdd764365255596e4cb0c21b521456823", "patch": "@@ -14,10 +14,6 @@\n         }\n     }\n \n-    function getSettingValue(settingName) {\n-        return getCurrentValue(\"rustdoc-\" + settingName);\n-    }\n-\n     function setEvents() {\n         var elems = {\n             toggles: document.getElementsByClassName(\"slider\"),"}, {"sha": "179d713205759f3a0cd80bd645c2032a29efcbeb", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2e10475fdd764365255596e4cb0c21b521456823/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/2e10475fdd764365255596e4cb0c21b521456823/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=2e10475fdd764365255596e4cb0c21b521456823", "patch": "@@ -1,10 +1,15 @@\n // From rust:\n-/* global resourcesSuffix */\n+/* global resourcesSuffix, getSettingValue */\n \n var darkThemes = [\"dark\", \"ayu\"];\n var currentTheme = document.getElementById(\"themeStyle\");\n var mainTheme = document.getElementById(\"mainThemeStyle\");\n-var localStoredTheme = getCurrentValue(\"rustdoc-theme\");\n+\n+function getSettingValue(settingName) {\n+    return getCurrentValue('rustdoc-' + settingName);\n+}\n+\n+var localStoredTheme = getSettingValue(\"theme\");\n \n var savedHref = [];\n \n@@ -156,9 +161,9 @@ var updateSystemTheme = (function() {\n \n     function handlePreferenceChange(mql) {\n         // maybe the user has disabled the setting in the meantime!\n-        if (getCurrentValue(\"rustdoc-use-system-theme\") !== \"false\") {\n-            var lightTheme = getCurrentValue(\"rustdoc-preferred-light-theme\") || \"light\";\n-            var darkTheme = getCurrentValue(\"rustdoc-preferred-dark-theme\") || \"dark\";\n+        if (getSettingValue(\"use-system-theme\") !== \"false\") {\n+            var lightTheme = getSettingValue(\"preferred-light-theme\") || \"light\";\n+            var darkTheme = getSettingValue(\"preferred-dark-theme\") || \"dark\";\n \n             if (mql.matches) {\n                 // prefers a dark theme\n@@ -181,11 +186,11 @@ var updateSystemTheme = (function() {\n     };\n })();\n \n-if (getCurrentValue(\"rustdoc-use-system-theme\") !== \"false\" && window.matchMedia) {\n+if (getSettingValue(\"use-system-theme\") !== \"false\" && window.matchMedia) {\n     // update the preferred dark theme if the user is already using a dark theme\n     // See https://github.com/rust-lang/rust/pull/77809#issuecomment-707875732\n-    if (getCurrentValue(\"rustdoc-use-system-theme\") === null\n-        && getCurrentValue(\"rustdoc-preferred-dark-theme\") === null\n+    if (getSettingValue(\"use-system-theme\") === null\n+        && getSettingValue(\"preferred-dark-theme\") === null\n         && darkThemes.indexOf(localStoredTheme) >= 0) {\n         updateLocalStorage(\"rustdoc-preferred-dark-theme\", localStoredTheme);\n     }\n@@ -196,7 +201,7 @@ if (getCurrentValue(\"rustdoc-use-system-theme\") !== \"false\" && window.matchMedia\n     switchTheme(\n         currentTheme,\n         mainTheme,\n-        getCurrentValue(\"rustdoc-theme\") || \"light\",\n+        getSettingValue(\"theme\") || \"light\",\n         false\n     );\n }"}]}