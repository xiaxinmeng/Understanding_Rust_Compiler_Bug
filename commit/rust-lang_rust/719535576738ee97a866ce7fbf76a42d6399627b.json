{"sha": "719535576738ee97a866ce7fbf76a42d6399627b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOTUzNTU3NjczOGVlOTdhODY2Y2U3ZmJmNzZhNDJkNjM5OTYyN2I=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-30T19:17:18Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-02T00:29:15Z"}, "message": "Add `declare_rustdoc_lint!` macro", "tree": {"sha": "300d4a1a9cfc73ec7a059e489dce9d9503fbd373", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/300d4a1a9cfc73ec7a059e489dce9d9503fbd373"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/719535576738ee97a866ce7fbf76a42d6399627b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/719535576738ee97a866ce7fbf76a42d6399627b", "html_url": "https://github.com/rust-lang/rust/commit/719535576738ee97a866ce7fbf76a42d6399627b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/719535576738ee97a866ce7fbf76a42d6399627b/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37e4cfe5125e1d8d29fd1a66c7f80109c25618fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/37e4cfe5125e1d8d29fd1a66c7f80109c25618fb", "html_url": "https://github.com/rust-lang/rust/commit/37e4cfe5125e1d8d29fd1a66c7f80109c25618fb"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "013b7ead5c7c98e3aec1694ce5abe18981c1581a", "filename": "src/librustdoc/lint.rs", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/719535576738ee97a866ce7fbf76a42d6399627b/src%2Flibrustdoc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/719535576738ee97a866ce7fbf76a42d6399627b/src%2Flibrustdoc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flint.rs?ref=719535576738ee97a866ce7fbf76a42d6399627b", "patch": "@@ -63,78 +63,86 @@ where\n     (lint_opts, lint_caps)\n }\n \n-declare_tool_lint! {\n+macro_rules! declare_rustdoc_lint {\n+    ($(#[$attr:meta])* $name: ident, $level: ident, $descr: literal $(,)?) => {\n+        declare_tool_lint! {\n+            $(#[$attr])* pub rustdoc::$name, $level, $descr\n+        }\n+    }\n+}\n+\n+declare_rustdoc_lint! {\n     /// The `broken_intra_doc_links` lint detects failures in resolving\n     /// intra-doc link targets. This is a `rustdoc` only lint, see the\n     /// documentation in the [rustdoc book].\n     ///\n     /// [rustdoc book]: ../../../rustdoc/lints.html#broken_intra_doc_links\n-    pub rustdoc::BROKEN_INTRA_DOC_LINKS,\n+    BROKEN_INTRA_DOC_LINKS,\n     Warn,\n     \"failures in resolving intra-doc link targets\"\n }\n \n-declare_tool_lint! {\n+declare_rustdoc_lint! {\n     /// This is a subset of `broken_intra_doc_links` that warns when linking from\n     /// a public item to a private one. This is a `rustdoc` only lint, see the\n     /// documentation in the [rustdoc book].\n     ///\n     /// [rustdoc book]: ../../../rustdoc/lints.html#private_intra_doc_links\n-    pub rustdoc::PRIVATE_INTRA_DOC_LINKS,\n+    PRIVATE_INTRA_DOC_LINKS,\n     Warn,\n     \"linking from a public item to a private one\"\n }\n \n-declare_tool_lint! {\n+declare_rustdoc_lint! {\n     /// The `invalid_codeblock_attributes` lint detects code block attributes\n     /// in documentation examples that have potentially mis-typed values. This\n     /// is a `rustdoc` only lint, see the documentation in the [rustdoc book].\n     ///\n     /// [rustdoc book]: ../../../rustdoc/lints.html#invalid_codeblock_attributes\n-    pub rustdoc::INVALID_CODEBLOCK_ATTRIBUTES,\n+    INVALID_CODEBLOCK_ATTRIBUTES,\n     Warn,\n     \"codeblock attribute looks a lot like a known one\"\n }\n \n-declare_tool_lint! {\n+declare_rustdoc_lint! {\n     /// The `missing_doc_code_examples` lint detects publicly-exported items\n     /// without code samples in their documentation. This is a `rustdoc` only\n     /// lint, see the documentation in the [rustdoc book].\n     ///\n     /// [rustdoc book]: ../../../rustdoc/lints.html#missing_doc_code_examples\n-    pub rustdoc::MISSING_DOC_CODE_EXAMPLES,\n+    MISSING_DOC_CODE_EXAMPLES,\n     Allow,\n     \"detects publicly-exported items without code samples in their documentation\"\n }\n \n-declare_tool_lint! {\n+declare_rustdoc_lint! {\n     /// The `private_doc_tests` lint detects code samples in docs of private\n     /// items not documented by `rustdoc`. This is a `rustdoc` only lint, see\n     /// the documentation in the [rustdoc book].\n     ///\n     /// [rustdoc book]: ../../../rustdoc/lints.html#private_doc_tests\n-    pub rustdoc::PRIVATE_DOC_TESTS,\n+    PRIVATE_DOC_TESTS,\n     Allow,\n     \"detects code samples in docs of private items not documented by rustdoc\"\n }\n \n-declare_tool_lint! {\n+declare_rustdoc_lint! {\n     /// The `invalid_html_tags` lint detects invalid HTML tags. This is a\n     /// `rustdoc` only lint, see the documentation in the [rustdoc book].\n     ///\n     /// [rustdoc book]: ../../../rustdoc/lints.html#invalid_html_tags\n-    pub rustdoc::INVALID_HTML_TAGS,\n+    INVALID_HTML_TAGS,\n     Allow,\n     \"detects invalid HTML tags in doc comments\"\n }\n \n-declare_tool_lint! {\n+declare_rustdoc_lint! {\n     /// The `non_autolinks` lint detects when a URL could be written using\n     /// only angle brackets. This is a `rustdoc` only lint, see the\n     /// documentation in the [rustdoc book].\n     ///\n     /// [rustdoc book]: ../../../rustdoc/lints.html#non_autolinks\n-    pub rustdoc::NON_AUTOLINKS,\n+    NON_AUTOLINKS,\n     Warn,\n     \"detects URLs that could be written using only angle brackets\"\n }"}]}