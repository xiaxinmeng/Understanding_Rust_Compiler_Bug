{"sha": "7a52932f4cd65f57bcc8d77f12e32066b2a9c432", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNTI5MzJmNGNkNjVmNTdiY2M4ZDc3ZjEyZTMyMDY2YjJhOWM0MzI=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "root@localhost", "date": "2015-02-13T19:31:09Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-02-14T00:32:42Z"}, "message": "Make std::raw::Repr an unsafe trait\n\nThe default implementation of .repr() will call conveniently call\ntransmute_copy which should be appropriate for all implementors, but is\nmemory unsafe if used wrong.\n\nFixes #22260\n\nYou need to use `unsafe impl` to implement the Repr trait now.\n\n[breaking-change]", "tree": {"sha": "383cdfcd296f2d0eb92f59fbfbfe3048d14b425c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/383cdfcd296f2d0eb92f59fbfbfe3048d14b425c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a52932f4cd65f57bcc8d77f12e32066b2a9c432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a52932f4cd65f57bcc8d77f12e32066b2a9c432", "html_url": "https://github.com/rust-lang/rust/commit/7a52932f4cd65f57bcc8d77f12e32066b2a9c432", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a52932f4cd65f57bcc8d77f12e32066b2a9c432/comments", "author": {"login": "invalid-email-address", "id": 148100, "node_id": "MDQ6VXNlcjE0ODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/148100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/invalid-email-address", "html_url": "https://github.com/invalid-email-address", "followers_url": "https://api.github.com/users/invalid-email-address/followers", "following_url": "https://api.github.com/users/invalid-email-address/following{/other_user}", "gists_url": "https://api.github.com/users/invalid-email-address/gists{/gist_id}", "starred_url": "https://api.github.com/users/invalid-email-address/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/invalid-email-address/subscriptions", "organizations_url": "https://api.github.com/users/invalid-email-address/orgs", "repos_url": "https://api.github.com/users/invalid-email-address/repos", "events_url": "https://api.github.com/users/invalid-email-address/events{/privacy}", "received_events_url": "https://api.github.com/users/invalid-email-address/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e3ae102dbeeb646e8c7d2d423cea263337a76af", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e3ae102dbeeb646e8c7d2d423cea263337a76af", "html_url": "https://github.com/rust-lang/rust/commit/5e3ae102dbeeb646e8c7d2d423cea263337a76af"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "bb0c22d3561d26138a8b6cadd49e8fb6a4be2d34", "filename": "src/libcore/raw.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7a52932f4cd65f57bcc8d77f12e32066b2a9c432/src%2Flibcore%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a52932f4cd65f57bcc8d77f12e32066b2a9c432/src%2Flibcore%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fraw.rs?ref=7a52932f4cd65f57bcc8d77f12e32066b2a9c432", "patch": "@@ -154,7 +154,7 @@ pub struct TraitObject {\n \n /// This trait is meant to map equivalences between raw structs and their\n /// corresponding rust values.\n-pub trait Repr<T> {\n+pub unsafe trait Repr<T> {\n     /// This function \"unwraps\" a rust value (without consuming it) into its raw\n     /// struct representation. This can be used to read/write different values\n     /// for the struct. This is a safe method because by default it does not\n@@ -163,5 +163,5 @@ pub trait Repr<T> {\n     fn repr(&self) -> T { unsafe { mem::transmute_copy(&self) } }\n }\n \n-impl<T> Repr<Slice<T>> for [T] {}\n-impl Repr<Slice<u8>> for str {}\n+unsafe impl<T> Repr<Slice<T>> for [T] {}\n+unsafe impl Repr<Slice<u8>> for str {}"}]}