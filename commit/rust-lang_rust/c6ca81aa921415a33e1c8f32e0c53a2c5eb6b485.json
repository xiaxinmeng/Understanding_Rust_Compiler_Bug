{"sha": "c6ca81aa921415a33e1c8f32e0c53a2c5eb6b485", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2Y2E4MWFhOTIxNDE1YTMzZTFjOGYzMmUwYzUzYTJjNWViNmI0ODU=", "commit": {"author": {"name": "Djzin", "email": "djzin@users.noreply.github.com", "date": "2017-04-24T06:40:11Z"}, "committer": {"name": "Djzin", "email": "djzin@users.noreply.github.com", "date": "2017-04-24T06:40:11Z"}, "message": "change wording", "tree": {"sha": "6d5bdc9ec3fec837e33bb1204c1de026196b0a42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d5bdc9ec3fec837e33bb1204c1de026196b0a42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6ca81aa921415a33e1c8f32e0c53a2c5eb6b485", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6ca81aa921415a33e1c8f32e0c53a2c5eb6b485", "html_url": "https://github.com/rust-lang/rust/commit/c6ca81aa921415a33e1c8f32e0c53a2c5eb6b485", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6ca81aa921415a33e1c8f32e0c53a2c5eb6b485/comments", "author": {"login": "djzin", "id": 22416015, "node_id": "MDQ6VXNlcjIyNDE2MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/22416015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djzin", "html_url": "https://github.com/djzin", "followers_url": "https://api.github.com/users/djzin/followers", "following_url": "https://api.github.com/users/djzin/following{/other_user}", "gists_url": "https://api.github.com/users/djzin/gists{/gist_id}", "starred_url": "https://api.github.com/users/djzin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djzin/subscriptions", "organizations_url": "https://api.github.com/users/djzin/orgs", "repos_url": "https://api.github.com/users/djzin/repos", "events_url": "https://api.github.com/users/djzin/events{/privacy}", "received_events_url": "https://api.github.com/users/djzin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "djzin", "id": 22416015, "node_id": "MDQ6VXNlcjIyNDE2MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/22416015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djzin", "html_url": "https://github.com/djzin", "followers_url": "https://api.github.com/users/djzin/followers", "following_url": "https://api.github.com/users/djzin/following{/other_user}", "gists_url": "https://api.github.com/users/djzin/gists{/gist_id}", "starred_url": "https://api.github.com/users/djzin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djzin/subscriptions", "organizations_url": "https://api.github.com/users/djzin/orgs", "repos_url": "https://api.github.com/users/djzin/repos", "events_url": "https://api.github.com/users/djzin/events{/privacy}", "received_events_url": "https://api.github.com/users/djzin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2816998d1e702a8597c07100856e2483590f3e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2816998d1e702a8597c07100856e2483590f3e2a", "html_url": "https://github.com/rust-lang/rust/commit/2816998d1e702a8597c07100856e2483590f3e2a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e51976c4845ec40e80d67aa93cb6f0df21b87b87", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6ca81aa921415a33e1c8f32e0c53a2c5eb6b485/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6ca81aa921415a33e1c8f32e0c53a2c5eb6b485/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=c6ca81aa921415a33e1c8f32e0c53a2c5eb6b485", "patch": "@@ -109,7 +109,7 @@ pub use intrinsics::transmute;\n /// [`Clone`][clone]. You need the value's destructor to run only once,\n /// because a double `free` is undefined behavior.\n ///\n-/// An example is the (old) definition of [`mem::swap`][swap] in this module:\n+/// An example is a possible implementation of [`mem::swap`][swap]:\n ///\n /// ```\n /// use std::mem;"}]}