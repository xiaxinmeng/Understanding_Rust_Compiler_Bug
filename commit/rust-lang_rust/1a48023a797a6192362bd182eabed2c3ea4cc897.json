{"sha": "1a48023a797a6192362bd182eabed2c3ea4cc897", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNDgwMjNhNzk3YTYxOTIzNjJiZDE4MmVhYmVkMmMzZWE0Y2M4OTc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-23T01:05:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-23T01:05:36Z"}, "message": "Add take glue for unique boxes\n\nCloses #962\nIssue #409", "tree": {"sha": "4eee6974de4d7e3beea1ded67d4aaa8a3a861ca7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eee6974de4d7e3beea1ded67d4aaa8a3a861ca7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a48023a797a6192362bd182eabed2c3ea4cc897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a48023a797a6192362bd182eabed2c3ea4cc897", "html_url": "https://github.com/rust-lang/rust/commit/1a48023a797a6192362bd182eabed2c3ea4cc897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a48023a797a6192362bd182eabed2c3ea4cc897/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77fcab043ed7c85338997ae57921ada903a782f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/77fcab043ed7c85338997ae57921ada903a782f1", "html_url": "https://github.com/rust-lang/rust/commit/77fcab043ed7c85338997ae57921ada903a782f1"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "0c90de1ac38a178ed9d8b49338b0148dcee51526", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1a48023a797a6192362bd182eabed2c3ea4cc897/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a48023a797a6192362bd182eabed2c3ea4cc897/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=1a48023a797a6192362bd182eabed2c3ea4cc897", "patch": "@@ -1295,6 +1295,9 @@ fn make_take_glue(cx: @block_ctxt, v: ValueRef, t: ty::t) {\n     // NB: v is an *alias* of type t here, not a direct value.\n     if ty::type_is_boxed(bcx_tcx(bcx), t) {\n         bcx = incr_refcnt_of_boxed(bcx, Load(bcx, v));\n+    } else if ty::type_is_unique_box(bcx_tcx(bcx), t) {\n+        check trans_uniq::type_is_unique_box(bcx, t);\n+        bcx = trans_uniq::duplicate(bcx, v, t);\n     } else if ty::type_is_structural(bcx_tcx(bcx), t) {\n         bcx = iter_structural_ty(bcx, v, t, take_ty);\n     } else if ty::type_is_vec(bcx_tcx(bcx), t) {"}, {"sha": "a7649961c745eec967827f16f8a4416cbea8daa4", "filename": "src/comp/middle/trans_uniq.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1a48023a797a6192362bd182eabed2c3ea4cc897/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a48023a797a6192362bd182eabed2c3ea4cc897/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_uniq.rs?ref=1a48023a797a6192362bd182eabed2c3ea4cc897", "patch": "@@ -15,7 +15,8 @@ import trans::{\n     new_sub_block_ctxt\n };\n \n-export trans_uniq, make_free_glue, type_is_unique_box, copy_val, autoderef;\n+export trans_uniq, make_free_glue, type_is_unique_box, copy_val,\n+autoderef, duplicate;\n \n pure fn type_is_unique_box(bcx: @block_ctxt, ty: ty::t) -> bool {\n     unchecked {\n@@ -106,4 +107,17 @@ fn autoderef(bcx: @block_ctxt, v: ValueRef, t: ty::t)\n \n     let content_ty = content_ty(bcx, t);\n     ret {v: v, t: content_ty};\n+}\n+\n+fn duplicate(bcx: @block_ctxt, v: ValueRef, t: ty::t)\n+    : type_is_unique_box(bcx, t) -> @block_ctxt {\n+\n+    let content_ty = content_ty(bcx, t);\n+    let {bcx, val: llptr} = alloc_uniq(bcx, t);\n+\n+    let src = Load(bcx, Load(bcx, v));\n+    let dst = llptr;\n+    let bcx = trans::copy_val(bcx, INIT, dst, src, content_ty);\n+    Store(bcx, dst, v);\n+    ret bcx;\n }\n\\ No newline at end of file"}, {"sha": "7a10de278ea9befa7f37ff4939113e0da6c33ac4", "filename": "src/test/run-pass/unique-assign-generic.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1a48023a797a6192362bd182eabed2c3ea4cc897/src%2Ftest%2Frun-pass%2Funique-assign-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a48023a797a6192362bd182eabed2c3ea4cc897/src%2Ftest%2Frun-pass%2Funique-assign-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-assign-generic.rs?ref=1a48023a797a6192362bd182eabed2c3ea4cc897", "patch": "@@ -0,0 +1,11 @@\n+fn f<@T>(t: T) -> T {\n+    let t1 = t;\n+    t1\n+}\n+\n+fn main() {\n+    let t = f(~100);\n+    assert t == ~100;\n+    let t = f(~@[100]);\n+    assert t == ~@[100];\n+}"}]}