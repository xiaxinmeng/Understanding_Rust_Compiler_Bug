{"sha": "9798a88e9ecfc8354653b225c681cd533a88505d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3OThhODhlOWVjZmM4MzU0NjUzYjIyNWM2ODFjZDUzM2E4ODUwNWQ=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-09-19T10:13:09Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-09-20T09:34:28Z"}, "message": "incr.comp.: Add some comments.", "tree": {"sha": "e7ab08dfec7eb51373bdf15d5de19412de58769c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7ab08dfec7eb51373bdf15d5de19412de58769c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9798a88e9ecfc8354653b225c681cd533a88505d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9798a88e9ecfc8354653b225c681cd533a88505d", "html_url": "https://github.com/rust-lang/rust/commit/9798a88e9ecfc8354653b225c681cd533a88505d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9798a88e9ecfc8354653b225c681cd533a88505d/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47d14ccd514f00fbdc46c02156438a62b1f29527", "url": "https://api.github.com/repos/rust-lang/rust/commits/47d14ccd514f00fbdc46c02156438a62b1f29527", "html_url": "https://github.com/rust-lang/rust/commit/47d14ccd514f00fbdc46c02156438a62b1f29527"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "90a29b6348245fb24eb7b798b7a89ce2330cf3b8", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=9798a88e9ecfc8354653b225c681cd533a88505d", "patch": "@@ -27,6 +27,14 @@ use super::edges::{DepGraphEdges, DepNodeIndex};\n #[derive(Clone)]\n pub struct DepGraph {\n     data: Option<Rc<DepGraphData>>,\n+\n+    // At the moment we are using DepNode as key here. In the future it might\n+    // be possible to use an IndexVec<DepNodeIndex, _> here. At the moment there\n+    // are a few problems with that:\n+    // - Some fingerprints are needed even if incr. comp. is disabled -- yet\n+    //   we need to have a dep-graph to generate DepNodeIndices.\n+    // - The architecture is still in flux and it's not clear what how to best\n+    //   implement things.\n     fingerprints: Rc<RefCell<FxHashMap<DepNode, Fingerprint>>>\n }\n "}, {"sha": "51433238f2cf6fcdde713554e0847edaaa48f4d2", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=9798a88e9ecfc8354653b225c681cd533a88505d", "patch": "@@ -28,6 +28,8 @@ pub(super) struct NodeCollector<'a, 'hir> {\n     /// The parent of this node\n     parent_node: NodeId,\n \n+    // These fields keep track of the currently relevant DepNodes during\n+    // the visitor's traversal.\n     current_dep_node_owner: DefIndex,\n     current_signature_dep_index: DepNodeIndex,\n     current_full_dep_index: DepNodeIndex,\n@@ -38,6 +40,8 @@ pub(super) struct NodeCollector<'a, 'hir> {\n \n     hcx: StableHashingContext<'a>,\n \n+    // We are collecting DepNode::HirBody hashes here so we can compute the\n+    // crate hash from then later on.\n     hir_body_nodes: Vec<DefPathHash>,\n }\n \n@@ -463,11 +467,14 @@ impl<'a, 'hir> Visitor<'hir> for NodeCollector<'a, 'hir> {\n     }\n }\n \n-\n+// We use this with DepGraph::with_task(). Since we are handling only input\n+// values here, the \"task\" computing them just passes them through.\n fn identity_fn<T>(_: &StableHashingContext, item_like: T) -> T {\n     item_like\n }\n \n+// This is a wrapper structure that allows determining if span values within\n+// the wrapped item should be hashed or not.\n struct HirItemLike<T> {\n     item_like: T,\n     hash_bodies: bool,"}, {"sha": "e9cbe1cf5798d251f514e05f0c052b3370694bda", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=9798a88e9ecfc8354653b225c681cd533a88505d", "patch": "@@ -1237,6 +1237,10 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                                   self.cstore)\n     }\n \n+    // This method exercises the `in_scope_traits_map` query for all possible\n+    // values so that we have their fingerprints available in the DepGraph.\n+    // This is only required as long as we still use the old dependency tracking\n+    // which needs to have the fingerprints of all input nodes beforehand.\n     pub fn precompute_in_scope_traits_hashes(self) {\n         for &def_index in self.trait_map.keys() {\n             self.in_scope_traits_map(def_index);"}, {"sha": "9aba48c5bef07b60b5f065f15125977056415f9b", "filename": "src/librustc_data_structures/stable_hasher.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc_data_structures%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fstable_hasher.rs?ref=9798a88e9ecfc8354653b225c681cd533a88505d", "patch": "@@ -558,10 +558,12 @@ pub fn hash_stable_hashmap<HCX, K, V, R, SK, F, W>(\n     entries.hash_stable(hcx, hasher);\n }\n \n+\n+/// A vector container that makes sure that its items are hashed in a stable\n+/// order.\n pub struct StableVec<T>(Vec<T>);\n \n impl<T> StableVec<T> {\n-\n     pub fn new(v: Vec<T>) -> Self {\n         StableVec(v)\n     }"}, {"sha": "fad24e6a0f2b60a597e19d4efe99e8dba3abf390", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9798a88e9ecfc8354653b225c681cd533a88505d/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=9798a88e9ecfc8354653b225c681cd533a88505d", "patch": "@@ -133,7 +133,7 @@ fn test_env<F>(source_string: &str,\n \n     let arena = DroplessArena::new();\n     let arenas = ty::GlobalArenas::new();\n-    let hir_map = hir_map::map_crate(&mut hir_forest, &defs);\n+    let hir_map = hir_map::map_crate(&sess, &*cstore, &mut hir_forest, &defs);\n \n     // run just enough stuff to build a tcx:\n     let named_region_map = resolve_lifetime::krate(&sess, &*cstore, &hir_map);"}]}