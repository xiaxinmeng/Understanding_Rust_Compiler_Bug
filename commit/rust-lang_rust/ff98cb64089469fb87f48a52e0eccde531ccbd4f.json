{"sha": "ff98cb64089469fb87f48a52e0eccde531ccbd4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmOThjYjY0MDg5NDY5ZmI4N2Y0OGE1MmUwZWNjZGU1MzFjY2JkNGY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-31T15:18:06Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-02T10:25:27Z"}, "message": "Remove unused argument from resolve_crate", "tree": {"sha": "c873841cb5a63112e138bf85e30cd60a83be89eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c873841cb5a63112e138bf85e30cd60a83be89eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff98cb64089469fb87f48a52e0eccde531ccbd4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff98cb64089469fb87f48a52e0eccde531ccbd4f", "html_url": "https://github.com/rust-lang/rust/commit/ff98cb64089469fb87f48a52e0eccde531ccbd4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff98cb64089469fb87f48a52e0eccde531ccbd4f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f59198ab967c439f3b0159c1b56047e0ec797a44", "url": "https://api.github.com/repos/rust-lang/rust/commits/f59198ab967c439f3b0159c1b56047e0ec797a44", "html_url": "https://github.com/rust-lang/rust/commit/f59198ab967c439f3b0159c1b56047e0ec797a44"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "99030febb7380210e25fbf2bedecada294f7d3bf", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ff98cb64089469fb87f48a52e0eccde531ccbd4f/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff98cb64089469fb87f48a52e0eccde531ccbd4f/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=ff98cb64089469fb87f48a52e0eccde531ccbd4f", "patch": "@@ -511,12 +511,9 @@ impl<'a> CrateLoader<'a> {\n         name: Symbol,\n         span: Span,\n         dep_kind: CrateDepKind,\n-        dep: Option<(&'b CratePaths, &'b CrateDep)>,\n     ) -> CrateNum {\n-        if dep.is_none() {\n-            self.used_extern_options.insert(name);\n-        }\n-        self.maybe_resolve_crate(name, dep_kind, dep).unwrap_or_else(|err| {\n+        self.used_extern_options.insert(name);\n+        self.maybe_resolve_crate(name, dep_kind, None).unwrap_or_else(|err| {\n             let missing_core =\n                 self.maybe_resolve_crate(sym::core, CrateDepKind::Explicit, None).is_err();\n             err.report(&self.sess, span, missing_core)\n@@ -753,7 +750,7 @@ impl<'a> CrateLoader<'a> {\n         };\n         info!(\"panic runtime not found -- loading {}\", name);\n \n-        let cnum = self.resolve_crate(name, DUMMY_SP, CrateDepKind::Implicit, None);\n+        let cnum = self.resolve_crate(name, DUMMY_SP, CrateDepKind::Implicit);\n         let data = self.cstore.get_crate_data(cnum);\n \n         // Sanity check the loaded crate to ensure it is indeed a panic runtime\n@@ -793,7 +790,7 @@ impl<'a> CrateLoader<'a> {\n             );\n         }\n \n-        let cnum = self.resolve_crate(name, DUMMY_SP, CrateDepKind::Implicit, None);\n+        let cnum = self.resolve_crate(name, DUMMY_SP, CrateDepKind::Implicit);\n         let data = self.cstore.get_crate_data(cnum);\n \n         // Sanity check the loaded crate to ensure it is indeed a profiler runtime\n@@ -1013,7 +1010,7 @@ impl<'a> CrateLoader<'a> {\n                     CrateDepKind::Explicit\n                 };\n \n-                let cnum = self.resolve_crate(name, item.span, dep_kind, None);\n+                let cnum = self.resolve_crate(name, item.span, dep_kind);\n \n                 let path_len = definitions.def_path(def_id).data.len();\n                 self.update_extern_crate(\n@@ -1032,7 +1029,7 @@ impl<'a> CrateLoader<'a> {\n     }\n \n     pub fn process_path_extern(&mut self, name: Symbol, span: Span) -> CrateNum {\n-        let cnum = self.resolve_crate(name, span, CrateDepKind::Explicit, None);\n+        let cnum = self.resolve_crate(name, span, CrateDepKind::Explicit);\n \n         self.update_extern_crate(\n             cnum,"}]}