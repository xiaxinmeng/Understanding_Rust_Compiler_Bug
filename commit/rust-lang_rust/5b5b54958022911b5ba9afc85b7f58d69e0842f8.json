{"sha": "5b5b54958022911b5ba9afc85b7f58d69e0842f8", "node_id": "C_kwDOAAsO6NoAKDViNWI1NDk1ODAyMjkxMWI1YmE5YWZjODViN2Y1OGQ2OWUwODQyZjg", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T11:03:52Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T11:03:52Z"}, "message": "Add a helper function for a common piece of code", "tree": {"sha": "20c5463099fa4d9b128b056026de960efd70892d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20c5463099fa4d9b128b056026de960efd70892d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b5b54958022911b5ba9afc85b7f58d69e0842f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b5b54958022911b5ba9afc85b7f58d69e0842f8", "html_url": "https://github.com/rust-lang/rust/commit/5b5b54958022911b5ba9afc85b7f58d69e0842f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b5b54958022911b5ba9afc85b7f58d69e0842f8/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05a62c55270020252a0e2aab5a57ad6c2ce77aef", "url": "https://api.github.com/repos/rust-lang/rust/commits/05a62c55270020252a0e2aab5a57ad6c2ce77aef", "html_url": "https://github.com/rust-lang/rust/commit/05a62c55270020252a0e2aab5a57ad6c2ce77aef"}], "stats": {"total": 100, "additions": 32, "deletions": 68}, "files": [{"sha": "d28605fc26f38311dab9e3d6178ca9f9fe1d8a84", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5b5b54958022911b5ba9afc85b7f58d69e0842f8/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b5b54958022911b5ba9afc85b7f58d69e0842f8/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=5b5b54958022911b5ba9afc85b7f58d69e0842f8", "patch": "@@ -427,25 +427,27 @@ pub struct ImplDerivedObligationCause<'tcx> {\n     pub span: Span,\n }\n \n-impl ObligationCauseCode<'_> {\n+impl<'tcx> ObligationCauseCode<'tcx> {\n     // Return the base obligation, ignoring derived obligations.\n     pub fn peel_derives(&self) -> &Self {\n         let mut base_cause = self;\n-        loop {\n-            match base_cause {\n-                BuiltinDerivedObligation(DerivedObligationCause { parent_code, .. })\n-                | DerivedObligation(DerivedObligationCause { parent_code, .. })\n-                | FunctionArgumentObligation { parent_code, .. } => {\n-                    base_cause = &parent_code;\n-                }\n-                ImplDerivedObligation(obligation_cause) => {\n-                    base_cause = &*obligation_cause.derived.parent_code;\n-                }\n-                _ => break,\n-            }\n+        while let Some((parent_code, _)) = base_cause.parent() {\n+            base_cause = parent_code;\n         }\n         base_cause\n     }\n+\n+    pub fn parent(&self) -> Option<(&Self, Option<ty::PolyTraitPredicate<'tcx>>)> {\n+        match self {\n+            FunctionArgumentObligation { parent_code, .. } => Some((parent_code, None)),\n+            BuiltinDerivedObligation(derived)\n+            | DerivedObligation(derived)\n+            | ImplDerivedObligation(box ImplDerivedObligationCause { derived, .. }) => {\n+                Some((&derived.parent_code, Some(derived.parent_trait_pred)))\n+            }\n+            _ => None,\n+        }\n+    }\n }\n \n // `ObligationCauseCode` is used a lot. Make sure it doesn't unintentionally get bigger."}, {"sha": "6082d7529c32e836c42d1a202fa0a869baf663f3", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 10, "deletions": 31, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/5b5b54958022911b5ba9afc85b7f58d69e0842f8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b5b54958022911b5ba9afc85b7f58d69e0842f8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=5b5b54958022911b5ba9afc85b7f58d69e0842f8", "patch": "@@ -2,11 +2,10 @@ pub mod on_unimplemented;\n pub mod suggestions;\n \n use super::{\n-    DerivedObligationCause, EvaluationResult, FulfillmentContext, FulfillmentError,\n-    FulfillmentErrorCode, ImplDerivedObligationCause, MismatchedProjectionTypes, Obligation,\n-    ObligationCause, ObligationCauseCode, OnUnimplementedDirective, OnUnimplementedNote,\n-    OutputTypeParameterMismatch, Overflow, PredicateObligation, SelectionContext, SelectionError,\n-    TraitNotObjectSafe,\n+    EvaluationResult, FulfillmentContext, FulfillmentError, FulfillmentErrorCode,\n+    MismatchedProjectionTypes, Obligation, ObligationCause, ObligationCauseCode,\n+    OnUnimplementedDirective, OnUnimplementedNote, OutputTypeParameterMismatch, Overflow,\n+    PredicateObligation, SelectionContext, SelectionError, TraitNotObjectSafe,\n };\n \n use crate::infer::error_reporting::{TyCategory, TypeAnnotationNeeded as ErrorCode};\n@@ -684,32 +683,12 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                                 let mut code = obligation.cause.code();\n                                 let mut trait_pred = trait_predicate;\n                                 let mut peeled = false;\n-                                loop {\n-                                    match &*code {\n-                                        ObligationCauseCode::FunctionArgumentObligation {\n-                                            parent_code,\n-                                            ..\n-                                        } => {\n-                                            code = &parent_code;\n-                                        }\n-                                        ObligationCauseCode::ImplDerivedObligation(\n-                                            box ImplDerivedObligationCause {\n-                                                derived,\n-                                                ..\n-                                            },\n-                                        )\n-                                        | ObligationCauseCode::BuiltinDerivedObligation(\n-                                            derived,\n-                                        )\n-                                        | ObligationCauseCode::DerivedObligation(\n-                                            derived,\n-                                        ) => {\n-                                            peeled = true;\n-                                            code = &derived.parent_code;\n-                                            trait_pred = derived.parent_trait_pred;\n-                                        }\n-                                        _ => break,\n-                                    };\n+                                while let Some((parent_code, parent_trait_pred)) = code.parent() {\n+                                    code = parent_code;\n+                                    if let Some(parent_trait_pred) = parent_trait_pred {\n+                                        trait_pred = parent_trait_pred;\n+                                        peeled = true;\n+                                    }\n                                 }\n                                 let def_id = trait_pred.def_id();\n                                 // Mention *all* the `impl`s for the *top most* obligation, the"}, {"sha": "e4060d1ee5bb8b232e23ca3335b14f2cac39b00f", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5b5b54958022911b5ba9afc85b7f58d69e0842f8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b5b54958022911b5ba9afc85b7f58d69e0842f8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=5b5b54958022911b5ba9afc85b7f58d69e0842f8", "patch": "@@ -1,6 +1,6 @@\n use super::{\n-    DerivedObligationCause, EvaluationResult, ImplDerivedObligationCause, Obligation,\n-    ObligationCause, ObligationCauseCode, PredicateObligation, SelectionContext,\n+    EvaluationResult, Obligation, ObligationCause, ObligationCauseCode, PredicateObligation,\n+    SelectionContext,\n };\n \n use crate::autoderef::Autoderef;\n@@ -623,28 +623,11 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n         let span = obligation.cause.span;\n         let mut real_trait_pred = trait_pred;\n         let mut code = obligation.cause.code();\n-        loop {\n-            match &code {\n-                ObligationCauseCode::FunctionArgumentObligation { parent_code, .. } => {\n-                    code = &parent_code;\n-                }\n-                ObligationCauseCode::ImplDerivedObligation(box ImplDerivedObligationCause {\n-                    derived: DerivedObligationCause { parent_code, parent_trait_pred },\n-                    ..\n-                })\n-                | ObligationCauseCode::BuiltinDerivedObligation(DerivedObligationCause {\n-                    parent_code,\n-                    parent_trait_pred,\n-                })\n-                | ObligationCauseCode::DerivedObligation(DerivedObligationCause {\n-                    parent_code,\n-                    parent_trait_pred,\n-                }) => {\n-                    code = &parent_code;\n-                    real_trait_pred = *parent_trait_pred;\n-                }\n-                _ => break,\n-            };\n+        while let Some((parent_code, parent_trait_pred)) = code.parent() {\n+            code = parent_code;\n+            if let Some(parent_trait_pred) = parent_trait_pred {\n+                real_trait_pred = parent_trait_pred;\n+            }\n             let Some(real_ty) = real_trait_pred.self_ty().no_bound_vars() else {\n                 continue;\n             };"}]}