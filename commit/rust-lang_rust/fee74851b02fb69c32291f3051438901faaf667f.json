{"sha": "fee74851b02fb69c32291f3051438901faaf667f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZTc0ODUxYjAyZmI2OWMzMjI5MWYzMDUxNDM4OTAxZmFhZjY2N2Y=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-05-02T19:24:27Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-05-02T19:24:27Z"}, "message": "Propose custom derives in completion", "tree": {"sha": "0f086146c872215e7b02e091bd4a187bae83f924", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f086146c872215e7b02e091bd4a187bae83f924"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fee74851b02fb69c32291f3051438901faaf667f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fee74851b02fb69c32291f3051438901faaf667f", "html_url": "https://github.com/rust-lang/rust/commit/fee74851b02fb69c32291f3051438901faaf667f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fee74851b02fb69c32291f3051438901faaf667f/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "767bff89ededdff875b042bb37397b972e3a82f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/767bff89ededdff875b042bb37397b972e3a82f1", "html_url": "https://github.com/rust-lang/rust/commit/767bff89ededdff875b042bb37397b972e3a82f1"}], "stats": {"total": 55, "additions": 39, "deletions": 16}, "files": [{"sha": "a004363ee1a587b440db44e184013976b0b2567f", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fee74851b02fb69c32291f3051438901faaf667f/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fee74851b02fb69c32291f3051438901faaf667f/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=fee74851b02fb69c32291f3051438901faaf667f", "patch": "@@ -19,7 +19,7 @@ use hir_def::{\n use hir_expand::{\n     diagnostics::DiagnosticSink,\n     name::{name, AsName},\n-    MacroDefId,\n+    MacroDefId, MacroDefKind,\n };\n use hir_ty::{\n     autoderef, display::HirFormatter, expr::ExprValidator, method_resolution, ApplicationTy,\n@@ -762,13 +762,12 @@ impl MacroDef {\n \n     /// Indicate it is a proc-macro\n     pub fn is_proc_macro(&self) -> bool {\n-        match self.id.kind {\n-            hir_expand::MacroDefKind::Declarative => false,\n-            hir_expand::MacroDefKind::BuiltIn(_) => false,\n-            hir_expand::MacroDefKind::BuiltInDerive(_) => false,\n-            hir_expand::MacroDefKind::BuiltInEager(_) => false,\n-            hir_expand::MacroDefKind::CustomDerive(_) => true,\n-        }\n+        matches!(self.id.kind, MacroDefKind::CustomDerive(_))\n+    }\n+\n+    /// Indicate it is a derive macro\n+    pub fn is_derive_macro(&self) -> bool {\n+        matches!(self.id.kind, MacroDefKind::CustomDerive(_) | MacroDefKind::BuiltInDerive(_))\n     }\n }\n "}, {"sha": "346ba9e7a19b97c6f5560a5f2267e8560bce8603", "filename": "crates/ra_ide/src/completion/complete_attribute.rs", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/fee74851b02fb69c32291f3051438901faaf667f/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fee74851b02fb69c32291f3051438901faaf667f/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs?ref=fee74851b02fb69c32291f3051438901faaf667f", "patch": "@@ -130,11 +130,8 @@ const ATTRIBUTES: &[AttrCompletion] = &[\n ];\n \n fn complete_derive(acc: &mut Completions, ctx: &CompletionContext, derive_input: ast::TokenTree) {\n-    // TODO kb autodetect derive macros\n-    // https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Find.20all.20possible.20derive.20macro.20values.3F/near/195955580\n-\n     if let Ok(existing_derives) = parse_derive_input(derive_input) {\n-        for derive_completion in DERIVE_COMPLETIONS\n+        for derive_completion in DEFAULT_DERIVE_COMPLETIONS\n             .into_iter()\n             .filter(|completion| !existing_derives.contains(completion.label))\n         {\n@@ -147,9 +144,21 @@ fn complete_derive(acc: &mut Completions, ctx: &CompletionContext, derive_input:\n                 label.push_str(\", \");\n                 label.push_str(dependency);\n             }\n-            let item = CompletionItem::new(CompletionKind::Attribute, ctx.source_range(), label)\n-                .kind(CompletionItemKind::Attribute);\n-            acc.add(item);\n+            acc.add(\n+                CompletionItem::new(CompletionKind::Attribute, ctx.source_range(), label)\n+                    .kind(CompletionItemKind::Attribute),\n+            );\n+        }\n+\n+        for custom_derive_name in get_derive_names_in_scope(ctx).difference(&existing_derives) {\n+            acc.add(\n+                CompletionItem::new(\n+                    CompletionKind::Attribute,\n+                    ctx.source_range(),\n+                    custom_derive_name,\n+                )\n+                .kind(CompletionItemKind::Attribute),\n+            );\n         }\n     }\n }\n@@ -174,12 +183,27 @@ fn parse_derive_input(derive_input: ast::TokenTree) -> Result<FxHashSet<String>,\n     }\n }\n \n+fn get_derive_names_in_scope(ctx: &CompletionContext) -> FxHashSet<String> {\n+    let mut result = FxHashSet::default();\n+    ctx.scope().process_all_names(&mut |name, scope_def| {\n+        if let hir::ScopeDef::MacroDef(mac) = scope_def {\n+            if mac.is_derive_macro() {\n+                let name_string = name.to_string();\n+                result.insert(name_string);\n+            }\n+        }\n+    });\n+    result\n+}\n+\n struct DeriveCompletion {\n     label: &'static str,\n     dependencies: &'static [&'static str],\n }\n \n-const DERIVE_COMPLETIONS: &[DeriveCompletion] = &[\n+/// Standard Rust derives and the information about their dependencies\n+/// (the dependencies are needed so that the main derive don't break the compilation when added)\n+const DEFAULT_DERIVE_COMPLETIONS: &[DeriveCompletion] = &[\n     DeriveCompletion { label: \"Clone\", dependencies: &[] },\n     DeriveCompletion { label: \"Copy\", dependencies: &[\"Clone\"] },\n     DeriveCompletion { label: \"Debug\", dependencies: &[] },"}]}