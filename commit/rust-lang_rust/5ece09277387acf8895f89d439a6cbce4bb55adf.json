{"sha": "5ece09277387acf8895f89d439a6cbce4bb55adf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlY2UwOTI3NzM4N2FjZjg4OTVmODlkNDM5YTZjYmNlNGJiNTVhZGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-18T16:36:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-18T16:36:36Z"}, "message": "auto merge of #11033 : michaelwoerister/rust/byvalself, r=pcwalton\n\nAs the title says. The trans changes will lead to an auxiliary alloca being created that allows debug info to track the `self` argument. This alloca is only created in debug builds however. Otherwise very little had to be done after I managed to navigate to some degree the jungle that is self-argument handling `:P` \r\n\r\nCloses #10549", "tree": {"sha": "0524903237225f4ec4a1c54ad7a17c2169777c3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0524903237225f4ec4a1c54ad7a17c2169777c3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ece09277387acf8895f89d439a6cbce4bb55adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ece09277387acf8895f89d439a6cbce4bb55adf", "html_url": "https://github.com/rust-lang/rust/commit/5ece09277387acf8895f89d439a6cbce4bb55adf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ece09277387acf8895f89d439a6cbce4bb55adf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c33573440b61acf154a1cee55413d02f9835c9aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/c33573440b61acf154a1cee55413d02f9835c9aa", "html_url": "https://github.com/rust-lang/rust/commit/c33573440b61acf154a1cee55413d02f9835c9aa"}, {"sha": "01fae5fb2a0425af2830b2525c49d27bfba68899", "url": "https://api.github.com/repos/rust-lang/rust/commits/01fae5fb2a0425af2830b2525c49d27bfba68899", "html_url": "https://github.com/rust-lang/rust/commit/01fae5fb2a0425af2830b2525c49d27bfba68899"}], "stats": {"total": 412, "additions": 215, "deletions": 197}, "files": [{"sha": "a77e8f764f38d2a285070cc0f6b960911bd3a4c2", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -129,11 +129,13 @@ use driver::session;\n use lib::llvm::llvm;\n use lib::llvm::{ModuleRef, ContextRef, ValueRef};\n use lib::llvm::debuginfo::*;\n+use middle::trans::adt;\n+use middle::trans::base;\n+use middle::trans::build;\n use middle::trans::common::*;\n use middle::trans::machine;\n use middle::trans::type_of;\n use middle::trans::type_::Type;\n-use middle::trans::adt;\n use middle::trans;\n use middle::ty;\n use middle::pat_util;\n@@ -453,12 +455,29 @@ pub fn create_self_argument_metadata(bcx: @mut Block,\n \n     let address_operations = &[unsafe { llvm::LLVMDIBuilderCreateOpDeref(Type::i64().to_ref()) }];\n \n+    // The self argument comes in one of two forms:\n+    // (1) For `&self`, `~self`, and `@self` it is an alloca containing a pointer to the data. That\n+    //     is the `{&~@}self` pointer is contained by value in the alloca, and `type_of_self` will\n+    //     be `{&~@}Self`\n+    // (2) For by-value `self`, `llptr` will not be an alloca, but a pointer to the self-value. That\n+    //     is by-value `self` is always implicitly passed by reference (sic!). So we have a couple\n+    //     of problems here:\n+    //     (a) There is no alloca to give to `llvm.dbg.declare` and\n+    //     (b) `type_of_self` is `Self`, but `llptr` is of type `*Self`\n+    //     In order to solve this problem, the else branch below creates a helper alloca which\n+    //     contains a copy of `llptr`. We then describe the `self` parameter by pointing\n+    //     `llvm.dbg.declare` to this helper alloca and tell it that the pointer there needs to be\n+    //     dereferenced once to get to the actual data (similar to non-immediate by-value args).\n     let variable_access = if unsafe { llvm::LLVMIsAAllocaInst(llptr) } != ptr::null() {\n         DirectVariable { alloca: llptr }\n     } else {\n-        // This is not stable and may break with future LLVM versions. llptr should really always\n-        // be an alloca. Anything else is not supported and just works by chance.\n-        IndirectVariable { alloca: llptr, address_operations: address_operations }\n+        // Create a helper alloca that allows us to track the self-argument properly. The alloca\n+        // contains a pointer to the self-value.\n+        let ptr_type = ty::mk_mut_ptr(bcx.tcx(), type_of_self);\n+        let helper_alloca = base::alloc_ty(bcx, ptr_type, \"__self\");\n+        build::Store(bcx, llptr, helper_alloca);\n+\n+        IndirectVariable { alloca: helper_alloca, address_operations: address_operations }\n     };\n \n     declare_local(bcx,"}, {"sha": "d051ab9db93b19407338cb707964d27612dc3177", "filename": "src/test/debug-info/by-value-self-argument-in-trait-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-win32: FIXME (#10474)\n // xfail-android: FIXME(#10381)\n \n #[feature(managed_boxes)];"}, {"sha": "767293c3dc8c86bc95524746dca15da02291ff30", "filename": "src/test/debug-info/generic-method-on-generic-struct.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fgeneric-method-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fgeneric-method-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fgeneric-method-on-generic-struct.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -26,72 +26,72 @@\n \n // STACK BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = {8888, -8888}}\n+// debugger:print self\n+// check:$4 = {x = {8888, -8888}}\n // debugger:print arg1\n-// check:$4 = -3\n+// check:$5 = -3\n // debugger:print arg2\n-// check:$5 = -4\n+// check:$6 = -4\n // debugger:continue\n \n // OWNED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$6 = {x = 1234.5}\n+// check:$7 = {x = 1234.5}\n // debugger:print arg1\n-// check:$7 = -5\n+// check:$8 = -5\n // debugger:print arg2\n-// check:$8 = -6\n+// check:$9 = -6\n // debugger:continue\n \n // OWNED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 1234.5}\n+// debugger:print self\n+// check:$10 = {x = 1234.5}\n // debugger:print arg1\n-// check:$9 = -7\n+// check:$11 = -7\n // debugger:print arg2\n-// check:$10 = -8\n+// check:$12 = -8\n // debugger:continue\n \n // OWNED MOVED\n // debugger:finish\n // debugger:print *self\n-// check:$11 = {x = 1234.5}\n+// check:$13 = {x = 1234.5}\n // debugger:print arg1\n-// check:$12 = -9\n+// check:$14 = -9\n // debugger:print arg2\n-// check:$13 = -10.5\n+// check:$15 = -10.5\n // debugger:continue\n \n // MANAGED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$14 = {x = -1}\n+// check:$16 = {x = -1}\n // debugger:print arg1\n-// check:$15 = -11\n+// check:$17 = -11\n // debugger:print arg2\n-// check:$16 = -12.5\n+// check:$18 = -12.5\n // debugger:continue\n \n // MANAGED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = -1}\n+// debugger:print self\n+// check:$19 = {x = -1}\n // debugger:print arg1\n-// check:$17 = -13\n+// check:$20 = -13\n // debugger:print *arg2\n-// check:$18 = {-14, 14}\n+// check:$21 = {-14, 14}\n // debugger:continue\n \n // MANAGED SELF\n // debugger:finish\n // debugger:print self->val\n-// check:$19 = {x = -1}\n+// check:$22 = {x = -1}\n // debugger:print arg1\n-// check:$20 = -15\n+// check:$23 = -15\n // debugger:print *arg2\n-// check:$21 = {-16, 16.5}\n+// check:$24 = {-16, 16.5}\n // debugger:continue\n \n #[feature(managed_boxes)];"}, {"sha": "272da1690fd192a87ff11f4f3f1647385b27928c", "filename": "src/test/debug-info/method-on-enum.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-enum.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -26,72 +26,72 @@\n \n // STACK BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {{Variant2, [...]}, {Variant2, 117901063}}\n+// debugger:print self\n+// check:$4 = {{Variant2, [...]}, {Variant2, 117901063}}\n // debugger:print arg1\n-// check:$4 = -3\n+// check:$5 = -3\n // debugger:print arg2\n-// check:$5 = -4\n+// check:$6 = -4\n // debugger:continue\n \n // OWNED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$6 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n+// check:$7 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n // debugger:print arg1\n-// check:$7 = -5\n+// check:$8 = -5\n // debugger:print arg2\n-// check:$8 = -6\n+// check:$9 = -6\n // debugger:continue\n \n // OWNED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n+// debugger:print self\n+// check:$10 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n // debugger:print arg1\n-// check:$9 = -7\n+// check:$11 = -7\n // debugger:print arg2\n-// check:$10 = -8\n+// check:$12 = -8\n // debugger:continue\n \n // OWNED MOVED\n // debugger:finish\n // debugger:print *self\n-// check:$11 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n+// check:$13 = {{Variant1, x = 1799, y = 1799}, {Variant1, [...]}}\n // debugger:print arg1\n-// check:$12 = -9\n+// check:$14 = -9\n // debugger:print arg2\n-// check:$13 = -10\n+// check:$15 = -10\n // debugger:continue\n \n // MANAGED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$14 = {{Variant2, [...]}, {Variant2, 117901063}}\n+// check:$16 = {{Variant2, [...]}, {Variant2, 117901063}}\n // debugger:print arg1\n-// check:$15 = -11\n+// check:$17 = -11\n // debugger:print arg2\n-// check:$16 = -12\n+// check:$18 = -12\n // debugger:continue\n \n // MANAGED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {{Variant2, [...]}, {Variant2, 117901063}}\n+// debugger:print self\n+// check:$19 = {{Variant2, [...]}, {Variant2, 117901063}}\n // debugger:print arg1\n-// check:$17 = -13\n+// check:$20 = -13\n // debugger:print arg2\n-// check:$18 = -14\n+// check:$21 = -14\n // debugger:continue\n \n // MANAGED SELF\n // debugger:finish\n // debugger:print self->val\n-// check:$19 = {{Variant2, [...]}, {Variant2, 117901063}}\n+// check:$22 = {{Variant2, [...]}, {Variant2, 117901063}}\n // debugger:print arg1\n-// check:$20 = -15\n+// check:$23 = -15\n // debugger:print arg2\n-// check:$21 = -16\n+// check:$24 = -16\n // debugger:continue\n \n #[feature(managed_boxes)];"}, {"sha": "ebfdea0437709006af744268d07ca7446aec7c0b", "filename": "src/test/debug-info/method-on-generic-struct.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-generic-struct.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -26,72 +26,72 @@\n \n // STACK BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = {8888, -8888}}\n+// debugger:print self\n+// check:$4 = {x = {8888, -8888}}\n // debugger:print arg1\n-// check:$4 = -3\n+// check:$5 = -3\n // debugger:print arg2\n-// check:$5 = -4\n+// check:$6 = -4\n // debugger:continue\n \n // OWNED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$6 = {x = 1234.5}\n+// check:$7 = {x = 1234.5}\n // debugger:print arg1\n-// check:$7 = -5\n+// check:$8 = -5\n // debugger:print arg2\n-// check:$8 = -6\n+// check:$9 = -6\n // debugger:continue\n \n // OWNED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 1234.5}\n+// debugger:print self\n+// check:$10 = {x = 1234.5}\n // debugger:print arg1\n-// check:$9 = -7\n+// check:$11 = -7\n // debugger:print arg2\n-// check:$10 = -8\n+// check:$12 = -8\n // debugger:continue\n \n // OWNED MOVED\n // debugger:finish\n // debugger:print *self\n-// check:$11 = {x = 1234.5}\n+// check:$13 = {x = 1234.5}\n // debugger:print arg1\n-// check:$12 = -9\n+// check:$14 = -9\n // debugger:print arg2\n-// check:$13 = -10\n+// check:$15 = -10\n // debugger:continue\n \n // MANAGED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$14 = {x = -1}\n+// check:$16 = {x = -1}\n // debugger:print arg1\n-// check:$15 = -11\n+// check:$17 = -11\n // debugger:print arg2\n-// check:$16 = -12\n+// check:$18 = -12\n // debugger:continue\n \n // MANAGED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = -1}\n+// debugger:print self\n+// check:$19 = {x = -1}\n // debugger:print arg1\n-// check:$17 = -13\n+// check:$20 = -13\n // debugger:print arg2\n-// check:$18 = -14\n+// check:$21 = -14\n // debugger:continue\n \n // MANAGED SELF\n // debugger:finish\n // debugger:print self->val\n-// check:$19 = {x = -1}\n+// check:$22 = {x = -1}\n // debugger:print arg1\n-// check:$20 = -15\n+// check:$23 = -15\n // debugger:print arg2\n-// check:$21 = -16\n+// check:$24 = -16\n // debugger:continue\n \n #[feature(managed_boxes)];"}, {"sha": "e88e5a5ca636c593ceb3ef4eaab6ebedbab69f6b", "filename": "src/test/debug-info/method-on-struct.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-struct.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -26,72 +26,72 @@\n \n // STACK BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 100}\n+// debugger:print self\n+// check:$4 = {x = 100}\n // debugger:print arg1\n-// check:$4 = -3\n+// check:$5 = -3\n // debugger:print arg2\n-// check:$5 = -4\n+// check:$6 = -4\n // debugger:continue\n \n // OWNED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$6 = {x = 200}\n+// check:$7 = {x = 200}\n // debugger:print arg1\n-// check:$7 = -5\n+// check:$8 = -5\n // debugger:print arg2\n-// check:$8 = -6\n+// check:$9 = -6\n // debugger:continue\n \n // OWNED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 200}\n+// debugger:print self\n+// check:$10 = {x = 200}\n // debugger:print arg1\n-// check:$9 = -7\n+// check:$11 = -7\n // debugger:print arg2\n-// check:$10 = -8\n+// check:$12 = -8\n // debugger:continue\n \n // OWNED MOVED\n // debugger:finish\n // debugger:print *self\n-// check:$11 = {x = 200}\n+// check:$13 = {x = 200}\n // debugger:print arg1\n-// check:$12 = -9\n+// check:$14 = -9\n // debugger:print arg2\n-// check:$13 = -10\n+// check:$15 = -10\n // debugger:continue\n \n // MANAGED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$14 = {x = 300}\n+// check:$16 = {x = 300}\n // debugger:print arg1\n-// check:$15 = -11\n+// check:$17 = -11\n // debugger:print arg2\n-// check:$16 = -12\n+// check:$18 = -12\n // debugger:continue\n \n // MANAGED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 300}\n+// debugger:print self\n+// check:$19 = {x = 300}\n // debugger:print arg1\n-// check:$17 = -13\n+// check:$20 = -13\n // debugger:print arg2\n-// check:$18 = -14\n+// check:$21 = -14\n // debugger:continue\n \n // MANAGED SELF\n // debugger:finish\n // debugger:print self->val\n-// check:$19 = {x = 300}\n+// check:$22 = {x = 300}\n // debugger:print arg1\n-// check:$20 = -15\n+// check:$23 = -15\n // debugger:print arg2\n-// check:$21 = -16\n+// check:$24 = -16\n // debugger:continue\n \n #[feature(managed_boxes)];"}, {"sha": "fd58cc1a7d3ba7fd4080b9f30cbb7696eda1e147", "filename": "src/test/debug-info/method-on-trait.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-trait.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -26,72 +26,72 @@\n \n // STACK BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 100}\n+// debugger:print self\n+// check:$4 = {x = 100}\n // debugger:print arg1\n-// check:$4 = -3\n+// check:$5 = -3\n // debugger:print arg2\n-// check:$5 = -4\n+// check:$6 = -4\n // debugger:continue\n \n // OWNED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$6 = {x = 200}\n+// check:$7 = {x = 200}\n // debugger:print arg1\n-// check:$7 = -5\n+// check:$8 = -5\n // debugger:print arg2\n-// check:$8 = -6\n+// check:$9 = -6\n // debugger:continue\n \n // OWNED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 200}\n+// debugger:print self\n+// check:$10 = {x = 200}\n // debugger:print arg1\n-// check:$9 = -7\n+// check:$11 = -7\n // debugger:print arg2\n-// check:$10 = -8\n+// check:$12 = -8\n // debugger:continue\n \n // OWNED MOVED\n // debugger:finish\n // debugger:print *self\n-// check:$11 = {x = 200}\n+// check:$13 = {x = 200}\n // debugger:print arg1\n-// check:$12 = -9\n+// check:$14 = -9\n // debugger:print arg2\n-// check:$13 = -10\n+// check:$15 = -10\n // debugger:continue\n \n // MANAGED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$14 = {x = 300}\n+// check:$16 = {x = 300}\n // debugger:print arg1\n-// check:$15 = -11\n+// check:$17 = -11\n // debugger:print arg2\n-// check:$16 = -12\n+// check:$18 = -12\n // debugger:continue\n \n // MANAGED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 300}\n+// debugger:print self\n+// check:$19 = {x = 300}\n // debugger:print arg1\n-// check:$17 = -13\n+// check:$20 = -13\n // debugger:print arg2\n-// check:$18 = -14\n+// check:$21 = -14\n // debugger:continue\n \n // MANAGED SELF\n // debugger:finish\n // debugger:print self->val\n-// check:$19 = {x = 300}\n+// check:$22 = {x = 300}\n // debugger:print arg1\n-// check:$20 = -15\n+// check:$23 = -15\n // debugger:print arg2\n-// check:$21 = -16\n+// check:$24 = -16\n // debugger:continue\n \n #[feature(managed_boxes)];"}, {"sha": "98dbff988e74d83112c69eb68a5ca7d0732cc215", "filename": "src/test/debug-info/method-on-tuple-struct.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fmethod-on-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-tuple-struct.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -26,72 +26,72 @@\n \n // STACK BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {100, -100.5}\n+// debugger:print self\n+// check:$4 = {100, -100.5}\n // debugger:print arg1\n-// check:$4 = -3\n+// check:$5 = -3\n // debugger:print arg2\n-// check:$5 = -4\n+// check:$6 = -4\n // debugger:continue\n \n // OWNED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$6 = {200, -200.5}\n+// check:$7 = {200, -200.5}\n // debugger:print arg1\n-// check:$7 = -5\n+// check:$8 = -5\n // debugger:print arg2\n-// check:$8 = -6\n+// check:$9 = -6\n // debugger:continue\n \n // OWNED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {200, -200.5}\n+// debugger:print self\n+// check:$10 = {200, -200.5}\n // debugger:print arg1\n-// check:$9 = -7\n+// check:$11 = -7\n // debugger:print arg2\n-// check:$10 = -8\n+// check:$12 = -8\n // debugger:continue\n \n // OWNED MOVED\n // debugger:finish\n // debugger:print *self\n-// check:$11 = {200, -200.5}\n+// check:$13 = {200, -200.5}\n // debugger:print arg1\n-// check:$12 = -9\n+// check:$14 = -9\n // debugger:print arg2\n-// check:$13 = -10\n+// check:$15 = -10\n // debugger:continue\n \n // MANAGED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$14 = {300, -300.5}\n+// check:$16 = {300, -300.5}\n // debugger:print arg1\n-// check:$15 = -11\n+// check:$17 = -11\n // debugger:print arg2\n-// check:$16 = -12\n+// check:$18 = -12\n // debugger:continue\n \n // MANAGED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {300, -300.5}\n+// debugger:print self\n+// check:$19 = {300, -300.5}\n // debugger:print arg1\n-// check:$17 = -13\n+// check:$20 = -13\n // debugger:print arg2\n-// check:$18 = -14\n+// check:$21 = -14\n // debugger:continue\n \n // MANAGED SELF\n // debugger:finish\n // debugger:print self->val\n-// check:$19 = {300, -300.5}\n+// check:$22 = {300, -300.5}\n // debugger:print arg1\n-// check:$20 = -15\n+// check:$23 = -15\n // debugger:print arg2\n-// check:$21 = -16\n+// check:$24 = -16\n // debugger:continue\n \n #[feature(managed_boxes)];"}, {"sha": "d5f735e77f4e1f68be49bbe79e80c6f4de2886a4", "filename": "src/test/debug-info/self-in-default-method.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fself-in-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fself-in-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fself-in-default-method.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -26,72 +26,72 @@\n \n // STACK BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 100}\n+// debugger:print self\n+// check:$4 = {x = 100}\n // debugger:print arg1\n-// check:$4 = -3\n+// check:$5 = -3\n // debugger:print arg2\n-// check:$5 = -4\n+// check:$6 = -4\n // debugger:continue\n \n // OWNED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$6 = {x = 200}\n+// check:$7 = {x = 200}\n // debugger:print arg1\n-// check:$7 = -5\n+// check:$8 = -5\n // debugger:print arg2\n-// check:$8 = -6\n+// check:$9 = -6\n // debugger:continue\n \n // OWNED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 200}\n+// debugger:print self\n+// check:$10 = {x = 200}\n // debugger:print arg1\n-// check:$9 = -7\n+// check:$11 = -7\n // debugger:print arg2\n-// check:$10 = -8\n+// check:$12 = -8\n // debugger:continue\n \n // OWNED MOVED\n // debugger:finish\n // debugger:print *self\n-// check:$11 = {x = 200}\n+// check:$13 = {x = 200}\n // debugger:print arg1\n-// check:$12 = -9\n+// check:$14 = -9\n // debugger:print arg2\n-// check:$13 = -10\n+// check:$15 = -10\n // debugger:continue\n \n // MANAGED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$14 = {x = 300}\n+// check:$16 = {x = 300}\n // debugger:print arg1\n-// check:$15 = -11\n+// check:$17 = -11\n // debugger:print arg2\n-// check:$16 = -12\n+// check:$18 = -12\n // debugger:continue\n \n // MANAGED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 300}\n+// debugger:print self\n+// check:$19 = {x = 300}\n // debugger:print arg1\n-// check:$17 = -13\n+// check:$20 = -13\n // debugger:print arg2\n-// check:$18 = -14\n+// check:$21 = -14\n // debugger:continue\n \n // MANAGED SELF\n // debugger:finish\n // debugger:print self->val\n-// check:$19 = {x = 300}\n+// check:$22 = {x = 300}\n // debugger:print arg1\n-// check:$20 = -15\n+// check:$23 = -15\n // debugger:print arg2\n-// check:$21 = -16\n+// check:$24 = -16\n // debugger:continue\n \n #[feature(managed_boxes)];"}, {"sha": "e7a6ee776104ed845f91409a04a37a4e1aa15bf2", "filename": "src/test/debug-info/self-in-generic-default-method.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fself-in-generic-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ece09277387acf8895f89d439a6cbce4bb55adf/src%2Ftest%2Fdebug-info%2Fself-in-generic-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fself-in-generic-default-method.rs?ref=5ece09277387acf8895f89d439a6cbce4bb55adf", "patch": "@@ -26,72 +26,72 @@\n \n // STACK BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 987}\n+// debugger:print self\n+// check:$4 = {x = 987}\n // debugger:print arg1\n-// check:$4 = -3\n+// check:$5 = -3\n // debugger:print arg2\n-// check:$5 = -4\n+// check:$6 = -4\n // debugger:continue\n \n // OWNED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$6 = {x = 879}\n+// check:$7 = {x = 879}\n // debugger:print arg1\n-// check:$7 = -5\n+// check:$8 = -5\n // debugger:print arg2\n-// check:$8 = -6\n+// check:$9 = -6\n // debugger:continue\n \n // OWNED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 879}\n+// debugger:print self\n+// check:$10 = {x = 879}\n // debugger:print arg1\n-// check:$9 = -7\n+// check:$11 = -7\n // debugger:print arg2\n-// check:$10 = -8\n+// check:$12 = -8\n // debugger:continue\n \n // OWNED MOVED\n // debugger:finish\n // debugger:print *self\n-// check:$11 = {x = 879}\n+// check:$13 = {x = 879}\n // debugger:print arg1\n-// check:$12 = -9\n+// check:$14 = -9\n // debugger:print arg2\n-// check:$13 = -10.5\n+// check:$15 = -10.5\n // debugger:continue\n \n // MANAGED BY REF\n // debugger:finish\n // debugger:print *self\n-// check:$14 = {x = 897}\n+// check:$16 = {x = 897}\n // debugger:print arg1\n-// check:$15 = -11\n+// check:$17 = -11\n // debugger:print arg2\n-// check:$16 = -12.5\n+// check:$18 = -12.5\n // debugger:continue\n \n // MANAGED BY VAL\n // debugger:finish\n-// d ebugger:print self -- ignored for now because of issue #8512\n-// c heck:$X = {x = 897}\n+// debugger:print self\n+// check:$19 = {x = 897}\n // debugger:print arg1\n-// check:$17 = -13\n+// check:$20 = -13\n // debugger:print *arg2\n-// check:$18 = {-14, 14}\n+// check:$21 = {-14, 14}\n // debugger:continue\n \n // MANAGED SELF\n // debugger:finish\n // debugger:print self->val\n-// check:$19 = {x = 897}\n+// check:$22 = {x = 897}\n // debugger:print arg1\n-// check:$20 = -15\n+// check:$23 = -15\n // debugger:print *arg2\n-// check:$21 = {-16, 16.5}\n+// check:$24 = {-16, 16.5}\n // debugger:continue\n \n #[feature(managed_boxes)];"}]}