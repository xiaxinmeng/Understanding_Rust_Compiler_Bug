{"sha": "361a2f9a83b1a6416faceecf64bf61aa53491274", "node_id": "C_kwDOAAsO6NoAKDM2MWEyZjlhODNiMWE2NDE2ZmFjZWVjZjY0YmY2MWFhNTM0OTEyNzQ", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-21T17:17:00Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-21T17:20:38Z"}, "message": "Update HashMap::try_reserve test to version from hashbrown", "tree": {"sha": "55b6853231e03ec343d8393202ad2b4b73838283", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55b6853231e03ec343d8393202ad2b4b73838283"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/361a2f9a83b1a6416faceecf64bf61aa53491274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/361a2f9a83b1a6416faceecf64bf61aa53491274", "html_url": "https://github.com/rust-lang/rust/commit/361a2f9a83b1a6416faceecf64bf61aa53491274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/361a2f9a83b1a6416faceecf64bf61aa53491274/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88149d13e37f081b5906ec88fb073f7a28c0f34e", "url": "https://api.github.com/repos/rust-lang/rust/commits/88149d13e37f081b5906ec88fb073f7a28c0f34e", "html_url": "https://github.com/rust-lang/rust/commit/88149d13e37f081b5906ec88fb073f7a28c0f34e"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "5c544de13e5dde5916621593a998e3701a7dc266", "filename": "library/std/src/collections/hash/map/tests.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/361a2f9a83b1a6416faceecf64bf61aa53491274/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/361a2f9a83b1a6416faceecf64bf61aa53491274/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap%2Ftests.rs?ref=361a2f9a83b1a6416faceecf64bf61aa53491274", "patch": "@@ -828,11 +828,21 @@ fn test_try_reserve() {\n         \"usize::MAX should trigger an overflow!\"\n     );\n \n-    assert_matches!(\n-        empty_bytes.try_reserve(MAX_USIZE / 8).map_err(|e| e.kind()),\n-        Err(AllocError { .. }),\n-        \"usize::MAX / 8 should trigger an OOM!\"\n-    );\n+    if let Err(AllocError { .. }) = empty_bytes.try_reserve(MAX_USIZE / 16).map_err(|e| e.kind()) {\n+    } else {\n+        // This may succeed if there is enough free memory. Attempt to\n+        // allocate a few more hashmaps to ensure the allocation will fail.\n+        let mut empty_bytes2: HashMap<u8, u8> = HashMap::new();\n+        let _ = empty_bytes2.try_reserve(MAX_USIZE / 16);\n+        let mut empty_bytes3: HashMap<u8, u8> = HashMap::new();\n+        let _ = empty_bytes3.try_reserve(MAX_USIZE / 16);\n+        let mut empty_bytes4: HashMap<u8, u8> = HashMap::new();\n+        assert_matches!(\n+            empty_bytes4.try_reserve(MAX_USIZE / 16).map_err(|e| e.kind()),\n+            Err(AllocError { .. }),\n+            \"usize::MAX / 16 should trigger an OOM!\"\n+        );\n+    }\n }\n \n #[test]"}]}