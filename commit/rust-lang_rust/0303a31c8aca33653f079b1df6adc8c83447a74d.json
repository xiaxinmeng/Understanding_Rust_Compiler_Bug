{"sha": "0303a31c8aca33653f079b1df6adc8c83447a74d", "node_id": "C_kwDOAAsO6NoAKDAzMDNhMzFjOGFjYTMzNjUzZjA3OWIxZGY2YWRjOGM4MzQ0N2E3NGQ", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2022-08-29T09:59:54Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2022-08-31T12:42:07Z"}, "message": "Document x86_64-fortanix-unknown-sgx platform", "tree": {"sha": "a69abfffda0b33658a7c13dac2802aa2cf9341da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a69abfffda0b33658a7c13dac2802aa2cf9341da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0303a31c8aca33653f079b1df6adc8c83447a74d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0303a31c8aca33653f079b1df6adc8c83447a74d", "html_url": "https://github.com/rust-lang/rust/commit/0303a31c8aca33653f079b1df6adc8c83447a74d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0303a31c8aca33653f079b1df6adc8c83447a74d/comments", "author": null, "committer": null, "parents": [{"sha": "8abe7cbf359521de5395035fdcbf08c65fb28877", "url": "https://api.github.com/repos/rust-lang/rust/commits/8abe7cbf359521de5395035fdcbf08c65fb28877", "html_url": "https://github.com/rust-lang/rust/commit/8abe7cbf359521de5395035fdcbf08c65fb28877"}], "stats": {"total": 75, "additions": 74, "deletions": 1}, "files": [{"sha": "0941f9013eed63336882488298e8bd6662b0ea3b", "filename": "src/doc/rustc/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0303a31c8aca33653f079b1df6adc8c83447a74d/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/0303a31c8aca33653f079b1df6adc8c83447a74d/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md?ref=0303a31c8aca33653f079b1df6adc8c83447a74d", "patch": "@@ -32,6 +32,7 @@\n     - [*-unknown-openbsd](platform-support/openbsd.md)\n     - [\\*-unknown-uefi](platform-support/unknown-uefi.md)\n     - [wasm64-unknown-unknown](platform-support/wasm64-unknown-unknown.md)\n+    - [x86_64-fortanix-unknown-sgx](platform-support/x86_64-fortanix-unknown-sgx.md)\n     - [x86_64-unknown-none](platform-support/x86_64-unknown-none.md)\n - [Targets](targets/index.md)\n     - [Built-in Targets](targets/built-in.md)"}, {"sha": "dd856e5d78a3d3e8105975dd1e7a2ac91da2d24c", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0303a31c8aca33653f079b1df6adc8c83447a74d/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/0303a31c8aca33653f079b1df6adc8c83447a74d/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=0303a31c8aca33653f079b1df6adc8c83447a74d", "patch": "@@ -174,7 +174,7 @@ target | std | notes\n `wasm32-unknown-unknown` | \u2713 | WebAssembly\n `wasm32-wasi` | \u2713 | WebAssembly with WASI\n `x86_64-apple-ios` | \u2713 | 64-bit x86 iOS\n-`x86_64-fortanix-unknown-sgx` | \u2713 | [Fortanix ABI] for 64-bit Intel SGX\n+[`x86_64-fortanix-unknown-sgx`](platform-support/x86_64-fortanix-unknown-sgx.md) | \u2713 | [Fortanix ABI] for 64-bit Intel SGX\n `x86_64-fuchsia` | \u2713 | 64-bit Fuchsia\n `x86_64-linux-android` | \u2713 | 64-bit x86 Android\n `x86_64-pc-solaris` | \u2713 | 64-bit Solaris 10/11, illumos"}, {"sha": "97b5827c1443f328094e6c92a611efcb22213d80", "filename": "src/doc/rustc/src/platform-support/x86_64-fortanix-unknown-sgx.md", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/0303a31c8aca33653f079b1df6adc8c83447a74d/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fx86_64-fortanix-unknown-sgx.md", "raw_url": "https://github.com/rust-lang/rust/raw/0303a31c8aca33653f079b1df6adc8c83447a74d/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fx86_64-fortanix-unknown-sgx.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fx86_64-fortanix-unknown-sgx.md?ref=0303a31c8aca33653f079b1df6adc8c83447a74d", "patch": "@@ -0,0 +1,72 @@\n+# `x86_64-fortanix-unknown-sgx`\n+\n+**Tier: 2**\n+\n+Secure enclaves using [Intel Software Guard Extensions\n+(SGX)](https://www.intel.com/content/www/us/en/developer/tools/software-guard-extensions/overview.html)\n+based on the ABI defined by Fortanix for the [Enclave Development Platform\n+(EDP)](https://edp.fortanix.com/).\n+\n+## Target maintainers\n+\n+The [EDP team](mailto:edp.maintainers@fortanix.com) at Fortanix.\n+\n+- Jethro Beekman [@jethrogb](https://github.com/jethrogb)\n+- Raoul Strackx [@raoulstrackx](https://github.com/raoulstrackx)\n+- Mohsen Zohrevandi [@mzohreva](https://github.com/mzohreva)\n+\n+## Requirements\n+\n+The target supports `std` with a default allocator. Only cross compilation is\n+supported.\n+\n+Binaries support all CPUs that include Intel SGX. Only 64-bit mode is supported.\n+\n+Not all `std` features are supported, see [Using Rust's\n+std](https://edp.fortanix.com/docs/concepts/rust-std/) for details.\n+\n+The `extern \"C\"` calling convention is the System V AMD64 ABI.\n+\n+The supported ABI is the\n+[fortanix-sgx-abi](https://edp.fortanix.com/docs/api/fortanix_sgx_abi/index.html).\n+\n+The compiler output is ELF, but the native format for the platform is the SGX\n+stream (SGXS) format. A converter like\n+[ftxsgx-elf2sgxs](https://crates.io/crates/fortanix-sgx-tools) is needed.\n+\n+Programs in SGXS format adhering to the Fortanix SGX ABI can be run with any\n+compatible runner, such as\n+[ftxsgx-runner](https://crates.io/crates/fortanix-sgx-tools).\n+\n+See the [EDP installation\n+guide](https://edp.fortanix.com/docs/installation/guide/) for recommendations\n+on how to setup a development and runtime environment.\n+\n+## Building the target\n+\n+As a tier 2 target, the target is built by the Rust project.\n+\n+You can configure rustbuild like so:\n+\n+```toml\n+[build]\n+build-stage = 1\n+target = [\"x86_64-fortanix-unknown-sgx\"]\n+```\n+\n+## Building Rust programs\n+\n+Standard build flows using `cargo` or `rustc` should work.\n+\n+## Testing\n+\n+The Rust test suite as well as custom unit and integration tests will run on\n+hardware that has Intel SGX enabled if a cargo runner is configured correctly,\n+see the requirements section.\n+\n+## Cross-compilation toolchains and C code\n+\n+C code is not generally supported, as there is no libc. C code compiled for\n+x86-64 in freestanding mode using the System V AMD64 ABI may work. The\n+[rs-libc](https://crates.io/crates/rs-libc) crate contains a subset of libc\n+that's known to work with this target."}]}