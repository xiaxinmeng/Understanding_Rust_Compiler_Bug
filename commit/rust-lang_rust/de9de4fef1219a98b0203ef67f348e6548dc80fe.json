{"sha": "de9de4fef1219a98b0203ef67f348e6548dc80fe", "node_id": "C_kwDOAAsO6NoAKGRlOWRlNGZlZjEyMTlhOThiMDIwM2VmNjdmMzQ4ZTY1NDhkYzgwZmU", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-12-01T14:38:54Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-12-03T19:21:48Z"}, "message": "Upgrade map_flatten to complexity", "tree": {"sha": "bc611911a96d3f2d00c5ce7abd3ef647327610a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc611911a96d3f2d00c5ce7abd3ef647327610a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de9de4fef1219a98b0203ef67f348e6548dc80fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de9de4fef1219a98b0203ef67f348e6548dc80fe", "html_url": "https://github.com/rust-lang/rust/commit/de9de4fef1219a98b0203ef67f348e6548dc80fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de9de4fef1219a98b0203ef67f348e6548dc80fe/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ad56c8fb72e38ff991d932da6a0acf91c0128ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad56c8fb72e38ff991d932da6a0acf91c0128ba", "html_url": "https://github.com/rust-lang/rust/commit/8ad56c8fb72e38ff991d932da6a0acf91c0128ba"}], "stats": {"total": 54, "additions": 30, "deletions": 24}, "files": [{"sha": "b7b5f059de6fc961f7820bfcfc2bae8ae18f2eb3", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de9de4fef1219a98b0203ef67f348e6548dc80fe/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9de4fef1219a98b0203ef67f348e6548dc80fe/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=de9de4fef1219a98b0203ef67f348e6548dc80fe", "patch": "@@ -159,6 +159,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(methods::MANUAL_SPLIT_ONCE),\n     LintId::of(methods::MANUAL_STR_REPEAT),\n     LintId::of(methods::MAP_COLLECT_RESULT_UNIT),\n+    LintId::of(methods::MAP_FLATTEN),\n     LintId::of(methods::MAP_IDENTITY),\n     LintId::of(methods::NEEDLESS_SPLITN),\n     LintId::of(methods::NEW_RET_NO_SELF),"}, {"sha": "a21ddf73a115e6a22a54dbfc2867abdb43cf0228", "filename": "clippy_lints/src/lib.register_complexity.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de9de4fef1219a98b0203ef67f348e6548dc80fe/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9de4fef1219a98b0203ef67f348e6548dc80fe/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_complexity.rs?ref=de9de4fef1219a98b0203ef67f348e6548dc80fe", "patch": "@@ -41,6 +41,7 @@ store.register_group(true, \"clippy::complexity\", Some(\"clippy_complexity\"), vec!\n     LintId::of(methods::MANUAL_FILTER_MAP),\n     LintId::of(methods::MANUAL_FIND_MAP),\n     LintId::of(methods::MANUAL_SPLIT_ONCE),\n+    LintId::of(methods::MAP_FLATTEN),\n     LintId::of(methods::MAP_IDENTITY),\n     LintId::of(methods::NEEDLESS_SPLITN),\n     LintId::of(methods::OPTION_AS_REF_DEREF),"}, {"sha": "70a4a624378909dd1040fbe9997927c07fa6d8c2", "filename": "clippy_lints/src/lib.register_pedantic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de9de4fef1219a98b0203ef67f348e6548dc80fe/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9de4fef1219a98b0203ef67f348e6548dc80fe/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_pedantic.rs?ref=de9de4fef1219a98b0203ef67f348e6548dc80fe", "patch": "@@ -63,7 +63,6 @@ store.register_group(true, \"clippy::pedantic\", Some(\"clippy_pedantic\"), vec![\n     LintId::of(methods::FROM_ITER_INSTEAD_OF_COLLECT),\n     LintId::of(methods::IMPLICIT_CLONE),\n     LintId::of(methods::INEFFICIENT_TO_STRING),\n-    LintId::of(methods::MAP_FLATTEN),\n     LintId::of(methods::MAP_UNWRAP_OR),\n     LintId::of(misc::FLOAT_CMP),\n     LintId::of(misc::USED_UNDERSCORE_BINDING),"}, {"sha": "ad6fb0c613bb49774129cb0ec062a60aad376640", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de9de4fef1219a98b0203ef67f348e6548dc80fe/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9de4fef1219a98b0203ef67f348e6548dc80fe/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=de9de4fef1219a98b0203ef67f348e6548dc80fe", "patch": "@@ -543,7 +543,7 @@ declare_clippy_lint! {\n     /// ```\n     #[clippy::version = \"1.31.0\"]\n     pub MAP_FLATTEN,\n-    pedantic,\n+    complexity,\n     \"using combinations of `flatten` and `map` which can usually be written as a single method call\"\n }\n "}, {"sha": "0141fb7856d06abf4a27857b45e9a86f756ca4f3", "filename": "tests/ui/option_env_unwrap.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_env_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_env_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_env_unwrap.rs?ref=de9de4fef1219a98b0203ef67f348e6548dc80fe", "patch": "@@ -1,5 +1,6 @@\n // aux-build:macro_rules.rs\n #![warn(clippy::option_env_unwrap)]\n+#![allow(clippy::map_flatten)]\n \n #[macro_use]\n extern crate macro_rules;"}, {"sha": "885ac096cc8f763088d577bdcd7cfed630d71bc0", "filename": "tests/ui/option_env_unwrap.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_env_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_env_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_env_unwrap.stderr?ref=de9de4fef1219a98b0203ef67f348e6548dc80fe", "patch": "@@ -1,5 +1,5 @@\n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n-  --> $DIR/option_env_unwrap.rs:17:13\n+  --> $DIR/option_env_unwrap.rs:18:13\n    |\n LL |     let _ = option_env!(\"PATH\").unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,15 +8,15 @@ LL |     let _ = option_env!(\"PATH\").unwrap();\n    = help: consider using the `env!` macro instead\n \n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n-  --> $DIR/option_env_unwrap.rs:18:13\n+  --> $DIR/option_env_unwrap.rs:19:13\n    |\n LL |     let _ = option_env!(\"PATH\").expect(\"environment variable PATH isn't set\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using the `env!` macro instead\n \n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n-  --> $DIR/option_env_unwrap.rs:9:9\n+  --> $DIR/option_env_unwrap.rs:10:9\n    |\n LL |         option_env!($env).unwrap()\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -28,7 +28,7 @@ LL |     let _ = option_env_unwrap!(\"PATH\");\n    = note: this error originates in the macro `option_env_unwrap` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n-  --> $DIR/option_env_unwrap.rs:12:9\n+  --> $DIR/option_env_unwrap.rs:13:9\n    |\n LL |         option_env!($env).expect($message)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -40,7 +40,7 @@ LL |     let _ = option_env_unwrap!(\"PATH\", \"environment variable PATH isn't set\n    = note: this error originates in the macro `option_env_unwrap` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n-  --> $DIR/option_env_unwrap.rs:21:13\n+  --> $DIR/option_env_unwrap.rs:22:13\n    |\n LL |     let _ = option_env_unwrap_external!(\"PATH\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -49,7 +49,7 @@ LL |     let _ = option_env_unwrap_external!(\"PATH\");\n    = note: this error originates in the macro `option_env_unwrap_external` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: this will panic at run-time if the environment variable doesn't exist at compile-time\n-  --> $DIR/option_env_unwrap.rs:22:13\n+  --> $DIR/option_env_unwrap.rs:23:13\n    |\n LL |     let _ = option_env_unwrap_external!(\"PATH\", \"environment variable PATH isn't set\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "b20f73f3110dee44367854c86225c6de50f81372", "filename": "tests/ui/option_filter_map.fixed", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_filter_map.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_filter_map.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_filter_map.fixed?ref=de9de4fef1219a98b0203ef67f348e6548dc80fe", "patch": "@@ -1,8 +1,6 @@\n-#![warn(clippy::option_filter_map)]\n // run-rustfix\n-fn odds_out(x: i32) -> Option<i32> {\n-    if x % 2 == 0 { Some(x) } else { None }\n-}\n+#![warn(clippy::option_filter_map)]\n+#![allow(clippy::map_flatten)]\n \n fn main() {\n     let _ = Some(Some(1)).flatten();\n@@ -21,3 +19,7 @@ fn main() {\n         .map(odds_out)\n         .flatten();\n }\n+\n+fn odds_out(x: i32) -> Option<i32> {\n+    if x % 2 == 0 { Some(x) } else { None }\n+}"}, {"sha": "7abaaa0fb83b35883da6233109796da4ba708502", "filename": "tests/ui/option_filter_map.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_filter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_filter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_filter_map.rs?ref=de9de4fef1219a98b0203ef67f348e6548dc80fe", "patch": "@@ -1,8 +1,6 @@\n-#![warn(clippy::option_filter_map)]\n // run-rustfix\n-fn odds_out(x: i32) -> Option<i32> {\n-    if x % 2 == 0 { Some(x) } else { None }\n-}\n+#![warn(clippy::option_filter_map)]\n+#![allow(clippy::map_flatten)]\n \n fn main() {\n     let _ = Some(Some(1)).filter(Option::is_some).map(Option::unwrap);\n@@ -23,3 +21,7 @@ fn main() {\n         .filter(|o| o.is_some())\n         .map(|o| o.unwrap());\n }\n+\n+fn odds_out(x: i32) -> Option<i32> {\n+    if x % 2 == 0 { Some(x) } else { None }\n+}"}, {"sha": "4a030ac9ab045440cbc69b85688cb3d0159d1ccb", "filename": "tests/ui/option_filter_map.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_filter_map.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de9de4fef1219a98b0203ef67f348e6548dc80fe/tests%2Fui%2Foption_filter_map.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_filter_map.stderr?ref=de9de4fef1219a98b0203ef67f348e6548dc80fe", "patch": "@@ -1,51 +1,51 @@\n error: `filter` for `Some` followed by `unwrap`\n-  --> $DIR/option_filter_map.rs:8:27\n+  --> $DIR/option_filter_map.rs:6:27\n    |\n LL |     let _ = Some(Some(1)).filter(Option::is_some).map(Option::unwrap);\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `flatten()`\n    |\n    = note: `-D clippy::option-filter-map` implied by `-D warnings`\n \n error: `filter` for `Some` followed by `unwrap`\n-  --> $DIR/option_filter_map.rs:9:27\n+  --> $DIR/option_filter_map.rs:7:27\n    |\n LL |     let _ = Some(Some(1)).filter(|o| o.is_some()).map(|o| o.unwrap());\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `flatten()`\n \n error: `filter` for `Some` followed by `unwrap`\n-  --> $DIR/option_filter_map.rs:10:35\n+  --> $DIR/option_filter_map.rs:8:35\n    |\n LL |     let _ = Some(1).map(odds_out).filter(Option::is_some).map(Option::unwrap);\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `flatten()`\n \n error: `filter` for `Some` followed by `unwrap`\n-  --> $DIR/option_filter_map.rs:11:35\n+  --> $DIR/option_filter_map.rs:9:35\n    |\n LL |     let _ = Some(1).map(odds_out).filter(|o| o.is_some()).map(|o| o.unwrap());\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `flatten()`\n \n error: `filter` for `Some` followed by `unwrap`\n-  --> $DIR/option_filter_map.rs:13:39\n+  --> $DIR/option_filter_map.rs:11:39\n    |\n LL |     let _ = vec![Some(1)].into_iter().filter(Option::is_some).map(Option::unwrap);\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `flatten()`\n \n error: `filter` for `Some` followed by `unwrap`\n-  --> $DIR/option_filter_map.rs:14:39\n+  --> $DIR/option_filter_map.rs:12:39\n    |\n LL |     let _ = vec![Some(1)].into_iter().filter(|o| o.is_some()).map(|o| o.unwrap());\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `flatten()`\n \n error: `filter` for `Some` followed by `unwrap`\n-  --> $DIR/option_filter_map.rs:18:10\n+  --> $DIR/option_filter_map.rs:16:10\n    |\n LL |           .filter(Option::is_some)\n    |  __________^\n LL | |         .map(Option::unwrap);\n    | |____________________________^ help: consider using `flatten` instead: `flatten()`\n \n error: `filter` for `Some` followed by `unwrap`\n-  --> $DIR/option_filter_map.rs:23:10\n+  --> $DIR/option_filter_map.rs:21:10\n    |\n LL |           .filter(|o| o.is_some())\n    |  __________^"}]}