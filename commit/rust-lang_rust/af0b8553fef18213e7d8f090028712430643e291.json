{"sha": "af0b8553fef18213e7d8f090028712430643e291", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMGI4NTUzZmVmMTgyMTNlN2Q4ZjA5MDAyODcxMjQzMDY0M2UyOTE=", "commit": {"author": {"name": "XAMPPRocky", "email": "4464295+XAMPPRocky@users.noreply.github.com", "date": "2021-07-23T11:06:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-23T11:06:23Z"}, "message": "Update RELEASES.md", "tree": {"sha": "19bd02a672ce604ef853596acd13ee5058e08fe8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19bd02a672ce604ef853596acd13ee5058e08fe8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af0b8553fef18213e7d8f090028712430643e291", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg+qKvCRBK7hj4Ov3rIwAATs4IAEd+IOF/fVxE8MyGnU02zGj/\neFXPxnzeYo18PtMMSGgzwLwE4At60QlX7Wnf2MFg68uUjizc6xSUuSM1eLnKA3V+\n9qe5NFFM+pbktvhq21vBVEaE6wfQ0Q3eJBWASRgX6a/dIgsbg/9y+Uu1gwwLk2CE\nowxd7JWq/1Hr3H7so0FnZ6xcCOgLvk+DL3UZIbvhtuckb/UfCjcjrjkrKghEyro+\nZO1lAO1QKmLo0IZr8wOSPl1oNTsaVzhLFL8xA418OtDSieH+ZtEa9UAh1nXAgxup\nEjfZ4QEquM9zKpfN4OgzhnLZuStItxDlPZOVFn2jNr3Xbx16BXKwlp7+xmA2pcA=\n=qqqK\n-----END PGP SIGNATURE-----\n", "payload": "tree 19bd02a672ce604ef853596acd13ee5058e08fe8\nparent 10ac14194190b6ae6583cc7962c4382640aafcb1\nauthor XAMPPRocky <4464295+XAMPPRocky@users.noreply.github.com> 1627038383 +0200\ncommitter GitHub <noreply@github.com> 1627038383 +0200\n\nUpdate RELEASES.md"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af0b8553fef18213e7d8f090028712430643e291", "html_url": "https://github.com/rust-lang/rust/commit/af0b8553fef18213e7d8f090028712430643e291", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af0b8553fef18213e7d8f090028712430643e291/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10ac14194190b6ae6583cc7962c4382640aafcb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/10ac14194190b6ae6583cc7962c4382640aafcb1", "html_url": "https://github.com/rust-lang/rust/commit/10ac14194190b6ae6583cc7962c4382640aafcb1"}], "stats": {"total": 29, "additions": 0, "deletions": 29}, "files": [{"sha": "8485dd5c02336fc7a36ed5565aaf202d1e0a2877", "filename": "RELEASES.md", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/af0b8553fef18213e7d8f090028712430643e291/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/af0b8553fef18213e7d8f090028712430643e291/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=af0b8553fef18213e7d8f090028712430643e291", "patch": "@@ -37,16 +37,13 @@ Compiler\n - [Improved debugger output for enums on Windows MSVC platforms.][85292]\n - [Added tier 3\\* support for `bpfel-unknown-none`\n    and `bpfeb-unknown-none`.][79608]\n-- [Added tier 3 support for `powerpc64le-unknown-freebsd`.][83572]\n \n \\* Refer to Rust's [platform support page][platform-support-doc] for more\n    information on Rust's tiered platform support.\n \n Libraries\n -----------------------\n \n-- [You can now explicitly import the prelude of different editions\n-  through `std::prelude`. (e.g. `use std::prelude::rust_2021::*;`)][86294]\n - [`panic::panic_any` will now `#[track_caller]`.][85745]\n - [Added `OutOfMemory` as a variant of `io::ErrorKind`.][84744]\n - [ `proc_macro::Literal` now implements `FromStr`.][84717]\n@@ -64,19 +61,7 @@ Stabilized APIs\n - [`BTreeMap::into_values`]\n - [`HashMap::into_keys`]\n - [`HashMap::into_values`]\n-- [`MaybeUninit::assume_init_mut`]\n-- [`MaybeUninit::assume_init_ref`]\n - [`arch::wasm32`]\n-- [`arch::x86::_bittest`]\n-- [`arch::x86::_bittestandcomplement`]\n-- [`arch::x86::_bittestandset`]\n-- [`arch::x86_64::_bittest`]\n-- [`arch::x86_64::_bittestandcomplement64`]\n-- [`arch::x86_64::_bittestandcomplement`]\n-- [`arch::x86_64::_bittestandreset64`]\n-- [`arch::x86_64::_bittestandset64`]\n-- [`arch::x86_64::_bittestandset`]\n-- [`ops::ControlFlow`]\n - [`VecDeque::binary_search`]\n - [`VecDeque::binary_search_by`]\n - [`VecDeque::binary_search_by_key`]\n@@ -99,7 +84,6 @@ Cargo\n [84988]: https://github.com/rust-lang/rust/pull/84988\n [84701]: https://github.com/rust-lang/rust/pull/84701\n [84072]: https://github.com/rust-lang/rust/pull/84072\n-[86294]: https://github.com/rust-lang/rust/pull/86294\n [85745]: https://github.com/rust-lang/rust/pull/85745\n [84744]: https://github.com/rust-lang/rust/pull/84744\n [85078]: https://github.com/rust-lang/rust/pull/85078\n@@ -108,28 +92,15 @@ Cargo\n [83366]: https://github.com/rust-lang/rust/pull/83366\n [83278]: https://github.com/rust-lang/rust/pull/83278\n [85292]: https://github.com/rust-lang/rust/pull/85292\n-[83572]: https://github.com/rust-lang/rust/pull/83572\n [cargo/9520]: https://github.com/rust-lang/cargo/pull/9520\n [cargo/9499]: https://github.com/rust-lang/cargo/pull/9499\n [cargo/9488]: https://github.com/rust-lang/cargo/pull/9488\n [cargo/9375]: https://github.com/rust-lang/cargo/pull/9375\n-[`arch::x86::_bittest`]: https://doc.rust-lang.org/stable/core/arch/x86/fn._bittest.html\n-[`arch::x86::_bittestandcomplement`]: https://doc.rust-lang.org/stable/core/arch/x86/fn._bittestandcomplement.html\n-[`arch::x86::_bittestandset`]: https://doc.rust-lang.org/stable/core/arch/x86/fn._bittestandset.html\n-[`arch::x86_64::_bittest`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittest.html\n-[`arch::x86_64::_bittestandcomplement64`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittestandcomplement64.html\n-[`arch::x86_64::_bittestandcomplement`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittestandcomplement.html\n-[`arch::x86_64::_bittestandreset64`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittestandreset64.html\n-[`arch::x86_64::_bittestandset64`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittestandset64.html\n-[`arch::x86_64::_bittestandset`]: https://doc.rust-lang.org/stable/core/arch/x86_64/fn._bittestandset.html\n [`BTreeMap::into_keys`]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html#method.into_keys\n [`BTreeMap::into_values`]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html#method.into_values\n [`HashMap::into_keys`]: https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.into_keys\n [`HashMap::into_values`]: https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.into_values\n-[`MaybeUninit::assume_init_ref`]: https://doc.rust-lang.org/std/mem/union.MaybeUninit.html#method.assume_init_ref\n-[`MaybeUninit::assume_init_mut`]: https://doc.rust-lang.org/std/mem/union.MaybeUninit.html#method.assume_init_mut\n [`arch::wasm32`]: https://doc.rust-lang.org/core/arch/wasm32/index.html\n-[`ops::ControlFlow`]: https://doc.rust-lang.org/std/ops/enum.ControlFlow.html\n [`VecDeque::binary_search`]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html#method.binary_search\n [`VecDeque::binary_search_by`]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html#method.binary_search_by\n "}]}