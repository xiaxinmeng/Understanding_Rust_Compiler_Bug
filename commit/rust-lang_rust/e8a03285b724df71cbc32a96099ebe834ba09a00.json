{"sha": "e8a03285b724df71cbc32a96099ebe834ba09a00", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4YTAzMjg1YjcyNGRmNzFjYmMzMmE5NjA5OWViZTgzNGJhMDlhMDA=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-14T00:29:01Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-15T17:48:50Z"}, "message": "Ratchet up travis to build stage1 and our own LLVM.\n\nTidy is still run first for failing fast on the easy stuff.\n\nTo accomplish this we have travis actually persist ccache across builds. This\nhas LLVM built within 6 minutes, and all of stage1 built within 18.\nCaching should work on fresh PRs (cache acquired from the master branch).\nBecause all we persist is ccache, there is minimal danger of persisting corrupt\nbuild state.\n\nI had to mangle `configure` a bit to make --enable-ccache work when custom\ncompilers are provide via CC and CXX.", "tree": {"sha": "56fde7cb23717b85f40e32fd9fcad2af64ee4b48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56fde7cb23717b85f40e32fd9fcad2af64ee4b48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8a03285b724df71cbc32a96099ebe834ba09a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8a03285b724df71cbc32a96099ebe834ba09a00", "html_url": "https://github.com/rust-lang/rust/commit/e8a03285b724df71cbc32a96099ebe834ba09a00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8a03285b724df71cbc32a96099ebe834ba09a00/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67256dff6dd7526f0be9da5092a6b3e390654c8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/67256dff6dd7526f0be9da5092a6b3e390654c8c", "html_url": "https://github.com/rust-lang/rust/commit/67256dff6dd7526f0be9da5092a6b3e390654c8c"}], "stats": {"total": 64, "additions": 47, "deletions": 17}, "files": [{"sha": "dc955bc2f2be2e3527b553786db41fb2a5b2a1ba", "filename": ".travis.yml", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e8a03285b724df71cbc32a96099ebe834ba09a00/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/e8a03285b724df71cbc32a96099ebe834ba09a00/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=e8a03285b724df71cbc32a96099ebe834ba09a00", "patch": "@@ -1,20 +1,38 @@\n-# Use something that's not 'ruby' so we don't set up things like\n-# RVM/bundler/ruby and whatnot. Right now 'rust' as a language actually\n-# downloads a rust/cargo snapshot, which we don't really want for building rust.\n+# ccache support is disabled unless your language is a C-derivative. However\n+# `language: C` unconditionally sets `CC=compiler`. If we just set it in our\n+# `env` it will be overwritten by the default (gcc 4.6).\n language: c\n+compiler: /usr/bin/gcc-4.7\n+cache: ccache\n sudo: false\n \n # The test suite is in general way too stressful for travis, especially in\n # terms of time limit and reliability. In the past we've tried to scale things\n # back to only build the stage1 compiler and run a subset of tests, but this\n # didn't end up panning out very well.\n #\n-# As a result, we're just using travis to run `make tidy` now. It'll help\n-# everyone find out about their trailing spaces early on!\n+# As a result, we're just using travis to run `make tidy` and *only* build\n+# stage1 but *not* test it for now (a strict subset of the bootstrap). This will\n+# catch \"obvious\" errors like style or not even compiling.\n+#\n+# We need gcc4.7 or higher to build LLVM, and travis (well, Ubuntu 12.04)\n+# currently ships with 4.6. Gotta download our own.\n before_script:\n-  - ./configure --llvm-root=path/to/nowhere\n+  - ./configure --enable-ccache\n script:\n   - make tidy\n+  - make rustc-stage1 -j4\n+\n+env:\n+  - CXX=/usr/bin/g++-4.7\n+\n+addons:\n+  apt:\n+    sources:\n+    - ubuntu-toolchain-r-test\n+    packages:\n+    - gcc-4.7\n+    - g++-4.7\n \n # Real testing happens on http://buildbot.rust-lang.org/\n #"}, {"sha": "da8630c46ffd8355bdb26c5fee4dfa510a148a27", "filename": "configure", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e8a03285b724df71cbc32a96099ebe834ba09a00/configure", "raw_url": "https://github.com/rust-lang/rust/raw/e8a03285b724df71cbc32a96099ebe834ba09a00/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=e8a03285b724df71cbc32a96099ebe834ba09a00", "patch": "@@ -1016,15 +1016,12 @@ fi\n \n if [ ! -z \"$CFG_ENABLE_CCACHE\" ]\n then\n-    if [ -z \"$CC\" ]\n+    if [ -z \"$CFG_CCACHE\" ]\n     then\n-        if [ -z \"$CFG_CCACHE\" ]\n-        then\n-            err \"ccache requested but not found\"\n-        fi\n-\n-        CFG_CC=\"ccache $CFG_CC\"\n+        err \"ccache requested but not found\"\n     fi\n+\n+    CFG_CC=\"ccache $CFG_CC\"\n fi\n \n if [ -z \"$CC\" -a -z \"$CFG_ENABLE_CLANG\" -a -z \"$CFG_GCC\" ]\n@@ -1513,11 +1510,26 @@ do\n \n             (*)\n             msg \"inferring LLVM_CXX/CC from CXX/CC = $CXX/$CC\"\n-            LLVM_CXX_32=\"$CXX\"\n-            LLVM_CC_32=\"$CC\"\n+            if [ ! -z \"$CFG_ENABLE_CCACHE\" ]\n+            then\n+                if [ -z \"$CFG_CCACHE\" ]\n+                then\n+                    err \"ccache requested but not found\"\n+                fi\n+\n+                LLVM_CXX_32=\"ccache $CXX\"\n+                LLVM_CC_32=\"ccache $CC\"\n+\n+                LLVM_CXX_64=\"ccache $CXX\"\n+                LLVM_CC_64=\"ccache $CC\"\n+            else\n+                LLVM_CXX_32=\"$CXX\"\n+                LLVM_CC_32=\"$CC\"\n+\n+                LLVM_CXX_64=\"$CXX\"\n+                LLVM_CC_64=\"$CC\"\n+            fi\n \n-            LLVM_CXX_64=\"$CXX\"\n-            LLVM_CC_64=\"$CC\"\n             ;;\n         esac\n "}]}