{"sha": "63d241a7b78f129477d980bf5a6baa818f47b4f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZDI0MWE3Yjc4ZjEyOTQ3N2Q5ODBiZjVhNmJhYTgxOGY0N2I0Zjg=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-08-18T13:22:10Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-08-18T13:22:10Z"}, "message": "Make `grow_impl` unsafe", "tree": {"sha": "5e3a2948163f08525aeba2f731cc1988d95c6551", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e3a2948163f08525aeba2f731cc1988d95c6551"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63d241a7b78f129477d980bf5a6baa818f47b4f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63d241a7b78f129477d980bf5a6baa818f47b4f8", "html_url": "https://github.com/rust-lang/rust/commit/63d241a7b78f129477d980bf5a6baa818f47b4f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63d241a7b78f129477d980bf5a6baa818f47b4f8/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66a651244ee810d9027c0ff2266a097d9aa06b59", "url": "https://api.github.com/repos/rust-lang/rust/commits/66a651244ee810d9027c0ff2266a097d9aa06b59", "html_url": "https://github.com/rust-lang/rust/commit/66a651244ee810d9027c0ff2266a097d9aa06b59"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "fa5eb1823f1a0755c721abbed9a13b5e5e5a0b84", "filename": "library/alloc/src/alloc.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/63d241a7b78f129477d980bf5a6baa818f47b4f8/library%2Falloc%2Fsrc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63d241a7b78f129477d980bf5a6baa818f47b4f8/library%2Falloc%2Fsrc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Falloc.rs?ref=63d241a7b78f129477d980bf5a6baa818f47b4f8", "patch": "@@ -175,8 +175,9 @@ impl Global {\n         }\n     }\n \n+    // Safety: Same as `AllocRef::grow`\n     #[inline]\n-    fn grow_impl(\n+    unsafe fn grow_impl(\n         &mut self,\n         ptr: NonNull<u8>,\n         layout: Layout,\n@@ -241,7 +242,8 @@ unsafe impl AllocRef for Global {\n         layout: Layout,\n         new_size: usize,\n     ) -> Result<NonNull<[u8]>, AllocErr> {\n-        self.grow_impl(ptr, layout, new_size, false)\n+        // SAFETY: all conditions must be upheld by the caller\n+        unsafe { self.grow_impl(ptr, layout, new_size, false) }\n     }\n \n     #[inline]\n@@ -251,7 +253,8 @@ unsafe impl AllocRef for Global {\n         layout: Layout,\n         new_size: usize,\n     ) -> Result<NonNull<[u8]>, AllocErr> {\n-        self.grow_impl(ptr, layout, new_size, true)\n+        // SAFETY: all conditions must be upheld by the caller\n+        unsafe { self.grow_impl(ptr, layout, new_size, true) }\n     }\n \n     #[inline]"}, {"sha": "b4009c86419d5148e3fb6f79a17e6d43b1d692e0", "filename": "library/std/src/alloc.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/63d241a7b78f129477d980bf5a6baa818f47b4f8/library%2Fstd%2Fsrc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63d241a7b78f129477d980bf5a6baa818f47b4f8/library%2Fstd%2Fsrc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Falloc.rs?ref=63d241a7b78f129477d980bf5a6baa818f47b4f8", "patch": "@@ -149,8 +149,9 @@ impl System {\n         }\n     }\n \n+    // Safety: Same as `AllocRef::grow`\n     #[inline]\n-    fn grow_impl(\n+    unsafe fn grow_impl(\n         &mut self,\n         ptr: NonNull<u8>,\n         layout: Layout,\n@@ -217,7 +218,8 @@ unsafe impl AllocRef for System {\n         layout: Layout,\n         new_size: usize,\n     ) -> Result<NonNull<[u8]>, AllocErr> {\n-        self.grow_impl(ptr, layout, new_size, false)\n+        // SAFETY: all conditions must be upheld by the caller\n+        unsafe { self.grow_impl(ptr, layout, new_size, false) }\n     }\n \n     #[inline]\n@@ -227,7 +229,8 @@ unsafe impl AllocRef for System {\n         layout: Layout,\n         new_size: usize,\n     ) -> Result<NonNull<[u8]>, AllocErr> {\n-        self.grow_impl(ptr, layout, new_size, true)\n+        // SAFETY: all conditions must be upheld by the caller\n+        unsafe { self.grow_impl(ptr, layout, new_size, true) }\n     }\n \n     #[inline]"}]}