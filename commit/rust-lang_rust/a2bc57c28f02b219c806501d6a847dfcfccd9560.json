{"sha": "a2bc57c28f02b219c806501d6a847dfcfccd9560", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYmM1N2MyOGYwMmIyMTljODA2NTAxZDZhODQ3ZGZjZmNjZDk1NjA=", "commit": {"author": {"name": "Dorian Peake", "email": "dozzman@hotmail.co.uk", "date": "2021-09-05T15:59:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-05T15:59:38Z"}, "message": "Update manual.adoc", "tree": {"sha": "13836e10384f2b239af11e743eee3208d8ca49f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13836e10384f2b239af11e743eee3208d8ca49f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2bc57c28f02b219c806501d6a847dfcfccd9560", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhNOlqCRBK7hj4Ov3rIwAAPYwIACCK4DpEaXhjLY9F8aYLRU7y\n7X8uaJoWJHDmt46mwf/vkLQs1HTTyQKAcfVrEs7DElDD7U4Yunp5iWoA2hgGA0gU\nlnTFPYSYylhkJ1vY5io6qRI+yqcwRGv19KJCmnJGL58OTB594IhxmkasR9N1jrhC\nOo/Lf5PygF136R2tik0Jf1rrCPqw9Gdu4tD21B/bEtoCc/ddL+/MuGAWkBZLQyL5\nhT6vNaze8P6GE5ogdXpYsuqmdqyb+2YBj31Izd9GiE5mBO2g67c45vL19Z1cMtnf\n5g/7jWgY9UrmAoUuOWTFBFs7AymhSrlRcdEIipU8yVn4vQXIIT+DSXN460NQCK8=\n=E08/\n-----END PGP SIGNATURE-----\n", "payload": "tree 13836e10384f2b239af11e743eee3208d8ca49f1\nparent aae1e97590138be6891ad1518e536a5aaa0f78bd\nauthor Dorian Peake <dozzman@hotmail.co.uk> 1630857578 +0100\ncommitter GitHub <noreply@github.com> 1630857578 +0100\n\nUpdate manual.adoc"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2bc57c28f02b219c806501d6a847dfcfccd9560", "html_url": "https://github.com/rust-lang/rust/commit/a2bc57c28f02b219c806501d6a847dfcfccd9560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2bc57c28f02b219c806501d6a847dfcfccd9560/comments", "author": {"login": "dozzman", "id": 1062440, "node_id": "MDQ6VXNlcjEwNjI0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1062440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dozzman", "html_url": "https://github.com/dozzman", "followers_url": "https://api.github.com/users/dozzman/followers", "following_url": "https://api.github.com/users/dozzman/following{/other_user}", "gists_url": "https://api.github.com/users/dozzman/gists{/gist_id}", "starred_url": "https://api.github.com/users/dozzman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dozzman/subscriptions", "organizations_url": "https://api.github.com/users/dozzman/orgs", "repos_url": "https://api.github.com/users/dozzman/repos", "events_url": "https://api.github.com/users/dozzman/events{/privacy}", "received_events_url": "https://api.github.com/users/dozzman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aae1e97590138be6891ad1518e536a5aaa0f78bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/aae1e97590138be6891ad1518e536a5aaa0f78bd", "html_url": "https://github.com/rust-lang/rust/commit/aae1e97590138be6891ad1518e536a5aaa0f78bd"}], "stats": {"total": 18, "additions": 3, "deletions": 15}, "files": [{"sha": "ee42702660865e17b5c2b192d2b475144fa4a7dd", "filename": "docs/user/manual.adoc", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a2bc57c28f02b219c806501d6a847dfcfccd9560/docs%2Fuser%2Fmanual.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/a2bc57c28f02b219c806501d6a847dfcfccd9560/docs%2Fuser%2Fmanual.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fmanual.adoc?ref=a2bc57c28f02b219c806501d6a847dfcfccd9560", "patch": "@@ -616,23 +616,11 @@ See https://github.com/rust-analyzer/rust-project.json-example for a small examp\n \n You can set `RA_LOG` environmental variable to `rust_analyzer=info` to inspect how rust-analyzer handles config and project loading.\n \n-Note that calls to `cargo check` are disabled when using `rust-project.json` by default, so compilation errors and warnings will no longer be sent to your LSP client. To enable these compilation errors you will need to specify explicitly what command rust-analyzer should run to perform the checks using the `checkOnSave.overrideCommand` configuration. The following example, explicitly enables calls to `cargo check` in neovim's configuration:\n+Note that calls to `cargo check` are disabled when using `rust-project.json` by default, so compilation errors and warnings will no longer be sent to your LSP client. To enable these compilation errors you will need to specify explicitly what command rust-analyzer should run to perform the checks using the `checkOnSave.overrideCommand` configuration. As an example, the following configuration explicitly sets `cargo check` as the `checkOnSave` command.\n \n-[source,vim]\n+[source,json]\n ----\n-lua << EOF\n-nvim_lsp['rust_analyzer'].setup {\n-  on_attach = on_attach,\n-  settings = {\n-    [\"rust-analyzer\"] = {\n-      checkOnSave = {\n-        overrideCommand = {\"cargo\", \"check\", \"--message-format=json\"},\n-        enable = true,\n-      }\n-    }\n-  }\n-}\n-EOF\n+{ \"rust-analyzer.checkOnSave.overrideCommand\": [\"cargo\", \"check\", \"--message-format=json\"] }\n ----\n \n The `checkOnSave.overrideCommand` requires the command specified to output json error messages for rust-analyzer to consume. The `--message-format=json` flag does this for `cargo check` so whichever command you use must also output errors in this format. See the <<Configuration>> section for more information. "}]}