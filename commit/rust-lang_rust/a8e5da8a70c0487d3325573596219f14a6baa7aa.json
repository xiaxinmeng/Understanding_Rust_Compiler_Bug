{"sha": "a8e5da8a70c0487d3325573596219f14a6baa7aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZTVkYThhNzBjMDQ4N2QzMzI1NTczNTk2MjE5ZjE0YTZiYWE3YWE=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-22T13:44:38Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-22T13:44:38Z"}, "message": "ra_hir_ty: fix formatting", "tree": {"sha": "45885b4355086d1b1a6c67c18b31fc77144c7f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45885b4355086d1b1a6c67c18b31fc77144c7f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8e5da8a70c0487d3325573596219f14a6baa7aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8e5da8a70c0487d3325573596219f14a6baa7aa", "html_url": "https://github.com/rust-lang/rust/commit/a8e5da8a70c0487d3325573596219f14a6baa7aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8e5da8a70c0487d3325573596219f14a6baa7aa/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e827bd948ea206328b126345ab8e909978b3b9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e827bd948ea206328b126345ab8e909978b3b9b", "html_url": "https://github.com/rust-lang/rust/commit/5e827bd948ea206328b126345ab8e909978b3b9b"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "533c6ccfb1f17a3f05ee45899a65100af2399582", "filename": "crates/ra_hir_ty/src/method_resolution.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a8e5da8a70c0487d3325573596219f14a6baa7aa/crates%2Fra_hir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8e5da8a70c0487d3325573596219f14a6baa7aa/crates%2Fra_hir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fmethod_resolution.rs?ref=a8e5da8a70c0487d3325573596219f14a6baa7aa", "patch": "@@ -95,14 +95,14 @@ impl Ty {\n         // Types like slice can have inherent impls in several crates, (core and alloc).\n         // The corresponding impls are marked with lang items, so we can use them to find the required crates.\n         macro_rules! lang_item_crate {\n-        ($($name:expr),+ $(,)?) => {{\n-            let mut v = ArrayVec::<[LangItemTarget; 2]>::new();\n-            $(\n-                v.extend(db.lang_item(cur_crate, $name.into()));\n-            )+\n-            v\n-        }};\n-    }\n+            ($($name:expr),+ $(,)?) => {{\n+                let mut v = ArrayVec::<[LangItemTarget; 2]>::new();\n+                $(\n+                    v.extend(db.lang_item(cur_crate, $name.into()));\n+                )+\n+                v\n+            }};\n+        }\n \n         let lang_item_targets = match self {\n             Ty::Apply(a_ty) => match a_ty.ctor {"}]}