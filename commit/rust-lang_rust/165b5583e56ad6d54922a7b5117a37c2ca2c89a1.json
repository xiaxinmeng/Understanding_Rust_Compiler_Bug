{"sha": "165b5583e56ad6d54922a7b5117a37c2ca2c89a1", "node_id": "C_kwDOAAsO6NoAKDE2NWI1NTgzZTU2YWQ2ZDU0OTIyYTdiNTExN2EzN2MyY2EyYzg5YTE", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-03-06T10:47:08Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-03-07T17:08:31Z"}, "message": "Fix typos in `LintExpectationId` docs", "tree": {"sha": "6b5ad70059386c5eb7ad6b34e93d5d9e042528cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b5ad70059386c5eb7ad6b34e93d5d9e042528cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/165b5583e56ad6d54922a7b5117a37c2ca2c89a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmImPA8ACgkQ/Ny/Ka9k\n1gGEVRAAhlfa76PBNM20wF7kjNISc1FI/RV8MkyJU5NssqVwru+hLM67DID2sQ6H\nsJLhBp4q//3PWwN9M7Q4bOsuo4rwFOPBFneQ684yOyE7GFakhn1TxYea3uW7sXH0\nCvn9ii52dis8qZjiG2fATsRzXt858kt+KVJthdPVvGRGyFpJ3v14Tn29cSyvNN1H\n0UjzmAc+OHJefRVbLMDAkMOOeEsFIJ/lC1DrjRdPB6A52/QP9ba1b3GGqIxGuxGy\nN6Kk9W9LFoJcwZrb1ivR1Db1ZXB6ucwA2IPx1rBcruKv+3hHDwR5H4Vw47MijYa4\n9VnB7SXUa0XlobeuC4/z16osT60j6cx6gZ05A2UPKf/L0AU/ppCNVjTcXu3KxV5g\n/55lXvRMnLjufybuCbYFzHTlz1YULhDsOHRlhlulZrFU0M+k6lcrpRCODDrHY6ZJ\nsbzmd6f1397DqR3BMopXlvZ5+uG92pimUru3FlyAdh31QzEmjLFktewY730aorXH\no1Fp4e+CR3RUQk8+h7iG5sjK2IYGXWzx0Nh/1/CuY3+mrnI5rZffrbTzaNDcujxQ\nUsgi455bIGPKVboEEQWD8JjA8wPAS4RmbZt8lWmi32EdLWGXO16LVdw7Gh1Vc2RD\nskdsj5prPESO0ejAMsnO8poRe+MOgzcRbTXmGuNhcETVbUZisKg=\n=vv5n\n-----END PGP SIGNATURE-----", "payload": "tree 6b5ad70059386c5eb7ad6b34e93d5d9e042528cc\nparent 47f3f66240eb20da1cd7583115a6ea1a2d25e388\nauthor xFrednet <xFrednet@gmail.com> 1646563628 +0100\ncommitter xFrednet <xFrednet@gmail.com> 1646672911 +0100\n\nFix typos in `LintExpectationId` docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/165b5583e56ad6d54922a7b5117a37c2ca2c89a1", "html_url": "https://github.com/rust-lang/rust/commit/165b5583e56ad6d54922a7b5117a37c2ca2c89a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/165b5583e56ad6d54922a7b5117a37c2ca2c89a1/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47f3f66240eb20da1cd7583115a6ea1a2d25e388", "url": "https://api.github.com/repos/rust-lang/rust/commits/47f3f66240eb20da1cd7583115a6ea1a2d25e388", "html_url": "https://github.com/rust-lang/rust/commit/47f3f66240eb20da1cd7583115a6ea1a2d25e388"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "af41e9c06d933b72b562f07dfd8a41518fd148ee", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/165b5583e56ad6d54922a7b5117a37c2ca2c89a1/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/165b5583e56ad6d54922a7b5117a37c2ca2c89a1/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=165b5583e56ad6d54922a7b5117a37c2ca2c89a1", "patch": "@@ -54,7 +54,7 @@ pub enum Applicability {\n /// Expected `Diagnostic`s get the lint level `Expect` which stores the `LintExpectationId`\n /// to match it with the actual expectation later on.\n ///\n-/// The `LintExpectationId` has to be has stable between compilations, as diagnostic\n+/// The `LintExpectationId` has to be stable between compilations, as diagnostic\n /// instances might be loaded from cache. Lint messages can be emitted during an\n /// `EarlyLintPass` operating on the AST and during a `LateLintPass` traversing the\n /// HIR tree. The AST doesn't have enough information to create a stable id. The\n@@ -71,7 +71,7 @@ pub enum Applicability {\n #[derive(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Debug, Hash, Encodable, Decodable)]\n pub enum LintExpectationId {\n     /// Used for lints emitted during the `EarlyLintPass`. This id is not\n-    /// has stable and should not be cached.\n+    /// hash stable and should not be cached.\n     Unstable { attr_id: AttrId, lint_index: Option<u16> },\n     /// The [`HirId`] that the lint expectation is attached to. This id is\n     /// stable and can be cached. The additional index ensures that nodes with\n@@ -113,7 +113,9 @@ impl<HCX: rustc_hir::HashStableContext> HashStable<HCX> for LintExpectationId {\n                 lint_index.hash_stable(hcx, hasher);\n             }\n             _ => {\n-                unreachable!(\"HashStable should only be called for a filled `LintExpectationId`\")\n+                unreachable!(\n+                    \"HashStable should only be called for filled and stable `LintExpectationId`\"\n+                )\n             }\n         }\n     }"}]}