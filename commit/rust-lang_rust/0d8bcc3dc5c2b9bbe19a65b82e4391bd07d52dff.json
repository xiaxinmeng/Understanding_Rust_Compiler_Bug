{"sha": "0d8bcc3dc5c2b9bbe19a65b82e4391bd07d52dff", "node_id": "C_kwDOAAsO6NoAKDBkOGJjYzNkYzVjMmI5YmJlMTlhNjViODJlNDM5MWJkMDdkNTJkZmY", "commit": {"author": {"name": "shourya5", "email": "shourya5@illinois.edu", "date": "2022-08-09T19:25:07Z"}, "committer": {"name": "shourya5", "email": "shourya5@illinois.edu", "date": "2022-08-09T19:25:07Z"}, "message": "added some comments", "tree": {"sha": "f68dd58dc48947874c05d8a9e57f5a7bc7f46dd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f68dd58dc48947874c05d8a9e57f5a7bc7f46dd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d8bcc3dc5c2b9bbe19a65b82e4391bd07d52dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d8bcc3dc5c2b9bbe19a65b82e4391bd07d52dff", "html_url": "https://github.com/rust-lang/rust/commit/0d8bcc3dc5c2b9bbe19a65b82e4391bd07d52dff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d8bcc3dc5c2b9bbe19a65b82e4391bd07d52dff/comments", "author": {"login": "shourya5", "id": 73142986, "node_id": "MDQ6VXNlcjczMTQyOTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73142986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shourya5", "html_url": "https://github.com/shourya5", "followers_url": "https://api.github.com/users/shourya5/followers", "following_url": "https://api.github.com/users/shourya5/following{/other_user}", "gists_url": "https://api.github.com/users/shourya5/gists{/gist_id}", "starred_url": "https://api.github.com/users/shourya5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shourya5/subscriptions", "organizations_url": "https://api.github.com/users/shourya5/orgs", "repos_url": "https://api.github.com/users/shourya5/repos", "events_url": "https://api.github.com/users/shourya5/events{/privacy}", "received_events_url": "https://api.github.com/users/shourya5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shourya5", "id": 73142986, "node_id": "MDQ6VXNlcjczMTQyOTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73142986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shourya5", "html_url": "https://github.com/shourya5", "followers_url": "https://api.github.com/users/shourya5/followers", "following_url": "https://api.github.com/users/shourya5/following{/other_user}", "gists_url": "https://api.github.com/users/shourya5/gists{/gist_id}", "starred_url": "https://api.github.com/users/shourya5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shourya5/subscriptions", "organizations_url": "https://api.github.com/users/shourya5/orgs", "repos_url": "https://api.github.com/users/shourya5/repos", "events_url": "https://api.github.com/users/shourya5/events{/privacy}", "received_events_url": "https://api.github.com/users/shourya5/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e553108c748b117afeee22633e2944b2363af40", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e553108c748b117afeee22633e2944b2363af40", "html_url": "https://github.com/rust-lang/rust/commit/9e553108c748b117afeee22633e2944b2363af40"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "a242243aaafa91f38576b90f9466f54f1ee199d4", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d8bcc3dc5c2b9bbe19a65b82e4391bd07d52dff/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d8bcc3dc5c2b9bbe19a65b82e4391bd07d52dff/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=0d8bcc3dc5c2b9bbe19a65b82e4391bd07d52dff", "patch": "@@ -1631,10 +1631,11 @@ fn chmod(_path: &Path, _perms: u32) {}\n /// If code is not 0 (successful exit status), exit status is 101 (rust's default error code.)\n /// If the test is running and code is an error code, it will cause a panic.\n fn detail_exit(code: i32) -> ! {\n-    // Successful exit\n+    // if in test and code is an error code, panic with staus code provided\n     if cfg!(test) && code != 0 {\n         panic!(\"status code: {}\", code);\n     } else {\n+        //otherwise,exit with provided status code\n         std::process::exit(code);\n     }\n }"}]}