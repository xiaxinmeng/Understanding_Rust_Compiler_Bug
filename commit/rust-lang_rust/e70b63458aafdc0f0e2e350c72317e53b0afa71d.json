{"sha": "e70b63458aafdc0f0e2e350c72317e53b0afa71d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MGI2MzQ1OGFhZmRjMGYwZTJlMzUwYzcyMzE3ZTUzYjBhZmE3MWQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-22T13:45:03Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-29T12:14:17Z"}, "message": "Turn ICE for dangling pointers into error", "tree": {"sha": "0aca743102f430b8d341a7560c344f278babb3e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0aca743102f430b8d341a7560c344f278babb3e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e70b63458aafdc0f0e2e350c72317e53b0afa71d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e70b63458aafdc0f0e2e350c72317e53b0afa71d", "html_url": "https://github.com/rust-lang/rust/commit/e70b63458aafdc0f0e2e350c72317e53b0afa71d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e70b63458aafdc0f0e2e350c72317e53b0afa71d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e88b7363b7858960ccfd87326ece9d00bf4d973", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e88b7363b7858960ccfd87326ece9d00bf4d973", "html_url": "https://github.com/rust-lang/rust/commit/4e88b7363b7858960ccfd87326ece9d00bf4d973"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "c2fb9e960849348a424fbeca7d01179b7d9d4a10", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=e70b63458aafdc0f0e2e350c72317e53b0afa71d", "patch": "@@ -737,6 +737,11 @@ where\n             if self.alloc_map.contains_key(&alloc) {\n                 // Not yet interned, so proceed recursively\n                 self.intern_static(alloc, mutability)?;\n+            } else if self.dead_alloc_map.contains_key(&alloc) {\n+                // dangling pointer\n+                return err!(ValidationFailure(\n+                    \"encountered dangling pointer in final constant\".into(),\n+                ))\n             }\n         }\n         Ok(())"}, {"sha": "695d33b6908984b4c7e6874c1b1965c51aaa2447", "filename": "src/test/ui/consts/dangling-alloc-id-ice.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Ftest%2Fui%2Fconsts%2Fdangling-alloc-id-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Ftest%2Fui%2Fconsts%2Fdangling-alloc-id-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fdangling-alloc-id-ice.rs?ref=e70b63458aafdc0f0e2e350c72317e53b0afa71d", "patch": "@@ -0,0 +1,15 @@\n+// https://github.com/rust-lang/rust/issues/55223\n+\n+#![feature(const_let)]\n+\n+union Foo<'a> {\n+    y: &'a (),\n+    long_live_the_unit: &'static (),\n+}\n+\n+const FOO: &() = { //~ ERROR any use of this value will cause an error\n+    let y = ();\n+    unsafe { Foo { y: &y }.long_live_the_unit }\n+};\n+\n+fn main() {}"}, {"sha": "a5fa88e5e683242f6089a4f91fc7eddc6c924e31", "filename": "src/test/ui/consts/dangling-alloc-id-ice.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Ftest%2Fui%2Fconsts%2Fdangling-alloc-id-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Ftest%2Fui%2Fconsts%2Fdangling-alloc-id-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fdangling-alloc-id-ice.stderr?ref=e70b63458aafdc0f0e2e350c72317e53b0afa71d", "patch": "@@ -0,0 +1,13 @@\n+error: any use of this value will cause an error\n+  --> $DIR/dangling-alloc-id-ice.rs:10:1\n+   |\n+LL | / const FOO: &() = { //~ ERROR any use of this value will cause an error\n+LL | |     let y = ();\n+LL | |     unsafe { Foo { y: &y }.long_live_the_unit }\n+LL | | };\n+   | |__^ type validation failed: encountered dangling pointer in final constant\n+   |\n+   = note: #[deny(const_err)] on by default\n+\n+error: aborting due to previous error\n+"}, {"sha": "7fc773412f2f8e55f87de5331c9090c3cc852514", "filename": "src/test/ui/consts/dangling_raw_ptr.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Ftest%2Fui%2Fconsts%2Fdangling_raw_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Ftest%2Fui%2Fconsts%2Fdangling_raw_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fdangling_raw_ptr.rs?ref=e70b63458aafdc0f0e2e350c72317e53b0afa71d", "patch": "@@ -0,0 +1,10 @@\n+#![feature(const_let)]\n+\n+const FOO: *const u32 = { //~ ERROR any use of this value will cause an error\n+    let x = 42;\n+    &x\n+};\n+\n+fn main() {\n+    let x = FOO;\n+}"}, {"sha": "3b20936f8ae971a293050214cbd1141e0b660696", "filename": "src/test/ui/consts/dangling_raw_ptr.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Ftest%2Fui%2Fconsts%2Fdangling_raw_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e70b63458aafdc0f0e2e350c72317e53b0afa71d/src%2Ftest%2Fui%2Fconsts%2Fdangling_raw_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fdangling_raw_ptr.stderr?ref=e70b63458aafdc0f0e2e350c72317e53b0afa71d", "patch": "@@ -0,0 +1,13 @@\n+error: any use of this value will cause an error\n+  --> $DIR/dangling_raw_ptr.rs:3:1\n+   |\n+LL | / const FOO: *const u32 = { //~ ERROR any use of this value will cause an error\n+LL | |     let x = 42;\n+LL | |     &x\n+LL | | };\n+   | |__^ type validation failed: encountered dangling pointer in final constant\n+   |\n+   = note: #[deny(const_err)] on by default\n+\n+error: aborting due to previous error\n+"}]}