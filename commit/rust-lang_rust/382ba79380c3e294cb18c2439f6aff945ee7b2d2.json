{"sha": "382ba79380c3e294cb18c2439f6aff945ee7b2d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MmJhNzkzODBjM2UyOTRjYjE4YzI0MzlmNmFmZjk0NWVlN2IyZDI=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-06-17T17:39:58Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-06-17T17:39:58Z"}, "message": "Use `map_or` instead of open-coding it", "tree": {"sha": "b04ba8ba5579c93b327912b41287a0ae91f409ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b04ba8ba5579c93b327912b41287a0ae91f409ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/382ba79380c3e294cb18c2439f6aff945ee7b2d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/382ba79380c3e294cb18c2439f6aff945ee7b2d2", "html_url": "https://github.com/rust-lang/rust/commit/382ba79380c3e294cb18c2439f6aff945ee7b2d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/382ba79380c3e294cb18c2439f6aff945ee7b2d2/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ef2b4a29bf70e8984d0d2febb7a546856c554a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ef2b4a29bf70e8984d0d2febb7a546856c554a0", "html_url": "https://github.com/rust-lang/rust/commit/0ef2b4a29bf70e8984d0d2febb7a546856c554a0"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "b56c247127ce4734e465c7f191fc193d5163aa9f", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/382ba79380c3e294cb18c2439f6aff945ee7b2d2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/382ba79380c3e294cb18c2439f6aff945ee7b2d2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=382ba79380c3e294cb18c2439f6aff945ee7b2d2", "patch": "@@ -1205,12 +1205,9 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n                         let mut eval_to_int = |op| {\n                             // This can be `None` if the lhs wasn't const propagated and we just\n                             // triggered the assert on the value of the rhs.\n-                            match self.eval_operand(op, source_info) {\n-                                Some(op) => DbgVal::Val(\n-                                    self.ecx.read_immediate(&op).unwrap().to_const_int(),\n-                                ),\n-                                None => DbgVal::Underscore,\n-                            }\n+                            self.eval_operand(op, source_info).map_or(DbgVal::Underscore, |op| {\n+                                DbgVal::Val(self.ecx.read_immediate(&op).unwrap().to_const_int())\n+                            })\n                         };\n                         let msg = match msg {\n                             AssertKind::DivisionByZero(op) => {"}]}