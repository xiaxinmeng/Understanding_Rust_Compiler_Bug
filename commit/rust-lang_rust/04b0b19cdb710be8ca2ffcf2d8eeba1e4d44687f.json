{"sha": "04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "node_id": "C_kwDOAAsO6NoAKDA0YjBiMTljZGI3MTBiZThjYTJmZmNmMmQ4ZWViYTFlNGQ0NDY4N2Y", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-17T15:44:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-17T15:44:48Z"}, "message": "Merge #10527\n\n10527: internal: Remove a few snippet completions, replace them with user snippets definitions in VSCode r=Veykril a=Veykril\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/9636\r\ncc https://github.com/rust-analyzer/rust-analyzer/issues/7033#issuecomment-939959905\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "bad519ab87ae6d51d6189c6933a73aa1024b2d49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bad519ab87ae6d51d6189c6933a73aa1024b2d49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhvLBwCRBK7hj4Ov3rIwAAkxIIADPrjNyECHjYEdaW2HgKgUnB\nteJ0PakUSkVZ/wQvZxQKlVH6rXYQkBr3uvWWgrMKx+MbI2U/px1fWPQE0cPnhYs/\nsV9xtLGPYwlqIczofGj+2fMIOFdQObP+qUaT4/c7v8ixDNoXToUpBueeTd7DzsnH\nfuixcgiAUoHdhIRUytho/6gECsgKb0ecmPWmS1fp4+5jhsaUSEW74BnYsJWSj3P/\n6jTYfNEx6R+i5KVbmD2NGow1Z7yhfAo+Vt8l/B0yV1a+X2TisGlyWT0ahz7lV6Nj\nFS8G1Xv5F1UoHSC6s2EgeFGa3TU9BjSaa2YEdMtJTpBPSLYUeFJ4z2fBFZxXddg=\n=OgYE\n-----END PGP SIGNATURE-----\n", "payload": "tree bad519ab87ae6d51d6189c6933a73aa1024b2d49\nparent f4d65c1d20b324fd6846ec875bc22bc77aba908d\nparent 2a88b7604188fc5b074b3ad78fe22e31423ec028\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1639755888 +0000\ncommitter GitHub <noreply@github.com> 1639755888 +0000\n\nMerge #10527\n\n10527: internal: Remove a few snippet completions, replace them with user snippets definitions in VSCode r=Veykril a=Veykril\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/9636\r\ncc https://github.com/rust-analyzer/rust-analyzer/issues/7033#issuecomment-939959905\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "html_url": "https://github.com/rust-lang/rust/commit/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4d65c1d20b324fd6846ec875bc22bc77aba908d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4d65c1d20b324fd6846ec875bc22bc77aba908d", "html_url": "https://github.com/rust-lang/rust/commit/f4d65c1d20b324fd6846ec875bc22bc77aba908d"}, {"sha": "2a88b7604188fc5b074b3ad78fe22e31423ec028", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a88b7604188fc5b074b3ad78fe22e31423ec028", "html_url": "https://github.com/rust-lang/rust/commit/2a88b7604188fc5b074b3ad78fe22e31423ec028"}], "stats": {"total": 217, "additions": 175, "deletions": 42}, "files": [{"sha": "90e06221db2ae983187263981be92ed8a47bbea0", "filename": "crates/ide_completion/src/completions/keyword.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "patch": "@@ -229,9 +229,6 @@ fn foo(a: A) { a.$0 }\n                 sn refm  &mut expr\n                 sn match match expr {}\n                 sn box   Box::new(expr)\n-                sn ok    Ok(expr)\n-                sn err   Err(expr)\n-                sn some  Some(expr)\n                 sn dbg   dbg!(expr)\n                 sn dbgr  dbg!(&expr)\n                 sn call  function(expr)\n@@ -255,9 +252,6 @@ fn foo() {\n                 sn refm  &mut expr\n                 sn match match expr {}\n                 sn box   Box::new(expr)\n-                sn ok    Ok(expr)\n-                sn err   Err(expr)\n-                sn some  Some(expr)\n                 sn dbg   dbg!(expr)\n                 sn dbgr  dbg!(&expr)\n                 sn call  function(expr)"}, {"sha": "8a25da7ddb7c504ff4bc0baa72cf9f9d8891866a", "filename": "crates/ide_completion/src/completions/postfix.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "patch": "@@ -163,9 +163,6 @@ pub(crate) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     }\n \n     postfix_snippet(\"box\", \"Box::new(expr)\", &format!(\"Box::new({})\", receiver_text)).add_to(acc);\n-    postfix_snippet(\"ok\", \"Ok(expr)\", &format!(\"Ok({})\", receiver_text)).add_to(acc);\n-    postfix_snippet(\"err\", \"Err(expr)\", &format!(\"Err({})\", receiver_text)).add_to(acc);\n-    postfix_snippet(\"some\", \"Some(expr)\", &format!(\"Some({})\", receiver_text)).add_to(acc);\n     postfix_snippet(\"dbg\", \"dbg!(expr)\", &format!(\"dbg!({})\", receiver_text)).add_to(acc);\n     postfix_snippet(\"dbgr\", \"dbg!(&expr)\", &format!(\"dbg!(&{})\", receiver_text)).add_to(acc);\n     postfix_snippet(\"call\", \"function(expr)\", &format!(\"${{1}}({})\", receiver_text)).add_to(acc);\n@@ -295,9 +292,6 @@ fn main() {\n                 sn refm  &mut expr\n                 sn match match expr {}\n                 sn box   Box::new(expr)\n-                sn ok    Ok(expr)\n-                sn err   Err(expr)\n-                sn some  Some(expr)\n                 sn dbg   dbg!(expr)\n                 sn dbgr  dbg!(&expr)\n                 sn call  function(expr)\n@@ -328,9 +322,6 @@ fn main() {\n                 sn refm  &mut expr\n                 sn match match expr {}\n                 sn box   Box::new(expr)\n-                sn ok    Ok(expr)\n-                sn err   Err(expr)\n-                sn some  Some(expr)\n                 sn dbg   dbg!(expr)\n                 sn dbgr  dbg!(&expr)\n                 sn call  function(expr)\n@@ -352,9 +343,6 @@ fn main() {\n                 sn refm  &mut expr\n                 sn match match expr {}\n                 sn box   Box::new(expr)\n-                sn ok    Ok(expr)\n-                sn err   Err(expr)\n-                sn some  Some(expr)\n                 sn dbg   dbg!(expr)\n                 sn dbgr  dbg!(&expr)\n                 sn call  function(expr)\n@@ -381,9 +369,6 @@ fn main() {\n                 sn refm  &mut expr\n                 sn match match expr {}\n                 sn box   Box::new(expr)\n-                sn ok    Ok(expr)\n-                sn err   Err(expr)\n-                sn some  Some(expr)\n                 sn dbg   dbg!(expr)\n                 sn dbgr  dbg!(&expr)\n                 sn call  function(expr)"}, {"sha": "4b4fbb3ed9e2c1edd0be296b84a8c4c1ff7ec120", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "patch": "@@ -1437,9 +1437,6 @@ fn main() {\n                 sn refm []\n                 sn match []\n                 sn box []\n-                sn ok []\n-                sn err []\n-                sn some []\n                 sn dbg []\n                 sn dbgr []\n                 sn call []"}, {"sha": "c5e2b009c7ce7e6a216f515175ae2eb638e4902c", "filename": "crates/ide_completion/src/snippet.rs", "status": "modified", "additions": 51, "deletions": 3, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Fsnippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Fsnippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fsnippet.rs?ref=04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "patch": "@@ -52,8 +52,56 @@ use std::ops::Deref;\n // These placeholders take the form of `$number` or `${number:placeholder_text}` which can be traversed as tabstop in ascending order starting from 1,\n // with `$0` being a special case that always comes last.\n //\n-// There is also a special placeholder, `${receiver}`, which will be replaced by the receiver expression for postfix snippets, or nothing in case of normal snippets.\n-// It does not act as a tabstop.\n+// There is also a special placeholder, `${receiver}`, which will be replaced by the receiver expression for postfix snippets, or a `$0` tabstop in case of normal snippets.\n+// This replacement for normal snippets allows you to reuse a snippet for both post- and prefix in a single definition.\n+//\n+// For the VSCode editor, rust-analyzer also ships with a small set of defaults which can be removed\n+// by overwriting the settings object mentioned above, the defaults are:\n+// [source,json]\n+// ----\n+// {\n+//     \"Arc::new\": {\n+//         \"postfix\": \"arc\",\n+//         \"body\": \"Arc::new(${receiver})\",\n+//         \"requires\": \"std::sync::Arc\",\n+//         \"description\": \"Put the expression into an `Arc`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Rc::new\": {\n+//         \"postfix\": \"rc\",\n+//         \"body\": \"Rc::new(${receiver})\",\n+//         \"requires\": \"std::rc::Rc\",\n+//         \"description\": \"Put the expression into an `Rc`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Box::pin\": {\n+//         \"postfix\": \"pinbox\",\n+//         \"body\": \"Box::pin(${receiver})\",\n+//         \"requires\": \"std::boxed::Box\",\n+//         \"description\": \"Put the expression into a pinned `Box`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Ok\": {\n+//         \"postfix\": \"ok\",\n+//         \"body\": \"Ok(${receiver})\",\n+//         \"description\": \"Wrap the expression in a `Result::Ok`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Err\": {\n+//         \"postfix\": \"err\",\n+//         \"body\": \"Err(${receiver})\",\n+//         \"description\": \"Wrap the expression in a `Result::Err`\",\n+//         \"scope\": \"expr\"\n+//     },\n+//     \"Some\": {\n+//         \"postfix\": \"some\",\n+//         \"body\": \"Some(${receiver})\",\n+//         \"description\": \"Wrap the expression in an `Option::Some`\",\n+//         \"scope\": \"expr\"\n+//     }\n+// }\n+// ----\n+\n use ide_db::helpers::{import_assets::LocatedImport, insert_use::ImportScope};\n use itertools::Itertools;\n use syntax::{ast, AstNode, GreenNode, SyntaxNode};\n@@ -117,7 +165,7 @@ impl Snippet {\n     }\n \n     pub fn snippet(&self) -> String {\n-        self.snippet.replace(\"${receiver}\", \"\")\n+        self.snippet.replace(\"${receiver}\", \"$0\")\n     }\n \n     pub fn postfix_snippet(&self, receiver: &str) -> String {"}, {"sha": "f54286fe592e024a3d5915cbef58162ba0fc2876", "filename": "crates/ide_completion/src/tests/proc_macros.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Ftests%2Fproc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Fide_completion%2Fsrc%2Ftests%2Fproc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fproc_macros.rs?ref=04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "patch": "@@ -29,9 +29,6 @@ fn main() {\n             sn refm  &mut expr\n             sn match match expr {}\n             sn box   Box::new(expr)\n-            sn ok    Ok(expr)\n-            sn err   Err(expr)\n-            sn some  Some(expr)\n             sn dbg   dbg!(expr)\n             sn dbgr  dbg!(&expr)\n             sn call  function(expr)\n@@ -62,9 +59,6 @@ fn main() {\n             sn refm  &mut expr\n             sn match match expr {}\n             sn box   Box::new(expr)\n-            sn ok    Ok(expr)\n-            sn err   Err(expr)\n-            sn some  Some(expr)\n             sn dbg   dbg!(expr)\n             sn dbgr  dbg!(&expr)\n             sn call  function(expr)\n@@ -97,9 +91,6 @@ fn main() {}\n             sn refm  &mut expr\n             sn match match expr {}\n             sn box   Box::new(expr)\n-            sn ok    Ok(expr)\n-            sn err   Err(expr)\n-            sn some  Some(expr)\n             sn dbg   dbg!(expr)\n             sn dbgr  dbg!(&expr)\n             sn call  function(expr)\n@@ -132,9 +123,6 @@ fn main() {}\n             sn refm  &mut expr\n             sn match match expr {}\n             sn box   Box::new(expr)\n-            sn ok    Ok(expr)\n-            sn err   Err(expr)\n-            sn some  Some(expr)\n             sn dbg   dbg!(expr)\n             sn dbgr  dbg!(&expr)\n             sn call  function(expr)"}, {"sha": "867f2bd1f0e91ac9e8dbb8caab9911d65884cc98", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "patch": "@@ -116,7 +116,48 @@ config_data! {\n         /// Whether to add parenthesis when completing functions.\n         completion_addCallParenthesis: bool      = \"true\",\n         /// Custom completion snippets.\n-        completion_snippets: FxHashMap<String, SnippetDef> = \"{}\",\n+        // NOTE: Keep this list in sync with the feature docs of user snippets.\n+        completion_snippets: FxHashMap<String, SnippetDef> = r#\"{\n+            \"Arc::new\": {\n+                \"postfix\": \"arc\",\n+                \"body\": \"Arc::new(${receiver})\",\n+                \"requires\": \"std::sync::Arc\",\n+                \"description\": \"Put the expression into an `Arc`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Rc::new\": {\n+                \"postfix\": \"rc\",\n+                \"body\": \"Rc::new(${receiver})\",\n+                \"requires\": \"std::rc::Rc\",\n+                \"description\": \"Put the expression into an `Rc`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Box::pin\": {\n+                \"postfix\": \"pinbox\",\n+                \"body\": \"Box::pin(${receiver})\",\n+                \"requires\": \"std::boxed::Box\",\n+                \"description\": \"Put the expression into a pinned `Box`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Ok\": {\n+                \"postfix\": \"ok\",\n+                \"body\": \"Ok(${receiver})\",\n+                \"description\": \"Wrap the expression in a `Result::Ok`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Err\": {\n+                \"postfix\": \"err\",\n+                \"body\": \"Err(${receiver})\",\n+                \"description\": \"Wrap the expression in a `Result::Err`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Some\": {\n+                \"postfix\": \"some\",\n+                \"body\": \"Some(${receiver})\",\n+                \"description\": \"Wrap the expression in an `Option::Some`\",\n+                \"scope\": \"expr\"\n+            }\n+        }\"#,\n         /// Whether to show postfix snippets like `dbg`, `if`, `not`, etc.\n         completion_postfix_enable: bool          = \"true\",\n         /// Toggles the additional completions that automatically add imports when completed."}, {"sha": "494051b30606edf7b914da133adae22dc5fa08b6", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "patch": "@@ -141,7 +141,47 @@ Only applies when `#rust-analyzer.completion.addCallParenthesis#` is set.\n --\n Whether to add parenthesis when completing functions.\n --\n-[[rust-analyzer.completion.snippets]]rust-analyzer.completion.snippets (default: `{}`)::\n+[[rust-analyzer.completion.snippets]]rust-analyzer.completion.snippets (default: `{\n+            \"Arc::new\": {\n+                \"postfix\": \"arc\",\n+                \"body\": \"Arc::new(${receiver})\",\n+                \"requires\": \"std::sync::Arc\",\n+                \"description\": \"Put the expression into an `Arc`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Rc::new\": {\n+                \"postfix\": \"rc\",\n+                \"body\": \"Rc::new(${receiver})\",\n+                \"requires\": \"std::rc::Rc\",\n+                \"description\": \"Put the expression into an `Rc`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Box::pin\": {\n+                \"postfix\": \"pinbox\",\n+                \"body\": \"Box::pin(${receiver})\",\n+                \"requires\": \"std::boxed::Box\",\n+                \"description\": \"Put the expression into a pinned `Box`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Ok\": {\n+                \"postfix\": \"ok\",\n+                \"body\": \"Ok(${receiver})\",\n+                \"description\": \"Wrap the expression in a `Result::Ok`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Err\": {\n+                \"postfix\": \"err\",\n+                \"body\": \"Err(${receiver})\",\n+                \"description\": \"Wrap the expression in a `Result::Err`\",\n+                \"scope\": \"expr\"\n+            },\n+            \"Some\": {\n+                \"postfix\": \"some\",\n+                \"body\": \"Some(${receiver})\",\n+                \"description\": \"Wrap the expression in an `Option::Some`\",\n+                \"scope\": \"expr\"\n+            }\n+        }`)::\n +\n --\n Custom completion snippets."}, {"sha": "d70ac9aacbc7ba0c0a21814623f014b5e0fc6ce0", "filename": "editors/code/package.json", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=04b0b19cdb710be8ca2ffcf2d8eeba1e4d44687f", "patch": "@@ -592,7 +592,47 @@\n                 },\n                 \"rust-analyzer.completion.snippets\": {\n                     \"markdownDescription\": \"Custom completion snippets.\",\n-                    \"default\": {},\n+                    \"default\": {\n+                        \"Arc::new\": {\n+                            \"postfix\": \"arc\",\n+                            \"body\": \"Arc::new(${receiver})\",\n+                            \"requires\": \"std::sync::Arc\",\n+                            \"description\": \"Put the expression into an `Arc`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Rc::new\": {\n+                            \"postfix\": \"rc\",\n+                            \"body\": \"Rc::new(${receiver})\",\n+                            \"requires\": \"std::rc::Rc\",\n+                            \"description\": \"Put the expression into an `Rc`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Box::pin\": {\n+                            \"postfix\": \"pinbox\",\n+                            \"body\": \"Box::pin(${receiver})\",\n+                            \"requires\": \"std::boxed::Box\",\n+                            \"description\": \"Put the expression into a pinned `Box`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Ok\": {\n+                            \"postfix\": \"ok\",\n+                            \"body\": \"Ok(${receiver})\",\n+                            \"description\": \"Wrap the expression in a `Result::Ok`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Err\": {\n+                            \"postfix\": \"err\",\n+                            \"body\": \"Err(${receiver})\",\n+                            \"description\": \"Wrap the expression in a `Result::Err`\",\n+                            \"scope\": \"expr\"\n+                        },\n+                        \"Some\": {\n+                            \"postfix\": \"some\",\n+                            \"body\": \"Some(${receiver})\",\n+                            \"description\": \"Wrap the expression in an `Option::Some`\",\n+                            \"scope\": \"expr\"\n+                        }\n+                    },\n                     \"type\": \"object\"\n                 },\n                 \"rust-analyzer.completion.postfix.enable\": {"}]}