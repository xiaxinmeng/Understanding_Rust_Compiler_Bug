{"sha": "7f839b2ece86b3b5db89673fc402348c71db42f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmODM5YjJlY2U4NmIzYjVkYjg5NjczZmM0MDIzNDhjNzFkYjQyZjQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-14T13:11:55Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-05T09:22:08Z"}, "message": "Improve automatic_links globally", "tree": {"sha": "393aafabaccc58958994077c874a23f901aa1d94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/393aafabaccc58958994077c874a23f901aa1d94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f839b2ece86b3b5db89673fc402348c71db42f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f839b2ece86b3b5db89673fc402348c71db42f4", "html_url": "https://github.com/rust-lang/rust/commit/7f839b2ece86b3b5db89673fc402348c71db42f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f839b2ece86b3b5db89673fc402348c71db42f4/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f467b8d77c7b991ce214e0e5ff9b13c01812c8a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f467b8d77c7b991ce214e0e5ff9b13c01812c8a7", "html_url": "https://github.com/rust-lang/rust/commit/f467b8d77c7b991ce214e0e5ff9b13c01812c8a7"}], "stats": {"total": 200, "additions": 163, "deletions": 37}, "files": [{"sha": "b6e6307a40f30bce6825fae2a78812be9404615b", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f839b2ece86b3b5db89673fc402348c71db42f4/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f839b2ece86b3b5db89673fc402348c71db42f4/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=7f839b2ece86b3b5db89673fc402348c71db42f4", "patch": "@@ -1891,14 +1891,14 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `automatic_links` lint detects when a URL/email address could be\n-    /// written using only angle brackets. This is a `rustdoc` only lint, see\n-    /// the documentation in the [rustdoc book].\n+    /// The `automatic_links` lint detects when a URL could be written using\n+    /// only angle brackets. This is a `rustdoc` only lint, see the\n+    /// documentation in the [rustdoc book].\n     ///\n     /// [rustdoc book]: ../../../rustdoc/lints.html#automatic_links\n     pub AUTOMATIC_LINKS,\n-    Allow,\n-    \"detects URLs/email adresses that could be written using only angle brackets\"\n+    Warn,\n+    \"detects URLs that could be written using only angle brackets\"\n }\n \n declare_lint! {"}, {"sha": "68ea828bfc1e58b7c2dd5c0c75835c9f9d3d88d2", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7f839b2ece86b3b5db89673fc402348c71db42f4/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/7f839b2ece86b3b5db89673fc402348c71db42f4/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=7f839b2ece86b3b5db89673fc402348c71db42f4", "patch": "@@ -288,12 +288,10 @@ warning: 2 warnings emitted\n \n ## automatic_links\n \n-This link is **allowed by default** and is **nightly-only**. It detects links\n-which could use the \"automatic\" link syntax. For example:\n+This lint is **nightly-only** and **warns by default**. It detects links which\n+could use the \"automatic\" link syntax. For example:\n \n ```rust\n-#![warn(automatic_links)]\n-\n /// http://hello.rs\n /// [http://a.com](http://a.com)\n /// [http://b.com]\n@@ -305,17 +303,12 @@ pub fn foo() {}\n Which will give:\n \n ```text\n-warning: won't be a link as is\n+warning: this URL is not a hyperlink\n  --> foo.rs:3:5\n   |\n 3 | /// http://hello.rs\n   |     ^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://hello.rs>`\n   |\n-note: the lint level is defined here\n- --> foo.rs:1:9\n-  |\n-1 | #![warn(automatic_links)]\n-  |         ^^^^^^^^^^^^^^^\n \n warning: unneeded long form for URL\n  --> foo.rs:4:5"}, {"sha": "816d2fd15eee586beecd4897172f4c378e4db8ea", "filename": "src/librustdoc/passes/automatic_links.rs", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7f839b2ece86b3b5db89673fc402348c71db42f4/src%2Flibrustdoc%2Fpasses%2Fautomatic_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f839b2ece86b3b5db89673fc402348c71db42f4/src%2Flibrustdoc%2Fpasses%2Fautomatic_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fautomatic_links.rs?ref=7f839b2ece86b3b5db89673fc402348c71db42f4", "patch": "@@ -13,11 +13,15 @@ use rustc_session::lint;\n pub const CHECK_AUTOMATIC_LINKS: Pass = Pass {\n     name: \"check-automatic-links\",\n     run: check_automatic_links,\n-    description: \"detects URLS/email addresses that could be written using angle brackets\",\n+    description: \"detects URLS that could be written using angle brackets\",\n };\n \n-const URL_REGEX: &str =\n-    r\"https?://(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)\";\n+const URL_REGEX: &str = concat!(\n+    r\"https?://\",                          // url scheme\n+    r\"([-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.)+\", // one or more subdomains\n+    r\"[a-zA-Z]{2,4}\",                      // root domain\n+    r\"\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)\"     // optional query or url fragments\n+);\n \n struct AutomaticLinksLinter<'a, 'tcx> {\n     cx: &'a DocContext<'tcx>,\n@@ -35,22 +39,16 @@ impl<'a, 'tcx> AutomaticLinksLinter<'a, 'tcx> {\n         range: Range<usize>,\n         f: &impl Fn(&DocContext<'_>, &str, &str, Range<usize>),\n     ) {\n-        for (pos, c) in text.char_indices() {\n-            // For now, we only check \"full\" URLs.\n-            if c == 'h' {\n-                let text = &text[pos..];\n-                if text.starts_with(\"http://\") || text.starts_with(\"https://\") {\n-                    if let Some(m) = self.regex.find(text) {\n-                        let url = &text[..m.end()];\n-                        f(\n-                            self.cx,\n-                            \"won't be a link as is\",\n-                            url,\n-                            Range { start: range.start + pos, end: range.start + pos + m.end() },\n-                        )\n-                    }\n-                }\n-            }\n+        // For now, we only check \"full\" URLs (meaning, starting with \"http://\" or \"https://\").\n+        for match_ in self.regex.find_iter(&text) {\n+            let url = match_.as_str();\n+            let url_range = match_.range();\n+            f(\n+                self.cx,\n+                \"this URL is not a hyperlink\",\n+                url,\n+                Range { start: range.start + url_range.start, end: range.start + url_range.end },\n+            );\n         }\n     }\n }\n@@ -106,6 +104,7 @@ impl<'a, 'tcx> DocFolder for AutomaticLinksLinter<'a, 'tcx> {\n                     }\n                     Event::End(Tag::Link(_, url, _)) => {\n                         in_link = false;\n+                        // NOTE: links cannot be nested, so we don't need to check `kind`\n                         if url.as_ref() == title && !ignore {\n                             report_diag(self.cx, \"unneeded long form for URL\", &url, range);\n                         }"}, {"sha": "27eb4e4a646cea67dfff222c301a325b32141c20", "filename": "src/test/rustdoc-ui/automatic-links.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/7f839b2ece86b3b5db89673fc402348c71db42f4/src%2Ftest%2Frustdoc-ui%2Fautomatic-links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f839b2ece86b3b5db89673fc402348c71db42f4/src%2Ftest%2Frustdoc-ui%2Fautomatic-links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fautomatic-links.rs?ref=7f839b2ece86b3b5db89673fc402348c71db42f4", "patch": "@@ -10,8 +10,40 @@\n /// [http://c.com][http://c.com]\n pub fn a() {}\n \n+/// https://somewhere.com\n+//~^ ERROR this URL is not a hyperlink\n+/// https://somewhere.com/a\n+//~^ ERROR this URL is not a hyperlink\n+/// https://www.somewhere.com\n+//~^ ERROR this URL is not a hyperlink\n+/// https://www.somewhere.com/a\n+//~^ ERROR this URL is not a hyperlink\n+/// https://subdomain.example.com\n+//~^ ERROR not a hyperlink\n+/// https://somewhere.com?\n+//~^ ERROR this URL is not a hyperlink\n+/// https://somewhere.com/a?\n+//~^ ERROR this URL is not a hyperlink\n /// https://somewhere.com?hello=12\n-//~^ ERROR won't be a link as is\n+//~^ ERROR this URL is not a hyperlink\n+/// https://somewhere.com/a?hello=12\n+//~^ ERROR this URL is not a hyperlink\n+/// https://example.com?hello=12#xyz\n+//~^ ERROR this URL is not a hyperlink\n+/// https://example.com/a?hello=12#xyz\n+//~^ ERROR this URL is not a hyperlink\n+/// https://example.com#xyz\n+//~^ ERROR this URL is not a hyperlink\n+/// https://example.com/a#xyz\n+//~^ ERROR this URL is not a hyperlink\n+/// https://somewhere.com?hello=12&bye=11\n+//~^ ERROR this URL is not a hyperlink\n+/// https://somewhere.com/a?hello=12&bye=11\n+//~^ ERROR this URL is not a hyperlink\n+/// https://somewhere.com?hello=12&bye=11#xyz\n+//~^ ERROR this URL is not a hyperlink\n+/// hey! https://somewhere.com/a?hello=12&bye=11#xyz\n+//~^ ERROR this URL is not a hyperlink\n pub fn c() {}\n \n /// <https://somewhere.com>\n@@ -20,3 +52,9 @@ pub fn c() {}\n ///\n /// [b]: http://b.com\n pub fn everything_is_fine_here() {}\n+\n+#[allow(automatic_links)]\n+pub mod foo {\n+    /// https://somewhere.com/a?hello=12&bye=11#xyz\n+    pub fn bar() {}\n+}"}, {"sha": "00e210aaaa22dc81df1ff2f504625d3e826c85ed", "filename": "src/test/rustdoc-ui/automatic-links.stderr", "status": "modified", "additions": 98, "deletions": 2, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/7f839b2ece86b3b5db89673fc402348c71db42f4/src%2Ftest%2Frustdoc-ui%2Fautomatic-links.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f839b2ece86b3b5db89673fc402348c71db42f4/src%2Ftest%2Frustdoc-ui%2Fautomatic-links.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fautomatic-links.stderr?ref=7f839b2ece86b3b5db89673fc402348c71db42f4", "patch": "@@ -16,11 +16,107 @@ error: unneeded long form for URL\n LL | /// [http://b.com]\n    |     ^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://b.com>`\n \n-error: won't be a link as is\n+error: this URL is not a hyperlink\n   --> $DIR/automatic-links.rs:13:5\n    |\n+LL | /// https://somewhere.com\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:15:5\n+   |\n+LL | /// https://somewhere.com/a\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:17:5\n+   |\n+LL | /// https://www.somewhere.com\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://www.somewhere.com>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:19:5\n+   |\n+LL | /// https://www.somewhere.com/a\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://www.somewhere.com/a>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:21:5\n+   |\n+LL | /// https://subdomain.example.com\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://subdomain.example.com>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:23:5\n+   |\n+LL | /// https://somewhere.com?\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:25:5\n+   |\n+LL | /// https://somewhere.com/a?\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:27:5\n+   |\n LL | /// https://somewhere.com?hello=12\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?hello=12>`\n \n-error: aborting due to 3 previous errors\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:29:5\n+   |\n+LL | /// https://somewhere.com/a?hello=12\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?hello=12>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:31:5\n+   |\n+LL | /// https://example.com?hello=12#xyz\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com?hello=12#xyz>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:33:5\n+   |\n+LL | /// https://example.com/a?hello=12#xyz\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com/a?hello=12#xyz>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:35:5\n+   |\n+LL | /// https://example.com#xyz\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com#xyz>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:37:5\n+   |\n+LL | /// https://example.com/a#xyz\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com/a#xyz>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:39:5\n+   |\n+LL | /// https://somewhere.com?hello=12&bye=11\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?hello=12&bye=11>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:41:5\n+   |\n+LL | /// https://somewhere.com/a?hello=12&bye=11\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?hello=12&bye=11>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:43:5\n+   |\n+LL | /// https://somewhere.com?hello=12&bye=11#xyz\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?hello=12&bye=11#xyz>`\n+\n+error: this URL is not a hyperlink\n+  --> $DIR/automatic-links.rs:45:10\n+   |\n+LL | /// hey! https://somewhere.com/a?hello=12&bye=11#xyz\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?hello=12&bye=11#xyz>`\n+\n+error: aborting due to 19 previous errors\n "}]}