{"sha": "1397827f25b28fb2842e5d708c075a66ba60fde7", "node_id": "C_kwDOAAsO6NoAKDEzOTc4MjdmMjViMjhmYjI4NDJlNWQ3MDhjMDc1YTY2YmE2MGZkZTc", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-20T06:50:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-20T06:50:59Z"}, "message": "Rollup merge of #111619 - cjgillot:profile-pass, r=WaffleLapkin\n\nAdd timings for MIR passes to profiling report\n\nThis will help identify which pass is responsible for a regression.", "tree": {"sha": "01357750440a79dbb903af8888bc5ddf85c370a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01357750440a79dbb903af8888bc5ddf85c370a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1397827f25b28fb2842e5d708c075a66ba60fde7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkaG3TCRBK7hj4Ov3rIwAARKcIAK+VDDFlEVOkurb9bjOxP0XL\ntZ7lk4e9XDyD5kDg0zZei9q+QC8nidX9A7Qg903HyAy2BskZl+9+FMc94L59/9oq\njojNMD4w8F+rKloXzYvRHmZeBJ2JVRT7Uu2IV8g+RU66QBvhzF9km+bO3uzzsGSH\nu5xcaA8GPulK3Nk7cCHjiv19/2wARM5rAJ18Zomg1VNEPxDo2JL2vo3L5F7T1vul\nNjY0gSMRUHcx73K800zPuFPodqiJ0bY18jnB762ep8Syy2h1wN6yRddMMQyMp9Hl\n1qQbQFYhTqGdQmtw4KKRkdsqsBreSMec4ua7DEPpJ451D6KOSr1CIm0yFomYWJI=\n=46/g\n-----END PGP SIGNATURE-----\n", "payload": "tree 01357750440a79dbb903af8888bc5ddf85c370a2\nparent fa11c9e8ca4e8bf6d1e7d916bb7c0da934d3ded3\nparent addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1684565459 +0530\ncommitter GitHub <noreply@github.com> 1684565459 +0530\n\nRollup merge of #111619 - cjgillot:profile-pass, r=WaffleLapkin\n\nAdd timings for MIR passes to profiling report\n\nThis will help identify which pass is responsible for a regression.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1397827f25b28fb2842e5d708c075a66ba60fde7", "html_url": "https://github.com/rust-lang/rust/commit/1397827f25b28fb2842e5d708c075a66ba60fde7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1397827f25b28fb2842e5d708c075a66ba60fde7/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa11c9e8ca4e8bf6d1e7d916bb7c0da934d3ded3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa11c9e8ca4e8bf6d1e7d916bb7c0da934d3ded3", "html_url": "https://github.com/rust-lang/rust/commit/fa11c9e8ca4e8bf6d1e7d916bb7c0da934d3ded3"}, {"sha": "addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "html_url": "https://github.com/rust-lang/rust/commit/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "5c71910a955d86cd8e2921320bbd033891a064fc", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1397827f25b28fb2842e5d708c075a66ba60fde7/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397827f25b28fb2842e5d708c075a66ba60fde7/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=1397827f25b28fb2842e5d708c075a66ba60fde7", "patch": "@@ -101,7 +101,7 @@ impl<'tcx> HasLocalDecls<'tcx> for Body<'tcx> {\n /// pass will be named after the type, and it will consist of a main\n /// loop that goes over each available MIR and applies `run_pass`.\n pub trait MirPass<'tcx> {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         let name = std::any::type_name::<Self>();\n         if let Some((_, tail)) = name.rsplit_once(':') { tail } else { name }\n     }"}, {"sha": "746e3d9652db6042848a465aa7572f6d1030f378", "filename": "compiler/rustc_mir_transform/src/dump_mir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1397827f25b28fb2842e5d708c075a66ba60fde7/compiler%2Frustc_mir_transform%2Fsrc%2Fdump_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397827f25b28fb2842e5d708c075a66ba60fde7/compiler%2Frustc_mir_transform%2Fsrc%2Fdump_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdump_mir.rs?ref=1397827f25b28fb2842e5d708c075a66ba60fde7", "patch": "@@ -12,7 +12,7 @@ use rustc_session::config::OutputType;\n pub struct Marker(pub &'static str);\n \n impl<'tcx> MirPass<'tcx> for Marker {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         self.0\n     }\n "}, {"sha": "710eed3ed380850dba1f697d4da55b4b06cd6f81", "filename": "compiler/rustc_mir_transform/src/pass_manager.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1397827f25b28fb2842e5d708c075a66ba60fde7/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397827f25b28fb2842e5d708c075a66ba60fde7/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs?ref=1397827f25b28fb2842e5d708c075a66ba60fde7", "patch": "@@ -6,7 +6,7 @@ use crate::{validate, MirPass};\n \n /// Just like `MirPass`, except it cannot mutate `Body`.\n pub trait MirLint<'tcx> {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         let name = std::any::type_name::<Self>();\n         if let Some((_, tail)) = name.rsplit_once(':') { tail } else { name }\n     }\n@@ -26,7 +26,7 @@ impl<'tcx, T> MirPass<'tcx> for Lint<T>\n where\n     T: MirLint<'tcx>,\n {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         self.0.name()\n     }\n \n@@ -49,7 +49,7 @@ impl<'tcx, T> MirPass<'tcx> for WithMinOptLevel<T>\n where\n     T: MirPass<'tcx>,\n {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         self.1.name()\n     }\n \n@@ -121,7 +121,7 @@ fn run_passes_inner<'tcx>(\n                 validate_body(tcx, body, format!(\"before pass {}\", name));\n             }\n \n-            pass.run_pass(tcx, body);\n+            tcx.sess.time(name, || pass.run_pass(tcx, body));\n \n             if dump_enabled {\n                 dump_mir_for_pass(tcx, body, &name, true);"}, {"sha": "e59219321b7ffe69a9b4300ed583ff4239a3a31b", "filename": "compiler/rustc_mir_transform/src/simplify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1397827f25b28fb2842e5d708c075a66ba60fde7/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1397827f25b28fb2842e5d708c075a66ba60fde7/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs?ref=1397827f25b28fb2842e5d708c075a66ba60fde7", "patch": "@@ -74,7 +74,7 @@ pub fn simplify_cfg<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n }\n \n impl<'tcx> MirPass<'tcx> for SimplifyCfg {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         &self.name()\n     }\n "}]}