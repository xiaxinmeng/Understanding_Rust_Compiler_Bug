{"sha": "b7f53b8aa6bafe0642efda7e387507fdb6be56df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZjUzYjhhYTZiYWZlMDY0MmVmZGE3ZTM4NzUwN2ZkYjZiZTU2ZGY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-02-25T21:56:11Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-02-25T21:56:11Z"}, "message": "fix drop of fat ptrs", "tree": {"sha": "5b2622b6e9c833a56f831766deef1ac8d35ca55c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b2622b6e9c833a56f831766deef1ac8d35ca55c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7f53b8aa6bafe0642efda7e387507fdb6be56df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7f53b8aa6bafe0642efda7e387507fdb6be56df", "html_url": "https://github.com/rust-lang/rust/commit/b7f53b8aa6bafe0642efda7e387507fdb6be56df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7f53b8aa6bafe0642efda7e387507fdb6be56df/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "356bf529eedaea523b4266057b2ce8a13435b737", "url": "https://api.github.com/repos/rust-lang/rust/commits/356bf529eedaea523b4266057b2ce8a13435b737", "html_url": "https://github.com/rust-lang/rust/commit/356bf529eedaea523b4266057b2ce8a13435b737"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "5db5fc82c1fa2fa20047798121f7264ca9807d2c", "filename": "src/librustc_trans/trans/mir/operand.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b7f53b8aa6bafe0642efda7e387507fdb6be56df/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7f53b8aa6bafe0642efda7e387507fdb6be56df/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs?ref=b7f53b8aa6bafe0642efda7e387507fdb6be56df", "patch": "@@ -245,8 +245,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                 }\n                 let lvalue = self.trans_lvalue(bcx, lvalue);\n                 let ty = lvalue.ty.to_ty(bcx.tcx());\n-                if !glue::type_needs_drop(bcx.tcx(), ty) ||\n-                    common::type_is_fat_ptr(bcx.tcx(), ty) {\n+                if !glue::type_needs_drop(bcx.tcx(), ty) {\n                     return\n                 } else {\n                     drop::drop_fill(bcx, lvalue.llval, ty);"}, {"sha": "3f79be0479391a3a0bc435f3cc1a35d474fcc661", "filename": "src/test/run-pass/mir_fat_ptr_drop.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/b7f53b8aa6bafe0642efda7e387507fdb6be56df/src%2Ftest%2Frun-pass%2Fmir_fat_ptr_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7f53b8aa6bafe0642efda7e387507fdb6be56df/src%2Ftest%2Frun-pass%2Fmir_fat_ptr_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_fat_ptr_drop.rs?ref=b7f53b8aa6bafe0642efda7e387507fdb6be56df", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// test that ordinary fat pointer operations work.\n+\n+#![feature(braced_empty_structs)]\n+#![feature(rustc_attrs)]\n+\n+use std::sync::atomic;\n+use std::sync::atomic::Ordering::SeqCst;\n+\n+static COUNTER: atomic::AtomicUsize = atomic::ATOMIC_USIZE_INIT;\n+\n+struct DropMe {\n+}\n+\n+impl Drop for DropMe {\n+    fn drop(&mut self) {\n+        COUNTER.fetch_add(1, SeqCst);\n+    }\n+}\n+\n+#[rustc_mir]\n+fn fat_ptr_move_then_drop(a: Box<[DropMe]>) {\n+    let b = a;\n+}\n+\n+fn main() {\n+    let a: Box<[DropMe]> = Box::new([DropMe { }]);\n+    fat_ptr_move_then_drop(a);\n+    assert_eq!(COUNTER.load(SeqCst), 1);\n+}"}]}