{"sha": "b329e1c719164c3d69aa840b4da12e1920b75f4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMjllMWM3MTkxNjRjM2Q2OWFhODQwYjRkYTEyZTE5MjBiNzVmNGI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-17T03:22:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-17T03:22:32Z"}, "message": "doc: Fix `as` description in tutorial", "tree": {"sha": "019104bcdb81684608233547df064cde8cb3a345", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/019104bcdb81684608233547df064cde8cb3a345"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b329e1c719164c3d69aa840b4da12e1920b75f4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b329e1c719164c3d69aa840b4da12e1920b75f4b", "html_url": "https://github.com/rust-lang/rust/commit/b329e1c719164c3d69aa840b4da12e1920b75f4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b329e1c719164c3d69aa840b4da12e1920b75f4b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e4fb320dab8c3556d29fbcd0a3af43facf08bae", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e4fb320dab8c3556d29fbcd0a3af43facf08bae", "html_url": "https://github.com/rust-lang/rust/commit/9e4fb320dab8c3556d29fbcd0a3af43facf08bae"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "6edcabec17c4422dabd1e8d31d429fb681a8b542", "filename": "doc/tutorial.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b329e1c719164c3d69aa840b4da12e1920b75f4b/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/b329e1c719164c3d69aa840b4da12e1920b75f4b/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=b329e1c719164c3d69aa840b4da12e1920b75f4b", "patch": "@@ -471,11 +471,11 @@ The comparison operators are the traditional `==`, `!=`, `<`, `>`,\n `<=`, and `>=`. Short-circuiting (lazy) boolean operators are written\n `&&` (and) and `||` (or).\n \n-For type casting, Rust uses the binary `as` operator, which has a\n-precedence between the bitwise combination operators (`&`, `|`, `^`)\n-and the comparison operators. It takes an expression on the left side,\n-and a type on the right side, and will, if a meaningful conversion\n-exists, convert the result of the expression to the given type.\n+For type casting, Rust uses the binary `as` operator, which has high\n+precedence, just lower than multiplication and division.  It takes an\n+expression on the left side, and a type on the right side, and will,\n+if a meaningful conversion exists, convert the result of the\n+expression to the given type.\n \n ~~~~\n let x: float = 4.0;"}]}