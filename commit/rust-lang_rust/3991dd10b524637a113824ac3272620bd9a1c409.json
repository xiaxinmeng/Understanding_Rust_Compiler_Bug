{"sha": "3991dd10b524637a113824ac3272620bd9a1c409", "node_id": "C_kwDOAAsO6NoAKDM5OTFkZDEwYjUyNDYzN2ExMTM4MjRhYzMyNzI2MjBiZDlhMWM0MDk", "commit": {"author": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-11T05:07:10Z"}, "committer": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-11T05:07:10Z"}, "message": "fix reviewer comments: tests results", "tree": {"sha": "fbd4c850f58c94381f5a083bebd24406cba09ad3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbd4c850f58c94381f5a083bebd24406cba09ad3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3991dd10b524637a113824ac3272620bd9a1c409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3991dd10b524637a113824ac3272620bd9a1c409", "html_url": "https://github.com/rust-lang/rust/commit/3991dd10b524637a113824ac3272620bd9a1c409", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3991dd10b524637a113824ac3272620bd9a1c409/comments", "author": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "committer": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "342ce3da05eea9f119ecf367052d681a386b1761", "url": "https://api.github.com/repos/rust-lang/rust/commits/342ce3da05eea9f119ecf367052d681a386b1761", "html_url": "https://github.com/rust-lang/rust/commit/342ce3da05eea9f119ecf367052d681a386b1761"}], "stats": {"total": 94, "additions": 57, "deletions": 37}, "files": [{"sha": "e4032ae44b71509a9dfc17690cc2692cf4389944", "filename": "tests/ui/redundant_pattern_matching_result.fixed", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3991dd10b524637a113824ac3272620bd9a1c409/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3991dd10b524637a113824ac3272620bd9a1c409/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.fixed?ref=3991dd10b524637a113824ac3272620bd9a1c409", "patch": "@@ -110,16 +110,26 @@ const fn issue6067() {\n }\n \n fn issue10726() {\n-    Ok::<i32, i32>(42).is_ok();\n+    // This is optional, but it makes the examples easier\n+    let x: Result<i32, i32> = Ok(42);\n \n-    Ok::<i32, i32>(42).is_err();\n+    x.is_ok();\n \n-    Err::<i32, i32>(42).is_ok();\n+    x.is_err();\n \n-    Err::<i32, i32>(42).is_err();\n+    x.is_err();\n+\n+    x.is_ok();\n+\n+    // Don't lint\n+    match x {\n+        Err(16) => false,\n+        _ => true,\n+    };\n \n-    match Ok::<i32, i32>(42) {\n-        Ok(21) => true,\n-        _ => false,\n+    // Don't lint\n+    match x {\n+        Ok(16) => false,\n+        _ => true,\n     };\n }"}, {"sha": "39eb10df8789ed5f0fbe613282e42b531cb37fc2", "filename": "tests/ui/redundant_pattern_matching_result.rs", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3991dd10b524637a113824ac3272620bd9a1c409/tests%2Fui%2Fredundant_pattern_matching_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3991dd10b524637a113824ac3272620bd9a1c409/tests%2Fui%2Fredundant_pattern_matching_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.rs?ref=3991dd10b524637a113824ac3272620bd9a1c409", "patch": "@@ -128,28 +128,38 @@ const fn issue6067() {\n }\n \n fn issue10726() {\n-    match Ok::<i32, i32>(42) {\n+    // This is optional, but it makes the examples easier\n+    let x: Result<i32, i32> = Ok(42);\n+\n+    match x {\n         Ok(_) => true,\n         _ => false,\n     };\n \n-    match Ok::<i32, i32>(42) {\n+    match x {\n+        Ok(_) => false,\n+        _ => true,\n+    };\n+\n+    match x {\n         Err(_) => true,\n         _ => false,\n     };\n \n-    match Err::<i32, i32>(42) {\n-        Ok(_) => true,\n-        _ => false,\n+    match x {\n+        Err(_) => false,\n+        _ => true,\n     };\n \n-    match Err::<i32, i32>(42) {\n-        Err(_) => true,\n-        _ => false,\n+    // Don't lint\n+    match x {\n+        Err(16) => false,\n+        _ => true,\n     };\n \n-    match Ok::<i32, i32>(42) {\n-        Ok(21) => true,\n-        _ => false,\n+    // Don't lint\n+    match x {\n+        Ok(16) => false,\n+        _ => true,\n     };\n }"}, {"sha": "5893ae4dcc492ddef8bc14d59ce78394d36159e5", "filename": "tests/ui/redundant_pattern_matching_result.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/3991dd10b524637a113824ac3272620bd9a1c409/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3991dd10b524637a113824ac3272620bd9a1c409/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.stderr?ref=3991dd10b524637a113824ac3272620bd9a1c409", "patch": "@@ -151,40 +151,40 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:131:5\n+  --> $DIR/redundant_pattern_matching_result.rs:134:5\n    |\n-LL | /     match Ok::<i32, i32>(42) {\n+LL | /     match x {\n LL | |         Ok(_) => true,\n LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `Ok::<i32, i32>(42).is_ok()`\n+   | |_____^ help: try this: `x.is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:136:5\n+  --> $DIR/redundant_pattern_matching_result.rs:139:5\n    |\n-LL | /     match Ok::<i32, i32>(42) {\n-LL | |         Err(_) => true,\n-LL | |         _ => false,\n+LL | /     match x {\n+LL | |         Ok(_) => false,\n+LL | |         _ => true,\n LL | |     };\n-   | |_____^ help: try this: `Ok::<i32, i32>(42).is_err()`\n+   | |_____^ help: try this: `x.is_err()`\n \n-error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:141:5\n+error: redundant pattern matching, consider using `is_err()`\n+  --> $DIR/redundant_pattern_matching_result.rs:144:5\n    |\n-LL | /     match Err::<i32, i32>(42) {\n-LL | |         Ok(_) => true,\n+LL | /     match x {\n+LL | |         Err(_) => true,\n LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `Err::<i32, i32>(42).is_ok()`\n+   | |_____^ help: try this: `x.is_err()`\n \n-error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:146:5\n+error: redundant pattern matching, consider using `is_ok()`\n+  --> $DIR/redundant_pattern_matching_result.rs:149:5\n    |\n-LL | /     match Err::<i32, i32>(42) {\n-LL | |         Err(_) => true,\n-LL | |         _ => false,\n+LL | /     match x {\n+LL | |         Err(_) => false,\n+LL | |         _ => true,\n LL | |     };\n-   | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n+   | |_____^ help: try this: `x.is_ok()`\n \n error: aborting due to 26 previous errors\n "}]}