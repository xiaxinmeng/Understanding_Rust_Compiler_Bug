{"sha": "4c4f7a3189c837805e203decacb2f43d0866aac6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNGY3YTMxODljODM3ODA1ZTIwM2RlY2FjYjJmNDNkMDg2NmFhYzY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-11-16T16:42:39Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-11-16T16:42:39Z"}, "message": "Fix some tidy errors in ty::codec.", "tree": {"sha": "118aa89a032c2ede0da5994a37a3b9f9885ff0b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/118aa89a032c2ede0da5994a37a3b9f9885ff0b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c4f7a3189c837805e203decacb2f43d0866aac6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c4f7a3189c837805e203decacb2f43d0866aac6", "html_url": "https://github.com/rust-lang/rust/commit/4c4f7a3189c837805e203decacb2f43d0866aac6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c4f7a3189c837805e203decacb2f43d0866aac6/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb1ff24425c37835b5d746a22d68047ff2cb807b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb1ff24425c37835b5d746a22d68047ff2cb807b", "html_url": "https://github.com/rust-lang/rust/commit/cb1ff24425c37835b5d746a22d68047ff2cb807b"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "fbb14f39ade34d939edfe82c7af64ca7b4b7365e", "filename": "src/librustc/ty/codec.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4c4f7a3189c837805e203decacb2f43d0866aac6/src%2Flibrustc%2Fty%2Fcodec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4f7a3189c837805e203decacb2f43d0866aac6/src%2Flibrustc%2Fty%2Fcodec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcodec.rs?ref=4c4f7a3189c837805e203decacb2f43d0866aac6", "patch": "@@ -318,45 +318,52 @@ macro_rules! implement_ty_decoder {\n             // the caller to pick any lifetime for 'tcx, including 'static,\n             // by using the unspecialized proxies to them.\n \n-            impl<$($typaram),*> SpecializedDecoder<CrateNum> for $DecoderName<$($typaram),*> {\n+            impl<$($typaram),*> SpecializedDecoder<CrateNum>\n+            for $DecoderName<$($typaram),*> {\n                 fn specialized_decode(&mut self) -> Result<CrateNum, Self::Error> {\n                     decode_cnum(self)\n                 }\n             }\n \n-            impl<$($typaram),*> SpecializedDecoder<ty::Ty<'tcx>> for $DecoderName<$($typaram),*> {\n+            impl<$($typaram),*> SpecializedDecoder<ty::Ty<'tcx>>\n+            for $DecoderName<$($typaram),*> {\n                 fn specialized_decode(&mut self) -> Result<ty::Ty<'tcx>, Self::Error> {\n                     decode_ty(self)\n                 }\n             }\n \n             impl<$($typaram),*> SpecializedDecoder<ty::GenericPredicates<'tcx>>\n             for $DecoderName<$($typaram),*> {\n-                fn specialized_decode(&mut self) -> Result<ty::GenericPredicates<'tcx>, Self::Error> {\n+                fn specialized_decode(&mut self)\n+                                      -> Result<ty::GenericPredicates<'tcx>, Self::Error> {\n                     decode_predicates(self)\n                 }\n             }\n \n-            impl<$($typaram),*> SpecializedDecoder<&'tcx Substs<'tcx>> for $DecoderName<$($typaram),*> {\n+            impl<$($typaram),*> SpecializedDecoder<&'tcx Substs<'tcx>>\n+            for $DecoderName<$($typaram),*> {\n                 fn specialized_decode(&mut self) -> Result<&'tcx Substs<'tcx>, Self::Error> {\n                     decode_substs(self)\n                 }\n             }\n \n-            impl<$($typaram),*> SpecializedDecoder<ty::Region<'tcx>> for $DecoderName<$($typaram),*> {\n+            impl<$($typaram),*> SpecializedDecoder<ty::Region<'tcx>>\n+            for $DecoderName<$($typaram),*> {\n                 fn specialized_decode(&mut self) -> Result<ty::Region<'tcx>, Self::Error> {\n                     decode_region(self)\n                 }\n             }\n \n             impl<$($typaram),*> SpecializedDecoder<&'tcx ty::Slice<ty::Ty<'tcx>>>\n             for $DecoderName<$($typaram),*> {\n-                fn specialized_decode(&mut self) -> Result<&'tcx ty::Slice<ty::Ty<'tcx>>, Self::Error> {\n+                fn specialized_decode(&mut self)\n+                                      -> Result<&'tcx ty::Slice<ty::Ty<'tcx>>, Self::Error> {\n                     decode_ty_slice(self)\n                 }\n             }\n \n-            impl<$($typaram),*> SpecializedDecoder<&'tcx ty::AdtDef> for $DecoderName<$($typaram),*> {\n+            impl<$($typaram),*> SpecializedDecoder<&'tcx ty::AdtDef>\n+            for $DecoderName<$($typaram),*> {\n                 fn specialized_decode(&mut self) -> Result<&'tcx ty::AdtDef, Self::Error> {\n                     decode_adt_def(self)\n                 }\n@@ -370,7 +377,8 @@ macro_rules! implement_ty_decoder {\n                 }\n             }\n \n-            impl<$($typaram),*> SpecializedDecoder<ByteArray<'tcx>> for $DecoderName<$($typaram),*> {\n+            impl<$($typaram),*> SpecializedDecoder<ByteArray<'tcx>>\n+            for $DecoderName<$($typaram),*> {\n                 fn specialized_decode(&mut self) -> Result<ByteArray<'tcx>, Self::Error> {\n                     decode_byte_array(self)\n                 }"}]}