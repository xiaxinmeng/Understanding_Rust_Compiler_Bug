{"sha": "e5fd550dfdc7b67e22b0889983c5698439dc0bd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZmQ1NTBkZmRjN2I2N2UyMmIwODg5OTgzYzU2OTg0MzlkYzBiZDU=", "commit": {"author": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-12-04T17:41:37Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-12-04T17:43:47Z"}, "message": "Use correct, full substs for self type in impl\n\nWithout arbitrary self types, the self type could never refer to the method type\nparameters, so this wasn't a problem; but with arbitrary self types, it can.\n\nThis fixes the crash from #6668; but it doesn't make method resolution work for\nthese methods.", "tree": {"sha": "60a3fa0fdd2162092c6a97f960da677150889bda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60a3fa0fdd2162092c6a97f960da677150889bda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5fd550dfdc7b67e22b0889983c5698439dc0bd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5fd550dfdc7b67e22b0889983c5698439dc0bd5", "html_url": "https://github.com/rust-lang/rust/commit/e5fd550dfdc7b67e22b0889983c5698439dc0bd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5fd550dfdc7b67e22b0889983c5698439dc0bd5/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6943b530235df98c1ceec27d7f80a974511d3c7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6943b530235df98c1ceec27d7f80a974511d3c7e", "html_url": "https://github.com/rust-lang/rust/commit/6943b530235df98c1ceec27d7f80a974511d3c7e"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "8a289f52a6514456a8a5ac9d63349f5337fd254f", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e5fd550dfdc7b67e22b0889983c5698439dc0bd5/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5fd550dfdc7b67e22b0889983c5698439dc0bd5/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=e5fd550dfdc7b67e22b0889983c5698439dc0bd5", "patch": "@@ -720,7 +720,13 @@ fn transform_receiver_ty(\n             .push(self_ty.value.clone())\n             .fill_with_unknown()\n             .build(),\n-        AssocContainerId::ImplId(impl_id) => inherent_impl_substs(db, impl_id, &self_ty)?,\n+        AssocContainerId::ImplId(impl_id) => {\n+            let impl_substs = inherent_impl_substs(db, impl_id, &self_ty)?;\n+            Substs::build_for_def(db, function_id)\n+                .use_parent_substs(&impl_substs)\n+                .fill_with_unknown()\n+                .build()\n+        }\n         AssocContainerId::ContainerId(_) => unreachable!(),\n     };\n     let sig = db.callable_item_signature(function_id.into());"}, {"sha": "a6a54e542a92cb22cf1b5739289cf5100f8a488d", "filename": "crates/hir_ty/src/tests/method_resolution.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e5fd550dfdc7b67e22b0889983c5698439dc0bd5/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5fd550dfdc7b67e22b0889983c5698439dc0bd5/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs?ref=e5fd550dfdc7b67e22b0889983c5698439dc0bd5", "patch": "@@ -1087,3 +1087,22 @@ fn method_resolution_foreign_opaque_type() {\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn method_with_allocator_box_self_type() {\n+    check_types(\n+        r#\"\n+struct Slice<T> {}\n+struct Box<T, A> {}\n+\n+impl<T> Slice<T> {\n+    pub fn into_vec<A>(self: Box<Self, A>) { }\n+}\n+\n+fn main() {\n+    let foo: Slice<u32>;\n+    (foo.into_vec()); // we don't actually support arbitrary self types, but we shouldn't crash at least\n+} //^ {unknown}\n+\"#,\n+    );\n+}"}]}