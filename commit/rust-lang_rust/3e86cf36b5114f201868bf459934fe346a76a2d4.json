{"sha": "3e86cf36b5114f201868bf459934fe346a76a2d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlODZjZjM2YjUxMTRmMjAxODY4YmY0NTk5MzRmZTM0NmE3NmEyZDQ=", "commit": {"author": {"name": "Kyle Huey", "email": "khuey@kylehuey.com", "date": "2019-04-20T04:13:37Z"}, "committer": {"name": "Kyle Huey", "email": "khuey@kylehuey.com", "date": "2019-04-20T04:52:43Z"}, "message": "Add implementations of last in terms of next_back on a bunch of DoubleEndedIterators.\n\nr?Manishearth", "tree": {"sha": "60a7de7db6b5733586c144a3dfe113c1fc70dfcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60a7de7db6b5733586c144a3dfe113c1fc70dfcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e86cf36b5114f201868bf459934fe346a76a2d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e86cf36b5114f201868bf459934fe346a76a2d4", "html_url": "https://github.com/rust-lang/rust/commit/3e86cf36b5114f201868bf459934fe346a76a2d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e86cf36b5114f201868bf459934fe346a76a2d4/comments", "author": {"login": "khuey", "id": 325892, "node_id": "MDQ6VXNlcjMyNTg5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/325892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khuey", "html_url": "https://github.com/khuey", "followers_url": "https://api.github.com/users/khuey/followers", "following_url": "https://api.github.com/users/khuey/following{/other_user}", "gists_url": "https://api.github.com/users/khuey/gists{/gist_id}", "starred_url": "https://api.github.com/users/khuey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khuey/subscriptions", "organizations_url": "https://api.github.com/users/khuey/orgs", "repos_url": "https://api.github.com/users/khuey/repos", "events_url": "https://api.github.com/users/khuey/events{/privacy}", "received_events_url": "https://api.github.com/users/khuey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "khuey", "id": 325892, "node_id": "MDQ6VXNlcjMyNTg5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/325892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khuey", "html_url": "https://github.com/khuey", "followers_url": "https://api.github.com/users/khuey/followers", "following_url": "https://api.github.com/users/khuey/following{/other_user}", "gists_url": "https://api.github.com/users/khuey/gists{/gist_id}", "starred_url": "https://api.github.com/users/khuey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khuey/subscriptions", "organizations_url": "https://api.github.com/users/khuey/orgs", "repos_url": "https://api.github.com/users/khuey/repos", "events_url": "https://api.github.com/users/khuey/events{/privacy}", "received_events_url": "https://api.github.com/users/khuey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8aaae4294b16b8070a52b858364f440873bfc95c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8aaae4294b16b8070a52b858364f440873bfc95c", "html_url": "https://github.com/rust-lang/rust/commit/8aaae4294b16b8070a52b858364f440873bfc95c"}], "stats": {"total": 159, "additions": 159, "deletions": 0}, "files": [{"sha": "2b1e52cbf054313d7b4610404f56a2ec8bf19cc0", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -968,6 +968,11 @@ impl<'a, T> Iterator for Iter<'a, T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<&'a T> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1023,6 +1028,11 @@ impl<T> Iterator for IntoIter<T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<T> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1069,6 +1079,11 @@ impl<T> Iterator for Drain<'_, T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<T> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"drain\", since = \"1.6.0\")]"}, {"sha": "414abb00ef1fa760161d49cbaa0327939675ce94", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -1193,6 +1193,11 @@ impl<'a, K: 'a, V: 'a> Iterator for Iter<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         (self.length, Some(self.length))\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<(&'a K, &'a V)> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"fused\", since = \"1.26.0\")]\n@@ -1253,6 +1258,11 @@ impl<'a, K: 'a, V: 'a> Iterator for IterMut<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         (self.length, Some(self.length))\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<(&'a K, &'a mut V)> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1359,6 +1369,11 @@ impl<K, V> Iterator for IntoIter<K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         (self.length, Some(self.length))\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<(K, V)> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1421,6 +1436,11 @@ impl<'a, K, V> Iterator for Keys<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<&'a K> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1458,6 +1478,11 @@ impl<'a, K, V> Iterator for Values<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<&'a V> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1495,6 +1520,11 @@ impl<'a, K, V> Iterator for Range<'a, K, V> {\n             unsafe { Some(self.next_unchecked()) }\n         }\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<(&'a K, &'a V)> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"map_values_mut\", since = \"1.10.0\")]\n@@ -1508,6 +1538,11 @@ impl<'a, K, V> Iterator for ValuesMut<'a, K, V> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<&'a mut V> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"map_values_mut\", since = \"1.10.0\")]\n@@ -1626,6 +1661,11 @@ impl<'a, K, V> Iterator for RangeMut<'a, K, V> {\n             unsafe { Some(self.next_unchecked()) }\n         }\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<(&'a K, &'a mut V)> {\n+        self.next_back()\n+    }\n }\n \n impl<'a, K, V> RangeMut<'a, K, V> {"}, {"sha": "6f2467dfd6b513de6b41e7fec1a95a85f61feed9", "filename": "src/liballoc/collections/btree/set.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fset.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -1019,6 +1019,11 @@ impl<'a, T> Iterator for Iter<'a, T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<&'a T> {\n+        self.next_back()\n+    }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> DoubleEndedIterator for Iter<'a, T> {\n@@ -1044,6 +1049,11 @@ impl<T> Iterator for IntoIter<T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<T> {\n+        self.next_back()\n+    }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> DoubleEndedIterator for IntoIter<T> {\n@@ -1073,6 +1083,11 @@ impl<'a, T> Iterator for Range<'a, T> {\n     fn next(&mut self) -> Option<&'a T> {\n         self.iter.next().map(|(k, _)| k)\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<&'a T> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"btree_range\", since = \"1.17.0\")]"}, {"sha": "f01610a7c3f3a9f25008b911de5be5ab709dfed0", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -2367,6 +2367,10 @@ impl Iterator for Drain<'_> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n+    #[inline]\n+    fn last(mut self) -> Option<char> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"drain\", since = \"1.6.0\")]"}, {"sha": "50bb37b6ed27f9a5af9157c6814108186b002300", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -2385,6 +2385,11 @@ impl<T> Iterator for IntoIter<T> {\n     fn count(self) -> usize {\n         self.len()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<T> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -2504,6 +2509,11 @@ impl<T> Iterator for Drain<'_, T> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<T> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"drain\", since = \"1.6.0\")]\n@@ -2573,6 +2583,10 @@ impl<I: Iterator> Iterator for Splice<'_, I> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.drain.size_hint()\n     }\n+\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"vec_splice\", since = \"1.21.0\")]"}, {"sha": "ddee02ea232d1cf43f6428b8f82440ba21b4c943", "filename": "src/libcore/ascii.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibcore%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibcore%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fascii.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -117,6 +117,8 @@ impl Iterator for EscapeDefault {\n     type Item = u8;\n     fn next(&mut self) -> Option<u8> { self.range.next().map(|i| self.data[i]) }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.range.size_hint() }\n+    #[inline]\n+    fn last(mut self) -> Option<u8> { self.next_back() }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl DoubleEndedIterator for EscapeDefault {"}, {"sha": "d814e8a5958e7af1ee6b030b924073a013974b29", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -73,6 +73,11 @@ impl<I> Iterator for Rev<I> where I: DoubleEndedIterator {\n     {\n         self.iter.position(predicate)\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "cda4268607f9a226308807a23c0c7d85c117051b", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -3539,6 +3539,11 @@ impl<'a, T, P> Iterator for Split<'a, T, P> where P: FnMut(&T) -> bool {\n             (1, Some(self.v.len() + 1))\n         }\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -3637,6 +3642,11 @@ impl<'a, T, P> Iterator for SplitMut<'a, T, P> where P: FnMut(&T) -> bool {\n             (1, Some(self.v.len() + 1))\n         }\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -3702,6 +3712,11 @@ impl<'a, T, P> Iterator for RSplit<'a, T, P> where P: FnMut(&T) -> bool {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"slice_rsplit\", since = \"1.27.0\")]\n@@ -3766,6 +3781,11 @@ impl<'a, T, P> Iterator for RSplitMut<'a, T, P> where P: FnMut(&T) -> bool {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"slice_rsplit\", since = \"1.27.0\")]"}, {"sha": "41399d2194233d9d5da851cd0630767f1a80658f", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -1331,6 +1331,11 @@ impl<'a> Iterator for Lines<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.0.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1377,6 +1382,11 @@ impl<'a> Iterator for LinesAny<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.0.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -4215,6 +4225,11 @@ impl<'a> Iterator for SplitWhitespace<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"split_whitespace\", since = \"1.1.0\")]\n@@ -4241,6 +4256,11 @@ impl<'a> Iterator for SplitAsciiWhitespace<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.inner.size_hint()\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"}, {"sha": "6cb160067f7ec11a58095b4f5c71bb17ef22a792", "filename": "src/libstd/env.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -740,6 +740,10 @@ impl Iterator for Args {\n         self.inner.next().map(|s| s.into_string().unwrap())\n     }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.inner.size_hint() }\n+    #[inline]\n+    fn last(mut self) -> Option<String> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"env\", since = \"1.0.0\")]\n@@ -775,6 +779,8 @@ impl Iterator for ArgsOs {\n     type Item = OsString;\n     fn next(&mut self) -> Option<OsString> { self.inner.next() }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.inner.size_hint() }\n+    #[inline]\n+    fn last(mut self) -> Option<OsString> { self.next_back() }\n }\n \n #[stable(feature = \"env\", since = \"1.0.0\")]"}, {"sha": "79ba37b2eb5657a61748f06f5cf2b2efdc064609", "filename": "src/libstd/path.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -886,6 +886,11 @@ impl<'a> Iterator for Iter<'a> {\n     fn next(&mut self) -> Option<&'a OsStr> {\n         self.inner.next().map(Component::as_os_str)\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<&'a OsStr> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -949,6 +954,11 @@ impl<'a> Iterator for Components<'a> {\n         }\n         None\n     }\n+\n+    #[inline]\n+    fn last(mut self) -> Option<Self::Item> {\n+        self.next_back()\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "f0594bb21bd83245969f91011b9360574accb538", "filename": "src/libstd/sys/unix/args.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fsys%2Funix%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fsys%2Funix%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fargs.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -35,6 +35,8 @@ impl Iterator for Args {\n     type Item = OsString;\n     fn next(&mut self) -> Option<OsString> { self.iter.next() }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.iter.size_hint() }\n+    #[inline]\n+    fn last(mut self) -> Option<OsString> { self.next_back() }\n }\n \n impl ExactSizeIterator for Args {"}, {"sha": "6766099c1ece13d05520f6f5ba04ed1c453f7adc", "filename": "src/libstd/sys/wasm/args.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fsys%2Fwasm%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fsys%2Fwasm%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fargs.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -37,6 +37,10 @@ impl Iterator for Args {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.iter.size_hint()\n     }\n+    #[inline]\n+    fn last(mut self) -> Option<OsString> {\n+        self.next_back()\n+    }\n }\n \n impl ExactSizeIterator for Args {"}, {"sha": "744d7ec59d3a3e76303da40a4589bf099af936d1", "filename": "src/libstd/sys/windows/args.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fsys%2Fwindows%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e86cf36b5114f201868bf459934fe346a76a2d4/src%2Flibstd%2Fsys%2Fwindows%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fargs.rs?ref=3e86cf36b5114f201868bf459934fe346a76a2d4", "patch": "@@ -181,6 +181,8 @@ impl Iterator for Args {\n     type Item = OsString;\n     fn next(&mut self) -> Option<OsString> { self.parsed_args_list.next() }\n     fn size_hint(&self) -> (usize, Option<usize>) { self.parsed_args_list.size_hint() }\n+    #[inline]\n+    fn last(mut self) -> Option<OsString> { self.next_back() }\n }\n \n impl DoubleEndedIterator for Args {"}]}