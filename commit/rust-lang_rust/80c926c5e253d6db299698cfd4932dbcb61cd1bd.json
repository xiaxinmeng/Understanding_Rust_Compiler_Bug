{"sha": "80c926c5e253d6db299698cfd4932dbcb61cd1bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYzkyNmM1ZTI1M2Q2ZGIyOTk2OThjZmQ0OTMyZGJjYjYxY2QxYmQ=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2011-10-31T14:34:58Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-31T15:15:36Z"}, "message": "Add a char::to_digit function", "tree": {"sha": "c85104b6ec87062b4791cb49f3c603e8c639f277", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c85104b6ec87062b4791cb49f3c603e8c639f277"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80c926c5e253d6db299698cfd4932dbcb61cd1bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80c926c5e253d6db299698cfd4932dbcb61cd1bd", "html_url": "https://github.com/rust-lang/rust/commit/80c926c5e253d6db299698cfd4932dbcb61cd1bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80c926c5e253d6db299698cfd4932dbcb61cd1bd/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4739942e7415d89425453d25427c51f96328c52b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4739942e7415d89425453d25427c51f96328c52b", "html_url": "https://github.com/rust-lang/rust/commit/4739942e7415d89425453d25427c51f96328c52b"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "28345fb19fe9e3ba183efbc2a51727f106862c63", "filename": "src/lib/char.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Flib%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Flib%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fchar.rs?ref=80c926c5e253d6db299698cfd4932dbcb61cd1bd", "patch": "@@ -93,3 +93,12 @@ pure fn is_whitespace(c: char) -> bool {\n         true\n     } else if c == ch_no_break_space { true } else { false }\n }\n+\n+pure fn to_digit(c: char) -> u8 {\n+    alt c {\n+        '0' to '9' { c as u8 - ('0' as u8) }\n+        'a' to 'z' { c as u8 + 10u8 - ('a' as u8) }\n+        'A' to 'Z' { c as u8 + 10u8 - ('A' as u8) }\n+        _ { fail; }\n+    }\n+}"}, {"sha": "62fb0a7cb63ae76b031f861a0a5838b321ec69ae", "filename": "src/lib/int.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Flib%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Flib%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fint.rs?ref=80c926c5e253d6db299698cfd4932dbcb61cd1bd", "patch": "@@ -112,11 +112,7 @@ fn parse_buf(buf: [u8], radix: uint) -> int {\n     }\n     let n = 0;\n     while true {\n-        let digit = alt buf[i] as char {\n-            '0' to '9' { buf[i] - ('0' as u8) }\n-            'a' to 'z' { 10u8 + buf[i] - ('a' as u8) }\n-            'A' to 'Z' { 10u8 + buf[i] - ('A' as u8) }\n-        };\n+        let digit = char::to_digit(buf[i] as char);\n         if (digit as uint) >= radix {\n             fail;\n         }"}, {"sha": "5de9bd974e43ab74fc64e6ad0aae0c5a4a832204", "filename": "src/lib/uint.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Flib%2Fuint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Flib%2Fuint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fuint.rs?ref=80c926c5e253d6db299698cfd4932dbcb61cd1bd", "patch": "@@ -100,11 +100,7 @@ fn parse_buf(buf: [u8], radix: uint) -> uint {\n     let power = 1u;\n     let n = 0u;\n     while true {\n-        let digit = alt buf[i] as char {\n-            '0' to '9' { buf[i] - ('0' as u8) }\n-            'a' to 'z' { 10u8 + buf[i] - ('a' as u8) }\n-            'A' to 'Z' { 10u8 + buf[i] - ('A' as u8) }\n-        };\n+        let digit = char::to_digit(buf[i] as char);\n         if (digit as uint) >= radix {\n             fail;\n         }"}, {"sha": "b2724ca325d61491a3114409ce2831be2ffeb108", "filename": "src/test/stdtest/char.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Ftest%2Fstdtest%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Ftest%2Fstdtest%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fchar.rs?ref=80c926c5e253d6db299698cfd4932dbcb61cd1bd", "patch": "@@ -0,0 +1,28 @@\n+use std;\n+import std::char;\n+\n+#[test]\n+fn test_is_whitespace() {\n+    assert char::is_whitespace(' ');\n+    assert char::is_whitespace('\\u2007');\n+    assert char::is_whitespace('\\t');\n+    assert char::is_whitespace('\\n');\n+\n+    assert !char::is_whitespace('a');\n+    assert !char::is_whitespace('_');\n+    assert !char::is_whitespace('\\u0000');\n+}\n+\n+#[test]\n+fn test_to_digit() {\n+    assert (char::to_digit('0') == 0u8);\n+    assert (char::to_digit('1') == 1u8);\n+    assert (char::to_digit('2') == 2u8);\n+    assert (char::to_digit('9') == 9u8);\n+    assert (char::to_digit('a') == 10u8);\n+    assert (char::to_digit('A') == 10u8);\n+    assert (char::to_digit('b') == 11u8);\n+    assert (char::to_digit('B') == 11u8);\n+    assert (char::to_digit('z') == 35u8);\n+    assert (char::to_digit('Z') == 35u8);\n+}"}, {"sha": "501879c540f8aae3559930ad725767df9bccaed0", "filename": "src/test/stdtest/stdtest.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Ftest%2Fstdtest%2Fstdtest.rc", "raw_url": "https://github.com/rust-lang/rust/raw/80c926c5e253d6db299698cfd4932dbcb61cd1bd/src%2Ftest%2Fstdtest%2Fstdtest.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fstdtest.rc?ref=80c926c5e253d6db299698cfd4932dbcb61cd1bd", "patch": "@@ -2,6 +2,7 @@ use std;\n \n mod bitv;\n mod box;\n+mod char;\n mod comm;\n mod deque;\n mod either;"}]}