{"sha": "147311c5fc62537da8eb9c6f69536bec6719d534", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NzMxMWM1ZmM2MjUzN2RhOGViOWM2ZjY5NTM2YmVjNjcxOWQ1MzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-30T21:04:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-30T21:04:06Z"}, "message": "Auto merge of #57974 - llogiq:vec-deque-try-fold, r=alexcrichton\n\noverride `VecDeque`'s `Iter::try_fold`\n\nThis should improve performance (wherever it is used), but I haven't found the time to benchmark it yet.", "tree": {"sha": "a0ec71cd427842da687e498f28f983a4cf709498", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0ec71cd427842da687e498f28f983a4cf709498"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/147311c5fc62537da8eb9c6f69536bec6719d534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/147311c5fc62537da8eb9c6f69536bec6719d534", "html_url": "https://github.com/rust-lang/rust/commit/147311c5fc62537da8eb9c6f69536bec6719d534", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/147311c5fc62537da8eb9c6f69536bec6719d534/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9a2e3b1ccf16c6d43f56f503bd80c1ad137d523", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9a2e3b1ccf16c6d43f56f503bd80c1ad137d523", "html_url": "https://github.com/rust-lang/rust/commit/d9a2e3b1ccf16c6d43f56f503bd80c1ad137d523"}, {"sha": "b062b75559c1e6300324193873631e5e7beccfd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b062b75559c1e6300324193873631e5e7beccfd7", "html_url": "https://github.com/rust-lang/rust/commit/b062b75559c1e6300324193873631e5e7beccfd7"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "579d7de96e6dab8e168141d1e6cabc1163b92991", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/147311c5fc62537da8eb9c6f69536bec6719d534/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147311c5fc62537da8eb9c6f69536bec6719d534/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=147311c5fc62537da8eb9c6f69536bec6719d534", "patch": "@@ -12,7 +12,7 @@ use core::fmt;\n use core::iter::{repeat_with, FromIterator, FusedIterator};\n use core::mem;\n use core::ops::Bound::{Excluded, Included, Unbounded};\n-use core::ops::{Index, IndexMut, RangeBounds};\n+use core::ops::{Index, IndexMut, RangeBounds, Try};\n use core::ptr;\n use core::ptr::NonNull;\n use core::slice;\n@@ -2172,6 +2172,14 @@ impl<'a, T> Iterator for Iter<'a, T> {\n         accum = front.iter().fold(accum, &mut f);\n         back.iter().fold(accum, &mut f)\n     }\n+\n+    fn try_fold<B, F, R>(&mut self, init: B, mut f: F) -> R where\n+        Self: Sized, F: FnMut(B, Self::Item) -> R, R: Try<Ok=B>\n+    {\n+        let (front, back) = RingSlices::ring_slices(self.ring, self.head, self.tail);\n+        let accum = front.iter().try_fold(init, &mut f)?;\n+        back.iter().try_fold(accum, &mut f)\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "5165a7ca5a8f330e60177f074c6590ff409cdc3d", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/147311c5fc62537da8eb9c6f69536bec6719d534/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147311c5fc62537da8eb9c6f69536bec6719d534/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=147311c5fc62537da8eb9c6f69536bec6719d534", "patch": "@@ -113,6 +113,7 @@\n #![feature(slice_partition_dedup)]\n #![feature(maybe_uninit)]\n #![feature(alloc_layout_extra)]\n+#![feature(try_trait)]\n \n // Allow testing this library\n "}, {"sha": "c9d16a06b4773cee9bd474c43619c2778f50672b", "filename": "src/liballoc/tests/vec_deque.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/147311c5fc62537da8eb9c6f69536bec6719d534/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147311c5fc62537da8eb9c6f69536bec6719d534/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec_deque.rs?ref=147311c5fc62537da8eb9c6f69536bec6719d534", "patch": "@@ -1433,3 +1433,40 @@ fn test_rotate_right_random() {\n         }\n     }\n }\n+\n+#[test]\n+fn test_try_fold_empty() {\n+    assert_eq!(Some(0), VecDeque::<u32>::new().iter().try_fold(0, |_, _| None));\n+}\n+\n+#[test]\n+fn test_try_fold_none() {\n+    let v: VecDeque<u32> = (0..12).collect();\n+    assert_eq!(None, v.into_iter().try_fold(0, |a, b|\n+        if b < 11 { Some(a + b) } else { None }));\n+}\n+\n+#[test]\n+fn test_try_fold_ok() {\n+    let v: VecDeque<u32> = (0..12).collect();\n+    assert_eq!(Ok::<_, ()>(66), v.into_iter().try_fold(0, |a, b| Ok(a + b)));\n+}\n+\n+#[test]\n+fn test_try_fold_unit() {\n+    let v: VecDeque<()> = std::iter::repeat(()).take(42).collect();\n+    assert_eq!(Some(()), v.into_iter().try_fold((), |(), ()| Some(())));\n+}\n+\n+#[test]\n+fn test_try_fold_rotated() {\n+    let mut v: VecDeque<_> = (0..12).collect();\n+    for n in 0..10 {\n+        if n & 1 == 0 {\n+            v.rotate_left(n);\n+        } else {\n+            v.rotate_right(n);\n+        }\n+        assert_eq!(Ok::<_, ()>(66), v.iter().try_fold(0, |a, b| Ok(a + b)));\n+    }\n+}"}]}