{"sha": "56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MTgxY2Y4YWJmOGFkN2Y3ZDM2ZTkyZWY0ZDdiZjI5NGRmMjNjNGM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-27T13:28:20Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-28T20:35:20Z"}, "message": "Correct pluralisation of tuple/array/associated type binding mismatch errors", "tree": {"sha": "a77cb0373cc98c1279b413be29ba01122a5df641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a77cb0373cc98c1279b413be29ba01122a5df641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c", "html_url": "https://github.com/rust-lang/rust/commit/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "854995313a029df89381449bb168bf61c88c546c", "url": "https://api.github.com/repos/rust-lang/rust/commits/854995313a029df89381449bb168bf61c88c546c", "html_url": "https://github.com/rust-lang/rust/commit/854995313a029df89381449bb168bf61c88c546c"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "09426fe19e11eac2c21991aae10fc21dd6c9dc01", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c", "patch": "@@ -80,6 +80,12 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n             }\n         };\n \n+        macro_rules! pluralise {\n+            ($x:expr) => {\n+                if $x != 1 { \"s\" } else { \"\" }\n+            };\n+        }\n+\n         match *self {\n             CyclicTy(_) => write!(f, \"cyclic type of infinite size\"),\n             Mismatch => write!(f, \"types differ\"),\n@@ -95,16 +101,20 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n             }\n             Mutability => write!(f, \"types differ in mutability\"),\n             TupleSize(values) => {\n-                write!(f, \"expected a tuple with {} elements, \\\n-                           found one with {} elements\",\n+                write!(f, \"expected a tuple with {} element{}, \\\n+                           found one with {} element{}\",\n                        values.expected,\n-                       values.found)\n+                       pluralise!(values.expected),\n+                       values.found,\n+                       pluralise!(values.found))\n             }\n             FixedArraySize(values) => {\n-                write!(f, \"expected an array with a fixed size of {} elements, \\\n-                           found one with {} elements\",\n+                write!(f, \"expected an array with a fixed size of {} element{}, \\\n+                           found one with {} element{}\",\n                        values.expected,\n-                       values.found)\n+                       pluralise!(values.expected),\n+                       values.found,\n+                       pluralise!(values.found))\n             }\n             ArgCount => {\n                 write!(f, \"incorrect number of function parameters\")\n@@ -157,8 +167,9 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n                        tcx.def_path_str(values.found))\n             }),\n             ProjectionBoundsLength(ref values) => {\n-                write!(f, \"expected {} associated type bindings, found {}\",\n+                write!(f, \"expected {} associated type binding{}, found {}\",\n                        values.expected,\n+                       pluralise!(values.expected),\n                        values.found)\n             },\n             ExistentialMismatch(ref values) => {"}, {"sha": "77414fc7c928bf6d8d2919154b88e045d7da6271", "filename": "src/test/ui/consts/const-array-oob-arith.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c/src%2Ftest%2Fui%2Fconsts%2Fconst-array-oob-arith.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c/src%2Ftest%2Fui%2Fconsts%2Fconst-array-oob-arith.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-array-oob-arith.stderr?ref=56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/const-array-oob-arith.rs:7:45\n    |\n LL | const BLUB: [i32; (ARR[0] - 40) as usize] = [5];\n-   |                                             ^^^ expected an array with a fixed size of 2 elements, found one with 1 elements\n+   |                                             ^^^ expected an array with a fixed size of 2 elements, found one with 1 element\n    |\n    = note: expected type `[i32; 2]`\n               found type `[i32; 1]`\n@@ -11,7 +11,7 @@ error[E0308]: mismatched types\n   --> $DIR/const-array-oob-arith.rs:8:44\n    |\n LL | const BOO: [i32; (ARR[0] - 41) as usize] = [5, 99];\n-   |                                            ^^^^^^^ expected an array with a fixed size of 1 elements, found one with 2 elements\n+   |                                            ^^^^^^^ expected an array with a fixed size of 1 element, found one with 2 elements\n    |\n    = note: expected type `[i32; 1]`\n               found type `[i32; 2]`"}, {"sha": "4f505c05a6a2ce9021d7c263138a573318988007", "filename": "src/test/ui/tuple/tuple-arity-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c/src%2Ftest%2Fui%2Ftuple%2Ftuple-arity-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c/src%2Ftest%2Fui%2Ftuple%2Ftuple-arity-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Ftuple-arity-mismatch.rs?ref=56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c", "patch": "@@ -13,5 +13,5 @@ fn main() {\n     //~^ ERROR mismatched types\n     //~| expected type `(isize, f64)`\n     //~| found type `(isize,)`\n-    //~| expected a tuple with 2 elements, found one with 1 elements\n+    //~| expected a tuple with 2 elements, found one with 1 element\n }"}, {"sha": "6946a60c59af9b1e6a0bef1a55cf9d86369b7514", "filename": "src/test/ui/tuple/tuple-arity-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c/src%2Ftest%2Fui%2Ftuple%2Ftuple-arity-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c/src%2Ftest%2Fui%2Ftuple%2Ftuple-arity-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Ftuple-arity-mismatch.stderr?ref=56181cf8abf8ad7f7d36e92ef4d7bf294df23c4c", "patch": "@@ -11,7 +11,7 @@ error[E0308]: mismatched types\n   --> $DIR/tuple-arity-mismatch.rs:12:20\n    |\n LL |     let y = first ((1,));\n-   |                    ^^^^ expected a tuple with 2 elements, found one with 1 elements\n+   |                    ^^^^ expected a tuple with 2 elements, found one with 1 element\n    |\n    = note: expected type `(isize, f64)`\n               found type `(isize,)`"}]}