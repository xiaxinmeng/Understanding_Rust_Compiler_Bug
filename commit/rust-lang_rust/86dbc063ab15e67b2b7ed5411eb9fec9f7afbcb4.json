{"sha": "86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZGJjMDYzYWIxNWU2N2IyYjdlZDU0MTFlYjlmZWM5ZjdhZmJjYjQ=", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-05-18T03:18:46Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-05-19T22:55:33Z"}, "message": "Windows implementation of `fs::try_exists`", "tree": {"sha": "7a5aa1540daedb997a0449ac452004136c1ff9d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a5aa1540daedb997a0449ac452004136c1ff9d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmCll2UACgkQcTRy8vRW\nJ97JYhAAmghOX2UAqaYUM7/W3fZWVg3VlIu1QRE71FkA9O+FK4uHaaVo+GcBQ3+w\nBBAeeYhZMLTs6HX/vglvc3Ul4wljdw6GkZ3QD49zrnGfYSOi5K5vW3wO5GoVQUh/\nHF6TzVOumKQAEEBL8DXInTV/spw/AWfqrwiM9ci+wnBklSEK25KKPx9XxgX6z4O0\nbSqbV0BDRL1urJcLaCva+TIzf8HBySigdvEJ2Q8Mh9l7s8asIcRHyKGocZoWQvZJ\ne2/ZmVfy6Q8h2PiGrwqgIACslpZuupVD0wn4zHVkS5UwafZdvJoISXaB94UO12Qx\njILWcQJb+FxnJ1qlGKTyvDPo09r67YzRHhlW8KdOsJlgRugygnrElNkw31ApW4Ef\nGdB5uOk68moblfc8Ct/LTjQ0cDf9KtaW7zrtEj1HcqfZXh801ActVBST+0R3ZA5q\nZ5c/BBce+VgBH/Cj6ud4hFY05XLoD2lQmA24O8I8HJ3C4AclpFiHJOPgJBQNFRRn\nQq2G6myNXyCJLbacnc+r3YKiCrkVCmD3eYPcX95Fn4N3BW5ysyeHZKIq3SabATwL\nD+Ij5VZdW6V5H2UscVI0X8esYcSBvcbaJxGEkjVD4uLjau3poHNALkQ6EjRfbNrV\nxOwMhzBnxkgBvbvB2zBzms+H1eZmOupQPht+eRavsoTAOj4VM20=\n=J128\n-----END PGP SIGNATURE-----", "payload": "tree 7a5aa1540daedb997a0449ac452004136c1ff9d7\nparent 2c2c1593acc5479a4b502d51bb5fea239766c235\nauthor Chris Denton <christophersdenton@gmail.com> 1621307926 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1621464933 +0100\n\nWindows implementation of `fs::try_exists`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4", "html_url": "https://github.com/rust-lang/rust/commit/86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c2c1593acc5479a4b502d51bb5fea239766c235", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c2c1593acc5479a4b502d51bb5fea239766c235", "html_url": "https://github.com/rust-lang/rust/commit/2c2c1593acc5479a4b502d51bb5fea239766c235"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "50d6e8cf27a4054067b214285a12178c7acc1c33", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4", "patch": "@@ -173,6 +173,7 @@ pub const ERROR_INVALID_HANDLE: DWORD = 6;\n pub const ERROR_NOT_ENOUGH_MEMORY: DWORD = 8;\n pub const ERROR_OUTOFMEMORY: DWORD = 14;\n pub const ERROR_NO_MORE_FILES: DWORD = 18;\n+pub const ERROR_SHARING_VIOLATION: u32 = 32;\n pub const ERROR_HANDLE_EOF: DWORD = 38;\n pub const ERROR_FILE_EXISTS: DWORD = 80;\n pub const ERROR_INVALID_PARAMETER: DWORD = 87;"}, {"sha": "2b6143de96056f44d8ebdb09457366c892430267", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=86dbc063ab15e67b2b7ed5411eb9fec9f7afbcb4", "patch": "@@ -11,7 +11,6 @@ use crate::sync::Arc;\n use crate::sys::handle::Handle;\n use crate::sys::time::SystemTime;\n use crate::sys::{c, cvt};\n-pub use crate::sys_common::fs::try_exists;\n use crate::sys_common::FromInner;\n \n use super::to_u16s;\n@@ -945,3 +944,32 @@ fn symlink_junction_inner(original: &Path, junction: &Path) -> io::Result<()> {\n         .map(drop)\n     }\n }\n+\n+// Try to see if a file exists but, unlike `exists`, report I/O errors.\n+pub fn try_exists(path: &Path) -> io::Result<bool> {\n+    // Open the file to ensure any symlinks are followed to their target.\n+    let mut opts = OpenOptions::new();\n+    // No read, write, etc access rights are needed.\n+    opts.access_mode(0);\n+    // Backup semantics enables opening directories as well as files.\n+    opts.custom_flags(c::FILE_FLAG_BACKUP_SEMANTICS);\n+    match File::open(path, &opts) {\n+        Err(e) => match e.kind() {\n+            // The file definitely does not exist\n+            io::ErrorKind::NotFound => Ok(false),\n+\n+            // `ERROR_SHARING_VIOLATION` means that the file has been locked by\n+            // another process. This is often temporary so we simply report it\n+            // as the file existing.\n+            io::ErrorKind::Other if e.raw_os_error() == Some(c::ERROR_SHARING_VIOLATION as i32) => {\n+                Ok(true)\n+            }\n+            // Other errors such as `ERROR_ACCESS_DENIED` may indicate that the\n+            // file exists. However, these types of errors are usually more\n+            // permanent so we report them here.\n+            _ => Err(e),\n+        },\n+        // The file was opened successfully therefore it must exist,\n+        Ok(_) => Ok(true),\n+    }\n+}"}]}