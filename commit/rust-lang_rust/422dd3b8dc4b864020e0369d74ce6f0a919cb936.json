{"sha": "422dd3b8dc4b864020e0369d74ce6f0a919cb936", "node_id": "C_kwDOAAsO6NoAKDQyMmRkM2I4ZGM0Yjg2NDAyMGUwMzY5ZDc0Y2U2ZjBhOTE5Y2I5MzY", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-29T15:57:01Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-05-06T16:11:04Z"}, "message": "use hir_module_items instead of visit_all_item_likes in check_mod_impl_wf query\n\nSigned-off-by: Miguel Guarniz <mi9uel9@gmail.com>", "tree": {"sha": "d8c7fdbfbc0c9a7132eeb079a3895f8099f080a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8c7fdbfbc0c9a7132eeb079a3895f8099f080a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/422dd3b8dc4b864020e0369d74ce6f0a919cb936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/422dd3b8dc4b864020e0369d74ce6f0a919cb936", "html_url": "https://github.com/rust-lang/rust/commit/422dd3b8dc4b864020e0369d74ce6f0a919cb936", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/422dd3b8dc4b864020e0369d74ce6f0a919cb936/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f47f39b95fe1b80a4fd2e96819681c0faef93b47", "url": "https://api.github.com/repos/rust-lang/rust/commits/f47f39b95fe1b80a4fd2e96819681c0faef93b47", "html_url": "https://github.com/rust-lang/rust/commit/f47f39b95fe1b80a4fd2e96819681c0faef93b47"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "281e0162d6f546105d2ce2aed28725855a5790e8", "filename": "compiler/rustc_typeck/src/impl_wf_check.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/422dd3b8dc4b864020e0369d74ce6f0a919cb936/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/422dd3b8dc4b864020e0369d74ce6f0a919cb936/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check.rs?ref=422dd3b8dc4b864020e0369d74ce6f0a919cb936", "patch": "@@ -14,6 +14,7 @@ use min_specialization::check_min_specialization;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n+use rustc_hir::def::DefKind;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_middle::ty::query::Providers;\n@@ -63,8 +64,19 @@ pub fn impl_wf_check(tcx: TyCtxt<'_>) {\n \n fn check_mod_impl_wf(tcx: TyCtxt<'_>, module_def_id: LocalDefId) {\n     let min_specialization = tcx.features().min_specialization;\n-    tcx.hir()\n-        .visit_item_likes_in_module(module_def_id, &mut ImplWfCheck { tcx, min_specialization });\n+    let module = tcx.hir_module_items(module_def_id);\n+    for id in module.items() {\n+        if matches!(tcx.hir().def_kind(id.def_id), DefKind::Impl) {\n+            let item = tcx.hir().item(id);\n+            if let hir::ItemKind::Impl(ref impl_) = item.kind {\n+                enforce_impl_params_are_constrained(tcx, item.def_id, impl_.items);\n+                enforce_impl_items_are_distinct(tcx, impl_.items);\n+                if min_specialization {\n+                    check_min_specialization(tcx, item.def_id.to_def_id(), item.span);\n+                }\n+            }\n+        }\n+    }\n }\n \n pub fn provide(providers: &mut Providers) {"}]}