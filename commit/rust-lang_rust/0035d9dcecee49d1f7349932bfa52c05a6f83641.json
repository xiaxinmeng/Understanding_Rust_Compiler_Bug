{"sha": "0035d9dcecee49d1f7349932bfa52c05a6f83641", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMzVkOWRjZWNlZTQ5ZDFmNzM0OTkzMmJmYTUyYzA1YTZmODM2NDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-16T15:36:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-16T15:36:44Z"}, "message": "Auto merge of #87050 - jyn514:no-doc-primitive, r=manishearth\n\nAdd future-incompat lint for `doc(primitive)`\n\n## What is `doc(primitive)`?\n\n`doc(primitive)` is an attribute recognized by rustdoc which adds documentation for the built-in primitive types, such as `usize` and `()`. It has been stable since Rust 1.0.\n\n## Why change anything?\n\n`doc(primitive)` is useless for anyone outside the standard library. Since rustdoc provides no way to combine the documentation on two different primitive items, you can only replace the docs, and since the standard library already provides extensive documentation there is no reason to do so.\n\nWhile fixing rustdoc's handling of primitive items (https://github.com/rust-lang/rust/pull/87073) I discovered that even rustdoc's existing handling of primitive items was broken if you had more than two crates using it (it would pick randomly between them). That meant both:\n- Keeping rustdoc's existing treatment was nigh-impossible, because it was random.\n- doc(primitive) was even more useless than it would otherwise be.\n\nThe only use-case for this outside the standard library is for no-std libraries which want to link to primitives (https://github.com/rust-lang/rust/issues/73423) which is being fixed in https://github.com/rust-lang/rust/pull/87073.\n\nhttps://github.com/rust-lang/rust/pull/87073 makes various breaking changes to `doc(primitive)` (breaking in the sense that they change the semantics, not in that they cause code to fail to compile). It's not possible to avoid these and still fix rustdoc's issues.\n\n## What can we do about it?\n\nAs shown by the crater run (https://github.com/rust-lang/rust/pull/87050#issuecomment-886166706), no one is actually using doc(primitive), there wasn't a single true regression in the whole run. We can either:\n1. Feature gate it completely, breaking anyone who crater missed. They can easily fix the breakage just by removing the attribute.\n2. add it to the `INVALID_DOC_ATTRIBUTES` future-incompat lint, and at the same time make it a no-op unless you add a feature gate. That would mean rustdoc has to look at the features of dependent crates, because it needs to know where primitives are defined in order to link to them.\n3. add it to `INVALID_DOC_ATTRIBUTES`, but still use it to determine where primitives come from\n4. do nothing; the behavior will silently change in https://github.com/rust-lang/rust/pull/87073.\n\nMy preference is for 2, but I would also be happy with 1 or 3. I don't think we should silently change the behavior.\n\nThis PR currently implements 3.", "tree": {"sha": "1838b52d0fdd1525c3c7bd8adf7e5fd419599750", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1838b52d0fdd1525c3c7bd8adf7e5fd419599750"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0035d9dcecee49d1f7349932bfa52c05a6f83641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0035d9dcecee49d1f7349932bfa52c05a6f83641", "html_url": "https://github.com/rust-lang/rust/commit/0035d9dcecee49d1f7349932bfa52c05a6f83641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0035d9dcecee49d1f7349932bfa52c05a6f83641/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d96b090bb68065cd3a469b27cbd568e39bf0e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d96b090bb68065cd3a469b27cbd568e39bf0e7", "html_url": "https://github.com/rust-lang/rust/commit/73d96b090bb68065cd3a469b27cbd568e39bf0e7"}, {"sha": "03df65497e51c8a69e16ab8d4bc7a7d1b3d471dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/03df65497e51c8a69e16ab8d4bc7a7d1b3d471dc", "html_url": "https://github.com/rust-lang/rust/commit/03df65497e51c8a69e16ab8d4bc7a7d1b3d471dc"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "56dac253c54fd2e1752028083ce308b578078e7b", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0035d9dcecee49d1f7349932bfa52c05a6f83641/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0035d9dcecee49d1f7349932bfa52c05a6f83641/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=0035d9dcecee49d1f7349932bfa52c05a6f83641", "patch": "@@ -682,6 +682,9 @@ declare_features! (\n     /// Allows explicit generic arguments specification with `impl Trait` present.\n     (active, explicit_generic_args_with_impl_trait, \"1.56.0\", Some(83701), None),\n \n+    /// Allows using doc(primitive) without a future-incompat warning\n+    (active, doc_primitive, \"1.56.0\", Some(88070), None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "1bb6b899875ffaf17d36a8d904b720cd684e8ee0", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0035d9dcecee49d1f7349932bfa52c05a6f83641/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0035d9dcecee49d1f7349932bfa52c05a6f83641/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=0035d9dcecee49d1f7349932bfa52c05a6f83641", "patch": "@@ -794,9 +794,24 @@ impl CheckAttrVisitor<'tcx> {\n                         | sym::notable_trait\n                         | sym::passes\n                         | sym::plugins\n-                        | sym::primitive\n                         | sym::test => {}\n \n+                        sym::primitive => {\n+                            if !self.tcx.features().doc_primitive {\n+                                self.tcx.struct_span_lint_hir(\n+                                    INVALID_DOC_ATTRIBUTES,\n+                                    hir_id,\n+                                    i_meta.span,\n+                                    |lint| {\n+                                        let mut diag = lint.build(\n+                                            \"`doc(primitive)` should never have been stable\",\n+                                        );\n+                                        diag.emit();\n+                                    },\n+                                );\n+                            }\n+                        }\n+\n                         _ => {\n                             self.tcx.struct_span_lint_hir(\n                                 INVALID_DOC_ATTRIBUTES,"}, {"sha": "f788eb7d2126e53e5502b452a884ee2e75e82e02", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0035d9dcecee49d1f7349932bfa52c05a6f83641/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0035d9dcecee49d1f7349932bfa52c05a6f83641/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=0035d9dcecee49d1f7349932bfa52c05a6f83641", "patch": "@@ -538,6 +538,7 @@ symbols! {\n         doc_keyword,\n         doc_masked,\n         doc_notable_trait,\n+        doc_primitive,\n         doc_spotlight,\n         doctest,\n         document_private_items,"}, {"sha": "43db3f910224cc9662ac529e39d469ba4d39b437", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0035d9dcecee49d1f7349932bfa52c05a6f83641/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0035d9dcecee49d1f7349932bfa52c05a6f83641/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=0035d9dcecee49d1f7349932bfa52c05a6f83641", "patch": "@@ -263,6 +263,7 @@\n #![feature(doc_keyword)]\n #![feature(doc_masked)]\n #![feature(doc_notable_trait)]\n+#![cfg_attr(not(bootstrap), feature(doc_primitive))]\n #![feature(dropck_eyepatch)]\n #![feature(duration_checked_float)]\n #![feature(duration_constants)]"}, {"sha": "b17ea7cd8f5974c4bcbf4b1fda006a5b181ecf9e", "filename": "src/doc/rustdoc/src/the-doc-attribute.md", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Fdoc%2Frustdoc%2Fsrc%2Fthe-doc-attribute.md", "raw_url": "https://github.com/rust-lang/rust/raw/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Fdoc%2Frustdoc%2Fsrc%2Fthe-doc-attribute.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fthe-doc-attribute.md?ref=0035d9dcecee49d1f7349932bfa52c05a6f83641", "patch": "@@ -223,9 +223,3 @@ not eagerly inline it as a module unless you add `#[doc(inline)]`.\n \n Any item annotated with `#[doc(hidden)]` will not appear in the documentation, unless\n the `strip-hidden` pass is removed.\n-\n-## `#[doc(primitive)]`\n-\n-Since primitive types are defined in the compiler, there's no place to attach documentation\n-attributes. This attribute is used by the standard library to provide a way to generate\n-documentation for primitive types."}, {"sha": "dce98abcf53d7a57e68b7e2b531616e2d4576bb3", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=0035d9dcecee49d1f7349932bfa52c05a6f83641", "patch": "@@ -131,6 +131,13 @@ Book][unstable-masked] and [its tracking issue][issue-masked].\n [unstable-masked]: ../unstable-book/language-features/doc-masked.html\n [issue-masked]: https://github.com/rust-lang/rust/issues/44027\n \n+\n+## Document primitives\n+\n+Since primitive types are defined in the compiler, there's no place to attach documentation\n+attributes. The `#[doc(primitive)]` attribute is used by the standard library to provide a way to generate\n+documentation for primitive types, and requires `#![feature(doc_primitive)]` to enable.\n+\n ## Unstable command-line arguments\n \n These features are enabled by passing a command-line flag to Rustdoc, but the flags in question are"}, {"sha": "18f2014d9e4638f569d8f98c8390ef6d8bfdc585", "filename": "src/test/rustdoc-ui/coverage/exotic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fexotic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fexotic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcoverage%2Fexotic.rs?ref=0035d9dcecee49d1f7349932bfa52c05a6f83641", "patch": "@@ -2,6 +2,7 @@\n // check-pass\n \n #![feature(doc_keyword)]\n+#![feature(doc_primitive)]\n \n //! the features only used in std also have entries in the table, so make sure those get pulled out\n //! properly as well"}, {"sha": "18e99e72f8b622e106336943a408b2e84b19f2f2", "filename": "src/test/ui/rustdoc/feature-gate-doc_primitive.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Ftest%2Fui%2Frustdoc%2Ffeature-gate-doc_primitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Ftest%2Fui%2Frustdoc%2Ffeature-gate-doc_primitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frustdoc%2Ffeature-gate-doc_primitive.rs?ref=0035d9dcecee49d1f7349932bfa52c05a6f83641", "patch": "@@ -0,0 +1,8 @@\n+// check-pass\n+#[doc(primitive = \"usize\")]\n+//~^ WARNING `doc(primitive)` should never have been stable\n+//~| WARNING hard error in a future release\n+/// Some docs\n+mod usize {}\n+\n+fn main() {}"}, {"sha": "736bf29c580ddb8839e835b7e66c01492b320eed", "filename": "src/test/ui/rustdoc/feature-gate-doc_primitive.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Ftest%2Fui%2Frustdoc%2Ffeature-gate-doc_primitive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0035d9dcecee49d1f7349932bfa52c05a6f83641/src%2Ftest%2Fui%2Frustdoc%2Ffeature-gate-doc_primitive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frustdoc%2Ffeature-gate-doc_primitive.stderr?ref=0035d9dcecee49d1f7349932bfa52c05a6f83641", "patch": "@@ -0,0 +1,12 @@\n+warning: `doc(primitive)` should never have been stable\n+  --> $DIR/feature-gate-doc_primitive.rs:2:7\n+   |\n+LL | #[doc(primitive = \"usize\")]\n+   |       ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(invalid_doc_attributes)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+warning: 1 warning emitted\n+"}]}