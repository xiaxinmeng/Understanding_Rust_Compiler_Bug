{"sha": "940a97a91023d1817b33d0ababc985793c9ed780", "node_id": "C_kwDOAAsO6NoAKDk0MGE5N2E5MTAyM2QxODE3YjMzZDBhYmFiYzk4NTc5M2M5ZWQ3ODA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-20T04:21:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-20T04:21:12Z"}, "message": "Auto merge of #91900 - pitaj:fix-91714, r=jyn514\n\nrustdoc: make `--passes` and `--no-defaults` have no effect\n\nFixes #91714\n\nOne potential issue is that currently there is no stable way to achieve `--document-hidden-items`. This affects test `issue-15347`.\n\nI also had to modify the tests `issue-42875` and `no-compiler-export`. Regardless of combinations of `--document-hidden-items` and `--document-private-items`, I was unable to get these to pass without the modifications. I left behind a comment noting the change.", "tree": {"sha": "6b1d8e84ebd946c786e6656ce26e60a27a86ad6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b1d8e84ebd946c786e6656ce26e60a27a86ad6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/940a97a91023d1817b33d0ababc985793c9ed780", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/940a97a91023d1817b33d0ababc985793c9ed780", "html_url": "https://github.com/rust-lang/rust/commit/940a97a91023d1817b33d0ababc985793c9ed780", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/940a97a91023d1817b33d0ababc985793c9ed780/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed7a2068432b62880bca89cd69546682a2e192cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed7a2068432b62880bca89cd69546682a2e192cd", "html_url": "https://github.com/rust-lang/rust/commit/ed7a2068432b62880bca89cd69546682a2e192cd"}, {"sha": "02b94b7922d6938da3bde07cedd5f02823a72d97", "url": "https://api.github.com/repos/rust-lang/rust/commits/02b94b7922d6938da3bde07cedd5f02823a72d97", "html_url": "https://github.com/rust-lang/rust/commit/02b94b7922d6938da3bde07cedd5f02823a72d97"}], "stats": {"total": 256, "additions": 99, "deletions": 157}, "files": [{"sha": "961a98a72053fcbde0c49532cfae210f30ad7573", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 21, "deletions": 37, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -24,7 +24,7 @@ use crate::html::markdown::IdMap;\n use crate::html::render::StylePath;\n use crate::html::static_files;\n use crate::opts;\n-use crate::passes::{self, Condition, DefaultPassOption};\n+use crate::passes::{self, Condition};\n use crate::scrape_examples::{AllCallLocations, ScrapeExamplesOptions};\n use crate::theme;\n \n@@ -128,14 +128,6 @@ crate struct Options {\n     crate test_builder: Option<PathBuf>,\n \n     // Options that affect the documentation process\n-    /// The selected default set of passes to use.\n-    ///\n-    /// Be aware: This option can come both from the CLI and from crate attributes!\n-    crate default_passes: DefaultPassOption,\n-    /// Any passes manually selected by the user.\n-    ///\n-    /// Be aware: This option can come both from the CLI and from crate attributes!\n-    crate manual_passes: Vec<String>,\n     /// Whether to run the `calculate-doc-coverage` pass, which counts the number of public items\n     /// with and without documentation.\n     crate show_coverage: bool,\n@@ -192,8 +184,6 @@ impl fmt::Debug for Options {\n             .field(\"test_args\", &self.test_args)\n             .field(\"test_run_directory\", &self.test_run_directory)\n             .field(\"persist_doctests\", &self.persist_doctests)\n-            .field(\"default_passes\", &self.default_passes)\n-            .field(\"manual_passes\", &self.manual_passes)\n             .field(\"show_coverage\", &self.show_coverage)\n             .field(\"crate_version\", &self.crate_version)\n             .field(\"render_options\", &self.render_options)\n@@ -605,15 +595,6 @@ impl Options {\n \n         let show_coverage = matches.opt_present(\"show-coverage\");\n \n-        let default_passes = if matches.opt_present(\"no-defaults\") {\n-            passes::DefaultPassOption::None\n-        } else if show_coverage {\n-            passes::DefaultPassOption::Coverage\n-        } else {\n-            passes::DefaultPassOption::Default\n-        };\n-        let manual_passes = matches.opt_strs(\"passes\");\n-\n         let crate_types = match parse_crate_types_from_list(matches.opt_strs(\"crate-type\")) {\n             Ok(types) => types,\n             Err(e) => {\n@@ -710,8 +691,6 @@ impl Options {\n             lint_cap,\n             should_test,\n             test_args,\n-            default_passes,\n-            manual_passes,\n             show_coverage,\n             crate_version,\n             test_run_directory,\n@@ -769,33 +748,38 @@ impl Options {\n \n /// Prints deprecation warnings for deprecated options\n fn check_deprecated_options(matches: &getopts::Matches, diag: &rustc_errors::Handler) {\n-    let deprecated_flags = [\"input-format\", \"no-defaults\", \"passes\"];\n+    let deprecated_flags = [];\n+\n+    for &flag in deprecated_flags.iter() {\n+        if matches.opt_present(flag) {\n+            diag.struct_warn(&format!(\"the `{}` flag is deprecated\", flag))\n+                .note(\n+                    \"see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n+                    for more information\",\n+                )\n+                .emit();\n+        }\n+    }\n+\n+    let removed_flags = [\"plugins\", \"plugin-path\", \"no-defaults\", \"passes\", \"input-format\"];\n \n-    for flag in deprecated_flags.iter() {\n+    for &flag in removed_flags.iter() {\n         if matches.opt_present(flag) {\n-            let mut err = diag.struct_warn(&format!(\"the `{}` flag is deprecated\", flag));\n+            let mut err = diag.struct_warn(&format!(\"the `{}` flag no longer functions\", flag));\n             err.note(\n                 \"see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n-                 for more information\",\n+                for more information\",\n             );\n \n-            if *flag == \"no-defaults\" {\n+            if flag == \"no-defaults\" || flag == \"passes\" {\n                 err.help(\"you may want to use --document-private-items\");\n+            } else if flag == \"plugins\" || flag == \"plugin-path\" {\n+                err.warn(\"see CVE-2018-1000622\");\n             }\n \n             err.emit();\n         }\n     }\n-\n-    let removed_flags = [\"plugins\", \"plugin-path\"];\n-\n-    for &flag in removed_flags.iter() {\n-        if matches.opt_present(flag) {\n-            diag.struct_warn(&format!(\"the '{}' flag no longer functions\", flag))\n-                .warn(\"see CVE-2018-1000622\")\n-                .emit();\n-        }\n-    }\n }\n \n /// Extracts `--extern-html-root-url` arguments from `matches` and returns a map of crate names to"}, {"sha": "3948f9fa7e73d45eae7e83764130935daf1440a4", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 12, "deletions": 42, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -35,7 +35,7 @@ use crate::clean::inline::build_external_trait;\n use crate::clean::{self, ItemId, TraitWithExtraInfo};\n use crate::config::{Options as RustdocOptions, OutputFormat, RenderOptions};\n use crate::formats::cache::Cache;\n-use crate::passes::{self, Condition::*, ConditionalPass};\n+use crate::passes::{self, Condition::*};\n \n crate use rustc_session::config::{DebuggingOptions, Input, Options};\n \n@@ -327,8 +327,7 @@ crate fn create_resolver<'a>(\n crate fn run_global_ctxt(\n     tcx: TyCtxt<'_>,\n     resolver: Rc<RefCell<interface::BoxedResolver>>,\n-    mut default_passes: passes::DefaultPassOption,\n-    manual_passes: Vec<String>,\n+    show_coverage: bool,\n     render_options: RenderOptions,\n     output_format: OutputFormat,\n ) -> (clean::Crate, RenderOptions, Cache) {\n@@ -420,66 +419,38 @@ crate fn run_global_ctxt(\n             diag.struct_span_warn(sp, &format!(\"the `#![doc({})]` attribute is deprecated\", name));\n         msg.note(\n             \"see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n-             for more information\",\n+            for more information\",\n         );\n \n         if name == \"no_default_passes\" {\n-            msg.help(\"you may want to use `#![doc(document_private_items)]`\");\n+            msg.help(\"`#![doc(no_default_passes)]` no longer functions; you may want to use `#![doc(document_private_items)]`\");\n+        } else if name.starts_with(\"passes\") {\n+            msg.help(\"`#![doc(passes = \\\"...\\\")]` no longer functions; you may want to use `#![doc(document_private_items)]`\");\n         } else if name.starts_with(\"plugins\") {\n             msg.warn(\"`#![doc(plugins = \\\"...\\\")]` no longer functions; see CVE-2018-1000622 <https://nvd.nist.gov/vuln/detail/CVE-2018-1000622>\");\n         }\n \n         msg.emit();\n     }\n \n-    let parse_pass = |name: &str, sp: Option<Span>| {\n-        if let Some(pass) = passes::find_pass(name) {\n-            Some(ConditionalPass::always(pass))\n-        } else {\n-            let msg = &format!(\"ignoring unknown pass `{}`\", name);\n-            let mut warning = if let Some(sp) = sp {\n-                tcx.sess.struct_span_warn(sp, msg)\n-            } else {\n-                tcx.sess.struct_warn(msg)\n-            };\n-            if name == \"collapse-docs\" {\n-                warning.note(\"the `collapse-docs` pass was removed in #80261 <https://github.com/rust-lang/rust/pull/80261>\");\n-            }\n-            warning.emit();\n-            None\n-        }\n-    };\n-\n-    let mut manual_passes: Vec<_> =\n-        manual_passes.into_iter().flat_map(|name| parse_pass(&name, None)).collect();\n-\n     // Process all of the crate attributes, extracting plugin metadata along\n     // with the passes which we are supposed to run.\n     for attr in krate.module.attrs.lists(sym::doc) {\n         let diag = ctxt.sess().diagnostic();\n \n         let name = attr.name_or_empty();\n-        if attr.is_word() {\n-            if name == sym::no_default_passes {\n-                report_deprecated_attr(\"no_default_passes\", diag, attr.span());\n-                if default_passes == passes::DefaultPassOption::Default {\n-                    default_passes = passes::DefaultPassOption::None;\n-                }\n-            }\n-        } else if let Some(value) = attr.value_str() {\n+        // `plugins = \"...\"`, `no_default_passes`, and `passes = \"...\"` have no effect\n+        if attr.is_word() && name == sym::no_default_passes {\n+            report_deprecated_attr(\"no_default_passes\", diag, attr.span());\n+        } else if attr.value_str().is_some() {\n             match name {\n                 sym::passes => {\n                     report_deprecated_attr(\"passes = \\\"...\\\"\", diag, attr.span());\n                 }\n                 sym::plugins => {\n                     report_deprecated_attr(\"plugins = \\\"...\\\"\", diag, attr.span());\n-                    continue;\n                 }\n-                _ => continue,\n-            };\n-            for name in value.as_str().split_whitespace() {\n-                let span = attr.name_value_literal_span().unwrap_or_else(|| attr.span());\n-                manual_passes.extend(parse_pass(name, Some(span)));\n+                _ => (),\n             }\n         }\n \n@@ -488,10 +459,9 @@ crate fn run_global_ctxt(\n         }\n     }\n \n-    let passes = passes::defaults(default_passes).iter().copied().chain(manual_passes);\n     info!(\"Executing passes\");\n \n-    for p in passes {\n+    for p in passes::defaults(show_coverage) {\n         let run = match p.condition {\n             Always => true,\n             WhenDocumentPrivate => ctxt.render_options.document_private,"}, {"sha": "9a704bc3d873870a8d980f9b8c1b82eec68c27c0", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 46, "deletions": 19, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -274,9 +274,6 @@ fn opts() -> Vec<RustcOptGroup> {\n         stable(\"h\", |o| o.optflagmulti(\"h\", \"help\", \"show this help message\")),\n         stable(\"V\", |o| o.optflagmulti(\"V\", \"version\", \"print rustdoc's version\")),\n         stable(\"v\", |o| o.optflagmulti(\"v\", \"verbose\", \"use verbose output\")),\n-        stable(\"r\", |o| {\n-            o.optopt(\"r\", \"input-format\", \"the input type of the specified file\", \"[rust]\")\n-        }),\n         stable(\"w\", |o| o.optopt(\"w\", \"output-format\", \"the output type to write\", \"[html]\")),\n         stable(\"output\", |o| {\n             o.optopt(\n@@ -313,21 +310,9 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"give precedence to `--extern-html-root-url`, not `html_root_url`\",\n             )\n         }),\n-        stable(\"plugin-path\", |o| o.optmulti(\"\", \"plugin-path\", \"removed\", \"DIR\")),\n         stable(\"C\", |o| {\n             o.optmulti(\"C\", \"codegen\", \"pass a codegen option to rustc\", \"OPT[=VALUE]\")\n         }),\n-        stable(\"passes\", |o| {\n-            o.optmulti(\n-                \"\",\n-                \"passes\",\n-                \"list of passes to also run, you might want to pass it multiple times; a value of \\\n-                 `list` will print available passes\",\n-                \"PASSES\",\n-            )\n-        }),\n-        stable(\"plugins\", |o| o.optmulti(\"\", \"plugins\", \"removed\", \"PLUGINS\")),\n-        stable(\"no-default\", |o| o.optflagmulti(\"\", \"no-defaults\", \"don't run the default passes\")),\n         stable(\"document-private-items\", |o| {\n             o.optflagmulti(\"\", \"document-private-items\", \"document private items\")\n         }),\n@@ -653,6 +638,51 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"path to function call information (for displaying examples in the documentation)\",\n             )\n         }),\n+        // deprecated / removed options\n+        stable(\"plugin-path\", |o| {\n+            o.optmulti(\n+                \"\",\n+                \"plugin-path\",\n+                \"removed, see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n+                for more information\",\n+                \"DIR\",\n+            )\n+        }),\n+        stable(\"passes\", |o| {\n+            o.optmulti(\n+                \"\",\n+                \"passes\",\n+                \"removed, see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n+                for more information\",\n+                \"PASSES\",\n+            )\n+        }),\n+        stable(\"plugins\", |o| {\n+            o.optmulti(\n+                \"\",\n+                \"plugins\",\n+                \"removed, see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n+                for more information\",\n+                \"PLUGINS\",\n+            )\n+        }),\n+        stable(\"no-default\", |o| {\n+            o.optflagmulti(\n+                \"\",\n+                \"no-defaults\",\n+                \"removed, see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n+                for more information\",\n+            )\n+        }),\n+        stable(\"r\", |o| {\n+            o.optopt(\n+                \"r\",\n+                \"input-format\",\n+                \"removed, see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n+                for more information\",\n+                \"[rust]\",\n+            )\n+        }),\n     ]\n }\n \n@@ -761,11 +791,9 @@ fn main_options(options: config::Options) -> MainResult {\n     // plug/cleaning passes.\n     let crate_version = options.crate_version.clone();\n \n-    let default_passes = options.default_passes;\n     let output_format = options.output_format;\n     // FIXME: fix this clone (especially render_options)\n     let externs = options.externs.clone();\n-    let manual_passes = options.manual_passes.clone();\n     let render_options = options.render_options.clone();\n     let scrape_examples_options = options.scrape_examples_options.clone();\n     let config = core::create_config(options);\n@@ -796,8 +824,7 @@ fn main_options(options: config::Options) -> MainResult {\n                     core::run_global_ctxt(\n                         tcx,\n                         resolver,\n-                        default_passes,\n-                        manual_passes,\n+                        show_coverage,\n                         render_options,\n                         output_format,\n                     )"}, {"sha": "2c2bf2b8c0f198b4db6b6b00a25a952d407e72e8", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -125,27 +125,9 @@ impl ConditionalPass {\n     }\n }\n \n-/// A shorthand way to refer to which set of passes to use, based on the presence of\n-/// `--no-defaults` and `--show-coverage`.\n-#[derive(Copy, Clone, PartialEq, Eq, Debug)]\n-crate enum DefaultPassOption {\n-    Default,\n-    Coverage,\n-    None,\n-}\n-\n /// Returns the given default set of passes.\n-crate fn defaults(default_set: DefaultPassOption) -> &'static [ConditionalPass] {\n-    match default_set {\n-        DefaultPassOption::Default => DEFAULT_PASSES,\n-        DefaultPassOption::Coverage => COVERAGE_PASSES,\n-        DefaultPassOption::None => &[],\n-    }\n-}\n-\n-/// If the given name matches a known pass, returns its information.\n-crate fn find_pass(pass_name: &str) -> Option<Pass> {\n-    PASSES.iter().find(|p| p.name == pass_name).copied()\n+crate fn defaults(show_coverage: bool) -> &'static [ConditionalPass] {\n+    if show_coverage { COVERAGE_PASSES } else { DEFAULT_PASSES }\n }\n \n /// Returns a span encompassing all the given attributes."}, {"sha": "4f6a14fc2c2699c20d2cd5e9f68c18c399ce3678", "filename": "src/test/rustdoc-ui/deprecated-attrs.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -1,16 +1,15 @@\n // check-pass\n // compile-flags: --passes unknown-pass\n-// error-pattern: ignoring unknown pass `unknown-pass`\n+// error-pattern: the `passes` flag no longer functions\n \n #![doc(no_default_passes)]\n //~^ WARNING attribute is deprecated\n //~| NOTE see issue #44136\n-//~| HELP use `#![doc(document_private_items)]`\n+//~| HELP no longer functions; you may want to use `#![doc(document_private_items)]`\n #![doc(passes = \"collapse-docs unindent-comments\")]\n //~^ WARNING attribute is deprecated\n //~| NOTE see issue #44136\n-//~| WARNING ignoring unknown pass\n-//~| NOTE `collapse-docs` pass was removed\n+//~| HELP no longer functions; you may want to use `#![doc(document_private_items)]`\n #![doc(plugins = \"xxx\")]\n //~^ WARNING attribute is deprecated\n //~| NOTE see issue #44136"}, {"sha": "45b20ce70ef0f2a2920f0af68216fe8efb89f6b7", "filename": "src/test/rustdoc-ui/deprecated-attrs.stderr", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeprecated-attrs.stderr?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -1,8 +1,7 @@\n-warning: the `passes` flag is deprecated\n+warning: the `passes` flag no longer functions\n    |\n    = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n-\n-warning: ignoring unknown pass `unknown-pass`\n+   = help: you may want to use --document-private-items\n \n warning: the `#![doc(no_default_passes)]` attribute is deprecated\n   --> $DIR/deprecated-attrs.rs:5:8\n@@ -11,7 +10,7 @@ LL | #![doc(no_default_passes)]\n    |        ^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n-   = help: you may want to use `#![doc(document_private_items)]`\n+   = help: `#![doc(no_default_passes)]` no longer functions; you may want to use `#![doc(document_private_items)]`\n \n warning: the `#![doc(passes = \"...\")]` attribute is deprecated\n   --> $DIR/deprecated-attrs.rs:9:8\n@@ -20,23 +19,16 @@ LL | #![doc(passes = \"collapse-docs unindent-comments\")]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n-\n-warning: ignoring unknown pass `collapse-docs`\n-  --> $DIR/deprecated-attrs.rs:9:17\n-   |\n-LL | #![doc(passes = \"collapse-docs unindent-comments\")]\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: the `collapse-docs` pass was removed in #80261 <https://github.com/rust-lang/rust/pull/80261>\n+   = help: `#![doc(passes = \"...\")]` no longer functions; you may want to use `#![doc(document_private_items)]`\n \n warning: the `#![doc(plugins = \"...\")]` attribute is deprecated\n-  --> $DIR/deprecated-attrs.rs:14:8\n+  --> $DIR/deprecated-attrs.rs:13:8\n    |\n LL | #![doc(plugins = \"xxx\")]\n    |        ^^^^^^^^^^^^^^^\n    |\n    = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n    = warning: `#![doc(plugins = \"...\")]` no longer functions; see CVE-2018-1000622 <https://nvd.nist.gov/vuln/detail/CVE-2018-1000622>\n \n-warning: 5 warnings emitted\n+warning: 3 warnings emitted\n "}, {"sha": "610bbf11d9cb33439b8b5fd430e07ef95f1a9fa9", "filename": "src/test/rustdoc-ui/issue-91713.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc-ui%2Fissue-91713.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc-ui%2Fissue-91713.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-91713.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -1,3 +1,3 @@\n // check-pass\n // compile-flags: --passes list\n-// error-pattern: the `passes` flag is deprecated\n+// error-pattern: the `passes` flag no longer functions"}, {"sha": "44ead7a1de2767d413e395daa9fdf7d9fbbb526b", "filename": "src/test/rustdoc-ui/issue-91713.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc-ui%2Fissue-91713.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc-ui%2Fissue-91713.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-91713.stderr?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -1,4 +1,5 @@\n-warning: the `passes` flag is deprecated\n+warning: the `passes` flag no longer functions\n    |\n    = note: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n+   = help: you may want to use --document-private-items\n "}, {"sha": "a2f0d65efce4cb800b577da42275cae33dc8e0a2", "filename": "src/test/rustdoc/inline_local/glob-extern-document-private-items.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-extern-document-private-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-extern-document-private-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-extern-document-private-items.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --no-defaults\n+// compile-flags: --document-private-items\n \n #![crate_name = \"foo\"]\n ", "previous_filename": "src/test/rustdoc/inline_local/glob-extern-no-defaults.rs"}, {"sha": "f16d21ecdb1395756fe19434289aaf9dbe775f36", "filename": "src/test/rustdoc/inline_local/glob-private-document-private-items.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-private-document-private-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-private-document-private-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fglob-private-document-private-items.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --no-defaults\n+// compile-flags: --document-private-items\n \n #![crate_name = \"foo\"]\n ", "previous_filename": "src/test/rustdoc/inline_local/glob-private-no-defaults.rs"}, {"sha": "e93d74011681bf722b0aa1f3a8c82c9762b9ad01", "filename": "src/test/rustdoc/issue-15347.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc%2Fissue-15347.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc%2Fissue-15347.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-15347.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --no-defaults --passes collapse-docs --passes unindent-comments\n+// compile-flags: -Z unstable-options --document-hidden-items\n \n // @has issue_15347/fn.foo.html\n #[doc(hidden)]"}, {"sha": "292c2077688de2f2fd0152c337b96f4cf4159b7a", "filename": "src/test/rustdoc/issue-42875.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ed7a2068432b62880bca89cd69546682a2e192cd/src%2Ftest%2Frustdoc%2Fissue-42875.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed7a2068432b62880bca89cd69546682a2e192cd/src%2Ftest%2Frustdoc%2Fissue-42875.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-42875.rs?ref=ed7a2068432b62880bca89cd69546682a2e192cd", "patch": "@@ -1,13 +0,0 @@\n-// compile-flags: --no-defaults\n-\n-#![crate_name = \"foo\"]\n-\n-// @has foo/a/index.html '//code' 'use *;'\n-mod a {\n-    use *;\n-}\n-\n-// @has foo/b/index.html '//code' 'pub use *;'\n-pub mod b {\n-    pub use *;\n-}"}, {"sha": "d28fdf87b77a184460fdfb47d0f10ff988884273", "filename": "src/test/rustdoc/no-compiler-reexport.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc%2Fno-compiler-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940a97a91023d1817b33d0ababc985793c9ed780/src%2Ftest%2Frustdoc%2Fno-compiler-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fno-compiler-reexport.rs?ref=940a97a91023d1817b33d0ababc985793c9ed780", "patch": "@@ -1,7 +1,7 @@\n-// compile-flags: --no-defaults\n+// compile-flags: -Z unstable-options --document-hidden-items --document-private-items\n \n #![crate_name = \"foo\"]\n \n-// @has 'foo/index.html' '//code' 'extern crate std;'\n-// @!has 'foo/index.html' '//code' 'use std::prelude::v1::*;'\n+// @!has 'foo/index.html' '//code' 'extern crate std;'\n+// @!has 'foo/index.html' '//code' 'use std::prelude'\n pub struct Foo;"}]}