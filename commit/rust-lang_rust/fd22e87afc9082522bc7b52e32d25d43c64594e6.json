{"sha": "fd22e87afc9082522bc7b52e32d25d43c64594e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMjJlODdhZmM5MDgyNTIyYmM3YjUyZTMyZDI1ZDQzYzY0NTk0ZTY=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-18T20:13:07Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-18T20:13:07Z"}, "message": "fix flag computation for `ExistentialPredicate::Projection`", "tree": {"sha": "9c3d249d9ffb2ddb0078fd5a51b187f3a9508976", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c3d249d9ffb2ddb0078fd5a51b187f3a9508976"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd22e87afc9082522bc7b52e32d25d43c64594e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd22e87afc9082522bc7b52e32d25d43c64594e6", "html_url": "https://github.com/rust-lang/rust/commit/fd22e87afc9082522bc7b52e32d25d43c64594e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd22e87afc9082522bc7b52e32d25d43c64594e6/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c69266c0697b0c0b34abea62cba1a1d3c59c90c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c69266c0697b0c0b34abea62cba1a1d3c59c90c", "html_url": "https://github.com/rust-lang/rust/commit/2c69266c0697b0c0b34abea62cba1a1d3c59c90c"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "e116f650c8d14748a7bfdecc89850eda040ae419", "filename": "compiler/rustc_middle/src/ty/flags.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd22e87afc9082522bc7b52e32d25d43c64594e6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd22e87afc9082522bc7b52e32d25d43c64594e6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fflags.rs?ref=fd22e87afc9082522bc7b52e32d25d43c64594e6", "patch": "@@ -160,9 +160,7 @@ impl FlagComputation {\n                     match predicate {\n                         ty::ExistentialPredicate::Trait(tr) => computation.add_substs(tr.substs),\n                         ty::ExistentialPredicate::Projection(p) => {\n-                            let mut proj_computation = FlagComputation::new();\n-                            proj_computation.add_existential_projection(&p);\n-                            self.add_bound_computation(proj_computation);\n+                            computation.add_existential_projection(&p);\n                         }\n                         ty::ExistentialPredicate::AutoTrait(_) => {}\n                     }"}]}