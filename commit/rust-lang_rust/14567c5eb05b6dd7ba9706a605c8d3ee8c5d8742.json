{"sha": "14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NTY3YzVlYjA1YjZkZDdiYTk3MDZhNjA1YzhkM2VlOGM1ZDg3NDI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-29T20:35:29Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-29T20:35:29Z"}, "message": "Factor vector reserve code in runtime into its own function", "tree": {"sha": "ae3128c03ec2f964e19f842f4b31784906e75136", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae3128c03ec2f964e19f842f4b31784906e75136"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742", "html_url": "https://github.com/rust-lang/rust/commit/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb4661fc5292ea364f5ee976d9112fe7edcb13ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb4661fc5292ea364f5ee976d9112fe7edcb13ca", "html_url": "https://github.com/rust-lang/rust/commit/eb4661fc5292ea364f5ee976d9112fe7edcb13ca"}], "stats": {"total": 34, "additions": 13, "deletions": 21}, "files": [{"sha": "049fe71384e29d91f12a22f7ec9981594ccb3879", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742", "patch": "@@ -225,13 +225,7 @@ str_from_vec(rust_task *task, rust_vec **vp)\n extern \"C\" CDECL void\n vec_reserve_shared(rust_task* task, type_desc* ty, rust_vec** vp,\n                     size_t n_elts) {\n-    size_t new_sz = n_elts * ty->size;\n-    if (new_sz > (*vp)->alloc) {\n-        size_t new_alloc = next_power_of_two(new_sz);\n-        *vp = (rust_vec*)task->kernel->realloc(*vp, new_alloc +\n-                                                sizeof(rust_vec));\n-        (*vp)->alloc = new_alloc;\n-    }\n+    reserve_vec(task, vp, n_elts * ty->size);\n }\n \n /**"}, {"sha": "9f453d4904631e2304fc7a9fc88cd49abf704715", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742", "patch": "@@ -347,28 +347,17 @@ upcall_get_type_desc(rust_task *task,\n extern \"C\" CDECL void\n upcall_vec_grow(rust_task* task, rust_vec** vp, size_t new_sz) {\n     LOG_UPCALL_ENTRY(task);\n-    // FIXME factor this into a utility function\n-    if (new_sz > (*vp)->alloc) {\n-        size_t new_alloc = next_power_of_two(new_sz);\n-        *vp = (rust_vec*)task->kernel->realloc(*vp, new_alloc +\n-                                                sizeof(rust_vec));\n-        (*vp)->alloc = new_alloc;\n-    }\n+    reserve_vec(task, vp, new_sz);\n     (*vp)->fill = new_sz;\n }\n \n extern \"C\" CDECL void\n upcall_vec_push(rust_task* task, rust_vec** vp, type_desc* elt_ty,\n                  void* elt) {\n     LOG_UPCALL_ENTRY(task);\n+    size_t new_sz = (*vp)->fill + elt_ty->size;\n+    reserve_vec(task, vp, new_sz);\n     rust_vec* v = *vp;\n-    size_t new_sz = v->fill + elt_ty->size;\n-    if (new_sz > v->alloc) {\n-        size_t new_alloc = next_power_of_two(new_sz);\n-        *vp = v = (rust_vec*)task->kernel->realloc(v, new_alloc +\n-                                                    sizeof(rust_vec));\n-        v->alloc = new_alloc;\n-    }\n     copy_elements(task, elt_ty, &v->data[0] + v->fill, elt, elt_ty->size);\n     v->fill += elt_ty->size;\n }"}, {"sha": "7118572393fed0f21d2a52eeb0710c1d42d590a0", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=14567c5eb05b6dd7ba9706a605c8d3ee8c5d8742", "patch": "@@ -209,6 +209,15 @@ inline size_t vec_size(size_t elems) {\n     return sizeof(rust_vec) + sizeof(T) * elems;\n }\n \n+inline void reserve_vec(rust_task* task, rust_vec** vpp, size_t size) {\n+    if (size > (*vpp)->alloc) {\n+        size_t new_alloc = next_power_of_two(size);\n+        *vpp = (rust_vec*)task->kernel->realloc(*vpp, new_alloc +\n+                                                sizeof(rust_vec));\n+        (*vpp)->alloc = new_alloc;\n+    }\n+}\n+\n //\n // Local Variables:\n // mode: C++"}]}