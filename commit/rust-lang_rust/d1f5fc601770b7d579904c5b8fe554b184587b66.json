{"sha": "d1f5fc601770b7d579904c5b8fe554b184587b66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZjVmYzYwMTc3MGI3ZDU3OTkwNGM1YjhmZTU1NGIxODQ1ODdiNjY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-22T16:14:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-22T16:14:43Z"}, "message": "Rollup merge of #84413 - CDirkx:args_inner_debug, r=m-ou-se\n\nRemove `sys::args::Args::inner_debug` and use `Debug` instead\n\nThis removes the method `sys::args::Args::inner_debug` on all platforms and implements `Debug` for `Args` instead.\n\nI believe this creates a more natural API for the different platforms under `sys`: export a type `Args: Debug + Iterator + ...` vs. `Args: Iterator + ...` and with a method `inner_debug`.", "tree": {"sha": "8d0cb469d4753bfb20fc770558d0d38c9359d30e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d0cb469d4753bfb20fc770558d0d38c9359d30e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1f5fc601770b7d579904c5b8fe554b184587b66", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJggaDzCRBK7hj4Ov3rIwAABrMIAGb4EqKZtPRwzJgTt7PsYYZf\n1PHGKIsFHyUTvem8AuridKDOc10jtuwdhOd3WipyeF17Jvj0wK9JOuGsKTvVl7SI\n7XNPL2aMvAZk0s/kql4CXKQivHi1cuYb57goFlG70TNee7Tt0+VRFqzlpQlMkLf0\nTeMy7UQTuFZJjo2jefJMB6tj1cVlf27gMBp6wZ2P8uvaWVmq0dKWp447QEBRqrC8\nbC9SHV/f3HeYLo9uASuvEIwQ0rFcGQ5hDyE+e0/bgWP+Cd0nv5T7UpneR5qkK4rs\nQoN4XsihxXhMgTUyTcOscS5wGTOrkMp+tX+kzqo6HHPq0C4m2aqzu1w9gRKtcpE=\n=P2nj\n-----END PGP SIGNATURE-----\n", "payload": "tree 8d0cb469d4753bfb20fc770558d0d38c9359d30e\nparent f180c1e05de9729bd34716418e6adce6e9f649f1\nparent 1a6de8450e495f9027c174d22a041112344a9e51\nauthor Dylan DPC <dylan.dpc@gmail.com> 1619108083 +0200\ncommitter GitHub <noreply@github.com> 1619108083 +0200\n\nRollup merge of #84413 - CDirkx:args_inner_debug, r=m-ou-se\n\nRemove `sys::args::Args::inner_debug` and use `Debug` instead\n\nThis removes the method `sys::args::Args::inner_debug` on all platforms and implements `Debug` for `Args` instead.\n\nI believe this creates a more natural API for the different platforms under `sys`: export a type `Args: Debug + Iterator + ...` vs. `Args: Iterator + ...` and with a method `inner_debug`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1f5fc601770b7d579904c5b8fe554b184587b66", "html_url": "https://github.com/rust-lang/rust/commit/d1f5fc601770b7d579904c5b8fe554b184587b66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1f5fc601770b7d579904c5b8fe554b184587b66/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f180c1e05de9729bd34716418e6adce6e9f649f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f180c1e05de9729bd34716418e6adce6e9f649f1", "html_url": "https://github.com/rust-lang/rust/commit/f180c1e05de9729bd34716418e6adce6e9f649f1"}, {"sha": "1a6de8450e495f9027c174d22a041112344a9e51", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6de8450e495f9027c174d22a041112344a9e51", "html_url": "https://github.com/rust-lang/rust/commit/1a6de8450e495f9027c174d22a041112344a9e51"}], "stats": {"total": 59, "additions": 27, "deletions": 32}, "files": [{"sha": "5fa092af1da020a2055865407587199d5e1651a7", "filename": "library/std/src/env.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=d1f5fc601770b7d579904c5b8fe554b184587b66", "patch": "@@ -799,7 +799,7 @@ impl DoubleEndedIterator for Args {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Args {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"Args\").field(\"inner\", &self.inner.inner.inner_debug()).finish()\n+        f.debug_struct(\"Args\").field(\"inner\", &self.inner.inner).finish()\n     }\n }\n \n@@ -840,7 +840,7 @@ impl DoubleEndedIterator for ArgsOs {\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for ArgsOs {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"ArgsOs\").field(\"inner\", &self.inner.inner_debug()).finish()\n+        f.debug_struct(\"ArgsOs\").field(\"inner\", &self.inner).finish()\n     }\n }\n "}, {"sha": "4794f89a5aee327da89f538ce3d5bb4634379e83", "filename": "library/std/src/sys/hermit/args.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fargs.rs?ref=d1f5fc601770b7d579904c5b8fe554b184587b66", "patch": "@@ -1,4 +1,5 @@\n use crate::ffi::OsString;\n+use crate::fmt;\n use crate::marker::PhantomData;\n use crate::vec;\n \n@@ -22,9 +23,9 @@ pub struct Args {\n     _dont_send_or_sync_me: PhantomData<*mut ()>,\n }\n \n-impl Args {\n-    pub fn inner_debug(&self) -> &[OsString] {\n-        self.iter.as_slice()\n+impl fmt::Debug for Args {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        self.iter.as_slice().fmt(f)\n     }\n }\n "}, {"sha": "463188ad7c0c33c347661f694373c85bd0592d42", "filename": "library/std/src/sys/sgx/args.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fargs.rs?ref=d1f5fc601770b7d579904c5b8fe554b184587b66", "patch": "@@ -1,5 +1,6 @@\n use super::abi::usercalls::{alloc, raw::ByteBuffer};\n use crate::ffi::OsString;\n+use crate::fmt;\n use crate::slice;\n use crate::sync::atomic::{AtomicUsize, Ordering};\n use crate::sys::os_str::Buf;\n@@ -31,9 +32,9 @@ pub fn args() -> Args {\n \n pub struct Args(slice::Iter<'static, OsString>);\n \n-impl Args {\n-    pub fn inner_debug(&self) -> &[OsString] {\n-        self.0.as_slice()\n+impl fmt::Debug for Args {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        self.0.as_slice().fmt(f)\n     }\n }\n "}, {"sha": "cba0627e93a8504823e10c6fda1e7b1b18ff8ea7", "filename": "library/std/src/sys/unix/args.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fargs.rs?ref=d1f5fc601770b7d579904c5b8fe554b184587b66", "patch": "@@ -6,6 +6,7 @@\n #![allow(dead_code)] // runtime init functions not used during testing\n \n use crate::ffi::OsString;\n+use crate::fmt;\n use crate::marker::PhantomData;\n use crate::vec;\n \n@@ -29,9 +30,9 @@ pub struct Args {\n     _dont_send_or_sync_me: PhantomData<*mut ()>,\n }\n \n-impl Args {\n-    pub fn inner_debug(&self) -> &[OsString] {\n-        self.iter.as_slice()\n+impl fmt::Debug for Args {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        self.iter.as_slice().fmt(f)\n     }\n }\n "}, {"sha": "360bb65af69535e234a3a15c526ce58fa7f65d4d", "filename": "library/std/src/sys/unsupported/args.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fargs.rs?ref=d1f5fc601770b7d579904c5b8fe554b184587b66", "patch": "@@ -9,9 +9,9 @@ pub fn args() -> Args {\n     Args {}\n }\n \n-impl Args {\n-    pub fn inner_debug(&self) -> &[OsString] {\n-        &[]\n+impl fmt::Debug for Args {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_list().finish()\n     }\n }\n "}, {"sha": "86405dede4277f609a92228e7a7a1bf9fe70f958", "filename": "library/std/src/sys/wasi/args.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fargs.rs?ref=d1f5fc601770b7d579904c5b8fe554b184587b66", "patch": "@@ -1,6 +1,7 @@\n #![deny(unsafe_op_in_unsafe_fn)]\n \n use crate::ffi::{CStr, OsStr, OsString};\n+use crate::fmt;\n use crate::marker::PhantomData;\n use crate::os::wasi::ffi::OsStrExt;\n use crate::vec;\n@@ -38,9 +39,9 @@ fn maybe_args() -> Option<Vec<OsString>> {\n     }\n }\n \n-impl Args {\n-    pub fn inner_debug(&self) -> &[OsString] {\n-        self.iter.as_slice()\n+impl fmt::Debug for Args {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        self.iter.as_slice().fmt(f)\n     }\n }\n "}, {"sha": "99d300b53b3b91b56aa28412f8ad99364e1980cd", "filename": "library/std/src/sys/wasm/args.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fargs.rs?ref=d1f5fc601770b7d579904c5b8fe554b184587b66", "patch": "@@ -1,4 +1,5 @@\n use crate::ffi::OsString;\n+use crate::fmt;\n use crate::marker::PhantomData;\n use crate::vec;\n \n@@ -17,9 +18,9 @@ pub struct Args {\n     _dont_send_or_sync_me: PhantomData<*mut ()>,\n }\n \n-impl Args {\n-    pub fn inner_debug(&self) -> &[OsString] {\n-        self.iter.as_slice()\n+impl fmt::Debug for Args {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        self.iter.as_slice().fmt(f)\n     }\n }\n "}, {"sha": "31197e4accc6d13730dea0e82b93ef9e18b993ad", "filename": "library/std/src/sys/windows/args.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f5fc601770b7d579904c5b8fe554b184587b66/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fargs.rs?ref=d1f5fc601770b7d579904c5b8fe554b184587b66", "patch": "@@ -164,19 +164,9 @@ pub struct Args {\n     parsed_args_list: vec::IntoIter<OsString>,\n }\n \n-pub struct ArgsInnerDebug<'a> {\n-    args: &'a Args,\n-}\n-\n-impl<'a> fmt::Debug for ArgsInnerDebug<'a> {\n+impl fmt::Debug for Args {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        self.args.parsed_args_list.as_slice().fmt(f)\n-    }\n-}\n-\n-impl Args {\n-    pub fn inner_debug(&self) -> ArgsInnerDebug<'_> {\n-        ArgsInnerDebug { args: self }\n+        self.parsed_args_list.as_slice().fmt(f)\n     }\n }\n "}]}