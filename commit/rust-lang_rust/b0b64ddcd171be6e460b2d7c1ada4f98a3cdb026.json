{"sha": "b0b64ddcd171be6e460b2d7c1ada4f98a3cdb026", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYjY0ZGRjZDE3MWJlNmU0NjBiMmQ3YzFhZGE0Zjk4YTNjZGIwMjY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2019-07-09T14:54:19Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2019-07-09T14:54:19Z"}, "message": "Added comment explaining purpose of `search_for_adt_without_structural_match`.", "tree": {"sha": "e99f1c4e84f78e31a5c872eca8eefe5d8c5ef6a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e99f1c4e84f78e31a5c872eca8eefe5d8c5ef6a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0b64ddcd171be6e460b2d7c1ada4f98a3cdb026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0b64ddcd171be6e460b2d7c1ada4f98a3cdb026", "html_url": "https://github.com/rust-lang/rust/commit/b0b64ddcd171be6e460b2d7c1ada4f98a3cdb026", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0b64ddcd171be6e460b2d7c1ada4f98a3cdb026/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02af3ca5c42f35eeceb0761180193a6abb97c0ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/02af3ca5c42f35eeceb0761180193a6abb97c0ad", "html_url": "https://github.com/rust-lang/rust/commit/02af3ca5c42f35eeceb0761180193a6abb97c0ad"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "aea5016ab34f7f62c2fe4574d4e1b43042939b3b", "filename": "src/librustc_mir/hair/pattern/mod.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b0b64ddcd171be6e460b2d7c1ada4f98a3cdb026/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0b64ddcd171be6e460b2d7c1ada4f98a3cdb026/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs?ref=b0b64ddcd171be6e460b2d7c1ada4f98a3cdb026", "patch": "@@ -1145,6 +1145,30 @@ impl<'a, 'tcx> PatternContext<'a, 'tcx> {\n     }\n }\n \n+/// This method traverses the structure of `ty`, trying to find an\n+/// instance of an ADT (i.e. struct or enum) that was declared without\n+/// the `#[structural_match]` attribute.\n+///\n+/// The \"structure of a type\" includes all components that would be\n+/// considered when doing a pattern match on a constant of that\n+/// type.\n+///\n+///  * This means this method descends into fields of structs/enums,\n+///    and also descends into the inner type `T` of `&T` and `&mut T`\n+///\n+///  * The traversal doesn't dereference unsafe pointers (`*const T`,\n+///    `*mut T`), and it does not visit the type arguments of an\n+///    instantiated generic like `PhantomData<T>`.\n+///\n+/// The reason we do this search is Rust currently require all ADT's\n+/// reachable from a constant's type to be annotated with\n+/// `#[structural_match]`, an attribute which essentially says that\n+/// the implementation of `PartialEq::eq` behaves *equivalently* to a\n+/// comparison against the unfolded structure.\n+///\n+/// For more background on why Rust has this requirement, and issues\n+/// that arose when the requirement was not enforced completely, see\n+/// Rust RFC 1445, rust-lang/rust#61188, and rust-lang/rust#62307.\n fn search_for_adt_without_structural_match<'tcx>(tcx: TyCtxt<'tcx>,\n                                                  ty: Ty<'tcx>)\n                                                  -> Option<&'tcx AdtDef>"}]}