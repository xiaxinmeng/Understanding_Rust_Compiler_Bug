{"sha": "fdf5322169e85d9c5caaff6359d71f182afa202b", "node_id": "C_kwDOAAsO6NoAKGZkZjUzMjIxNjllODVkOWM1Y2FhZmY2MzU5ZDcxZjE4MmFmYTIwMmI", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-11-29T12:42:16Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-11-29T13:19:50Z"}, "message": "Fix tools", "tree": {"sha": "27d4a240d2a2c1be14e6a65d74da51eb78bde8fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27d4a240d2a2c1be14e6a65d74da51eb78bde8fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdf5322169e85d9c5caaff6359d71f182afa202b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmGk03YACgkQbQF6ltjm\nwvnkjA//WQI3Mr4PR8HcRycW1BjsyKqeGTtnoOTaV83Ctx0k7NWWIJIB7gCWtaz3\nD/YzI699Wjk4tYCQZicCCePkdZidecuprL/t6gkGVYuSD0vi8d8fQJp3EDuNDahE\n9Rm3P6KQZS4++psgDFDI8EIcFcA64WL/q/vjSMKlWCMwakcF2a8qZD69fl0aCYRC\nJ30SfJnPznSzud/KFGOHSP6snG9ryJUwfjpV2pEvU5PztusZG3+7SvVdK4JM5EL2\nR6E8B3aWqvu+FwjtLKb13syeBgM3/jvOS5nMrX76JOdztk1b/UGRYyxY6Vk9FYII\ntcU5Ii83btMrEVt3yhecz3GH/yqd3Jzx8SSWds68c6eOFiDw0CZAxByBFRwJISnV\nf9BSiKmu2JlV5tZvJ1bcBTGgRenweaSAOX+GEWUG29QX6J97vypmOygNJ/QwvN1l\n7yNxLUeQvnYP5HqK2iHUyP+pMERn01qbZW9pHGxUAOpD27buGusIWANGerD47cgc\nXOfxs2meCh7X8571JTMjosHD+rdi6Ql3wFqPJ6Kvz6PnxTkis4EqcSDMVokjRq0J\nAmMNKjbnKP0iJDv78kcBttUOzQZ4PPQebbq1HQVvldSSudQ0UttDw+7tFHC9fJzL\nQqDta5LltCrgaXkCdiyP99bTSANzM1JvsLbQHo8rL8YSEASABXA=\n=mroE\n-----END PGP SIGNATURE-----", "payload": "tree 27d4a240d2a2c1be14e6a65d74da51eb78bde8fd\nparent f394bb57bb800be024e95e624d96bc698e04dde3\nauthor Deadbeef <ent3rm4n@gmail.com> 1638189736 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1638191990 +0800\n\nFix tools\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf5322169e85d9c5caaff6359d71f182afa202b", "html_url": "https://github.com/rust-lang/rust/commit/fdf5322169e85d9c5caaff6359d71f182afa202b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdf5322169e85d9c5caaff6359d71f182afa202b/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f394bb57bb800be024e95e624d96bc698e04dde3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f394bb57bb800be024e95e624d96bc698e04dde3", "html_url": "https://github.com/rust-lang/rust/commit/f394bb57bb800be024e95e624d96bc698e04dde3"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "815f4824bc134f8dfbd9fd8b918298236c257fa9", "filename": "compiler/rustc_middle/src/traits/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdf5322169e85d9c5caaff6359d71f182afa202b/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf5322169e85d9c5caaff6359d71f182afa202b/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Futil.rs?ref=fdf5322169e85d9c5caaff6359d71f182afa202b", "patch": "@@ -26,9 +26,9 @@ impl<'tcx> Elaborator<'tcx> {\n             .predicates\n             .into_iter()\n             .flat_map(|(pred, _)| {\n-                pred.subst_supertrait(self.tcx, &trait_ref).to_opt_poly_trait_ref()\n+                pred.subst_supertrait(self.tcx, &trait_ref).to_opt_poly_trait_pred()\n             })\n-            .map(|t| t.value)\n+            .map(|t| t.map_bound(|pred| pred.trait_ref))\n             .filter(|supertrait_ref| self.visited.insert(*supertrait_ref));\n \n         self.stack.extend(supertrait_refs);"}, {"sha": "da4a414d7cbe1c451ef4ec7c0caa7958b74986b2", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdf5322169e85d9c5caaff6359d71f182afa202b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf5322169e85d9c5caaff6359d71f182afa202b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=fdf5322169e85d9c5caaff6359d71f182afa202b", "patch": "@@ -1257,11 +1257,11 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for ParamEnv<'tcx> {\n \n impl<'tcx> TypeFoldable<'tcx> for ParamEnv<'tcx> {\n     fn super_fold_with<F: ty::fold::TypeFolder<'tcx>>(self, folder: &mut F) -> Result<Self, F::Error> {\n-        ParamEnv::new(\n+        Ok(ParamEnv::new(\n             self.caller_bounds().fold_with(folder)?,\n             self.reveal().fold_with(folder)?,\n             self.constness().fold_with(folder)?,\n-        )\n+        ))\n     }\n \n     fn super_visit_with<V: TypeVisitor<'tcx>>(&self, visitor: &mut V) -> ControlFlow<V::BreakTy> {"}, {"sha": "7ca5cb4bd42790507031b23e964e165b9f98efda", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fdf5322169e85d9c5caaff6359d71f182afa202b/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf5322169e85d9c5caaff6359d71f182afa202b/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=fdf5322169e85d9c5caaff6359d71f182afa202b", "patch": "@@ -3,7 +3,7 @@ use rustc_hir as hir;\n use rustc_infer::infer::{InferOk, TyCtxtInferExt};\n use rustc_infer::traits;\n use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{ToPredicate, WithConstness};\n+use rustc_middle::ty::ToPredicate;\n use rustc_span::DUMMY_SP;\n \n use super::*;\n@@ -66,7 +66,8 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                             .into_iter()\n                             .chain(Some(\n                                 ty::Binder::dummy(trait_ref)\n-                                    .without_const()\n+                                    .to_poly_trait_predicate()\n+                                    .map_bound(ty::PredicateKind::Trait)\n                                     .to_predicate(infcx.tcx),\n                             ));\n                         for predicate in predicates {"}, {"sha": "a9297adb426a2767e920fb829176dc61a51bccea", "filename": "src/tools/clippy/clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdf5322169e85d9c5caaff6359d71f182afa202b/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf5322169e85d9c5caaff6359d71f182afa202b/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=fdf5322169e85d9c5caaff6359d71f182afa202b", "patch": "@@ -67,8 +67,8 @@ impl<'tcx> LateLintPass<'tcx> for FutureNotSend {\n             let mut is_future = false;\n             for &(p, _span) in preds {\n                 let p = p.subst(cx.tcx, subst);\n-                if let Some(trait_ref) = p.to_opt_poly_trait_ref() {\n-                    if Some(trait_ref.value.def_id()) == cx.tcx.lang_items().future_trait() {\n+                if let Some(trait_pred) = p.to_opt_poly_trait_pred() {\n+                    if Some(trait_pred.skip_binder().trait_ref.def_id) == cx.tcx.lang_items().future_trait() {\n                         is_future = true;\n                         break;\n                     }"}]}