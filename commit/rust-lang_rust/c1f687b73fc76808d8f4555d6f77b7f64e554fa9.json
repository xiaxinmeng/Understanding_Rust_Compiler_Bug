{"sha": "c1f687b73fc76808d8f4555d6f77b7f64e554fa9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZjY4N2I3M2ZjNzY4MDhkOGY0NTU1ZDZmNzdiN2Y2NGU1NTRmYTk=", "commit": {"author": {"name": "gentoo90", "email": "gentoo90@gmail.com", "date": "2017-06-02T13:18:00Z"}, "committer": {"name": "gentoo90", "email": "gentoo90@gmail.com", "date": "2017-06-02T13:18:00Z"}, "message": "Add GDB pretty-printer for OsString", "tree": {"sha": "86175ea36005e296752f269b6a58e9f35960bd09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86175ea36005e296752f269b6a58e9f35960bd09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1f687b73fc76808d8f4555d6f77b7f64e554fa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1f687b73fc76808d8f4555d6f77b7f64e554fa9", "html_url": "https://github.com/rust-lang/rust/commit/c1f687b73fc76808d8f4555d6f77b7f64e554fa9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1f687b73fc76808d8f4555d6f77b7f64e554fa9/comments", "author": {"login": "gentoo90", "id": 1297574, "node_id": "MDQ6VXNlcjEyOTc1NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1297574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gentoo90", "html_url": "https://github.com/gentoo90", "followers_url": "https://api.github.com/users/gentoo90/followers", "following_url": "https://api.github.com/users/gentoo90/following{/other_user}", "gists_url": "https://api.github.com/users/gentoo90/gists{/gist_id}", "starred_url": "https://api.github.com/users/gentoo90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gentoo90/subscriptions", "organizations_url": "https://api.github.com/users/gentoo90/orgs", "repos_url": "https://api.github.com/users/gentoo90/repos", "events_url": "https://api.github.com/users/gentoo90/events{/privacy}", "received_events_url": "https://api.github.com/users/gentoo90/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gentoo90", "id": 1297574, "node_id": "MDQ6VXNlcjEyOTc1NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1297574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gentoo90", "html_url": "https://github.com/gentoo90", "followers_url": "https://api.github.com/users/gentoo90/followers", "following_url": "https://api.github.com/users/gentoo90/following{/other_user}", "gists_url": "https://api.github.com/users/gentoo90/gists{/gist_id}", "starred_url": "https://api.github.com/users/gentoo90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gentoo90/subscriptions", "organizations_url": "https://api.github.com/users/gentoo90/orgs", "repos_url": "https://api.github.com/users/gentoo90/repos", "events_url": "https://api.github.com/users/gentoo90/events{/privacy}", "received_events_url": "https://api.github.com/users/gentoo90/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ef85ca0eb09acad16d2f969e69737308290309", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ef85ca0eb09acad16d2f969e69737308290309", "html_url": "https://github.com/rust-lang/rust/commit/c7ef85ca0eb09acad16d2f969e69737308290309"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "7eb008a05f61bb6ee2185e3c8d938ad362c1b56a", "filename": "src/etc/debugger_pretty_printers_common.py", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c1f687b73fc76808d8f4555d6f77b7f64e554fa9/src%2Fetc%2Fdebugger_pretty_printers_common.py", "raw_url": "https://github.com/rust-lang/rust/raw/c1f687b73fc76808d8f4555d6f77b7f64e554fa9/src%2Fetc%2Fdebugger_pretty_printers_common.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fdebugger_pretty_printers_common.py?ref=c1f687b73fc76808d8f4555d6f77b7f64e554fa9", "patch": "@@ -46,6 +46,7 @@\n TYPE_KIND_PTR               = 15\n TYPE_KIND_FIXED_SIZE_VEC    = 16\n TYPE_KIND_REGULAR_UNION     = 17\n+TYPE_KIND_OS_STRING         = 18\n \n ENCODED_ENUM_PREFIX = \"RUST$ENCODED$ENUM$\"\n ENUM_DISR_FIELD_NAME = \"RUST$ENUM$DISR\"\n@@ -64,6 +65,9 @@\n # std::String related constants\n STD_STRING_FIELD_NAMES = [\"vec\"]\n \n+# std::ffi::OsString related constants\n+OS_STRING_FIELD_NAMES = [\"inner\"]\n+\n \n class Type(object):\n     \"\"\"\n@@ -162,6 +166,11 @@ def __classify_struct(self):\n             self.__conforms_to_field_layout(STD_STRING_FIELD_NAMES)):\n             return TYPE_KIND_STD_STRING\n \n+        # OS STRING\n+        if (unqualified_type_name == \"OsString\" and\n+            self.__conforms_to_field_layout(OS_STRING_FIELD_NAMES)):\n+            return TYPE_KIND_OS_STRING\n+\n         # ENUM VARIANTS\n         if fields[0].name == ENUM_DISR_FIELD_NAME:\n             if field_count == 1:"}, {"sha": "d2bc7dd53df7e713dd1afb941ba7d6b2652606a6", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c1f687b73fc76808d8f4555d6f77b7f64e554fa9/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/c1f687b73fc76808d8f4555d6f77b7f64e554fa9/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=c1f687b73fc76808d8f4555d6f77b7f64e554fa9", "patch": "@@ -125,6 +125,9 @@ def rust_pretty_printer_lookup_function(gdb_val):\n     if type_kind == rustpp.TYPE_KIND_STD_STRING:\n         return RustStdStringPrinter(val)\n \n+    if type_kind == rustpp.TYPE_KIND_OS_STRING:\n+        return RustOsStringPrinter(val)\n+\n     if type_kind == rustpp.TYPE_KIND_TUPLE:\n         return RustStructPrinter(val,\n                                  omit_first_field = False,\n@@ -269,6 +272,21 @@ def to_string(self):\n                                                             length=length)\n \n \n+class RustOsStringPrinter(object):\n+    def __init__(self, val):\n+        self.__val = val\n+\n+    def to_string(self):\n+        buf = self.__val.get_child_at_index(0)\n+        vec = buf.get_child_at_index(0)\n+        if vec.type.get_unqualified_type_name() == \"Wtf8Buf\":\n+            vec = vec.get_child_at_index(0)\n+\n+        (length, data_ptr, cap) = rustpp.extract_length_ptr_and_cap_from_std_vec(\n+            vec)\n+        return '\"%s\"' % data_ptr.get_wrapped_value().string(length=length)\n+\n+\n class RustCStyleVariantPrinter(object):\n     def __init__(self, val):\n         assert val.type.get_dwarf_type_kind() == rustpp.DWARF_TYPE_CODE_ENUM"}, {"sha": "88a3c76b858177b955d1d347a4094ea1bb9327f2", "filename": "src/test/debuginfo/pretty-std.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c1f687b73fc76808d8f4555d6f77b7f64e554fa9/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1f687b73fc76808d8f4555d6f77b7f64e554fa9/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-std.rs?ref=c1f687b73fc76808d8f4555d6f77b7f64e554fa9", "patch": "@@ -38,8 +38,11 @@\n // gdbg-check:$6 = None\n // gdbr-check:$6 = core::option::Option::None\n \n-// gdb-command: print some_string\n-// gdbr-check:$7 = Some = {\"IAMA optional string!\"}\n+// gdbr-command: print os_string\n+// gdbr-check:$7 = \"IAMA OS string \ud83d\ude03\"\n+\n+// gdbr-command: print some_string\n+// gdbr-check:$8 = Some = {\"IAMA optional string!\"}\n \n \n // === LLDB TESTS ==================================================================================\n@@ -66,6 +69,8 @@\n \n \n #![allow(unused_variables)]\n+use std::ffi::OsString;\n+\n \n fn main() {\n \n@@ -81,6 +86,9 @@ fn main() {\n     // String\n     let string = \"IAMA string!\".to_string();\n \n+    // OsString\n+    let os_string = OsString::from(\"IAMA OS string \\u{1F603}\");\n+\n     // Option\n     let some = Some(8i16);\n     let none: Option<i64> = None;"}]}