{"sha": "97ed8083220f0924434f9c3863a78faa69035a7a", "node_id": "C_kwDOAAsO6NoAKDk3ZWQ4MDgzMjIwZjA5MjQ0MzRmOWMzODYzYTc4ZmFhNjkwMzVhN2E", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-05-12T21:13:30Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-05-12T21:14:31Z"}, "message": "remove no-op logic", "tree": {"sha": "eb6cfacf1642e9d8b2f0b9aa6ea5ae8906316894", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb6cfacf1642e9d8b2f0b9aa6ea5ae8906316894"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97ed8083220f0924434f9c3863a78faa69035a7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97ed8083220f0924434f9c3863a78faa69035a7a", "html_url": "https://github.com/rust-lang/rust/commit/97ed8083220f0924434f9c3863a78faa69035a7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97ed8083220f0924434f9c3863a78faa69035a7a/comments", "author": null, "committer": null, "parents": [{"sha": "4a59ba4d54a3ec0d8ea1e82b7eeb5c8b0162de04", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a59ba4d54a3ec0d8ea1e82b7eeb5c8b0162de04", "html_url": "https://github.com/rust-lang/rust/commit/4a59ba4d54a3ec0d8ea1e82b7eeb5c8b0162de04"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "cfd2655f35bfc01d648eee72e6475b1d13c43fc3", "filename": "compiler/rustc_mir_transform/src/deduce_param_attrs.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/97ed8083220f0924434f9c3863a78faa69035a7a/compiler%2Frustc_mir_transform%2Fsrc%2Fdeduce_param_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ed8083220f0924434f9c3863a78faa69035a7a/compiler%2Frustc_mir_transform%2Fsrc%2Fdeduce_param_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdeduce_param_attrs.rs?ref=97ed8083220f0924434f9c3863a78faa69035a7a", "patch": "@@ -29,25 +29,14 @@ impl DeduceReadOnly {\n }\n \n impl<'tcx> Visitor<'tcx> for DeduceReadOnly {\n-    fn visit_local(&mut self, local: Local, mut context: PlaceContext, _: Location) {\n+    fn visit_local(&mut self, local: Local, context: PlaceContext, _location: Location) {\n         // We're only interested in arguments.\n         if local == RETURN_PLACE || local.index() > self.mutable_args.domain_size() {\n             return;\n         }\n \n-        // Replace place contexts that are moves with copies. This is safe in all cases except\n-        // function argument position, which we already handled in `visit_terminator()` by using the\n-        // ArgumentChecker. See the comment in that method for more details.\n-        //\n-        // In the future, we might want to move this out into a separate pass, but for now let's\n-        // just do it on the fly because that's faster.\n-        if matches!(context, PlaceContext::NonMutatingUse(NonMutatingUseContext::Move)) {\n-            context = PlaceContext::NonMutatingUse(NonMutatingUseContext::Copy);\n-        }\n-\n         match context {\n-            PlaceContext::MutatingUse(..)\n-            | PlaceContext::NonMutatingUse(NonMutatingUseContext::Move) => {\n+            PlaceContext::MutatingUse(..) => {\n                 // This is a mutation, so mark it as such.\n                 self.mutable_args.insert(local.index() - 1);\n             }"}]}