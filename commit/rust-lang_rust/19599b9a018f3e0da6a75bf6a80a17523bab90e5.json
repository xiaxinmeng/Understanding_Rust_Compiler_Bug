{"sha": "19599b9a018f3e0da6a75bf6a80a17523bab90e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NTk5YjlhMDE4ZjNlMGRhNmE3NWJmNmE4MGExNzUyM2JhYjkwZTU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-01T11:00:21Z"}, "committer": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-02T01:15:31Z"}, "message": "Use block when arm exceeds max_width", "tree": {"sha": "e38c4c02c1bdbf113d1574eecced07c4e87f3a88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e38c4c02c1bdbf113d1574eecced07c4e87f3a88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19599b9a018f3e0da6a75bf6a80a17523bab90e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19599b9a018f3e0da6a75bf6a80a17523bab90e5", "html_url": "https://github.com/rust-lang/rust/commit/19599b9a018f3e0da6a75bf6a80a17523bab90e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19599b9a018f3e0da6a75bf6a80a17523bab90e5/comments", "author": null, "committer": null, "parents": [{"sha": "b4794dbd9fafc4e889dab9690addaf482a59641d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4794dbd9fafc4e889dab9690addaf482a59641d", "html_url": "https://github.com/rust-lang/rust/commit/b4794dbd9fafc4e889dab9690addaf482a59641d"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "25d9a1ed397c302dbc4fa51300aa0693b397b982", "filename": "src/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19599b9a018f3e0da6a75bf6a80a17523bab90e5/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19599b9a018f3e0da6a75bf6a80a17523bab90e5/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=19599b9a018f3e0da6a75bf6a80a17523bab90e5", "patch": "@@ -1356,7 +1356,9 @@ impl Rewrite for ast::Arm {\n             };\n \n             match rewrite {\n-                Some(ref body_str) if !body_str.contains('\\n') || !context.config.wrap_match_arms ||\n+                Some(ref body_str) if (!body_str.contains('\\n') &&\n+                                       body_str.len() <= arm_shape.width) ||\n+                                      !context.config.wrap_match_arms ||\n                                       is_block => {\n                     let block_sep = match context.config.control_brace_style {\n                         ControlBraceStyle::AlwaysNextLine if is_block => alt_block_sep.as_str(),"}, {"sha": "3ed0f89ad7cabe7afbf2394636c2d0e76ace7c59", "filename": "tests/source/match.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/19599b9a018f3e0da6a75bf6a80a17523bab90e5/tests%2Fsource%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19599b9a018f3e0da6a75bf6a80a17523bab90e5/tests%2Fsource%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch.rs?ref=19599b9a018f3e0da6a75bf6a80a17523bab90e5", "patch": "@@ -373,3 +373,10 @@ fn issue1456() {\n         },\n     })\n }\n+\n+fn issue1460() {\n+    let _ = match foo {\n+        REORDER_BUFFER_CHANGE_INTERNAL_SPEC_INSERT => \"internal_spec_insert_internal_spec_insert_internal_spec_insert\",\n+        _ => \"reorder_something\",\n+    };\n+}"}, {"sha": "2d0194f5613c3cb71b93ec2f48b3271dfc05ee78", "filename": "tests/target/match.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/19599b9a018f3e0da6a75bf6a80a17523bab90e5/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19599b9a018f3e0da6a75bf6a80a17523bab90e5/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=19599b9a018f3e0da6a75bf6a80a17523bab90e5", "patch": "@@ -389,3 +389,12 @@ fn issue1456() {\n            },\n        })\n }\n+\n+fn issue1460() {\n+    let _ = match foo {\n+        REORDER_BUFFER_CHANGE_INTERNAL_SPEC_INSERT => {\n+            \"internal_spec_insert_internal_spec_insert_internal_spec_insert\"\n+        }\n+        _ => \"reorder_something\",\n+    };\n+}"}]}