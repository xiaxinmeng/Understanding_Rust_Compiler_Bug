{"sha": "4399eff2d06f9134ff37a4dfd47204de6ebebd92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzOTllZmYyZDA2ZjkxMzRmZjM3YTRkZmQ0NzIwNGRlNmViZWJkOTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-09T10:14:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-09T10:14:26Z"}, "message": "Re-enable IDE features for incomplete impl blocs", "tree": {"sha": "d7330bf7d50a78f86339c91168ca53379e689dcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7330bf7d50a78f86339c91168ca53379e689dcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4399eff2d06f9134ff37a4dfd47204de6ebebd92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4399eff2d06f9134ff37a4dfd47204de6ebebd92", "html_url": "https://github.com/rust-lang/rust/commit/4399eff2d06f9134ff37a4dfd47204de6ebebd92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4399eff2d06f9134ff37a4dfd47204de6ebebd92/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e1ebbcc136d1bb8f120d0db2625b70a37b756f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e1ebbcc136d1bb8f120d0db2625b70a37b756f8", "html_url": "https://github.com/rust-lang/rust/commit/8e1ebbcc136d1bb8f120d0db2625b70a37b756f8"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "eaa10d99952aab29a92654d6235aa0ab8643074e", "filename": "crates/ra_hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4399eff2d06f9134ff37a4dfd47204de6ebebd92/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4399eff2d06f9134ff37a4dfd47204de6ebebd92/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=4399eff2d06f9134ff37a4dfd47204de6ebebd92", "patch": "@@ -450,8 +450,9 @@ impl Ctx {\n \n         // We cannot use `assoc_items()` here as that does not include macro calls.\n         let items = impl_def\n-            .item_list()?\n-            .items()\n+            .item_list()\n+            .into_iter()\n+            .flat_map(|it| it.items())\n             .filter_map(|item| {\n                 self.collect_inner_items(item.syntax());\n                 let assoc = self.lower_assoc_item(&item)?;"}, {"sha": "18f4488b730e36c09afbac0ce6ed4c6856096d94", "filename": "crates/ra_ide/src/completion/complete_unqualified_path.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4399eff2d06f9134ff37a4dfd47204de6ebebd92/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4399eff2d06f9134ff37a4dfd47204de6ebebd92/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs?ref=4399eff2d06f9134ff37a4dfd47204de6ebebd92", "patch": "@@ -638,4 +638,21 @@ fn f() {}\n             expect![[\"\"]],\n         )\n     }\n+\n+    #[test]\n+    fn completes_type_or_trait_in_impl_block() {\n+        check(\n+            r#\"\n+trait MyTrait {}\n+struct MyStruct {}\n+\n+impl My<|>\n+\"#,\n+            expect![[r#\"\n+                st MyStruct\n+                tt MyTrait\n+                tp Self\n+            \"#]],\n+        )\n+    }\n }"}, {"sha": "7bdda316c458dbc76091fbeb144bc12d6a39709e", "filename": "crates/ra_ide/src/completion/completion_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4399eff2d06f9134ff37a4dfd47204de6ebebd92/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4399eff2d06f9134ff37a4dfd47204de6ebebd92/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=4399eff2d06f9134ff37a4dfd47204de6ebebd92", "patch": "@@ -58,7 +58,7 @@ pub struct CompletionItem {\n     score: Option<CompletionScore>,\n }\n \n-// We use custom debug for CompletionItem to make `insta`'s diffs more readable.\n+// We use custom debug for CompletionItem to make snapshot tests more readable.\n impl fmt::Debug for CompletionItem {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         let mut s = f.debug_struct(\"CompletionItem\");"}]}