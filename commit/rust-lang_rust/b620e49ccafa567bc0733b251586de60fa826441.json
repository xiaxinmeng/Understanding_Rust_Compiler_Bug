{"sha": "b620e49ccafa567bc0733b251586de60fa826441", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MjBlNDljY2FmYTU2N2JjMDczM2IyNTE1ODZkZTYwZmE4MjY0NDE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-12T08:34:30Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-12T08:34:30Z"}, "message": "Remove dump_incremental_data", "tree": {"sha": "48ff4505327055edd7c3df1e83031f994bd0b847", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48ff4505327055edd7c3df1e83031f994bd0b847"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b620e49ccafa567bc0733b251586de60fa826441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b620e49ccafa567bc0733b251586de60fa826441", "html_url": "https://github.com/rust-lang/rust/commit/b620e49ccafa567bc0733b251586de60fa826441", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b620e49ccafa567bc0733b251586de60fa826441/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa51449af43c428fd8ddbdc8dd53a11c3741f3ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa51449af43c428fd8ddbdc8dd53a11c3741f3ec", "html_url": "https://github.com/rust-lang/rust/commit/aa51449af43c428fd8ddbdc8dd53a11c3741f3ec"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "fb5f8ce322462d3053c37f17b24c65c7b956e948", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b620e49ccafa567bc0733b251586de60fa826441/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b620e49ccafa567bc0733b251586de60fa826441/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=b620e49ccafa567bc0733b251586de60fa826441", "patch": "@@ -278,9 +278,6 @@ impl CodegenBackend for LlvmCodegenBackend {\n             .downcast::<rustc_codegen_ssa::back::write::OngoingCodegen<LlvmCodegenBackend>>()\n             .expect(\"Expected LlvmCodegenBackend's OngoingCodegen, found Box<Any>\")\n             .join(sess);\n-        if sess.opts.debugging_opts.incremental_info {\n-            rustc_codegen_ssa::back::write::dump_incremental_data(&codegen_results);\n-        }\n \n         sess.time(\"llvm_dump_timing_file\", || {\n             if sess.opts.debugging_opts.llvm_time_trace {"}, {"sha": "2ff78898fb26865bf3fd79ce1497434121a6ecc8", "filename": "compiler/rustc_codegen_ssa/src/back/write.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b620e49ccafa567bc0733b251586de60fa826441/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b620e49ccafa567bc0733b251586de60fa826441/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs?ref=b620e49ccafa567bc0733b251586de60fa826441", "patch": "@@ -655,15 +655,6 @@ fn produce_final_output_artifacts(\n     // These are used in linking steps and will be cleaned up afterward.\n }\n \n-pub fn dump_incremental_data(_codegen_results: &CodegenResults) {\n-    // FIXME(mw): This does not work at the moment because the situation has\n-    //            become more complicated due to incremental LTO. Now a CGU\n-    //            can have more than two caching states.\n-    // println!(\"[incremental] Re-using {} out of {} modules\",\n-    //           codegen_results.modules.iter().filter(|m| m.pre_existing).count(),\n-    //           codegen_results.modules.len());\n-}\n-\n pub enum WorkItem<B: WriteBackendMethods> {\n     /// Optimize a newly codegened, totally unoptimized module.\n     Optimize(ModuleCodegen<B::Module>),"}]}