{"sha": "0b64110b10c9ef5f971aab4b05975dee922a7bc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiNjQxMTBiMTBjOWVmNWY5NzFhYWI0YjA1OTc1ZGVlOTIyYTdiYzM=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-25T21:03:10Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-25T23:41:10Z"}, "message": "Resolve inference variables before trying to remove overloaded indexing\n\nFixes #79152\n\nThis code was already set up to handle indexing an array. However, it\nappears that we never end up with an inference variable for the slice\ncase, so the missing call to `resolve_vars_if_possible` had no effect\nuntil now.", "tree": {"sha": "6a0333a6e221f04eff0a4b73009329c7e35de2ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a0333a6e221f04eff0a4b73009329c7e35de2ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b64110b10c9ef5f971aab4b05975dee922a7bc3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl++65YACgkQtAh+UQ6Y\nsWQbEhAAlXpH+ccJyClmds+l2i175FZNI6RbFkjqUlp7D6s8VXdVM1jJxFGzXpsc\nRpz5NWtFp4/gzYwL7aDtuxLf+Cz4mJzgIFkHby7kN8bInYufI3NbiXUO0yYXNNtW\nEZMu4VSsL1mmXriznqWDAXYas5/KTGmcyucnhai1gTyB61tWlld8QHREtQ1Z0B0c\nmqRgR2PNJEBensrFeq6KevjW6S7sM5hofN9VX+g7/HJrIfQtm2keTXRUUoKU2k9R\nrRHrN8Lh7qL1GsMcc6EdqzzLam6UKntMws6K7sh4SDHNrqtDn/YVkyqgjAIiZZz4\nKmkGBT/U8VJAZzK7RB5HRVqR65e7/7tsE61bLxx6KX8YETSpUDTsavrzDkrDGytZ\nDfP77kdJnfff91JJFyJ4/oWjEFu3wCLJvlrdo8Bpc+iLnFfA3Q708gtcOGybax03\nXGqqY0xZ6j8d597aq+cfmYSDFqvNN0/G059qEAB/Yy+22SbP+ByyQio6Q5JrMUW1\nQhexZWon6oaDMr/sshCObzSFDv2ZmVsbaBYPFWBdVDBABhoWwL0SfFTOxusp/Afy\n0/Z7LcskZ+H3kIjQqjFJzUuEGowt4/IfD9uFrY8FMvQd74b+4kt/t9ysiskgIjUS\nvwD2XEtTXW4YdB9I7b8qGStAgB7hCKDkX0yuo+Ixo0j/g2ycO2A=\n=Aijz\n-----END PGP SIGNATURE-----", "payload": "tree 6a0333a6e221f04eff0a4b73009329c7e35de2ce\nparent db79d2f63780613e700cb58b4339c48287555ae0\nauthor Aaron Hill <aa1ronham@gmail.com> 1606338190 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1606347670 -0500\n\nResolve inference variables before trying to remove overloaded indexing\n\nFixes #79152\n\nThis code was already set up to handle indexing an array. However, it\nappears that we never end up with an inference variable for the slice\ncase, so the missing call to `resolve_vars_if_possible` had no effect\nuntil now.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b64110b10c9ef5f971aab4b05975dee922a7bc3", "html_url": "https://github.com/rust-lang/rust/commit/0b64110b10c9ef5f971aab4b05975dee922a7bc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b64110b10c9ef5f971aab4b05975dee922a7bc3/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db79d2f63780613e700cb58b4339c48287555ae0", "url": "https://api.github.com/repos/rust-lang/rust/commits/db79d2f63780613e700cb58b4339c48287555ae0", "html_url": "https://github.com/rust-lang/rust/commit/db79d2f63780613e700cb58b4339c48287555ae0"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "d1ada123c0d5adcef36676c7b1bbeefbe4ad7386", "filename": "compiler/rustc_typeck/src/check/writeback.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b64110b10c9ef5f971aab4b05975dee922a7bc3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b64110b10c9ef5f971aab4b05975dee922a7bc3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs?ref=0b64110b10c9ef5f971aab4b05975dee922a7bc3", "patch": "@@ -194,7 +194,9 @@ impl<'cx, 'tcx> WritebackCx<'cx, 'tcx> {\n             let mut typeck_results = self.fcx.typeck_results.borrow_mut();\n \n             // All valid indexing looks like this; might encounter non-valid indexes at this point.\n-            let base_ty = typeck_results.expr_ty_adjusted_opt(&base).map(|t| t.kind());\n+            let base_ty = typeck_results\n+                .expr_ty_adjusted_opt(&base)\n+                .map(|t| self.fcx.resolve_vars_if_possible(t).kind());\n             if base_ty.is_none() {\n                 // When encountering `return [0][0]` outside of a `fn` body we can encounter a base\n                 // that isn't in the type table. We assume more relevant errors have already been"}, {"sha": "95518e1bbdbd9354d8fa56c58b1f8caa1a2f1f7c", "filename": "src/test/ui/consts/issue-79152-const-array-index.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0b64110b10c9ef5f971aab4b05975dee922a7bc3/src%2Ftest%2Fui%2Fconsts%2Fissue-79152-const-array-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b64110b10c9ef5f971aab4b05975dee922a7bc3/src%2Ftest%2Fui%2Fconsts%2Fissue-79152-const-array-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-79152-const-array-index.rs?ref=0b64110b10c9ef5f971aab4b05975dee922a7bc3", "patch": "@@ -0,0 +1,11 @@\n+// check-pass\n+// Regression test for issue #79152\n+//\n+// Tests that we can index an array in a const function\n+\n+const fn foo() {\n+    let mut array = [[0; 1]; 1];\n+    array[0][0] = 1;\n+}\n+\n+fn main() {}"}]}