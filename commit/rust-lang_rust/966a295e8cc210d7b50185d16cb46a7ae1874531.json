{"sha": "966a295e8cc210d7b50185d16cb46a7ae1874531", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NmEyOTVlOGNjMjEwZDdiNTAxODVkMTZjYjQ2YTdhZTE4NzQ1MzE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-04-18T15:49:03Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-04-25T11:59:09Z"}, "message": "Add a test for `Span::resolved_at` and `Span::located_at`", "tree": {"sha": "514f8eda0bc9511e6fcfa2acfbcd44086179d7a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/514f8eda0bc9511e6fcfa2acfbcd44086179d7a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/966a295e8cc210d7b50185d16cb46a7ae1874531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/966a295e8cc210d7b50185d16cb46a7ae1874531", "html_url": "https://github.com/rust-lang/rust/commit/966a295e8cc210d7b50185d16cb46a7ae1874531", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/966a295e8cc210d7b50185d16cb46a7ae1874531/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df99de522a17e7a0c4b75dfdad596862081127d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/df99de522a17e7a0c4b75dfdad596862081127d5", "html_url": "https://github.com/rust-lang/rust/commit/df99de522a17e7a0c4b75dfdad596862081127d5"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "9416c133e566106d413bbcc038bd644266711138", "filename": "src/test/ui/proc-macro/auxiliary/resolved-located-at.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/966a295e8cc210d7b50185d16cb46a7ae1874531/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fresolved-located-at.rs", "raw_url": "https://github.com/rust-lang/rust/raw/966a295e8cc210d7b50185d16cb46a7ae1874531/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fresolved-located-at.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fresolved-located-at.rs?ref=966a295e8cc210d7b50185d16cb46a7ae1874531", "patch": "@@ -0,0 +1,32 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![feature(proc_macro_def_site)]\n+#![feature(proc_macro_diagnostic)]\n+#![feature(proc_macro_hygiene)]\n+#![feature(proc_macro_quote)]\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+use proc_macro::*;\n+\n+#[proc_macro]\n+pub fn resolve_located_at(input: TokenStream) -> TokenStream {\n+    match &*input.into_iter().collect::<Vec<_>>() {\n+        [a, b, ..] => {\n+            // The error is reported at input `a`.\n+            let mut diag = Diagnostic::new(Level::Error, \"expected error\");\n+            diag.set_spans(Span::def_site().located_at(a.span()));\n+            diag.emit();\n+\n+            // Resolves to `struct S;` at def site, but the error is reported at input `b`.\n+            let s = TokenTree::Ident(Ident::new(\"S\", b.span().resolved_at(Span::def_site())));\n+            quote!({\n+                struct S;\n+\n+                $s\n+            })\n+        }\n+        _ => panic!(\"unexpected input\"),\n+    }\n+}"}, {"sha": "9976284e222e6de46bb17bfe527e7a30822ce0e4", "filename": "src/test/ui/proc-macro/resolved-located-at.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/966a295e8cc210d7b50185d16cb46a7ae1874531/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.rs", "raw_url": "https://github.com/rust-lang/rust/raw/966a295e8cc210d7b50185d16cb46a7ae1874531/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.rs?ref=966a295e8cc210d7b50185d16cb46a7ae1874531", "patch": "@@ -0,0 +1,12 @@\n+// aux-build:resolved-located-at.rs\n+\n+#![feature(proc_macro_hygiene)]\n+\n+#[macro_use]\n+extern crate resolved_located_at;\n+\n+fn main() {\n+    resolve_located_at!(a b)\n+    //~^ ERROR expected error\n+    //~| ERROR mismatched types\n+}"}, {"sha": "0df7ced27a7776e7a6425d36c14e232e2585a6c8", "filename": "src/test/ui/proc-macro/resolved-located-at.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/966a295e8cc210d7b50185d16cb46a7ae1874531/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/966a295e8cc210d7b50185d16cb46a7ae1874531/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.stderr?ref=966a295e8cc210d7b50185d16cb46a7ae1874531", "patch": "@@ -0,0 +1,21 @@\n+error: expected error\n+  --> $DIR/resolved-located-at.rs:9:25\n+   |\n+LL |     resolve_located_at!(a b)\n+   |                         ^\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0308]: mismatched types\n+  --> $DIR/resolved-located-at.rs:9:27\n+   |\n+LL | fn main() {\n+   |           - expected `()` because of default return type\n+LL |     resolve_located_at!(a b)\n+   |                           ^ expected `()`, found struct `main::S`\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}