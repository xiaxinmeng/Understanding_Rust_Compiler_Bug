{"sha": "05a88aabc1bca6d06f5827bae9e8f448f5d39f28", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YTg4YWFiYzFiY2E2ZDA2ZjU4MjdiYWU5ZThmNDQ4ZjVkMzlmMjg=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-01-13T11:17:41Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-01-13T13:27:30Z"}, "message": "ExitStatusExt: Fix build on Fuchsia\n\nThis is not particularly pretty but the current situation is a mess\nand I don't think I'm making it significantly worse.\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "d2a88cb3a56069f5f43fa1fee379fb2e61aeef7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a88cb3a56069f5f43fa1fee379fb2e61aeef7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05a88aabc1bca6d06f5827bae9e8f448f5d39f28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05a88aabc1bca6d06f5827bae9e8f448f5d39f28", "html_url": "https://github.com/rust-lang/rust/commit/05a88aabc1bca6d06f5827bae9e8f448f5d39f28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05a88aabc1bca6d06f5827bae9e8f448f5d39f28/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efddf5949f36d68ff28abddb2c297c934d5b8eb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/efddf5949f36d68ff28abddb2c297c934d5b8eb5", "html_url": "https://github.com/rust-lang/rust/commit/efddf5949f36d68ff28abddb2c297c934d5b8eb5"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "3102661b83dad4771c2e2340d56c40997bb336a0", "filename": "library/std/src/sys/unix/process/process_fuchsia.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/05a88aabc1bca6d06f5827bae9e8f448f5d39f28/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05a88aabc1bca6d06f5827bae9e8f448f5d39f28/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs?ref=05a88aabc1bca6d06f5827bae9e8f448f5d39f28", "patch": "@@ -245,6 +245,50 @@ impl ExitStatus {\n     pub fn signal(&self) -> Option<i32> {\n         None\n     }\n+\n+    // FIXME: The actually-Unix implementation in process_unix.rs uses WSTOPSIG, WCOREDUMP et al.\n+    // I infer from the implementation of `success`, `code` and `signal` above that these are not\n+    // available on Fuchsia.\n+    //\n+    // It does not appear that Fuchsia is Unix-like enough to implement ExitStatus (or indeed many\n+    // other things from std::os::unix) properly.  This veneer is always going to be a bdoge.  So\n+    // while I don't know if these implementations are actually correct, I think they will do for\n+    // now at least.\n+    pub fn core_dumped(&self) -> bool {\n+        false\n+    }\n+    pub fn stopped_signal(&self) -> Option<i32> {\n+        None\n+    }\n+    pub fn continued(&self) -> bool {\n+        false\n+    }\n+\n+    pub fn into_raw(&self) -> c_int {\n+        // We don't know what someone who calls into_raw() will do with this value, but it should\n+        // have the conventional Unix representation.  Despite the fact that this is not\n+        // standardised in SuS or POSIX, all Unix systems encode the signal and exit status the\n+        // same way.  (Ie the WIFEXITED, WEXITSTATUS etc. macros have identical behaviour on every\n+        // Unix.)\n+        //\n+        // The caller of `std::os::unix::into_raw` is probably wanting a Unix exit status, and may\n+        // do their own shifting and masking, or even pass the status to another computer running a\n+        // different Unix variant.\n+        //\n+        // The other view would be to say that the caller on Fuchsia ought to know that `into_raw`\n+        // will give a raw Fuchsia status (whatever that is - I don't know, personally).  That is\n+        // not possible here becaause we must return a c_int because that's what Unix (including\n+        // SuS and POSIX) say a wait status is, but Fuchsia apparently uses a u64, so it won't\n+        // necessarily fit.\n+        //\n+        // It seems to me that that the right answer would be to provide std::os::fuchsia with its\n+        // own ExitStatusExt, rather that trying to provide a not very convincing imitation of\n+        // Unix.  Ie, std::os::unix::process:ExitStatusExt ought not to exist on Fuchsia.  But\n+        // fixing this up that is beyond the scope of my efforts now.\n+        let exit_status_as_if_unix: u8 = self.0.try_into().expect(\"Fuchsia process return code bigger than 8 bits, but std::os::unix::ExitStatusExt::into_raw() was called to try to covert the value into a traditional Unix-style wait status, which cannot represent values greater than 255.\");\n+        let wait_status_as_if_unix = (exit_status_as_if_unix as c_int) << 8;\n+        wait_status_as_if_unix\n+    }\n }\n \n /// Converts a raw `c_int` to a type-safe `ExitStatus` by wrapping it without copying."}]}