{"sha": "8bddc783e0bf4281a47f30002f6e7f4de1e21ea5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZGRjNzgzZTBiZjQyODFhNDdmMzAwMDJmNmU3ZjRkZTFlMjFlYTU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-01-19T11:00:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-01-26T10:59:57Z"}, "message": "Update gimli", "tree": {"sha": "81d544a148aded09109f43f8e3a15a4714542696", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81d544a148aded09109f43f8e3a15a4714542696"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5", "html_url": "https://github.com/rust-lang/rust/commit/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d61ceeca7c028f4abbeb31976587d2ac32198496", "url": "https://api.github.com/repos/rust-lang/rust/commits/d61ceeca7c028f4abbeb31976587d2ac32198496", "html_url": "https://github.com/rust-lang/rust/commit/d61ceeca7c028f4abbeb31976587d2ac32198496"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "828d4bb631ff5a722fce863a479702f8fe4d05bf", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8bddc783e0bf4281a47f30002f6e7f4de1e21ea5", "patch": "@@ -319,7 +319,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n [[package]]\n name = \"gimli\"\n version = \"0.16.1\"\n-source = \"git+https://github.com/bjorn3/gimli.git?branch=impl_range_write#ff96c190bbb7a41623f009c969cb7ecd7a2716f4\"\n+source = \"git+https://github.com/gimli-rs/gimli.git#9930c6166487e9195e6ba31002685686001f906a\"\n dependencies = [\n  \"arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -596,7 +596,7 @@ dependencies = [\n  \"cranelift-simplejit 0.26.0 (git+https://github.com/CraneStation/cranelift.git)\",\n  \"env_logger 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"faerie 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"gimli 0.16.1 (git+https://github.com/bjorn3/gimli.git?branch=impl_range_write)\",\n+ \"gimli 0.16.1 (git+https://github.com/gimli-rs/gimli.git)\",\n  \"libc 0.2.47 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"target-lexicon 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempfile 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -885,7 +885,7 @@ dependencies = [\n \"checksum fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\n \"checksum fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n \"checksum gcc 0.3.55 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f5f3913fa0bfe7ee1fd8248b6b9f42a5af4b9d65ec2dd2c3c26132b950ecfc2\"\n-\"checksum gimli 0.16.1 (git+https://github.com/bjorn3/gimli.git?branch=impl_range_write)\" = \"<none>\"\n+\"checksum gimli 0.16.1 (git+https://github.com/gimli-rs/gimli.git)\" = \"<none>\"\n \"checksum goblin 0.0.19 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c65cd533b33e3d04c6e393225fa8919ddfcf5862ca8919c7f9a167c312ef41c2\"\n \"checksum heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205\"\n \"checksum humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3ca7e5f2e110db35f93b837c81797f3714500b81d517bf20c431b16d3ca4f114\""}, {"sha": "48714bd22c020f3ccb696232d616ae0aa9fc277b", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=8bddc783e0bf4281a47f30002f6e7f4de1e21ea5", "patch": "@@ -37,8 +37,8 @@ faerie = \"0.7.1\"\n #cranelift-simplejit = { path = \"../cranelift/lib/simplejit\" }\n #cranelift-faerie = { path = \"../cranelift/lib/faerie\" }\n \n-[patch.\"https://github.com/gimli-rs/gimli.git\"]\n-gimli = { git = \"https://github.com/bjorn3/gimli.git\", branch = \"impl_range_write\" }\n+#[patch.\"https://github.com/gimli-rs/gimli.git\"]\n+#gimli = { path = \"../\" }\n \n [profile.dev.overrides.\"*\"]\n opt-level = 3"}, {"sha": "d4e8510cd614dae98d688f390891a71903431278", "filename": "src/debuginfo.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5/src%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5/src%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo.rs?ref=8bddc783e0bf4281a47f30002f6e7f4de1e21ea5", "patch": "@@ -7,7 +7,7 @@ use std::marker::PhantomData;\n use gimli::write::{\n     Address, AttributeValue, CompilationUnit, DebugAbbrev, DebugInfo, DebugLine, DebugRanges,\n     DebugRngLists, DebugStr, EndianVec, LineProgram, LineProgramId, LineProgramTable, Range,\n-    RangeList, RangesTable, Result, SectionId, StringTable, UnitEntryId, UnitId, UnitTable, Writer,\n+    RangeList, RangeListTable, Result, SectionId, StringTable, UnitEntryId, UnitId, UnitTable, Writer,\n };\n use gimli::Format;\n \n@@ -43,8 +43,8 @@ pub struct DebugContext<'tcx> {\n     unit_id: UnitId,\n     line_programs: LineProgramTable,\n     global_line_program: LineProgramId,\n-    ranges: RangesTable,\n-    unit_ranges: RangeList,\n+    range_lists: RangeListTable,\n+    unit_range_list: RangeList,\n     symbol_names: Vec<String>,\n \n     _dummy: PhantomData<&'tcx ()>,\n@@ -68,7 +68,7 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n         let mut units = UnitTable::default();\n         let mut strings = StringTable::default();\n         let mut line_programs = LineProgramTable::default();\n-        let ranges = RangesTable::default();\n+        let range_lists = RangeListTable::default();\n \n         let global_line_program = line_programs.add(LineProgram::new(\n             version,\n@@ -122,8 +122,8 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n             unit_id,\n             line_programs,\n             global_line_program,\n-            ranges,\n-            unit_ranges: RangeList(Vec::new()),\n+            range_lists,\n+            unit_range_list: RangeList(Vec::new()),\n             symbol_names: Vec::new(),\n             _dummy: PhantomData,\n         }\n@@ -149,13 +149,13 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n     }\n \n     pub fn emit(&mut self, artifact: &mut Artifact) {\n-        let unit_range_id = self.ranges.add(self.unit_ranges.clone());\n+        let unit_range_list_id = self.range_lists.add(self.unit_range_list.clone());\n         let unit = self.units.get_mut(self.unit_id);\n         let root = unit.root();\n         let root = unit.get_mut(root);\n         root.set(\n             gimli::DW_AT_ranges,\n-            AttributeValue::RangeListsRef(unit_range_id),\n+            AttributeValue::RangeListRef(unit_range_list_id),\n         );\n \n         let mut debug_abbrev = DebugAbbrev::from(WriterRelocate::new(self));\n@@ -167,8 +167,8 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n \n         let debug_line_offsets = self.line_programs.write(&mut debug_line).unwrap();\n         let debug_str_offsets = self.strings.write(&mut debug_str).unwrap();\n-        let (debug_ranges_offsets, debug_rnglists_offsets) = self\n-            .ranges\n+        let range_list_offsets = self\n+            .range_lists\n             .write(\n                 &mut debug_ranges,\n                 &mut debug_rnglists,\n@@ -182,8 +182,7 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n                 &mut debug_abbrev,\n                 &mut debug_info,\n                 &debug_line_offsets,\n-                &debug_ranges_offsets,\n-                &debug_rnglists_offsets,\n+                &range_list_offsets,\n                 &debug_str_offsets,\n             )\n             .unwrap();\n@@ -394,7 +393,7 @@ impl<'a, 'b, 'tcx: 'b> FunctionDebugContext<'a, 'tcx> {\n         byteorder::LittleEndian::write_u64(&mut size_array, size as u64);\n         entry.set(gimli::DW_AT_high_pc, AttributeValue::Data8(size_array));\n \n-        self.debug_context.unit_ranges.0.push(Range {\n+        self.debug_context.unit_range_list.0.push(Range {\n             begin: Address::Relative {\n                 symbol: self.symbol,\n                 addend: 0,"}]}