{"sha": "9842d27e9cbb95fc3472cf17a2696d864acf0a8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NDJkMjdlOWNiYjk1ZmMzNDcyY2YxN2EyNjk2ZDg2NGFjZjBhOGM=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2016-12-21T20:09:52Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2016-12-30T14:17:30Z"}, "message": "Fix build", "tree": {"sha": "994c34fa4827b4a18c5ee2495d391dff43fe171c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/994c34fa4827b4a18c5ee2495d391dff43fe171c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9842d27e9cbb95fc3472cf17a2696d864acf0a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9842d27e9cbb95fc3472cf17a2696d864acf0a8c", "html_url": "https://github.com/rust-lang/rust/commit/9842d27e9cbb95fc3472cf17a2696d864acf0a8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9842d27e9cbb95fc3472cf17a2696d864acf0a8c/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a853b042209e5ad58e642b23c7f70c135104228", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a853b042209e5ad58e642b23c7f70c135104228", "html_url": "https://github.com/rust-lang/rust/commit/5a853b042209e5ad58e642b23c7f70c135104228"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "40ac32875e67761486a156fa881801d2eccf06b5", "filename": "src/libcompiler_builtins/lib.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9842d27e9cbb95fc3472cf17a2696d864acf0a8c/src%2Flibcompiler_builtins%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9842d27e9cbb95fc3472cf17a2696d864acf0a8c/src%2Flibcompiler_builtins%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcompiler_builtins%2Flib.rs?ref=9842d27e9cbb95fc3472cf17a2696d864acf0a8c", "patch": "@@ -56,14 +56,14 @@ pub mod reimpls {\n     pub struct u64x2(u64, u64);\n \n     #[cfg(not(stage0))]\n-    #[cfg(all(windows, target_pointer_width=\"64\")]\n+    #[cfg(all(windows, target_pointer_width=\"64\"))]\n     type u128ret = u64x2;\n \n     #[cfg(any(not(all(windows, target_pointer_width=\"64\")),stage0))]\n     type u128ret = u128_;\n \n     #[cfg(not(stage0))]\n-    #[cfg(all(windows, target_pointer_width=\"64\")]\n+    #[cfg(all(windows, target_pointer_width=\"64\"))]\n     type i128ret = u64x2;\n \n     #[cfg(any(not(all(windows, target_pointer_width=\"64\")),stage0))]\n@@ -695,29 +695,31 @@ pub mod reimpls {\n     #[cfg(not(stage0))]\n     #[cfg(all(windows, target_pointer_width=\"64\"))]\n     mod windows_64_workarounds {\n+        use super::{i128_, u128_, LargeInt};\n+        use super::{i128_as_f64, i128_as_f32, u128_as_f64, u128_as_f32};\n         #[export_name=\"__floattidf\"]\n         pub extern \"C\" fn i128_as_f64_win(alow: u64, ahigh: i64) -> f64 {\n-            ::i128_as_f64(i128_::from_parts(alow, ahigh))\n+            i128_as_f64(i128_::from_parts(alow, ahigh))\n         }\n \n         #[export_name=\"__floattisf\"]\n         pub extern \"C\" fn i128_as_f32_win(alow: u64, ahigh: i64) -> f32 {\n-            ::i128_as_f32(i128_::from_parts(alow, ahigh))\n+            i128_as_f32(i128_::from_parts(alow, ahigh))\n         }\n \n         #[export_name=\"__floatuntidf\"]\n         pub extern \"C\" fn u128_as_f64_win(alow: u64, ahigh: u64) -> f64 {\n-            ::u128_as_f64(u128_::from_parts(alow, ahigh))\n+            u128_as_f64(u128_::from_parts(alow, ahigh))\n         }\n \n         #[export_name=\"__floatuntisf\"]\n         pub extern \"C\" fn u128_as_f32_win(alow: u64, ahigh: u64) -> f32 {\n-            ::u128_as_f32(u128_::from_parts(alow, ahigh))\n+            u128_as_f32(u128_::from_parts(alow, ahigh))\n         }\n     }\n     #[cfg(not(stage0))]\n     #[cfg(all(windows, target_pointer_width=\"64\"))]\n-    pub use windows_64_workarounds::*;\n+    pub use self::windows_64_workarounds::*;\n \n \n     #[cfg_attr(not(all(windows, target_pointer_width=\"64\", not(stage0))),"}]}