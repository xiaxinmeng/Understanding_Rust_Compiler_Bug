{"sha": "4ffde0814f43076c944f46890e0b6d401de92ca4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZmRlMDgxNGY0MzA3NmM5NDRmNDY4OTBlMGI2ZDQwMWRlOTJjYTQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T17:23:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T18:32:56Z"}, "message": "Test fixes and rebase conflicts", "tree": {"sha": "4b1c7d0612d0901a4746724b103d61ef2a7cee0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b1c7d0612d0901a4746724b103d61ef2a7cee0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ffde0814f43076c944f46890e0b6d401de92ca4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ffde0814f43076c944f46890e0b6d401de92ca4", "html_url": "https://github.com/rust-lang/rust/commit/4ffde0814f43076c944f46890e0b6d401de92ca4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ffde0814f43076c944f46890e0b6d401de92ca4/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c999c797c12f3f79482f0f4f416567b6bcc2a63", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c999c797c12f3f79482f0f4f416567b6bcc2a63", "html_url": "https://github.com/rust-lang/rust/commit/9c999c797c12f3f79482f0f4f416567b6bcc2a63"}], "stats": {"total": 49, "additions": 7, "deletions": 42}, "files": [{"sha": "a2643f4d0f79b5e6d752ead894a9c29068a531d1", "filename": "src/liballoc/heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Fliballoc%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Fliballoc%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fheap.rs?ref=4ffde0814f43076c944f46890e0b6d401de92ca4", "patch": "@@ -280,7 +280,7 @@ mod imp {\n         if align <= MIN_ALIGN {\n             libc::malloc(size as libc::size_t) as *mut u8\n         } else {\n-            let mut out = ptr::null();\n+            let mut out = ptr::null_mut();\n             let ret = posix_memalign(&mut out,\n                                      align as libc::size_t,\n                                      size as libc::size_t);"}, {"sha": "9966f0d4bf7d061d731be5d9f3a1ec480d67b178", "filename": "src/libcore/any.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=4ffde0814f43076c944f46890e0b6d401de92ca4", "patch": "@@ -75,7 +75,7 @@ use mem::transmute;\n use option::Option::{self, Some, None};\n use raw::TraitObject;\n use intrinsics;\n-#[cfg(not(stage0))] use marker::Sized;\n+use marker::Sized;\n \n ///////////////////////////////////////////////////////////////////////////////\n // Any trait\n@@ -175,17 +175,10 @@ pub struct TypeId {\n impl TypeId {\n     /// Returns the `TypeId` of the type this generic function has been\n     /// instantiated with\n-    #[cfg(not(stage0))]\n     #[unstable = \"may grow a `Reflect` bound soon via marker traits\"]\n     pub fn of<T: ?Sized + 'static>() -> TypeId {\n         TypeId {\n             t: unsafe { intrinsics::type_id::<T>() },\n         }\n     }\n-\n-    /// dox\n-    #[cfg(stage0)]\n-    pub fn of<T: 'static>() -> TypeId {\n-        unsafe { intrinsics::type_id::<T>() }\n-    }\n }"}, {"sha": "dd488a74216ebac19c47d37e57558118a74fde5b", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=4ffde0814f43076c944f46890e0b6d401de92ca4", "patch": "@@ -44,8 +44,6 @@\n \n use marker::Sized;\n \n-#[cfg(stage0)] use any::TypeId;\n-\n pub type GlueFn = extern \"Rust\" fn(*const i8);\n \n #[lang=\"ty_desc\"]\n@@ -208,12 +206,8 @@ extern \"rust-intrinsic\" {\n     /// Gets an identifier which is globally unique to the specified type. This\n     /// function will return the same value for a type regardless of whichever\n     /// crate it is invoked in.\n-    #[cfg(not(stage0))]\n     pub fn type_id<T: ?Sized + 'static>() -> u64;\n \n-    #[cfg(stage0)]\n-    pub fn type_id<T: ?Sized + 'static>() -> TypeId;\n-\n     /// Create a value initialized to zero.\n     ///\n     /// `init` is unsafe because it returns a zeroed-out datum,"}, {"sha": "788ec5af44ccb60f27bf3749fcc9dfd67728eeb6", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=4ffde0814f43076c944f46890e0b6d401de92ca4", "patch": "@@ -2088,7 +2088,7 @@ impl Clean<Mutability> for ast::Mutability {\n     }\n }\n \n-#[derive(Show, Clone, RustcEncodable, RustcDecodable, PartialEq, Copy, Show)]\n+#[derive(Clone, RustcEncodable, RustcDecodable, PartialEq, Copy, Show)]\n pub enum ImplPolarity {\n     Positive,\n     Negative,"}, {"sha": "fdd8738a89d265568d97ce72a6267c16c153395a", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=4ffde0814f43076c944f46890e0b6d401de92ca4", "patch": "@@ -1444,7 +1444,7 @@ pub trait Buffer: Reader {\n                     }\n                 }\n             };\n-            buffer.consume(used);\n+            self.consume(used);\n             if done {\n                 return Ok(res);\n             }"}, {"sha": "062bdf346cd44f6a5e406b68e280000b644b69f5", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=4ffde0814f43076c944f46890e0b6d401de92ca4", "patch": "@@ -319,8 +319,6 @@ use prelude::v1::*;\n \n use sync::Arc;\n use fmt;\n-#[cfg(stage0)] // NOTE remove use after next snapshot\n-use marker;\n use mem;\n use cell::UnsafeCell;\n "}, {"sha": "cba7d81937acde588dca47a03fd2fcf0809ac5c1", "filename": "src/libstd/sys/windows/backtrace.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fsys%2Fwindows%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fsys%2Fwindows%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fbacktrace.rs?ref=4ffde0814f43076c944f46890e0b6d401de92ca4", "patch": "@@ -31,6 +31,7 @@ use mem;\n use ops::Drop;\n use option::Option::{Some, None};\n use path::Path;\n+use ptr;\n use result::Result::{Ok, Err};\n use slice::SliceExt;\n use str::{self, StrExt};"}, {"sha": "d148f82184bd4d8b8b99c75c7f54edc444a2eac8", "filename": "src/libstd/sys/windows/thread_local.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread_local.rs?ref=4ffde0814f43076c944f46890e0b6d401de92ca4", "patch": "@@ -13,6 +13,7 @@ use prelude::v1::*;\n use libc::types::os::arch::extra::{DWORD, LPVOID, BOOL};\n \n use mem;\n+use ptr;\n use rt;\n use sys_common::mutex::{MUTEX_INIT, Mutex};\n "}, {"sha": "f7a2f8e10e9265cea39f0f5c0bfd9ec2d03eea9c", "filename": "src/libstd/thread_local/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fthread_local%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffde0814f43076c944f46890e0b6d401de92ca4/src%2Flibstd%2Fthread_local%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread_local%2Fmod.rs?ref=4ffde0814f43076c944f46890e0b6d401de92ca4", "patch": "@@ -459,6 +459,7 @@ mod imp {\n \n     use cell::UnsafeCell;\n     use mem;\n+    use ptr;\n     use sys_common::thread_local::StaticKey as OsStaticKey;\n \n     #[doc(hidden)]"}, {"sha": "16ab12a82526cf565e5eabb801413f6b65ce9421", "filename": "src/test/run-make/test-shard-completeness/Makefile", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9c999c797c12f3f79482f0f4f416567b6bcc2a63/src%2Ftest%2Frun-make%2Ftest-shard-completeness%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/9c999c797c12f3f79482f0f4f416567b6bcc2a63/src%2Ftest%2Frun-make%2Ftest-shard-completeness%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftest-shard-completeness%2FMakefile?ref=9c999c797c12f3f79482f0f4f416567b6bcc2a63", "patch": "@@ -1,7 +0,0 @@\n--include ../tools.mk\n-\n-all:\n-\t# Running all the shards should hit every test\n-\t$(RUSTC) --test main.rs\n-\t$(call RUN,main) --test-shard 1.2 | grep \"test_1 ... ok\"\n-\t$(call RUN,main) --test-shard 2.2 | grep \"test_2 ... ok\""}, {"sha": "5eabd630b09318208c0d7dfa653bfcfc35282517", "filename": "src/test/run-make/test-shard-completeness/main.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9c999c797c12f3f79482f0f4f416567b6bcc2a63/src%2Ftest%2Frun-make%2Ftest-shard-completeness%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c999c797c12f3f79482f0f4f416567b6bcc2a63/src%2Ftest%2Frun-make%2Ftest-shard-completeness%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftest-shard-completeness%2Fmain.rs?ref=9c999c797c12f3f79482f0f4f416567b6bcc2a63", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_type = \"lib\"]\n-\n-#[test]\n-fn test_1() { }\n-#[test]\n-fn test_2() { }"}]}