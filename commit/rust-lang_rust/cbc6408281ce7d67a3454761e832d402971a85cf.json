{"sha": "cbc6408281ce7d67a3454761e832d402971a85cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYzY0MDgyODFjZTdkNjdhMzQ1NDc2MWU4MzJkNDAyOTcxYTg1Y2Y=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-13T18:46:57Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-13T18:46:57Z"}, "message": "fix", "tree": {"sha": "dc270439e446805492c972b57a6ee101d986c9d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc270439e446805492c972b57a6ee101d986c9d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbc6408281ce7d67a3454761e832d402971a85cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbc6408281ce7d67a3454761e832d402971a85cf", "html_url": "https://github.com/rust-lang/rust/commit/cbc6408281ce7d67a3454761e832d402971a85cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbc6408281ce7d67a3454761e832d402971a85cf/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62e827cfc7b76c0a8a2485fb421f6f41af289048", "url": "https://api.github.com/repos/rust-lang/rust/commits/62e827cfc7b76c0a8a2485fb421f6f41af289048", "html_url": "https://github.com/rust-lang/rust/commit/62e827cfc7b76c0a8a2485fb421f6f41af289048"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2a593ffc5a7a1d585813dd6cee846af07e55d0e4", "filename": "safe-unsafe-meaning.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbc6408281ce7d67a3454761e832d402971a85cf/safe-unsafe-meaning.md", "raw_url": "https://github.com/rust-lang/rust/raw/cbc6408281ce7d67a3454761e832d402971a85cf/safe-unsafe-meaning.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/safe-unsafe-meaning.md?ref=cbc6408281ce7d67a3454761e832d402971a85cf", "patch": "@@ -70,7 +70,7 @@ basically a language bug.\n \n That said, it would be best to minimize *needlessly* relying on properties of\n concrete safe code. Bugs happen! Of course, I must reinforce that this is only\n-a concern for Unsafe code. Safe code can't blindly trust anyone and everyone\n+a concern for Unsafe code. Safe code can blindly trust anyone and everyone\n as far as basic memory-safety is concerned.\n \n On the other hand, safe traits are free to declare arbitrary contracts, but because"}]}