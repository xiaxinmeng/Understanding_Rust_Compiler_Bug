{"sha": "21d58a1d31906ab03bd332321dde1d5d76368755", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZDU4YTFkMzE5MDZhYjAzYmQzMzIzMjFkZGUxZDVkNzYzNjg3NTU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-16T00:37:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-16T00:37:14Z"}, "message": "Rollup merge of #71677 - Mark-Simulacrum:hasher-docs, r=Amanieu\n\nAdd explicit references to the BuildHasher trait\n\nFixes #71652", "tree": {"sha": "dd1644c078fe56f0d5ef5e2a91ee315f822fab15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd1644c078fe56f0d5ef5e2a91ee315f822fab15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21d58a1d31906ab03bd332321dde1d5d76368755", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJevzW8CRBK7hj4Ov3rIwAAdHIIABxj16WOK/OGaGtrbhYEJCIR\nNYLuBsMllc1ASzlw2ghge9OXYS1WuvjNLIkJPaqkMd1JpKL+6C8TxH41iUpEu8+C\ntNk/naQP6HUgYAPN7haHR3vAmJmz8x0TsY5R12UKNDoEZtZnviWqshzdEtkrQc49\n4T/O19uy/SJ74yQltaEgYE27SzXDhGN5JG0p1017YFF9Ci2/pQM4HER6FtSrRfQi\ndMzR+33I/b55R/4Z+HMWhEMaQdiYpnxRbv2Vf451JNexpV90g5dIbszZWkVDIikW\niYlFoTluw5WA9YzFxLHxBi/B3eJdKPwHI0loIsRquj8NFtkme5ZmHsD9samBWRc=\n=ijcL\n-----END PGP SIGNATURE-----\n", "payload": "tree dd1644c078fe56f0d5ef5e2a91ee315f822fab15\nparent 86f48c53112b357963893bea4b7b80fcd6dedb01\nparent cf5e4a749c13d3a472a6aed4097df5dc90194057\nauthor Dylan DPC <dylan.dpc@gmail.com> 1589589434 +0200\ncommitter GitHub <noreply@github.com> 1589589434 +0200\n\nRollup merge of #71677 - Mark-Simulacrum:hasher-docs, r=Amanieu\n\nAdd explicit references to the BuildHasher trait\n\nFixes #71652\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21d58a1d31906ab03bd332321dde1d5d76368755", "html_url": "https://github.com/rust-lang/rust/commit/21d58a1d31906ab03bd332321dde1d5d76368755", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21d58a1d31906ab03bd332321dde1d5d76368755/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86f48c53112b357963893bea4b7b80fcd6dedb01", "url": "https://api.github.com/repos/rust-lang/rust/commits/86f48c53112b357963893bea4b7b80fcd6dedb01", "html_url": "https://github.com/rust-lang/rust/commit/86f48c53112b357963893bea4b7b80fcd6dedb01"}, {"sha": "cf5e4a749c13d3a472a6aed4097df5dc90194057", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf5e4a749c13d3a472a6aed4097df5dc90194057", "html_url": "https://github.com/rust-lang/rust/commit/cf5e4a749c13d3a472a6aed4097df5dc90194057"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "56cf9be339194e75fe8d09719e03784b66750754", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/21d58a1d31906ab03bd332321dde1d5d76368755/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d58a1d31906ab03bd332321dde1d5d76368755/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=21d58a1d31906ab03bd332321dde1d5d76368755", "patch": "@@ -251,6 +251,9 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// cause many collisions and very poor performance. Setting it\n     /// manually using this function can expose a DoS attack vector.\n     ///\n+    /// The `hash_builder` passed should implement the [`BuildHasher`] trait for\n+    /// the HashMap to be useful, see its documentation for details.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -261,6 +264,8 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// let mut map = HashMap::with_hasher(s);\n     /// map.insert(1, 2);\n     /// ```\n+    ///\n+    /// [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n     pub fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {\n@@ -278,6 +283,9 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// cause many collisions and very poor performance. Setting it\n     /// manually using this function can expose a DoS attack vector.\n     ///\n+    /// The `hash_builder` passed should implement the [`BuildHasher`] trait for\n+    /// the HashMap to be useful, see its documentation for details.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -288,6 +296,8 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// let mut map = HashMap::with_capacity_and_hasher(10, s);\n     /// map.insert(1, 2);\n     /// ```\n+    ///\n+    /// [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n     pub fn with_capacity_and_hasher(capacity: usize, hash_builder: S) -> HashMap<K, V, S> {"}, {"sha": "ca06457291cae7e282f800df8fb14e3faec74984", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/21d58a1d31906ab03bd332321dde1d5d76368755/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d58a1d31906ab03bd332321dde1d5d76368755/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=21d58a1d31906ab03bd332321dde1d5d76368755", "patch": "@@ -273,6 +273,9 @@ impl<T, S> HashSet<T, S> {\n     /// cause many collisions and very poor performance. Setting it\n     /// manually using this function can expose a DoS attack vector.\n     ///\n+    /// The `hash_builder` passed should implement the [`BuildHasher`] trait for\n+    /// the HashMap to be useful, see its documentation for details.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -283,6 +286,8 @@ impl<T, S> HashSet<T, S> {\n     /// let mut set = HashSet::with_hasher(s);\n     /// set.insert(2);\n     /// ```\n+    ///\n+    /// [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n     pub fn with_hasher(hasher: S) -> HashSet<T, S> {\n@@ -300,6 +305,9 @@ impl<T, S> HashSet<T, S> {\n     /// cause many collisions and very poor performance. Setting it\n     /// manually using this function can expose a DoS attack vector.\n     ///\n+    /// The `hash_builder` passed should implement the [`BuildHasher`] trait for\n+    /// the HashMap to be useful, see its documentation for details.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -310,6 +318,8 @@ impl<T, S> HashSet<T, S> {\n     /// let mut set = HashSet::with_capacity_and_hasher(10, s);\n     /// set.insert(1);\n     /// ```\n+    ///\n+    /// [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n     pub fn with_capacity_and_hasher(capacity: usize, hasher: S) -> HashSet<T, S> {"}]}