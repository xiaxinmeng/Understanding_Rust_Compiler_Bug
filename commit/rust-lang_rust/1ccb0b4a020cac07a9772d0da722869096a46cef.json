{"sha": "1ccb0b4a020cac07a9772d0da722869096a46cef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjY2IwYjRhMDIwY2FjMDdhOTc3MmQwZGE3MjI4NjkwOTZhNDZjZWY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-29T15:19:48Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-30T05:19:55Z"}, "message": "rustc -> rustc_middle part 3 (rustfmt)", "tree": {"sha": "25041b00680c361ef710a6ea46ae3e1260aff824", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25041b00680c361ef710a6ea46ae3e1260aff824"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ccb0b4a020cac07a9772d0da722869096a46cef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ccb0b4a020cac07a9772d0da722869096a46cef", "html_url": "https://github.com/rust-lang/rust/commit/1ccb0b4a020cac07a9772d0da722869096a46cef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ccb0b4a020cac07a9772d0da722869096a46cef/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cb9e36090fcaa9243b866a61044018a9e6b8c41", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cb9e36090fcaa9243b866a61044018a9e6b8c41", "html_url": "https://github.com/rust-lang/rust/commit/0cb9e36090fcaa9243b866a61044018a9e6b8c41"}], "stats": {"total": 1510, "additions": 771, "deletions": 739}, "files": [{"sha": "38dd879de7d591deb8b12a3b608ed9278b948acd", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -5,13 +5,13 @@ use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n \n-use rustc_middle::bug;\n-use rustc_middle::ty::layout::{self};\n-use rustc_middle::ty::Ty;\n use rustc_codegen_ssa::mir::operand::OperandValue;\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::MemFlags;\n+use rustc_middle::bug;\n+use rustc_middle::ty::layout::{self};\n+use rustc_middle::ty::Ty;\n use rustc_target::abi::call::ArgAbi;\n use rustc_target::abi::{HasDataLayout, LayoutOf};\n "}, {"sha": "a78546571e2919b5c412586ea328e54e4d540b42", "filename": "src/librustc_codegen_llvm/allocator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fallocator.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n use crate::attributes;\n use libc::c_uint;\n+use rustc_ast::expand::allocator::{AllocatorKind, AllocatorTy, ALLOCATOR_METHODS};\n use rustc_middle::bug;\n use rustc_middle::ty::TyCtxt;\n-use rustc_ast::expand::allocator::{AllocatorKind, AllocatorTy, ALLOCATOR_METHODS};\n \n use crate::llvm::{self, False, True};\n use crate::ModuleLlvm;"}, {"sha": "e4d6d7d8af90e54713b7b17400a8fd93d00471bb", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,15 +2,15 @@\n \n use std::ffi::CString;\n \n-use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc_middle::ty::layout::HasTyCtxt;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::const_cstr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::ty::layout::HasTyCtxt;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_session::config::{OptLevel, Sanitizer};\n use rustc_session::Session;\n use rustc_target::abi::call::Conv;"}, {"sha": "816329e06c7a52f8bb639a292a70f72098cd359d", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -6,9 +6,6 @@ use crate::llvm::archive_ro::ArchiveRO;\n use crate::llvm::{self, False, True};\n use crate::{LlvmCodegenBackend, ModuleLlvm};\n use log::{debug, info};\n-use rustc_middle::bug;\n-use rustc_middle::dep_graph::WorkProduct;\n-use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n use rustc_codegen_ssa::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule, ThinShared};\n use rustc_codegen_ssa::back::symbol_export;\n use rustc_codegen_ssa::back::write::{CodegenContext, FatLTOInput, ModuleConfig};\n@@ -17,6 +14,9 @@ use rustc_codegen_ssa::{ModuleCodegen, ModuleKind, RLIB_BYTECODE_EXTENSION};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{FatalError, Handler};\n use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_middle::bug;\n+use rustc_middle::dep_graph::WorkProduct;\n+use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_session::config::{self, Lto};\n "}, {"sha": "5708cb4e654184e2fbd45b69fc8a3008bc952d8c", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -14,15 +14,15 @@ use crate::type_::Type;\n use crate::LlvmCodegenBackend;\n use crate::ModuleLlvm;\n use log::debug;\n-use rustc_middle::bug;\n-use rustc_middle::ty::TyCtxt;\n use rustc_codegen_ssa::back::write::{BitcodeSection, CodegenContext, EmitObj, ModuleConfig};\n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::{CompiledModule, ModuleCodegen, RLIB_BYTECODE_EXTENSION};\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_errors::{FatalError, Handler};\n use rustc_fs_util::{link_or_copy, path_to_c_string};\n use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_middle::bug;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config::{self, Lto, OutputType, Passes, Sanitizer, SwitchWithOptPath};\n use rustc_session::Session;\n "}, {"sha": "e5f73473b72a6159aab9f926c9f1fa9e0bb73157", "filename": "src/librustc_codegen_llvm/base.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbase.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -23,17 +23,17 @@ use crate::llvm;\n use crate::metadata;\n use crate::value::Value;\n \n+use rustc_codegen_ssa::base::maybe_create_entry_wrapper;\n+use rustc_codegen_ssa::mono_item::MonoItemExt;\n+use rustc_codegen_ssa::traits::*;\n+use rustc_codegen_ssa::{ModuleCodegen, ModuleKind};\n+use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_middle::dep_graph;\n use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n use rustc_middle::middle::cstore::EncodedMetadata;\n use rustc_middle::middle::exported_symbols;\n use rustc_middle::mir::mono::{Linkage, Visibility};\n use rustc_middle::ty::TyCtxt;\n-use rustc_codegen_ssa::base::maybe_create_entry_wrapper;\n-use rustc_codegen_ssa::mono_item::MonoItemExt;\n-use rustc_codegen_ssa::traits::*;\n-use rustc_codegen_ssa::{ModuleCodegen, ModuleKind};\n-use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_session::config::DebugInfo;\n use rustc_span::symbol::Symbol;\n "}, {"sha": "db92f3d382f6e57848159cf869fc04de13eb0ad9", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -7,16 +7,18 @@ use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n use libc::c_uint;\n use log::debug;\n+use rustc_codegen_ssa::traits::*;\n+use rustc_hir as hir;\n+use rustc_hir::def_id::DefId;\n+use rustc_hir::Node;\n use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n-use rustc_middle::mir::interpret::{read_target_uint, Allocation, ConstValue, ErrorHandled, Pointer};\n+use rustc_middle::mir::interpret::{\n+    read_target_uint, Allocation, ConstValue, ErrorHandled, Pointer,\n+};\n use rustc_middle::mir::mono::MonoItem;\n use rustc_middle::ty::layout::{self, Align, LayoutOf, Size};\n use rustc_middle::ty::{self, Instance, Ty};\n use rustc_middle::{bug, span_bug};\n-use rustc_codegen_ssa::traits::*;\n-use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n-use rustc_hir::Node;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::abi::HasDataLayout;"}, {"sha": "64d4076cbf0dbd37738d1510b230b4db56990f92", "filename": "src/librustc_codegen_llvm/debuginfo/gdb.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -5,8 +5,8 @@ use crate::llvm;\n use crate::builder::Builder;\n use crate::common::CodegenCx;\n use crate::value::Value;\n-use rustc_middle::bug;\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::bug;\n use rustc_session::config::DebugInfo;\n \n use rustc_ast::attr;"}, {"sha": "848c973c15b515efe7290a81762861d3a9c7b1a0", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -12,28 +12,28 @@ use crate::llvm;\n use crate::llvm::debuginfo::{\n     DIArray, DIBuilder, DIFile, DIFlags, DILexicalBlock, DISPFlags, DIScope, DIType, DIVariable,\n };\n-use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LOCAL_CRATE};\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n \n use crate::abi::FnAbi;\n use crate::builder::Builder;\n use crate::common::CodegenCx;\n use crate::value::Value;\n-use rustc_middle::mir;\n-use rustc_middle::ty::{self, Instance, ParamEnv, Ty};\n use rustc_codegen_ssa::debuginfo::type_names;\n use rustc_codegen_ssa::mir::debuginfo::{DebugScope, FunctionDebugContext, VariableKind};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, Instance, ParamEnv, Ty};\n use rustc_session::config::{self, DebugInfo};\n \n use libc::c_uint;\n use log::debug;\n use std::cell::RefCell;\n \n-use rustc_middle::ty::layout::{self, HasTyCtxt, LayoutOf, Size};\n use rustc_ast::ast;\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::ty::layout::{self, HasTyCtxt, LayoutOf, Size};\n use rustc_span::symbol::Symbol;\n use rustc_span::{self, BytePos, Span};\n use smallvec::SmallVec;"}, {"sha": "ee188e69be11fd7f30f8838de9cbd99eae622fb3", "filename": "src/librustc_codegen_llvm/debuginfo/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,8 +3,8 @@\n use super::namespace::item_namespace;\n use super::CrateDebugContext;\n \n-use rustc_middle::ty::DefIdTree;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::DefIdTree;\n \n use crate::common::CodegenCx;\n use crate::llvm;"}, {"sha": "26ab46bde3843e1c361985de7807f8fee1f62ec0", "filename": "src/librustc_codegen_llvm/declare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdeclare.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -19,8 +19,8 @@ use crate::llvm::AttributePlace::Function;\n use crate::type_::Type;\n use crate::value::Value;\n use log::debug;\n-use rustc_middle::ty::Ty;\n use rustc_codegen_ssa::traits::*;\n+use rustc_middle::ty::Ty;\n \n /// Declare a function.\n ///"}, {"sha": "8a16d098a8bef5002d4eab4440caa8ada57ac31a", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -17,17 +17,17 @@\n use back::write::{create_informational_target_machine, create_target_machine};\n \n pub use llvm_util::target_features;\n-use rustc_middle::dep_graph::{DepGraph, WorkProduct};\n-use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n-use rustc_middle::ty::{self, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_codegen_ssa::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule};\n use rustc_codegen_ssa::back::write::{CodegenContext, FatLTOInput, ModuleConfig};\n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::ModuleCodegen;\n use rustc_codegen_ssa::{CodegenResults, CompiledModule};\n use rustc_errors::{FatalError, Handler};\n+use rustc_middle::dep_graph::{DepGraph, WorkProduct};\n+use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n+use rustc_middle::ty::{self, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_serialize::json;\n use rustc_session::config::{self, OptLevel, OutputFilenames, PrintRequest};\n use rustc_session::Session;"}, {"sha": "a56c8802f3c00d6525337f0bd09e61bc25819d85", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n use crate::back::write::create_informational_target_machine;\n use crate::llvm;\n use libc::c_int;\n-use rustc_middle::bug;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_feature::UnstableFeatures;\n+use rustc_middle::bug;\n use rustc_session::config::PrintRequest;\n use rustc_session::Session;\n use rustc_span::symbol::sym;"}, {"sha": "fe1537fbd021dc15586046888448f01ac0ea898a", "filename": "src/librustc_codegen_llvm/mono_item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmono_item.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -5,11 +5,11 @@ use crate::context::CodegenCx;\n use crate::llvm;\n use crate::type_of::LayoutLlvmExt;\n use log::debug;\n+use rustc_codegen_ssa::traits::*;\n+use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_middle::mir::mono::{Linkage, Visibility};\n use rustc_middle::ty::layout::{FnAbiExt, LayoutOf};\n use rustc_middle::ty::{Instance, TypeFoldable};\n-use rustc_codegen_ssa::traits::*;\n-use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n \n pub use rustc_middle::mir::mono::MonoItem;\n "}, {"sha": "c06d2e6a01ac2d9cc714f4e3c46ac97503090000", "filename": "src/librustc_codegen_llvm/type_.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -7,7 +7,6 @@ use crate::llvm;\n use crate::llvm::{Bool, False, True};\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n-\n use rustc_ast::ast;\n use rustc_codegen_ssa::common::TypeKind;\n use rustc_codegen_ssa::traits::*;"}, {"sha": "42e9f60e95cb5dee5eacafbefab4d825f18c919f", "filename": "src/librustc_codegen_llvm/va_arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fva_arg.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,12 +2,12 @@ use crate::builder::Builder;\n use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n-use rustc_middle::ty::layout::{Align, HasDataLayout, HasTyCtxt, LayoutOf, Size};\n-use rustc_middle::ty::Ty;\n use rustc_codegen_ssa::mir::operand::OperandRef;\n use rustc_codegen_ssa::traits::{\n     BaseTypeMethods, BuilderMethods, ConstMethods, DerivedTypeMethods,\n };\n+use rustc_middle::ty::layout::{Align, HasDataLayout, HasTyCtxt, LayoutOf, Size};\n+use rustc_middle::ty::Ty;\n \n #[allow(dead_code)]\n fn round_pointer_up_to_alignment("}, {"sha": "1e780c5f86771ee3767cf25f99f2852ac35fb7c7", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n-use rustc_middle::middle::cstore::{EncodedMetadata, LibSource, NativeLibrary, NativeLibraryKind};\n-use rustc_middle::middle::dependency_format::Linkage;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_fs_util::fix_windows_verbatim_for_gcc;\n use rustc_hir::def_id::CrateNum;\n+use rustc_middle::middle::cstore::{EncodedMetadata, LibSource, NativeLibrary, NativeLibraryKind};\n+use rustc_middle::middle::dependency_format::Linkage;\n use rustc_session::config::{\n     self, CFGuard, DebugInfo, OutputFilenames, OutputType, PrintRequest, Sanitizer,\n };"}, {"sha": "c0c533524b09861eaf79cbe4fbe9aef1c40b5fa0", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -8,10 +8,10 @@ use std::io::prelude::*;\n use std::io::{self, BufWriter};\n use std::path::{Path, PathBuf};\n \n-use rustc_middle::middle::dependency_format::Linkage;\n-use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n+use rustc_middle::middle::dependency_format::Linkage;\n+use rustc_middle::ty::TyCtxt;\n use rustc_serialize::{json, Encoder};\n use rustc_session::config::{self, CrateType, DebugInfo, LinkerPluginLto, Lto, OptLevel};\n use rustc_session::Session;"}, {"sha": "c02e4f279b1fbea67e2990c6f0b6db5540372441", "filename": "src/librustc_codegen_ssa/back/rpath.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Frpath.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,8 +3,8 @@ use std::env;\n use std::fs;\n use std::path::{Path, PathBuf};\n \n-use rustc_middle::middle::cstore::LibSource;\n use rustc_hir::def_id::CrateNum;\n+use rustc_middle::middle::cstore::LibSource;\n \n pub struct RPathConfig<'a> {\n     pub used_crates: &'a [(CrateNum, LibSource)],"}, {"sha": "39b70a5f2e730527e5011efec2287ab6f0ed8fb0", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,19 +1,21 @@\n use std::collections::hash_map::Entry::*;\n use std::sync::Arc;\n \n-use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc_middle::middle::exported_symbols::{metadata_symbol_name, ExportedSymbol, SymbolExportLevel};\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::Instance;\n-use rustc_middle::ty::{SymbolName, TyCtxt};\n use rustc_ast::expand::allocator::ALLOCATOR_METHODS;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::Node;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::middle::exported_symbols::{\n+    metadata_symbol_name, ExportedSymbol, SymbolExportLevel,\n+};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::Instance;\n+use rustc_middle::ty::{SymbolName, TyCtxt};\n use rustc_session::config::{self, Sanitizer};\n \n pub fn threshold(tcx: TyCtxt<'_>) -> SymbolExportLevel {"}, {"sha": "35c5812e1f3bf138cba1d2bd86c44b43042d6730", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -10,10 +10,6 @@ use crate::{\n \n use crate::traits::*;\n use jobserver::{Acquired, Client};\n-use rustc_middle::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n-use rustc_middle::middle::cstore::EncodedMetadata;\n-use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::SelfProfilerRef;\n@@ -28,6 +24,10 @@ use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_incremental::{\n     copy_cgu_workproducts_to_incr_comp_cache_dir, in_incr_comp_dir, in_incr_comp_dir_sess,\n };\n+use rustc_middle::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n+use rustc_middle::middle::cstore::EncodedMetadata;\n+use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::cgu_reuse_tracker::CguReuseTracker;\n use rustc_session::config::{\n     self, Lto, OutputFilenames, OutputType, Passes, Sanitizer, SwitchWithOptPath,"}, {"sha": "8de04b730e17039f483bdd6b7c2447699e2b71fd", "filename": "src/librustc_codegen_ssa/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fcommon.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n #![allow(non_camel_case_types, non_snake_case)]\n \n-use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_errors::struct_span_err;\n+use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_session::Session;\n use rustc_span::Span;\n \n use crate::base;\n use crate::traits::*;\n-use rustc_middle::middle::lang_items::LangItem;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::middle::lang_items::LangItem;\n \n use crate::traits::BuilderMethods;\n use rustc_hir as hir;"}, {"sha": "6c0e4128e30f5f51e128056a3eb0837c88834605", "filename": "src/librustc_codegen_ssa/debuginfo/type_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fdebuginfo%2Ftype_names.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n // Type Names for Debug Info.\n \n-use rustc_middle::ty::{self, subst::SubstsRef, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, subst::SubstsRef, Ty, TyCtxt};\n \n // Compute the name of the type as it should be stored in debuginfo. Does not do\n // any caching, i.e., calling the function twice with the same type will also do"}, {"sha": "ec3de274b8a83620f5d9dfbbeac535f66a7cddc6", "filename": "src/librustc_codegen_ssa/mir/analyze.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,16 +3,16 @@\n \n use super::FunctionCx;\n use crate::traits::*;\n+use rustc_data_structures::graph::dominators::Dominators;\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::traversal;\n use rustc_middle::mir::visit::{\n     MutatingUseContext, NonMutatingUseContext, NonUseContext, PlaceContext, Visitor,\n };\n use rustc_middle::mir::{self, Location, TerminatorKind};\n use rustc_middle::ty;\n use rustc_middle::ty::layout::{HasTyCtxt, LayoutOf};\n-use rustc_data_structures::graph::dominators::Dominators;\n-use rustc_index::bit_set::BitSet;\n-use rustc_index::vec::{Idx, IndexVec};\n \n pub fn non_ssa_locals<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     fx: &FunctionCx<'a, 'tcx, Bx>,"}, {"sha": "e71a63b7f308002710dc05d8185f1db8ae39d533", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -9,12 +9,12 @@ use crate::meth;\n use crate::traits::*;\n use crate::MemFlags;\n \n+use rustc_index::vec::Idx;\n use rustc_middle::middle::lang_items;\n use rustc_middle::mir;\n use rustc_middle::mir::AssertKind;\n use rustc_middle::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf};\n use rustc_middle::ty::{self, Instance, Ty, TypeFoldable};\n-use rustc_index::vec::Idx;\n use rustc_span::{source_map::Span, symbol::Symbol};\n use rustc_target::abi::call::{ArgAbi, FnAbi, PassMode};\n use rustc_target::spec::abi::Abi;"}, {"sha": "9770d04aa99dd54baeb01deec58f0ab11c457c74", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n use crate::mir::operand::OperandRef;\n use crate::traits::*;\n+use rustc_index::vec::Idx;\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::{ConstValue, ErrorHandled};\n use rustc_middle::ty::layout::{self, HasTyCtxt};\n use rustc_middle::ty::{self, Ty};\n-use rustc_index::vec::Idx;\n use rustc_span::source_map::Span;\n \n use super::FunctionCx;"}, {"sha": "4eefb37ba0d42e0cc1b90b0561277b20a25d3790", "filename": "src/librustc_codegen_ssa/mir/debuginfo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n use crate::traits::*;\n+use rustc_hir::def_id::CrateNum;\n+use rustc_index::vec::IndexVec;\n use rustc_middle::mir;\n use rustc_middle::ty;\n use rustc_middle::ty::layout::{LayoutOf, Size};\n-use rustc_hir::def_id::CrateNum;\n-use rustc_index::vec::IndexVec;\n use rustc_session::config::DebugInfo;\n \n use rustc_span::symbol::{kw, Symbol};"}, {"sha": "66ce50c482a6f54c2d255cb0865d1549251544f4", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -7,12 +7,12 @@ use crate::common::{self, IntPredicate, RealPredicate};\n use crate::traits::*;\n use crate::MemFlags;\n \n+use rustc_apfloat::{ieee, Float, Round, Status};\n use rustc_middle::middle::lang_items::ExchangeMallocFnLangItem;\n use rustc_middle::mir;\n use rustc_middle::ty::cast::{CastTy, IntTy};\n use rustc_middle::ty::layout::{self, HasTyCtxt, LayoutOf};\n use rustc_middle::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n-use rustc_apfloat::{ieee, Float, Round, Status};\n use rustc_span::source_map::{Span, DUMMY_SP};\n use rustc_span::symbol::sym;\n "}, {"sha": "ddd7447406c48cafb710ed6a61cc94621a19e8e4", "filename": "src/librustc_codegen_ssa/mir/statement.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fstatement.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,5 @@\n-use rustc_middle::mir;\n use rustc_errors::struct_span_err;\n+use rustc_middle::mir;\n \n use super::FunctionCx;\n use super::LocalRef;"}, {"sha": "5994ef2be5467e0301115428398a8006591fff72", "filename": "src/librustc_codegen_ssa/mono_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmono_item.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n use crate::base;\n use crate::traits::*;\n+use rustc_hir as hir;\n use rustc_middle::mir::mono::{Linkage, Visibility};\n use rustc_middle::ty::layout::HasTyCtxt;\n-use rustc_hir as hir;\n \n use rustc_middle::mir::mono::MonoItem;\n "}, {"sha": "4e84c096822ef136f88ec72a7ea54f61daf2acde", "filename": "src/librustc_codegen_ssa/traits/debuginfo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n use super::BackendTypes;\n use crate::mir::debuginfo::{FunctionDebugContext, VariableKind};\n+use rustc_ast::ast::Name;\n+use rustc_hir::def_id::CrateNum;\n use rustc_middle::mir;\n use rustc_middle::ty::layout::Size;\n use rustc_middle::ty::{Instance, Ty};\n-use rustc_ast::ast::Name;\n-use rustc_hir::def_id::CrateNum;\n use rustc_span::{SourceFile, Span};\n use rustc_target::abi::call::FnAbi;\n "}, {"sha": "de63ef796138749db2cb2607e638952177728c91", "filename": "src/librustc_codegen_ssa/traits/declare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n use super::BackendTypes;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::mir::mono::{Linkage, Visibility};\n use rustc_middle::ty::{Instance, Ty};\n-use rustc_hir::def_id::DefId;\n use rustc_target::abi::call::FnAbi;\n \n pub trait DeclareMethods<'tcx>: BackendTypes {"}, {"sha": "beff9eae85929232feadbc2ae3ba5206df23442f", "filename": "src/librustc_codegen_ssa/traits/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmisc.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n use super::BackendTypes;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::mir::mono::CodegenUnit;\n use rustc_middle::ty::{self, Instance, Ty};\n-use rustc_data_structures::fx::FxHashMap;\n use rustc_session::Session;\n use std::cell::RefCell;\n use std::sync::Arc;"}, {"sha": "50df08614345fbe7602e92b4d3a98dc9f4ba3df3", "filename": "src/librustc_codegen_ssa/traits/statics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fstatics.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n use super::BackendTypes;\n-use rustc_middle::ty::layout::Align;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::layout::Align;\n \n pub trait StaticMethods: BackendTypes {\n     fn static_addr_of(&self, cv: Self::Value, align: Align, kind: Option<&str>) -> Self::Value;"}, {"sha": "27d52e9b9c53e8ab524f192c7bee41b70ea77601", "filename": "src/librustc_codegen_ssa/traits/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fwrite.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,8 +2,8 @@ use crate::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule};\n use crate::back::write::{CodegenContext, FatLTOInput, ModuleConfig};\n use crate::{CompiledModule, ModuleCodegen};\n \n-use rustc_middle::dep_graph::WorkProduct;\n use rustc_errors::{FatalError, Handler};\n+use rustc_middle::dep_graph::WorkProduct;\n \n pub trait WriteBackendMethods: 'static + Sized + Clone {\n     type Module: Send + Sync;"}, {"sha": "8f8c2eae6e27d1f746f50289567f749f27928e9a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -18,9 +18,6 @@ extern crate lazy_static;\n \n pub extern crate rustc_plugin_impl as plugin;\n \n-use rustc_middle::middle::cstore::MetadataLoader;\n-use rustc_middle::ty::TyCtxt;\n-use rustc_middle::util::common::ErrorReported;\n use rustc_ast::ast;\n use rustc_codegen_ssa::{traits::CodegenBackend, CodegenResults};\n use rustc_data_structures::profiling::print_time_passes_entry;\n@@ -35,6 +32,9 @@ use rustc_interface::util::{collect_crate_types, get_builtin_codegen_backend};\n use rustc_interface::{interface, Queries};\n use rustc_lint::LintStore;\n use rustc_metadata::locator;\n+use rustc_middle::middle::cstore::MetadataLoader;\n+use rustc_middle::ty::TyCtxt;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_save_analysis as save;\n use rustc_save_analysis::DumpHandler;\n use rustc_serialize::json::{self, ToJson};"}, {"sha": "2319760204a9e2b463e8315168c482efba37700a", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,13 +1,13 @@\n //! The various pretty-printing routines.\n \n-use rustc_middle::hir::map as hir_map;\n-use rustc_middle::ty::{self, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_ast::ast;\n use rustc_ast_pretty::pprust;\n use rustc_hir as hir;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir_pretty as pprust_hir;\n+use rustc_middle::hir::map as hir_map;\n+use rustc_middle::ty::{self, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_mir::util::{write_mir_graphviz, write_mir_pretty};\n use rustc_session::config::{Input, PpMode, PpSourceMode};\n use rustc_session::Session;"}, {"sha": "5135820ac507f64aab753a539bb114b00e7c3ebd", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -34,16 +34,16 @@\n //! ```\n \n use graphviz as dot;\n-use rustc_middle::dep_graph::debug::{DepNodeFilter, EdgeFilter};\n-use rustc_middle::dep_graph::{DepGraphQuery, DepKind, DepNode, DepNodeExt};\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{Direction, NodeIndex, INCOMING, OUTGOING};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use rustc_middle::dep_graph::debug::{DepNodeFilter, EdgeFilter};\n+use rustc_middle::dep_graph::{DepGraphQuery, DepKind, DepNode, DepNodeExt};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n "}, {"sha": "856edb3725a93d13a174c9e818647ff715b992e9", "filename": "src/librustc_incremental/assert_module_sources.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_module_sources.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -21,10 +21,10 @@\n //! allows for doing a more fine-grained check to see if pre- or post-lto data\n //! was re-used.\n \n-use rustc_middle::mir::mono::CodegenUnitNameBuilder;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_middle::mir::mono::CodegenUnitNameBuilder;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::cgu_reuse_tracker::*;\n use rustc_span::symbol::{sym, Symbol};\n use std::collections::BTreeSet;"}, {"sha": "b75a428c62a091f15199008d0916628d91232410", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n //! Code to save/load the dep-graph from files.\n \n+use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::dep_graph::{PreviousDepGraph, SerializedDepGraph, WorkProduct, WorkProductId};\n use rustc_middle::ty::query::OnDiskCache;\n use rustc_middle::ty::TyCtxt;\n-use rustc_data_structures::fx::FxHashMap;\n use rustc_serialize::opaque::Decoder;\n use rustc_serialize::Decodable as RustcDecodable;\n use rustc_session::Session;"}, {"sha": "6d4ba45c2e6ed8b89e54824aac5f33525710a8ab", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n-use rustc_middle::dep_graph::{DepGraph, DepKind, WorkProduct, WorkProductId};\n-use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::join;\n+use rustc_middle::dep_graph::{DepGraph, DepKind, WorkProduct, WorkProductId};\n+use rustc_middle::ty::TyCtxt;\n use rustc_serialize::opaque::Encoder;\n use rustc_serialize::Encodable as RustcEncodable;\n use rustc_session::Session;"}, {"sha": "4dd81b1df5759eb94999ef9fad437800d510eb7f", "filename": "src/librustc_incremental/persist/work_product.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n //! This module contains files for saving intermediate work-products.\n \n use crate::persist::fs::*;\n-use rustc_middle::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n use rustc_fs_util::link_or_copy;\n+use rustc_middle::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n use rustc_session::Session;\n use std::fs as std_fs;\n use std::path::PathBuf;"}, {"sha": "b7890cf9e925a8bf6170fc9f234e28b1de7da337", "filename": "src/librustc_infer/infer/canonical/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -23,10 +23,10 @@\n \n use crate::infer::{ConstVariableOrigin, ConstVariableOriginKind};\n use crate::infer::{InferCtxt, RegionVariableOrigin, TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_index::vec::IndexVec;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::GenericArg;\n use rustc_middle::ty::{self, BoundVar, List};\n-use rustc_index::vec::IndexVec;\n use rustc_span::source_map::Span;\n \n pub use rustc_middle::infer::canonical::*;"}, {"sha": "79a0a5076241f96d1ee8b4cc33bfffb70fe0c7f5", "filename": "src/librustc_infer/infer/canonical/query_response.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fquery_response.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -18,14 +18,14 @@ use crate::infer::{InferCtxt, InferOk, InferResult, NLLRegionVariableOrigin};\n use crate::traits::query::{Fallible, NoSolution};\n use crate::traits::{DomainGoal, TraitEngine};\n use crate::traits::{Obligation, ObligationCause, PredicateObligation};\n+use rustc_data_structures::captures::Captures;\n+use rustc_index::vec::Idx;\n+use rustc_index::vec::IndexVec;\n use rustc_middle::arena::ArenaAllocatable;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::relate::TypeRelation;\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind};\n use rustc_middle::ty::{self, BoundVar, Ty, TyCtxt};\n-use rustc_data_structures::captures::Captures;\n-use rustc_index::vec::Idx;\n-use rustc_index::vec::IndexVec;\n use std::fmt::Debug;\n \n impl<'cx, 'tcx> InferCtxt<'cx, 'tcx> {"}, {"sha": "c630f58abf9855174ba81a26a131560e3fa308d6", "filename": "src/librustc_infer/infer/combine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcombine.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -34,13 +34,13 @@ use super::{InferCtxt, MiscVariable, TypeTrace};\n \n use crate::traits::{Obligation, PredicateObligations};\n \n+use rustc_ast::ast;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, InferConst, Ty, TyCtxt};\n use rustc_middle::ty::{IntType, UintType};\n-use rustc_ast::ast;\n-use rustc_hir::def_id::DefId;\n use rustc_span::{Span, DUMMY_SP};\n \n #[derive(Clone)]"}, {"sha": "4ffdd94cca771f9d2c571b05c5af116ace5e91e6", "filename": "src/librustc_infer/infer/error_reporting/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -55,19 +55,19 @@ use crate::traits::{\n     IfExpressionCause, MatchExpressionArmCause, ObligationCause, ObligationCauseCode,\n };\n \n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_errors::{pluralize, struct_span_err};\n+use rustc_errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n+use rustc_hir as hir;\n+use rustc_hir::def_id::DefId;\n+use rustc_hir::Node;\n use rustc_middle::middle::region;\n use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::{\n     self,\n     subst::{Subst, SubstsRef},\n     Region, Ty, TyCtxt, TypeFoldable,\n };\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_errors::{pluralize, struct_span_err};\n-use rustc_errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n-use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n-use rustc_hir::Node;\n use rustc_span::{DesugaringKind, Pos, Span};\n use rustc_target::spec::abi;\n use std::{cmp, fmt};"}, {"sha": "7824855fe057c7360e9f41e101dc1115aadf0893", "filename": "src/librustc_infer/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,13 +1,13 @@\n use crate::infer::type_variable::TypeVariableOriginKind;\n use crate::infer::InferCtxt;\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::ty::print::Print;\n-use rustc_middle::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Namespace};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Body, Expr, ExprKind, FnRetTy, HirId, Local, Pat};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::print::Print;\n+use rustc_middle::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::symbol::kw;\n use rustc_span::Span;"}, {"sha": "53cab34cd3f176906b331cc49021f2d1ea16f32e", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/find_anon_type.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ffind_anon_type.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::resolve_lifetime as rl;\n-use rustc_middle::ty::{self, Region, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::Node;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::resolve_lifetime as rl;\n+use rustc_middle::ty::{self, Region, TyCtxt};\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// This function calls the `visit_ty` method for the parameters"}, {"sha": "4613c43ba07afb0522e3e9f448c0cd853c8f3288", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::*;\n use crate::infer::InferCtxt;\n+use rustc_errors::DiagnosticBuilder;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_middle::util::common::ErrorReported;\n-use rustc_errors::DiagnosticBuilder;\n use rustc_span::source_map::Span;\n \n mod different_lifetimes;"}, {"sha": "b85a4cae2e47036b3bb967c129ebe5536af581e2", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n //! Error Reporting for Anonymous Region Lifetime Errors\n //! where one region is named and the other is anonymous.\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use rustc_middle::ty;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir::{FnRetTy, TyKind};\n+use rustc_middle::ty;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// When given a `ConcreteFailure` for a function with parameters containing a named region and"}, {"sha": "028148b17db1865af2665d072779d33c668a234a", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/outlives_closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,9 +4,9 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::SubSupConflict;\n use crate::infer::SubregionOrigin;\n+use rustc_hir::{Expr, ExprKind::Closure, Node};\n use rustc_middle::ty::RegionKind;\n use rustc_middle::util::common::ErrorReported;\n-use rustc_hir::{Expr, ExprKind::Closure, Node};\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// Print the error message for lifetime errors when binding escapes a closure."}, {"sha": "2187064ec5ecf9e5b7dc1ca9b77777cd97a328df", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/placeholder_error.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,13 +3,13 @@ use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::ValuePairs;\n use crate::infer::{SubregionOrigin, TypeTrace};\n use crate::traits::{ObligationCause, ObligationCauseCode};\n+use rustc_errors::DiagnosticBuilder;\n+use rustc_hir::def::Namespace;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::ty::error::ExpectedFound;\n use rustc_middle::ty::print::{FmtPrinter, Print, RegionHighlightMode};\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_errors::DiagnosticBuilder;\n-use rustc_hir::def::Namespace;\n-use rustc_hir::def_id::DefId;\n \n use std::fmt::{self, Write};\n "}, {"sha": "34653f2dc0db81454d08cbe3c274aa08ccbf3b93", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,9 +3,9 @@\n use crate::infer::error_reporting::msg_span_from_free_region;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n+use rustc_errors::Applicability;\n use rustc_middle::ty::{BoundRegion, FreeRegion, RegionKind};\n use rustc_middle::util::common::ErrorReported;\n-use rustc_errors::Applicability;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// Print the error message for lifetime errors when the return type is a static impl Trait."}, {"sha": "d35a589320badcbe8136922fa909fbe50ddffc1b", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,9 +2,9 @@\n //! anonymous regions.\n \n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n-use rustc_middle::ty::{self, DefIdTree, Region, Ty};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, DefIdTree, Region, Ty};\n use rustc_span::Span;\n \n // The struct contains the information about the anonymous region"}, {"sha": "81f37831af208222641c35bfbf37b6bc455fcce4", "filename": "src/librustc_infer/infer/error_reporting/note.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnote.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n use crate::infer::error_reporting::{note_and_explain_region, ObligationCauseExt};\n use crate::infer::{self, InferCtxt, SubregionOrigin};\n+use rustc_errors::{struct_span_err, DiagnosticBuilder};\n use rustc_middle::middle::region;\n use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::{self, Region};\n-use rustc_errors::{struct_span_err, DiagnosticBuilder};\n \n impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     pub(super) fn note_region_origin("}, {"sha": "8a73c8b880ee26b68e5ced3af951d58c9c9df9d1", "filename": "src/librustc_infer/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -9,17 +9,17 @@ use crate::infer::region_constraints::VerifyBound;\n use crate::infer::RegionVariableOrigin;\n use crate::infer::RegionckMode;\n use crate::infer::SubregionOrigin;\n+use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::graph::implementation::{\n+    Direction, Graph, NodeIndex, INCOMING, OUTGOING,\n+};\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::middle::free_region::RegionRelations;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_middle::ty::{ReEarlyBound, ReEmpty, ReErased, ReFree, ReStatic};\n use rustc_middle::ty::{ReLateBound, RePlaceholder, ReScope, ReVar};\n use rustc_middle::ty::{Region, RegionVid};\n-use rustc_data_structures::fx::FxHashSet;\n-use rustc_data_structures::graph::implementation::{\n-    Direction, Graph, NodeIndex, INCOMING, OUTGOING,\n-};\n-use rustc_index::vec::{Idx, IndexVec};\n use rustc_span::Span;\n use std::fmt;\n "}, {"sha": "edaa7a04b34d02caa60859fab828e727cd41597b", "filename": "src/librustc_infer/infer/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -8,6 +8,13 @@ pub use self::ValuePairs::*;\n \n use crate::traits::{self, ObligationCause, PredicateObligations, TraitEngine};\n \n+use rustc_ast::ast;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::sync::Lrc;\n+use rustc_data_structures::unify as ut;\n+use rustc_errors::DiagnosticBuilder;\n+use rustc_hir as hir;\n+use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::infer::canonical::{Canonical, CanonicalVarValues};\n use rustc_middle::infer::unify_key::{ConstVarValue, ConstVariableValue};\n use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind, ToType};\n@@ -23,13 +30,6 @@ use rustc_middle::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, Substs\n pub use rustc_middle::ty::IntVarValue;\n use rustc_middle::ty::{self, GenericParamDefKind, InferConst, Ty, TyCtxt};\n use rustc_middle::ty::{ConstVid, FloatVid, IntVid, TyVid};\n-use rustc_ast::ast;\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_data_structures::sync::Lrc;\n-use rustc_data_structures::unify as ut;\n-use rustc_errors::DiagnosticBuilder;\n-use rustc_hir as hir;\n-use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_session::config::BorrowckMode;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;"}, {"sha": "44bacfa80e125671a65f83207a0338ec19a0441d", "filename": "src/librustc_infer/infer/nll_relate/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fnll_relate%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -24,12 +24,12 @@\n use crate::infer::InferCtxt;\n use crate::infer::{ConstVarValue, ConstVariableValue};\n use crate::traits::DomainGoal;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::fold::{TypeFoldable, TypeVisitor};\n use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n use rustc_middle::ty::subst::GenericArg;\n use rustc_middle::ty::{self, InferConst, Ty, TyCtxt};\n-use rustc_data_structures::fx::FxHashMap;\n use std::fmt::Debug;\n \n #[derive(PartialEq)]"}, {"sha": "38c3f0ee6ac1b57ebb48c868b5d1fed131772754", "filename": "src/librustc_infer/infer/outlives/env.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fenv.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n use crate::infer::{GenericKind, InferCtxt};\n use crate::traits::query::OutlivesBound;\n-use rustc_middle::ty;\n-use rustc_middle::ty::free_region_map::FreeRegionMap;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n+use rustc_middle::ty;\n+use rustc_middle::ty::free_region_map::FreeRegionMap;\n \n use super::explicit_outlives_bounds;\n "}, {"sha": "1cd6830b6a241cca0cfefa11e139948e96aa2244", "filename": "src/librustc_infer/infer/outlives/verify.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Foutlives%2Fverify.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n use crate::infer::outlives::env::RegionBoundPairs;\n use crate::infer::{GenericKind, VerifyBound};\n use crate::traits;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_data_structures::captures::Captures;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n use smallvec::smallvec;\n "}, {"sha": "e10b0938955affd93e35c732a93bb16ac50a5f8b", "filename": "src/librustc_infer/infer/region_constraints/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -6,15 +6,15 @@ use self::UndoLog::*;\n use super::unify_key;\n use super::{MiscVariable, RegionVariableOrigin, SubregionOrigin};\n \n-use rustc_middle::ty::ReStatic;\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_middle::ty::{ReLateBound, ReVar};\n-use rustc_middle::ty::{Region, RegionVid};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::unify as ut;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::ty::ReStatic;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::{ReLateBound, ReVar};\n+use rustc_middle::ty::{Region, RegionVid};\n use rustc_span::Span;\n \n use std::collections::BTreeMap;"}, {"sha": "8e4199f0c263db333bf6c8980f2bfa1d1d5cb43b", "filename": "src/librustc_infer/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,5 @@\n-use rustc_middle::ty::{self, Ty, TyVid};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, Ty, TyVid};\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n "}, {"sha": "a95257ba6820a0c737a43506ff60f4ee40118ce1", "filename": "src/librustc_infer/traits/engine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fengine.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n use crate::infer::InferCtxt;\n use crate::traits::Obligation;\n-use rustc_middle::ty::{self, ToPredicate, Ty, WithConstness};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, ToPredicate, Ty, WithConstness};\n \n use super::FulfillmentError;\n use super::{ObligationCause, PredicateObligation};"}, {"sha": "9206166d0bd67bd6e73434137a373ea3abff6ad9", "filename": "src/librustc_infer/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n use super::ObjectSafetyViolation;\n \n use crate::infer::InferCtxt;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::Span;\n use std::fmt;\n "}, {"sha": "0c451998be435b08ce3fa2f9efdcfbca76dbd75e", "filename": "src/librustc_infer/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -8,9 +8,9 @@ mod project;\n mod structural_impls;\n mod util;\n \n+use rustc_hir as hir;\n use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::{self, Ty};\n-use rustc_hir as hir;\n use rustc_span::Span;\n \n pub use self::FulfillmentErrorCode::*;"}, {"sha": "48375a9ddf418eba274b1d6b1339e1615018b43a", "filename": "src/librustc_infer/traits/project.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fproject.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,9 +2,9 @@\n \n use super::PredicateObligation;\n \n+use rustc_data_structures::snapshot_map::{Snapshot, SnapshotMap};\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::{self, Ty};\n-use rustc_data_structures::snapshot_map::{Snapshot, SnapshotMap};\n \n pub use rustc_middle::traits::Reveal;\n "}, {"sha": "80a1e2828090f4ca94802359eebd61a63845d439", "filename": "src/librustc_infer/traits/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_infer%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Futil.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n use smallvec::smallvec;\n \n+use rustc_data_structures::fx::FxHashSet;\n use rustc_middle::ty::outlives::Component;\n use rustc_middle::ty::{self, ToPolyTraitRef, TyCtxt};\n-use rustc_data_structures::fx::FxHashSet;\n \n fn anonymize_predicate<'tcx>(tcx: TyCtxt<'tcx>, pred: &ty::Predicate<'tcx>) -> ty::Predicate<'tcx> {\n     match *pred {"}, {"sha": "a50e802ac2ec677887d2be370a64a43775187b95", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,6 @@\n pub use crate::passes::BoxedResolver;\n use crate::util;\n \n-use rustc_middle::ty;\n-use rustc_middle::util::common::ErrorReported;\n use rustc_ast::ast::{self, MetaItemKind};\n use rustc_ast::token;\n use rustc_codegen_ssa::traits::CodegenBackend;\n@@ -11,6 +9,8 @@ use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::OnDrop;\n use rustc_errors::registry::Registry;\n use rustc_lint::LintStore;\n+use rustc_middle::ty;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_parse::new_parser_from_source_str;\n use rustc_session::config::{self, ErrorOutputType, Input, OutputFilenames};\n use rustc_session::early_error;"}, {"sha": "47b53aeba725d9f42aabcd30b37e21e8568585fd", "filename": "src/librustc_interface/proc_macro_decls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fproc_macro_decls.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n \n pub fn find(tcx: TyCtxt<'_>) -> Option<DefId> {"}, {"sha": "995776552dd1820263ad6372df925c2ac2374c65", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,18 +1,18 @@\n use crate::interface::{Compiler, Result};\n use crate::passes::{self, BoxedResolver, QueryContext};\n \n-use rustc_middle::arena::Arena;\n-use rustc_middle::dep_graph::DepGraph;\n-use rustc_middle::ty::steal::Steal;\n-use rustc_middle::ty::{GlobalCtxt, ResolverOutputs, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_ast::{self, ast};\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::sync::{Lrc, Once, WorkerLocal};\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::Crate;\n use rustc_incremental::DepGraphFuture;\n use rustc_lint::LintStore;\n+use rustc_middle::arena::Arena;\n+use rustc_middle::dep_graph::DepGraph;\n+use rustc_middle::ty::steal::Steal;\n+use rustc_middle::ty::{GlobalCtxt, ResolverOutputs, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_session::config::{OutputFilenames, OutputType};\n use rustc_session::{output::find_crate_name, Session};\n use rustc_span::symbol::sym;"}, {"sha": "a9d9052423ca4dc0e74364678efebbc80ba078c7", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,9 +2,9 @@ extern crate getopts;\n \n use crate::interface::parse_cfgspecs;\n \n-use rustc_middle::middle::cstore;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{emitter::HumanReadableErrorType, registry, ColorConfig};\n+use rustc_middle::middle::cstore;\n use rustc_session::config::{build_configuration, build_session_options, to_crate_config};\n use rustc_session::config::{rustc_optgroups, ErrorOutputType, ExternLocation, Options, Passes};\n use rustc_session::config::{ExternEntry, LinkerPluginLto, LtoCli, SwitchWithOptPath};"}, {"sha": "a8cc34e185439e9e4afe073482999c211d4d544c", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,4 @@\n use log::info;\n-use rustc_middle::ty;\n use rustc_ast::ast::{AttrVec, BlockCheckMode};\n use rustc_ast::mut_visit::{visit_clobber, MutVisitor, *};\n use rustc_ast::ptr::P;\n@@ -14,6 +13,7 @@ use rustc_data_structures::stable_hasher::StableHasher;\n use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_errors::registry::Registry;\n use rustc_metadata::dynamic_lib::DynamicLibrary;\n+use rustc_middle::ty;\n use rustc_resolve::{self, Resolver};\n use rustc_session as session;\n use rustc_session::config::{ErrorOutputType, Input, OutputFilenames};"}, {"sha": "3eb587c016acb18c7f9b85b1d82d6738fe10a728", "filename": "src/librustc_lint/array_into_iter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Farray_into_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Farray_into_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Farray_into_iter.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n use crate::{LateContext, LateLintPass, LintContext};\n-use rustc_middle::ty;\n-use rustc_middle::ty::adjustment::{Adjust, Adjustment};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n+use rustc_middle::ty;\n+use rustc_middle::ty::adjustment::{Adjust, Adjustment};\n use rustc_session::lint::FutureIncompatibleInfo;\n use rustc_span::symbol::sym;\n "}, {"sha": "1999a8ec5f60d564a7e913fb43e9bcce7c542e6e", "filename": "src/librustc_lint/late.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flate.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -15,15 +15,15 @@\n //! for all lint attributes.\n \n use crate::{passes::LateLintPassObject, LateContext, LateLintPass, LintStore};\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::walk_list;\n use rustc_data_structures::sync::{join, par_iter, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::intravisit as hir_visit;\n use rustc_hir::intravisit::Visitor;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::lint::LintPass;\n use rustc_span::Span;\n "}, {"sha": "c78b088fb12617935ee5563ce4f78bb4cb8f62ee", "filename": "src/librustc_lint/levels.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flevels.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,5 @@\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::lint::LintDiagnosticBuilder;\n-use rustc_middle::lint::{struct_lint_level, LintLevelMap, LintLevelSets, LintSet, LintSource};\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::unwrap_or;\n@@ -14,6 +9,11 @@ use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_hir::{intravisit, HirId};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_middle::lint::{struct_lint_level, LintLevelMap, LintLevelSets, LintSet, LintSource};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::lint::{builtin, Level, Lint};\n use rustc_session::parse::feature_err;\n use rustc_session::Session;"}, {"sha": "052b461039b23402e6a90dba452b4f25bbe667d7", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc_middle::ty;\n use rustc_ast::ast;\n use rustc_attr as attr;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{GenericParamKind, PatKind};\n+use rustc_middle::ty;\n use rustc_span::symbol::sym;\n use rustc_span::{symbol::Ident, BytePos, Span};\n use rustc_target::spec::abi::Abi;"}, {"sha": "d14a3f0ff067382b6660e94eefe4cdc3267a4de0", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,4 @@\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc_middle::ty::adjustment;\n-use rustc_middle::ty::{self, Ty};\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::util::parser;\n@@ -11,6 +9,8 @@ use rustc_feature::{AttributeType, BuiltinAttribute, BUILTIN_ATTRIBUTE_MAP};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::adjustment;\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::lint::builtin::UNUSED_ATTRIBUTES;\n use rustc_span::symbol::Symbol;\n use rustc_span::symbol::{kw, sym};"}, {"sha": "3e5d7b8efd530a5d31341446639ca9a62f3af454", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,9 +3,6 @@\n use crate::locator::{CrateLocator, CratePaths};\n use crate::rmeta::{CrateDep, CrateMetadata, CrateNumMap, CrateRoot, MetadataBlob};\n \n-use rustc_middle::middle::cstore::DepKind;\n-use rustc_middle::middle::cstore::{CrateSource, ExternCrate, ExternCrateSource, MetadataLoaderDyn};\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::expand::allocator::{global_allocator_spans, AllocatorKind};\n use rustc_ast::{ast, attr};\n use rustc_data_structures::svh::Svh;\n@@ -15,6 +12,11 @@ use rustc_expand::base::SyntaxExtension;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_hir::definitions::Definitions;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::middle::cstore::DepKind;\n+use rustc_middle::middle::cstore::{\n+    CrateSource, ExternCrate, ExternCrateSource, MetadataLoaderDyn,\n+};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config;\n use rustc_session::output::validate_crate_name;\n use rustc_session::search_paths::PathKind;"}, {"sha": "91654067f08155e3206c8a359d3d1db26bcbe2b3", "filename": "src/librustc_metadata/dependency_format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdependency_format.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -53,12 +53,12 @@\n \n use crate::creader::CStore;\n \n+use rustc_data_structures::fx::FxHashMap;\n+use rustc_hir::def_id::CrateNum;\n use rustc_middle::middle::cstore::LinkagePreference::{self, RequireDynamic, RequireStatic};\n use rustc_middle::middle::cstore::{self, DepKind};\n use rustc_middle::middle::dependency_format::{Dependencies, DependencyList, Linkage};\n use rustc_middle::ty::TyCtxt;\n-use rustc_data_structures::fx::FxHashMap;\n-use rustc_hir::def_id::CrateNum;\n use rustc_session::config;\n use rustc_target::spec::PanicStrategy;\n "}, {"sha": "b312aa37d46b027936e5eab75afaee9ed8b532bf", "filename": "src/librustc_metadata/foreign_modules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Fforeign_modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Fforeign_modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fforeign_modules.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n-use rustc_middle::middle::cstore::ForeignModule;\n-use rustc_middle::ty::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::middle::cstore::ForeignModule;\n+use rustc_middle::ty::TyCtxt;\n \n crate fn collect(tcx: TyCtxt<'_>) -> Vec<ForeignModule> {\n     let mut collector = Collector { tcx, modules: Vec::new() };"}, {"sha": "2dd4a9c9dbcb114a113cc0951ed430365bb968cb", "filename": "src/librustc_metadata/link_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Flink_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Flink_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flink_args.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n-use rustc_middle::ty::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "d56c8490ef5eea949bca79187a652c1c3db28199", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -215,11 +215,11 @@\n use crate::creader::Library;\n use crate::rmeta::{rustc_version, MetadataBlob, METADATA_HEADER};\n \n-use rustc_middle::middle::cstore::{CrateSource, MetadataLoader};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n use rustc_errors::{struct_span_err, DiagnosticBuilder};\n+use rustc_middle::middle::cstore::{CrateSource, MetadataLoader};\n use rustc_session::filesearch::{FileDoesntMatch, FileMatches, FileSearch};\n use rustc_session::search_paths::PathKind;\n use rustc_session::{config, CrateDisambiguator, Session};"}, {"sha": "e952051eb9f6d662db838c894cc527e9125af078", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n-use rustc_middle::middle::cstore::{self, NativeLibrary};\n-use rustc_middle::ty::TyCtxt;\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::middle::cstore::{self, NativeLibrary};\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::parse::feature_err;\n use rustc_session::Session;\n use rustc_span::source_map::Span;"}, {"sha": "004c5f2ebb7f41d19584953db4b8b3e977e5a3a9", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,17 +4,6 @@ use crate::creader::CrateMetadataRef;\n use crate::rmeta::table::{FixedSizeEncoding, Table};\n use crate::rmeta::*;\n \n-use rustc_middle::dep_graph::{self, DepNode, DepNodeExt, DepNodeIndex};\n-use rustc_middle::hir::exports::Export;\n-use rustc_middle::middle::cstore::{CrateSource, ExternCrate};\n-use rustc_middle::middle::cstore::{ForeignModule, LinkagePreference, NativeLibrary};\n-use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n-use rustc_middle::middle::lang_items;\n-use rustc_middle::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n-use rustc_middle::mir::{self, interpret, BodyAndCache, Promoted};\n-use rustc_middle::ty::codec::TyDecoder;\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_middle::util::common::record_time;\n use rustc_ast::ast::{self, Ident};\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n@@ -30,6 +19,17 @@ use rustc_hir::def_id::{CrateNum, DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX,\n use rustc_hir::definitions::DefPathTable;\n use rustc_hir::definitions::{DefKey, DefPath, DefPathData, DefPathHash};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::dep_graph::{self, DepNode, DepNodeExt, DepNodeIndex};\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::{CrateSource, ExternCrate};\n+use rustc_middle::middle::cstore::{ForeignModule, LinkagePreference, NativeLibrary};\n+use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n+use rustc_middle::mir::{self, interpret, BodyAndCache, Promoted};\n+use rustc_middle::ty::codec::TyDecoder;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::util::common::record_time;\n use rustc_serialize::{opaque, Decodable, Decoder, SpecializedDecoder};\n use rustc_session::Session;\n use rustc_span::source_map::{self, respan, Spanned};"}, {"sha": "c99b1dc360682955fb0b8772fe5d612f578342a5", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,13 +4,6 @@ use crate::link_args;\n use crate::native_libs;\n use crate::rmeta::{self, encoder};\n \n-use rustc_middle::hir::exports::Export;\n-use rustc_middle::middle::cstore::{CrateSource, CrateStore, EncodedMetadata, NativeLibraryKind};\n-use rustc_middle::middle::exported_symbols::ExportedSymbol;\n-use rustc_middle::middle::stability::DeprecationEntry;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::query::QueryConfig;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::expand::allocator::AllocatorKind;\n@@ -19,6 +12,13 @@ use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::definitions::DefPathTable;\n use rustc_hir::definitions::{DefKey, DefPath, DefPathHash};\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::{CrateSource, CrateStore, EncodedMetadata, NativeLibraryKind};\n+use rustc_middle::middle::exported_symbols::ExportedSymbol;\n+use rustc_middle::middle::stability::DeprecationEntry;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::query::QueryConfig;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::{CrateDisambiguator, Session};\n use rustc_span::source_map::{self, Span, Spanned};\n use rustc_span::symbol::Symbol;"}, {"sha": "aeea7db9e9e8bc403045b3ef88e41c6f7c58352d", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,16 +2,6 @@ use crate::rmeta::table::FixedSizeEncoding;\n use crate::rmeta::*;\n \n use log::{debug, trace};\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::cstore::{EncodedMetadata, ForeignModule, LinkagePreference, NativeLibrary};\n-use rustc_middle::middle::dependency_format::Linkage;\n-use rustc_middle::middle::exported_symbols::{metadata_symbol_name, ExportedSymbol, SymbolExportLevel};\n-use rustc_middle::middle::lang_items;\n-use rustc_middle::mir::{self, interpret};\n-use rustc_middle::traits::specialization_graph;\n-use rustc_middle::ty::codec::{self as ty_codec, TyEncoder};\n-use rustc_middle::ty::layout::VariantIdx;\n-use rustc_middle::ty::{self, SymbolName, Ty, TyCtxt};\n use rustc_ast::ast::{self, Ident};\n use rustc_ast::attr;\n use rustc_data_structures::fingerprint::Fingerprint;\n@@ -27,6 +17,20 @@ use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::{ItemLikeVisitor, ParItemLikeVisitor};\n use rustc_hir::{AnonConst, GenericParamKind};\n use rustc_index::vec::Idx;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::cstore::{\n+    EncodedMetadata, ForeignModule, LinkagePreference, NativeLibrary,\n+};\n+use rustc_middle::middle::dependency_format::Linkage;\n+use rustc_middle::middle::exported_symbols::{\n+    metadata_symbol_name, ExportedSymbol, SymbolExportLevel,\n+};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir::{self, interpret};\n+use rustc_middle::traits::specialization_graph;\n+use rustc_middle::ty::codec::{self as ty_codec, TyEncoder};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, SymbolName, Ty, TyCtxt};\n use rustc_serialize::{opaque, Encodable, Encoder, SpecializedEncoder};\n use rustc_session::config::{self, CrateType};\n use rustc_span::source_map::Spanned;"}, {"sha": "d0ad76b0fc7ea6302c2ac60ee032da82f74c5c1b", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,6 @@\n use decoder::Metadata;\n use table::{Table, TableBuilder};\n \n-use rustc_middle::hir::exports::Export;\n-use rustc_middle::middle::cstore::{DepKind, ForeignModule, LinkagePreference, NativeLibrary};\n-use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n-use rustc_middle::middle::lang_items;\n-use rustc_middle::mir;\n-use rustc_middle::ty::{self, ReprOptions, Ty};\n use rustc_ast::ast::{self, MacroDef};\n use rustc_attr as attr;\n use rustc_data_structures::svh::Svh;\n@@ -15,6 +9,12 @@ use rustc_hir as hir;\n use rustc_hir::def::CtorKind;\n use rustc_hir::def_id::{DefId, DefIndex};\n use rustc_index::vec::IndexVec;\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::{DepKind, ForeignModule, LinkagePreference, NativeLibrary};\n+use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, ReprOptions, Ty};\n use rustc_serialize::opaque::Encoder;\n use rustc_session::config::SymbolManglingVersion;\n use rustc_session::CrateDisambiguator;"}, {"sha": "0ade0829ec306b95ada1ae985b296a84defe90dc", "filename": "src/librustc_mir/borrow_check/borrow_set.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,13 +3,13 @@ use crate::borrow_check::path_utils::allow_two_phase_borrow;\n use crate::borrow_check::place_ext::PlaceExt;\n use crate::dataflow::indexes::BorrowIndex;\n use crate::dataflow::move_paths::MoveData;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::IndexVec;\n use rustc_middle::mir::traversal;\n use rustc_middle::mir::visit::{MutatingUseContext, NonUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::{self, Body, Local, Location, ReadOnlyBodyAndCache};\n use rustc_middle::ty::{RegionVid, TyCtxt};\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_index::bit_set::BitSet;\n-use rustc_index::vec::IndexVec;\n use std::fmt;\n use std::ops::Index;\n "}, {"sha": "c7f395885a557ac81483bb11b82f3db610603696", "filename": "src/librustc_mir/borrow_check/constraint_generation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraint_generation.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,3 +1,4 @@\n+use rustc_infer::infer::InferCtxt;\n use rustc_middle::mir::visit::TyContext;\n use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::{\n@@ -7,7 +8,6 @@ use rustc_middle::mir::{\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, RegionVid, Ty};\n-use rustc_infer::infer::InferCtxt;\n \n use crate::borrow_check::{\n     borrow_set::BorrowSet, facts::AllFacts, location::LocationTable, nll::ToRegionVid,"}, {"sha": "f3f6b8c10da7ce1d47949d5acc341b4bf5f3b605", "filename": "src/librustc_mir/borrow_check/constraints/graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fgraph.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n-use rustc_middle::mir::ConstraintCategory;\n-use rustc_middle::ty::RegionVid;\n use rustc_data_structures::graph;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::RegionVid;\n use rustc_span::DUMMY_SP;\n \n use crate::borrow_check::{"}, {"sha": "3772b7d8f986db68d79db028e181c9f8c6558dff", "filename": "src/librustc_mir/borrow_check/constraints/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconstraints%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n-use rustc_middle::mir::ConstraintCategory;\n-use rustc_middle::ty::RegionVid;\n use rustc_data_structures::graph::scc::Sccs;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::RegionVid;\n use std::fmt;\n use std::ops::Index;\n "}, {"sha": "ca42ac805ec72266fe0cb2acf2814debe7310170", "filename": "src/librustc_mir/borrow_check/diagnostics/explain_borrow.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fexplain_borrow.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,16 +2,16 @@\n \n use std::collections::VecDeque;\n \n+use rustc_data_structures::fx::FxHashSet;\n+use rustc_errors::{Applicability, DiagnosticBuilder};\n+use rustc_index::vec::IndexVec;\n+use rustc_infer::infer::NLLRegionVariableOrigin;\n use rustc_middle::mir::{\n     Body, CastKind, ConstraintCategory, FakeReadCause, Local, Location, Operand, Place, Rvalue,\n     Statement, StatementKind, TerminatorKind,\n };\n use rustc_middle::ty::adjustment::PointerCast;\n use rustc_middle::ty::{self, RegionVid, TyCtxt};\n-use rustc_data_structures::fx::FxHashSet;\n-use rustc_errors::{Applicability, DiagnosticBuilder};\n-use rustc_index::vec::IndexVec;\n-use rustc_infer::infer::NLLRegionVariableOrigin;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n "}, {"sha": "6c6bde8ae2cbb89564504e8326e8105001332efb", "filename": "src/librustc_mir/borrow_check/diagnostics/find_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Ffind_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Ffind_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Ffind_use.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -6,10 +6,10 @@ use crate::borrow_check::{\n     region_infer::{Cause, RegionInferenceContext},\n };\n use crate::util::liveness::{self, DefUse};\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_middle::mir::visit::{MirVisitable, PlaceContext, Visitor};\n use rustc_middle::mir::{Body, Local, Location};\n use rustc_middle::ty::{RegionVid, TyCtxt};\n-use rustc_data_structures::fx::FxHashSet;\n \n crate fn find<'tcx>(\n     body: &Body<'tcx>,"}, {"sha": "2991f29949aa0f4ac40c327592f7f27cdd046649", "filename": "src/librustc_mir/borrow_check/diagnostics/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,17 +1,17 @@\n //! Borrow checker diagnostics.\n \n+use rustc_errors::DiagnosticBuilder;\n+use rustc_hir as hir;\n+use rustc_hir::def::Namespace;\n+use rustc_hir::def_id::DefId;\n+use rustc_hir::GeneratorKind;\n use rustc_middle::mir::{\n     AggregateKind, Constant, Field, Local, LocalInfo, LocalKind, Location, Operand, Place,\n     PlaceRef, ProjectionElem, Rvalue, Statement, StatementKind, Terminator, TerminatorKind,\n };\n use rustc_middle::ty::layout::VariantIdx;\n use rustc_middle::ty::print::Print;\n use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt};\n-use rustc_errors::DiagnosticBuilder;\n-use rustc_hir as hir;\n-use rustc_hir::def::Namespace;\n-use rustc_hir::def_id::DefId;\n-use rustc_hir::GeneratorKind;\n use rustc_span::Span;\n \n use super::borrow_set::BorrowData;"}, {"sha": "3c198dc74ce85018fbd096f64ec87bec8e161e21", "filename": "src/librustc_mir/borrow_check/diagnostics/move_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmove_errors.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n+use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_middle::mir::*;\n use rustc_middle::ty;\n-use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::{Span, Symbol};\n "}, {"sha": "5d6d287b72a3904e6728b989900480b170a1e8cc", "filename": "src/librustc_mir/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n-use rustc_middle::mir::{self, ClearCrossCrate, Local, LocalInfo, Location};\n-use rustc_middle::mir::{Mutability, Place, PlaceRef, ProjectionElem};\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::Node;\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::{self, ClearCrossCrate, Local, LocalInfo, Location};\n+use rustc_middle::mir::{Mutability, Place, PlaceRef, ProjectionElem};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::source_map::DesugaringKind;\n use rustc_span::symbol::kw;\n use rustc_span::Span;"}, {"sha": "dd970d800fba0907a68174a2d2d6b6289a00e91d", "filename": "src/librustc_mir/borrow_check/diagnostics/outlives_suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,9 +4,9 @@\n use std::collections::BTreeMap;\n \n use log::debug;\n-use rustc_middle::ty::RegionVid;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::DiagnosticBuilder;\n+use rustc_middle::ty::RegionVid;\n \n use smallvec::SmallVec;\n "}, {"sha": "98c0542f9c0dc31323378206200d64dca5cc7079", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n //! Error reporting machinery for lifetime errors.\n \n-use rustc_middle::mir::ConstraintCategory;\n-use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_infer::infer::{\n     error_reporting::nice_region_error::NiceRegionError,\n     error_reporting::unexpected_hidden_region_diagnostic, NLLRegionVariableOrigin,\n };\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_span::symbol::kw;\n use rustc_span::Span;\n "}, {"sha": "a085c2f7f69c906b2a1b27eae44bbd4c81efbfeb", "filename": "src/librustc_mir/borrow_check/diagnostics/region_name.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,11 +1,11 @@\n use std::fmt::{self, Display};\n \n-use rustc_middle::ty::print::RegionHighlightMode;\n-use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n+use rustc_middle::ty::print::RegionHighlightMode;\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::{self, RegionVid, Ty};\n use rustc_span::symbol::kw;\n use rustc_span::{symbol::Symbol, Span, DUMMY_SP};\n "}, {"sha": "a850b85e9bbaef80809f1e48b2812c02691b435b", "filename": "src/librustc_mir/borrow_check/diagnostics/var_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n use crate::borrow_check::Upvar;\n use crate::borrow_check::{nll::ToRegionVid, region_infer::RegionInferenceContext};\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::{Body, Local};\n use rustc_middle::ty::{RegionVid, TyCtxt};\n-use rustc_index::vec::{Idx, IndexVec};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n "}, {"sha": "6d6b94ecf644026f70e30da8d874c6d300517d6d", "filename": "src/librustc_mir/borrow_check/facts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ffacts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ffacts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ffacts.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,9 +2,9 @@ use crate::borrow_check::location::{LocationIndex, LocationTable};\n use crate::dataflow::indexes::{BorrowIndex, MovePathIndex};\n use polonius_engine::AllFacts as PoloniusFacts;\n use polonius_engine::Atom;\n+use rustc_index::vec::Idx;\n use rustc_middle::mir::Local;\n use rustc_middle::ty::{RegionVid, TyCtxt};\n-use rustc_index::vec::Idx;\n use std::error::Error;\n use std::fmt::Debug;\n use std::fs::{self, File};"}, {"sha": "1639b7262b0059bdba0b83a2fc90be3bdb737f75", "filename": "src/librustc_mir/borrow_check/invalidation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n+use rustc_data_structures::graph::dominators::Dominators;\n use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::TerminatorKind;\n use rustc_middle::mir::{BasicBlock, Body, Location, Place, ReadOnlyBodyAndCache, Rvalue};\n use rustc_middle::mir::{BorrowKind, Mutability, Operand};\n use rustc_middle::mir::{Statement, StatementKind};\n use rustc_middle::ty::TyCtxt;\n-use rustc_data_structures::graph::dominators::Dominators;\n \n use crate::dataflow::indexes::BorrowIndex;\n "}, {"sha": "375ff72679f8f72a2c8abef9395349594f23be43", "filename": "src/librustc_mir/borrow_check/location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Flocation.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,5 @@\n-use rustc_middle::mir::{BasicBlock, Body, Location};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::mir::{BasicBlock, Body, Location};\n \n /// Maps between a MIR Location, which identifies a particular\n /// statement within a basic block, to a \"rich location\", which"}, {"sha": "0aeabdb4dca9d5a01541226eb83787ed5a8e89c8", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,5 @@\n //! This query borrow-checks the MIR to (further) ensure it is not broken.\n \n-use rustc_middle::mir::{\n-    read_only, traversal, Body, BodyAndCache, ClearCrossCrate, Local, Location, Mutability,\n-    Operand, Place, PlaceElem, PlaceRef, ReadOnlyBodyAndCache,\n-};\n-use rustc_middle::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind};\n-use rustc_middle::mir::{Field, ProjectionElem, Promoted, Rvalue, Statement, StatementKind};\n-use rustc_middle::mir::{Terminator, TerminatorKind};\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, RegionVid, TyCtxt};\n use rustc_ast::ast::Name;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::graph::dominators::Dominators;\n@@ -18,6 +9,15 @@ use rustc_hir::{def_id::DefId, HirId, Node};\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n+use rustc_middle::mir::{\n+    read_only, traversal, Body, BodyAndCache, ClearCrossCrate, Local, Location, Mutability,\n+    Operand, Place, PlaceElem, PlaceRef, ReadOnlyBodyAndCache,\n+};\n+use rustc_middle::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind};\n+use rustc_middle::mir::{Field, ProjectionElem, Promoted, Rvalue, Statement, StatementKind};\n+use rustc_middle::mir::{Terminator, TerminatorKind};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, RegionVid, TyCtxt};\n use rustc_session::lint::builtin::{MUTABLE_BORROW_RESERVATION_CONFLICT, UNUSED_MUT};\n use rustc_span::{Span, DUMMY_SP};\n "}, {"sha": "83e017c31373c0055f4ec0f2b7b7ff5b028ec89f", "filename": "src/librustc_mir/borrow_check/nll.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,15 +1,15 @@\n //! The entry point of the NLL borrow checker.\n \n-use rustc_middle::mir::{\n-    BasicBlock, Body, BodyAndCache, ClosureOutlivesSubject, ClosureRegionRequirements, LocalKind,\n-    Location, Promoted, ReadOnlyBodyAndCache,\n-};\n-use rustc_middle::ty::{self, RegionKind, RegionVid};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Diagnostic;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::IndexVec;\n use rustc_infer::infer::InferCtxt;\n+use rustc_middle::mir::{\n+    BasicBlock, Body, BodyAndCache, ClosureOutlivesSubject, ClosureRegionRequirements, LocalKind,\n+    Location, Promoted, ReadOnlyBodyAndCache,\n+};\n+use rustc_middle::ty::{self, RegionKind, RegionVid};\n use rustc_span::symbol::sym;\n use std::env;\n use std::fmt::Debug;"}, {"sha": "aa5065300eae9825683c4604878eddfc9b2f6bad", "filename": "src/librustc_mir/borrow_check/path_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,10 +2,10 @@ use crate::borrow_check::borrow_set::{BorrowData, BorrowSet, TwoPhaseActivation}\n use crate::borrow_check::places_conflict;\n use crate::borrow_check::AccessDepth;\n use crate::dataflow::indexes::BorrowIndex;\n+use rustc_data_structures::graph::dominators::Dominators;\n use rustc_middle::mir::BorrowKind;\n use rustc_middle::mir::{BasicBlock, Body, Location, Place};\n use rustc_middle::ty::TyCtxt;\n-use rustc_data_structures::graph::dominators::Dominators;\n \n /// Returns `true` if the borrow represented by `kind` is\n /// allowed to be split into separate Reservation and"}, {"sha": "e53f50326d3d230b382dc3d3218fa073a028cf1d", "filename": "src/librustc_mir/borrow_check/place_ext.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n use crate::borrow_check::borrow_set::LocalsStateAtExit;\n+use rustc_hir as hir;\n use rustc_middle::mir::ProjectionElem;\n use rustc_middle::mir::{Body, Mutability, Place};\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_hir as hir;\n \n /// Extension methods for the `Place` type.\n crate trait PlaceExt<'tcx> {"}, {"sha": "876c9728d00553862c14eec87e167cf54cc090a8", "filename": "src/librustc_mir/borrow_check/places_conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n use crate::borrow_check::ArtificialField;\n use crate::borrow_check::Overlap;\n use crate::borrow_check::{AccessDepth, Deep, Shallow};\n+use rustc_hir as hir;\n use rustc_middle::mir::{Body, BorrowKind, Local, Place, PlaceElem, PlaceRef, ProjectionElem};\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_hir as hir;\n use std::cmp::max;\n \n /// When checking if a place conflicts with another place, this enum is used to influence decisions"}, {"sha": "e3d0cdbd18820768c67ef487bbd135bf74bfabeb", "filename": "src/librustc_mir/borrow_check/prefixes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fprefixes.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -9,9 +9,9 @@\n \n use super::MirBorrowckCtxt;\n \n+use rustc_hir as hir;\n use rustc_middle::mir::{Place, PlaceRef, ProjectionElem, ReadOnlyBodyAndCache};\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_hir as hir;\n \n pub trait IsPrefixOf<'tcx> {\n     fn is_prefix_of(&self, other: PlaceRef<'tcx>) -> bool;"}, {"sha": "7e352bfba77bc0b18a233f9137332939de9f4e97", "filename": "src/librustc_mir/borrow_check/region_infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n-use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::InferCtxt;\n+use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n use rustc_trait_selection::opaque_types::InferCtxtExt;\n "}, {"sha": "5d345a6e63d6b1c8394abd53452dfcfe03676742", "filename": "src/librustc_mir/borrow_check/region_infer/reverse_sccs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Freverse_sccs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Freverse_sccs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Freverse_sccs.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n use crate::borrow_check::constraints::ConstraintSccIndex;\n use crate::borrow_check::RegionInferenceContext;\n use itertools::Itertools;\n-use rustc_middle::ty::RegionVid;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::graph::vec_graph::VecGraph;\n use rustc_data_structures::graph::WithSuccessors;\n+use rustc_middle::ty::RegionVid;\n use std::ops::Range;\n use std::rc::Rc;\n "}, {"sha": "5310fd4abafe59475e0d21d9dda1b5fc4a64d138", "filename": "src/librustc_mir/borrow_check/region_infer/values.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n-use rustc_middle::mir::{BasicBlock, Body, Location, ReadOnlyBodyAndCache};\n-use rustc_middle::ty::{self, RegionVid};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::bit_set::{HybridBitSet, SparseBitMatrix};\n use rustc_index::vec::Idx;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::{BasicBlock, Body, Location, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{self, RegionVid};\n use std::fmt::Debug;\n use std::rc::Rc;\n "}, {"sha": "a1d7bc1462f95c2f6eb459e3bd9026c075867353", "filename": "src/librustc_mir/borrow_check/renumber.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Frenumber.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n+use rustc_index::vec::IndexVec;\n+use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n use rustc_middle::mir::visit::{MutVisitor, TyContext};\n use rustc_middle::mir::{BodyAndCache, Location, PlaceElem, Promoted};\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use rustc_index::vec::IndexVec;\n-use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n \n /// Replaces all free regions appearing in the MIR with fresh\n /// inference variables, returning the number of variables created."}, {"sha": "8e4f44e8195a84c2176f2c6be0cbf37384b46a1f", "filename": "src/librustc_mir/borrow_check/type_check/constraint_conversion.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fconstraint_conversion.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n-use rustc_middle::mir::ConstraintCategory;\n-use rustc_middle::ty::subst::GenericArgKind;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_infer::infer::canonical::QueryOutlivesConstraint;\n use rustc_infer::infer::canonical::QueryRegionConstraints;\n use rustc_infer::infer::outlives::env::RegionBoundPairs;\n use rustc_infer::infer::outlives::obligations::{TypeOutlives, TypeOutlivesDelegate};\n use rustc_infer::infer::region_constraints::{GenericKind, VerifyBound};\n use rustc_infer::infer::{self, InferCtxt, SubregionOrigin};\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::DUMMY_SP;\n \n use crate::borrow_check::{"}, {"sha": "0583295bfca776e303f9f9f454faedc1ba42fff4", "filename": "src/librustc_mir/borrow_check/type_check/free_region_relations.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Ffree_region_relations.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,13 +1,13 @@\n-use rustc_middle::mir::ConstraintCategory;\n-use rustc_middle::traits::query::OutlivesBound;\n-use rustc_middle::ty::free_region_map::FreeRegionRelations;\n-use rustc_middle::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_data_structures::frozen::Frozen;\n use rustc_data_structures::transitive_relation::TransitiveRelation;\n use rustc_infer::infer::canonical::QueryRegionConstraints;\n use rustc_infer::infer::outlives;\n use rustc_infer::infer::region_constraints::GenericKind;\n use rustc_infer::infer::InferCtxt;\n+use rustc_middle::mir::ConstraintCategory;\n+use rustc_middle::traits::query::OutlivesBound;\n+use rustc_middle::ty::free_region_map::FreeRegionRelations;\n+use rustc_middle::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_span::DUMMY_SP;\n use rustc_trait_selection::traits::query::type_op::{self, TypeOp};\n use std::rc::Rc;"}, {"sha": "83ee46acdc45bb98517d9011d924a89a67eb1902", "filename": "src/librustc_mir/borrow_check/type_check/input_output.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Finput_output.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -7,9 +7,9 @@\n //! `RETURN_PLACE` the MIR arguments) are always fully normalized (and\n //! contain revealed `impl Trait` values).\n \n+use rustc_infer::infer::LateBoundRegionConversionTime;\n use rustc_middle::mir::*;\n use rustc_middle::ty::Ty;\n-use rustc_infer::infer::LateBoundRegionConversionTime;\n \n use rustc_index::vec::Idx;\n use rustc_span::Span;"}, {"sha": "88e2109b1b29f212658093948bc7478fa97851e8", "filename": "src/librustc_mir/borrow_check/type_check/liveness/local_use_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Flocal_use_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Flocal_use_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Flocal_use_map.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n-use rustc_middle::mir::visit::{PlaceContext, Visitor};\n-use rustc_middle::mir::{Local, Location, ReadOnlyBodyAndCache};\n use rustc_data_structures::vec_linked_list as vll;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::visit::{PlaceContext, Visitor};\n+use rustc_middle::mir::{Local, Location, ReadOnlyBodyAndCache};\n \n use crate::util::liveness::{categorize, DefUse};\n "}, {"sha": "13bdaa357ce41158d91d62f716f3cb888c5b8741", "filename": "src/librustc_mir/borrow_check/type_check/liveness/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_middle::mir::{Body, Local, ReadOnlyBodyAndCache};\n use rustc_middle::ty::{RegionVid, TyCtxt};\n-use rustc_data_structures::fx::FxHashSet;\n use std::rc::Rc;\n \n use crate::dataflow::move_paths::MoveData;"}, {"sha": "fe5c020c8bb194a7fa4ea572e613606f343b4b81", "filename": "src/librustc_mir/borrow_check/type_check/liveness/trace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n-use rustc_middle::mir::{BasicBlock, ConstraintCategory, Local, Location, ReadOnlyBodyAndCache};\n-use rustc_middle::ty::{Ty, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::bit_set::HybridBitSet;\n use rustc_infer::infer::canonical::QueryRegionConstraints;\n+use rustc_middle::mir::{BasicBlock, ConstraintCategory, Local, Location, ReadOnlyBodyAndCache};\n+use rustc_middle::ty::{Ty, TypeFoldable};\n use rustc_trait_selection::traits::query::dropck_outlives::DropckOutlivesResult;\n use rustc_trait_selection::traits::query::type_op::outlives::DropckOutlives;\n use rustc_trait_selection::traits::query::type_op::TypeOp;"}, {"sha": "b9a76057d51f8c62a0ee61e1fe8da3294a245d4d", "filename": "src/librustc_mir/borrow_check/type_check/relate_tys.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Frelate_tys.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n+use rustc_infer::infer::nll_relate::{NormalizationStrategy, TypeRelating, TypeRelatingDelegate};\n+use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n use rustc_middle::mir::ConstraintCategory;\n use rustc_middle::ty::relate::TypeRelation;\n use rustc_middle::ty::{self, Ty};\n-use rustc_infer::infer::nll_relate::{NormalizationStrategy, TypeRelating, TypeRelatingDelegate};\n-use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n use rustc_trait_selection::traits::query::Fallible;\n use rustc_trait_selection::traits::DomainGoal;\n "}, {"sha": "c31f5a57ebc22bc2680f5dd2b22e179db78a607d", "filename": "src/librustc_mir/borrow_check/universal_regions.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -13,17 +13,17 @@\n //! just returns them for other code to use.\n \n use either::Either;\n-use rustc_middle::middle::lang_items;\n-use rustc_middle::ty::fold::TypeFoldable;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n-use rustc_middle::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::DiagnosticBuilder;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{BodyOwnerKind, HirId};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_infer::infer::{InferCtxt, NLLRegionVariableOrigin};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n+use rustc_middle::ty::{self, RegionVid, Ty, TyCtxt};\n use std::iter;\n \n use crate::borrow_check::nll::ToRegionVid;"}, {"sha": "8ae4f9f4a0d6e8583caada48a0b091eb1e13679c", "filename": "src/librustc_mir/const_eval/fn_queries.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n-use rustc_middle::hir::map::blocks::FnLikeNode;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_attr as attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n+use rustc_middle::hir::map::blocks::FnLikeNode;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::Symbol;\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "ee6fab43fa5c27fbf9b53dbc2e3d0c1aa97995c2", "filename": "src/librustc_mir/const_eval/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -7,8 +7,8 @@ use std::hash::Hash;\n \n use rustc_data_structures::fx::FxHashMap;\n \n-use rustc_middle::mir::AssertMessage;\n use rustc_ast::ast::Mutability;\n+use rustc_middle::mir::AssertMessage;\n use rustc_span::symbol::Symbol;\n use rustc_span::{def_id::DefId, Span};\n "}, {"sha": "ed7c75f2f9d976ad5c0d4d2636b7dce0f0e95dba", "filename": "src/librustc_mir/dataflow/framework/cursor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fcursor.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,8 +2,8 @@\n \n use std::borrow::Borrow;\n \n-use rustc_middle::mir::{self, BasicBlock, Location, TerminatorKind};\n use rustc_index::bit_set::BitSet;\n+use rustc_middle::mir::{self, BasicBlock, Location, TerminatorKind};\n \n use super::{Analysis, Results};\n "}, {"sha": "fc2a1bc62a6cf78bd9fb92fa2923b4e139bfdfac", "filename": "src/librustc_mir/dataflow/framework/engine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,13 +4,13 @@ use std::ffi::OsString;\n use std::fs;\n use std::path::PathBuf;\n \n-use rustc_middle::mir::{self, traversal, BasicBlock, Location};\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_ast::ast;\n use rustc_data_structures::work_queue::WorkQueue;\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::{self, traversal, BasicBlock, Location};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::symbol::{sym, Symbol};\n \n use super::graphviz;"}, {"sha": "a85c428d3bfa4cc00ae554492727ed4843f4996b", "filename": "src/librustc_mir/dataflow/framework/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fgraphviz.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,10 +3,10 @@\n use std::cell::RefCell;\n use std::{io, ops, str};\n \n-use rustc_middle::mir::{self, BasicBlock, Body, Location};\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::{BitSet, HybridBitSet};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::mir::{self, BasicBlock, Body, Location};\n \n use super::{Analysis, GenKillSet, Results, ResultsRefCursor};\n use crate::util::graphviz_safe_def_name;"}, {"sha": "91c4b5ad634cbcf823249a7eb99f39d0de7d7b68", "filename": "src/librustc_mir/dataflow/framework/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -32,12 +32,12 @@\n \n use std::io;\n \n-use rustc_middle::mir::{self, BasicBlock, Location};\n-use rustc_middle::ty::layout::VariantIdx;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::{BitSet, HybridBitSet};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_middle::mir::{self, BasicBlock, Location};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, TyCtxt};\n \n mod cursor;\n mod engine;"}, {"sha": "c38cb456667fb10f8199397b5b21cb3c2bcc040e", "filename": "src/librustc_mir/dataflow/framework/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Ftests.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n //! A test for the logic that updates the state in a `ResultsCursor` during seek.\n \n-use rustc_middle::mir::{self, BasicBlock, Location};\n-use rustc_middle::ty;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::{self, BasicBlock, Location};\n+use rustc_middle::ty;\n use rustc_span::DUMMY_SP;\n \n use super::*;"}, {"sha": "9561b68398d5d862f478c97252f81fcf7ddb23df", "filename": "src/librustc_mir/dataflow/framework/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fvisitor.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,5 @@\n-use rustc_middle::mir::{self, BasicBlock, Location};\n use rustc_index::bit_set::BitSet;\n+use rustc_middle::mir::{self, BasicBlock, Location};\n \n use super::{Analysis, Results};\n use crate::dataflow::impls::{borrows::Borrows, EverInitializedPlaces, MaybeUninitializedPlaces};"}, {"sha": "e74d27bafb2d90c588c1163e605fe45bfa9c1bf0", "filename": "src/librustc_mir/dataflow/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgraphviz.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n //! Hook into libgraphviz for rendering dataflow graphs for MIR.\n \n-use rustc_middle::mir::{BasicBlock, Body};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::mir::{BasicBlock, Body};\n \n use std::fs;\n use std::io;"}, {"sha": "3572d460274bc553fecf501ee5f3102965a53eaa", "filename": "src/librustc_mir/dataflow/impls/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,11 +2,11 @@\n //! bitvectors attached to each basic block, represented via a\n //! zero-sized structure.\n \n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::Idx;\n use rustc_middle::mir::{self, Body, Location};\n use rustc_middle::ty::layout::VariantIdx;\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_index::bit_set::BitSet;\n-use rustc_index::vec::Idx;\n \n use super::MoveDataParamEnv;\n "}, {"sha": "d244587fcc8c227b94f3c0109fe4ca5e6d086b33", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,5 @@\n-use rustc_middle::ty;\n use rustc_ast::ast::{self, MetaItem};\n+use rustc_middle::ty;\n use rustc_span::symbol::{sym, Symbol};\n \n pub(crate) use self::drop_flag_effects::*;"}, {"sha": "6918d165a2bc5b1d4bb9d6688755386838e90d58", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n+use rustc_index::vec::IndexVec;\n use rustc_middle::mir::tcx::RvalueInitializationState;\n use rustc_middle::mir::*;\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_index::vec::IndexVec;\n use smallvec::{smallvec, SmallVec};\n \n use std::convert::TryInto;"}, {"sha": "d66d2625d78eaafcbb0ed747af3dc71ee7e5e5c6", "filename": "src/librustc_mir/dataflow/move_paths/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n use core::slice::Iter;\n-use rustc_middle::mir::*;\n-use rustc_middle::ty::{ParamEnv, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_index::vec::{Enumerated, IndexVec};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{ParamEnv, Ty, TyCtxt};\n use rustc_span::Span;\n use smallvec::SmallVec;\n "}, {"sha": "215c7bb7475932a2ed42af98111781d723870401", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,6 @@\n use std::convert::TryFrom;\n \n+use super::{FnVal, ImmTy, Immediate, InterpCx, Machine, OpTy, PlaceTy};\n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::{Float, FloatConvert};\n use rustc_ast::ast::FloatTy;\n@@ -11,8 +12,6 @@ use rustc_middle::ty::{self, Ty, TypeAndMut, TypeFoldable};\n use rustc_span::symbol::sym;\n use rustc_target::abi::LayoutOf;\n \n-use super::{FnVal, ImmTy, Immediate, InterpCx, Machine, OpTy, PlaceTy};\n-\n impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     pub fn cast(\n         &mut self,"}, {"sha": "af415b3837fdf80fb541f4a71bacdbb06cc64c9d", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,10 +4,10 @@\n //! memory, we need to extract all memory allocations to the global memory pool so they stay around.\n \n use super::validity::RefTracking;\n-use rustc_middle::mir::interpret::{ErrorHandled, InterpResult};\n-use rustc_middle::ty::{self, Ty};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n+use rustc_middle::mir::interpret::{ErrorHandled, InterpResult};\n+use rustc_middle::ty::{self, Ty};\n \n use rustc_ast::ast::Mutability;\n "}, {"sha": "c5f7a94969b2da3d1175653b444a463a272a1369", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,6 +4,7 @@\n \n use std::convert::TryFrom;\n \n+use rustc_hir::def_id::DefId;\n use rustc_middle::mir::{\n     self,\n     interpret::{ConstValue, GlobalId, InterpResult, Scalar},\n@@ -13,7 +14,6 @@ use rustc_middle::ty;\n use rustc_middle::ty::layout::{LayoutOf, Primitive, Size};\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::TyCtxt;\n-use rustc_hir::def_id::DefId;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n "}, {"sha": "30dcb5deb35d84e856270f5aff8f259fa089614c", "filename": "src/librustc_mir/interpret/intrinsics/type_name.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n+use rustc_hir::def_id::CrateNum;\n+use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use rustc_middle::mir::interpret::Allocation;\n use rustc_middle::ty::{\n     self,\n     print::{PrettyPrinter, Print, Printer},\n     subst::{GenericArg, GenericArgKind},\n     Ty, TyCtxt,\n };\n-use rustc_hir::def_id::CrateNum;\n-use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use std::fmt::Write;\n \n struct AbsolutePathPrinter<'tcx> {"}, {"sha": "9443ae116fcfd345bf3b9cddda53a852b37b6319", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -11,9 +11,9 @@ use std::collections::VecDeque;\n use std::convert::TryFrom;\n use std::ptr;\n \n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_middle::ty::layout::{Align, HasDataLayout, Size, TargetDataLayout};\n use rustc_middle::ty::{self, query::TyCtxtAt, Instance, ParamEnv};\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n \n use rustc_ast::ast::Mutability;\n "}, {"sha": "42b4f62a08c614cae79f07897d84194609ca2bf3", "filename": "src/librustc_mir/interpret/operator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperator.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n use std::convert::TryFrom;\n \n+use rustc_apfloat::Float;\n+use rustc_ast::ast::FloatTy;\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::{InterpResult, Scalar};\n use rustc_middle::ty::{\n     self,\n     layout::{LayoutOf, TyAndLayout},\n     Ty,\n };\n-use rustc_apfloat::Float;\n-use rustc_ast::ast::FloatTy;\n \n use super::{ImmTy, Immediate, InterpCx, Machine, PlaceTy};\n "}, {"sha": "939a8d837b8be7406c479a795b78e771a727dd77", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -176,6 +176,12 @@\n \n use crate::monomorphize;\n \n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::sync::{par_iter, MTLock, MTRef, ParallelIterator};\n+use rustc_hir as hir;\n+use rustc_hir::def_id::{DefId, DefIdMap, LOCAL_CRATE};\n+use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_index::bit_set::GrowableBitSet;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::middle::lang_items::{ExchangeMallocFnLangItem, StartFnLangItem};\n use rustc_middle::mir::interpret::{AllocId, ConstValue};\n@@ -187,12 +193,6 @@ use rustc_middle::ty::adjustment::{CustomCoerceUnsized, PointerCast};\n use rustc_middle::ty::print::obsolete::DefPathBasedNames;\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::{self, GenericParamDefKind, Instance, Ty, TyCtxt, TypeFoldable};\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_data_structures::sync::{par_iter, MTLock, MTRef, ParallelIterator};\n-use rustc_hir as hir;\n-use rustc_hir::def_id::{DefId, DefIdMap, LOCAL_CRATE};\n-use rustc_hir::itemlikevisit::ItemLikeVisitor;\n-use rustc_index::bit_set::GrowableBitSet;\n use rustc_session::config::EntryFnType;\n use smallvec::SmallVec;\n use std::iter;"}, {"sha": "ba01e370aaef59b2ac5b56650b83e641e74cb48a", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -96,17 +96,17 @@ use std::cmp;\n use std::collections::hash_map::Entry;\n use std::sync::Arc;\n \n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::sync;\n+use rustc_hir::def::DefKind;\n+use rustc_hir::def_id::{CrateNum, DefId, DefIdSet, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::middle::exported_symbols::SymbolExportLevel;\n use rustc_middle::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, Linkage, Visibility};\n use rustc_middle::mir::mono::{InstantiationMode, MonoItem};\n use rustc_middle::ty::print::characteristic_def_id_of_type;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, DefIdTree, InstanceDef, TyCtxt};\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_data_structures::sync;\n-use rustc_hir::def::DefKind;\n-use rustc_hir::def_id::{CrateNum, DefId, DefIdSet, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_span::symbol::Symbol;\n \n use crate::monomorphize::collector::InliningMap;"}, {"sha": "98a95801f1b403cd0aeb25af6dfbc6d92aca7b08", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n+use rustc_hir as hir;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::mir::*;\n use rustc_middle::ty::layout::VariantIdx;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n \n use rustc_index::vec::{Idx, IndexVec};\n "}, {"sha": "6deb5d6485ae1649668725b078ea14b59356d698", "filename": "src/librustc_mir/transform/add_call_guards.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fadd_call_guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fadd_call_guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_call_guards.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n use crate::transform::{MirPass, MirSource};\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n-use rustc_index::vec::{Idx, IndexVec};\n \n #[derive(PartialEq)]\n pub enum AddCallGuards {"}, {"sha": "98a148d60ba3706c5f2117fee1b9ca69d3ab10f4", "filename": "src/librustc_mir/transform/add_moves_for_packed_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fadd_moves_for_packed_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fadd_moves_for_packed_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_moves_for_packed_drops.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n+use rustc_hir::def_id::DefId;\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n-use rustc_hir::def_id::DefId;\n \n use crate::transform::{MirPass, MirSource};\n use crate::util;"}, {"sha": "bce3a506b1dd9bc257f26b6070cdb6bb62a02a12", "filename": "src/librustc_mir/transform/check_consts/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,10 +4,10 @@\n //! has interior mutability or needs to be dropped, as well as the visitor that emits errors when\n //! it finds operations that are invalid in a certain context.\n \n-use rustc_middle::mir;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::mir;\n+use rustc_middle::ty::{self, TyCtxt};\n \n use std::fmt;\n "}, {"sha": "d39904a56c8b6d7b1df00db75b0b9b42ab68b61d", "filename": "src/librustc_mir/transform/check_consts/resolver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fresolver.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,9 +2,9 @@\n //!\n //! This contains the dataflow analysis used to track `Qualif`s on complex control-flow graphs.\n \n+use rustc_index::bit_set::BitSet;\n use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::{self, BasicBlock, Local, Location};\n-use rustc_index::bit_set::BitSet;\n \n use std::marker::PhantomData;\n "}, {"sha": "c8320a1561ae89d314086f8195d425e1c56cfd63", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n //! The `Visitor` responsible for actually checking a `mir::Body` for invalid operations.\n \n+use rustc_errors::struct_span_err;\n+use rustc_hir::{def_id::DefId, HirId};\n+use rustc_index::bit_set::BitSet;\n+use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::middle::lang_items;\n use rustc_middle::mir::visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::*;\n use rustc_middle::ty::cast::CastTy;\n use rustc_middle::ty::{self, Instance, InstanceDef, TyCtxt};\n-use rustc_errors::struct_span_err;\n-use rustc_hir::{def_id::DefId, HirId};\n-use rustc_index::bit_set::BitSet;\n-use rustc_infer::infer::TyCtxtInferExt;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;"}, {"sha": "d22e0d513cf20a3484ebe64dce3b89f740acfa17", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n-use rustc_middle::mir::visit::{MutatingUseContext, PlaceContext, Visitor};\n-use rustc_middle::mir::*;\n-use rustc_middle::ty::cast::CastTy;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit;\n use rustc_hir::Node;\n+use rustc_middle::mir::visit::{MutatingUseContext, PlaceContext, Visitor};\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::cast::CastTy;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::lint::builtin::{SAFE_PACKED_BORROWS, UNUSED_UNSAFE};\n use rustc_span::symbol::{sym, Symbol};\n "}, {"sha": "fc382312aeb5030a243231e9a8e451d6354a88a6", "filename": "src/librustc_mir/transform/elaborate_drops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Felaborate_drops.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -9,12 +9,12 @@ use crate::transform::{MirPass, MirSource};\n use crate::util::elaborate_drops::{elaborate_drop, DropFlagState, Unwind};\n use crate::util::elaborate_drops::{DropElaborator, DropFlagMode, DropStyle};\n use crate::util::patch::MirPatch;\n-use rustc_middle::mir::*;\n-use rustc_middle::ty::layout::VariantIdx;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_index::bit_set::BitSet;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::Span;\n use std::fmt;\n "}, {"sha": "aa247a00849fc1dbce0f5bba9cb4330292ba2933", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -56,17 +56,17 @@ use crate::transform::simplify;\n use crate::transform::{MirPass, MirSource};\n use crate::util::dump_mir;\n use crate::util::liveness;\n+use rustc_data_structures::fx::FxHashMap;\n+use rustc_hir as hir;\n+use rustc_hir::def_id::DefId;\n+use rustc_index::bit_set::{BitMatrix, BitSet};\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::visit::{MutVisitor, PlaceContext, Visitor};\n use rustc_middle::mir::*;\n use rustc_middle::ty::layout::VariantIdx;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::GeneratorSubsts;\n use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt};\n-use rustc_data_structures::fx::FxHashMap;\n-use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n-use rustc_index::bit_set::{BitMatrix, BitSet};\n-use rustc_index::vec::{Idx, IndexVec};\n use std::borrow::Cow;\n use std::iter;\n "}, {"sha": "2c27d4c0d278633b1d2f746c4003e5ba5b5acf6e", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n //! Inlining pass for MIR functions\n \n+use rustc_attr as attr;\n+use rustc_hir::def_id::DefId;\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::mir::visit::*;\n use rustc_middle::mir::*;\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n use rustc_middle::ty::{self, Instance, InstanceDef, ParamEnv, Ty, TyCtxt};\n-use rustc_attr as attr;\n-use rustc_hir::def_id::DefId;\n-use rustc_index::bit_set::BitSet;\n-use rustc_index::vec::{Idx, IndexVec};\n use rustc_session::config::Sanitizer;\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "3a60048b0ef4e6bc54db60c39e24c38691d485f1", "filename": "src/librustc_mir/transform/instcombine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finstcombine.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n //! Performs various peephole optimizations.\n \n use crate::transform::{MirPass, MirSource};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_index::vec::Idx;\n use rustc_middle::mir::visit::{MutVisitor, Visitor};\n use rustc_middle::mir::{\n     read_only, Body, BodyAndCache, Constant, Local, Location, Operand, Place, PlaceRef,\n     ProjectionElem, Rvalue,\n };\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_index::vec::Idx;\n use std::mem;\n \n pub struct InstCombine;"}, {"sha": "18b3e88c86fee88901fdb351e8f9b01705d66567", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,13 +1,13 @@\n use crate::{shim, util};\n-use rustc_middle::mir::{BodyAndCache, ConstQualifs, MirPhase, Promoted};\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::steal::Steal;\n-use rustc_middle::ty::{InstanceDef, TyCtxt, TypeFoldable};\n use rustc_ast::ast;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, DefIdSet, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_index::vec::IndexVec;\n+use rustc_middle::mir::{BodyAndCache, ConstQualifs, MirPhase, Promoted};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::steal::Steal;\n+use rustc_middle::ty::{InstanceDef, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n use std::borrow::Cow;\n "}, {"sha": "12f3ed6986fafdf1831352030d05790574b093bc", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -12,14 +12,14 @@\n //! initialization and can otherwise silence errors, if\n //! move analysis runs after promotion on broken MIR.\n \n+use rustc_ast::ast::LitKind;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::mir::traversal::ReversePostorder;\n use rustc_middle::mir::visit::{MutVisitor, MutatingUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::*;\n use rustc_middle::ty::cast::CastTy;\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::{self, List, TyCtxt, TypeFoldable};\n-use rustc_ast::ast::LitKind;\n-use rustc_hir::def_id::DefId;\n use rustc_span::symbol::sym;\n use rustc_span::{Span, DUMMY_SP};\n "}, {"sha": "31ffed4cb7b2708326a7a9f2590d5ebe8f283ac6", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n-use rustc_middle::mir::*;\n-use rustc_middle::ty::{self, adjustment::PointerCast, Predicate, Ty, TyCtxt};\n use rustc_attr as attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, adjustment::PointerCast, Predicate, Ty, TyCtxt};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use std::borrow::Cow;"}, {"sha": "b188e39eda0f3c8781e45ccd8f0d6becd123e4aa", "filename": "src/librustc_mir/transform/remove_noop_landing_pads.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n use crate::transform::{MirPass, MirSource};\n use crate::util::patch::MirPatch;\n+use rustc_index::bit_set::BitSet;\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n-use rustc_index::bit_set::BitSet;\n \n /// A pass that removes noop landing pads and replaces jumps to them with\n /// `None`. This is important because otherwise LLVM generates terrible"}, {"sha": "06a697e18da5621ddd7fcc620b9d5d0e9f21d03a", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,10 +4,10 @@ use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n \n use crate::transform::{MirPass, MirSource};\n-use rustc_middle::mir::{self, Body, BodyAndCache, Local, Location};\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;\n+use rustc_middle::mir::{self, Body, BodyAndCache, Local, Location};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n use crate::dataflow::move_paths::{HasMoveData, MoveData};\n use crate::dataflow::move_paths::{LookupResult, MovePathIndex};"}, {"sha": "faee077f51e1ab06ff515118c92ee6a1fe75d133", "filename": "src/librustc_mir/transform/simplify.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -28,11 +28,11 @@\n //! return.\n \n use crate::transform::{MirPass, MirSource};\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::visit::{MutVisitor, MutatingUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::*;\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_index::bit_set::BitSet;\n-use rustc_index::vec::{Idx, IndexVec};\n use std::borrow::Cow;\n \n pub struct SimplifyCfg {"}, {"sha": "8f636582673faaa09c8a00faccdfe02438d31d59", "filename": "src/librustc_mir/transform/unreachable_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Funreachable_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Ftransform%2Funreachable_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Funreachable_prop.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,9 +4,9 @@\n \n use crate::transform::simplify;\n use crate::transform::{MirPass, MirSource};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use std::borrow::Cow;\n \n pub struct UnreachablePropagation;"}, {"sha": "b22dbf40b5019f1204546de98ddf2574501814a4", "filename": "src/librustc_mir/util/aggregate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Faggregate.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n+use rustc_index::vec::Idx;\n use rustc_middle::mir::*;\n use rustc_middle::ty::layout::VariantIdx;\n use rustc_middle::ty::{Ty, TyCtxt};\n-use rustc_index::vec::Idx;\n \n use std::iter::TrustedLen;\n "}, {"sha": "808dd833774e42567fd0b7cf078ac96c0221f612", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,5 @@\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_errors::{struct_span_err, DiagnosticBuilder, DiagnosticId};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::{MultiSpan, Span};\n \n impl<'cx, 'tcx> crate::borrow_check::MirBorrowckCtxt<'cx, 'tcx> {"}, {"sha": "6b5f6aa991c1ea1306dfdc94a61a89e79118591f", "filename": "src/librustc_mir/util/def_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fdef_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fdef_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fdef_use.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,11 +1,11 @@\n //! Def-use analysis.\n \n+use rustc_index::vec::IndexVec;\n use rustc_middle::mir::visit::{MutVisitor, PlaceContext, Visitor};\n use rustc_middle::mir::{\n     Body, BodyAndCache, Local, Location, PlaceElem, ReadOnlyBodyAndCache, VarDebugInfo,\n };\n use rustc_middle::ty::TyCtxt;\n-use rustc_index::vec::IndexVec;\n use std::mem;\n \n pub struct DefUseAnalysis {"}, {"sha": "7063ed1edc82218642246aa63eb7f8903798b7ff", "filename": "src/librustc_mir/util/elaborate_drops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,13 +1,13 @@\n use crate::util::patch::MirPatch;\n+use rustc_hir as hir;\n+use rustc_index::vec::Idx;\n use rustc_middle::middle::lang_items;\n use rustc_middle::mir::*;\n use rustc_middle::traits::Reveal;\n use rustc_middle::ty::layout::VariantIdx;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::util::IntTypeExt;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_hir as hir;\n-use rustc_index::vec::Idx;\n use std::fmt;\n \n use std::convert::TryInto;"}, {"sha": "aed29a076a426983cc8005a1ac149091acd44000", "filename": "src/librustc_mir/util/graphviz.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n-use rustc_middle::mir::*;\n-use rustc_middle::ty::TyCtxt;\n use rustc_hir::def_id::DefId;\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n use std::fmt::Debug;\n use std::io::{self, Write};\n "}, {"sha": "2c6149b9deb47c86eb4ca16a3a2aa5a1f1c6ad12", "filename": "src/librustc_mir/util/liveness.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fliveness.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -26,15 +26,15 @@\n \n use crate::transform::MirSource;\n use crate::util::pretty::{dump_enabled, write_basic_block, write_mir_intro};\n+use rustc_data_structures::work_queue::WorkQueue;\n+use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::visit::{\n     MutatingUseContext, NonMutatingUseContext, NonUseContext, PlaceContext, Visitor,\n };\n use rustc_middle::mir::Local;\n use rustc_middle::mir::*;\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_data_structures::work_queue::WorkQueue;\n-use rustc_index::bit_set::BitSet;\n-use rustc_index::vec::{Idx, IndexVec};\n use std::fs;\n use std::io::{self, BufWriter, Write};\n use std::path::{Path, PathBuf};"}, {"sha": "46f42f4db05fd07c50a975060cf14bd0d037b443", "filename": "src/librustc_mir/util/patch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fpatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fpatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpatch.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n+use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::*;\n use rustc_middle::ty::Ty;\n-use rustc_index::vec::{Idx, IndexVec};\n use rustc_span::Span;\n \n /// This struct represents a patch to MIR, which can add"}, {"sha": "26e6073bd5667aa381a17e8de93500ecd1038cec", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,13 +1,15 @@\n use super::graphviz::write_mir_fn_graphviz;\n use crate::transform::MirSource;\n use either::Either;\n-use rustc_middle::mir::interpret::{read_target_uint, AllocId, Allocation, ConstValue, GlobalAlloc};\n-use rustc_middle::mir::visit::Visitor;\n-use rustc_middle::mir::*;\n-use rustc_middle::ty::{self, layout::Size, TyCtxt, TypeFoldable, TypeVisitor};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::interpret::{\n+    read_target_uint, AllocId, Allocation, ConstValue, GlobalAlloc,\n+};\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::{self, layout::Size, TyCtxt, TypeFoldable, TypeVisitor};\n use std::collections::BTreeSet;\n use std::fmt::Display;\n use std::fmt::Write as _;"}, {"sha": "667f29337c2b68201ffdad05c7901d73099468ea", "filename": "src/librustc_mir_build/hair/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fconstant.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n+use rustc_ast::ast;\n use rustc_middle::mir::interpret::{\n     truncate, Allocation, ConstValue, LitToConstError, LitToConstInput, Scalar,\n };\n use rustc_middle::ty::{self, layout::Size, ParamEnv, TyCtxt, TyS};\n-use rustc_ast::ast;\n use rustc_span::symbol::Symbol;\n \n crate fn lit_to_const<'tcx>("}, {"sha": "c7b53024666d96b951e503460851c868f47a4f79", "filename": "src/librustc_mir_build/hair/cx/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fblock.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,9 +2,9 @@ use crate::hair::cx::to_ref::ToRef;\n use crate::hair::cx::Cx;\n use crate::hair::{self, *};\n \n+use rustc_hir as hir;\n use rustc_middle::middle::region;\n use rustc_middle::ty;\n-use rustc_hir as hir;\n \n use rustc_index::vec::Idx;\n "}, {"sha": "21d632b9f6b831ae320223cfcb94a68f95bd6b67", "filename": "src/librustc_mir_build/hair/cx/expr.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,14 +3,16 @@ use crate::hair::cx::to_ref::ToRef;\n use crate::hair::cx::Cx;\n use crate::hair::util::UserAnnotatedTyHelpers;\n use crate::hair::*;\n+use rustc_hir as hir;\n+use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n+use rustc_index::vec::Idx;\n use rustc_middle::mir::interpret::Scalar;\n use rustc_middle::mir::BorrowKind;\n-use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow, AutoBorrowMutability, PointerCast};\n+use rustc_middle::ty::adjustment::{\n+    Adjust, Adjustment, AutoBorrow, AutoBorrowMutability, PointerCast,\n+};\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n use rustc_middle::ty::{self, AdtKind, Ty};\n-use rustc_hir as hir;\n-use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n-use rustc_index::vec::Idx;\n use rustc_span::Span;\n \n impl<'tcx> Mirror<'tcx> for &'tcx hir::Expr<'tcx> {"}, {"sha": "13a476775db02f2e6a489c01aff10efc2922e05c", "filename": "src/librustc_mir_build/hair/cx/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -5,19 +5,19 @@\n use crate::hair::util::UserAnnotatedTyHelpers;\n use crate::hair::*;\n \n-use rustc_middle::middle::region;\n-use rustc_middle::mir::interpret::{LitToConstError, LitToConstInput};\n-use rustc_middle::ty::layout::VariantIdx;\n-use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::subst::{GenericArg, InternalSubsts};\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::Node;\n use rustc_index::vec::Idx;\n use rustc_infer::infer::InferCtxt;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::interpret::{LitToConstError, LitToConstInput};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::subst::{GenericArg, InternalSubsts};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_trait_selection::infer::InferCtxtExt;\n "}, {"sha": "fadfc7660d4f9c02723a56be2dff0cde793f5191", "filename": "src/librustc_mir_build/hair/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -5,15 +5,15 @@\n //! structures.\n \n use self::cx::Cx;\n+use rustc_hir as hir;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::infer::canonical::Canonical;\n use rustc_middle::middle::region;\n use rustc_middle::mir::{BinOp, BorrowKind, Field, UnOp};\n use rustc_middle::ty::adjustment::PointerCast;\n use rustc_middle::ty::layout::VariantIdx;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{AdtDef, Const, Ty, UpvarSubsts, UserType};\n-use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n use rustc_span::Span;\n \n crate mod constant;"}, {"sha": "9b40a8e6bfbc84b9392c0d0a0cb10a6b83748815", "filename": "src/librustc_mir_build/hair/pattern/_match.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -235,14 +235,14 @@ use rustc_index::vec::Idx;\n use super::{compare_const_vals, PatternFoldable, PatternFolder};\n use super::{FieldPat, Pat, PatKind, PatRange};\n \n+use rustc_attr::{SignedInt, UnsignedInt};\n+use rustc_hir::def_id::DefId;\n+use rustc_hir::{HirId, RangeEnd};\n use rustc_middle::mir::interpret::{truncate, AllocId, ConstValue, Pointer, Scalar};\n use rustc_middle::mir::Field;\n use rustc_middle::ty::layout::{Integer, IntegerExt, Size, VariantIdx};\n use rustc_middle::ty::{self, Const, Ty, TyCtxt, TypeFoldable, VariantDef};\n use rustc_middle::util::common::ErrorReported;\n-use rustc_attr::{SignedInt, UnsignedInt};\n-use rustc_hir::def_id::DefId;\n-use rustc_hir::{HirId, RangeEnd};\n use rustc_session::lint;\n use rustc_span::{Span, DUMMY_SP};\n "}, {"sha": "50034fb02ace9c3b2ebaaddb46fdc416aee7183e", "filename": "src/librustc_mir_build/hair/pattern/const_to_pat.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n-use rustc_middle::mir::Field;\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_index::vec::Idx;\n use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n+use rustc_middle::mir::Field;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_session::lint;\n use rustc_span::Span;\n use rustc_trait_selection::traits::predicate_for_trait_def;"}, {"sha": "d40d3922f18c4c3fd57d64b89fa228d9f569f17a", "filename": "src/librustc_mir_build/hair/pattern/mod.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -8,21 +8,23 @@ pub(crate) use self::check_match::check_match;\n \n use crate::hair::util::UserAnnotatedTyHelpers;\n \n-use rustc_middle::mir::interpret::{get_slice_bytes, sign_extend, ConstValue, ErrorHandled};\n-use rustc_middle::mir::interpret::{LitToConstError, LitToConstInput};\n-use rustc_middle::mir::UserTypeProjection;\n-use rustc_middle::mir::{BorrowKind, Field, Mutability};\n-use rustc_middle::ty::layout::VariantIdx;\n-use rustc_middle::ty::subst::{GenericArg, SubstsRef};\n-use rustc_middle::ty::{self, AdtDef, DefIdTree, Region, Ty, TyCtxt, UserType};\n-use rustc_middle::ty::{CanonicalUserType, CanonicalUserTypeAnnotation, CanonicalUserTypeAnnotations};\n use rustc_ast::ast;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n use rustc_hir::pat_util::EnumerateAndAdjustIterator;\n use rustc_hir::RangeEnd;\n use rustc_index::vec::Idx;\n+use rustc_middle::mir::interpret::{get_slice_bytes, sign_extend, ConstValue, ErrorHandled};\n+use rustc_middle::mir::interpret::{LitToConstError, LitToConstInput};\n+use rustc_middle::mir::UserTypeProjection;\n+use rustc_middle::mir::{BorrowKind, Field, Mutability};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::subst::{GenericArg, SubstsRef};\n+use rustc_middle::ty::{self, AdtDef, DefIdTree, Region, Ty, TyCtxt, UserType};\n+use rustc_middle::ty::{\n+    CanonicalUserType, CanonicalUserTypeAnnotation, CanonicalUserTypeAnnotations,\n+};\n use rustc_span::{Span, DUMMY_SP};\n \n use std::cmp::Ordering;\n@@ -1044,8 +1046,8 @@ crate fn compare_const_vals<'tcx>(\n                 l.partial_cmp(&r)\n             }\n             ty::Int(ity) => {\n-                use rustc_middle::ty::layout::{Integer, IntegerExt};\n                 use rustc_attr::SignedInt;\n+                use rustc_middle::ty::layout::{Integer, IntegerExt};\n                 let size = Integer::from_attr(&tcx, SignedInt(ity)).size();\n                 let a = sign_extend(a, size);\n                 let b = sign_extend(b, size);"}, {"sha": "0ea0d5d1b0c19118753428f99b17017a6e64dfb5", "filename": "src/librustc_mir_build/hair/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Fhair%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Futil.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,5 @@\n-use rustc_middle::ty::{self, CanonicalUserType, TyCtxt, UserType};\n use rustc_hir as hir;\n+use rustc_middle::ty::{self, CanonicalUserType, TyCtxt, UserType};\n \n crate trait UserAnnotatedTyHelpers<'tcx> {\n     fn tcx(&self) -> TyCtxt<'tcx>;"}, {"sha": "b1628ec58c3c65620beec2f568022608d51464f5", "filename": "src/librustc_mir_build/lints.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_mir_build%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Flints.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n+use rustc_hir::def_id::DefId;\n+use rustc_hir::intravisit::FnKind;\n+use rustc_index::bit_set::BitSet;\n use rustc_middle::hir::map::blocks::FnLikeNode;\n use rustc_middle::mir::{self, Body, TerminatorKind};\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::{self, AssocItem, AssocItemContainer, Instance, TyCtxt};\n-use rustc_hir::def_id::DefId;\n-use rustc_hir::intravisit::FnKind;\n-use rustc_index::bit_set::BitSet;\n use rustc_session::lint::builtin::UNCONDITIONAL_RECURSION;\n \n crate fn check<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>, def_id: DefId) {"}, {"sha": "f68213cc9c230a131e4142f7ab530397c56876d7", "filename": "src/librustc_passes/check_const.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_const.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -7,14 +7,14 @@\n //! errors. We still look for those primitives in the MIR const-checker to ensure nothing slips\n //! through, but errors for structured control flow in a `const` should be emitted here.\n \n-use rustc_middle::hir::map::Map;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast::Mutability;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config::nightly_options;\n use rustc_session::parse::feature_err;\n use rustc_span::{sym, Span, Symbol};"}, {"sha": "44f73c184000e4ad014d53cf70bce1db77b8261c", "filename": "src/librustc_passes/dead.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,17 +2,17 @@\n // closely. The idea is that all reachable symbols are live, codes called\n // from live codes are live, and everything else is dead.\n \n-use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n-use rustc_middle::middle::privacy;\n-use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{Node, PatKind, TyKind};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n+use rustc_middle::middle::privacy;\n+use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n use rustc_session::lint;\n \n use rustc_ast::{ast, attr};"}, {"sha": "c7210432b1d902da4d77072af5951a60329fc9f5", "filename": "src/librustc_passes/diagnostic_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostic_items.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -9,13 +9,13 @@\n //!\n //! * Compiler internal types like `Ty` and `TyCtxt`\n \n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::{sym, Symbol};\n \n struct DiagnosticItemCollector<'tcx> {"}, {"sha": "678859219eaabc36eb4af4cccc3e42f9d5937ad0", "filename": "src/librustc_passes/entry.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fentry.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::attr;\n use rustc_ast::entry::EntryPointType;\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{HirId, ImplItem, Item, ItemKind, TraitItem};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config::EntryFnType;\n use rustc_session::{config, Session};\n use rustc_span::symbol::sym;"}, {"sha": "f5611654fc061197be5440e25a34292857d4289a", "filename": "src/librustc_passes/hir_id_validator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fhir_id_validator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fhir_id_validator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fhir_id_validator.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::{par_iter, Lock, ParallelIterator};\n use rustc_hir as hir;\n use rustc_hir::def_id::{LocalDefId, CRATE_DEF_INDEX};\n use rustc_hir::intravisit;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{HirId, ItemLocalId};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::TyCtxt;\n \n pub fn check_crate(tcx: TyCtxt<'_>) {\n     tcx.dep_graph.assert_ignored();"}, {"sha": "139ffb9699ad27c986da25866433bd27e5e48a24", "filename": "src/librustc_passes/hir_stats.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fhir_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fhir_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fhir_stats.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,14 +2,14 @@\n // pieces of AST and HIR. The resulting numbers are good approximations but not\n // completely accurate (some things might be counted twice, others missed).\n \n-use rustc_middle::hir::map::Map;\n-use rustc_middle::util::common::to_readable_str;\n use rustc_ast::ast::{self, AttrId, NodeId};\n use rustc_ast::visit as ast_visit;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::intravisit as hir_visit;\n use rustc_hir::HirId;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::util::common::to_readable_str;\n use rustc_span::Span;\n \n #[derive(Copy, Clone, PartialEq, Eq, Hash)]"}, {"sha": "11096c693e6306d0b9993cfaefbac31e3756f957", "filename": "src/librustc_passes/intrinsicck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fintrinsicck.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n-use rustc_middle::ty::layout::{LayoutError, Pointer, SizeSkeleton, VariantIdx};\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_index::vec::Idx;\n+use rustc_middle::ty::layout::{LayoutError, Pointer, SizeSkeleton, VariantIdx};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::{sym, Span};\n use rustc_target::spec::abi::Abi::RustIntrinsic;\n "}, {"sha": "dd972f37569f6c4cc80826c0c6febb835a5d5151", "filename": "src/librustc_passes/lib_features.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib_features.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,14 +4,14 @@\n // and `#[unstable (..)]`), but are not declared in one single location\n // (unlike lang features), which means we need to collect them instead.\n \n-use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::lib_features::LibFeatures;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast::{Attribute, MetaItem, MetaItemKind};\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::lib_features::LibFeatures;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::Symbol;\n use rustc_span::{sym, Span};\n "}, {"sha": "c9060334a9a41a1a655f571e033fbb616523fac2", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -96,9 +96,6 @@\n use self::LiveNodeKind::*;\n use self::VarKind::*;\n \n-use rustc_middle::hir::map::Map;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_errors::Applicability;\n@@ -107,6 +104,9 @@ use rustc_hir::def::*;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{Expr, HirId, HirIdMap, HirIdSet, Node};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::lint;\n use rustc_span::symbol::sym;\n use rustc_span::Span;"}, {"sha": "0fce08192bb3ee8c45c48d8ae0ec33a4c6239f77", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,13 +1,13 @@\n use Context::*;\n \n-use rustc_middle::hir::map::Map;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Destination, Movability, Node};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::Session;\n use rustc_span::Span;\n "}, {"sha": "c0ae6519d2e5697c4c7967d1ec3d5fc21a4aa961", "filename": "src/librustc_passes/reachable.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Freachable.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -5,10 +5,6 @@\n // makes all other generics or inline functions that it references\n // reachable as well.\n \n-use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n-use rustc_middle::middle::privacy;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n use rustc_hir as hir;\n@@ -18,6 +14,10 @@ use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{HirIdSet, Node};\n+use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n+use rustc_middle::middle::privacy;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::config;\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "290454c1673f2eb9f6cecbc8faaf2f7a5ff2cf45", "filename": "src/librustc_passes/region.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fregion.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -6,16 +6,16 @@\n //!\n //! [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/borrow_check.html\n \n-use rustc_middle::middle::region::*;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::walk_list;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Arm, Block, Expr, Local, Node, Pat, PatKind, Stmt};\n use rustc_index::vec::Idx;\n+use rustc_middle::middle::region::*;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::source_map;\n use rustc_span::Span;\n "}, {"sha": "6fbfdbdc4e914bcc12c2ad46151bad3e0345868c", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,11 +1,6 @@\n //! A pass that annotates every item and method with its stability level,\n //! propagating default levels lexically from parent to children ast nodes.\n \n-use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::privacy::AccessLevels;\n-use rustc_middle::middle::stability::{DeprecationEntry, Index};\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast::Attribute;\n use rustc_attr::{self as attr, ConstStability, Stability};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -15,6 +10,11 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Generics, HirId, Item, StructField, Variant};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::privacy::AccessLevels;\n+use rustc_middle::middle::stability::{DeprecationEntry, Index};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::lint;\n use rustc_session::parse::feature_err;\n use rustc_session::Session;"}, {"sha": "fd046d9b66bd440ce242c65cfbf58e1fd6a87846", "filename": "src/librustc_passes/upvars.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fupvars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fupvars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fupvars.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n //! Upvar (closure capture) collection from cross-body HIR uses of `Res::Local`s.\n \n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::{FxHashSet, FxIndexMap};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{self, HirId};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::Span;\n \n pub fn provide(providers: &mut Providers<'_>) {"}, {"sha": "8d11af15b56ff9439e08301cca84d7e915bd8089", "filename": "src/librustc_passes/weak_lang_items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_passes%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fweak_lang_items.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,13 +1,13 @@\n //! Validity checking for weak lang items\n \n-use rustc_middle::middle::lang_items;\n-use rustc_middle::middle::lang_items::whitelisted;\n-use rustc_middle::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::weak_lang_items::WEAK_ITEMS_REFS;\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::middle::lang_items::whitelisted;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::config;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;"}, {"sha": "c7841595fe5a4a468331a44d5b7ddb58c42821a8", "filename": "src/librustc_plugin_impl/build.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_plugin_impl%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_plugin_impl%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2Fbuild.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,11 +1,11 @@\n //! Used by `rustc` when compiling a plugin crate.\n \n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n "}, {"sha": "f41bc44d17705c7eda59273f5f738a30e8eb6eed", "filename": "src/librustc_plugin_impl/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_plugin_impl%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_plugin_impl%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2Fload.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n //! Used by `rustc` when loading a plugin.\n \n use crate::Registry;\n-use rustc_middle::middle::cstore::MetadataLoader;\n use rustc_ast::ast::{Crate, Ident};\n use rustc_errors::struct_span_err;\n use rustc_metadata::locator;\n+use rustc_middle::middle::cstore::MetadataLoader;\n use rustc_session::Session;\n use rustc_span::symbol::sym;\n use rustc_span::Span;"}, {"sha": "428d0a3a4dbcaa8e66a5b18d24d3c19c9ef3b76f", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,13 +3,6 @@\n #![feature(nll)]\n #![recursion_limit = \"256\"]\n \n-use rustc_middle::bug;\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::privacy::{AccessLevel, AccessLevels};\n-use rustc_middle::ty::fold::TypeVisitor;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::InternalSubsts;\n-use rustc_middle::ty::{self, GenericParamDefKind, TraitRef, Ty, TyCtxt, TypeFoldable};\n use rustc_ast::ast::Ident;\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n@@ -19,6 +12,13 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, DeepVisitor, NestedVisitorMap, Visitor};\n use rustc_hir::{AssocItemKind, HirIdSet, Node, PatKind};\n+use rustc_middle::bug;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::privacy::{AccessLevel, AccessLevels};\n+use rustc_middle::ty::fold::TypeVisitor;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::subst::InternalSubsts;\n+use rustc_middle::ty::{self, GenericParamDefKind, TraitRef, Ty, TyCtxt, TypeFoldable};\n use rustc_session::lint;\n use rustc_span::hygiene::Transparency;\n use rustc_span::symbol::{kw, sym};"}, {"sha": "51089f73c28144ed6fa5e270c7307079191fdfb3", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -15,10 +15,6 @@ use crate::{\n };\n use crate::{Module, ModuleData, ModuleKind, NameBinding, NameBindingKind, Segment, ToNameBinding};\n \n-use rustc_middle::bug;\n-use rustc_middle::hir::exports::Export;\n-use rustc_middle::middle::cstore::CrateStore;\n-use rustc_middle::ty;\n use rustc_ast::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n use rustc_ast::ast::{AssocItem, AssocItemKind, MetaItemKind, StmtKind};\n use rustc_ast::ast::{Ident, Name};\n@@ -32,6 +28,10 @@ use rustc_expand::expand::AstFragment;\n use rustc_hir::def::{self, *};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_metadata::creader::LoadedMacro;\n+use rustc_middle::bug;\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::middle::cstore::CrateStore;\n+use rustc_middle::ty;\n use rustc_span::hygiene::{ExpnId, MacroKind};\n use rustc_span::source_map::{respan, Spanned};\n use rustc_span::symbol::{kw, sym};"}, {"sha": "dd286723412dd3051adeb5c13990ff695768207e", "filename": "src/librustc_resolve/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fcheck_unused.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -26,12 +26,12 @@\n use crate::imports::ImportKind;\n use crate::Resolver;\n \n-use rustc_middle::ty;\n use rustc_ast::ast;\n use rustc_ast::node_id::NodeMap;\n use rustc_ast::visit::{self, Visitor};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::pluralize;\n+use rustc_middle::ty;\n use rustc_session::lint::builtin::{MACRO_USE_EXTERN_CRATE, UNUSED_IMPORTS};\n use rustc_session::lint::BuiltinLintDiagnostics;\n use rustc_span::{MultiSpan, Span, DUMMY_SP};"}, {"sha": "b51760cee1ef8ff76b79d99de86006ae2cc1dc3e", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,8 +2,6 @@ use std::cmp::Reverse;\n use std::ptr;\n \n use log::debug;\n-use rustc_middle::bug;\n-use rustc_middle::ty::{self, DefIdTree};\n use rustc_ast::ast::{self, Ident, Path};\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_ast_pretty::pprust;\n@@ -13,6 +11,8 @@ use rustc_feature::BUILTIN_ATTRIBUTES;\n use rustc_hir::def::Namespace::{self, *};\n use rustc_hir::def::{self, CtorKind, CtorOf, DefKind, NonMacroAttrKind};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc_middle::bug;\n+use rustc_middle::ty::{self, DefIdTree};\n use rustc_session::Session;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::SourceMap;"}, {"sha": "5324e370dbdf2adb22bbad8cae4e7bf93765d017", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -9,9 +9,6 @@ use crate::{BindingKey, ModuleKind, ResolutionError, Resolver, Segment};\n use crate::{CrateLint, Module, ModuleOrUniformRoot, ParentScope, PerNS, ScopeSet, Weak};\n use crate::{NameBinding, NameBindingKind, PathResult, PrivacyError, ToNameBinding};\n \n-use rustc_middle::hir::exports::Export;\n-use rustc_middle::ty;\n-use rustc_middle::{bug, span_bug};\n use rustc_ast::ast::{Ident, Name, NodeId};\n use rustc_ast::unwrap_or;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n@@ -20,6 +17,9 @@ use rustc_data_structures::ptr_key::PtrKey;\n use rustc_errors::{pluralize, struct_span_err, Applicability};\n use rustc_hir::def::{self, PartialRes};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::hir::exports::Export;\n+use rustc_middle::ty;\n+use rustc_middle::{bug, span_bug};\n use rustc_session::lint::builtin::{PUB_USE_OF_PRIVATE_EXTERN_CRATE, UNUSED_IMPORTS};\n use rustc_session::lint::BuiltinLintDiagnostics;\n use rustc_session::DiagnosticMessageId;"}, {"sha": "1b40d2bea06c37febdf1bc7d4874888f7920fc52", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -11,7 +11,6 @@ use crate::{path_names_to_string, BindingError, CrateLint, LexicalScopeBinding};\n use crate::{Module, ModuleOrUniformRoot, NameBindingKind, ParentScope, PathResult};\n use crate::{ResolutionError, Resolver, Segment, UseError};\n \n-use rustc_middle::{bug, span_bug};\n use rustc_ast::ast::*;\n use rustc_ast::ptr::P;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n@@ -23,6 +22,7 @@ use rustc_hir::def::Namespace::{self, *};\n use rustc_hir::def::{self, CtorKind, DefKind, PartialRes, PerNS};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc_hir::TraitCandidate;\n+use rustc_middle::{bug, span_bug};\n use rustc_session::lint;\n use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;"}, {"sha": "71ff9e5cbed17ed649350cc9c8962c06c6f0015b", "filename": "src/librustc_resolve/late/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -6,10 +6,6 @@\n //! way. Therefore, we break lifetime name resolution into a separate pass.\n \n use crate::late::diagnostics::{ForLifetimeSpanType, MissingLifetimeSpot};\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::resolve_lifetime::*;\n-use rustc_middle::ty::{self, DefIdTree, GenericParamDefKind, TyCtxt};\n-use rustc_middle::{bug, span_bug};\n use rustc_ast::ast;\n use rustc_ast::attr;\n use rustc_ast::walk_list;\n@@ -21,6 +17,10 @@ use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{GenericArg, GenericParam, LifetimeName, Node, ParamName, QPath};\n use rustc_hir::{GenericParamKind, HirIdMap, HirIdSet, LifetimeParamKind};\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::resolve_lifetime::*;\n+use rustc_middle::ty::{self, DefIdTree, GenericParamDefKind, TyCtxt};\n+use rustc_middle::{bug, span_bug};\n use rustc_session::lint;\n use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;"}, {"sha": "57454b62cdd0f4de239bc372ad4e6e012f27006f", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -16,11 +16,6 @@ pub use rustc_hir::def::{Namespace, PerNS};\n \n use Determinacy::*;\n \n-use rustc_middle::hir::exports::ExportMap;\n-use rustc_middle::middle::cstore::{CrateStore, MetadataLoaderDyn};\n-use rustc_middle::span_bug;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, DefIdTree, ResolverOutputs};\n use rustc_ast::ast::{self, FloatTy, Ident, IntTy, Name, NodeId, UintTy};\n use rustc_ast::ast::{Crate, CRATE_NODE_ID};\n use rustc_ast::ast::{ItemKind, Path};\n@@ -41,6 +36,11 @@ use rustc_hir::definitions::{DefKey, Definitions};\n use rustc_hir::PrimTy::{self, Bool, Char, Float, Int, Str, Uint};\n use rustc_hir::{GlobMap, TraitMap};\n use rustc_metadata::creader::{CStore, CrateLoader};\n+use rustc_middle::hir::exports::ExportMap;\n+use rustc_middle::middle::cstore::{CrateStore, MetadataLoaderDyn};\n+use rustc_middle::span_bug;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, DefIdTree, ResolverOutputs};\n use rustc_session::lint;\n use rustc_session::lint::{BuiltinLintDiagnostics, LintBuffer};\n use rustc_session::Session;"}, {"sha": "5efd3daebb9e2d0aeb60ccf8829e9826fad5b70d", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -6,8 +6,6 @@ use crate::Namespace::*;\n use crate::{AmbiguityError, AmbiguityErrorMisc, AmbiguityKind, Determinacy};\n use crate::{CrateLint, ParentScope, ResolutionError, Resolver, Scope, ScopeSet, Weak};\n use crate::{ModuleKind, ModuleOrUniformRoot, NameBinding, PathResult, Segment, ToNameBinding};\n-use rustc_middle::middle::stability;\n-use rustc_middle::{span_bug, ty};\n use rustc_ast::ast::{self, Ident, NodeId};\n use rustc_ast_pretty::pprust;\n use rustc_attr::{self as attr, StabilityLevel};\n@@ -19,6 +17,8 @@ use rustc_expand::expand::{AstFragment, AstFragmentKind, Invocation, InvocationK\n use rustc_feature::is_builtin_attr_name;\n use rustc_hir::def::{self, DefKind, NonMacroAttrKind};\n use rustc_hir::def_id;\n+use rustc_middle::middle::stability;\n+use rustc_middle::{span_bug, ty};\n use rustc_session::lint::builtin::UNUSED_MACROS;\n use rustc_session::Session;\n use rustc_span::edition::Edition;"}, {"sha": "dc3f110636876a01bd7aba9e505be21265d68817", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -13,8 +13,6 @@\n //! DumpVisitor walks the AST and processes it, and Dumper is used for\n //! recording the output.\n \n-use rustc_middle::span_bug;\n-use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n use rustc_ast::ast::{self, Attribute, NodeId, PatKind};\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n@@ -24,6 +22,8 @@ use rustc_ast_pretty::pprust::{bounds_to_string, generic_params_to_string, ty_to\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def::{DefKind as HirDefKind, Res};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::span_bug;\n+use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n use rustc_session::config::Input;\n use rustc_span::source_map::{respan, DUMMY_SP};\n use rustc_span::*;"}, {"sha": "277848a7d617289d363218d2f7ed7efa4ee9ffc6", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -8,10 +8,6 @@ mod dumper;\n mod span_utils;\n mod sig;\n \n-use rustc_middle::middle::cstore::ExternCrate;\n-use rustc_middle::middle::privacy::AccessLevels;\n-use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n-use rustc_middle::{bug, span_bug};\n use rustc_ast::ast::{self, Attribute, NodeId, PatKind, DUMMY_NODE_ID};\n use rustc_ast::util::comments::strip_doc_comment_decoration;\n use rustc_ast::visit::{self, Visitor};\n@@ -20,6 +16,10 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind as HirDefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::Node;\n+use rustc_middle::middle::cstore::ExternCrate;\n+use rustc_middle::middle::privacy::AccessLevels;\n+use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n+use rustc_middle::{bug, span_bug};\n use rustc_session::config::{CrateType, Input, OutputType};\n use rustc_session::output::{filename_for_metadata, out_filename};\n use rustc_span::source_map::Spanned;"}, {"sha": "e742b445af2161a6f54dc2c9baac178c87805489", "filename": "src/librustc_symbol_mangling/legacy.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Flegacy.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n+use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_hir::def_id::CrateNum;\n+use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use rustc_middle::ich::NodeIdHashingMode;\n use rustc_middle::mir::interpret::{ConstValue, Scalar};\n use rustc_middle::ty::print::{PrettyPrinter, Print, Printer};\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind};\n use rustc_middle::ty::{self, Instance, Ty, TyCtxt, TypeFoldable};\n use rustc_middle::util::common::record_time;\n-use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n-use rustc_hir::def_id::CrateNum;\n-use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n \n use log::debug;\n "}, {"sha": "a20915dd6fcaca3f60490454bb10f38c738341b8", "filename": "src/librustc_symbol_mangling/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_symbol_mangling%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_symbol_mangling%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Ftest.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,8 +4,8 @@\n //! def-path. This is used for unit testing the code that generates\n //! paths etc in all kinds of annoying scenarios.\n \n-use rustc_middle::ty::{Instance, TyCtxt};\n use rustc_hir as hir;\n+use rustc_middle::ty::{Instance, TyCtxt};\n use rustc_span::symbol::{sym, Symbol};\n \n const SYMBOL_NAME: Symbol = sym::rustc_symbol_name;"}, {"sha": "e3358c5706f53c8b5b21d17aa04f8fc182529de3", "filename": "src/librustc_symbol_mangling/v0.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_symbol_mangling%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_symbol_mangling%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Fv0.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n-use rustc_middle::ty::print::{Print, Printer};\n-use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n-use rustc_middle::ty::{self, Instance, Ty, TyCtxt, TypeFoldable};\n use rustc_ast::ast::{FloatTy, IntTy, UintTy};\n use rustc_data_structures::base_n;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n+use rustc_middle::ty::print::{Print, Printer};\n+use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n+use rustc_middle::ty::{self, Instance, Ty, TyCtxt, TypeFoldable};\n use rustc_target::spec::abi::Abi;\n \n use std::fmt::Write;"}, {"sha": "d7a2e720a6d0bd811c5c6b5fcd0610d5b04e8a41", "filename": "src/librustc_trait_selection/infer.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Finfer.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n use crate::traits::query::outlives_bounds::InferCtxtExt as _;\n use crate::traits::{self, TraitEngine, TraitEngineExt};\n \n+use rustc_hir as hir;\n+use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n+use rustc_infer::traits::ObligationCause;\n use rustc_middle::arena::ArenaAllocatable;\n use rustc_middle::infer::canonical::{Canonical, CanonicalizedQueryResponse, QueryResponse};\n use rustc_middle::middle::lang_items;\n use rustc_middle::traits::query::Fallible;\n use rustc_middle::ty::{self, Ty, TypeFoldable};\n-use rustc_hir as hir;\n-use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n-use rustc_infer::traits::ObligationCause;\n use rustc_span::{Span, DUMMY_SP};\n \n use std::fmt::Debug;"}, {"sha": "093873c849a92622e3861d1cb146a491b6f5e1c5", "filename": "src/librustc_trait_selection/opaque_types.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Fopaque_types.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,5 @@\n use crate::infer::InferCtxtExt as _;\n use crate::traits::{self, PredicateObligation};\n-use rustc_middle::ty::fold::{BottomUpFolder, TypeFoldable, TypeFolder, TypeVisitor};\n-use rustc_middle::ty::free_region_map::FreeRegionRelations;\n-use rustc_middle::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n-use rustc_middle::ty::{self, GenericParamDefKind, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::Lrc;\n use rustc_hir as hir;\n@@ -12,6 +8,10 @@ use rustc_hir::Node;\n use rustc_infer::infer::error_reporting::unexpected_hidden_region_diagnostic;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::{self, InferCtxt, InferOk};\n+use rustc_middle::ty::fold::{BottomUpFolder, TypeFoldable, TypeFolder, TypeVisitor};\n+use rustc_middle::ty::free_region_map::FreeRegionRelations;\n+use rustc_middle::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n+use rustc_middle::ty::{self, GenericParamDefKind, Ty, TyCtxt};\n use rustc_session::config::nightly_options;\n use rustc_span::Span;\n "}, {"sha": "a642ae98231380c7458002e09a887c0dc02c3f1e", "filename": "src/librustc_trait_selection/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fcoherence.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -8,10 +8,10 @@ use crate::infer::{CombinedSnapshot, InferOk, TyCtxtInferExt};\n use crate::traits::select::IntercrateAmbiguityCause;\n use crate::traits::SkipLeakCheck;\n use crate::traits::{self, Normalized, Obligation, ObligationCause, SelectionContext};\n+use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;\n "}, {"sha": "7d6b3b52c046f1dc04ff90aeba3deee272c807e5", "filename": "src/librustc_trait_selection/traits/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -11,6 +11,11 @@ use super::{\n use crate::infer::error_reporting::{TyCategory, TypeAnnotationNeeded as ErrorCode};\n use crate::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use crate::infer::{self, InferCtxt, TyCtxtInferExt};\n+use rustc_data_structures::fx::FxHashMap;\n+use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};\n+use rustc_hir as hir;\n+use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_hir::{Node, QPath, TyKind, WhereBoundPredicate, WherePredicate};\n use rustc_middle::mir::interpret::ErrorHandled;\n use rustc_middle::ty::error::ExpectedFound;\n use rustc_middle::ty::fast_reject;\n@@ -19,11 +24,6 @@ use rustc_middle::ty::SubtypePredicate;\n use rustc_middle::ty::{\n     self, AdtKind, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n };\n-use rustc_data_structures::fx::FxHashMap;\n-use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};\n-use rustc_hir as hir;\n-use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n-use rustc_hir::{Node, QPath, TyKind, WhereBoundPredicate, WherePredicate};\n use rustc_session::DiagnosticMessageId;\n use rustc_span::{BytePos, ExpnKind, Span, DUMMY_SP};\n use std::fmt;"}, {"sha": "48a052c608f6fb84b42f7c6a77780d6ab4e881d9", "filename": "src/librustc_trait_selection/traits/error_reporting/on_unimplemented.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,10 +2,10 @@ use super::{\n     ObligationCauseCode, OnUnimplementedDirective, OnUnimplementedNote, PredicateObligation,\n };\n use crate::infer::InferCtxt;\n-use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{self, GenericParamDefKind};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::{self, GenericParamDefKind};\n use rustc_span::symbol::sym;\n \n use super::InferCtxtPrivExt;"}, {"sha": "6a352602e266ae7d559fe6a3f592f921054e74e3", "filename": "src/librustc_trait_selection/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -5,14 +5,16 @@ use super::{\n use crate::infer::InferCtxt;\n use crate::traits::error_reporting::suggest_constraining_type_param;\n \n-use rustc_middle::ty::TypeckTables;\n-use rustc_middle::ty::{self, AdtKind, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_errors::{error_code, struct_span_err, Applicability, DiagnosticBuilder, Style};\n use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::Node;\n+use rustc_middle::ty::TypeckTables;\n+use rustc_middle::ty::{\n+    self, AdtKind, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n+};\n use rustc_span::symbol::{kw, sym};\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use std::fmt;"}, {"sha": "09a33120ba7b6e6d8d0e7651acc0d258e42b6f73", "filename": "src/librustc_trait_selection/traits/fulfill.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ffulfill.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n use crate::infer::{InferCtxt, TyOrConstInferVar};\n-use rustc_middle::ty::error::ExpectedFound;\n-use rustc_middle::ty::{self, ToPolyTraitRef, Ty, TypeFoldable};\n use rustc_data_structures::obligation_forest::ProcessResult;\n use rustc_data_structures::obligation_forest::{DoCompleted, Error, ForestObligation};\n use rustc_data_structures::obligation_forest::{ObligationForest, ObligationProcessor};\n use rustc_infer::traits::{TraitEngine, TraitEngineExt as _};\n+use rustc_middle::ty::error::ExpectedFound;\n+use rustc_middle::ty::{self, ToPolyTraitRef, Ty, TypeFoldable};\n use std::marker::PhantomData;\n \n use super::project;"}, {"sha": "7403b936391ccdb7082953709df1b29c6f404123", "filename": "src/librustc_trait_selection/traits/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fmisc.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,9 +3,9 @@\n use crate::infer::InferCtxtExt as _;\n use crate::traits::{self, ObligationCause};\n \n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_hir as hir;\n use rustc_infer::infer::TyCtxtInferExt;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n \n use crate::traits::error_reporting::InferCtxtExt;\n "}, {"sha": "3ef44a198417a835206e970dc4b79975a7446de3", "filename": "src/librustc_trait_selection/traits/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -24,13 +24,13 @@ use crate::infer::outlives::env::OutlivesEnvironment;\n use crate::infer::{InferCtxt, RegionckMode, TyCtxtInferExt};\n use crate::traits::error_reporting::InferCtxtExt as _;\n use crate::traits::query::evaluate_obligation::InferCtxtExt as _;\n+use rustc_hir as hir;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::middle::region;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n use rustc_middle::ty::{self, GenericParamDefKind, ToPredicate, Ty, TyCtxt, WithConstness};\n use rustc_middle::util::common::ErrorReported;\n-use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n use rustc_span::{Span, DUMMY_SP};\n \n use std::fmt::Debug;"}, {"sha": "3877c7f8a8c8e8e211db90b9c28d0696d919e9f6", "filename": "src/librustc_trait_selection/traits/object_safety.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fobject_safety.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -13,11 +13,11 @@ use super::elaborate_predicates;\n use crate::infer::TyCtxtInferExt;\n use crate::traits::query::evaluate_obligation::InferCtxtExt;\n use crate::traits::{self, Obligation, ObligationCause};\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n-use rustc_middle::ty::{self, Predicate, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_errors::{Applicability, FatalError};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::{self, Predicate, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_session::lint::builtin::WHERE_CLAUSES_OBJECT_SAFETY;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;"}, {"sha": "3c0ebec933539b5b1611f12a2447f4bad1646997", "filename": "src/librustc_trait_selection/traits/query/method_autoderef.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Fmethod_autoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Fmethod_autoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Fmethod_autoderef.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1 +1,3 @@\n-pub use rustc_middle::traits::query::{CandidateStep, MethodAutoderefBadTy, MethodAutoderefStepsResult};\n+pub use rustc_middle::traits::query::{\n+    CandidateStep, MethodAutoderefBadTy, MethodAutoderefStepsResult,\n+};"}, {"sha": "28d59b41e564fe2537d2c7c282ddf5c687201cf4", "filename": "src/librustc_trait_selection/traits/query/normalize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Fnormalize.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -7,10 +7,10 @@ use crate::infer::canonical::OriginalQueryValues;\n use crate::infer::{InferCtxt, InferOk};\n use crate::traits::error_reporting::InferCtxtExt;\n use crate::traits::{Obligation, ObligationCause, PredicateObligation, Reveal};\n+use rustc_infer::traits::Normalized;\n use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_infer::traits::Normalized;\n \n use super::NoSolution;\n "}, {"sha": "a42409515db1efb7f62ef03d2d5808d351242442", "filename": "src/librustc_trait_selection/traits/query/outlives_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Foutlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Foutlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fquery%2Foutlives_bounds.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,9 +2,9 @@ use crate::infer::canonical::OriginalQueryValues;\n use crate::infer::InferCtxt;\n use crate::traits::query::NoSolution;\n use crate::traits::{FulfillmentContext, ObligationCause, TraitEngine};\n-use rustc_middle::ty::{self, Ty};\n use rustc_hir as hir;\n use rustc_infer::traits::TraitEngineExt as _;\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::source_map::Span;\n \n pub use rustc_middle::traits::query::OutlivesBound;"}, {"sha": "1e5a1edd4d8eec6385a20f7dd0a5089cfb7924fd", "filename": "src/librustc_trait_selection/traits/select.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fselect.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -35,17 +35,19 @@ use super::{\n use crate::infer::{CombinedSnapshot, InferCtxt, InferOk, PlaceholderMap, TypeFreshener};\n use crate::traits::error_reporting::InferCtxtExt;\n use crate::traits::project::ProjectionCacheKeyExt;\n-use rustc_middle::dep_graph::{DepKind, DepNodeIndex};\n-use rustc_middle::middle::lang_items;\n-use rustc_middle::ty::fast_reject;\n-use rustc_middle::ty::relate::TypeRelation;\n-use rustc_middle::ty::subst::{Subst, SubstsRef};\n-use rustc_middle::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_ast::attr;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::GrowableBitSet;\n+use rustc_middle::dep_graph::{DepKind, DepNodeIndex};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::ty::fast_reject;\n+use rustc_middle::ty::relate::TypeRelation;\n+use rustc_middle::ty::subst::{Subst, SubstsRef};\n+use rustc_middle::ty::{\n+    self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n+};\n use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "edf02d75ee60f6ad3224ed6b4ae40b71c647ade3", "filename": "src/librustc_trait_selection/traits/specialize/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fspecialize%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -15,12 +15,12 @@ use specialization_graph::GraphExt;\n use crate::infer::{InferCtxt, InferOk, TyCtxtInferExt};\n use crate::traits::select::IntercrateAmbiguityCause;\n use crate::traits::{self, coherence, FutureCompatOverlapErrorKind, ObligationCause, TraitEngine};\n-use rustc_middle::lint::LintDiagnosticBuilder;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n-use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n+use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_session::lint::builtin::COHERENCE_LEAK_CHECK;\n use rustc_session::lint::builtin::ORDER_DEPENDENT_TRAIT_OBJECTS;\n use rustc_span::DUMMY_SP;"}, {"sha": "56b8354d68c05b0fabb8adcf9003ea6860ae6cf9", "filename": "src/librustc_trait_selection/traits/specialize/specialization_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n use super::OverlapError;\n \n use crate::traits;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::ty::fast_reject::{self, SimplifiedType};\n use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n-use rustc_hir::def_id::DefId;\n \n pub use rustc_middle::traits::specialization_graph::*;\n "}, {"sha": "fbe1fcb08f2efa64b87bff929404f9a4bfedb6ae", "filename": "src/librustc_trait_selection/traits/structural_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fstructural_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fstructural_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fstructural_match.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,9 +2,9 @@ use crate::infer::{InferCtxt, TyCtxtInferExt};\n use crate::traits::ObligationCause;\n use crate::traits::{self, ConstPatternStructural, TraitEngine};\n \n-use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt, TypeFoldable, TypeVisitor};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n+use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt, TypeFoldable, TypeVisitor};\n use rustc_span::Span;\n \n #[derive(Debug)]"}, {"sha": "6eeac2f676c099bbd576fd4aff624dfe590735e3", "filename": "src/librustc_trait_selection/traits/util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Futil.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,12 +3,12 @@ use rustc_span::Span;\n use smallvec::smallvec;\n use smallvec::SmallVec;\n \n-use rustc_middle::ty::outlives::Component;\n-use rustc_middle::ty::subst::{GenericArg, Subst, SubstsRef};\n-use rustc_middle::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, WithConstness};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::outlives::Component;\n+use rustc_middle::ty::subst::{GenericArg, Subst, SubstsRef};\n+use rustc_middle::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, WithConstness};\n \n use super::{Normalized, Obligation, ObligationCause, PredicateObligation, SelectionContext};\n "}, {"sha": "ede6fa015fccfa386ec3f9a4edfb7dcfe0b35846", "filename": "src/librustc_trait_selection/traits/wf.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_trait_selection%2Ftraits%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fwf.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,11 +1,11 @@\n use crate::infer::InferCtxt;\n use crate::opaque_types::required_region_bounds;\n use crate::traits::{self, AssocTypeBoundData};\n+use rustc_hir as hir;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::middle::lang_items;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n-use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n use rustc_span::symbol::{kw, Ident};\n use rustc_span::Span;\n "}, {"sha": "93b15e146ec1071dc3743fffe5dd4c2e7d9ccc47", "filename": "src/librustc_traits/dropck_outlives.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fdropck_outlives.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,11 +1,11 @@\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n-use rustc_middle::ty::{self, ParamEnvAnd, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_infer::traits::TraitEngineExt as _;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::{self, ParamEnvAnd, Ty, TyCtxt};\n use rustc_span::source_map::{Span, DUMMY_SP};\n use rustc_trait_selection::traits::query::dropck_outlives::trivial_dropck_outlives;\n use rustc_trait_selection::traits::query::dropck_outlives::{"}, {"sha": "e6afc15fa15feeefe6e9d66cc93f8577d0fe93f0", "filename": "src/librustc_traits/evaluate_obligation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fevaluate_obligation.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n+use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{ParamEnvAnd, TyCtxt};\n-use rustc_infer::infer::TyCtxtInferExt;\n use rustc_span::source_map::DUMMY_SP;\n use rustc_trait_selection::traits::query::CanonicalPredicateGoal;\n use rustc_trait_selection::traits::{"}, {"sha": "28d5d25dd1ba268942caf9d2e99462f9556e530f", "filename": "src/librustc_traits/lowering/environment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Flowering%2Fenvironment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Flowering%2Fenvironment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering%2Fenvironment.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n+use rustc_data_structures::fx::FxHashSet;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::traits::{\n     Clause, Clauses, DomainGoal, Environment, FromEnv, ProgramClause, ProgramClauseCategory,\n };\n use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_data_structures::fx::FxHashSet;\n-use rustc_hir::def_id::DefId;\n \n struct ClauseVisitor<'a, 'tcx> {\n     tcx: TyCtxt<'tcx>,"}, {"sha": "6cbd505f37ef1fc1d9eb8825114a1cef6ed2b9cc", "filename": "src/librustc_traits/lowering/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,11 @@\n mod environment;\n \n+use rustc_ast::ast;\n+use rustc_hir as hir;\n+use rustc_hir::def::DefKind;\n+use rustc_hir::def_id::DefId;\n+use rustc_hir::definitions::DefPathData;\n+use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_middle::hir::map::Map;\n use rustc_middle::traits::{\n     Clause, Clauses, DomainGoal, FromEnv, GoalKind, PolyDomainGoal, ProgramClause,\n@@ -8,12 +14,6 @@ use rustc_middle::traits::{\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::{self, List, TyCtxt};\n-use rustc_ast::ast;\n-use rustc_hir as hir;\n-use rustc_hir::def::DefKind;\n-use rustc_hir::def_id::DefId;\n-use rustc_hir::definitions::DefPathData;\n-use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_span::symbol::sym;\n \n use std::iter;"}, {"sha": "ad6c753edff00d63acbc0a96f197e135f3fce6ea", "filename": "src/librustc_traits/normalize_erasing_regions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Fnormalize_erasing_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Fnormalize_erasing_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fnormalize_erasing_regions.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n+use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::traits::query::NoSolution;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::GenericArg;\n use rustc_middle::ty::{self, ParamEnvAnd, TyCtxt};\n-use rustc_infer::infer::TyCtxtInferExt;\n use rustc_trait_selection::traits::query::normalize::AtExt;\n use rustc_trait_selection::traits::{Normalized, ObligationCause};\n use std::sync::atomic::Ordering;"}, {"sha": "11c97b03c44c3b06ebd7e01da2fa513939f29b9e", "filename": "src/librustc_traits/normalize_projection_ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Fnormalize_projection_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Fnormalize_projection_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fnormalize_projection_ty.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{ParamEnvAnd, TyCtxt};\n use rustc_hir as hir;\n use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_infer::traits::TraitEngineExt as _;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{ParamEnvAnd, TyCtxt};\n use rustc_span::DUMMY_SP;\n use rustc_trait_selection::infer::InferCtxtBuilderExt;\n use rustc_trait_selection::traits::query::{"}, {"sha": "aeb31c2cb7367e6c0a11810b8532b47fd852a9ab", "filename": "src/librustc_traits/type_op.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_traits%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Ftype_op.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{GenericArg, Subst, UserSelfTy, UserSubsts};\n-use rustc_middle::ty::{\n-    FnSig, Lift, ParamEnv, ParamEnvAnd, PolyFnSig, Predicate, Ty, TyCtxt, TypeFoldable, Variance,\n-};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::at::ToTrace;\n use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n use rustc_infer::traits::TraitEngineExt as _;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::subst::{GenericArg, Subst, UserSelfTy, UserSubsts};\n+use rustc_middle::ty::{\n+    FnSig, Lift, ParamEnv, ParamEnvAnd, PolyFnSig, Predicate, Ty, TyCtxt, TypeFoldable, Variance,\n+};\n use rustc_span::DUMMY_SP;\n use rustc_trait_selection::infer::InferCtxtBuilderExt;\n use rustc_trait_selection::infer::InferCtxtExt;"}, {"sha": "597bc8546045daae363258c70af47d8bd039f001", "filename": "src/librustc_ty/common_traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_ty%2Fcommon_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_ty%2Fcommon_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Fcommon_traits.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n //! Queries for checking whether a type implements one of a few common traits.\n \n+use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::middle::lang_items;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_infer::infer::TyCtxtInferExt;\n use rustc_span::DUMMY_SP;\n use rustc_trait_selection::traits;\n "}, {"sha": "6b0104e164bca8de9a5534aa795cefa87bc5e569", "filename": "src/librustc_ty/needs_drop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_ty%2Fneeds_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_ty%2Fneeds_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Fneeds_drop.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n //! Check whether a type has (potentially) non-trivial drop glue.\n \n+use rustc_data_structures::fx::FxHashSet;\n+use rustc_hir::def_id::DefId;\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::util::{needs_drop_components, AlwaysRequiresDrop};\n use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_data_structures::fx::FxHashSet;\n-use rustc_hir::def_id::DefId;\n use rustc_span::DUMMY_SP;\n \n type NeedsDropResult<T> = Result<T, AlwaysRequiresDrop>;"}, {"sha": "9d28447e212a6a0ce63ee3651792e62feec9ed2a", "filename": "src/librustc_ty/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_ty%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_ty%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Fty.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n-use rustc_middle::hir::map as hir_map;\n-use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{self, ToPredicate, Ty, TyCtxt, WithConstness};\n use rustc_data_structures::svh::Svh;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n+use rustc_middle::hir::map as hir_map;\n+use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::{self, ToPredicate, Ty, TyCtxt, WithConstness};\n use rustc_session::CrateDisambiguator;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;"}, {"sha": "aca5624d55c96c2951d37f3de990e4f5926946be", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -10,9 +10,6 @@ use crate::middle::lang_items::SizedTraitLangItem;\n use crate::middle::resolve_lifetime as rl;\n use crate::require_c_abi_if_c_variadic;\n use crate::util::common::ErrorReported;\n-use rustc_middle::ty::subst::{self, InternalSubsts, Subst, SubstsRef};\n-use rustc_middle::ty::{self, Const, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n-use rustc_middle::ty::{GenericParamDef, GenericParamDefKind};\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -22,6 +19,11 @@ use rustc_hir::def::{CtorOf, DefKind, Namespace, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{walk_generics, Visitor as _};\n use rustc_hir::{Constness, GenericArg, GenericArgs};\n+use rustc_middle::ty::subst::{self, InternalSubsts, Subst, SubstsRef};\n+use rustc_middle::ty::{\n+    self, Const, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n+};\n+use rustc_middle::ty::{GenericParamDef, GenericParamDefKind};\n use rustc_session::lint::builtin::{AMBIGUOUS_ASSOCIATED_ITEMS, LATE_BOUND_LIFETIME_ARGUMENTS};\n use rustc_session::parse::feature_err;\n use rustc_session::Session;"}, {"sha": "16af168ce1af9c6dbd0f97173c89c5ccc4adfb76", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n use crate::check::coercion::CoerceMany;\n use crate::check::{Diverges, Expectation, FnCtxt, Needs};\n-use rustc_middle::ty::Ty;\n use rustc_hir as hir;\n use rustc_hir::ExprKind;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_middle::ty::Ty;\n use rustc_span::Span;\n use rustc_trait_selection::traits::ObligationCauseCode;\n use rustc_trait_selection::traits::{IfExpressionCause, MatchExpressionArmCause, ObligationCause};"}, {"sha": "0dab172230ef14f3bd42816f20160ba7d649ae79", "filename": "src/librustc_typeck/check/autoderef.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,13 +1,13 @@\n use super::method::MethodCallee;\n use super::{FnCtxt, Needs, PlaceOp};\n \n-use rustc_middle::ty::adjustment::{Adjust, Adjustment, OverloadedDeref};\n-use rustc_middle::ty::{self, TraitRef, Ty, TyCtxt, WithConstness};\n-use rustc_middle::ty::{ToPredicate, TypeFoldable};\n use rustc_ast::ast::Ident;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_infer::infer::{InferCtxt, InferOk};\n+use rustc_middle::ty::adjustment::{Adjust, Adjustment, OverloadedDeref};\n+use rustc_middle::ty::{self, TraitRef, Ty, TyCtxt, WithConstness};\n+use rustc_middle::ty::{ToPredicate, TypeFoldable};\n use rustc_session::DiagnosticMessageId;\n use rustc_span::Span;\n use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;"}, {"sha": "0d254412203aa2c7406dcd05ad3446372338cf46", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,16 +3,18 @@ use super::method::MethodCallee;\n use super::{Expectation, FnCtxt, Needs, TupleArgumentsFlag};\n use crate::type_error_struct;\n \n-use rustc_middle::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n-use rustc_middle::ty::subst::SubstsRef;\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_ast::ast::Ident;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::{infer, traits};\n+use rustc_middle::ty::adjustment::{\n+    Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability,\n+};\n+use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n use rustc_target::spec::abi;\n "}, {"sha": "7f1631a620499370be139c0dc51efe5c8d5800d0", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -33,15 +33,15 @@ use super::FnCtxt;\n use crate::hir::def_id::DefId;\n use crate::type_error_struct;\n use crate::util::common::ErrorReported;\n+use rustc_ast::ast;\n+use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n+use rustc_hir as hir;\n use rustc_middle::middle::lang_items;\n use rustc_middle::ty::adjustment::AllowTwoPhase;\n use rustc_middle::ty::cast::{CastKind, CastTy};\n use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, Ty, TypeAndMut, TypeFoldable};\n-use rustc_ast::ast;\n-use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n-use rustc_hir as hir;\n use rustc_session::lint;\n use rustc_session::Session;\n use rustc_span::Span;"}, {"sha": "415b5103104a118ae8847a184f2a6b081ff8f571", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,14 +4,14 @@ use super::{check_fn, Expectation, FnCtxt, GeneratorTypes};\n \n use crate::astconv::AstConv;\n use crate::middle::{lang_items, region};\n-use rustc_middle::ty::fold::TypeFoldable;\n-use rustc_middle::ty::subst::InternalSubsts;\n-use rustc_middle::ty::{self, GenericParamDefKind, Ty};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::LateBoundRegionConversionTime;\n use rustc_infer::infer::{InferOk, InferResult};\n+use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::subst::InternalSubsts;\n+use rustc_middle::ty::{self, GenericParamDefKind, Ty};\n use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::traits::error_reporting::ArgKind;"}, {"sha": "5a97a2af120d0508743a47c83c9b7aa9219e4486", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -52,6 +52,10 @@\n \n use crate::astconv::AstConv;\n use crate::check::{FnCtxt, Needs};\n+use rustc_errors::{struct_span_err, DiagnosticBuilder};\n+use rustc_hir as hir;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::infer::{Coercion, InferOk, InferResult};\n use rustc_middle::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability, PointerCast,\n };\n@@ -60,10 +64,6 @@ use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::relate::RelateResult;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, Ty, TypeAndMut};\n-use rustc_errors::{struct_span_err, DiagnosticBuilder};\n-use rustc_hir as hir;\n-use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc_infer::infer::{Coercion, InferOk, InferResult};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::sym;\n use rustc_span::{self, Span};"}, {"sha": "9e45793fcdc72b740cea26d837d8df6571dbc302", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n-use rustc_middle::ty::error::{ExpectedFound, TypeError};\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n-use rustc_middle::ty::util::ExplicitSelf;\n-use rustc_middle::ty::{self, GenericParamDefKind, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticId};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit;\n use rustc_hir::{GenericParamKind, ImplItemKind, TraitItemKind};\n use rustc_infer::infer::{self, InferOk, TyCtxtInferExt};\n+use rustc_middle::ty::error::{ExpectedFound, TypeError};\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::util::ExplicitSelf;\n+use rustc_middle::ty::{self, GenericParamDefKind, TyCtxt};\n+use rustc_middle::util::common::ErrorReported;\n use rustc_span::Span;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n use rustc_trait_selection::traits::{self, ObligationCause, ObligationCauseCode, Reveal};"}, {"sha": "369bb183bcd739f942b97e6bc5184256c4d0a4c2", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,12 +4,12 @@ use rustc_trait_selection::infer::InferCtxtExt as _;\n use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt as _;\n use rustc_trait_selection::traits::{self, ObligationCause};\n \n-use rustc_middle::ty::adjustment::AllowTwoPhase;\n-use rustc_middle::ty::{self, AssocItem, Ty};\n use rustc_ast::util::parser::PREC_POSTFIX;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::{is_range_literal, Node};\n+use rustc_middle::ty::adjustment::AllowTwoPhase;\n+use rustc_middle::ty::{self, AssocItem, Ty};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n "}, {"sha": "a44a607a70335c37bae533c9d3257919b9c3b497", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,15 +2,15 @@ use crate::check::regionck::RegionCtxt;\n use crate::hir;\n use crate::hir::def_id::DefId;\n use crate::util::common::ErrorReported;\n+use rustc_errors::struct_span_err;\n+use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n+use rustc_infer::infer::{InferOk, RegionckMode, TyCtxtInferExt};\n+use rustc_infer::traits::TraitEngineExt as _;\n use rustc_middle::middle::region;\n use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::relate::{Relate, RelateResult, TypeRelation};\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n use rustc_middle::ty::{self, Predicate, Ty, TyCtxt};\n-use rustc_errors::struct_span_err;\n-use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n-use rustc_infer::infer::{InferOk, RegionckMode, TyCtxtInferExt};\n-use rustc_infer::traits::TraitEngineExt as _;\n use rustc_span::Span;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n use rustc_trait_selection::traits::query::dropck_outlives::AtExt;"}, {"sha": "bfcb6fe35fe756bef14dca586cc9b12469cf472b", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -17,12 +17,6 @@ use crate::check::TupleArgumentsFlag::DontTupleArguments;\n use crate::type_error_struct;\n use crate::util::common::ErrorReported;\n \n-use rustc_middle::middle::lang_items;\n-use rustc_middle::ty;\n-use rustc_middle::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n-use rustc_middle::ty::Ty;\n-use rustc_middle::ty::TypeFoldable;\n-use rustc_middle::ty::{AdtKind, Visibility};\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::FxHashMap;\n@@ -33,6 +27,14 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::{ExprKind, QPath};\n use rustc_infer::infer;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::ty;\n+use rustc_middle::ty::adjustment::{\n+    Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability,\n+};\n+use rustc_middle::ty::Ty;\n+use rustc_middle::ty::TypeFoldable;\n+use rustc_middle::ty::{AdtKind, Visibility};\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym, Symbol};"}, {"sha": "db9c8c35c2cee742d77d82899b1f4c8c094e8cfc", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,14 +4,14 @@\n //! types computed here.\n \n use super::FnCtxt;\n-use rustc_middle::middle::region::{self, YieldData};\n-use rustc_middle::ty::{self, Ty};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{Expr, ExprKind, Pat, PatKind};\n+use rustc_middle::middle::region::{self, YieldData};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::Span;\n \n struct InteriorVisitor<'a, 'tcx> {"}, {"sha": "ce7166b2c768dd14f24797d9cc58e2b7a2da9dde", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,11 +3,11 @@\n \n use crate::require_same_types;\n \n+use rustc_errors::struct_span_err;\n+use rustc_hir as hir;\n use rustc_middle::traits::{ObligationCause, ObligationCauseCode};\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_errors::struct_span_err;\n-use rustc_hir as hir;\n use rustc_span::symbol::Symbol;\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "63f7ba5baac3bc42cad2274b2de85d1f8ce187ed", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,13 +4,13 @@ use crate::astconv::AstConv;\n use crate::check::{callee, FnCtxt, Needs, PlaceOp};\n use crate::hir::def_id::DefId;\n use crate::hir::GenericArg;\n+use rustc_hir as hir;\n+use rustc_infer::infer::{self, InferOk};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, OverloadedDeref, PointerCast};\n use rustc_middle::ty::adjustment::{AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n use rustc_middle::ty::{self, GenericParamDefKind, Ty};\n-use rustc_hir as hir;\n-use rustc_infer::infer::{self, InferOk};\n use rustc_span::Span;\n use rustc_trait_selection::traits;\n "}, {"sha": "deaff19de08d3322fcadcbd87947f622f945309d", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -11,17 +11,17 @@ pub use self::CandidateSource::*;\n pub use self::MethodError::*;\n \n use crate::check::FnCtxt;\n-use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n-use rustc_middle::ty::GenericParamDefKind;\n-use rustc_middle::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TypeFoldable, WithConstness};\n use rustc_ast::ast;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Namespace};\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::{self, InferOk};\n+use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n+use rustc_middle::ty::GenericParamDefKind;\n+use rustc_middle::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TypeFoldable, WithConstness};\n use rustc_span::Span;\n use rustc_trait_selection::traits;\n use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;"}, {"sha": "7e7d84c1996763a9e20ba9a6c0804fddc295bc59", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -8,12 +8,6 @@ use crate::check::FnCtxt;\n use crate::hir::def::DefKind;\n use crate::hir::def_id::DefId;\n \n-use rustc_middle::middle::stability;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n-use rustc_middle::ty::GenericParamDefKind;\n-use rustc_middle::ty::{\n-    self, ParamEnvAnd, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n-};\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance::{find_best_match_for_name, lev_distance};\n use rustc_data_structures::fx::FxHashSet;\n@@ -26,6 +20,12 @@ use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc_infer::infer::{self, InferOk, TyCtxtInferExt};\n+use rustc_middle::middle::stability;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n+use rustc_middle::ty::GenericParamDefKind;\n+use rustc_middle::ty::{\n+    self, ParamEnvAnd, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n+};\n use rustc_session::config::nightly_options;\n use rustc_session::lint;\n use rustc_span::{symbol::Symbol, Span, DUMMY_SP};"}, {"sha": "9bfeafbfc9fac4e325d6b285723721d4e1ae3515", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -3,9 +3,6 @@\n \n use crate::check::FnCtxt;\n use crate::middle::lang_items::FnOnceTraitLangItem;\n-use rustc_middle::hir::map as hir_map;\n-use rustc_middle::ty::print::with_crate_prefix;\n-use rustc_middle::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -16,6 +13,11 @@ use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::intravisit;\n use rustc_hir::{ExprKind, Node, QPath};\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_middle::hir::map as hir_map;\n+use rustc_middle::ty::print::with_crate_prefix;\n+use rustc_middle::ty::{\n+    self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n+};\n use rustc_span::symbol::kw;\n use rustc_span::{source_map, FileName, Span};\n use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;"}, {"sha": "6249e1d49779eac7a6647183489e7f0762d5948f", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -89,21 +89,6 @@ pub mod writeback;\n \n use crate::astconv::{AstConv, GenericArgCountMismatch, PathSeg};\n use crate::middle::lang_items;\n-use rustc_middle::hir::map::blocks::FnLikeNode;\n-use rustc_middle::middle::region;\n-use rustc_middle::mir::interpret::ConstValue;\n-use rustc_middle::ty::adjustment::{\n-    Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability, PointerCast,\n-};\n-use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n-use rustc_middle::ty::layout::VariantIdx;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{GenericArgKind, InternalSubsts, Subst, SubstsRef, UserSelfTy, UserSubsts};\n-use rustc_middle::ty::util::{Discr, IntTypeExt, Representability};\n-use rustc_middle::ty::{\n-    self, AdtKind, CanonicalUserType, Const, GenericParamDefKind, RegionKind, ToPolyTraitRef,\n-    ToPredicate, Ty, TyCtxt, UserType, WithConstness,\n-};\n use rustc_ast::ast;\n use rustc_ast::util::parser::ExprPrecedence;\n use rustc_attr as attr;\n@@ -122,6 +107,23 @@ use rustc_infer::infer::error_reporting::TypeAnnotationNeeded::E0282;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc_infer::infer::{self, InferCtxt, InferOk, InferResult, TyCtxtInferExt};\n+use rustc_middle::hir::map::blocks::FnLikeNode;\n+use rustc_middle::middle::region;\n+use rustc_middle::mir::interpret::ConstValue;\n+use rustc_middle::ty::adjustment::{\n+    Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability, PointerCast,\n+};\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc_middle::ty::layout::VariantIdx;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::subst::{\n+    GenericArgKind, InternalSubsts, Subst, SubstsRef, UserSelfTy, UserSubsts,\n+};\n+use rustc_middle::ty::util::{Discr, IntTypeExt, Representability};\n+use rustc_middle::ty::{\n+    self, AdtKind, CanonicalUserType, Const, GenericParamDefKind, RegionKind, ToPolyTraitRef,\n+    ToPredicate, Ty, TyCtxt, UserType, WithConstness,\n+};\n use rustc_session::config::{self, EntryFnType};\n use rustc_session::lint;\n use rustc_session::parse::feature_err;"}, {"sha": "7367338bddf5408ecdf3e39fa4153b52ff87dbe2", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -2,13 +2,15 @@\n \n use super::method::MethodCallee;\n use super::{FnCtxt, Needs};\n-use rustc_middle::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n-use rustc_middle::ty::TyKind::{Adt, Array, Char, FnDef, Never, Ref, Str, Tuple, Uint};\n-use rustc_middle::ty::{self, Ty, TypeFoldable};\n use rustc_ast::ast::Ident;\n use rustc_errors::{self, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_middle::ty::adjustment::{\n+    Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability,\n+};\n+use rustc_middle::ty::TyKind::{Adt, Array, Char, FnDef, Never, Ref, Str, Tuple, Uint};\n+use rustc_middle::ty::{self, Ty, TypeFoldable};\n use rustc_span::Span;\n use rustc_trait_selection::infer::InferCtxtExt;\n "}, {"sha": "fc91142dd7da3d573c00a6f6d6525a102dfb63fe", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,4 @@\n use crate::check::FnCtxt;\n-use rustc_middle::ty::subst::GenericArg;\n-use rustc_middle::ty::{self, BindingMode, Ty, TypeFoldable};\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::FxHashMap;\n@@ -11,6 +9,8 @@ use rustc_hir::pat_util::EnumerateAndAdjustIterator;\n use rustc_hir::{HirId, Pat, PatKind};\n use rustc_infer::infer;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_middle::ty::subst::GenericArg;\n+use rustc_middle::ty::{self, BindingMode, Ty, TypeFoldable};\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::{Span, Spanned};\n use rustc_trait_selection::traits::{ObligationCause, Pattern};"}, {"sha": "393f9f8bdfbaf4adc0b632f45781f21366c08323", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -76,15 +76,15 @@ use crate::check::dropck;\n use crate::check::FnCtxt;\n use crate::mem_categorization as mc;\n use crate::middle::region;\n-use rustc_middle::ty::adjustment;\n-use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, Ty};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::PatKind;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::{self, RegionObligation, RegionckMode};\n+use rustc_middle::ty::adjustment;\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::Span;\n use rustc_trait_selection::infer::OutlivesEnvironmentExt;\n use rustc_trait_selection::opaque_types::InferCtxtExt;"}, {"sha": "c6c11ee9d9b5b445ffac0dc3c4c96aaf4431e0bf", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -35,14 +35,14 @@ use super::FnCtxt;\n use crate::expr_use_visitor as euv;\n use crate::mem_categorization as mc;\n use crate::mem_categorization::PlaceBase;\n-use rustc_middle::ty::{self, Ty, TyCtxt, UpvarSubsts};\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_infer::infer::UpvarRegion;\n+use rustc_middle::ty::{self, Ty, TyCtxt, UpvarSubsts};\n use rustc_span::Span;\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {"}, {"sha": "641911321916273fed658ed18800d9dffbff64a7", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,19 +1,19 @@\n use crate::check::{FnCtxt, Inherited};\n use crate::constrained_generic_params::{identify_constrained_generic_params, Parameter};\n \n-use rustc_middle::middle::lang_items;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n-use rustc_middle::ty::trait_def::TraitSpecializationKind;\n-use rustc_middle::ty::{\n-    self, AdtKind, GenericParamDefKind, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n-};\n use rustc_ast::ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::itemlikevisit::ParItemLikeVisitor;\n use rustc_hir::ItemKind;\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::trait_def::TraitSpecializationKind;\n+use rustc_middle::ty::{\n+    self, AdtKind, GenericParamDefKind, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n+};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::sym;\n use rustc_span::Span;"}, {"sha": "cccd84c2b884a994546bf6fb9243ae6650f41d15", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,15 +4,15 @@\n \n use crate::check::FnCtxt;\n \n-use rustc_middle::ty::adjustment::{Adjust, Adjustment, PointerCast};\n-use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_data_structures::sync::Lrc;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefIdSet;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_infer::infer::error_reporting::TypeAnnotationNeeded::E0282;\n use rustc_infer::infer::InferCtxt;\n+use rustc_middle::ty::adjustment::{Adjust, Adjustment, PointerCast};\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_trait_selection::opaque_types::InferCtxtExt;"}, {"sha": "f552b53d8bab874f815d2685e0fe08b70c69a7d0", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, DefIdSet, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::TyCtxt;\n use rustc_session::lint;\n use rustc_span::Span;\n "}, {"sha": "32963b6a1f0851c1b5ca52df82cf48d32e279bad", "filename": "src/librustc_typeck/coherence/builtin.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,18 +1,18 @@\n //! Check properties that are required by built-in traits and set\n //! up data structures required by type-checking/codegen.\n \n-use rustc_middle::middle::lang_items::UnsizeTraitLangItem;\n-use rustc_middle::middle::region;\n-use rustc_middle::ty::adjustment::CoerceUnsizedInfo;\n-use rustc_middle::ty::TypeFoldable;\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::ItemKind;\n use rustc_infer::infer;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::{RegionckMode, TyCtxtInferExt};\n+use rustc_middle::middle::lang_items::UnsizeTraitLangItem;\n+use rustc_middle::middle::region;\n+use rustc_middle::ty::adjustment::CoerceUnsizedInfo;\n+use rustc_middle::ty::TypeFoldable;\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n use rustc_trait_selection::traits::misc::{can_type_implement_copy, CopyImplementationError};\n use rustc_trait_selection::traits::predicate_for_trait_def;"}, {"sha": "9ace9f424b74ded073c66ce9ac9e52298a323088", "filename": "src/librustc_typeck/coherence/inherent_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -7,11 +7,11 @@\n //! `tcx.inherent_impls(def_id)`). That value, however,\n //! is computed by selecting an idea from this table.\n \n-use rustc_middle::ty::{self, CrateInherentImpls, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::{self, CrateInherentImpls, TyCtxt};\n \n use rustc_ast::ast;\n use rustc_span::Span;"}, {"sha": "be77d049cae40db8555103a6ec472f39ef056725", "filename": "src/librustc_typeck/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n-use rustc_middle::ty::TyCtxt;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::TyCtxt;\n use rustc_trait_selection::traits::{self, SkipLeakCheck};\n \n pub fn crate_inherent_impls_overlap_check(tcx: TyCtxt<'_>, crate_num: CrateNum) {"}, {"sha": "0df08b7bc8b37e0df5d0b0c117008aeb306a29c1", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -5,10 +5,10 @@\n // done by the orphan and overlap modules. Then we build up various\n // mappings. That mapping code resides here.\n \n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n use rustc_trait_selection::traits;\n "}, {"sha": "d77f2bd0d8b96a3fe6f2eaefcabc9b92795b96b8", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,11 +1,11 @@\n //! Orphan checker: every impl either implements a trait defined in this\n //! crate or pertains to a type defined in this crate.\n \n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_infer::infer::TyCtxtInferExt;\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_trait_selection::traits;\n \n pub fn check(tcx: TyCtxt<'_>) {"}, {"sha": "b281092ea631d45d60d351562474fc09d1b5520d", "filename": "src/librustc_typeck/coherence/unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,11 +1,11 @@\n //! Unsafety checker: every impl either implements a trait defined in this\n //! crate or pertains to a type defined in this crate.\n \n-use rustc_middle::ty::TyCtxt;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::Unsafety;\n+use rustc_middle::ty::TyCtxt;\n \n pub fn check(tcx: TyCtxt<'_>) {\n     let mut unsafety = UnsafetyChecker { tcx };"}, {"sha": "30887f840321bc510df11bc68130aad35cac64a7", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -19,16 +19,6 @@ use crate::check::intrinsic::intrinsic_operation_unsafety;\n use crate::constrained_generic_params as cgp;\n use crate::middle::lang_items;\n use crate::middle::resolve_lifetime as rl;\n-use rustc_middle::hir::map::blocks::FnLikeNode;\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n-use rustc_middle::mir::mono::Linkage;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n-use rustc_middle::ty::util::Discr;\n-use rustc_middle::ty::util::IntTypeExt;\n-use rustc_middle::ty::{self, AdtKind, Const, ToPolyTraitRef, Ty, TyCtxt};\n-use rustc_middle::ty::{ReprOptions, ToPredicate, WithConstness};\n use rustc_ast::ast;\n use rustc_ast::ast::{Ident, MetaItemKind};\n use rustc_attr::{list_contains_name, mark_used, InlineAttr, OptimizeAttr};\n@@ -40,6 +30,16 @@ use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{GenericParamKind, Node, Unsafety};\n+use rustc_middle::hir::map::blocks::FnLikeNode;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n+use rustc_middle::mir::mono::Linkage;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::util::Discr;\n+use rustc_middle::ty::util::IntTypeExt;\n+use rustc_middle::ty::{self, AdtKind, Const, ToPolyTraitRef, Ty, TyCtxt};\n+use rustc_middle::ty::{ReprOptions, ToPredicate, WithConstness};\n use rustc_session::lint;\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::{kw, sym, Symbol};"}, {"sha": "1d34a58fabb3117e7401e571f7e6db89b496c773", "filename": "src/librustc_typeck/collect/type_of.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,3 @@\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::ty::subst::{GenericArgKind, InternalSubsts, Subst};\n-use rustc_middle::ty::util::IntTypeExt;\n-use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{struct_span_err, Applicability, StashKey};\n use rustc_hir as hir;\n@@ -10,6 +6,10 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit;\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::Node;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::ty::subst::{GenericArgKind, InternalSubsts, Subst};\n+use rustc_middle::ty::util::IntTypeExt;\n+use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt, TypeFoldable};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "07ff3bc85cc1902ff50a4f155c9e16c2c3148c06", "filename": "src/librustc_typeck/constrained_generic_params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_middle::ty::fold::{TypeFoldable, TypeVisitor};\n use rustc_middle::ty::{self, Ty, TyCtxt};\n-use rustc_data_structures::fx::FxHashSet;\n use rustc_span::source_map::Span;\n \n #[derive(Clone, PartialEq, Eq, Hash, Debug)]"}, {"sha": "b6d7309f86aac64e78e0b975cfb4e3004d7ddd76", "filename": "src/librustc_typeck/expr_use_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fexpr_use_visitor.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -7,12 +7,12 @@ pub use self::ConsumeMode::*;\n // Export these here so that Clippy can use them.\n pub use mc::{Place, PlaceBase, Projection};\n \n-use rustc_middle::ty::{self, adjustment, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::DefId;\n use rustc_hir::PatKind;\n use rustc_infer::infer::InferCtxt;\n+use rustc_middle::ty::{self, adjustment, TyCtxt};\n \n use crate::mem_categorization as mc;\n use rustc_span::Span;"}, {"sha": "0635ad5babcd8ab8911bded44bbe9c578fd71166", "filename": "src/librustc_typeck/impl_wf_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fimpl_wf_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fimpl_wf_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fimpl_wf_check.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -11,13 +11,13 @@\n use crate::constrained_generic_params as cgp;\n use min_specialization::check_min_specialization;\n \n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n \n use std::collections::hash_map::Entry::{Occupied, Vacant};"}, {"sha": "559e478df0604372ac3b9dded4f9665b22b32a7d", "filename": "src/librustc_typeck/impl_wf_check/min_specialization.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fimpl_wf_check%2Fmin_specialization.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -67,16 +67,16 @@\n \n use crate::constrained_generic_params as cgp;\n \n-use rustc_middle::middle::region::ScopeTree;\n-use rustc_middle::ty::subst::{GenericArg, InternalSubsts, SubstsRef};\n-use rustc_middle::ty::trait_def::TraitSpecializationKind;\n-use rustc_middle::ty::{self, InstantiatedPredicates, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::{InferCtxt, RegionckMode, TyCtxtInferExt};\n use rustc_infer::traits::specialization_graph::Node;\n+use rustc_middle::middle::region::ScopeTree;\n+use rustc_middle::ty::subst::{GenericArg, InternalSubsts, SubstsRef};\n+use rustc_middle::ty::trait_def::TraitSpecializationKind;\n+use rustc_middle::ty::{self, InstantiatedPredicates, TyCtxt, TypeFoldable};\n use rustc_span::Span;\n use rustc_trait_selection::traits::{self, translate_substs, wf};\n "}, {"sha": "168f20771476c781838dbea2d885705cef3a1168", "filename": "src/librustc_typeck/outlives/explicit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Foutlives%2Fexplicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Foutlives%2Fexplicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Fexplicit.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n-use rustc_middle::ty::{self, OutlivesPredicate, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, OutlivesPredicate, TyCtxt};\n \n use super::utils::*;\n "}, {"sha": "df7c535ff3bb38bc7e08d62f8ae099321674681d", "filename": "src/librustc_typeck/outlives/implicit_infer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Foutlives%2Fimplicit_infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Foutlives%2Fimplicit_infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Fimplicit_infer.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n-use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::Node;\n+use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::Span;\n \n use super::explicit::ExplicitPredicatesMap;"}, {"sha": "2d9b39a7f61466d306063975dcb602f5850618e3", "filename": "src/librustc_typeck/outlives/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Foutlives%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Foutlives%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,9 +1,9 @@\n use hir::Node;\n+use rustc_hir as hir;\n+use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::{self, CratePredicatesMap, TyCtxt};\n-use rustc_hir as hir;\n-use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n "}, {"sha": "655f938493abdd237f0bb46e2be4935d672d2322", "filename": "src/librustc_typeck/outlives/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n-use rustc_middle::ty::TyCtxt;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n \n pub fn test_inferred_outlives(tcx: TyCtxt<'_>) {"}, {"sha": "83125a3e2feb67f2733b2dec843b2cf21e70933b", "filename": "src/librustc_typeck/structured_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fstructured_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fstructured_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fstructured_errors.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,5 +1,5 @@\n-use rustc_middle::ty::{Ty, TypeFoldable};\n use rustc_errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n+use rustc_middle::ty::{Ty, TypeFoldable};\n use rustc_session::Session;\n use rustc_span::Span;\n "}, {"sha": "2871fa606b57042ed7347f433dd5a37e19a5bf58", "filename": "src/librustc_typeck/variance/constraints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,10 +4,10 @@\n //! We walk the set of items and, for each member, generate new constraints.\n \n use hir::def_id::DefId;\n-use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::{self, Ty, TyCtxt};\n \n use super::terms::VarianceTerm::*;\n use super::terms::*;"}, {"sha": "47652b7b6966c31b5874cdb64e2cd3ad37693ad8", "filename": "src/librustc_typeck/variance/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -4,10 +4,10 @@\n //! [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/variance.html\n \n use hir::Node;\n-use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, CrateVariancesMap, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n+use rustc_middle::ty::query::Providers;\n+use rustc_middle::ty::{self, CrateVariancesMap, TyCtxt};\n \n /// Defines the `TermsContext` basically houses an arena where we can\n /// allocate terms."}, {"sha": "4fc46ce93ee52e6e591eac46e991e13bcd59a719", "filename": "src/librustc_typeck/variance/solve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Fsolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Fsolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fsolve.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -5,9 +5,9 @@\n //! optimal solution to the constraints. The final variance for each\n //! inferred is then written into the `variance_map` in the tcx.\n \n-use rustc_middle::ty;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty;\n \n use super::constraints::*;\n use super::terms::VarianceTerm::*;"}, {"sha": "e3ea0bf20e39c220f1703fbd8d96af82519a091d", "filename": "src/librustc_typeck/variance/terms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -10,10 +10,10 @@\n // a variable.\n \n use arena::TypedArena;\n-use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::HirIdMap;\n+use rustc_middle::ty::{self, TyCtxt};\n use std::fmt;\n \n use self::VarianceTerm::*;"}, {"sha": "a25252ccd3d84698e958c7ecca942c7de494d395", "filename": "src/librustc_typeck/variance/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,7 +1,7 @@\n-use rustc_middle::ty::TyCtxt;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n \n pub fn test_variance(tcx: TyCtxt<'_>) {"}, {"sha": "bf64da56ade08d6a92dd3e8a5e0249027f610c0a", "filename": "src/librustdoc/clean/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fauto_trait.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,6 @@\n-use rustc_middle::ty::{self, Region, RegionVid, TypeFoldable};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n+use rustc_middle::ty::{self, Region, RegionVid, TypeFoldable};\n use rustc_trait_selection::traits::auto_trait::{self, AutoTraitResult};\n \n use std::fmt::Debug;"}, {"sha": "d987505e42735330aa83b9d78669ae2269894351", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,10 +1,10 @@\n use crate::rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n-use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{ToPredicate, WithConstness};\n use rustc_hir as hir;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_infer::infer::{InferOk, TyCtxtInferExt};\n use rustc_infer::traits;\n+use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::{ToPredicate, WithConstness};\n use rustc_span::DUMMY_SP;\n \n use super::*;"}, {"sha": "7b3fd82479ebbe4f9df504387c3d7b4a95a19bf4", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -8,9 +8,6 @@ use std::rc::Rc;\n use std::sync::Arc;\n use std::{slice, vec};\n \n-use rustc_middle::middle::lang_items;\n-use rustc_middle::middle::stability;\n-use rustc_middle::ty::layout::VariantIdx;\n use rustc_ast::ast::{self, AttrStyle, Ident};\n use rustc_ast::attr;\n use rustc_ast::util::comments::strip_doc_comment_decoration;\n@@ -20,6 +17,9 @@ use rustc_hir::def::Res;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::Mutability;\n use rustc_index::vec::IndexVec;\n+use rustc_middle::middle::lang_items;\n+use rustc_middle::middle::stability;\n+use rustc_middle::ty::layout::VariantIdx;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::DUMMY_SP;\n use rustc_span::symbol::{sym, Symbol};"}, {"sha": "05a8302ebab67c9edffcd15790c82c00013c45e9", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -9,13 +9,13 @@ use crate::clean::{\n use crate::core::DocContext;\n \n use itertools::Itertools;\n-use rustc_middle::mir::interpret::{sign_extend, ConstValue, Scalar};\n-use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, DefIdTree, Ty};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_middle::mir::interpret::{sign_extend, ConstValue, Scalar};\n+use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::{self, DefIdTree, Ty};\n use rustc_span::symbol::{kw, sym, Symbol};\n use std::mem;\n "}, {"sha": "98f4b592fea6e0358c3d11f6ff38e983600ed4f9", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,6 +1,3 @@\n-use rustc_middle::middle::cstore::CrateStore;\n-use rustc_middle::middle::privacy::AccessLevels;\n-use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_ast::ast::CRATE_NODE_ID;\n use rustc_attr as attr;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -12,6 +9,9 @@ use rustc_hir::def::Namespace::TypeNS;\n use rustc_hir::def_id::{CrateNum, DefId, DefIndex, LOCAL_CRATE};\n use rustc_hir::HirId;\n use rustc_interface::interface;\n+use rustc_middle::middle::cstore::CrateStore;\n+use rustc_middle::middle::privacy::AccessLevels;\n+use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_resolve as resolve;\n use rustc_session::config::ErrorOutputType;\n use rustc_session::lint;"}, {"sha": "1377338ce4af377c9cdf90f51037282d421b21d2", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -42,15 +42,15 @@ use std::rc::Rc;\n use std::str;\n use std::sync::Arc;\n \n-use rustc_middle::middle::privacy::AccessLevels;\n-use rustc_middle::middle::stability;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::flock;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_feature::UnstableFeatures;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::Mutability;\n+use rustc_middle::middle::privacy::AccessLevels;\n+use rustc_middle::middle::stability;\n use rustc_span::edition::Edition;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::FileName;"}, {"sha": "450f44ffeafc1edd4e3b8a170c249d61dfbea192", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n use crate::clean::{self, AttributesExt, GetDefId};\n use crate::fold::DocFolder;\n-use rustc_middle::middle::privacy::AccessLevels;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n+use rustc_middle::middle::privacy::AccessLevels;\n use rustc_span::source_map::FileName;\n use rustc_span::symbol::sym;\n use std::collections::BTreeMap;"}, {"sha": "a6b24d49a83aef53df267d0e6a4551668148bc8f", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,4 +1,3 @@\n-use rustc_middle::ty;\n use rustc_ast::ast::{self, Ident};\n use rustc_errors::Applicability;\n use rustc_expand::base::SyntaxExtensionKind;\n@@ -10,6 +9,7 @@ use rustc_hir::def::{\n     PerNS, Res,\n };\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty;\n use rustc_resolve::ParentScope;\n use rustc_session::lint;\n use rustc_span::symbol::Symbol;"}, {"sha": "1afa9c7a268584db7813712cc0062e7f6e7892aa", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n //! Contains information about \"passes\", used to modify crate information during the documentation\n //! process.\n \n-use rustc_middle::middle::privacy::AccessLevels;\n use rustc_hir::def_id::{DefId, DefIdSet};\n+use rustc_middle::middle::privacy::AccessLevels;\n use rustc_session::lint;\n use rustc_span::{InnerSpan, Span, DUMMY_SP};\n use std::mem;"}, {"sha": "d154de35043d6b4b0ae130ff5f1c8147132ecc07", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,12 +1,12 @@\n-use rustc_middle::hir::map::Map;\n-use rustc_middle::util::common::ErrorReported;\n use rustc_ast::ast;\n use rustc_ast::with_globals;\n use rustc_data_structures::sync::Lrc;\n use rustc_feature::UnstableFeatures;\n use rustc_hir as hir;\n use rustc_hir::intravisit;\n use rustc_interface::interface;\n+use rustc_middle::hir::map::Map;\n+use rustc_middle::util::common::ErrorReported;\n use rustc_session::{self, config, DiagnosticOutput, Session};\n use rustc_span::edition::Edition;\n use rustc_span::source_map::SourceMap;"}, {"sha": "bf4c44879273fa290efac945d6f93ef33b74bd50", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,14 +1,14 @@\n //! The Rust AST Visitor. Extracts useful information and massages it into a form\n //! usable for `clean`.\n \n-use rustc_middle::middle::privacy::AccessLevel;\n-use rustc_middle::ty::TyCtxt;\n use rustc_ast::ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::Node;\n+use rustc_middle::middle::privacy::AccessLevel;\n+use rustc_middle::ty::TyCtxt;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, sym};"}, {"sha": "ea2f5f8abc701b8921f25d154327dfab6a6e0f10", "filename": "src/librustdoc/visit_lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fvisit_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ccb0b4a020cac07a9772d0da722869096a46cef/src%2Flibrustdoc%2Fvisit_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_lib.rs?ref=1ccb0b4a020cac07a9772d0da722869096a46cef", "patch": "@@ -1,8 +1,8 @@\n-use rustc_middle::middle::privacy::{AccessLevel, AccessLevels};\n-use rustc_middle::ty::{TyCtxt, Visibility};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n+use rustc_middle::middle::privacy::{AccessLevel, AccessLevels};\n+use rustc_middle::ty::{TyCtxt, Visibility};\n use rustc_span::symbol::sym;\n \n use crate::clean::{AttributesExt, NestedAttributesExt};"}]}