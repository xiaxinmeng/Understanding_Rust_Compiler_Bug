{"sha": "dabdd6de1fc64ab435476bfc3ef340118097214b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYmRkNmRlMWZjNjRhYjQzNTQ3NmJmYzNlZjM0MDExODA5NzIxNGI=", "commit": {"author": {"name": "L\u00e9o Lanteri Thauvin", "email": "leseulartichaut@gmail.com", "date": "2021-08-11T14:10:05Z"}, "committer": {"name": "L\u00e9o Lanteri Thauvin", "email": "leseulartichaut@gmail.com", "date": "2021-08-16T15:10:31Z"}, "message": "Don't mark `if_let_guard` as an incomplete feature", "tree": {"sha": "36adb7043f08b509140514653845bfe76cae76cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36adb7043f08b509140514653845bfe76cae76cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dabdd6de1fc64ab435476bfc3ef340118097214b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dabdd6de1fc64ab435476bfc3ef340118097214b", "html_url": "https://github.com/rust-lang/rust/commit/dabdd6de1fc64ab435476bfc3ef340118097214b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dabdd6de1fc64ab435476bfc3ef340118097214b/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d96b090bb68065cd3a469b27cbd568e39bf0e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d96b090bb68065cd3a469b27cbd568e39bf0e7", "html_url": "https://github.com/rust-lang/rust/commit/73d96b090bb68065cd3a469b27cbd568e39bf0e7"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "f1f369a95d948ad7c7c3e4e7569733f2581ab134", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -555,7 +555,7 @@ declare_features! (\n     (incomplete, lazy_normalization_consts, \"1.46.0\", Some(72219), None),\n \n     /// Allows `if let` guard in match arms.\n-    (incomplete, if_let_guard, \"1.47.0\", Some(51114), None),\n+    (active, if_let_guard, \"1.47.0\", Some(51114), None),\n \n     /// Allows non-trivial generic constants which have to be manually propagated upwards.\n     (incomplete, const_evaluatable_checked, \"1.48.0\", Some(76560), None),"}, {"sha": "4e89fc975d04c95a1dde7a892cedcfd3f146e0c0", "filename": "src/test/ui/generator/yielding-in-match-guards.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Fgenerator%2Fyielding-in-match-guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Fgenerator%2Fyielding-in-match-guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyielding-in-match-guards.rs?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -11,7 +11,6 @@\n // of the underlying generator.\n \n #![feature(if_let_guard)]\n-#![allow(incomplete_features)]\n \n async fn f() -> u8 { 1 }\n async fn foo() -> [bool; 10] { [false; 10] }"}, {"sha": "c85af7f3bcc79bcbf86b350857ee54023074ea8a", "filename": "src/test/ui/pattern/usefulness/deny-irrefutable-let-patterns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fdeny-irrefutable-let-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fdeny-irrefutable-let-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fdeny-irrefutable-let-patterns.rs?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -1,5 +1,4 @@\n #![feature(if_let_guard)]\n-#![allow(incomplete_features)]\n \n #![deny(irrefutable_let_patterns)]\n "}, {"sha": "b97683526bac370556767a1e67e196f8bad4a02f", "filename": "src/test/ui/pattern/usefulness/deny-irrefutable-let-patterns.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fdeny-irrefutable-let-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fdeny-irrefutable-let-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fdeny-irrefutable-let-patterns.stderr?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -1,19 +1,19 @@\n error: irrefutable `if let` pattern\n-  --> $DIR/deny-irrefutable-let-patterns.rs:7:8\n+  --> $DIR/deny-irrefutable-let-patterns.rs:6:8\n    |\n LL |     if let _ = 5 {}\n    |        ^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/deny-irrefutable-let-patterns.rs:4:9\n+  --> $DIR/deny-irrefutable-let-patterns.rs:3:9\n    |\n LL | #![deny(irrefutable_let_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n \n error: irrefutable `while let` pattern\n-  --> $DIR/deny-irrefutable-let-patterns.rs:9:11\n+  --> $DIR/deny-irrefutable-let-patterns.rs:8:11\n    |\n LL |     while let _ = 5 {\n    |           ^^^^^^^^^\n@@ -22,7 +22,7 @@ LL |     while let _ = 5 {\n    = help: consider instead using a `loop { ... }` with a `let` inside it\n \n error: irrefutable `if let` guard pattern\n-  --> $DIR/deny-irrefutable-let-patterns.rs:14:18\n+  --> $DIR/deny-irrefutable-let-patterns.rs:13:18\n    |\n LL |         _ if let _ = 2 => {}\n    |                  ^"}, {"sha": "1f32e4af121f2b240c496cea98272fd2f9c9ed4d", "filename": "src/test/ui/rfc-2294-if-let-guard/bindings.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fbindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fbindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fbindings.rs?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -1,5 +1,4 @@\n #![feature(if_let_guard)]\n-#![allow(incomplete_features)]\n \n fn main() {\n     match Some(None) {"}, {"sha": "2463b7f3eacc7eb543c41c89c9af226e86b9d1bf", "filename": "src/test/ui/rfc-2294-if-let-guard/bindings.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fbindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fbindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fbindings.stderr?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -1,11 +1,11 @@\n error[E0425]: cannot find value `y` in this scope\n-  --> $DIR/bindings.rs:7:14\n+  --> $DIR/bindings.rs:6:14\n    |\n LL |         _ => y,\n    |              ^ not found in this scope\n \n error[E0425]: cannot find value `y` in this scope\n-  --> $DIR/bindings.rs:9:5\n+  --> $DIR/bindings.rs:8:5\n    |\n LL |     y\n    |     ^ not found in this scope"}, {"sha": "3da57989df2b5820db159081b68af6c9cf7e22e5", "filename": "src/test/ui/rfc-2294-if-let-guard/run-pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Frun-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Frun-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Frun-pass.rs?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -1,7 +1,6 @@\n // run-pass\n \n #![feature(if_let_guard)]\n-#![allow(incomplete_features)]\n \n enum Foo {\n     Bar,"}, {"sha": "ad178dfa43947b1c4d682721b6c7dd24df94fa0e", "filename": "src/test/ui/rfc-2294-if-let-guard/typeck.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ftypeck.rs?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -1,5 +1,4 @@\n #![feature(if_let_guard)]\n-#![allow(incomplete_features)]\n \n fn ok() -> Result<Option<bool>, ()> {\n     Ok(Some(true))"}, {"sha": "fbb941ffd9102ea427646a9ae47f95d654c22398", "filename": "src/test/ui/rfc-2294-if-let-guard/typeck.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ftypeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ftypeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ftypeck.stderr?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/typeck.rs:10:22\n+  --> $DIR/typeck.rs:9:22\n    |\n LL |         Ok(x) if let Err(_) = x => {},\n    |                      ^^^^^^ expected enum `Option`, found enum `Result`\n@@ -8,7 +8,7 @@ LL |         Ok(x) if let Err(_) = x => {},\n               found enum `Result<_, _>`\n \n error[E0308]: mismatched types\n-  --> $DIR/typeck.rs:12:22\n+  --> $DIR/typeck.rs:11:22\n    |\n LL |         Ok(x) if let 0 = x => {},\n    |                      ^ expected enum `Option`, found integer"}, {"sha": "3ad1a50c61f83194efa915efb98a486af794d1bc", "filename": "src/test/ui/rfc-2294-if-let-guard/warns.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fwarns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fwarns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fwarns.rs?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -1,5 +1,4 @@\n #![feature(if_let_guard)]\n-#![allow(incomplete_features)]\n \n #[deny(irrefutable_let_patterns)]\n fn irrefutable_let_guard() {"}, {"sha": "cf64513f9c81baa2a3e91fe3ed522a0ab5d5553e", "filename": "src/test/ui/rfc-2294-if-let-guard/warns.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fwarns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dabdd6de1fc64ab435476bfc3ef340118097214b/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fwarns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Fwarns.stderr?ref=dabdd6de1fc64ab435476bfc3ef340118097214b", "patch": "@@ -1,25 +1,25 @@\n error: irrefutable `if let` guard pattern\n-  --> $DIR/warns.rs:7:24\n+  --> $DIR/warns.rs:6:24\n    |\n LL |         Some(x) if let () = x => {}\n    |                        ^^\n    |\n note: the lint level is defined here\n-  --> $DIR/warns.rs:4:8\n+  --> $DIR/warns.rs:3:8\n    |\n LL | #[deny(irrefutable_let_patterns)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this pattern will always match, so the guard is useless\n    = help: consider removing the guard and adding a `let` inside the match arm\n \n error: unreachable pattern\n-  --> $DIR/warns.rs:16:25\n+  --> $DIR/warns.rs:15:25\n    |\n LL |         x if let None | None = x => {}\n    |                         ^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/warns.rs:13:8\n+  --> $DIR/warns.rs:12:8\n    |\n LL | #[deny(unreachable_patterns)]\n    |        ^^^^^^^^^^^^^^^^^^^^"}]}