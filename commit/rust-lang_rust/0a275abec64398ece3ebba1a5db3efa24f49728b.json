{"sha": "0a275abec64398ece3ebba1a5db3efa24f49728b", "node_id": "C_kwDOAAsO6NoAKDBhMjc1YWJlYzY0Mzk4ZWNlM2ViYmExYTVkYjNlZmEyNGY0OTcyOGI", "commit": {"author": {"name": "ozkanonur", "email": "work@onurozkan.dev", "date": "2022-11-13T18:30:36Z"}, "committer": {"name": "ozkanonur", "email": "work@onurozkan.dev", "date": "2022-11-13T18:30:36Z"}, "message": "copy doc output files by format r=ozkanonur\n\nSigned-off-by: ozkanonur <work@onurozkan.dev>", "tree": {"sha": "52fbb69259ebea6a7b431a9f5799728736e38262", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52fbb69259ebea6a7b431a9f5799728736e38262"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a275abec64398ece3ebba1a5db3efa24f49728b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a275abec64398ece3ebba1a5db3efa24f49728b", "html_url": "https://github.com/rust-lang/rust/commit/0a275abec64398ece3ebba1a5db3efa24f49728b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a275abec64398ece3ebba1a5db3efa24f49728b/comments", "author": {"login": "ozkanonur", "id": 39852038, "node_id": "MDQ6VXNlcjM5ODUyMDM4", "avatar_url": "https://avatars.githubusercontent.com/u/39852038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozkanonur", "html_url": "https://github.com/ozkanonur", "followers_url": "https://api.github.com/users/ozkanonur/followers", "following_url": "https://api.github.com/users/ozkanonur/following{/other_user}", "gists_url": "https://api.github.com/users/ozkanonur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozkanonur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozkanonur/subscriptions", "organizations_url": "https://api.github.com/users/ozkanonur/orgs", "repos_url": "https://api.github.com/users/ozkanonur/repos", "events_url": "https://api.github.com/users/ozkanonur/events{/privacy}", "received_events_url": "https://api.github.com/users/ozkanonur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ozkanonur", "id": 39852038, "node_id": "MDQ6VXNlcjM5ODUyMDM4", "avatar_url": "https://avatars.githubusercontent.com/u/39852038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozkanonur", "html_url": "https://github.com/ozkanonur", "followers_url": "https://api.github.com/users/ozkanonur/followers", "following_url": "https://api.github.com/users/ozkanonur/following{/other_user}", "gists_url": "https://api.github.com/users/ozkanonur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozkanonur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozkanonur/subscriptions", "organizations_url": "https://api.github.com/users/ozkanonur/orgs", "repos_url": "https://api.github.com/users/ozkanonur/repos", "events_url": "https://api.github.com/users/ozkanonur/events{/privacy}", "received_events_url": "https://api.github.com/users/ozkanonur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4d6307c633c954971f3ca7876d4f29f3fe83614", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d6307c633c954971f3ca7876d4f29f3fe83614", "html_url": "https://github.com/rust-lang/rust/commit/e4d6307c633c954971f3ca7876d4f29f3fe83614"}], "stats": {"total": 96, "additions": 83, "deletions": 13}, "files": [{"sha": "fd6f3926817e65edacb87e4b67413e67cba84220", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 46, "deletions": 13, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/0a275abec64398ece3ebba1a5db3efa24f49728b/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a275abec64398ece3ebba1a5db3efa24f49728b/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=0a275abec64398ece3ebba1a5db3efa24f49728b", "patch": "@@ -551,6 +551,49 @@ fn doc_std(\n     extra_args: &[&OsStr],\n     requested_crates: &[String],\n ) {\n+    // `cargo` uses the same directory for both JSON docs and HTML docs.\n+    // This could lead to cross-contamination when copying files into the specified `out` directory.\n+    // For example:\n+    // ```bash\n+    // x doc std\n+    // x doc std --json\n+    // ```\n+    // could lead to HTML docs being copied into the JSON docs output directory.\n+    // To avoid this issue, we copy generated docs instead of whole directory by\n+    // checking doc format and generated files.\n+    fn cp_docs_by_doc_format(\n+        format: &DocumentationFormat,\n+        builder: &Builder<'_>,\n+        src: &Path,\n+        dst: &Path,\n+    ) {\n+        for f in builder.read_dir(src) {\n+            let path = f.path();\n+            let name = path.file_name().unwrap();\n+            let dst = dst.join(name);\n+\n+            if t!(f.file_type()).is_dir() && format == &DocumentationFormat::HTML {\n+                t!(fs::create_dir_all(&dst));\n+                cp_docs_by_doc_format(format, builder, &path, &dst);\n+            } else {\n+                let _ = fs::remove_file(&dst);\n+                let extension = path.extension().and_then(OsStr::to_str);\n+\n+                match format {\n+                    DocumentationFormat::HTML if extension != Some(\"json\") => {\n+                        builder.copy(&path, &dst)\n+                    }\n+                    DocumentationFormat::JSON\n+                        if extension == Some(\"json\") || name.to_str() == Some(\".stamp\") =>\n+                    {\n+                        builder.copy(&path, &dst)\n+                    }\n+                    _ => {}\n+                }\n+            }\n+        }\n+    }\n+\n     builder.info(&format!(\n         \"Documenting stage{} std ({}) in {} format\",\n         stage,\n@@ -568,18 +611,6 @@ fn doc_std(\n     // We will then copy the files from this directory into the final `out` directory, the specified\n     // as a function parameter.\n     let out_dir = builder.stage_out(compiler, Mode::Std).join(target.triple).join(\"doc\");\n-    // `cargo` uses the same directory for both JSON docs and HTML docs.\n-    // This could lead to cross-contamination when copying files into the specified `out` directory.\n-    // For example:\n-    // ```bash\n-    // x doc std\n-    // x doc std --json\n-    // ```\n-    // could lead to HTML docs being copied into the JSON docs output directory.\n-    // To avoid this issue, we clean the doc folder before invoking `cargo`.\n-    if out_dir.exists() {\n-        builder.remove_dir(&out_dir);\n-    }\n \n     let run_cargo_rustdoc_for = |package: &str| {\n         let mut cargo = builder.cargo(compiler, Mode::Std, SourceType::InTree, target, \"rustdoc\");\n@@ -605,7 +636,9 @@ fn doc_std(\n         }\n     }\n \n-    builder.cp_r(&out_dir, &out);\n+    if !builder.config.dry_run() {\n+        cp_docs_by_doc_format(&format, builder, &out_dir, &out);\n+    }\n }\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]"}, {"sha": "bfabbbc65862fcb04d3190ebfd89713ddb7e38d2", "filename": "src/test/run-make/rustdoc-verify-output-files/Makefile", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0a275abec64398ece3ebba1a5db3efa24f49728b/src%2Ftest%2Frun-make%2Frustdoc-verify-output-files%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/0a275abec64398ece3ebba1a5db3efa24f49728b/src%2Ftest%2Frun-make%2Frustdoc-verify-output-files%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-verify-output-files%2FMakefile?ref=0a275abec64398ece3ebba1a5db3efa24f49728b", "patch": "@@ -0,0 +1,36 @@\n+include ../../run-make-fulldeps/tools.mk\n+\n+OUTPUT_DIR := \"$(TMPDIR)/rustdoc\"\n+TMP_OUTPUT_DIR := \"$(TMPDIR)/tmp-rustdoc\"\n+\n+all:\n+\t# Generate html docs\n+\t$(RUSTDOC) src/lib.rs --crate-name foobar --crate-type lib --out-dir $(OUTPUT_DIR)\n+\n+\t# Copy first output for to check if it's exactly same after second compilation\n+\tcp -R $(OUTPUT_DIR) $(TMP_OUTPUT_DIR)\n+\n+\t# Generate html docs once again on same output\n+\t$(RUSTDOC) src/lib.rs --crate-name foobar --crate-type lib --out-dir $(OUTPUT_DIR)\n+\n+\t# Check if everything exactly same\n+\t$(DIFF) -r -q $(OUTPUT_DIR) $(TMP_OUTPUT_DIR)\n+\n+\t# Generate json doc on the same output\n+\t$(RUSTDOC) src/lib.rs --crate-name foobar --crate-type lib --out-dir $(OUTPUT_DIR) -Z unstable-options --output-format json\n+\n+\t# Check if expected json file is generated\n+\t[ -e $(OUTPUT_DIR)/foobar.json ]\n+\n+\t# TODO\n+\t# We should re-generate json doc once again and compare the diff with previously\n+\t# generated one. Because layout of json docs changes in each compilation, we can't\n+\t# do that currently.\n+\t#\n+\t# See https://github.com/rust-lang/rust/issues/103785#issuecomment-1307425590 for details.\n+\n+\t# remove generated json doc\n+\trm $(OUTPUT_DIR)/foobar.json\n+\n+\t# Check if json doc compilation broke any of the html files generated previously\n+\t$(DIFF) -r -q $(OUTPUT_DIR) $(TMP_OUTPUT_DIR)"}, {"sha": "5df7576133a684ab8f887f442084e99062eb4886", "filename": "src/test/run-make/rustdoc-verify-output-files/src/lib.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a275abec64398ece3ebba1a5db3efa24f49728b/src%2Ftest%2Frun-make%2Frustdoc-verify-output-files%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a275abec64398ece3ebba1a5db3efa24f49728b/src%2Ftest%2Frun-make%2Frustdoc-verify-output-files%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-verify-output-files%2Fsrc%2Flib.rs?ref=0a275abec64398ece3ebba1a5db3efa24f49728b", "patch": "@@ -0,0 +1 @@\n+// nothing to see here"}]}