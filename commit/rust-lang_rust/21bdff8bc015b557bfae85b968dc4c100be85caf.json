{"sha": "21bdff8bc015b557bfae85b968dc4c100be85caf", "node_id": "C_kwDOAAsO6NoAKDIxYmRmZjhiYzAxNWI1NTdiZmFlODViOTY4ZGM0YzEwMGJlODVjYWY", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-01T14:28:06Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-01T14:28:06Z"}, "message": "Fix transmute from vector to scalar pair again", "tree": {"sha": "67917dcbcfd9761a58230e93eb46722ae33b0ab6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67917dcbcfd9761a58230e93eb46722ae33b0ab6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21bdff8bc015b557bfae85b968dc4c100be85caf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21bdff8bc015b557bfae85b968dc4c100be85caf", "html_url": "https://github.com/rust-lang/rust/commit/21bdff8bc015b557bfae85b968dc4c100be85caf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21bdff8bc015b557bfae85b968dc4c100be85caf/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78bf4af6592c41e9595091a3b24e689190d8b972", "url": "https://api.github.com/repos/rust-lang/rust/commits/78bf4af6592c41e9595091a3b24e689190d8b972", "html_url": "https://github.com/rust-lang/rust/commit/78bf4af6592c41e9595091a3b24e689190d8b972"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "320eecaee008e4da9fa98f8e9d0aab428b1f95b8", "filename": "src/value_and_place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21bdff8bc015b557bfae85b968dc4c100be85caf/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21bdff8bc015b557bfae85b968dc4c100be85caf/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=21bdff8bc015b557bfae85b968dc4c100be85caf", "patch": "@@ -588,7 +588,7 @@ impl<'tcx> CPlace<'tcx> {\n                 return;\n             }\n             CPlaceInner::VarPair(_local, var1, var2) => {\n-                let (data1, data2) = if self.layout().ty == dst_layout.ty {\n+                let (data1, data2) = if from.layout().ty == dst_layout.ty {\n                     CValue(from.0, dst_layout).load_scalar_pair(fx)\n                 } else {\n                     let (ptr, meta) = from.force_stack(fx);"}]}