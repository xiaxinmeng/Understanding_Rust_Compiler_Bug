{"sha": "eab164842a07be9ca578e4a9c679c125250dcaca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhYjE2NDg0MmEwN2JlOWNhNTc4ZTRhOWM2NzljMTI1MjUwZGNhY2E=", "commit": {"author": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2017-09-17T11:19:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-17T11:19:06Z"}, "message": "Rollup merge of #44553 - qmx:refactor-remove-overzealous-box-szero-optimization, r=arielb1\n\nremove overzealous Box<ZeroSizeType> optimization", "tree": {"sha": "015013ae735a3933526f6008980b865e6a6d0517", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/015013ae735a3933526f6008980b865e6a6d0517"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eab164842a07be9ca578e4a9c679c125250dcaca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eab164842a07be9ca578e4a9c679c125250dcaca", "html_url": "https://github.com/rust-lang/rust/commit/eab164842a07be9ca578e4a9c679c125250dcaca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eab164842a07be9ca578e4a9c679c125250dcaca/comments", "author": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efdcd5efef53dd1fb781d4db7aea8834a8ebaffe", "url": "https://api.github.com/repos/rust-lang/rust/commits/efdcd5efef53dd1fb781d4db7aea8834a8ebaffe", "html_url": "https://github.com/rust-lang/rust/commit/efdcd5efef53dd1fb781d4db7aea8834a8ebaffe"}, {"sha": "916ccc58ac6b409a9f2f987c46d3d08f89b55097", "url": "https://api.github.com/repos/rust-lang/rust/commits/916ccc58ac6b409a9f2f987c46d3d08f89b55097", "html_url": "https://github.com/rust-lang/rust/commit/916ccc58ac6b409a9f2f987c46d3d08f89b55097"}], "stats": {"total": 42, "additions": 2, "deletions": 40}, "files": [{"sha": "3939497971337f152304f2d95b6dd1acb23a5350", "filename": "src/librustc_trans/glue.rs", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/eab164842a07be9ca578e4a9c679c125250dcaca/src%2Flibrustc_trans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eab164842a07be9ca578e4a9c679c125250dcaca/src%2Flibrustc_trans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fglue.rs?ref=eab164842a07be9ca578e4a9c679c125250dcaca", "patch": "@@ -16,51 +16,14 @@ use std;\n \n use llvm;\n use llvm::{ValueRef};\n-use rustc::traits;\n-use rustc::ty::{self, Ty, TypeFoldable};\n+use rustc::ty::{self, Ty};\n use rustc::ty::layout::LayoutTyper;\n use common::*;\n use meth;\n use monomorphize;\n use value::Value;\n use builder::Builder;\n \n-pub fn needs_drop_glue<'a, 'tcx>(scx: &SharedCrateContext<'a, 'tcx>, t: Ty<'tcx>) -> bool {\n-    assert!(t.is_normalized_for_trans());\n-\n-    let t = scx.tcx().erase_regions(&t);\n-\n-    // FIXME (#22815): note that type_needs_drop conservatively\n-    // approximates in some cases and may say a type expression\n-    // requires drop glue when it actually does not.\n-    //\n-    // (In this case it is not clear whether any harm is done, i.e.\n-    // erroneously returning `true` in some cases where we could have\n-    // returned `false` does not appear unsound. The impact on\n-    // code quality is unknown at this time.)\n-\n-    if !scx.type_needs_drop(t) {\n-        return false;\n-    }\n-    match t.sty {\n-        ty::TyAdt(def, _) if def.is_box() => {\n-            let typ = t.boxed_ty();\n-            if !scx.type_needs_drop(typ) && scx.type_is_sized(typ) {\n-                let layout = t.layout(scx.tcx(), ty::ParamEnv::empty(traits::Reveal::All)).unwrap();\n-                if layout.size(scx).bytes() == 0 {\n-                    // `Box<ZeroSizeType>` does not allocate.\n-                    false\n-                } else {\n-                    true\n-                }\n-            } else {\n-                true\n-            }\n-        }\n-        _ => true\n-    }\n-}\n-\n pub fn size_and_align_of_dst<'a, 'tcx>(bcx: &Builder<'a, 'tcx>, t: Ty<'tcx>, info: ValueRef)\n                                        -> (ValueRef, ValueRef) {\n     debug!(\"calculate size of DST: {}; with lost info: {:?}\","}, {"sha": "309177d9ff6a2602d0be37c971509997acfa3281", "filename": "src/librustc_trans/monomorphize.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eab164842a07be9ca578e4a9c679c125250dcaca/src%2Flibrustc_trans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eab164842a07be9ca578e4a9c679c125250dcaca/src%2Flibrustc_trans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmonomorphize.rs?ref=eab164842a07be9ca578e4a9c679c125250dcaca", "patch": "@@ -10,7 +10,6 @@\n \n use abi::Abi;\n use common::*;\n-use glue;\n \n use rustc::hir::def_id::DefId;\n use rustc::middle::lang_items::DropInPlaceFnLangItem;\n@@ -189,7 +188,7 @@ pub fn resolve<'a, 'tcx>(\n             _ => {\n                 if Some(def_id) == scx.tcx().lang_items().drop_in_place_fn() {\n                     let ty = substs.type_at(0);\n-                    if glue::needs_drop_glue(scx, ty) {\n+                    if scx.type_needs_drop(ty) {\n                         debug!(\" => nontrivial drop glue\");\n                         ty::InstanceDef::DropGlue(def_id, Some(ty))\n                     } else {"}]}