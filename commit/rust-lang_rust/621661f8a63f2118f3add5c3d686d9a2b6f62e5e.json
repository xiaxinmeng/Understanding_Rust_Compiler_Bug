{"sha": "621661f8a63f2118f3add5c3d686d9a2b6f62e5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMTY2MWY4YTYzZjIxMThmM2FkZDVjM2Q2ODZkOWEyYjZmNjJlNWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-04T11:15:01Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-20T21:53:40Z"}, "message": "tweak var/auto/mut recovery", "tree": {"sha": "47dc0c057e2d7614102bb4406977e82f6b846230", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47dc0c057e2d7614102bb4406977e82f6b846230"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/621661f8a63f2118f3add5c3d686d9a2b6f62e5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/621661f8a63f2118f3add5c3d686d9a2b6f62e5e", "html_url": "https://github.com/rust-lang/rust/commit/621661f8a63f2118f3add5c3d686d9a2b6f62e5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/621661f8a63f2118f3add5c3d686d9a2b6f62e5e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49826845a9a32a1b0d4e5180e0c6f0bdf06f1196", "url": "https://api.github.com/repos/rust-lang/rust/commits/49826845a9a32a1b0d4e5180e0c6f0bdf06f1196", "html_url": "https://github.com/rust-lang/rust/commit/49826845a9a32a1b0d4e5180e0c6f0bdf06f1196"}], "stats": {"total": 70, "additions": 39, "deletions": 31}, "files": [{"sha": "42d85e96aef57cbd046bed15a0858ed2cea0335e", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/621661f8a63f2118f3add5c3d686d9a2b6f62e5e/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/621661f8a63f2118f3add5c3d686d9a2b6f62e5e/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=621661f8a63f2118f3add5c3d686d9a2b6f62e5e", "patch": "@@ -42,16 +42,16 @@ impl<'a> Parser<'a> {\n             return self.parse_local_mk(lo, attrs.into()).map(Some)\n         }\n         if self.is_kw_followed_by_ident(kw::Mut) {\n-            return self.recover_stmt_local(lo, attrs.into(), \"missing `let`\", \"let mut\");\n+            return self.recover_stmt_local(lo, attrs.into(), \"missing keyword\", \"let mut\");\n         }\n         if self.is_kw_followed_by_ident(kw::Auto) {\n             self.bump(); // `auto`\n-            let msg = \"to introduce a variable, write `let` instead of `auto`\";\n+            let msg = \"write `let` instead of `auto` to introduce a new variable\";\n             return self.recover_stmt_local(lo, attrs.into(), msg, \"let\");\n         }\n         if self.is_kw_followed_by_ident(sym::var) {\n             self.bump(); // `var`\n-            let msg = \"to introduce a variable, write `let` instead of `var`\";\n+            let msg = \"write `let` instead of `var` to introduce a new variable\";\n             return self.recover_stmt_local(lo, attrs.into(), msg, \"let\");\n         }\n \n@@ -208,14 +208,14 @@ impl<'a> Parser<'a> {\n \n     fn recover_stmt_local(\n         &mut self,\n-        span: Span,\n+        lo: Span,\n         attrs: AttrVec,\n         msg: &str,\n         sugg: &str,\n     ) -> PResult<'a, Option<Stmt>> {\n-        let stmt = self.parse_local_mk(span, attrs)?;\n-        self.struct_span_err(stmt.span, \"invalid variable declaration\")\n-            .span_suggestion_short(span, msg, sugg.to_string(), Applicability::MachineApplicable)\n+        let stmt = self.parse_local_mk(lo, attrs)?;\n+        self.struct_span_err(lo, \"invalid variable declaration\")\n+            .span_suggestion(lo, msg, sugg.to_string(), Applicability::MachineApplicable)\n             .emit();\n         Ok(Some(stmt))\n     }"}, {"sha": "c1826f8caae075afb48aae7dd02894bfab44f365", "filename": "src/test/ui/parser/issue-65257-invalid-var-decl-recovery.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/621661f8a63f2118f3add5c3d686d9a2b6f62e5e/src%2Ftest%2Fui%2Fparser%2Fissue-65257-invalid-var-decl-recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/621661f8a63f2118f3add5c3d686d9a2b6f62e5e/src%2Ftest%2Fui%2Fparser%2Fissue-65257-invalid-var-decl-recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-65257-invalid-var-decl-recovery.rs?ref=621661f8a63f2118f3add5c3d686d9a2b6f62e5e", "patch": "@@ -1,20 +1,20 @@\n fn main() {\n     auto n = 0;//~ ERROR invalid variable declaration\n-    //~^ HELP to introduce a variable, write `let` instead of `auto`\n+    //~^ HELP write `let` instead of `auto` to introduce a new variable\n     auto m;//~ ERROR invalid variable declaration\n-    //~^ HELP to introduce a variable, write `let` instead of `auto`\n+    //~^ HELP write `let` instead of `auto` to introduce a new variable\n     m = 0;\n \n     var n = 0;//~ ERROR invalid variable declaration\n-    //~^ HELP to introduce a variable, write `let` instead of `var`\n+    //~^ HELP write `let` instead of `var` to introduce a new variable\n     var m;//~ ERROR invalid variable declaration\n-    //~^ HELP to introduce a variable, write `let` instead of `var`\n+    //~^ HELP write `let` instead of `var` to introduce a new variable\n     m = 0;\n \n     mut n = 0;//~ ERROR invalid variable declaration\n-    //~^ HELP missing `let`\n+    //~^ HELP missing keyword\n     mut var;//~ ERROR invalid variable declaration\n-    //~^ HELP missing `let`\n+    //~^ HELP missing keyword\n     var = 0;\n \n     let _recovery_witness: () = 0; //~ ERROR mismatched types"}, {"sha": "ad72dd30542c0c91d0d0b48ec717a56cc7bad754", "filename": "src/test/ui/parser/issue-65257-invalid-var-decl-recovery.stderr", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/621661f8a63f2118f3add5c3d686d9a2b6f62e5e/src%2Ftest%2Fui%2Fparser%2Fissue-65257-invalid-var-decl-recovery.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/621661f8a63f2118f3add5c3d686d9a2b6f62e5e/src%2Ftest%2Fui%2Fparser%2Fissue-65257-invalid-var-decl-recovery.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-65257-invalid-var-decl-recovery.stderr?ref=621661f8a63f2118f3add5c3d686d9a2b6f62e5e", "patch": "@@ -2,49 +2,57 @@ error: invalid variable declaration\n   --> $DIR/issue-65257-invalid-var-decl-recovery.rs:2:5\n    |\n LL |     auto n = 0;\n-   |     ----^^^^^^\n-   |     |\n-   |     help: to introduce a variable, write `let` instead of `auto`\n+   |     ^^^^\n+   |\n+help: write `let` instead of `auto` to introduce a new variable\n+   |\n+LL |     let n = 0;\n+   |     ^^^\n \n error: invalid variable declaration\n   --> $DIR/issue-65257-invalid-var-decl-recovery.rs:4:5\n    |\n LL |     auto m;\n-   |     ----^^\n-   |     |\n-   |     help: to introduce a variable, write `let` instead of `auto`\n+   |     ^^^^\n+   |\n+help: write `let` instead of `auto` to introduce a new variable\n+   |\n+LL |     let m;\n+   |     ^^^\n \n error: invalid variable declaration\n   --> $DIR/issue-65257-invalid-var-decl-recovery.rs:8:5\n    |\n LL |     var n = 0;\n-   |     ---^^^^^^\n-   |     |\n-   |     help: to introduce a variable, write `let` instead of `var`\n+   |     ^^^\n+   |\n+help: write `let` instead of `var` to introduce a new variable\n+   |\n+LL |     let n = 0;\n+   |     ^^^\n \n error: invalid variable declaration\n   --> $DIR/issue-65257-invalid-var-decl-recovery.rs:10:5\n    |\n LL |     var m;\n-   |     ---^^\n-   |     |\n-   |     help: to introduce a variable, write `let` instead of `var`\n+   |     ^^^\n+   |\n+help: write `let` instead of `var` to introduce a new variable\n+   |\n+LL |     let m;\n+   |     ^^^\n \n error: invalid variable declaration\n   --> $DIR/issue-65257-invalid-var-decl-recovery.rs:14:5\n    |\n LL |     mut n = 0;\n-   |     ---^^^^^^\n-   |     |\n-   |     help: missing `let`\n+   |     ^^^ help: missing keyword: `let mut`\n \n error: invalid variable declaration\n   --> $DIR/issue-65257-invalid-var-decl-recovery.rs:16:5\n    |\n LL |     mut var;\n-   |     ---^^^^\n-   |     |\n-   |     help: missing `let`\n+   |     ^^^ help: missing keyword: `let mut`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-65257-invalid-var-decl-recovery.rs:20:33"}]}