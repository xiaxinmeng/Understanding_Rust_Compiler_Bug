{"sha": "d416d892fc149c226599d011063e6aaea61a5cc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MTZkODkyZmMxNDljMjI2NTk5ZDAxMTA2M2U2YWFlYTYxYTVjYzU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-09T11:58:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-09T11:58:15Z"}, "message": "Merge #3913\n\n3913: Remove allocations from LCA r=matklad a=matklad\n\nI haven't actually profiled this, but not allocating a hash map (or\nanything, really) seems like a good idea\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "49448cb990672c8385dc7b9688b7a7741049a55d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49448cb990672c8385dc7b9688b7a7741049a55d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d416d892fc149c226599d011063e6aaea61a5cc5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJejw3XCRBK7hj4Ov3rIwAAdHIIACOKcUisAuDgfMRTe4BWkXnl\n/yMkODwZjXVA4QMw1CNm+4DhLWlYqEaAJcyVPtCdKYc9w0QVRti2tlv5nA+245nH\niahff4NCn/HPzJcgFIEoiUQZEJbzdHHyCFel3lMCje/H45+hzIJRhPeclCXU1Dhd\nr9cZFi3qIH5x6WxYT41lHOqEeiH1GgQdur8HHgO4k1iktwdYDNEznb8iOyU0LyLT\nYdPd/ZEnGgzTU8JIpzERi4PfYrSMS+YRzStjtaZBYgdjn709lWRln0LG1/AQBpaR\n6ri7NycMiIu9xDvznDr+u+vmiuXNn2DiFrqQh0icZNHGN0SQ9SAumg//w08R5OI=\n=2Shm\n-----END PGP SIGNATURE-----\n", "payload": "tree 49448cb990672c8385dc7b9688b7a7741049a55d\nparent 1647d5ac60eb5d5c80e7fbadcea55597ec7efaa0\nparent 738fc79c92a0c0dd1147f843a57ed36458644ad4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1586433495 +0000\ncommitter GitHub <noreply@github.com> 1586433495 +0000\n\nMerge #3913\n\n3913: Remove allocations from LCA r=matklad a=matklad\n\nI haven't actually profiled this, but not allocating a hash map (or\nanything, really) seems like a good idea\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d416d892fc149c226599d011063e6aaea61a5cc5", "html_url": "https://github.com/rust-lang/rust/commit/d416d892fc149c226599d011063e6aaea61a5cc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d416d892fc149c226599d011063e6aaea61a5cc5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1647d5ac60eb5d5c80e7fbadcea55597ec7efaa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1647d5ac60eb5d5c80e7fbadcea55597ec7efaa0", "html_url": "https://github.com/rust-lang/rust/commit/1647d5ac60eb5d5c80e7fbadcea55597ec7efaa0"}, {"sha": "738fc79c92a0c0dd1147f843a57ed36458644ad4", "url": "https://api.github.com/repos/rust-lang/rust/commits/738fc79c92a0c0dd1147f843a57ed36458644ad4", "html_url": "https://github.com/rust-lang/rust/commit/738fc79c92a0c0dd1147f843a57ed36458644ad4"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "7f87f421262e067485412ea91f831e76e991ada6", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d416d892fc149c226599d011063e6aaea61a5cc5/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d416d892fc149c226599d011063e6aaea61a5cc5/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=d416d892fc149c226599d011063e6aaea61a5cc5", "patch": "@@ -7,7 +7,7 @@ use std::{\n \n use itertools::Itertools;\n use ra_text_edit::TextEditBuilder;\n-use rustc_hash::{FxHashMap, FxHashSet};\n+use rustc_hash::FxHashMap;\n \n use crate::{\n     AstNode, Direction, NodeOrToken, SyntaxElement, SyntaxNode, SyntaxNodePtr, SyntaxToken,\n@@ -72,8 +72,18 @@ pub fn find_covering_element(root: &SyntaxNode, range: TextRange) -> SyntaxEleme\n }\n \n pub fn least_common_ancestor(u: &SyntaxNode, v: &SyntaxNode) -> Option<SyntaxNode> {\n-    let u_ancestors = u.ancestors().collect::<FxHashSet<SyntaxNode>>();\n-    v.ancestors().find(|it| u_ancestors.contains(it))\n+    if u == v {\n+        return Some(u.clone());\n+    }\n+\n+    let u_depth = u.ancestors().count();\n+    let v_depth = v.ancestors().count();\n+    let keep = u_depth.min(v_depth);\n+\n+    let u_candidates = u.ancestors().skip(u_depth - keep);\n+    let v_canidates = v.ancestors().skip(v_depth - keep);\n+    let (res, _) = u_candidates.zip(v_canidates).find(|(x, y)| x == y)?;\n+    Some(res)\n }\n \n pub fn neighbor<T: AstNode>(me: &T, direction: Direction) -> Option<T> {"}]}