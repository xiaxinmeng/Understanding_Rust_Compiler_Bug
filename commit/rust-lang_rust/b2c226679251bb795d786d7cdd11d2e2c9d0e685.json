{"sha": "b2c226679251bb795d786d7cdd11d2e2c9d0e685", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYzIyNjY3OTI1MWJiNzk1ZDc4NmQ3Y2RkMTFkMmUyYzlkMGU2ODU=", "commit": {"author": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-08-18T14:00:21Z"}, "committer": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-08-24T00:43:16Z"}, "message": "Fix FP for `redundant_closure_call`\n\nVisit the nested things like function body when checking closure call.", "tree": {"sha": "388a8e1a661167f1229f3b1f6d4035eadaae6f80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/388a8e1a661167f1229f3b1f6d4035eadaae6f80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2c226679251bb795d786d7cdd11d2e2c9d0e685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c226679251bb795d786d7cdd11d2e2c9d0e685", "html_url": "https://github.com/rust-lang/rust/commit/b2c226679251bb795d786d7cdd11d2e2c9d0e685", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2c226679251bb795d786d7cdd11d2e2c9d0e685/comments", "author": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27ae4d303ce9103a104c57088913741ab17f4d36", "url": "https://api.github.com/repos/rust-lang/rust/commits/27ae4d303ce9103a104c57088913741ab17f4d36", "html_url": "https://github.com/rust-lang/rust/commit/27ae4d303ce9103a104c57088913741ab17f4d36"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "d8fad217e5a43be33f3101c2d39e73681e4b4545", "filename": "clippy_lints/src/redundant_closure_call.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b2c226679251bb795d786d7cdd11d2e2c9d0e685/clippy_lints%2Fsrc%2Fredundant_closure_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2c226679251bb795d786d7cdd11d2e2c9d0e685/clippy_lints%2Fsrc%2Fredundant_closure_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_closure_call.rs?ref=b2c226679251bb795d786d7cdd11d2e2c9d0e685", "patch": "@@ -95,12 +95,17 @@ impl EarlyLintPass for RedundantClosureCall {\n \n impl<'tcx> LateLintPass<'tcx> for RedundantClosureCall {\n     fn check_block(&mut self, cx: &LateContext<'tcx>, block: &'tcx hir::Block<'_>) {\n-        fn count_closure_usage<'tcx>(block: &'tcx hir::Block<'_>, path: &'tcx hir::Path<'tcx>) -> usize {\n-            struct ClosureUsageCount<'tcx> {\n+        fn count_closure_usage<'a, 'tcx>(\n+            cx: &'a LateContext<'tcx>,\n+            block: &'tcx hir::Block<'_>,\n+            path: &'tcx hir::Path<'tcx>,\n+        ) -> usize {\n+            struct ClosureUsageCount<'a, 'tcx> {\n+                cx: &'a LateContext<'tcx>,\n                 path: &'tcx hir::Path<'tcx>,\n                 count: usize,\n             };\n-            impl<'tcx> hir_visit::Visitor<'tcx> for ClosureUsageCount<'tcx> {\n+            impl<'a, 'tcx> hir_visit::Visitor<'tcx> for ClosureUsageCount<'a, 'tcx> {\n                 type Map = Map<'tcx>;\n \n                 fn visit_expr(&mut self, expr: &'tcx hir::Expr<'tcx>) {\n@@ -117,10 +122,10 @@ impl<'tcx> LateLintPass<'tcx> for RedundantClosureCall {\n                 }\n \n                 fn nested_visit_map(&mut self) -> hir_visit::NestedVisitorMap<Self::Map> {\n-                    hir_visit::NestedVisitorMap::None\n+                    hir_visit::NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n                 }\n             };\n-            let mut closure_usage_count = ClosureUsageCount { path, count: 0 };\n+            let mut closure_usage_count = ClosureUsageCount { cx, path, count: 0 };\n             closure_usage_count.visit_block(block);\n             closure_usage_count.count\n         }\n@@ -136,7 +141,7 @@ impl<'tcx> LateLintPass<'tcx> for RedundantClosureCall {\n                 if let hir::ExprKind::Call(ref closure, _) = call.kind;\n                 if let hir::ExprKind::Path(hir::QPath::Resolved(_, ref path)) = closure.kind;\n                 if ident == path.segments[0].ident;\n-                if count_closure_usage(block, path) == 1;\n+                if count_closure_usage(cx, block, path) == 1;\n                 then {\n                     span_lint(\n                         cx,"}, {"sha": "1f4864b72895bf10142574e214bdfe352eba896a", "filename": "tests/ui/redundant_closure_call_late.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b2c226679251bb795d786d7cdd11d2e2c9d0e685/tests%2Fui%2Fredundant_closure_call_late.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2c226679251bb795d786d7cdd11d2e2c9d0e685/tests%2Fui%2Fredundant_closure_call_late.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call_late.rs?ref=b2c226679251bb795d786d7cdd11d2e2c9d0e685", "patch": "@@ -24,4 +24,16 @@ fn main() {\n     let shadowed_closure = || 2;\n     i = shadowed_closure();\n     i = shadowed_closure();\n+\n+    // Fix FP in #5916\n+    let mut x;\n+    let create = || 2 * 2;\n+    x = create();\n+    fun(move || {\n+        x = create();\n+    })\n+}\n+\n+fn fun<T: 'static + FnMut()>(mut f: T) {\n+    f();\n }"}]}