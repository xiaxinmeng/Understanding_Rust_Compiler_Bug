{"sha": "90ba09d299809389d1f7c362cdc356157ff02130", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYmEwOWQyOTk4MDkzODlkMWY3YzM2MmNkYzM1NjE1N2ZmMDIxMzA=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-24T21:23:44Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-28T19:19:25Z"}, "message": "Add tests", "tree": {"sha": "e42ce381bc088fd3ab1f1167aeb7f19aaf19313c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e42ce381bc088fd3ab1f1167aeb7f19aaf19313c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90ba09d299809389d1f7c362cdc356157ff02130", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAlzF/L0ACgkQaTCGhp1Q\nZjflPxAAmn/0zq+9o8WKBP0pwQO6rsjeyWAyFLaf9wgeOagKG/9WiXLmmoMTlGTe\neYPfYo4RuywCOUDTirwLbLcewudRP6G01qW9cOwIwKAKZ/T9bd+UaEIjVRxH2K7C\n4kY0CvY+BqtGRSc2Y8HkLrBPdOQZtjvrIdw5Z6jrTsBwG2yVtoVIiFB4fhLgxtAl\nX+nwoLS9X+skgm1EnheD86KaXK9L9a67ifInv4Yk/mfPq8rG7LyQMj8X9wnV3/Kg\nbmw0k6UghBTwCBQkksTOFBAVT+AKxkXgg1QyO8uqRt6j/l2m8NWzY/Ayiwibp5g1\nF3k7xDia6Eyh0ZgGgTt9dBzir94SglSj/SlUzfE4SFHLwgXlgomNF1taNDZjKVBI\nTFnEzhge3jSfb4v9pCJuNfQ16jdfhJVO9dgO4+cZiV5Upaif8GoOKqEIGXTtX8/Z\noxkw6mcJKcshTcC5d3T4vew5Ii27z4uxFpw1s2lVZXjq2n9C33nebh76nK2pNTJl\nphs8oTf2sHPPwaG8QYIGfkDmCR91VzbvXe6dhCE9S0aeAYt0Gv2tEldNtdWrCbU8\nTSGBkgCjX8VdD9UcmkY2rtzkssFPhASZLeUu8YsT0oOC7zi9BbNfbKiyXbUmw16Z\nf+XqMIiU/PV2c7j77zHcCfxhIWoWsyBeHC4Asa53Vrzh+PRPtz8=\n=5cDI\n-----END PGP SIGNATURE-----", "payload": "tree e42ce381bc088fd3ab1f1167aeb7f19aaf19313c\nparent 747d288be4a85f3adac67b820df74eef0571ef64\nauthor flip1995 <hello@philkrones.com> 1556141024 +0200\ncommitter flip1995 <hello@philkrones.com> 1556479165 +0200\n\nAdd tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90ba09d299809389d1f7c362cdc356157ff02130", "html_url": "https://github.com/rust-lang/rust/commit/90ba09d299809389d1f7c362cdc356157ff02130", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90ba09d299809389d1f7c362cdc356157ff02130/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "747d288be4a85f3adac67b820df74eef0571ef64", "url": "https://api.github.com/repos/rust-lang/rust/commits/747d288be4a85f3adac67b820df74eef0571ef64", "html_url": "https://github.com/rust-lang/rust/commit/747d288be4a85f3adac67b820df74eef0571ef64"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "075ce8b1a1cb203d9b5ebf6a029244a36797b186", "filename": "src/test/ui-fulldeps/internal-lints/pass_ty_by_ref.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/90ba09d299809389d1f7c362cdc356157ff02130/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ba09d299809389d1f7c362cdc356157ff02130/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fpass_ty_by_ref.rs?ref=90ba09d299809389d1f7c362cdc356157ff02130", "patch": "@@ -0,0 +1,64 @@\n+// compile-flags: -Z unstable-options\n+\n+#![feature(rustc_private)]\n+#![deny(ty_pass_by_reference)]\n+#![allow(unused)]\n+\n+extern crate rustc;\n+\n+use rustc::ty::{Ty, TyCtxt};\n+\n+fn ty_by_ref(\n+    ty_val: Ty<'_>,\n+    ty_ref: &Ty<'_>, //~ ERROR passing `Ty<'_>` by reference\n+    ty_ctxt_val: TyCtxt<'_, '_, '_>,\n+    ty_ctxt_ref: &TyCtxt<'_, '_, '_>, //~ ERROR passing `TyCtxt<'_, '_, '_>` by reference\n+) {\n+}\n+\n+fn ty_multi_ref(ty_multi: &&Ty<'_>, ty_ctxt_multi: &&&&TyCtxt<'_, '_, '_>) {}\n+//~^ ERROR passing `Ty<'_>` by reference\n+//~^^ ERROR passing `TyCtxt<'_, '_, '_>` by reference\n+\n+trait T {\n+    fn ty_by_ref_in_trait(\n+        ty_val: Ty<'_>,\n+        ty_ref: &Ty<'_>, //~ ERROR passing `Ty<'_>` by reference\n+        ty_ctxt_val: TyCtxt<'_, '_, '_>,\n+        ty_ctxt_ref: &TyCtxt<'_, '_, '_>, //~ ERROR passing `TyCtxt<'_, '_, '_>` by reference\n+    );\n+\n+    fn ty_multi_ref_in_trait(ty_multi: &&Ty<'_>, ty_ctxt_multi: &&&&TyCtxt<'_, '_, '_>);\n+    //~^ ERROR passing `Ty<'_>` by reference\n+    //~^^ ERROR passing `TyCtxt<'_, '_, '_>` by reference\n+}\n+\n+struct Foo;\n+\n+impl T for Foo {\n+    fn ty_by_ref_in_trait(\n+        ty_val: Ty<'_>,\n+        ty_ref: &Ty<'_>,\n+        ty_ctxt_val: TyCtxt<'_, '_, '_>,\n+        ty_ctxt_ref: &TyCtxt<'_, '_, '_>,\n+    ) {\n+    }\n+\n+    fn ty_multi_ref_in_trait(ty_multi: &&Ty<'_>, ty_ctxt_multi: &&&&TyCtxt<'_, '_, '_>) {}\n+}\n+\n+impl Foo {\n+    fn ty_by_ref_assoc(\n+        ty_val: Ty<'_>,\n+        ty_ref: &Ty<'_>, //~ ERROR passing `Ty<'_>` by reference\n+        ty_ctxt_val: TyCtxt<'_, '_, '_>,\n+        ty_ctxt_ref: &TyCtxt<'_, '_, '_>, //~ ERROR passing `TyCtxt<'_, '_, '_>` by reference\n+    ) {\n+    }\n+\n+    fn ty_multi_ref_assoc(ty_multi: &&Ty<'_>, ty_ctxt_multi: &&&&TyCtxt<'_, '_, '_>) {}\n+    //~^ ERROR passing `Ty<'_>` by reference\n+    //~^^ ERROR passing `TyCtxt<'_, '_, '_>` by reference\n+}\n+\n+fn main() {}"}, {"sha": "5e10697ec66d4e76f64a843317e294d1d570293b", "filename": "src/test/ui-fulldeps/internal-lints/qualified_ty_ty_ctxt.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/90ba09d299809389d1f7c362cdc356157ff02130/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ba09d299809389d1f7c362cdc356157ff02130/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fqualified_ty_ty_ctxt.rs?ref=90ba09d299809389d1f7c362cdc356157ff02130", "patch": "@@ -0,0 +1,35 @@\n+// compile-flags: -Z unstable-options\n+\n+#![feature(rustc_private)]\n+#![deny(usage_of_qualified_ty)]\n+#![allow(unused)]\n+\n+extern crate rustc;\n+\n+use rustc::ty::{self, Ty, TyCtxt};\n+\n+macro_rules! qualified_macro {\n+    ($a:ident) => {\n+        fn ty_in_macro(\n+            ty_q: ty::Ty<'_>,\n+            ty: Ty<'_>,\n+            ty_ctxt_q: ty::TyCtxt<'_, '_, '_>,\n+            ty_ctxt: TyCtxt<'_, '_, '_>,\n+        ) {\n+            println!(\"{}\", stringify!($a));\n+        }\n+    };\n+}\n+\n+fn ty_qualified(\n+    ty_q: ty::Ty<'_>, //~ ERROR usage of qualified `ty::Ty<'_>`\n+    ty: Ty<'_>,\n+    ty_ctxt_q: ty::TyCtxt<'_, '_, '_>, //~ ERROR usage of qualified `ty::TyCtxt<'_, '_, '_>`\n+    ty_ctxt: TyCtxt<'_, '_, '_>,\n+) {\n+}\n+\n+\n+fn main() {\n+    qualified_macro!(a);\n+}"}]}