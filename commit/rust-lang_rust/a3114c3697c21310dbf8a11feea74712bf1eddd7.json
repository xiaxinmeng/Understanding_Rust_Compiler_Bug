{"sha": "a3114c3697c21310dbf8a11feea74712bf1eddd7", "node_id": "C_kwDOAAsO6NoAKGEzMTE0YzM2OTdjMjEzMTBkYmY4YTExZmVlYTc0NzEyYmYxZWRkZDc", "commit": {"author": {"name": "daniel.eades", "email": "daniel.eades@hotmail.com", "date": "2023-01-11T16:07:35Z"}, "committer": {"name": "daniel.eades", "email": "daniel.eades@hotmail.com", "date": "2023-01-11T16:07:35Z"}, "message": "move loop index inside iterator", "tree": {"sha": "67a9db7a6c87b7fc5079fe0134281fbf3b92a021", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67a9db7a6c87b7fc5079fe0134281fbf3b92a021"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3114c3697c21310dbf8a11feea74712bf1eddd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3114c3697c21310dbf8a11feea74712bf1eddd7", "html_url": "https://github.com/rust-lang/rust/commit/a3114c3697c21310dbf8a11feea74712bf1eddd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3114c3697c21310dbf8a11feea74712bf1eddd7/comments", "author": null, "committer": null, "parents": [{"sha": "6153ea8dce1dcd60ecff446332c2639be8a6b452", "url": "https://api.github.com/repos/rust-lang/rust/commits/6153ea8dce1dcd60ecff446332c2639be8a6b452", "html_url": "https://github.com/rust-lang/rust/commit/6153ea8dce1dcd60ecff446332c2639be8a6b452"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "c209bd949073c99025ee9de527dd3339399020e7", "filename": "crates/hir-def/src/attr.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a3114c3697c21310dbf8a11feea74712bf1eddd7/crates%2Fhir-def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3114c3697c21310dbf8a11feea74712bf1eddd7/crates%2Fhir-def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fattr.rs?ref=a3114c3697c21310dbf8a11feea74712bf1eddd7", "patch": "@@ -251,19 +251,18 @@ impl Attrs {\n                 let enum_ = &item_tree[loc.id.value];\n \n                 let cfg_options = &crate_graph[krate].cfg_options;\n-                let mut idx = 0;\n-                let Some(variant) = enum_.variants.clone().find(|variant| {\n+\n+                let Some(variant) = enum_.variants.clone().filter(|variant| {\n                     let attrs = item_tree.attrs(db, krate, (*variant).into());\n-                    if attrs.is_cfg_enabled(cfg_options) {\n-                        if it.local_id == Idx::from_raw(RawIdx::from(idx)) {\n-                            return true\n-                        }\n-                        idx += 1;\n-                    }\n-                    false\n-                }) else {\n+                    attrs.is_cfg_enabled(cfg_options)\n+                })\n+                .zip(0u32..)\n+                .find(|(_variant, idx)| it.local_id == Idx::from_raw(RawIdx::from(*idx)))\n+                .map(|(variant, _idx)| variant)\n+                else {\n                     return Arc::new(res);\n                 };\n+\n                 (item_tree[variant].fields.clone(), item_tree, krate)\n             }\n             VariantId::StructId(it) => {"}]}