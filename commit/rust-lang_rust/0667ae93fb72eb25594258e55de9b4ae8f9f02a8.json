{"sha": "0667ae93fb72eb25594258e55de9b4ae8f9f02a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NjdhZTkzZmI3MmViMjU1OTQyNThlNTVkZTliNGFlOGY5ZjAyYTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-17T20:11:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-17T20:11:57Z"}, "message": "Auto merge of #33665 - golddranks:thread-park-add-big-picture-explanation, r=aturon\n\nAdded a big-picture explanation for thread::park() & co.\n\nAs I said in https://www.reddit.com/r/rust/comments/4ihvv1/hey_rust_programmers_got_a_question_ask_here/d372s4i, the current explanation of the `park()` and `unpark()` is a bit unclear. It says that they're used for blocking, but then it goes on explaining the semantics in detail, leaving the bigger picture a bit unclear.\n\nI added a short high-level explanation that explains how the functions are used. I also exposed the full paths (`thread::park()` and `thread::Thread::unpark()`), because `unpark()`, being a method, is not directly visible at the module level.", "tree": {"sha": "687493154183e44691c5996fa5020cf088c6138a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/687493154183e44691c5996fa5020cf088c6138a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0667ae93fb72eb25594258e55de9b4ae8f9f02a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0667ae93fb72eb25594258e55de9b4ae8f9f02a8", "html_url": "https://github.com/rust-lang/rust/commit/0667ae93fb72eb25594258e55de9b4ae8f9f02a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0667ae93fb72eb25594258e55de9b4ae8f9f02a8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30422de32d905dca54e503ec7990c4d7d11334da", "url": "https://api.github.com/repos/rust-lang/rust/commits/30422de32d905dca54e503ec7990c4d7d11334da", "html_url": "https://github.com/rust-lang/rust/commit/30422de32d905dca54e503ec7990c4d7d11334da"}, {"sha": "20b912961774add5a83d66404a079238d088afbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/20b912961774add5a83d66404a079238d088afbd", "html_url": "https://github.com/rust-lang/rust/commit/20b912961774add5a83d66404a079238d088afbd"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "dc26370590cf825297e0e9d5901e79d1191ed144", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0667ae93fb72eb25594258e55de9b4ae8f9f02a8/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0667ae93fb72eb25594258e55de9b4ae8f9f02a8/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=0667ae93fb72eb25594258e55de9b4ae8f9f02a8", "patch": "@@ -101,7 +101,9 @@\n //! ## Blocking support: park and unpark\n //!\n //! Every thread is equipped with some basic low-level blocking support, via the\n-//! `park` and `unpark` functions.\n+//! `thread::park()` function and `thread::Thread::unpark()` method. `park()`\n+//! blocks the current thread, which can then be resumed from another thread by\n+//! calling the `unpark()` method on the blocked thread's handle.\n //!\n //! Conceptually, each `Thread` handle has an associated token, which is\n //! initially not present:"}]}