{"sha": "e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZjAzYjk0MzhkNjUxNmZkNzA2N2NmZGEyZjA5YzkyNWQ2ZDkyZjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-02-18T03:12:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-02-18T03:12:14Z"}, "message": "Auto merge of #47544 - U007D:master, r=nikomatsakis\n\nRelax termination_trait's error bound\n\nAs per [this conversation](https://github.com/withoutboats/failure/issues/130#issuecomment-358572413) with @withoutboats and @bkchr", "tree": {"sha": "8cbee3557fe3f889b4b3eaed1761b1ba348a7360", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cbee3557fe3f889b4b3eaed1761b1ba348a7360"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "html_url": "https://github.com/rust-lang/rust/commit/e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5313e8728f028cb7914f3c9f02804158a5732b52", "url": "https://api.github.com/repos/rust-lang/rust/commits/5313e8728f028cb7914f3c9f02804158a5732b52", "html_url": "https://github.com/rust-lang/rust/commit/5313e8728f028cb7914f3c9f02804158a5732b52"}, {"sha": "7948afdc53cabf9330662ec894bf668839880a3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7948afdc53cabf9330662ec894bf668839880a3c", "html_url": "https://github.com/rust-lang/rust/commit/7948afdc53cabf9330662ec894bf668839880a3c"}], "stats": {"total": 95, "additions": 77, "deletions": 18}, "files": [{"sha": "dc7fa53aab63253110945b97a52c82b5b87c2553", "filename": "src/libstd/termination.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Flibstd%2Ftermination.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Flibstd%2Ftermination.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftermination.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use error::Error;\n+use fmt::Debug;\n #[cfg(target_arch = \"wasm32\")]\n mod exit {\n     pub const SUCCESS: i32 = 0;\n@@ -45,27 +45,18 @@ impl Termination for () {\n }\n \n #[unstable(feature = \"termination_trait\", issue = \"43301\")]\n-impl<T: Termination, E: Error> Termination for Result<T, E> {\n+impl<T: Termination, E: Debug> Termination for Result<T, E> {\n     fn report(self) -> i32 {\n         match self {\n             Ok(val) => val.report(),\n             Err(err) => {\n-                print_error(err);\n+                eprintln!(\"Error: {:?}\", err);\n                 exit::FAILURE\n             }\n         }\n     }\n }\n \n-#[unstable(feature = \"termination_trait\", issue = \"43301\")]\n-fn print_error<E: Error>(err: E) {\n-    eprintln!(\"Error: {}\", err.description());\n-\n-    if let Some(ref err) = err.cause() {\n-        eprintln!(\"Caused by: {}\", err.description());\n-    }\n-}\n-\n #[unstable(feature = \"termination_trait\", issue = \"43301\")]\n impl Termination for ! {\n     fn report(self) -> i32 { unreachable!(); }"}, {"sha": "a63162cf73d1c4171f3c0f93f29126df96c719e3", "filename": "src/test/compile-fail/rfc-1937-termination-trait/termination-trait-main-wrong-type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-main-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-main-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-main-wrong-type.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "previous_filename": "src/test/compile-fail/main-wrong-type-2.rs"}, {"sha": "788c38c55be0a65bd167226d9a7342e84f4fddcd", "filename": "src/test/compile-fail/rfc-1937-termination-trait/termination-trait-not-satisfied.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-not-satisfied.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-not-satisfied.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-not-satisfied.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "previous_filename": "src/test/compile-fail/termination-trait-not-satisfied.rs"}, {"sha": "8ce27c0a06250bf61fa02af3034307d9eb243350", "filename": "src/test/run-fail/rfc-1937-termination-trait/termination-trait-for-result-box-error_err.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_err.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// must-compile-successfully\n+// failure-status: 1\n+\n+#![feature(termination_trait)]\n+\n+use std::io::{Error, ErrorKind};\n+\n+fn main() -> Result<(), Box<Error>> {\n+    Err(Box::new(Error::new(ErrorKind::Other, \"returned Box<Error> from main()\")))\n+}"}, {"sha": "5e534da012875f934d609642bc96780d37efb425", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-empty.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-empty.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "previous_filename": "src/test/run-pass/termination-trait-for-empty.rs"}, {"sha": "fa7cb023b447c171431642072eb2160b59185b72", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-i32.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-i32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-i32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-i32.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "previous_filename": "src/test/run-pass/termination-trait-for-i32.rs"}, {"sha": "269ac451cf4d82d87e2e763eaf7cdf693e550bff", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-result-box-error_ok.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_ok.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(termination_trait)]\n+\n+use std::io::Error;\n+\n+fn main() -> Result<(), Box<Error>> {\n+    Ok(())\n+}"}, {"sha": "751db0fb50082a8635f5135399efb87994e73ac9", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-result.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "previous_filename": "src/test/run-pass/termination-trait-for-result.rs"}, {"sha": "269ac451cf4d82d87e2e763eaf7cdf693e550bff", "filename": "src/test/run-pass/termination-trait-for-result-box-error_ok.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Ftermination-trait-for-result-box-error_ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftest%2Frun-pass%2Ftermination-trait-for-result-box-error_ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftermination-trait-for-result-box-error_ok.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(termination_trait)]\n+\n+use std::io::Error;\n+\n+fn main() -> Result<(), Box<Error>> {\n+    Ok(())\n+}"}, {"sha": "d4d3d6c6e9a180016def4d4c24fff96354bd1d75", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "patch": "@@ -232,6 +232,7 @@ pub struct TestProps {\n     // customized normalization rules\n     pub normalize_stdout: Vec<(String, String)>,\n     pub normalize_stderr: Vec<(String, String)>,\n+    pub failure_status: i32,\n }\n \n impl TestProps {\n@@ -260,6 +261,7 @@ impl TestProps {\n             run_pass: false,\n             normalize_stdout: vec![],\n             normalize_stderr: vec![],\n+            failure_status: 101,\n         }\n     }\n \n@@ -383,6 +385,10 @@ impl TestProps {\n             if let Some(rule) = config.parse_custom_normalization(ln, \"normalize-stderr\") {\n                 self.normalize_stderr.push(rule);\n             }\n+\n+            if let Some(code) = config.parse_failure_status(ln) {\n+                self.failure_status = code;\n+            }\n         });\n \n         for key in &[\"RUST_TEST_NOCAPTURE\", \"RUST_TEST_THREADS\"] {\n@@ -488,6 +494,13 @@ impl Config {\n         self.parse_name_directive(line, \"pretty-compare-only\")\n     }\n \n+    fn parse_failure_status(&self, line: &str) -> Option<i32> {\n+        match self.parse_name_value_directive(line, \"failure-status\") {\n+            Some(code) => code.trim().parse::<i32>().ok(),\n+            _ => None,\n+        }\n+    }\n+\n     fn parse_must_compile_successfully(&self, line: &str) -> bool {\n         self.parse_name_directive(line, \"must-compile-successfully\")\n     }"}, {"sha": "c0f82d56d80312963b149f5726656d0e7989fe4c", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8f03b9438d6516fd7067cfda2f09c925d6d92f2/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=e8f03b9438d6516fd7067cfda2f09c925d6d92f2", "patch": "@@ -295,11 +295,14 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn check_correct_failure_status(&self, proc_res: &ProcRes) {\n-        // The value the rust runtime returns on failure\n-        const RUST_ERR: i32 = 101;\n-        if proc_res.status.code() != Some(RUST_ERR) {\n+        let expected_status = Some(self.props.failure_status);\n+        let received_status = proc_res.status.code();\n+\n+        if expected_status != received_status {\n             self.fatal_proc_rec(\n-                &format!(\"failure produced the wrong error: {}\", proc_res.status),\n+                &format!(\"Error: expected failure status ({:?}) but received status {:?}.\",\n+                         expected_status,\n+                         received_status),\n                 proc_res,\n             );\n         }\n@@ -320,7 +323,6 @@ impl<'test> TestCx<'test> {\n         );\n \n         let proc_res = self.exec_compiled_test();\n-\n         if !proc_res.status.success() {\n             self.fatal_proc_rec(\"test run failed!\", &proc_res);\n         }\n@@ -499,7 +501,6 @@ impl<'test> TestCx<'test> {\n                 expected,\n                 actual\n             );\n-            panic!();\n         }\n     }\n "}]}