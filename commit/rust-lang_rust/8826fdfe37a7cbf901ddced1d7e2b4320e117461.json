{"sha": "8826fdfe37a7cbf901ddced1d7e2b4320e117461", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4MjZmZGZlMzdhN2NiZjkwMWRkY2VkMWQ3ZTJiNDMyMGUxMTc0NjE=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-09-28T16:25:48Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-09-28T16:25:48Z"}, "message": "Keep ExpnId abstract by providing conversions", "tree": {"sha": "57de8f22e51d09f717d60361bcf4049aa5ec4de9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57de8f22e51d09f717d60361bcf4049aa5ec4de9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8826fdfe37a7cbf901ddced1d7e2b4320e117461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8826fdfe37a7cbf901ddced1d7e2b4320e117461", "html_url": "https://github.com/rust-lang/rust/commit/8826fdfe37a7cbf901ddced1d7e2b4320e117461", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8826fdfe37a7cbf901ddced1d7e2b4320e117461/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d60de93e2c5af1b69201b5e3bcf8943ae5df664", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d60de93e2c5af1b69201b5e3bcf8943ae5df664", "html_url": "https://github.com/rust-lang/rust/commit/9d60de93e2c5af1b69201b5e3bcf8943ae5df664"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "9f01ff23c7fc93c7956285d174463cce288f7484", "filename": "mk/crates.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8826fdfe37a7cbf901ddced1d7e2b4320e117461/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8826fdfe37a7cbf901ddced1d7e2b4320e117461/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=8826fdfe37a7cbf901ddced1d7e2b4320e117461", "patch": "@@ -71,7 +71,7 @@ DEPS_graphviz := std\n DEPS_green := std native:context_switch\n DEPS_rustuv := std native:uv native:uv_support\n DEPS_native := std\n-DEPS_syntax := std term serialize log fmt_macros debug arena\n+DEPS_syntax := std term serialize log fmt_macros debug arena libc\n DEPS_rustc := syntax flate arena serialize getopts rbml \\\n               time log graphviz debug rustc_llvm rustc_back\n DEPS_rustc_llvm := native:rustllvm libc std"}, {"sha": "7b4d1780ccd690fb072fcd600e29fb6103df936f", "filename": "src/librustc/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibrustc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibrustc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fwrite.rs?ref=8826fdfe37a7cbf901ddced1d7e2b4320e117461", "patch": "@@ -345,7 +345,7 @@ unsafe extern \"C\" fn inline_asm_handler(diag: SMDiagnosticRef,\n \n     match cgcx.lto_ctxt {\n         Some((sess, _)) => {\n-            sess.codemap().with_expn_info(ExpnId(cookie as u32), |info| match info {\n+            sess.codemap().with_expn_info(ExpnId::from_llvm_cookie(cookie), |info| match info {\n                 Some(ei) => sess.span_err(ei.call_site, msg.as_slice()),\n                 None     => sess.err(msg.as_slice()),\n             });"}, {"sha": "c51e242026241c72ee355dc4c7781e29368d8114", "filename": "src/librustc/middle/trans/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs?ref=8826fdfe37a7cbf901ddced1d7e2b4320e117461", "patch": "@@ -149,7 +149,7 @@ pub fn trans_inline_asm<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, ia: &ast::InlineAsm)\n         let kind = llvm::LLVMGetMDKindIDInContext(bcx.ccx().llcx(),\n             key.as_ptr() as *const c_char, key.len() as c_uint);\n \n-        let val: llvm::ValueRef = C_i32(bcx.ccx(), ia.expn_id as i32);\n+        let val: llvm::ValueRef = C_i32(bcx.ccx(), ia.expn_id.to_llvm_cookie());\n \n         llvm::LLVMSetMetadata(r, kind,\n             llvm::LLVMMDNodeInContext(bcx.ccx().llcx(), &val, 1));"}, {"sha": "0fee3ff32185049f222e304b143f72d0cbda1961", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=8826fdfe37a7cbf901ddced1d7e2b4320e117461", "patch": "@@ -10,7 +10,7 @@\n \n // The Rust abstract syntax tree.\n \n-use codemap::{Span, Spanned, DUMMY_SP};\n+use codemap::{Span, Spanned, DUMMY_SP, ExpnId};\n use abi::Abi;\n use ast_util;\n use owned_slice::OwnedSlice;\n@@ -984,7 +984,7 @@ pub struct InlineAsm {\n     pub volatile: bool,\n     pub alignstack: bool,\n     pub dialect: AsmDialect,\n-    pub expn_id: u32,\n+    pub expn_id: ExpnId,\n }\n \n /// represents an argument in a function header"}, {"sha": "e9b2556c53e25dd5a86c78e3cc2d90962b6f997f", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=8826fdfe37a7cbf901ddced1d7e2b4320e117461", "patch": "@@ -26,6 +26,7 @@ source code snippets, etc.\n use serialize::{Encodable, Decodable, Encoder, Decoder};\n use std::cell::RefCell;\n use std::rc::Rc;\n+use libc::c_uint;\n \n pub trait Pos {\n     fn from_uint(n: uint) -> Self;\n@@ -223,11 +224,22 @@ pub struct ExpnInfo {\n     pub callee: NameAndSpan\n }\n \n-#[deriving(PartialEq, Eq, Clone, Show, Hash)]\n-pub struct ExpnId(pub u32);\n+#[deriving(PartialEq, Eq, Clone, Show, Hash, Encodable, Decodable)]\n+pub struct ExpnId(u32);\n \n pub static NO_EXPANSION: ExpnId = ExpnId(-1);\n \n+impl ExpnId {\n+    pub fn from_llvm_cookie(cookie: c_uint) -> ExpnId {\n+        ExpnId(cookie as u32)\n+    }\n+\n+    pub fn to_llvm_cookie(self) -> i32 {\n+        let ExpnId(cookie) = self;\n+        cookie as i32\n+    }\n+}\n+\n pub type FileName = String;\n \n pub struct FileLines {"}, {"sha": "702be0c0eeede090cb501a24a57de7d2983c99d4", "filename": "src/libsyntax/ext/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibsyntax%2Fext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibsyntax%2Fext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fasm.rs?ref=8826fdfe37a7cbf901ddced1d7e2b4320e117461", "patch": "@@ -199,7 +199,7 @@ pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n         }\n     }\n \n-    let codemap::ExpnId(expn_id) = cx.codemap().record_expansion(codemap::ExpnInfo {\n+    let expn_id = cx.codemap().record_expansion(codemap::ExpnInfo {\n         call_site: sp,\n         callee: codemap::NameAndSpan {\n             name: \"asm\".to_string(),"}, {"sha": "a42715441465470b6516b5392e10f0e8bd31bd0a", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8826fdfe37a7cbf901ddced1d7e2b4320e117461/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=8826fdfe37a7cbf901ddced1d7e2b4320e117461", "patch": "@@ -33,6 +33,7 @@ extern crate debug;\n #[phase(plugin, link)] extern crate log;\n extern crate serialize;\n extern crate term;\n+extern crate libc;\n \n pub mod util {\n     pub mod interner;"}]}