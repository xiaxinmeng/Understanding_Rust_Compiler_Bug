{"sha": "dd355700cf4f1fa1744cdeb165b68898fa30a9d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMzU1NzAwY2Y0ZjFmYTE3NDRjZGViMTY1YjY4ODk4ZmEzMGE5ZDE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-16T21:33:50Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-16T21:36:04Z"}, "message": "std::vec: make init_elem nicer by doing fewer moves.", "tree": {"sha": "10bcba94eccbaaac8a1e58712955d3218d6227f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10bcba94eccbaaac8a1e58712955d3218d6227f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd355700cf4f1fa1744cdeb165b68898fa30a9d1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd355700cf4f1fa1744cdeb165b68898fa30a9d1", "html_url": "https://github.com/rust-lang/rust/commit/dd355700cf4f1fa1744cdeb165b68898fa30a9d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd355700cf4f1fa1744cdeb165b68898fa30a9d1/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a5a5922c61cecd5f305a0cd54671dbf2f2a6519", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5a5922c61cecd5f305a0cd54671dbf2f2a6519", "html_url": "https://github.com/rust-lang/rust/commit/8a5a5922c61cecd5f305a0cd54671dbf2f2a6519"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "8722109736cfe925a3ea368c82043bed1a798b44", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dd355700cf4f1fa1744cdeb165b68898fa30a9d1/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd355700cf4f1fa1744cdeb165b68898fa30a9d1/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=dd355700cf4f1fa1744cdeb165b68898fa30a9d1", "patch": "@@ -2196,11 +2196,7 @@ impl<'a,T> MutableVector<'a, T> for &'a mut [T] {\n \n     #[inline]\n     unsafe fn init_elem(self, i: uint, val: T) {\n-        let mut alloc = Some(val);\n-        self.as_mut_buf(|p, _len| {\n-            intrinsics::move_val_init(&mut(*ptr::mut_offset(p, i as int)),\n-                                      alloc.take_unwrap());\n-        })\n+        intrinsics::move_val_init(&mut (*self.as_mut_ptr().offset(i as int)), val);\n     }\n \n     #[inline]"}]}