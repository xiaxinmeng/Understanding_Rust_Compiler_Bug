{"sha": "a1b3189f4864f1ada755e9ebc2e0ce1ac5bf2e06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYjMxODlmNDg2NGYxYWRhNzU1ZTllYmMyZTBjZTFhYzViZjJlMDY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-06T17:05:32Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-09T18:58:40Z"}, "message": "add test illustrating the feature.\n\n(with multiple impls to further exercise correct trait-matching.)", "tree": {"sha": "b01471444a8fb99b8e95618eaca4a56dd8f485f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b01471444a8fb99b8e95618eaca4a56dd8f485f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1b3189f4864f1ada755e9ebc2e0ce1ac5bf2e06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1b3189f4864f1ada755e9ebc2e0ce1ac5bf2e06", "html_url": "https://github.com/rust-lang/rust/commit/a1b3189f4864f1ada755e9ebc2e0ce1ac5bf2e06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1b3189f4864f1ada755e9ebc2e0ce1ac5bf2e06/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9393c21d788347a993108021e8395d0ff992d03", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9393c21d788347a993108021e8395d0ff992d03", "html_url": "https://github.com/rust-lang/rust/commit/d9393c21d788347a993108021e8395d0ff992d03"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "979e76b1ff994a4dd4d62a2cc8f4040e5afb3ee0", "filename": "src/test/run-pass/infer-container-across-object-cast.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/a1b3189f4864f1ada755e9ebc2e0ce1ac5bf2e06/src%2Ftest%2Frun-pass%2Finfer-container-across-object-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b3189f4864f1ada755e9ebc2e0ce1ac5bf2e06/src%2Ftest%2Frun-pass%2Finfer-container-across-object-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finfer-container-across-object-cast.rs?ref=a1b3189f4864f1ada755e9ebc2e0ce1ac5bf2e06", "patch": "@@ -0,0 +1,59 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Given `<expr> as Box<Trait>`, we should be able to infer that a\n+// `Box<_>` is the expected type.\n+\n+trait Foo { fn foo(&self) -> u32; }\n+impl Foo for u32 { fn foo(&self) -> u32 { *self } }\n+\n+// (another impl to ensure trait-matching cannot just choose from a singleton set)\n+impl Foo for  () { fn foo(&self) -> u32 { -176 } }\n+\n+trait Boxed { fn make() -> Self; }\n+impl Boxed for Box<u32> { fn make() -> Self { Box::new(7) } }\n+\n+// (another impl to ensure trait-matching cannot just choose from a singleton set)\n+impl Boxed for () { fn make() -> Self { () } }\n+\n+fn boxed_foo() {\n+    let b7 = Boxed::make() as Box<Foo>;\n+    assert_eq!(b7.foo(), 7);\n+}\n+\n+trait Refed<'a,T> { fn make(&'a T) -> Self; }\n+impl<'a> Refed<'a, u32> for &'a u32 { fn make(x: &'a u32) -> Self { x } }\n+\n+// (another impl to ensure trait-matching cannot just choose from a singleton set)\n+impl<'a,'b> Refed<'a, ()> for &'b () { fn make(_: &'a ()) -> Self { static U: () = (); &U } }\n+\n+fn refed_foo() {\n+    let a = 8;\n+    let b7 = Refed::make(&a) as &Foo;\n+    assert_eq!(b7.foo(), 8);\n+}\n+\n+fn check_subtyping_works() {\n+    fn inner<'short, 'long:'short>(_s: &'short u32,\n+                                   l: &'long u32) -> &'short (Foo+'short) {\n+        Refed::make(l) as &Foo\n+    }\n+\n+    let a = 9;\n+    let b = 10;\n+    let r = inner(&b, &a);\n+    assert_eq!(r.foo(), 9);\n+}\n+\n+pub fn main() {\n+    boxed_foo();\n+    refed_foo();\n+    check_subtyping_works();\n+}"}]}