{"sha": "1a913a634721d3a69f3b41a638d605812aca8d5a", "node_id": "C_kwDOAAsO6NoAKDFhOTEzYTYzNDcyMWQzYTY5ZjNiNDFhNjM4ZDYwNTgxMmFjYThkNWE", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-11-18T00:03:55Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-11-21T18:13:57Z"}, "message": "Add a test case for async dyn* traits", "tree": {"sha": "60f80d05d4692153b6060b2c9becd1f6d49219d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60f80d05d4692153b6060b2c9becd1f6d49219d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a913a634721d3a69f3b41a638d605812aca8d5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a913a634721d3a69f3b41a638d605812aca8d5a", "html_url": "https://github.com/rust-lang/rust/commit/1a913a634721d3a69f3b41a638d605812aca8d5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a913a634721d3a69f3b41a638d605812aca8d5a/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fe6f36224e92db6fbde952e0b7e50863161f6ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fe6f36224e92db6fbde952e0b7e50863161f6ee", "html_url": "https://github.com/rust-lang/rust/commit/7fe6f36224e92db6fbde952e0b7e50863161f6ee"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "a8c5a1dbf66992f7849ba679f543857743ba912d", "filename": "src/test/ui/dyn-star/dyn-async-trait.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/1a913a634721d3a69f3b41a638d605812aca8d5a/src%2Ftest%2Fui%2Fdyn-star%2Fdyn-async-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a913a634721d3a69f3b41a638d605812aca8d5a/src%2Ftest%2Fui%2Fdyn-star%2Fdyn-async-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Fdyn-async-trait.rs?ref=1a913a634721d3a69f3b41a638d605812aca8d5a", "patch": "@@ -0,0 +1,36 @@\n+// check-pass\n+// edition: 2021\n+\n+// This test case is meant to demonstrate how close we can get to async\n+// functions in dyn traits with the current level of dyn* support.\n+\n+#![feature(dyn_star)]\n+#![allow(incomplete_features)]\n+\n+use std::future::Future;\n+\n+trait DynAsyncCounter {\n+    fn increment<'a>(&'a mut self) -> dyn* Future<Output = usize> + 'a;\n+}\n+\n+struct MyCounter {\n+    count: usize,\n+}\n+\n+impl DynAsyncCounter for MyCounter {\n+    fn increment<'a>(&'a mut self) -> dyn* Future<Output = usize> + 'a {\n+        Box::pin(async {\n+            self.count += 1;\n+            self.count\n+        }) as dyn* Future<Output = _> // FIXME(dyn-star): coercion doesn't work here yet\n+    }\n+}\n+\n+async fn do_counter(counter: &mut dyn DynAsyncCounter) -> usize {\n+    counter.increment().await\n+}\n+\n+fn main() {\n+    let mut counter = MyCounter { count: 0 };\n+    let _ = do_counter(&mut counter);\n+}"}]}