{"sha": "2ae5f64daff3f7d01ab5f6816deb899d3fd9845c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZTVmNjRkYWZmM2Y3ZDAxYWI1ZjY4MTZkZWI4OTlkM2ZkOTg0NWM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-14T15:59:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-14T15:59:09Z"}, "message": "Rollup merge of #53233 - andre-richter:master, r=alexcrichton\n\ntargets: aarch64: Add bare-metal aarch64 target\n\nA generic AArch64 target that can be used for writing bare-metal code\nfor 64-bit ARM architectures.", "tree": {"sha": "5b0c3c6fabdbc20aa63420f7518da23a34fed0d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b0c3c6fabdbc20aa63420f7518da23a34fed0d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ae5f64daff3f7d01ab5f6816deb899d3fd9845c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbcvxNCRBK7hj4Ov3rIwAAdHIIAIph3uDk3f8oO68+qv9RXP0Y\nr4fw5HcQf/O6R4OMcXI/5dYzAucdK+G+WuNmRZysCGfoDP5lir0gsNZ+De79hPle\nA0hxv4fKagtHFw8w5b4XOmYVzFUl37KxJM5mr8tYB/KVLPckcWHaDQAA76qsGCEW\nMh00HqEfvhfb7IcR5Yzzb7KxBtTWrTwWReZhPrXn8vO/VGvpSG2YJsEcstpe1w3X\nMTmypJv8X4zbz29Oepbfzmw4y53O7PAlSbTy8+6Dtj6u0drzHJRESqvgSnWBdQ2x\n7IJrktcBtsxvRNl98K4FN98nz7l1E4TbMykUuQI8BDrHDzMTb5aDo+RDWllR3Tk=\n=viR+\n-----END PGP SIGNATURE-----\n", "payload": "tree 5b0c3c6fabdbc20aa63420f7518da23a34fed0d7\nparent 4fb40588ae53f3409acfda11da2f164783886f9d\nparent 898950caf1a7bc9b6c41e74bbfac9591724f307c\nauthor kennytm <kennytm@gmail.com> 1534262349 +0800\ncommitter GitHub <noreply@github.com> 1534262349 +0800\n\nRollup merge of #53233 - andre-richter:master, r=alexcrichton\n\ntargets: aarch64: Add bare-metal aarch64 target\n\nA generic AArch64 target that can be used for writing bare-metal code\nfor 64-bit ARM architectures.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ae5f64daff3f7d01ab5f6816deb899d3fd9845c", "html_url": "https://github.com/rust-lang/rust/commit/2ae5f64daff3f7d01ab5f6816deb899d3fd9845c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ae5f64daff3f7d01ab5f6816deb899d3fd9845c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fb40588ae53f3409acfda11da2f164783886f9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb40588ae53f3409acfda11da2f164783886f9d", "html_url": "https://github.com/rust-lang/rust/commit/4fb40588ae53f3409acfda11da2f164783886f9d"}, {"sha": "898950caf1a7bc9b6c41e74bbfac9591724f307c", "url": "https://api.github.com/repos/rust-lang/rust/commits/898950caf1a7bc9b6c41e74bbfac9591724f307c", "html_url": "https://github.com/rust-lang/rust/commit/898950caf1a7bc9b6c41e74bbfac9591724f307c"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "cfba0614adcd6c4b3033b27ac3acd900f874283f", "filename": "src/librustc_target/spec/aarch64_unknown_none.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/2ae5f64daff3f7d01ab5f6816deb899d3fd9845c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ae5f64daff3f7d01ab5f6816deb899d3fd9845c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none.rs?ref=2ae5f64daff3f7d01ab5f6816deb899d3fd9845c", "patch": "@@ -0,0 +1,46 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Generic AArch64 target for bare-metal code\n+//\n+// Can be used in conjunction with the `target-feature` and\n+// `target-cpu` compiler flags to opt-in more hardware-specific\n+// features.\n+//\n+// For example, `-C target-cpu=cortex-a53`.\n+\n+use super::{LldFlavor, LinkerFlavor, Target, TargetOptions, PanicStrategy};\n+\n+pub fn target() -> Result<Target, String> {\n+    let opts = TargetOptions {\n+        linker: Some(\"rust-lld\".to_owned()),\n+        executables: true,\n+        relocation_model: \"static\".to_string(),\n+        disable_redzone: true,\n+        linker_is_gnu: true,\n+        max_atomic_width: Some(128),\n+        panic_strategy: PanicStrategy::Abort,\n+        abi_blacklist: super::arm_base::abi_blacklist(),\n+        .. Default::default()\n+    };\n+    Ok(Target {\n+        llvm_target: \"aarch64-unknown-none\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"\".to_string(),\n+        data_layout: \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n+        arch: \"aarch64\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+        options: opts,\n+    })\n+}"}, {"sha": "d434f4beb2e389eb6b3af9ed77e3d027fa0110dc", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ae5f64daff3f7d01ab5f6816deb899d3fd9845c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ae5f64daff3f7d01ab5f6816deb899d3fd9845c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=2ae5f64daff3f7d01ab5f6816deb899d3fd9845c", "patch": "@@ -380,6 +380,8 @@ supported_targets! {\n     (\"x86_64-unknown-hermit\", x86_64_unknown_hermit),\n \n     (\"riscv32imac-unknown-none-elf\", riscv32imac_unknown_none_elf),\n+\n+    (\"aarch64-unknown-none\", aarch64_unknown_none),\n }\n \n /// Everything `rustc` knows about how to compile for a specific target."}]}