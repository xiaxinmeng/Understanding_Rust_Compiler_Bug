{"sha": "001c1c51d2d4b6964a2f0c0c5936bfaacf49a585", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMWMxYzUxZDJkNGI2OTY0YTJmMGMwYzU5MzZiZmFhY2Y0OWE1ODU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-31T10:43:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-31T10:43:58Z"}, "message": "Auto merge of #5984 - ebroto:5693_const_assoc_fn, r=flip1995\n\nor_fn_call: ignore nullary associated const fns\n\nThe fix in #5889 was missing associated functions.\n\nchangelog: Ignore also `const fn` methods in [`or_fun_call`]\n\nFixes #5693", "tree": {"sha": "dc8ec21da1ab7ccbff24379fe8b3e348cd71a0b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc8ec21da1ab7ccbff24379fe8b3e348cd71a0b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585", "html_url": "https://github.com/rust-lang/rust/commit/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab64d47c03c168bf6b2a03851894acf74a5ba117", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab64d47c03c168bf6b2a03851894acf74a5ba117", "html_url": "https://github.com/rust-lang/rust/commit/ab64d47c03c168bf6b2a03851894acf74a5ba117"}, {"sha": "7a66e6502dc3c7085b3f4078c01d4957d96175ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a66e6502dc3c7085b3f4078c01d4957d96175ed", "html_url": "https://github.com/rust-lang/rust/commit/7a66e6502dc3c7085b3f4078c01d4957d96175ed"}], "stats": {"total": 56, "additions": 27, "deletions": 29}, "files": [{"sha": "fe2ee0931573b6a5023efa221e2b7948388467be", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=001c1c51d2d4b6964a2f0c0c5936bfaacf49a585", "patch": "@@ -899,7 +899,7 @@ pub fn is_ctor_or_promotable_const_function(cx: &LateContext<'_>, expr: &Expr<'_\n             return match res {\n                 def::Res::Def(DefKind::Variant | DefKind::Ctor(..), ..) => true,\n                 // FIXME: check the constness of the arguments, see https://github.com/rust-lang/rust-clippy/pull/5682#issuecomment-638681210\n-                def::Res::Def(DefKind::Fn, def_id) if has_no_arguments(cx, def_id) => {\n+                def::Res::Def(DefKind::Fn | DefKind::AssocFn, def_id) if has_no_arguments(cx, def_id) => {\n                     const_eval::is_const_fn(cx.tcx, def_id)\n                 },\n                 def::Res::Def(_, def_id) => cx.tcx.is_promotable_const_fn(def_id),"}, {"sha": "5fb568672d35638a4fb027c61ad6f8aef687c6d1", "filename": "tests/ui/or_fun_call.fixed", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585/tests%2Fui%2For_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585/tests%2Fui%2For_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.fixed?ref=001c1c51d2d4b6964a2f0c0c5936bfaacf49a585", "patch": "@@ -58,12 +58,6 @@ fn or_fun_call() {\n     let without_default = Some(Foo);\n     without_default.unwrap_or_else(Foo::new);\n \n-    let mut map = HashMap::<u64, String>::new();\n-    map.entry(42).or_insert_with(String::new);\n-\n-    let mut btree = BTreeMap::<u64, String>::new();\n-    btree.entry(42).or_insert_with(String::new);\n-\n     let stringy = Some(String::from(\"\"));\n     let _ = stringy.unwrap_or_else(|| \"\".to_owned());\n \n@@ -122,6 +116,17 @@ pub fn skip_const_fn_with_no_args() {\n         Some(42)\n     }\n     let _ = None.or(foo());\n+\n+    // See issue #5693.\n+    let mut map = std::collections::HashMap::new();\n+    map.insert(1, vec![1]);\n+    map.entry(1).or_insert(vec![]);\n+\n+    let mut map = HashMap::<u64, String>::new();\n+    map.entry(42).or_insert(String::new());\n+\n+    let mut btree = BTreeMap::<u64, String>::new();\n+    btree.entry(42).or_insert(String::new());\n }\n \n fn main() {}"}, {"sha": "737b0f7e55bc7a56773f0e9b63e64e2a0626b67e", "filename": "tests/ui/or_fun_call.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585/tests%2Fui%2For_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585/tests%2Fui%2For_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.rs?ref=001c1c51d2d4b6964a2f0c0c5936bfaacf49a585", "patch": "@@ -58,12 +58,6 @@ fn or_fun_call() {\n     let without_default = Some(Foo);\n     without_default.unwrap_or(Foo::new());\n \n-    let mut map = HashMap::<u64, String>::new();\n-    map.entry(42).or_insert(String::new());\n-\n-    let mut btree = BTreeMap::<u64, String>::new();\n-    btree.entry(42).or_insert(String::new());\n-\n     let stringy = Some(String::from(\"\"));\n     let _ = stringy.unwrap_or(\"\".to_owned());\n \n@@ -122,6 +116,17 @@ pub fn skip_const_fn_with_no_args() {\n         Some(42)\n     }\n     let _ = None.or(foo());\n+\n+    // See issue #5693.\n+    let mut map = std::collections::HashMap::new();\n+    map.insert(1, vec![1]);\n+    map.entry(1).or_insert(vec![]);\n+\n+    let mut map = HashMap::<u64, String>::new();\n+    map.entry(42).or_insert(String::new());\n+\n+    let mut btree = BTreeMap::<u64, String>::new();\n+    btree.entry(42).or_insert(String::new());\n }\n \n fn main() {}"}, {"sha": "b8a436993f329f3d6f608a228fcee774841b3249", "filename": "tests/ui/or_fun_call.stderr", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585/tests%2Fui%2For_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/001c1c51d2d4b6964a2f0c0c5936bfaacf49a585/tests%2Fui%2For_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.stderr?ref=001c1c51d2d4b6964a2f0c0c5936bfaacf49a585", "patch": "@@ -60,35 +60,23 @@ error: use of `unwrap_or` followed by a function call\n LL |     without_default.unwrap_or(Foo::new());\n    |                     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(Foo::new)`\n \n-error: use of `or_insert` followed by a function call\n-  --> $DIR/or_fun_call.rs:62:19\n-   |\n-LL |     map.entry(42).or_insert(String::new());\n-   |                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_insert_with(String::new)`\n-\n-error: use of `or_insert` followed by a function call\n-  --> $DIR/or_fun_call.rs:65:21\n-   |\n-LL |     btree.entry(42).or_insert(String::new());\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_insert_with(String::new)`\n-\n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:68:21\n+  --> $DIR/or_fun_call.rs:62:21\n    |\n LL |     let _ = stringy.unwrap_or(\"\".to_owned());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| \"\".to_owned())`\n \n error: use of `or` followed by a function call\n-  --> $DIR/or_fun_call.rs:93:35\n+  --> $DIR/or_fun_call.rs:87:35\n    |\n LL |     let _ = Some(\"a\".to_string()).or(Some(\"b\".to_string()));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_else(|| Some(\"b\".to_string()))`\n \n error: use of `or` followed by a function call\n-  --> $DIR/or_fun_call.rs:97:10\n+  --> $DIR/or_fun_call.rs:91:10\n    |\n LL |         .or(Some(Bar(b, Duration::from_secs(2))));\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_else(|| Some(Bar(b, Duration::from_secs(2))))`\n \n-error: aborting due to 15 previous errors\n+error: aborting due to 13 previous errors\n "}]}