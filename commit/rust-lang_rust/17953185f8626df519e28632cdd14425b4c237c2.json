{"sha": "17953185f8626df519e28632cdd14425b4c237c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3OTUzMTg1Zjg2MjZkZjUxOWUyODYzMmNkZDE0NDI1YjRjMjM3YzI=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-03T04:20:07Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-20T03:08:38Z"}, "message": "Remove explicit return from last line of fn", "tree": {"sha": "31cbd6edcfff03a901ac752a2cd6ad15560adf0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31cbd6edcfff03a901ac752a2cd6ad15560adf0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17953185f8626df519e28632cdd14425b4c237c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17953185f8626df519e28632cdd14425b4c237c2", "html_url": "https://github.com/rust-lang/rust/commit/17953185f8626df519e28632cdd14425b4c237c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17953185f8626df519e28632cdd14425b4c237c2/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "438aeb8ca38f19324a5f86cab3a3426005320548", "url": "https://api.github.com/repos/rust-lang/rust/commits/438aeb8ca38f19324a5f86cab3a3426005320548", "html_url": "https://github.com/rust-lang/rust/commit/438aeb8ca38f19324a5f86cab3a3426005320548"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cfb7db7365802e3c8dc254ca718f19309640eb77", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17953185f8626df519e28632cdd14425b4c237c2/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17953185f8626df519e28632cdd14425b4c237c2/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=17953185f8626df519e28632cdd14425b4c237c2", "patch": "@@ -528,7 +528,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         }\n         // use common size calculation for non zero-sized types\n         let cg_value = self.codegen_place(bx, &place.as_place_ref());\n-        return cg_value.len(bx.cx());\n+        cg_value.len(bx.cx())\n     }\n \n     pub fn codegen_scalar_binop("}]}