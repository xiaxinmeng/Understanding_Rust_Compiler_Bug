{"sha": "46cf1ea1cee0712c95f140430850fa9214605edc", "node_id": "C_kwDOAAsO6NoAKDQ2Y2YxZWExY2VlMDcxMmM5NWYxNDA0MzA4NTBmYTkyMTQ2MDVlZGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-21T12:41:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-21T12:41:09Z"}, "message": "Auto merge of #103344 - Dylan-DPC:rollup-d1rpfvx, r=Dylan-DPC\n\nRollup of 6 pull requests\n\nSuccessful merges:\n\n - #102287 (Elaborate supertrait bounds when triggering `unused_must_use` on `impl Trait`)\n - #102922 (Filtering spans when emitting json)\n - #103051 (translation: doc comments with derives, subdiagnostic-less enum variants, more derive use)\n - #103111 (Account for hygiene in typo suggestions, and use them to point to shadowed names)\n - #103260 (Fixup a few tests needing asm support)\n - #103321 (rustdoc: improve appearance of source page navigation bar)\n\nFailed merges:\n\n - #103209 (Diagnostic derives: allow specifying multiple alternative suggestions)\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "11cbfcecf4152e92c37d816d62729b643672f54f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11cbfcecf4152e92c37d816d62729b643672f54f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46cf1ea1cee0712c95f140430850fa9214605edc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46cf1ea1cee0712c95f140430850fa9214605edc", "html_url": "https://github.com/rust-lang/rust/commit/46cf1ea1cee0712c95f140430850fa9214605edc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46cf1ea1cee0712c95f140430850fa9214605edc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "059e52b96b0127a4b6e7f566a2023482e34c27f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/059e52b96b0127a4b6e7f566a2023482e34c27f6", "html_url": "https://github.com/rust-lang/rust/commit/059e52b96b0127a4b6e7f566a2023482e34c27f6"}, {"sha": "0569f56be3b6eae99debf10ad3640144b71f4f0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0569f56be3b6eae99debf10ad3640144b71f4f0e", "html_url": "https://github.com/rust-lang/rust/commit/0569f56be3b6eae99debf10ad3640144b71f4f0e"}], "stats": {"total": 204, "additions": 67, "deletions": 137}, "files": [{"sha": "b8ed9b9ec18f718b0cc56160b0966a9e0cf220a5", "filename": "clippy_lints/src/manual_assert.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/46cf1ea1cee0712c95f140430850fa9214605edc/clippy_lints%2Fsrc%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46cf1ea1cee0712c95f140430850fa9214605edc/clippy_lints%2Fsrc%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_assert.rs?ref=46cf1ea1cee0712c95f140430850fa9214605edc", "patch": "@@ -69,11 +69,13 @@ impl<'tcx> LateLintPass<'tcx> for ManualAssert {\n                     \"only a `panic!` in `if`-then statement\",\n                     |diag| {\n                         // comments can be noisy, do not show them to the user\n-                        diag.tool_only_span_suggestion(\n-                                    expr.span.shrink_to_lo(),\n-                                    \"add comments back\",\n-                                    comments,\n-                                    applicability);\n+                        if !comments.is_empty() {\n+                            diag.tool_only_span_suggestion(\n+                                        expr.span.shrink_to_lo(),\n+                                        \"add comments back\",\n+                                        comments,\n+                                        applicability);\n+                        }\n                         diag.span_suggestion(\n                                     expr.span,\n                                     \"try instead\","}, {"sha": "67debe7e08af6008c7ddf474c37a3c7a59e02614", "filename": "clippy_lints/src/needless_late_init.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/46cf1ea1cee0712c95f140430850fa9214605edc/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46cf1ea1cee0712c95f140430850fa9214605edc/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_late_init.rs?ref=46cf1ea1cee0712c95f140430850fa9214605edc", "patch": "@@ -180,10 +180,13 @@ fn assignment_suggestions<'tcx>(\n     let suggestions = assignments\n         .iter()\n         .flat_map(|assignment| {\n-            [\n-                assignment.span.until(assignment.rhs_span),\n-                assignment.rhs_span.shrink_to_hi().with_hi(assignment.span.hi()),\n-            ]\n+            let mut spans = vec![assignment.span.until(assignment.rhs_span)];\n+\n+            if assignment.rhs_span.hi() != assignment.span.hi() {\n+                spans.push(assignment.rhs_span.shrink_to_hi().with_hi(assignment.span.hi()));\n+            }\n+\n+            spans\n         })\n         .map(|span| (span, String::new()))\n         .collect::<Vec<(Span, String)>>();"}, {"sha": "79c29c04e05962f941499320b6feeb51724d6c60", "filename": "tests/ui/entry.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fentry.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fentry.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.fixed?ref=46cf1ea1cee0712c95f140430850fa9214605edc", "patch": "@@ -1,3 +1,4 @@\n+// needs-asm-support\n // run-rustfix\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]"}, {"sha": "2d7985457d8b4e6705f45066a5cc1647a37d4452", "filename": "tests/ui/entry.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.rs?ref=46cf1ea1cee0712c95f140430850fa9214605edc", "patch": "@@ -1,3 +1,4 @@\n+// needs-asm-support\n // run-rustfix\n \n #![allow(unused, clippy::needless_pass_by_value, clippy::collapsible_if)]"}, {"sha": "2c4c49d2522ca926db9adcc788a48b803e3cce1e", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=46cf1ea1cee0712c95f140430850fa9214605edc", "patch": "@@ -1,5 +1,5 @@\n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:24:5\n+  --> $DIR/entry.rs:25:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         m.insert(k, v);\n@@ -9,7 +9,7 @@ LL | |     }\n    = note: `-D clippy::map-entry` implied by `-D warnings`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:29:5\n+  --> $DIR/entry.rs:30:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         if true {\n@@ -32,7 +32,7 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:38:5\n+  --> $DIR/entry.rs:39:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         if true {\n@@ -55,7 +55,7 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:47:5\n+  --> $DIR/entry.rs:48:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         if true {\n@@ -79,7 +79,7 @@ LL +     }\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:57:5\n+  --> $DIR/entry.rs:58:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         foo();\n@@ -96,7 +96,7 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:63:5\n+  --> $DIR/entry.rs:64:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         match 0 {\n@@ -122,7 +122,7 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:75:5\n+  --> $DIR/entry.rs:76:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         match 0 {\n@@ -146,7 +146,7 @@ LL +     }\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:85:5\n+  --> $DIR/entry.rs:86:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         foo();\n@@ -187,15 +187,15 @@ LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:119:5\n+  --> $DIR/entry.rs:120:5\n    |\n LL | /     if !m.contains_key(&m!(k)) {\n LL | |         m.insert(m!(k), m!(v));\n LL | |     }\n    | |_____^ help: try this: `m.entry(m!(k)).or_insert_with(|| m!(v));`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:151:5\n+  --> $DIR/entry.rs:152:5\n    |\n LL | /     if !m.contains_key(&k) {\n LL | |         let x = (String::new(), String::new());"}, {"sha": "237638ee1344c60274bb31c1accbcf7f7456cee3", "filename": "tests/ui/manual_assert.edition2018.stderr", "status": "modified", "additions": 8, "deletions": 47, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fmanual_assert.edition2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fmanual_assert.edition2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2018.stderr?ref=46cf1ea1cee0712c95f140430850fa9214605edc", "patch": "@@ -4,104 +4,65 @@ error: only a `panic!` in `if`-then statement\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qaqaq{:?}\", a);\n LL | |     }\n-   | |_____^\n+   | |_____^ help: try instead: `assert!(a.is_empty(), \"qaqaq{:?}\", a);`\n    |\n    = note: `-D clippy::manual-assert` implied by `-D warnings`\n-help: try instead\n-   |\n-LL |     assert!(a.is_empty(), \"qaqaq{:?}\", a);\n-   |\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:34:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qwqwq\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(a.is_empty(), \"qwqwq\");\n-   |\n+   | |_____^ help: try instead: `assert!(a.is_empty(), \"qwqwq\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:51:5\n    |\n LL | /     if b.is_empty() {\n LL | |         panic!(\"panic1\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!b.is_empty(), \"panic1\");\n-   |\n+   | |_____^ help: try instead: `assert!(!b.is_empty(), \"panic1\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:54:5\n    |\n LL | /     if b.is_empty() && a.is_empty() {\n LL | |         panic!(\"panic2\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(b.is_empty() && a.is_empty()), \"panic2\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:57:5\n    |\n LL | /     if a.is_empty() && !b.is_empty() {\n LL | |         panic!(\"panic3\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:60:5\n    |\n LL | /     if b.is_empty() || a.is_empty() {\n LL | |         panic!(\"panic4\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(b.is_empty() || a.is_empty()), \"panic4\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:63:5\n    |\n LL | /     if a.is_empty() || !b.is_empty() {\n LL | |         panic!(\"panic5\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:66:5\n    |\n LL | /     if a.is_empty() {\n LL | |         panic!(\"with expansion {}\", one!())\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!a.is_empty(), \"with expansion {}\", one!());\n-   |\n+   | |_____^ help: try instead: `assert!(!a.is_empty(), \"with expansion {}\", one!());`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:73:5"}, {"sha": "237638ee1344c60274bb31c1accbcf7f7456cee3", "filename": "tests/ui/manual_assert.edition2021.stderr", "status": "modified", "additions": 8, "deletions": 47, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fmanual_assert.edition2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fmanual_assert.edition2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2021.stderr?ref=46cf1ea1cee0712c95f140430850fa9214605edc", "patch": "@@ -4,104 +4,65 @@ error: only a `panic!` in `if`-then statement\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qaqaq{:?}\", a);\n LL | |     }\n-   | |_____^\n+   | |_____^ help: try instead: `assert!(a.is_empty(), \"qaqaq{:?}\", a);`\n    |\n    = note: `-D clippy::manual-assert` implied by `-D warnings`\n-help: try instead\n-   |\n-LL |     assert!(a.is_empty(), \"qaqaq{:?}\", a);\n-   |\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:34:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qwqwq\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(a.is_empty(), \"qwqwq\");\n-   |\n+   | |_____^ help: try instead: `assert!(a.is_empty(), \"qwqwq\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:51:5\n    |\n LL | /     if b.is_empty() {\n LL | |         panic!(\"panic1\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!b.is_empty(), \"panic1\");\n-   |\n+   | |_____^ help: try instead: `assert!(!b.is_empty(), \"panic1\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:54:5\n    |\n LL | /     if b.is_empty() && a.is_empty() {\n LL | |         panic!(\"panic2\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(b.is_empty() && a.is_empty()), \"panic2\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:57:5\n    |\n LL | /     if a.is_empty() && !b.is_empty() {\n LL | |         panic!(\"panic3\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:60:5\n    |\n LL | /     if b.is_empty() || a.is_empty() {\n LL | |         panic!(\"panic4\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(b.is_empty() || a.is_empty()), \"panic4\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:63:5\n    |\n LL | /     if a.is_empty() || !b.is_empty() {\n LL | |         panic!(\"panic5\");\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n-   |\n+   | |_____^ help: try instead: `assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:66:5\n    |\n LL | /     if a.is_empty() {\n LL | |         panic!(\"with expansion {}\", one!())\n LL | |     }\n-   | |_____^\n-   |\n-help: try instead\n-   |\n-LL |     assert!(!a.is_empty(), \"with expansion {}\", one!());\n-   |\n+   | |_____^ help: try instead: `assert!(!a.is_empty(), \"with expansion {}\", one!());`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/manual_assert.rs:73:5"}, {"sha": "590ad63c90be3a8972c0cd6568ec59f5f1623a22", "filename": "tests/ui/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_doc.rs?ref=46cf1ea1cee0712c95f140430850fa9214605edc", "patch": "@@ -1,3 +1,4 @@\n+// needs-asm-support\n // aux-build: proc_macro_with_span.rs\n \n #![warn(clippy::missing_docs_in_private_items)]"}, {"sha": "d3bef28bf64c6707fffeb0b7ef853d49517742f2", "filename": "tests/ui/missing_doc.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fmissing_doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46cf1ea1cee0712c95f140430850fa9214605edc/tests%2Fui%2Fmissing_doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_doc.stderr?ref=46cf1ea1cee0712c95f140430850fa9214605edc", "patch": "@@ -1,43 +1,43 @@\n error: missing documentation for a type alias\n-  --> $DIR/missing_doc.rs:15:1\n+  --> $DIR/missing_doc.rs:16:1\n    |\n LL | type Typedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-docs-in-private-items` implied by `-D warnings`\n \n error: missing documentation for a type alias\n-  --> $DIR/missing_doc.rs:16:1\n+  --> $DIR/missing_doc.rs:17:1\n    |\n LL | pub type PubTypedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing_doc.rs:18:1\n+  --> $DIR/missing_doc.rs:19:1\n    |\n LL | mod module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing_doc.rs:19:1\n+  --> $DIR/missing_doc.rs:20:1\n    |\n LL | pub mod pub_module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:23:1\n+  --> $DIR/missing_doc.rs:24:1\n    |\n LL | pub fn foo2() {}\n    | ^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:24:1\n+  --> $DIR/missing_doc.rs:25:1\n    |\n LL | fn foo3() {}\n    | ^^^^^^^^^^^^\n \n error: missing documentation for an enum\n-  --> $DIR/missing_doc.rs:38:1\n+  --> $DIR/missing_doc.rs:39:1\n    |\n LL | / enum Baz {\n LL | |     BazA { a: isize, b: isize },\n@@ -46,75 +46,75 @@ LL | | }\n    | |_^\n \n error: missing documentation for a variant\n-  --> $DIR/missing_doc.rs:39:5\n+  --> $DIR/missing_doc.rs:40:5\n    |\n LL |     BazA { a: isize, b: isize },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing_doc.rs:39:12\n+  --> $DIR/missing_doc.rs:40:12\n    |\n LL |     BazA { a: isize, b: isize },\n    |            ^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing_doc.rs:39:22\n+  --> $DIR/missing_doc.rs:40:22\n    |\n LL |     BazA { a: isize, b: isize },\n    |                      ^^^^^^^^\n \n error: missing documentation for a variant\n-  --> $DIR/missing_doc.rs:40:5\n+  --> $DIR/missing_doc.rs:41:5\n    |\n LL |     BarB,\n    |     ^^^^\n \n error: missing documentation for an enum\n-  --> $DIR/missing_doc.rs:43:1\n+  --> $DIR/missing_doc.rs:44:1\n    |\n LL | / pub enum PubBaz {\n LL | |     PubBazA { a: isize },\n LL | | }\n    | |_^\n \n error: missing documentation for a variant\n-  --> $DIR/missing_doc.rs:44:5\n+  --> $DIR/missing_doc.rs:45:5\n    |\n LL |     PubBazA { a: isize },\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing_doc.rs:44:15\n+  --> $DIR/missing_doc.rs:45:15\n    |\n LL |     PubBazA { a: isize },\n    |               ^^^^^^^^\n \n error: missing documentation for a constant\n-  --> $DIR/missing_doc.rs:64:1\n+  --> $DIR/missing_doc.rs:65:1\n    |\n LL | const FOO: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a constant\n-  --> $DIR/missing_doc.rs:71:1\n+  --> $DIR/missing_doc.rs:72:1\n    |\n LL | pub const FOO4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/missing_doc.rs:73:1\n+  --> $DIR/missing_doc.rs:74:1\n    |\n LL | static BAR: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/missing_doc.rs:80:1\n+  --> $DIR/missing_doc.rs:81:1\n    |\n LL | pub static BAR4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing_doc.rs:82:1\n+  --> $DIR/missing_doc.rs:83:1\n    |\n LL | / mod internal_impl {\n LL | |     /// dox\n@@ -126,31 +126,31 @@ LL | | }\n    | |_^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:85:5\n+  --> $DIR/missing_doc.rs:86:5\n    |\n LL |     pub fn undocumented1() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:86:5\n+  --> $DIR/missing_doc.rs:87:5\n    |\n LL |     pub fn undocumented2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:87:5\n+  --> $DIR/missing_doc.rs:88:5\n    |\n LL |     fn undocumented3() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:92:9\n+  --> $DIR/missing_doc.rs:93:9\n    |\n LL |         pub fn also_undocumented1() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing_doc.rs:93:9\n+  --> $DIR/missing_doc.rs:94:9\n    |\n LL |         fn also_undocumented2() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}