{"sha": "042892a0815fe0fec72ea1a07348d99ca08bf944", "node_id": "C_kwDOAAsO6NoAKDA0Mjg5MmEwODE1ZmUwZmVjNzJlYTFhMDczNDhkOTljYTA4YmY5NDQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-23T18:26:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-23T18:26:30Z"}, "message": "Auto merge of #8466 - tamaroning:fix_reduntant_closure, r=Manishearth\n\nFalse positive redundant_closure when using ref pattern in closure params\n\nfixes #8460\nFixed [redundant_closure] so that closures of which params bound as `ref` or `ref mut ` doesn't trigger the lint.\n(e.g. `|ref x| some_expr` doesn't trigger the lint.)\nchangelog: none", "tree": {"sha": "b1e8091ae7573d4722047e8c0cee28cec51cb5a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1e8091ae7573d4722047e8c0cee28cec51cb5a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/042892a0815fe0fec72ea1a07348d99ca08bf944", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/042892a0815fe0fec72ea1a07348d99ca08bf944", "html_url": "https://github.com/rust-lang/rust/commit/042892a0815fe0fec72ea1a07348d99ca08bf944", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/042892a0815fe0fec72ea1a07348d99ca08bf944/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f8760a44ce9b1424f6f1519ed452d6b323bc275", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f8760a44ce9b1424f6f1519ed452d6b323bc275", "html_url": "https://github.com/rust-lang/rust/commit/7f8760a44ce9b1424f6f1519ed452d6b323bc275"}, {"sha": "31b49b0be8e1153da13be71dcc9d6bff888217e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/31b49b0be8e1153da13be71dcc9d6bff888217e2", "html_url": "https://github.com/rust-lang/rust/commit/31b49b0be8e1153da13be71dcc9d6bff888217e2"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "d23c0c225e192e84fc4ad27b0e6a5d3ac613713d", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/042892a0815fe0fec72ea1a07348d99ca08bf944/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/042892a0815fe0fec72ea1a07348d99ca08bf944/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=042892a0815fe0fec72ea1a07348d99ca08bf944", "patch": "@@ -10,6 +10,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::{Expr, ExprKind, Param, PatKind, Unsafety};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow};\n+use rustc_middle::ty::binding::BindingMode;\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, ClosureKind, Ty, TypeFoldable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -169,11 +170,17 @@ fn check_inputs(cx: &LateContext<'_>, params: &[Param<'_>], call_args: &[Expr<'_\n     if params.len() != call_args.len() {\n         return false;\n     }\n+    let binding_modes = cx.typeck_results().pat_binding_modes();\n     std::iter::zip(params, call_args).all(|(param, arg)| {\n         match param.pat.kind {\n             PatKind::Binding(_, id, ..) if path_to_local_id(arg, id) => {},\n             _ => return false,\n         }\n+        // checks that parameters are not bound as `ref` or `ref mut`\n+        if let Some(BindingMode::BindByReference(_)) = binding_modes.get(param.pat.hir_id) {\n+            return false;\n+        }\n+\n         match *cx.typeck_results().expr_adjustments(arg) {\n             [] => true,\n             ["}, {"sha": "5aedbea381f2317d80c661cc20f7ffbc07748eae", "filename": "tests/ui/eta.fixed", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/042892a0815fe0fec72ea1a07348d99ca08bf944/tests%2Fui%2Feta.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/042892a0815fe0fec72ea1a07348d99ca08bf944/tests%2Fui%2Feta.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.fixed?ref=042892a0815fe0fec72ea1a07348d99ca08bf944", "patch": "@@ -256,3 +256,22 @@ fn arc_fp() {\n     (0..5).map(|n| arc(n));\n     Some(4).map(|n| ref_arc(n));\n }\n+\n+// #8460 Don't replace closures with params bounded as `ref`\n+mod bind_by_ref {\n+    struct A;\n+    struct B;\n+\n+    impl From<&A> for B {\n+        fn from(A: &A) -> Self {\n+            B\n+        }\n+    }\n+\n+    fn test() {\n+        // should not lint\n+        Some(A).map(|a| B::from(&a));\n+        // should not lint\n+        Some(A).map(|ref a| B::from(a));\n+    }\n+}"}, {"sha": "5fdf7fb9771697e2330265458903ac5c12528f94", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/042892a0815fe0fec72ea1a07348d99ca08bf944/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/042892a0815fe0fec72ea1a07348d99ca08bf944/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=042892a0815fe0fec72ea1a07348d99ca08bf944", "patch": "@@ -256,3 +256,22 @@ fn arc_fp() {\n     (0..5).map(|n| arc(n));\n     Some(4).map(|n| ref_arc(n));\n }\n+\n+// #8460 Don't replace closures with params bounded as `ref`\n+mod bind_by_ref {\n+    struct A;\n+    struct B;\n+\n+    impl From<&A> for B {\n+        fn from(A: &A) -> Self {\n+            B\n+        }\n+    }\n+\n+    fn test() {\n+        // should not lint\n+        Some(A).map(|a| B::from(&a));\n+        // should not lint\n+        Some(A).map(|ref a| B::from(a));\n+    }\n+}"}]}