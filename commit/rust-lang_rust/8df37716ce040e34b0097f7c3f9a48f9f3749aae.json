{"sha": "8df37716ce040e34b0097f7c3f9a48f9f3749aae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZjM3NzE2Y2UwNDBlMzRiMDA5N2Y3YzNmOWE0OGY5ZjM3NDlhYWU=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-06T03:16:59Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-05-06T03:16:59Z"}, "message": "Fix OS X build.", "tree": {"sha": "0253a73458659dd8addaa526e0d8d107da75b70c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0253a73458659dd8addaa526e0d8d107da75b70c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8df37716ce040e34b0097f7c3f9a48f9f3749aae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8df37716ce040e34b0097f7c3f9a48f9f3749aae", "html_url": "https://github.com/rust-lang/rust/commit/8df37716ce040e34b0097f7c3f9a48f9f3749aae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8df37716ce040e34b0097f7c3f9a48f9f3749aae/comments", "author": null, "committer": null, "parents": [{"sha": "518e2d249c062211c2c1211327f2e21451920047", "url": "https://api.github.com/repos/rust-lang/rust/commits/518e2d249c062211c2c1211327f2e21451920047", "html_url": "https://github.com/rust-lang/rust/commit/518e2d249c062211c2c1211327f2e21451920047"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "20843d51460306c88490ff3046bef742addfbb4c", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8df37716ce040e34b0097f7c3f9a48f9f3749aae/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/8df37716ce040e34b0097f7c3f9a48f9f3749aae/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=8df37716ce040e34b0097f7c3f9a48f9f3749aae", "patch": "@@ -264,13 +264,6 @@ rust_task::start_rustc(uintptr_t exit_task_glue,\n     // Set sp to last uintptr_t-sized cell of segment\n     rust_sp -= sizeof(uintptr_t);\n \n-    // NB: Darwin needs \"16-byte aligned\" stacks *at the point of the call\n-    // instruction in the caller*. This means that the address at which the\n-    // word before retpc is pushed must always be 16-byte aligned.\n-    //\n-    // see: \"Mac OS X ABI Function Call Guide\"\n-\n-\n     // Begin synthesizing the exit_task_glue frame. We will return to\n     // exit_task_glue and it is responsible for calling the user code\n     // and passing the value returned by the user to the system\n@@ -282,7 +275,14 @@ rust_task::start_rustc(uintptr_t exit_task_glue,\n     uintptr_t args_size = callsz - 3*sizeof(uintptr_t);\n     uintptr_t frame_size = args_size + 4*sizeof(uintptr_t);\n \n-    make_aligned_room_for_bytes(spp, frame_size);\n+\n+    // NB: Darwin needs \"16-byte aligned\" stacks *at the point of the call\n+    // instruction in the caller*. This means that the address at which the\n+    // word before retpc is pushed must always be 16-byte aligned.\n+    //\n+    // see: \"Mac OS X ABI Function Call Guide\"\n+\n+    make_aligned_room_for_bytes(spp, frame_size - sizeof(uintptr_t));\n \n     // Copy args from spawner to spawnee.\n     uintptr_t *src = (uintptr_t *)args;\n@@ -295,9 +295,9 @@ rust_task::start_rustc(uintptr_t exit_task_glue,\n     *spp-- = (uintptr_t) this;       // task\n     *spp-- = (uintptr_t) dummy_ret;  // output address\n \n+    I(dom, spp == align_down(spp));\n     *spp-- = (uintptr_t) (uintptr_t) spawnee_fn;\n \n-    I(dom, spp == align_down(spp));\n \n     *spp-- = (uintptr_t) 0x0;        // retp\n "}]}