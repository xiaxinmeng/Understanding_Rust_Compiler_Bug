{"sha": "82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZDZjZmQ0OTVjN2UwZjIzMGNlMWFjNjFlN2E0Mjk3ZmEyMmYwMmY=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-09-30T19:22:49Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-09-30T19:22:49Z"}, "message": "Minor clippy performance suggestions", "tree": {"sha": "3a6fceb66786f1b6dd0bf711182b21dd6bd2280a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a6fceb66786f1b6dd0bf711182b21dd6bd2280a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "html_url": "https://github.com/rust-lang/rust/commit/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c9ae771bca39d511a0ea7395da2b4b91b44ee12", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c9ae771bca39d511a0ea7395da2b4b91b44ee12", "html_url": "https://github.com/rust-lang/rust/commit/7c9ae771bca39d511a0ea7395da2b4b91b44ee12"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "51b5a2eb075def52aa45f2c3d4f68df4c00f42f5", "filename": "crates/assists/src/handlers/add_missing_impl_members.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fassists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fassists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs?ref=82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "patch": "@@ -146,7 +146,7 @@ fn add_missing_impl_members_inner(\n \n     let target = impl_def.syntax().text_range();\n     acc.add(AssistId(assist_id, AssistKind::QuickFix), label, target, |builder| {\n-        let impl_item_list = impl_def.assoc_item_list().unwrap_or(make::assoc_item_list());\n+        let impl_item_list = impl_def.assoc_item_list().unwrap_or_else(make::assoc_item_list);\n \n         let n_existing_items = impl_item_list.assoc_items().count();\n         let source_scope = ctx.sema.scope_for_def(trait_);"}, {"sha": "f5f03ef3628f89dce766c90499fa83dba7c37be8", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "patch": "@@ -91,7 +91,7 @@ fn existing_struct_def(db: &RootDatabase, variant_name: &str, variant: &EnumVari\n         .module(db)\n         .scope(db, None)\n         .into_iter()\n-        .any(|(name, _)| name.to_string() == variant_name.to_string())\n+        .any(|(name, _)| name.to_string() == variant_name)\n }\n \n #[allow(dead_code)]"}, {"sha": "5721a66c4a54dec5bc6ed323744d2aaeec99be0c", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "patch": "@@ -145,7 +145,7 @@ impl Crate {\n             }\n         }).flat_map(|t| t).next();\n \n-        doc_url.map(|s| s.trim_matches('\"').trim_end_matches(\"/\").to_owned() + \"/\")\n+        doc_url.map(|s| s.trim_matches('\"').trim_end_matches('/').to_owned() + \"/\")\n     }\n }\n "}, {"sha": "a16f90e1711cf6f6bda15b601c39ceff3dc44313", "filename": "crates/ide/src/link_rewrite.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fide%2Fsrc%2Flink_rewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fide%2Fsrc%2Flink_rewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flink_rewrite.rs?ref=82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "patch": "@@ -120,7 +120,7 @@ fn rewrite_intra_doc_link(\n \n /// Try to resolve path to local documentation via path-based links (i.e. `../gateway/struct.Shard.html`).\n fn rewrite_url_link(db: &RootDatabase, def: ModuleDef, target: &str) -> Option<String> {\n-    if !(target.contains(\"#\") || target.contains(\".html\")) {\n+    if !(target.contains('#') || target.contains(\".html\")) {\n         return None;\n     }\n \n@@ -190,7 +190,7 @@ fn strip_prefixes_suffixes(mut s: &str) -> &str {\n         prefixes.clone().for_each(|prefix| s = s.trim_start_matches(*prefix));\n         suffixes.clone().for_each(|suffix| s = s.trim_end_matches(*suffix));\n     });\n-    s.trim_start_matches(\"@\").trim()\n+    s.trim_start_matches('@').trim()\n }\n \n static TYPES: ([&str; 7], [&str; 0]) ="}, {"sha": "347cc4aad8019391bdcb55b755651e56d5635134", "filename": "crates/ssr/src/resolving.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fssr%2Fsrc%2Fresolving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fssr%2Fsrc%2Fresolving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fresolving.rs?ref=82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "patch": "@@ -205,7 +205,7 @@ impl<'db> ResolutionScope<'db> {\n \n     /// Returns the function in which SSR was invoked, if any.\n     pub(crate) fn current_function(&self) -> Option<SyntaxNode> {\n-        self.node.ancestors().find(|node| node.kind() == SyntaxKind::FN).map(|node| node.clone())\n+        self.node.ancestors().find(|node| node.kind() == SyntaxKind::FN)\n     }\n \n     fn resolve_path(&self, path: &ast::Path) -> Option<hir::PathResolution> {"}, {"sha": "77233ab31a30424686c1c1535f55988c9cca1b49", "filename": "crates/syntax/src/ast/edit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs?ref=82d6cfd495c7e0f230ce1ac61e7a4297fa22f02f", "patch": "@@ -159,7 +159,7 @@ impl ast::AssocItemList {\n         let whitespace =\n             last_token_before_curly.clone().into_token().and_then(ast::Whitespace::cast)?;\n         let text = whitespace.syntax().text();\n-        let newline = text.rfind(\"\\n\")?;\n+        let newline = text.rfind('\\n')?;\n         let keep = tokens::WsBuilder::new(&text[newline..]);\n         Some(self.replace_children(\n             first_token_after_items..=last_token_before_curly,"}]}