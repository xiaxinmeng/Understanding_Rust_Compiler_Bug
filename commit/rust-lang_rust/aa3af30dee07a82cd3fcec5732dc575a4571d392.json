{"sha": "aa3af30dee07a82cd3fcec5732dc575a4571d392", "node_id": "C_kwDOAAsO6NoAKGFhM2FmMzBkZWUwN2E4MmNkM2ZjZWM1NzMyZGM1NzVhNDU3MWQzOTI", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-02-07T17:57:02Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-02-07T17:57:02Z"}, "message": "Split out `rest_pat_in_fully_bound_struct`", "tree": {"sha": "3e556c41bf2b10013c09ab8893d7e0f7c5dcedcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e556c41bf2b10013c09ab8893d7e0f7c5dcedcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa3af30dee07a82cd3fcec5732dc575a4571d392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa3af30dee07a82cd3fcec5732dc575a4571d392", "html_url": "https://github.com/rust-lang/rust/commit/aa3af30dee07a82cd3fcec5732dc575a4571d392", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa3af30dee07a82cd3fcec5732dc575a4571d392/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64779233238b3dcadae13bdeebac82445c1e8f6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/64779233238b3dcadae13bdeebac82445c1e8f6d", "html_url": "https://github.com/rust-lang/rust/commit/64779233238b3dcadae13bdeebac82445c1e8f6d"}], "stats": {"total": 55, "additions": 32, "deletions": 23}, "files": [{"sha": "4429065966dc7f366dfe113a1bb556f45abef6dc", "filename": "clippy_lints/src/matches/mod.rs", "status": "modified", "additions": 3, "deletions": 23, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/aa3af30dee07a82cd3fcec5732dc575a4571d392/clippy_lints%2Fsrc%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa3af30dee07a82cd3fcec5732dc575a4571d392/clippy_lints%2Fsrc%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmod.rs?ref=aa3af30dee07a82cd3fcec5732dc575a4571d392", "patch": "@@ -1,9 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::{is_wild, meets_msrv, msrvs};\n-use if_chain::if_chain;\n-use rustc_hir::{Arm, Expr, ExprKind, Local, MatchSource, Pat, PatKind, QPath};\n+use rustc_hir::{Arm, Expr, ExprKind, Local, MatchSource, Pat, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty;\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n@@ -18,6 +16,7 @@ mod match_wild_enum;\n mod match_wild_err_arm;\n mod overlapping_arms;\n mod redundant_pattern_match;\n+mod rest_pat_in_fully_bound_struct;\n mod single_match;\n \n declare_clippy_lint! {\n@@ -640,26 +639,7 @@ impl<'tcx> LateLintPass<'tcx> for Matches {\n     }\n \n     fn check_pat(&mut self, cx: &LateContext<'tcx>, pat: &'tcx Pat<'_>) {\n-        if_chain! {\n-            if !pat.span.from_expansion();\n-            if let PatKind::Struct(QPath::Resolved(_, path), fields, true) = pat.kind;\n-            if let Some(def_id) = path.res.opt_def_id();\n-            let ty = cx.tcx.type_of(def_id);\n-            if let ty::Adt(def, _) = ty.kind();\n-            if def.is_struct() || def.is_union();\n-            if fields.len() == def.non_enum_variant().fields.len();\n-\n-            then {\n-                span_lint_and_help(\n-                    cx,\n-                    REST_PAT_IN_FULLY_BOUND_STRUCTS,\n-                    pat.span,\n-                    \"unnecessary use of `..` pattern in struct binding. All fields were already bound\",\n-                    None,\n-                    \"consider removing `..` from this binding\",\n-                );\n-            }\n-        }\n+        rest_pat_in_fully_bound_struct::check(cx, pat);\n     }\n \n     extract_msrv_attr!(LateContext);"}, {"sha": "5076239a57c4d79f707b8aa0655d698ba126faf7", "filename": "clippy_lints/src/matches/rest_pat_in_fully_bound_struct.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/aa3af30dee07a82cd3fcec5732dc575a4571d392/clippy_lints%2Fsrc%2Fmatches%2Frest_pat_in_fully_bound_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa3af30dee07a82cd3fcec5732dc575a4571d392/clippy_lints%2Fsrc%2Fmatches%2Frest_pat_in_fully_bound_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Frest_pat_in_fully_bound_struct.rs?ref=aa3af30dee07a82cd3fcec5732dc575a4571d392", "patch": "@@ -0,0 +1,29 @@\n+use clippy_utils::diagnostics::span_lint_and_help;\n+use rustc_hir::{Pat, PatKind, QPath};\n+use rustc_lint::LateContext;\n+use rustc_middle::ty;\n+\n+use super::REST_PAT_IN_FULLY_BOUND_STRUCTS;\n+\n+pub(crate) fn check(cx: &LateContext<'_>, pat: &Pat<'_>) {\n+    if_chain! {\n+        if !pat.span.from_expansion();\n+        if let PatKind::Struct(QPath::Resolved(_, path), fields, true) = pat.kind;\n+        if let Some(def_id) = path.res.opt_def_id();\n+        let ty = cx.tcx.type_of(def_id);\n+        if let ty::Adt(def, _) = ty.kind();\n+        if def.is_struct() || def.is_union();\n+        if fields.len() == def.non_enum_variant().fields.len();\n+\n+        then {\n+            span_lint_and_help(\n+                cx,\n+                REST_PAT_IN_FULLY_BOUND_STRUCTS,\n+                pat.span,\n+                \"unnecessary use of `..` pattern in struct binding. All fields were already bound\",\n+                None,\n+                \"consider removing `..` from this binding\",\n+            );\n+        }\n+    }\n+}"}]}