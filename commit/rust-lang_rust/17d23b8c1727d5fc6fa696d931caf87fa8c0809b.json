{"sha": "17d23b8c1727d5fc6fa696d931caf87fa8c0809b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ZDIzYjhjMTcyN2Q1ZmM2ZmE2OTZkOTMxY2FmODdmYThjMDgwOWI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-01-21T14:34:42Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-01-23T04:13:57Z"}, "message": "vec: make unsafe indexing functions higher-level", "tree": {"sha": "fd274d0b44821bcb5665a0fa160f205290f91cb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd274d0b44821bcb5665a0fa160f205290f91cb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17d23b8c1727d5fc6fa696d931caf87fa8c0809b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17d23b8c1727d5fc6fa696d931caf87fa8c0809b", "html_url": "https://github.com/rust-lang/rust/commit/17d23b8c1727d5fc6fa696d931caf87fa8c0809b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17d23b8c1727d5fc6fa696d931caf87fa8c0809b/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "802d41fe235794d84084897ae6187ee5cc27dd95", "url": "https://api.github.com/repos/rust-lang/rust/commits/802d41fe235794d84084897ae6187ee5cc27dd95", "html_url": "https://github.com/rust-lang/rust/commit/802d41fe235794d84084897ae6187ee5cc27dd95"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "8e8e5f6e62cc2ebfb311903d587e8f84cf38fae4", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/17d23b8c1727d5fc6fa696d931caf87fa8c0809b/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17d23b8c1727d5fc6fa696d931caf87fa8c0809b/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=17d23b8c1727d5fc6fa696d931caf87fa8c0809b", "patch": "@@ -960,7 +960,7 @@ pub trait ImmutableVector<'a, T> {\n     fn flat_map<U>(&self, f: |t: &T| -> ~[U]) -> ~[U];\n     /// Returns a pointer to the element at the given index, without doing\n     /// bounds checking.\n-    unsafe fn unsafe_ref(&self, index: uint) -> *T;\n+    unsafe fn unsafe_ref(self, index: uint) -> &'a T;\n \n     /**\n      * Returns an unsafe pointer to the vector's buffer\n@@ -1149,8 +1149,8 @@ impl<'a,T> ImmutableVector<'a, T> for &'a [T] {\n     }\n \n     #[inline]\n-    unsafe fn unsafe_ref(&self, index: uint) -> *T {\n-        self.repr().data.offset(index as int)\n+    unsafe fn unsafe_ref(self, index: uint) -> &'a T {\n+        cast::transmute(self.repr().data.offset(index as int))\n     }\n \n     #[inline]\n@@ -2183,7 +2183,7 @@ pub trait MutableVector<'a, T> {\n     fn move_from(self, src: ~[T], start: uint, end: uint) -> uint;\n \n     /// Returns an unsafe mutable pointer to the element in index\n-    unsafe fn unsafe_mut_ref(self, index: uint) -> *mut T;\n+    unsafe fn unsafe_mut_ref(self, index: uint) -> &'a mut T;\n \n     /// Return an unsafe mutable pointer to the vector's buffer.\n     ///\n@@ -2361,8 +2361,8 @@ impl<'a,T> MutableVector<'a, T> for &'a mut [T] {\n     }\n \n     #[inline]\n-    unsafe fn unsafe_mut_ref(self, index: uint) -> *mut T {\n-        ptr::mut_offset(self.repr().data as *mut T, index as int)\n+    unsafe fn unsafe_mut_ref(self, index: uint) -> &'a mut T {\n+        cast::transmute(ptr::mut_offset(self.repr().data as *mut T, index as int))\n     }\n \n     #[inline]"}]}