{"sha": "d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22", "node_id": "C_kwDOAAsO6NoAKGQwY2MwMGY3NTgwZDE1NGFhOGQ5ZWRkNzc3YTVhYTdlNmU2Y2ZkMjI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-11T14:56:06Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-18T21:35:02Z"}, "message": "Add comment.", "tree": {"sha": "8475ec403477d191246ba3981d8b3309e76096c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8475ec403477d191246ba3981d8b3309e76096c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22", "html_url": "https://github.com/rust-lang/rust/commit/d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86dbcb53907037dcc3fabb635956aec2c384b4e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/86dbcb53907037dcc3fabb635956aec2c384b4e9", "html_url": "https://github.com/rust-lang/rust/commit/86dbcb53907037dcc3fabb635956aec2c384b4e9"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "2e71fc19868869a19de8799149e141714f4fd4b1", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22", "patch": "@@ -671,6 +671,9 @@ pub enum TerminatorKind<'tcx> {\n     /// as parameters, and `None` for the destination. Keep in mind that the `cleanup` path is not\n     /// necessarily executed even in the case of a panic, for example in `-C panic=abort`. If the\n     /// assertion does not fail, execution continues at the specified basic block.\n+    ///\n+    /// When overflow checking is disabled and we are generating run-time code, the `Overflow*`\n+    /// variants of this terminator are codegened as simple `goto target`.\n     Assert {\n         cond: Operand<'tcx>,\n         expected: bool,"}]}