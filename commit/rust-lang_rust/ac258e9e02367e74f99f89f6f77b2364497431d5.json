{"sha": "ac258e9e02367e74f99f89f6f77b2364497431d5", "node_id": "C_kwDOAAsO6NoAKGFjMjU4ZTllMDIzNjdlNzRmOTlmODlmNmY3N2IyMzY0NDk3NDMxZDU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-09T11:11:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-09T11:11:52Z"}, "message": "Rollup merge of #108294 - compiler-errors:arbitary-sugg-binder, r=TaKO8Ki\n\nPlace binder correctly for arbitrary trait bound suggestion\n\nsuggest `for<'a> &'a T: Trait` instead of `&'a T: for<'a> T`.", "tree": {"sha": "f685030e48b8d3587742fe316fa52a70102f8ab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f685030e48b8d3587742fe316fa52a70102f8ab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac258e9e02367e74f99f89f6f77b2364497431d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkCb74CRBK7hj4Ov3rIwAA6D0IAEqgxtu6lt56KYO6JlXfA1KF\nwf7wKr0Obh8SKWSGC5AzwMrQKd/ZOtK4Vs0ed1QrfRGeVrlAyCYxZdZEvm8cYuRp\np2eGCE5awLoRQQ3/MQ+AKajYhZ5/N74dBii9cDQZt+L4VfKw0ORYuZb2OIHT1b9j\ngMFmp60vhjXJFF/i7ZG3Csx3oLDbqeFnCJLRXswfZA4fCfEUIF9aK9uoSguQrPtr\ndzF0y1WNKH6tYJwCu2VuTSVuBiK2LjpLnH8rijiWKMe/cTyD4WLYTXplWeMShn8X\nPmQKaAwp3aA+KvGqbrYKAasMRnVYyVcE5E11dThapKAtvjYOgAyxd+8SjPlbXsc=\n=nKmp\n-----END PGP SIGNATURE-----\n", "payload": "tree f685030e48b8d3587742fe316fa52a70102f8ab5\nparent 83791f9de73737f2b8102732886d9519d123ff77\nparent 16e2b9f66201e0d0437028842c3e565424cd5fc6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678360312 +0100\ncommitter GitHub <noreply@github.com> 1678360312 +0100\n\nRollup merge of #108294 - compiler-errors:arbitary-sugg-binder, r=TaKO8Ki\n\nPlace binder correctly for arbitrary trait bound suggestion\n\nsuggest `for<'a> &'a T: Trait` instead of `&'a T: for<'a> T`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac258e9e02367e74f99f89f6f77b2364497431d5", "html_url": "https://github.com/rust-lang/rust/commit/ac258e9e02367e74f99f89f6f77b2364497431d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac258e9e02367e74f99f89f6f77b2364497431d5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83791f9de73737f2b8102732886d9519d123ff77", "url": "https://api.github.com/repos/rust-lang/rust/commits/83791f9de73737f2b8102732886d9519d123ff77", "html_url": "https://github.com/rust-lang/rust/commit/83791f9de73737f2b8102732886d9519d123ff77"}, {"sha": "16e2b9f66201e0d0437028842c3e565424cd5fc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/16e2b9f66201e0d0437028842c3e565424cd5fc6", "html_url": "https://github.com/rust-lang/rust/commit/16e2b9f66201e0d0437028842c3e565424cd5fc6"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "ae0bb4949c743d608b69a0a522d5c271248cffe5", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac258e9e02367e74f99f89f6f77b2364497431d5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac258e9e02367e74f99f89f6f77b2364497431d5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=ac258e9e02367e74f99f89f6f77b2364497431d5", "patch": "@@ -117,7 +117,7 @@ pub fn suggest_arbitrary_trait_bound<'tcx>(\n     }\n \n     let param_name = trait_pred.skip_binder().self_ty().to_string();\n-    let mut constraint = trait_pred.print_modifiers_and_trait_path().to_string();\n+    let mut constraint = trait_pred.to_string();\n \n     if let Some((name, term)) = associated_ty {\n         // FIXME: this case overlaps with code in TyCtxt::note_and_explain_type_err.\n@@ -144,7 +144,7 @@ pub fn suggest_arbitrary_trait_bound<'tcx>(\n              this requirement\",\n             if generics.where_clause_span.is_empty() { \"introducing a\" } else { \"extending the\" },\n         ),\n-        format!(\"{} {}: {}\", generics.add_where_or_trailing_comma(), param_name, constraint),\n+        format!(\"{} {constraint}\", generics.add_where_or_trailing_comma()),\n         Applicability::MaybeIncorrect,\n     );\n     true"}, {"sha": "e56c8622ece0364d07ef3178f84bb6300960df87", "filename": "tests/ui/suggestions/correct-binder-for-arbitrary-bound-sugg.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ac258e9e02367e74f99f89f6f77b2364497431d5/tests%2Fui%2Fsuggestions%2Fcorrect-binder-for-arbitrary-bound-sugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac258e9e02367e74f99f89f6f77b2364497431d5/tests%2Fui%2Fsuggestions%2Fcorrect-binder-for-arbitrary-bound-sugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fcorrect-binder-for-arbitrary-bound-sugg.rs?ref=ac258e9e02367e74f99f89f6f77b2364497431d5", "patch": "@@ -0,0 +1,16 @@\n+trait Foo\n+where\n+    for<'a> &'a Self: Bar,\n+{\n+}\n+\n+impl Foo for () {}\n+\n+trait Bar {}\n+\n+impl Bar for &() {}\n+\n+fn foo<T: Foo>() {}\n+//~^ ERROR the trait bound `for<'a> &'a T: Bar` is not satisfied\n+\n+fn main() {}"}, {"sha": "2298e7f4e0c3c898fe18120360b467de5c95aa7c", "filename": "tests/ui/suggestions/correct-binder-for-arbitrary-bound-sugg.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ac258e9e02367e74f99f89f6f77b2364497431d5/tests%2Fui%2Fsuggestions%2Fcorrect-binder-for-arbitrary-bound-sugg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac258e9e02367e74f99f89f6f77b2364497431d5/tests%2Fui%2Fsuggestions%2Fcorrect-binder-for-arbitrary-bound-sugg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fcorrect-binder-for-arbitrary-bound-sugg.stderr?ref=ac258e9e02367e74f99f89f6f77b2364497431d5", "patch": "@@ -0,0 +1,22 @@\n+error[E0277]: the trait bound `for<'a> &'a T: Bar` is not satisfied\n+  --> $DIR/correct-binder-for-arbitrary-bound-sugg.rs:13:11\n+   |\n+LL | fn foo<T: Foo>() {}\n+   |           ^^^ the trait `for<'a> Bar` is not implemented for `&'a T`\n+   |\n+note: required by a bound in `Foo`\n+  --> $DIR/correct-binder-for-arbitrary-bound-sugg.rs:3:23\n+   |\n+LL | trait Foo\n+   |       --- required by a bound in this trait\n+LL | where\n+LL |     for<'a> &'a Self: Bar,\n+   |                       ^^^ required by this bound in `Foo`\n+help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n+   |\n+LL | fn foo<T: Foo>() where for<'a> &'a T: Bar {}\n+   |                  ++++++++++++++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}