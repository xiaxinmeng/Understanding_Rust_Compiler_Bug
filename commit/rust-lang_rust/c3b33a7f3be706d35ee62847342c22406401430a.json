{"sha": "c3b33a7f3be706d35ee62847342c22406401430a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzYjMzYTdmM2JlNzA2ZDM1ZWU2Mjg0NzM0MmMyMjQwNjQwMTQzMGE=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2019-02-08T09:46:53Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2019-03-20T19:03:19Z"}, "message": "Fix a bug in chalk unification code", "tree": {"sha": "7ae6415cf1ac74fc90695405b418aea477e718cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ae6415cf1ac74fc90695405b418aea477e718cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3b33a7f3be706d35ee62847342c22406401430a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3b33a7f3be706d35ee62847342c22406401430a", "html_url": "https://github.com/rust-lang/rust/commit/c3b33a7f3be706d35ee62847342c22406401430a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3b33a7f3be706d35ee62847342c22406401430a/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c499ccfcded4f5be76d70f441a5c7c9d1260226", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c499ccfcded4f5be76d70f441a5c7c9d1260226", "html_url": "https://github.com/rust-lang/rust/commit/9c499ccfcded4f5be76d70f441a5c7c9d1260226"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "2db3208953eb07628348eeb83c81010cc4beb490", "filename": "src/librustc/infer/nll_relate/mod.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c3b33a7f3be706d35ee62847342c22406401430a/src%2Flibrustc%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3b33a7f3be706d35ee62847342c22406401430a/src%2Flibrustc%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fnll_relate%2Fmod.rs?ref=c3b33a7f3be706d35ee62847342c22406401430a", "patch": "@@ -239,6 +239,7 @@ where\n         first_free_index: ty::DebruijnIndex,\n         scopes: &[BoundRegionScope<'tcx>],\n     ) -> ty::Region<'tcx> {\n+        debug!(\"replace_bound_regions(scopes={:?})\", scopes);\n         if let ty::ReLateBound(debruijn, br) = r {\n             Self::lookup_bound_region(*debruijn, br, first_free_index, scopes)\n         } else {\n@@ -421,7 +422,13 @@ where\n                     // Forbid inference variables in the RHS.\n                     bug!(\"unexpected inference var {:?}\", b)\n                 } else {\n-                    self.relate_ty_var(vid, a)\n+                    // We swap the order of `a` and `b` in the call to\n+                    // `relate_ty_var` below, so swap the corresponding scopes\n+                    // as well.\n+                    std::mem::swap(&mut self.a_scopes, &mut self.b_scopes);\n+                    let res = self.relate_ty_var(vid, a);\n+                    std::mem::swap(&mut self.a_scopes, &mut self.b_scopes);\n+                    res\n                 }\n             }\n \n@@ -436,7 +443,12 @@ where\n             (_, &ty::Projection(projection_ty))\n                 if D::normalization() == NormalizationStrategy::Lazy =>\n             {\n-                Ok(self.relate_projection_ty(projection_ty, a))\n+                // Swap the respective scopes of `a` and `b` (see comment\n+                // above).\n+                std::mem::swap(&mut self.a_scopes, &mut self.b_scopes);\n+                let res = self.relate_projection_ty(projection_ty, a);\n+                std::mem::swap(&mut self.a_scopes, &mut self.b_scopes);\n+                Ok(res)\n             }\n \n             _ => {"}]}