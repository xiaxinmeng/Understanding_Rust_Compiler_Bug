{"sha": "d16bbd1cb0673713fe9a524c092f7d0ff93c81a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNmJiZDFjYjA2NzM3MTNmZTlhNTI0YzA5MmY3ZDBmZjkzYzgxYTY=", "commit": {"author": {"name": "Ayush Kumar Mishra", "email": "ayush.k.mishra@xcelenergy.com", "date": "2020-09-04T11:48:26Z"}, "committer": {"name": "Ayush Kumar Mishra", "email": "ayush.k.mishra@xcelenergy.com", "date": "2020-09-04T11:48:26Z"}, "message": "Move Vec slice UI tests in library", "tree": {"sha": "bd6200b87a800e920c60db8156d4146659b5a08a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd6200b87a800e920c60db8156d4146659b5a08a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d16bbd1cb0673713fe9a524c092f7d0ff93c81a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d16bbd1cb0673713fe9a524c092f7d0ff93c81a6", "html_url": "https://github.com/rust-lang/rust/commit/d16bbd1cb0673713fe9a524c092f7d0ff93c81a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d16bbd1cb0673713fe9a524c092f7d0ff93c81a6/comments", "author": null, "committer": null, "parents": [{"sha": "4ffb5c5954a304daf47a567b34e74e421db86d98", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ffb5c5954a304daf47a567b34e74e421db86d98", "html_url": "https://github.com/rust-lang/rust/commit/4ffb5c5954a304daf47a567b34e74e421db86d98"}], "stats": {"total": 85, "additions": 23, "deletions": 62}, "files": [{"sha": "df86a775e5a5148a1416921ea24f4a3b1ec96409", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d16bbd1cb0673713fe9a524c092f7d0ff93c81a6/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d16bbd1cb0673713fe9a524c092f7d0ff93c81a6/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=d16bbd1cb0673713fe9a524c092f7d0ff93c81a6", "patch": "@@ -345,6 +345,29 @@ fn test_zip_unzip() {\n     assert_eq!((3, 6), (left[2], right[2]));\n }\n \n+#[test]\n+fn test_cmp() {\n+    let x: &[isize] = &[1, 2, 3, 4, 5];\n+    let cmp: &[isize] = &[1, 2, 3, 4, 5];\n+    assert_eq!(&x[..], cmp);\n+    let cmp: &[isize] = &[3, 4, 5];\n+    assert_eq!(&x[2..], cmp);\n+    let cmp: &[isize] = &[1, 2, 3];\n+    assert_eq!(&x[..3], cmp);\n+    let cmp: &[isize] = &[2, 3, 4];\n+    assert_eq!(&x[1..4], cmp);\n+\n+    let x: Vec<isize> = vec![1, 2, 3, 4, 5];\n+    let cmp: &[isize] = &[1, 2, 3, 4, 5];\n+    assert_eq!(&x[..], cmp);\n+    let cmp: &[isize] = &[3, 4, 5];\n+    assert_eq!(&x[2..], cmp);\n+    let cmp: &[isize] = &[1, 2, 3];\n+    assert_eq!(&x[..3], cmp);\n+    let cmp: &[isize] = &[2, 3, 4];\n+    assert_eq!(&x[1..4], cmp);\n+}\n+\n #[test]\n fn test_vec_truncate_drop() {\n     static mut DROPS: u32 = 0;"}, {"sha": "01733f48234f9684f35e31dfbf92f60bad225a16", "filename": "src/test/ui/array-slice-vec/slice-2.rs", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/4ffb5c5954a304daf47a567b34e74e421db86d98/src%2Ftest%2Fui%2Farray-slice-vec%2Fslice-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffb5c5954a304daf47a567b34e74e421db86d98/src%2Ftest%2Fui%2Farray-slice-vec%2Fslice-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fslice-2.rs?ref=4ffb5c5954a304daf47a567b34e74e421db86d98", "patch": "@@ -1,62 +0,0 @@\n-// run-pass\n-\n-// Test slicing expressions on slices and Vecs.\n-\n-\n-fn main() {\n-    let x: &[isize] = &[1, 2, 3, 4, 5];\n-    let cmp: &[isize] = &[1, 2, 3, 4, 5];\n-    assert_eq!(&x[..], cmp);\n-    let cmp: &[isize] = &[3, 4, 5];\n-    assert_eq!(&x[2..], cmp);\n-    let cmp: &[isize] = &[1, 2, 3];\n-    assert_eq!(&x[..3], cmp);\n-    let cmp: &[isize] = &[2, 3, 4];\n-    assert_eq!(&x[1..4], cmp);\n-\n-    let x: Vec<isize> = vec![1, 2, 3, 4, 5];\n-    let cmp: &[isize] = &[1, 2, 3, 4, 5];\n-    assert_eq!(&x[..], cmp);\n-    let cmp: &[isize] = &[3, 4, 5];\n-    assert_eq!(&x[2..], cmp);\n-    let cmp: &[isize] = &[1, 2, 3];\n-    assert_eq!(&x[..3], cmp);\n-    let cmp: &[isize] = &[2, 3, 4];\n-    assert_eq!(&x[1..4], cmp);\n-\n-    let x: &mut [isize] = &mut [1, 2, 3, 4, 5];\n-    {\n-        let cmp: &mut [isize] = &mut [1, 2, 3, 4, 5];\n-        assert_eq!(&mut x[..], cmp);\n-    }\n-    {\n-        let cmp: &mut [isize] = &mut [3, 4, 5];\n-        assert_eq!(&mut x[2..], cmp);\n-    }\n-    {\n-        let cmp: &mut [isize] = &mut [1, 2, 3];\n-        assert_eq!(&mut x[..3], cmp);\n-    }\n-    {\n-        let cmp: &mut [isize] = &mut [2, 3, 4];\n-        assert_eq!(&mut x[1..4], cmp);\n-    }\n-\n-    let mut x: Vec<isize> = vec![1, 2, 3, 4, 5];\n-    {\n-        let cmp: &mut [isize] = &mut [1, 2, 3, 4, 5];\n-        assert_eq!(&mut x[..], cmp);\n-    }\n-    {\n-        let cmp: &mut [isize] = &mut [3, 4, 5];\n-        assert_eq!(&mut x[2..], cmp);\n-    }\n-    {\n-        let cmp: &mut [isize] = &mut [1, 2, 3];\n-        assert_eq!(&mut x[..3], cmp);\n-    }\n-    {\n-        let cmp: &mut [isize] = &mut [2, 3, 4];\n-        assert_eq!(&mut x[1..4], cmp);\n-    }\n-}"}]}