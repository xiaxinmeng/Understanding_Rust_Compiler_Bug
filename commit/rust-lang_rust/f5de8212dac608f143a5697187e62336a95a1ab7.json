{"sha": "f5de8212dac608f143a5697187e62336a95a1ab7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZGU4MjEyZGFjNjA4ZjE0M2E1Njk3MTg3ZTYyMzM2YTk1YTFhYjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-28T18:31:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-28T18:31:34Z"}, "message": "Tweak return completion", "tree": {"sha": "0c0add90eab78f92e3bbdae7b16d6dcd0a0238bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c0add90eab78f92e3bbdae7b16d6dcd0a0238bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5de8212dac608f143a5697187e62336a95a1ab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5de8212dac608f143a5697187e62336a95a1ab7", "html_url": "https://github.com/rust-lang/rust/commit/f5de8212dac608f143a5697187e62336a95a1ab7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5de8212dac608f143a5697187e62336a95a1ab7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d351ae67a97f15e7cf95787fc853d2f775416108", "url": "https://api.github.com/repos/rust-lang/rust/commits/d351ae67a97f15e7cf95787fc853d2f775416108", "html_url": "https://github.com/rust-lang/rust/commit/d351ae67a97f15e7cf95787fc853d2f775416108"}], "stats": {"total": 74, "additions": 59, "deletions": 15}, "files": [{"sha": "fe4c9b2170f4df2fbc1479b52242a7a575925c18", "filename": "crates/libeditor/src/completion.rs", "status": "modified", "additions": 59, "deletions": 15, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/f5de8212dac608f143a5697187e62336a95a1ab7/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5de8212dac608f143a5697187e62336a95a1ab7/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fcompletion.rs?ref=f5de8212dac608f143a5697187e62336a95a1ab7", "patch": "@@ -76,18 +76,38 @@ fn complete_keywords(file: &File, fn_def: Option<ast::FnDef>, name_ref: ast::Nam\n     }\n \n     if let Some(fn_def) = fn_def {\n-        if fn_def.ret_type().is_some() {\n-            acc.push(keyword(\"return\", \"return $0;\"))\n-        } else {\n-            acc.push(keyword(\"return\", \"return;\"))\n-        }\n+        acc.extend(complete_return(fn_def, name_ref));\n     }\n+}\n \n-    fn keyword(kw: &str, snip: &str) -> CompletionItem {\n-        CompletionItem {\n-            name: kw.to_string(),\n-            snippet: Some(snip.to_string()),\n-        }\n+fn complete_return(fn_def: ast::FnDef, name_ref: ast::NameRef) -> Option<CompletionItem> {\n+    let is_last_in_block = ancestors(name_ref.syntax()).filter_map(ast::Expr::cast)\n+        .next()\n+        .and_then(|it| it.syntax().parent())\n+        .and_then(ast::Block::cast)\n+        .is_some();\n+\n+    if is_last_in_block {\n+        return None;\n+    }\n+\n+    let is_stmt = match ancestors(name_ref.syntax()).filter_map(ast::ExprStmt::cast).next() {\n+        None => false,\n+        Some(expr_stmt) => expr_stmt.syntax().range() == name_ref.syntax().range()\n+    };\n+    let snip = match (is_stmt, fn_def.ret_type().is_some()) {\n+        (true, true) => \"return $0;\",\n+        (true, false) => \"return;\",\n+        (false, true) => \"return $0\",\n+        (false, false) => \"return\",\n+    };\n+    Some(keyword(\"return\", snip))\n+}\n+\n+fn keyword(kw: &str, snip: &str) -> CompletionItem {\n+    CompletionItem {\n+        name: kw.to_string(),\n+        snippet: Some(snip.to_string()),\n     }\n }\n \n@@ -193,8 +213,7 @@ mod tests {\n             \", r#\"[CompletionItem { name: \"if\", snippet: Some(\"if $0 { }\") },\n                    CompletionItem { name: \"match\", snippet: Some(\"match $0 { }\") },\n                    CompletionItem { name: \"while\", snippet: Some(\"while $0 { }\") },\n-                   CompletionItem { name: \"loop\", snippet: Some(\"loop {$0}\") },\n-                   CompletionItem { name: \"return\", snippet: Some(\"return;\") }]\"#);\n+                   CompletionItem { name: \"loop\", snippet: Some(\"loop {$0}\") }]\"#);\n     }\n \n     #[test]\n@@ -210,20 +229,45 @@ mod tests {\n                    CompletionItem { name: \"while\", snippet: Some(\"while $0 { }\") },\n                    CompletionItem { name: \"loop\", snippet: Some(\"loop {$0}\") },\n                    CompletionItem { name: \"else\", snippet: Some(\"else {$0}\") },\n-                   CompletionItem { name: \"else if\", snippet: Some(\"else if $0 { }\") },\n-                   CompletionItem { name: \"return\", snippet: Some(\"return;\") }]\"#);\n+                   CompletionItem { name: \"else if\", snippet: Some(\"else if $0 { }\") }]\"#);\n     }\n \n     #[test]\n     fn test_completion_return_value() {\n         check_snippet_completion(r\"\n-            fn quux() -> i32{\n+            fn quux() -> i32 {\n                 <|>\n+                92\n             }\n             \", r#\"[CompletionItem { name: \"if\", snippet: Some(\"if $0 { }\") },\n                    CompletionItem { name: \"match\", snippet: Some(\"match $0 { }\") },\n                    CompletionItem { name: \"while\", snippet: Some(\"while $0 { }\") },\n                    CompletionItem { name: \"loop\", snippet: Some(\"loop {$0}\") },\n                    CompletionItem { name: \"return\", snippet: Some(\"return $0;\") }]\"#);\n+        check_snippet_completion(r\"\n+            fn quux() {\n+                <|>\n+                92\n+            }\n+            \", r#\"[CompletionItem { name: \"if\", snippet: Some(\"if $0 { }\") },\n+                   CompletionItem { name: \"match\", snippet: Some(\"match $0 { }\") },\n+                   CompletionItem { name: \"while\", snippet: Some(\"while $0 { }\") },\n+                   CompletionItem { name: \"loop\", snippet: Some(\"loop {$0}\") },\n+                   CompletionItem { name: \"return\", snippet: Some(\"return;\") }]\"#);\n+    }\n+\n+    #[test]\n+    fn test_completion_return_no_stmt() {\n+        check_snippet_completion(r\"\n+            fn quux() -> i32 {\n+                match () {\n+                    () => <|>\n+                }\n+            }\n+            \", r#\"[CompletionItem { name: \"if\", snippet: Some(\"if $0 { }\") },\n+                   CompletionItem { name: \"match\", snippet: Some(\"match $0 { }\") },\n+                   CompletionItem { name: \"while\", snippet: Some(\"while $0 { }\") },\n+                   CompletionItem { name: \"loop\", snippet: Some(\"loop {$0}\") },\n+                   CompletionItem { name: \"return\", snippet: Some(\"return $0\") }]\"#);\n     }\n }"}]}