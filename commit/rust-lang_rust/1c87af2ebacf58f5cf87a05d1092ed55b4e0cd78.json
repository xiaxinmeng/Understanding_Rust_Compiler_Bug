{"sha": "1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjODdhZjJlYmFjZjU4ZjVjZjg3YTA1ZDEwOTJlZDU1YjRlMGNkNzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-27T05:15:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-27T05:15:04Z"}, "message": "Auto merge of #21646 - dotdash:default_target_cpu, r=Aatch\n\nUsing `generic` as the target cpu limits the generated code to the bare basics for the arch, while we can probably assume that we'll actually be running on somewhat modern hardware. This updates the default target CPUs for the x86 and x86_64 archs to match clang's behaviour.\r\n\r\nRefs #20777", "tree": {"sha": "eccd0b31aa52299c6252abdd273c64501a0fe6ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eccd0b31aa52299c6252abdd273c64501a0fe6ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78", "html_url": "https://github.com/rust-lang/rust/commit/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6a6fadbb97268d2b3e47649d91053fbb4827266", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6a6fadbb97268d2b3e47649d91053fbb4827266", "html_url": "https://github.com/rust-lang/rust/commit/a6a6fadbb97268d2b3e47649d91053fbb4827266"}, {"sha": "296c74de96e2ca78289ee0a127cca3b7e58af734", "url": "https://api.github.com/repos/rust-lang/rust/commits/296c74de96e2ca78289ee0a127cca3b7e58af734", "html_url": "https://github.com/rust-lang/rust/commit/296c74de96e2ca78289ee0a127cca3b7e58af734"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "fcea900283d2851d1d785b6661d22e4556fc9bc4", "filename": "src/librustc_back/target/i686_apple_darwin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fi686_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fi686_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_apple_darwin.rs?ref=1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78", "patch": "@@ -12,6 +12,7 @@ use target::Target;\n \n pub fn target() -> Target {\n     let mut base = super::apple_base::opts();\n+    base.cpu = \"yonah\".to_string();\n     base.pre_link_args.push(\"-m32\".to_string());\n \n     Target {"}, {"sha": "249f2d440e68155fd01960d9924930cadfe85a6d", "filename": "src/librustc_back/target/i686_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs?ref=1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78", "patch": "@@ -12,6 +12,7 @@ use target::Target;\n \n pub fn target() -> Target {\n     let mut options = super::windows_base::opts();\n+    options.cpu = \"pentium4\".to_string();\n \n     // Mark all dynamic libraries and executables as compatible with the larger 4GiB address\n     // space available to x86 Windows binaries on x86_64."}, {"sha": "4450d8d67782d48fc899cdd684d38f447ccd7caf", "filename": "src/librustc_back/target/i686_unknown_dragonfly.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs?ref=1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78", "patch": "@@ -12,6 +12,7 @@ use target::Target;\n \n pub fn target() -> Target {\n     let mut base = super::dragonfly_base::opts();\n+    base.cpu = \"pentium4\".to_string();\n     base.pre_link_args.push(\"-m32\".to_string());\n \n     Target {"}, {"sha": "f21f6adfb4c0c2a03eb28a5e0aed816508b0e59a", "filename": "src/librustc_back/target/i686_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs?ref=1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78", "patch": "@@ -12,6 +12,7 @@ use target::Target;\n \n pub fn target() -> Target {\n     let mut base = super::linux_base::opts();\n+    base.cpu = \"pentium4\".to_string();\n     base.pre_link_args.push(\"-m32\".to_string());\n \n     Target {"}, {"sha": "0b3b2bea62d777cc920f01c2b2776402367de433", "filename": "src/librustc_back/target/x86_64_apple_darwin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_darwin.rs?ref=1c87af2ebacf58f5cf87a05d1092ed55b4e0cd78", "patch": "@@ -12,7 +12,7 @@ use target::Target;\n \n pub fn target() -> Target {\n     let mut base = super::apple_base::opts();\n-    base.cpu = \"x86-64\".to_string();\n+    base.cpu = \"core2\".to_string();\n     base.eliminate_frame_pointer = false;\n     base.pre_link_args.push(\"-m64\".to_string());\n "}]}