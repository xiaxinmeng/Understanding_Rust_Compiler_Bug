{"sha": "2ae7b0c8983b377d1c11ab63f13acc9df0d8e745", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZTdiMGM4OTgzYjM3N2QxYzExYWI2M2YxM2FjYzlkZjBkOGU3NDU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-04-27T17:29:27Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-04-27T17:29:27Z"}, "message": "tidy: Fix false positives from long URLs", "tree": {"sha": "1a4910348db9104449c711a7fbcc9e192eef3bf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a4910348db9104449c711a7fbcc9e192eef3bf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745", "html_url": "https://github.com/rust-lang/rust/commit/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4a32d504a5aa49b951bfc70602a9615cb772acf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4a32d504a5aa49b951bfc70602a9615cb772acf", "html_url": "https://github.com/rust-lang/rust/commit/d4a32d504a5aa49b951bfc70602a9615cb772acf"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "4c03419894e7cac95a9af3796e6132fa0420b509", "filename": "src/ci/docker/scripts/sccache.sh", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745/src%2Fci%2Fdocker%2Fscripts%2Fsccache.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745/src%2Fci%2Fdocker%2Fscripts%2Fsccache.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fsccache.sh?ref=2ae7b0c8983b377d1c11ab63f13acc9df0d8e745", "patch": "@@ -1,5 +1,3 @@\n-# ignore-tidy-linelength\n-\n set -ex\n \n curl -fo /usr/local/bin/sccache \\"}, {"sha": "7f68b35d014cba72237797858644b332305fb062", "filename": "src/librustc/error_codes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745/src%2Flibrustc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745/src%2Flibrustc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ferror_codes.rs?ref=2ae7b0c8983b377d1c11ab63f13acc9df0d8e745", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![allow(non_snake_case)]\n \n // Error messages for EXXXX errors."}, {"sha": "fdca3230904a8124e0f805de3a7e6f1deb5657d2", "filename": "src/librustc_typeck/error_codes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745/src%2Flibrustc_typeck%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745/src%2Flibrustc_typeck%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Ferror_codes.rs?ref=2ae7b0c8983b377d1c11ab63f13acc9df0d8e745", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-tidy-filelength\n \n #![allow(non_snake_case)]"}, {"sha": "e860f2e9df0ad6ec112b50c2b5f52b9b2bb63e0f", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ae7b0c8983b377d1c11ab63f13acc9df0d8e745/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=2ae7b0c8983b377d1c11ab63f13acc9df0d8e745", "patch": "@@ -38,7 +38,7 @@ when executed when assertions are disabled.\n Use llvm::report_fatal_error for increased robustness.\";\n \n /// Parser states for `line_is_url`.\n-#[derive(PartialEq)]\n+#[derive(Clone, Copy, PartialEq)]\n #[allow(non_camel_case_types)]\n enum LIUState {\n     EXP_COMMENT_START,\n@@ -56,26 +56,31 @@ enum LIUState {\n fn line_is_url(line: &str) -> bool {\n     use self::LIUState::*;\n     let mut state: LIUState = EXP_COMMENT_START;\n+    let is_url = |w: &str| w.starts_with(\"http://\") || w.starts_with(\"https://\");\n \n     for tok in line.split_whitespace() {\n         match (state, tok) {\n-            (EXP_COMMENT_START, \"//\") => state = EXP_LINK_LABEL_OR_URL,\n-            (EXP_COMMENT_START, \"///\") => state = EXP_LINK_LABEL_OR_URL,\n+            (EXP_COMMENT_START, \"//\") |\n+            (EXP_COMMENT_START, \"///\") |\n             (EXP_COMMENT_START, \"//!\") => state = EXP_LINK_LABEL_OR_URL,\n \n             (EXP_LINK_LABEL_OR_URL, w)\n                 if w.len() >= 4 && w.starts_with('[') && w.ends_with(\"]:\")\n                 => state = EXP_URL,\n \n             (EXP_LINK_LABEL_OR_URL, w)\n-                if w.starts_with(\"http://\") || w.starts_with(\"https://\")\n+                if is_url(w)\n                 => state = EXP_END,\n \n             (EXP_URL, w)\n-                if w.starts_with(\"http://\") || w.starts_with(\"https://\") || w.starts_with(\"../\")\n+                if is_url(w) || w.starts_with(\"../\")\n                 => state = EXP_END,\n \n-            (_, _) => return false,\n+            (_, w)\n+                if w.len() > COLS && is_url(w)\n+                => state = EXP_END,\n+\n+            (_, _) => {}\n         }\n     }\n "}]}