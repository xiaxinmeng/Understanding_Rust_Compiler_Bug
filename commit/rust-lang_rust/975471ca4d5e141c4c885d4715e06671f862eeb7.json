{"sha": "975471ca4d5e141c4c885d4715e06671f862eeb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NTQ3MWNhNGQ1ZTE0MWM0Yzg4NWQ0NzE1ZTA2NjcxZjg2MmVlYjc=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-07T17:12:29Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-14T07:48:13Z"}, "message": "Fall back to `diff` if `delta` isn't installed", "tree": {"sha": "dbfad5daa96210b9482723a798ba17e293138971", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbfad5daa96210b9482723a798ba17e293138971"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/975471ca4d5e141c4c885d4715e06671f862eeb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/975471ca4d5e141c4c885d4715e06671f862eeb7", "html_url": "https://github.com/rust-lang/rust/commit/975471ca4d5e141c4c885d4715e06671f862eeb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/975471ca4d5e141c4c885d4715e06671f862eeb7/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acd6ce2347b80fedfc52df0c2a64127535e186f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/acd6ce2347b80fedfc52df0c2a64127535e186f3", "html_url": "https://github.com/rust-lang/rust/commit/acd6ce2347b80fedfc52df0c2a64127535e186f3"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "8319b8aba76eb944d1c84c826fcbd0be06effcaa", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/975471ca4d5e141c4c885d4715e06671f862eeb7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/975471ca4d5e141c4c885d4715e06671f862eeb7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=975471ca4d5e141c4c885d4715e06671f862eeb7", "patch": "@@ -2388,20 +2388,26 @@ impl<'test> TestCx<'test> {\n             self.fatal(\"failed to run tidy\");\n         }\n \n-        let diff_pid = Command::new(\"diff\")\n-            .args(&[\"-u\", \"-r\"])\n-            .args(&[out_dir, &compare_dir])\n-            .stdout(Stdio::piped())\n-            .spawn()\n-            .expect(\"failed to run `diff`\");\n-        let status = Command::new(\"delta\")\n-            .arg(\"--paging=never\")\n-            .stdin(diff_pid.stdout.unwrap())\n-            .spawn()\n-            .expect(\"delta not found\")\n-            .wait()\n-            .unwrap();\n-        assert!(status.success());\n+        let has_delta = Command::new(\"delta\")\n+            .arg(\"--version\")\n+            .status()\n+            .map_or(false, |status| status.success());\n+        let mut diff = Command::new(\"diff\");\n+        diff.args(&[\"-u\", \"-r\"]).args(&[out_dir, &compare_dir]);\n+\n+        if has_delta {\n+            let diff_pid = diff.stdout(Stdio::piped()).spawn().expect(\"failed to run `diff`\");\n+            let status = Command::new(\"delta\")\n+                .arg(\"--paging=never\")\n+                .stdin(diff_pid.stdout.unwrap())\n+                .status()\n+                .unwrap();\n+            assert!(status.success());\n+        } else {\n+            eprintln!(\"warning: `delta` not installed, falling back to `diff --color`\");\n+            diff.arg(\"--color\").spawn().expect(\"failed to run `diff`\").wait().unwrap();\n+            assert!(status.success() || status.code() == Some(1));\n+        }\n     }\n \n     fn get_lines<P: AsRef<Path>>("}]}