{"sha": "ffcf8a0d7681bb5038dc00479d824d9e20f5f989", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmY2Y4YTBkNzY4MWJiNTAzOGRjMDA0NzlkODI0ZDllMjBmNWY5ODk=", "commit": {"author": {"name": "Ali Malik", "email": "mikli@amazon.com", "date": "2021-07-23T23:14:28Z"}, "committer": {"name": "Ali Malik", "email": "mikli@amazon.com", "date": "2021-07-29T05:16:53Z"}, "message": "Fix may not to appropriate might not or must not", "tree": {"sha": "e1d26f2d82b71c3e3e29d0e51d8f9ff3b1d31b16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1d26f2d82b71c3e3e29d0e51d8f9ff3b1d31b16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffcf8a0d7681bb5038dc00479d824d9e20f5f989", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffcf8a0d7681bb5038dc00479d824d9e20f5f989", "html_url": "https://github.com/rust-lang/rust/commit/ffcf8a0d7681bb5038dc00479d824d9e20f5f989", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffcf8a0d7681bb5038dc00479d824d9e20f5f989/comments", "author": null, "committer": null, "parents": [{"sha": "e43254aad1ea5758078ace51341f31071e1e61a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e43254aad1ea5758078ace51341f31071e1e61a8", "html_url": "https://github.com/rust-lang/rust/commit/e43254aad1ea5758078ace51341f31071e1e61a8"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "c7e69e922c13792d5d02178b4a23b9591ba440ad", "filename": "library/core/src/iter/adapters/zip.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffcf8a0d7681bb5038dc00479d824d9e20f5f989/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffcf8a0d7681bb5038dc00479d824d9e20f5f989/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs?ref=ffcf8a0d7681bb5038dc00479d824d9e20f5f989", "patch": "@@ -470,7 +470,6 @@ impl<A: Debug + TrustedRandomAccessNoCoerce, B: Debug + TrustedRandomAccessNoCoe\n ///\n /// The iterator's `size_hint` must be exact and cheap to call.\n ///\n-<<<<<<< HEAD\n /// `TrustedRandomAccessNoCoerce::size` may not be overridden.\n ///\n /// All subtypes and all supertypes of `Self` must also implement `TrustedRandomAccess`.\n@@ -481,9 +480,6 @@ impl<A: Debug + TrustedRandomAccessNoCoerce, B: Debug + TrustedRandomAccessNoCoe\n ///\n /// If `Self: ExactSizeIterator` then `self.len()` must always produce results consistent\n /// with `self.size()`.\n-=======\n-/// `size` must not be overridden.\n->>>>>>> Fix may not to appropriate might not or must not\n ///\n /// If `Self: Iterator`, then `<Self as Iterator>::__iterator_get_unchecked(&mut self, idx)`\n /// must be safe to call provided the following conditions are met."}]}