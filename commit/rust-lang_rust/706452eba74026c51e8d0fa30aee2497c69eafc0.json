{"sha": "706452eba74026c51e8d0fa30aee2497c69eafc0", "node_id": "C_kwDOAAsO6NoAKDcwNjQ1MmViYTc0MDI2YzUxZThkMGZhMzBhZWUyNDk3YzY5ZWFmYzA", "commit": {"author": {"name": "Luis Cardoso", "email": "61982523+LuisCardosoOliveira@users.noreply.github.com", "date": "2022-08-19T13:34:13Z"}, "committer": {"name": "Luis Cardoso", "email": "61982523+LuisCardosoOliveira@users.noreply.github.com", "date": "2022-08-26T14:10:11Z"}, "message": "translations(rustc_session): migrate the file cgu_reuse_tracker\n\nThis commit migrates the errors that indicates an incorrect\nCGU type and the fatal error that indicates that a CGU has\nnot been correctly recorded", "tree": {"sha": "6752f312b153cc954032e2dd9413736f52bf14ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6752f312b153cc954032e2dd9413736f52bf14ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/706452eba74026c51e8d0fa30aee2497c69eafc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/706452eba74026c51e8d0fa30aee2497c69eafc0", "html_url": "https://github.com/rust-lang/rust/commit/706452eba74026c51e8d0fa30aee2497c69eafc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/706452eba74026c51e8d0fa30aee2497c69eafc0/comments", "author": {"login": "LuisCardosoOliveira", "id": 61982523, "node_id": "MDQ6VXNlcjYxOTgyNTIz", "avatar_url": "https://avatars.githubusercontent.com/u/61982523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LuisCardosoOliveira", "html_url": "https://github.com/LuisCardosoOliveira", "followers_url": "https://api.github.com/users/LuisCardosoOliveira/followers", "following_url": "https://api.github.com/users/LuisCardosoOliveira/following{/other_user}", "gists_url": "https://api.github.com/users/LuisCardosoOliveira/gists{/gist_id}", "starred_url": "https://api.github.com/users/LuisCardosoOliveira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LuisCardosoOliveira/subscriptions", "organizations_url": "https://api.github.com/users/LuisCardosoOliveira/orgs", "repos_url": "https://api.github.com/users/LuisCardosoOliveira/repos", "events_url": "https://api.github.com/users/LuisCardosoOliveira/events{/privacy}", "received_events_url": "https://api.github.com/users/LuisCardosoOliveira/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LuisCardosoOliveira", "id": 61982523, "node_id": "MDQ6VXNlcjYxOTgyNTIz", "avatar_url": "https://avatars.githubusercontent.com/u/61982523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LuisCardosoOliveira", "html_url": "https://github.com/LuisCardosoOliveira", "followers_url": "https://api.github.com/users/LuisCardosoOliveira/followers", "following_url": "https://api.github.com/users/LuisCardosoOliveira/following{/other_user}", "gists_url": "https://api.github.com/users/LuisCardosoOliveira/gists{/gist_id}", "starred_url": "https://api.github.com/users/LuisCardosoOliveira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LuisCardosoOliveira/subscriptions", "organizations_url": "https://api.github.com/users/LuisCardosoOliveira/orgs", "repos_url": "https://api.github.com/users/LuisCardosoOliveira/repos", "events_url": "https://api.github.com/users/LuisCardosoOliveira/events{/privacy}", "received_events_url": "https://api.github.com/users/LuisCardosoOliveira/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a13871b69924b74cfa1d737f2894068b37ea7ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a13871b69924b74cfa1d737f2894068b37ea7ea", "html_url": "https://github.com/rust-lang/rust/commit/8a13871b69924b74cfa1d737f2894068b37ea7ea"}], "stats": {"total": 65, "additions": 60, "deletions": 5}, "files": [{"sha": "71d3abc5e6b7c5bf7a2fdd4e518cfbfa6e174c6f", "filename": "compiler/rustc_error_messages/locales/en-US/session.ftl", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsession.ftl?ref=706452eba74026c51e8d0fa30aee2497c69eafc0", "patch": "@@ -0,0 +1,5 @@\n+incorrect_cgu_reuse_type = \n+    CGU-reuse for `{$cgu_user_name}` is `{$actual_reuse}` but should be `{$at_least}``${expected_reuse}`\n+\n+cgu_not_recorded = \n+    CGU-reuse for `{$cgu_user_name}` is (mangled: `{$cgu_name}`) was not recorded`\n\\ No newline at end of file"}, {"sha": "2fde301d19dbcdfbebbdca1e96b45968c41a07c2", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=706452eba74026c51e8d0fa30aee2497c69eafc0", "patch": "@@ -37,6 +37,7 @@ fluent_messages! {\n     builtin_macros => \"../locales/en-US/builtin_macros.ftl\",\n     const_eval => \"../locales/en-US/const_eval.ftl\",\n     expand => \"../locales/en-US/expand.ftl\",\n+    session => \"../locales/en-US/session.ftl\",\n     interface => \"../locales/en-US/interface.ftl\",\n     lint => \"../locales/en-US/lint.ftl\",\n     parser => \"../locales/en-US/parser.ftl\","}, {"sha": "88fcbf7c1133a8072c48d91fe8b91492a1de1059", "filename": "compiler/rustc_session/src/cgu_reuse_tracker.rs", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_session%2Fsrc%2Fcgu_reuse_tracker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_session%2Fsrc%2Fcgu_reuse_tracker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fcgu_reuse_tracker.rs?ref=706452eba74026c51e8d0fa30aee2497c69eafc0", "patch": "@@ -2,8 +2,13 @@\n //! compilation. This is used for incremental compilation tests and debug\n //! output.\n \n+use crate::errors::IncorrectCguReuseType;\n+// use crate::errors::{CguNotRecorded, IncorrectCguReuseType};\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_errors::{DiagnosticArgValue, IntoDiagnosticArg};\n use rustc_span::{Span, Symbol};\n+use std::borrow::Cow;\n+use std::fmt::{self};\n use std::sync::{Arc, Mutex};\n use tracing::debug;\n \n@@ -14,6 +19,22 @@ pub enum CguReuse {\n     PostLto,\n }\n \n+impl fmt::Display for CguReuse {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match *self {\n+            CguReuse::No => write!(f, \"No\"),\n+            CguReuse::PreLto => write!(f, \"PreLto \"),\n+            CguReuse::PostLto => write!(f, \"PostLto \"),\n+        }\n+    }\n+}\n+\n+impl IntoDiagnosticArg for CguReuse {\n+    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n+        DiagnosticArgValue::Str(Cow::Owned(self.to_string()))\n+    }\n+}\n+\n #[derive(Copy, Clone, Debug, PartialEq)]\n pub enum ComparisonKind {\n     Exact,\n@@ -99,18 +120,21 @@ impl CguReuseTracker {\n \n                     if error {\n                         let at_least = if at_least { \"at least \" } else { \"\" };\n-                        let msg = format!(\n-                            \"CGU-reuse for `{cgu_user_name}` is `{actual_reuse:?}` but \\\n-                                           should be {at_least}`{expected_reuse:?}`\"\n-                        );\n-                        diag.span_err(error_span.0, &msg);\n+                        IncorrectCguReuseType {\n+                            span: error_span.0,\n+                            cgu_user_name: &cgu_user_name,\n+                            actual_reuse,\n+                            expected_reuse,\n+                            at_least,\n+                        };\n                     }\n                 } else {\n                     let msg = format!(\n                         \"CGU-reuse for `{cgu_user_name}` (mangled: `{cgu_name}`) was \\\n                                        not recorded\"\n                     );\n                     diag.span_fatal(error_span.0, &msg)\n+                    // CguNotRecorded { cgu_user_name, cgu_name };\n                 }\n             }\n         }"}, {"sha": "ef78d1c98361b26da85f9ef5afd742bf4854e0dd", "filename": "compiler/rustc_session/src/errors.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ferrors.rs?ref=706452eba74026c51e8d0fa30aee2497c69eafc0", "patch": "@@ -0,0 +1,22 @@\n+use crate as rustc_session;\n+use crate::cgu_reuse_tracker::CguReuse;\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+#[derive(SessionDiagnostic)]\n+#[error(session::incorrect_cgu_reuse_type)]\n+pub struct IncorrectCguReuseType<'a> {\n+    #[primary_span]\n+    pub span: Span,\n+    pub cgu_user_name: &'a str,\n+    pub actual_reuse: CguReuse,\n+    pub expected_reuse: CguReuse,\n+    pub at_least: &'a str,\n+}\n+\n+// #[derive(SessionDiagnostic)]\n+// #[fatal(session::cgu_not_recorded)]\n+// pub struct CguNotRecorded<'a> {\n+//     pub cgu_user_name: &'a str,\n+//     pub cgu_name: &'a str,\n+// }"}, {"sha": "113bd85135eae783fbd7f103d3ae1fa7b0f27719", "filename": "compiler/rustc_session/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_session%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/706452eba74026c51e8d0fa30aee2497c69eafc0/compiler%2Frustc_session%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Flib.rs?ref=706452eba74026c51e8d0fa30aee2497c69eafc0", "patch": "@@ -8,9 +8,12 @@\n #![feature(map_many_mut)]\n #![recursion_limit = \"256\"]\n #![allow(rustc::potential_query_instability)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate rustc_macros;\n+pub mod errors;\n \n pub mod cgu_reuse_tracker;\n pub mod utils;"}]}