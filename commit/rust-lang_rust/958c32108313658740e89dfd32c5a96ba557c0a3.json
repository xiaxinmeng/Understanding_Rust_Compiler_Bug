{"sha": "958c32108313658740e89dfd32c5a96ba557c0a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OGMzMjEwODMxMzY1ODc0MGU4OWRmZDMyYzVhOTZiYTU1N2MwYTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-05T21:32:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T03:39:56Z"}, "message": "rt: Fix the atomic get_ref_count method to avoid races", "tree": {"sha": "543f436905d84a064cdd9fdd6259b9f7240c3f3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/543f436905d84a064cdd9fdd6259b9f7240c3f3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/958c32108313658740e89dfd32c5a96ba557c0a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/958c32108313658740e89dfd32c5a96ba557c0a3", "html_url": "https://github.com/rust-lang/rust/commit/958c32108313658740e89dfd32c5a96ba557c0a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/958c32108313658740e89dfd32c5a96ba557c0a3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1347d04bb086f6d76dd7287762d34ef4c57dbc00", "url": "https://api.github.com/repos/rust-lang/rust/commits/1347d04bb086f6d76dd7287762d34ef4c57dbc00", "html_url": "https://github.com/rust-lang/rust/commit/1347d04bb086f6d76dd7287762d34ef4c57dbc00"}], "stats": {"total": 32, "additions": 12, "deletions": 20}, "files": [{"sha": "a20f0a1e84c456d16e9fbbc8d40289e23a3d8629", "filename": "src/libcore/comm.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Flibcore%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Flibcore%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcomm.rs?ref=958c32108313658740e89dfd32c5a96ba557c0a3", "patch": "@@ -44,7 +44,6 @@ native mod rustrt {\n     fn del_port(po: *rust_port);\n     fn rust_port_begin_detach(po: *rust_port,\n                               yield: *ctypes::uintptr_t);\n-    fn rust_port_end_detach(po: *rust_port);\n     fn get_port_id(po: *rust_port) -> port_id;\n     fn rust_port_size(po: *rust_port) -> ctypes::size_t;\n     fn port_recv(dptr: *uint, po: *rust_port,\n@@ -93,7 +92,6 @@ resource port_ptr<T: send>(po: *rust_port) {\n         // in a bogus state.\n         task::yield();\n     }\n-    rustrt::rust_port_end_detach(po);\n \n     // Drain the port so that all the still-enqueued items get dropped\n     while rustrt::rust_port_size(po) > 0u {"}, {"sha": "14b6d0f1962f970ff66209366e4b8d9682e5f537", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=958c32108313658740e89dfd32c5a96ba557c0a3", "patch": "@@ -488,16 +488,12 @@ rust_port_begin_detach(rust_port *port, uintptr_t *yield) {\n     port->begin_detach(yield);\n }\n \n-extern \"C\" CDECL void\n-rust_port_end_detach(rust_port *port) {\n-    port->end_detach();\n-}\n-\n extern \"C\" CDECL void\n del_port(rust_port *port) {\n     rust_task *task = rust_task_thread::get_task();\n     LOG(task, comm, \"del_port(0x%\" PRIxPTR \")\", (uintptr_t) port);\n     A(task->thread, port->get_ref_count() == 0, \"Expected port ref_count == 0\");\n+    port->end_detach();\n     delete port;\n }\n "}, {"sha": "7d19fbfa04b19108115253a60949b1a46023ce4c", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=958c32108313658740e89dfd32c5a96ba557c0a3", "patch": "@@ -113,11 +113,7 @@ public:                                                                    \\\n        assert(old > 0);                                                    \\\n    }                                                                       \\\n    void deref() { if(0 == sync::decrement(ref_count)) { delete_this(); } } \\\n-   intptr_t get_ref_count() {                                              \\\n-      sync::increment(ref_count);                                          \\\n-      intptr_t current = sync::decrement(ref_count);                       \\\n-      return current;                                                      \\\n-   }\n+   intptr_t get_ref_count() { return sync::read(ref_count); }\n \n template <typename T> struct task_owned {\n     inline void *operator new(size_t size, rust_task *task, const char *tag);"}, {"sha": "7ac4cef0e8f9eb8d47186f87e2198e44e534a0b1", "filename": "src/rt/rust_port.cpp", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Frust_port.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Frust_port.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.cpp?ref=958c32108313658740e89dfd32c5a96ba557c0a3", "patch": "@@ -44,13 +44,6 @@ void rust_port::begin_detach(uintptr_t *yield) {\n }\n \n void rust_port::end_detach() {\n-    // FIXME: For some reason, on rare occasion we can get here without\n-    // actually having the ref count go to 0. Possibly related to #1923\n-    bool done = false;\n-    while (!done) {\n-        done = get_ref_count() == 0;\n-    }\n-\n     // Just take the lock to make sure that the thread that signaled\n     // the detach_cond isn't still holding it\n     scoped_lock with(detach_lock);"}, {"sha": "5de20773326b23f3f0904b5e3542298de32d8992", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=958c32108313658740e89dfd32c5a96ba557c0a3", "patch": "@@ -35,7 +35,6 @@ rust_list_files\n rust_log_console_on\n rust_log_console_off\n rust_port_begin_detach\n-rust_port_end_detach\n rust_port_size\n rust_process_wait\n rust_ptr_eq"}, {"sha": "66682f11e9cacdb30e3193ada585420ec4c787c3", "filename": "src/rt/sync/sync.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Fsync%2Fsync.h", "raw_url": "https://github.com/rust-lang/rust/raw/958c32108313658740e89dfd32c5a96ba557c0a3/src%2Frt%2Fsync%2Fsync.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Fsync.h?ref=958c32108313658740e89dfd32c5a96ba557c0a3", "patch": "@@ -29,6 +29,16 @@ class sync {\n     static T decrement(T &address) {\n         return __sync_sub_and_fetch(&address, 1);\n     }\n+\n+    template <class T>\n+    static T read(T *address) {\n+        return __sync_add_and_fetch(address, 0);\n+    }\n+\n+    template <class T>\n+    static T read(T &address) {\n+        return __sync_add_and_fetch(&address, 0);\n+    }\n };\n \n #endif /* SYNC_H */"}]}