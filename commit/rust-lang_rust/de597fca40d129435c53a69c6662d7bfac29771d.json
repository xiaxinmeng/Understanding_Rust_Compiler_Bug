{"sha": "de597fca40d129435c53a69c6662d7bfac29771d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNTk3ZmNhNDBkMTI5NDM1YzUzYTY5YzY2NjJkN2JmYWMyOTc3MWQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-27T13:35:35Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-27T14:04:25Z"}, "message": "Optimize set_{panic,print}(None).", "tree": {"sha": "24e8477e68c4a9da6561ce090429043f0948a8cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24e8477e68c4a9da6561ce090429043f0948a8cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de597fca40d129435c53a69c6662d7bfac29771d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de597fca40d129435c53a69c6662d7bfac29771d", "html_url": "https://github.com/rust-lang/rust/commit/de597fca40d129435c53a69c6662d7bfac29771d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de597fca40d129435c53a69c6662d7bfac29771d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed3ead013f40c65e2972c794a71b756237a31b46", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed3ead013f40c65e2972c794a71b756237a31b46", "html_url": "https://github.com/rust-lang/rust/commit/ed3ead013f40c65e2972c794a71b756237a31b46"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "36b49401591f5243b4849425e22ed2c717a2be70", "filename": "library/std/src/io/stdio.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/de597fca40d129435c53a69c6662d7bfac29771d/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de597fca40d129435c53a69c6662d7bfac29771d/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs?ref=de597fca40d129435c53a69c6662d7bfac29771d", "patch": "@@ -905,6 +905,10 @@ impl fmt::Debug for StderrLock<'_> {\n #[doc(hidden)]\n pub fn set_panic(sink: Option<Box<dyn Write + Send>>) -> Option<Box<dyn Write + Send>> {\n     use crate::mem;\n+    if sink.is_none() && !LOCAL_STREAMS.load(Ordering::Relaxed) {\n+        // LOCAL_STDERR is definitely None since LOCAL_STREAMS is false.\n+        return None;\n+    }\n     let s = LOCAL_STDERR.with(move |slot| mem::replace(&mut *slot.borrow_mut(), sink)).and_then(\n         |mut s| {\n             let _ = s.flush();\n@@ -932,6 +936,10 @@ pub fn set_panic(sink: Option<Box<dyn Write + Send>>) -> Option<Box<dyn Write +\n #[doc(hidden)]\n pub fn set_print(sink: Option<Box<dyn Write + Send>>) -> Option<Box<dyn Write + Send>> {\n     use crate::mem;\n+    if sink.is_none() && !LOCAL_STREAMS.load(Ordering::Relaxed) {\n+        // LOCAL_STDOUT is definitely None since LOCAL_STREAMS is false.\n+        return None;\n+    }\n     let s = LOCAL_STDOUT.with(move |slot| mem::replace(&mut *slot.borrow_mut(), sink)).and_then(\n         |mut s| {\n             let _ = s.flush();"}]}