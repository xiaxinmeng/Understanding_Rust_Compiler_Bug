{"sha": "f68e099777b63d4a7b179d24c19bb28f22d15e2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2OGUwOTk3NzdiNjNkNGE3YjE3OWQyNGMxOWJiMjhmMjJkMTVlMmY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-05T14:42:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-05T14:42:33Z"}, "message": "Merge #4265\n\n4265: Make `change_visibility` assist work for tuple struct fields r=matklad a=Jesse-Bakker\n\nFixes #4206 \n\nCo-authored-by: Jesse Bakker <git@jessebakker.com>", "tree": {"sha": "243ca87a2c4578dce9456cd3cd3726460fb0e702", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/243ca87a2c4578dce9456cd3cd3726460fb0e702"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f68e099777b63d4a7b179d24c19bb28f22d15e2f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesXtZCRBK7hj4Ov3rIwAAdHIIAJ7Jux2I9m+9SqYqYpls3zw2\ndXjTyZmXTwknoKozDh+QwidijBxUmpc6QoZapkF0A3UIafN6nOZ9pQZX9hHVgIGj\nki609yWs0XFjfqsBwRoMtIhM2AdvN69PWM9t36JhgfBttyynlIhHUA5CrEfBcdoS\nKbunRbCy9CMJCqC919LAg03fL+gdxdtfWgBqw84jDah1SVKRitSBOJXnjzNYnbe7\nLtX9t0+4R0T6Q6YeiXEt0xgYc/ScW+n8lCobbLTaSQ0COMbKhq7FhyXBN2N8G/2T\nMfKZaf3vs8Wjljkpi+fJtcFt7CjvxCVooCbD2vNbv2+sEbvsfIwZVeHRs97EG5U=\n=HMf0\n-----END PGP SIGNATURE-----\n", "payload": "tree 243ca87a2c4578dce9456cd3cd3726460fb0e702\nparent d1c1c01309cff76f6ba60c845500f67a1ca6cec6\nparent b5c330bf5a1884ff8ad196a23fa6e356c460e130\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1588689753 +0000\ncommitter GitHub <noreply@github.com> 1588689753 +0000\n\nMerge #4265\n\n4265: Make `change_visibility` assist work for tuple struct fields r=matklad a=Jesse-Bakker\n\nFixes #4206 \n\nCo-authored-by: Jesse Bakker <git@jessebakker.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f68e099777b63d4a7b179d24c19bb28f22d15e2f", "html_url": "https://github.com/rust-lang/rust/commit/f68e099777b63d4a7b179d24c19bb28f22d15e2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f68e099777b63d4a7b179d24c19bb28f22d15e2f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1c1c01309cff76f6ba60c845500f67a1ca6cec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1c1c01309cff76f6ba60c845500f67a1ca6cec6", "html_url": "https://github.com/rust-lang/rust/commit/d1c1c01309cff76f6ba60c845500f67a1ca6cec6"}, {"sha": "b5c330bf5a1884ff8ad196a23fa6e356c460e130", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5c330bf5a1884ff8ad196a23fa6e356c460e130", "html_url": "https://github.com/rust-lang/rust/commit/b5c330bf5a1884ff8ad196a23fa6e356c460e130"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "1cd532e801d3395c62076102b9cbe5f4b29f0627", "filename": "crates/ra_assists/src/handlers/change_visibility.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f68e099777b63d4a7b179d24c19bb28f22d15e2f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f68e099777b63d4a7b179d24c19bb28f22d15e2f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs?ref=f68e099777b63d4a7b179d24c19bb28f22d15e2f", "patch": "@@ -47,8 +47,7 @@ fn add_vis(ctx: AssistCtx) -> Option<Assist> {\n             return None;\n         }\n         (vis_offset(&parent), keyword.text_range())\n-    } else {\n-        let field_name: ast::Name = ctx.find_node_at_offset()?;\n+    } else if let Some(field_name) = ctx.find_node_at_offset::<ast::Name>() {\n         let field = field_name.syntax().ancestors().find_map(ast::RecordFieldDef::cast)?;\n         if field.name()? != field_name {\n             tested_by!(change_visibility_field_false_positive);\n@@ -58,6 +57,13 @@ fn add_vis(ctx: AssistCtx) -> Option<Assist> {\n             return None;\n         }\n         (vis_offset(field.syntax()), field_name.syntax().text_range())\n+    } else if let Some(field) = ctx.find_node_at_offset::<ast::TupleFieldDef>() {\n+        if field.visibility().is_some() {\n+            return None;\n+        }\n+        (vis_offset(field.syntax()), field.syntax().text_range())\n+    } else {\n+        return None;\n     };\n \n     ctx.add_assist(AssistId(\"change_visibility\"), \"Change visibility to pub(crate)\", |edit| {\n@@ -129,7 +135,8 @@ mod tests {\n             change_visibility,\n             r\"struct S { <|>field: u32 }\",\n             r\"struct S { <|>pub(crate) field: u32 }\",\n-        )\n+        );\n+        check_assist(change_visibility, r\"struct S ( <|>u32 )\", r\"struct S ( <|>pub(crate) u32 )\");\n     }\n \n     #[test]"}]}