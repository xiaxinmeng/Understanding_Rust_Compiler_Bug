{"sha": "1ffd21a15c19121e46f931f44e8442e4a31df236", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZmQyMWExNWMxOTEyMWU0NmY5MzFmNDRlODQ0MmU0YTMxZGYyMzY=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T12:19:29Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T12:19:29Z"}, "message": "Pacify tidy", "tree": {"sha": "96e117b53653f2354e390342d7278c8d8da36fb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96e117b53653f2354e390342d7278c8d8da36fb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ffd21a15c19121e46f931f44e8442e4a31df236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ffd21a15c19121e46f931f44e8442e4a31df236", "html_url": "https://github.com/rust-lang/rust/commit/1ffd21a15c19121e46f931f44e8442e4a31df236", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ffd21a15c19121e46f931f44e8442e4a31df236/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f407ae5ee53a0c1e2ec12ee1087c8f58e5f0ac0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f407ae5ee53a0c1e2ec12ee1087c8f58e5f0ac0", "html_url": "https://github.com/rust-lang/rust/commit/9f407ae5ee53a0c1e2ec12ee1087c8f58e5f0ac0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "97e7dd6507b988180f3203974ace8fcd395d05af", "filename": "compiler/rustc_middle/src/ty/consts/valtree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ffd21a15c19121e46f931f44e8442e4a31df236/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fvaltree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ffd21a15c19121e46f931f44e8442e4a31df236/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fvaltree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fvaltree.rs?ref=1ffd21a15c19121e46f931f44e8442e4a31df236", "patch": "@@ -11,7 +11,7 @@ use rustc_macros::HashStable;\n /// `AllocId`s point to equal values. So we may end up with different representations for\n /// two constants whose value is `&42`. Furthermore any kind of struct that has padding will\n /// have arbitrary values within that padding, even if the values of the struct are the same.\n-/// \n+///\n /// `ValTree` does not have this problem with representation, as it only contains integers or\n /// lists of values of itself.\n pub enum ValTree<'tcx> {"}]}