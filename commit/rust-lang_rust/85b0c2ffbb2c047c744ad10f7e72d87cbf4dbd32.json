{"sha": "85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32", "node_id": "C_kwDOAAsO6NoAKDg1YjBjMmZmYmIyYzA0N2M3NDRhZDEwZjdlNzJkODdjYmY0ZGJkMzI", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-09T02:51:54Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-09T02:51:54Z"}, "message": "rustdoc: fixed messed-up rustdoc auto trait impls\n\nBefore:\n\n    impl<T, U> UnwindSafe for (T, ...) where\n        T: UnwindSafe,\n        U: UnwindSafe,\n\nAfter:\n\n    impl<T> UnwindSafe for (T, ...) where\n        T: UnwindSafe,", "tree": {"sha": "0f221a42c9eb8205e827bba43d077f8d451a35ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f221a42c9eb8205e827bba43d077f8d451a35ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32", "html_url": "https://github.com/rust-lang/rust/commit/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6950f144cf83d10bc4a304b48488f9f5368cfaae", "url": "https://api.github.com/repos/rust-lang/rust/commits/6950f144cf83d10bc4a304b48488f9f5368cfaae", "html_url": "https://github.com/rust-lang/rust/commit/6950f144cf83d10bc4a304b48488f9f5368cfaae"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6fa9e795db81bbf3e12eb29c4cf289c2641b795b", "filename": "library/core/src/primitive_docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fprimitive_docs.rs?ref=85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32", "patch": "@@ -960,7 +960,7 @@ mod prim_tuple {}\n // Required to make auto trait impls render.\n // See /src/librustdoc/passes/collect_trait_impls.rs:collect_trait_impls\n #[doc(hidden)]\n-impl<T, U> (T, U) {}\n+impl<T> (T,) {}\n \n // Fake impl that's only really used for docs.\n #[cfg(doc)]"}, {"sha": "6fa9e795db81bbf3e12eb29c4cf289c2641b795b", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32", "patch": "@@ -960,7 +960,7 @@ mod prim_tuple {}\n // Required to make auto trait impls render.\n // See /src/librustdoc/passes/collect_trait_impls.rs:collect_trait_impls\n #[doc(hidden)]\n-impl<T, U> (T, U) {}\n+impl<T> (T,) {}\n \n // Fake impl that's only really used for docs.\n #[cfg(doc)]"}, {"sha": "f77884370f55a3244b68f42458213a12da4c369e", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=85b0c2ffbb2c047c744ad10f7e72d87cbf4dbd32", "patch": "@@ -1750,7 +1750,7 @@ pub(crate) enum PrimitiveType {\n     Never,\n }\n \n-type SimplifiedTypes = FxHashMap<PrimitiveType, ArrayVec<SimplifiedType, 2>>;\n+type SimplifiedTypes = FxHashMap<PrimitiveType, ArrayVec<SimplifiedType, 3>>;\n impl PrimitiveType {\n     pub(crate) fn from_hir(prim: hir::PrimTy) -> PrimitiveType {\n         use ast::{FloatTy, IntTy, UintTy};\n@@ -1839,10 +1839,10 @@ impl PrimitiveType {\n                 //\n                 // Either manually update this arrayvec at this point\n                 // or start with a more complex refactoring.\n-                Tuple => [TupleSimplifiedType(2), TupleSimplifiedType(3)].into(),\n+                Tuple => [TupleSimplifiedType(1), TupleSimplifiedType(2), TupleSimplifiedType(3)].into(),\n                 Unit => single(TupleSimplifiedType(0)),\n-                RawPointer => [PtrSimplifiedType(Mutability::Not), PtrSimplifiedType(Mutability::Mut)].into(),\n-                Reference => [RefSimplifiedType(Mutability::Not), RefSimplifiedType(Mutability::Mut)].into(),\n+                RawPointer => [PtrSimplifiedType(Mutability::Not), PtrSimplifiedType(Mutability::Mut)].into_iter().collect(),\n+                Reference => [RefSimplifiedType(Mutability::Not), RefSimplifiedType(Mutability::Mut)].into_iter().collect(),\n                 // FIXME: This will be wrong if we ever add inherent impls\n                 // for function pointers.\n                 Fn => ArrayVec::new(),"}]}