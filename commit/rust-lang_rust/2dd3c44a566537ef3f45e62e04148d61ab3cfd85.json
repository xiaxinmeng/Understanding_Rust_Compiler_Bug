{"sha": "2dd3c44a566537ef3f45e62e04148d61ab3cfd85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZDNjNDRhNTY2NTM3ZWYzZjQ1ZTYyZTA0MTQ4ZDYxYWIzY2ZkODU=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-23T13:51:27Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-23T23:56:23Z"}, "message": "std: remove a malloc from os::fill_charp_buf", "tree": {"sha": "a06c5dba1b24c9b73042909d1029da6a0dad84eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a06c5dba1b24c9b73042909d1029da6a0dad84eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dd3c44a566537ef3f45e62e04148d61ab3cfd85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dd3c44a566537ef3f45e62e04148d61ab3cfd85", "html_url": "https://github.com/rust-lang/rust/commit/2dd3c44a566537ef3f45e62e04148d61ab3cfd85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dd3c44a566537ef3f45e62e04148d61ab3cfd85/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31b77aecfc195c774852965329b5e75453eee0b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/31b77aecfc195c774852965329b5e75453eee0b2", "html_url": "https://github.com/rust-lang/rust/commit/31b77aecfc195c774852965329b5e75453eee0b2"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "142021be471ae7c697c7821c74daee30cd167069", "filename": "src/libstd/os.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2dd3c44a566537ef3f45e62e04148d61ab3cfd85/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dd3c44a566537ef3f45e62e04148d61ab3cfd85/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=2dd3c44a566537ef3f45e62e04148d61ab3cfd85", "patch": "@@ -87,9 +87,8 @@ pub fn getcwd() -> Path {\n \n // FIXME: move these to str perhaps? #2620\n \n-pub fn fill_charp_buf(f: &fn(*mut c_char, size_t) -> bool)\n-    -> Option<~str> {\n-    let mut buf = vec::from_elem(TMPBUF_SZ, 0u8 as c_char);\n+pub fn fill_charp_buf(f: &fn(*mut c_char, size_t) -> bool) -> Option<~str> {\n+    let mut buf = [0 as c_char, .. TMPBUF_SZ];\n     do buf.as_mut_buf |b, sz| {\n         if f(b, sz as size_t) {\n             unsafe {"}]}