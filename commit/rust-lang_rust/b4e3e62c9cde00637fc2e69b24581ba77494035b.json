{"sha": "b4e3e62c9cde00637fc2e69b24581ba77494035b", "node_id": "C_kwDOAAsO6NoAKGI0ZTNlNjJjOWNkZTAwNjM3ZmMyZTY5YjI0NTgxYmE3NzQ5NDAzNWI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-30T08:33:37Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-30T11:55:17Z"}, "message": "Bless nll tests.", "tree": {"sha": "febd00751fa6caa1f704cdcabe5249a7643643e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/febd00751fa6caa1f704cdcabe5249a7643643e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4e3e62c9cde00637fc2e69b24581ba77494035b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4e3e62c9cde00637fc2e69b24581ba77494035b", "html_url": "https://github.com/rust-lang/rust/commit/b4e3e62c9cde00637fc2e69b24581ba77494035b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4e3e62c9cde00637fc2e69b24581ba77494035b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39c67b2133702974efe03fea651e9b4a5cb2cbe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/39c67b2133702974efe03fea651e9b4a5cb2cbe1", "html_url": "https://github.com/rust-lang/rust/commit/39c67b2133702974efe03fea651e9b4a5cb2cbe1"}], "stats": {"total": 73, "additions": 45, "deletions": 28}, "files": [{"sha": "db737a9c544c0497320ab6f868c07aba42b00112", "filename": "src/test/ui/impl-trait/must_outlive_least_region_or_bound.nll.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr?ref=b4e3e62c9cde00637fc2e69b24581ba77494035b", "patch": "@@ -112,11 +112,13 @@ LL | fn move_lifetime_into_fn<'a, 'b>(x: &'a u32, y: &'b u32) -> impl Fn(&'a u32\n error[E0310]: the parameter type `T` may not live long enough\n   --> $DIR/must_outlive_least_region_or_bound.rs:40:5\n    |\n-LL | fn ty_param_wont_outlive_static<T:Debug>(x: T) -> impl Debug + 'static {\n-   |                                 -- help: consider adding an explicit lifetime bound...: `T: 'static +`\n-LL |\n LL |     x\n    |     ^ ...so that the type `T` will meet its required lifetime bounds\n+   |\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL | fn ty_param_wont_outlive_static<T:Debug + 'static>(x: T) -> impl Debug + 'static {\n+   |                                         +++++++++\n \n error: aborting due to 9 previous errors\n "}, {"sha": "3050f10b2057d05f5d1e8f03ae1267c4e2e1447d", "filename": "src/test/ui/impl-trait/type_parameters_captured.nll.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fimpl-trait%2Ftype_parameters_captured.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fimpl-trait%2Ftype_parameters_captured.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Ftype_parameters_captured.nll.stderr?ref=b4e3e62c9cde00637fc2e69b24581ba77494035b", "patch": "@@ -1,11 +1,13 @@\n error[E0310]: the parameter type `T` may not live long enough\n   --> $DIR/type_parameters_captured.rs:9:5\n    |\n-LL | fn foo<T>(x: T) -> impl Any + 'static {\n-   |        - help: consider adding an explicit lifetime bound...: `T: 'static`\n-LL |\n LL |     x\n    |     ^ ...so that the type `T` will meet its required lifetime bounds\n+   |\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL | fn foo<T: 'static>(x: T) -> impl Any + 'static {\n+   |         +++++++++\n \n error: aborting due to previous error\n "}, {"sha": "2906c05864bae896970016b21481061568586408", "filename": "src/test/ui/lifetimes/lifetime-errors/issue_74400.nll.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.nll.stderr?ref=b4e3e62c9cde00637fc2e69b24581ba77494035b", "patch": "@@ -1,10 +1,13 @@\n error[E0310]: the parameter type `T` may not live long enough\n   --> $DIR/issue_74400.rs:12:5\n    |\n-LL | fn g<T>(data: &[T]) {\n-   |      - help: consider adding an explicit lifetime bound...: `T: 'static`\n LL |     f(data, identity)\n    |     ^^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\n+   |\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL | fn g<T: 'static>(data: &[T]) {\n+   |       +++++++++\n \n error[E0308]: mismatched types\n   --> $DIR/issue_74400.rs:12:5"}, {"sha": "0212c2d712cb35014746a94f5dfd360780b3fdd8", "filename": "src/test/ui/suggestions/lifetimes/missing-lifetimes-in-signature-2.nll.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature-2.nll.stderr?ref=b4e3e62c9cde00637fc2e69b24581ba77494035b", "patch": "@@ -1,8 +1,6 @@\n error[E0311]: the parameter type `T` may not live long enough\n   --> $DIR/missing-lifetimes-in-signature-2.rs:20:5\n    |\n-LL |   fn func<T: Test>(foo: &Foo, t: T) {\n-   |           -- help: consider adding an explicit lifetime bound...: `T: 'a +`\n LL | /     foo.bar(move |_| {\n LL | |\n LL | |         t.test();\n@@ -22,6 +20,10 @@ LL | |\n LL | |         t.test();\n LL | |     });\n    | |______^\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL | fn func<T: Test + 'a>(foo: &Foo, t: T) {\n+   |                 ++++\n \n error: aborting due to previous error\n "}, {"sha": "24eac64d334da81934e311cbb4b0fb74eaa795b3", "filename": "src/test/ui/suggestions/lifetimes/missing-lifetimes-in-signature.nll.stderr", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature.nll.stderr?ref=b4e3e62c9cde00637fc2e69b24581ba77494035b", "patch": "@@ -26,9 +26,6 @@ LL | fn foo<G, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n error[E0311]: the parameter type `G` may not live long enough\n   --> $DIR/missing-lifetimes-in-signature.rs:31:5\n    |\n-LL |   fn bar<G, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n-   |          - help: consider adding an explicit lifetime bound...: `G: 'a`\n-...\n LL | /     move || {\n LL | |         *dest = g.get();\n LL | |     }\n@@ -46,13 +43,14 @@ LL | /     move || {\n LL | |         *dest = g.get();\n LL | |     }\n    | |_____^\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL |     G: Get<T> + 'a,\n+   |               ++++\n \n error[E0311]: the parameter type `G` may not live long enough\n   --> $DIR/missing-lifetimes-in-signature.rs:53:5\n    |\n-LL |   fn qux<'a, G: 'a, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n-   |              -- help: consider adding an explicit lifetime bound...: `G: 'b +`\n-...\n LL | /     move || {\n LL | |         *dest = g.get();\n LL | |     }\n@@ -70,13 +68,14 @@ LL | /     move || {\n LL | |         *dest = g.get();\n LL | |     }\n    | |_____^\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL | fn qux<'a, G: 'a + 'b, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n+   |                  ++++\n \n error[E0311]: the parameter type `G` may not live long enough\n   --> $DIR/missing-lifetimes-in-signature.rs:62:9\n    |\n-LL |       fn qux<'b, G: Get<T> + 'b, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ {\n-   |                  -- help: consider adding an explicit lifetime bound...: `G: 'c +`\n-LL |\n LL | /         move || {\n LL | |             *dest = g.get();\n LL | |         }\n@@ -94,13 +93,14 @@ LL | /         move || {\n LL | |             *dest = g.get();\n LL | |         }\n    | |_________^\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL |     fn qux<'b, G: Get<T> + 'b + 'c, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ {\n+   |                               ++++\n \n error[E0311]: the parameter type `G` may not live long enough\n   --> $DIR/missing-lifetimes-in-signature.rs:74:5\n    |\n-LL |   fn bat<'a, G: 'a, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ + 'a\n-   |              -- help: consider adding an explicit lifetime bound...: `G: 'b +`\n-...\n LL | /     move || {\n LL | |         *dest = g.get();\n LL | |     }\n@@ -118,6 +118,10 @@ LL | /     move || {\n LL | |         *dest = g.get();\n LL | |     }\n    | |_____^\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL | fn bat<'a, G: 'a + 'b, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ + 'a\n+   |                  ++++\n \n error[E0621]: explicit lifetime required in the type of `dest`\n   --> $DIR/missing-lifetimes-in-signature.rs:74:5\n@@ -133,13 +137,15 @@ LL | |     }\n error[E0309]: the parameter type `G` may not live long enough\n   --> $DIR/missing-lifetimes-in-signature.rs:85:5\n    |\n-LL |   fn bak<'a, G, T>(g: G, dest: &'a mut T) -> impl FnOnce() + 'a\n-   |              - help: consider adding an explicit lifetime bound...: `G: 'a`\n-...\n LL | /     move || {\n LL | |         *dest = g.get();\n LL | |     }\n    | |_____^ ...so that the type `G` will meet its required lifetime bounds\n+   |\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL |     G: Get<T> + 'a,\n+   |               ++++\n \n error: aborting due to 8 previous errors\n "}, {"sha": "cf912f4aac201284d87fd333382496edb3dfcdd3", "filename": "src/test/ui/suggestions/suggest-impl-trait-lifetime.nll.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-impl-trait-lifetime.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b4e3e62c9cde00637fc2e69b24581ba77494035b/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-impl-trait-lifetime.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-impl-trait-lifetime.nll.stderr?ref=b4e3e62c9cde00637fc2e69b24581ba77494035b", "patch": "@@ -1,11 +1,13 @@\n error[E0310]: the parameter type `impl Debug` may not live long enough\n   --> $DIR/suggest-impl-trait-lifetime.rs:7:5\n    |\n-LL | fn foo(d: impl Debug) {\n-   |           ---------- help: consider adding an explicit lifetime bound...: `impl Debug + 'static`\n-LL |\n LL |     bar(d);\n    |     ^^^^^^ ...so that the type `impl Debug` will meet its required lifetime bounds\n+   |\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL | fn foo(d: impl Debug + 'static) {\n+   |                      +++++++++\n \n error: aborting due to previous error\n "}]}