{"sha": "db77072a254f23b8671b263555ebe3ad88215f1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNzcwNzJhMjU0ZjIzYjg2NzFiMjYzNTU1ZWJlM2FkODgyMTVmMWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-05T15:52:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-05T15:52:23Z"}, "message": "Rollup merge of #84808 - estebank:issue-84769, r=petrochenkov\n\nAccount for unsatisfied bounds in E0599\n\nFix #84769, follow up to #84499, #83667.", "tree": {"sha": "dece7ad984efca3cce7aa26409ee0c54f5f1e46c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dece7ad984efca3cce7aa26409ee0c54f5f1e46c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db77072a254f23b8671b263555ebe3ad88215f1e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgkr83CRBK7hj4Ov3rIwAAkBIIAFdvqS1ZzdQ/Gy2d/W90BhuZ\nxOgabGuZUyBRaC3k45K4CrO8gNRCC7l1GXNmwsEgIWZuYSXD1yHJjMbeA/fIrxSm\n+Nx7cYq5s1Alw6XSLziEFpbKArN5b3DDKAd/XUMnkO8PFl9xL/0a7vGLN4BZKVkv\nDujpm5rI5dL2mDqNp3GIsIu42aG/rugIgFz5el18uYoAO2SzpVRyr1SlBfUqA4d4\nrFL96D5yjw+rNMd7844MgdADUCfNtRChRQiUhwN87Ps6S8oEji7y6jiFcwExhV6i\nRkgvY0Cb2VeoTUpc0Z9ATozy53/lNloizes9lzw+iJUPyA1oUg1MIYP/0EeafUw=\n=LrMP\n-----END PGP SIGNATURE-----\n", "payload": "tree dece7ad984efca3cce7aa26409ee0c54f5f1e46c\nparent b1e152c7e50fc1ba7869d5c20dd241b0011a0836\nparent 1e89b583c3bcf1757f57250a089450165e886049\nauthor Ralf Jung <post@ralfj.de> 1620229943 +0200\ncommitter GitHub <noreply@github.com> 1620229943 +0200\n\nRollup merge of #84808 - estebank:issue-84769, r=petrochenkov\n\nAccount for unsatisfied bounds in E0599\n\nFix #84769, follow up to #84499, #83667.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db77072a254f23b8671b263555ebe3ad88215f1e", "html_url": "https://github.com/rust-lang/rust/commit/db77072a254f23b8671b263555ebe3ad88215f1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db77072a254f23b8671b263555ebe3ad88215f1e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1e152c7e50fc1ba7869d5c20dd241b0011a0836", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1e152c7e50fc1ba7869d5c20dd241b0011a0836", "html_url": "https://github.com/rust-lang/rust/commit/b1e152c7e50fc1ba7869d5c20dd241b0011a0836"}, {"sha": "1e89b583c3bcf1757f57250a089450165e886049", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e89b583c3bcf1757f57250a089450165e886049", "html_url": "https://github.com/rust-lang/rust/commit/1e89b583c3bcf1757f57250a089450165e886049"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "b2e4e7a981d201dfa1fe3c66132d97c0959bdf4a", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db77072a254f23b8671b263555ebe3ad88215f1e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db77072a254f23b8671b263555ebe3ad88215f1e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=db77072a254f23b8671b263555ebe3ad88215f1e", "patch": "@@ -579,6 +579,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 }\n \n                 let mut restrict_type_params = false;\n+                let mut unsatisfied_bounds = false;\n                 if !unsatisfied_predicates.is_empty() {\n                     let def_span = |def_id| {\n                         self.tcx.sess.source_map().guess_head_span(self.tcx.def_span(def_id))\n@@ -739,6 +740,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         err.note(&format!(\n                             \"the following trait bounds were not satisfied:\\n{bound_list}\"\n                         ));\n+                        unsatisfied_bounds = true;\n                     }\n                 }\n \n@@ -752,6 +754,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         source,\n                         out_of_scope_traits,\n                         &unsatisfied_predicates,\n+                        unsatisfied_bounds,\n                     );\n                 }\n \n@@ -984,9 +987,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         source: SelfSource<'tcx>,\n         valid_out_of_scope_traits: Vec<DefId>,\n         unsatisfied_predicates: &[(ty::Predicate<'tcx>, Option<ty::Predicate<'tcx>>)],\n+        unsatisfied_bounds: bool,\n     ) {\n         let mut alt_rcvr_sugg = false;\n-        if let SelfSource::MethodCall(rcvr) = source {\n+        if let (SelfSource::MethodCall(rcvr), false) = (source, unsatisfied_bounds) {\n             debug!(?span, ?item_name, ?rcvr_ty, ?rcvr);\n             let skippable = [\n                 self.tcx.lang_items().clone_trait(),"}, {"sha": "4dbadbdf98206d8edefb96c27465533e7295cc03", "filename": "src/test/ui/suggestions/import-trait-for-method-call.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/db77072a254f23b8671b263555ebe3ad88215f1e/src%2Ftest%2Fui%2Fsuggestions%2Fimport-trait-for-method-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db77072a254f23b8671b263555ebe3ad88215f1e/src%2Ftest%2Fui%2Fsuggestions%2Fimport-trait-for-method-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimport-trait-for-method-call.rs?ref=db77072a254f23b8671b263555ebe3ad88215f1e", "patch": "@@ -6,4 +6,11 @@ fn next_u64() -> u64 {\n     h.finish() //~ ERROR no method named `finish` found for struct `DefaultHasher`\n }\n \n-fn main() {}\n+trait Bar {}\n+impl Bar for String {}\n+\n+fn main() {\n+    let s = String::from(\"hey\");\n+    let x: &dyn Bar = &s;\n+    x.as_ref(); //~ ERROR the method `as_ref` exists for reference `&dyn Bar`, but its trait bounds\n+}"}, {"sha": "a2b9b9d14ab090f27d85d5ef0eb3c35ac4c7ccff", "filename": "src/test/ui/suggestions/import-trait-for-method-call.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/db77072a254f23b8671b263555ebe3ad88215f1e/src%2Ftest%2Fui%2Fsuggestions%2Fimport-trait-for-method-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db77072a254f23b8671b263555ebe3ad88215f1e/src%2Ftest%2Fui%2Fsuggestions%2Fimport-trait-for-method-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimport-trait-for-method-call.stderr?ref=db77072a254f23b8671b263555ebe3ad88215f1e", "patch": "@@ -15,6 +15,22 @@ help: the following trait is implemented but not in scope; perhaps add a `use` f\n LL | use std::hash::Hasher;\n    |\n \n-error: aborting due to previous error\n+error[E0599]: the method `as_ref` exists for reference `&dyn Bar`, but its trait bounds were not satisfied\n+  --> $DIR/import-trait-for-method-call.rs:15:7\n+   |\n+LL | trait Bar {}\n+   | --------- doesn't satisfy `dyn Bar: AsRef<_>`\n+...\n+LL |     x.as_ref();\n+   |       ^^^^^^ method cannot be called on `&dyn Bar` due to unsatisfied trait bounds\n+   |\n+   = note: the following trait bounds were not satisfied:\n+           `dyn Bar: AsRef<_>`\n+           which is required by `&dyn Bar: AsRef<_>`\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following trait defines an item `as_ref`, perhaps you need to implement it:\n+           candidate #1: `AsRef`\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0599`."}]}