{"sha": "690aeaf0872a2f980acb4d72616117726d9f78eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MGFlYWYwODcyYTJmOTgwYWNiNGQ3MjYxNjExNzcyNmQ5Zjc4ZWI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-08T01:15:58Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-10T15:39:36Z"}, "message": "Box Item::attributes\n\nThis reduces the size of Item from 136 to 48 bytes.", "tree": {"sha": "603a27896d5ac95a4b04c9de6146356624f41bfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/603a27896d5ac95a4b04c9de6146356624f41bfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/690aeaf0872a2f980acb4d72616117726d9f78eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/690aeaf0872a2f980acb4d72616117726d9f78eb", "html_url": "https://github.com/rust-lang/rust/commit/690aeaf0872a2f980acb4d72616117726d9f78eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/690aeaf0872a2f980acb4d72616117726d9f78eb/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd34606ddf02d1e9364e459b373a6ad665c3d8a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd34606ddf02d1e9364e459b373a6ad665c3d8a4", "html_url": "https://github.com/rust-lang/rust/commit/fd34606ddf02d1e9364e459b373a6ad665c3d8a4"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "ddf547084399b157acaf944f2f47b5acfef65ebf", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/690aeaf0872a2f980acb4d72616117726d9f78eb/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690aeaf0872a2f980acb4d72616117726d9f78eb/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=690aeaf0872a2f980acb4d72616117726d9f78eb", "patch": "@@ -121,7 +121,7 @@ crate fn try_inline(\n     };\n \n     let target_attrs = load_attrs(cx, did);\n-    let attrs = merge_attrs(cx, Some(parent_module), target_attrs, attrs_clone);\n+    let attrs = box merge_attrs(cx, Some(parent_module), target_attrs, attrs_clone);\n \n     cx.renderinfo.borrow_mut().inlined.insert(did);\n     let what_rustc_thinks = clean::Item::from_def_id_and_parts(did, Some(name), kind, cx);\n@@ -444,7 +444,7 @@ crate fn build_impl(\n         }),\n         cx,\n     );\n-    item.attrs = merge_attrs(cx, parent_module.into(), load_attrs(cx, did), attrs);\n+    item.attrs = box merge_attrs(cx, parent_module.into(), load_attrs(cx, did), attrs);\n     debug!(\"merged_attrs={:?}\", item.attrs);\n     ret.push(item);\n }\n@@ -466,7 +466,7 @@ fn build_module(cx: &DocContext<'_>, did: DefId, visited: &mut FxHashSet<DefId>)\n                 // Primitive types can't be inlined so generate an import instead.\n                 items.push(clean::Item {\n                     name: None,\n-                    attrs: clean::Attributes::default(),\n+                    attrs: box clean::Attributes::default(),\n                     source: clean::Span::dummy(),\n                     def_id: DefId::local(CRATE_DEF_INDEX),\n                     visibility: clean::Public,"}, {"sha": "ff3c45ccac7ca0867e382baaed41afb2842dbfa6", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/690aeaf0872a2f980acb4d72616117726d9f78eb/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690aeaf0872a2f980acb4d72616117726d9f78eb/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=690aeaf0872a2f980acb4d72616117726d9f78eb", "patch": "@@ -2169,7 +2169,7 @@ fn clean_extern_crate(\n     // FIXME: using `from_def_id_and_kind` breaks `rustdoc/masked` for some reason\n     vec![Item {\n         name: None,\n-        attrs: krate.attrs.clean(cx),\n+        attrs: box krate.attrs.clean(cx),\n         source: krate.span.clean(cx),\n         def_id: crate_def_id,\n         visibility: krate.vis.clean(cx),\n@@ -2251,7 +2251,7 @@ impl Clean<Vec<Item>> for doctree::Import<'_> {\n                 ) {\n                     items.push(Item {\n                         name: None,\n-                        attrs: self.attrs.clean(cx),\n+                        attrs: box self.attrs.clean(cx),\n                         source: self.span.clean(cx),\n                         def_id: cx.tcx.hir().local_def_id(self.id).to_def_id(),\n                         visibility: self.vis.clean(cx),\n@@ -2269,7 +2269,7 @@ impl Clean<Vec<Item>> for doctree::Import<'_> {\n \n         vec![Item {\n             name: None,\n-            attrs: self.attrs.clean(cx),\n+            attrs: box self.attrs.clean(cx),\n             source: self.span.clean(cx),\n             def_id: cx.tcx.hir().local_def_id(self.id).to_def_id(),\n             visibility: self.vis.clean(cx),"}, {"sha": "1f63fe5b9570833fb7888a455a1f658b9e07706e", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/690aeaf0872a2f980acb4d72616117726d9f78eb/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690aeaf0872a2f980acb4d72616117726d9f78eb/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=690aeaf0872a2f980acb4d72616117726d9f78eb", "patch": "@@ -82,15 +82,15 @@ crate struct Item {\n     crate source: Span,\n     /// Not everything has a name. E.g., impls\n     crate name: Option<Symbol>,\n-    crate attrs: Attributes,\n+    crate attrs: Box<Attributes>,\n     crate visibility: Visibility,\n     crate kind: Box<ItemKind>,\n     crate def_id: DefId,\n }\n \n // `Item` is used a lot. Make sure it doesn't unintentionally get bigger.\n #[cfg(target_arch = \"x86_64\")]\n-rustc_data_structures::static_assert_size!(Item, 136);\n+rustc_data_structures::static_assert_size!(Item, 48);\n \n impl fmt::Debug for Item {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n@@ -159,7 +159,7 @@ impl Item {\n             kind: box kind,\n             name,\n             source: source.clean(cx),\n-            attrs: cx.tcx.get_attrs(def_id).clean(cx),\n+            attrs: box cx.tcx.get_attrs(def_id).clean(cx),\n             visibility: cx.tcx.visibility(def_id).clean(cx),\n         }\n     }"}]}