{"sha": "8fa8021451162bdc253c1ee781bc28d94980e5bf", "node_id": "C_kwDOAAsO6NoAKDhmYTgwMjE0NTExNjJiZGMyNTNjMWVlNzgxYmMyOGQ5NDk4MGU1YmY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-13T20:25:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-13T20:25:35Z"}, "message": "Rollup merge of #101752 - GuillaumeGomez:improve-attr-docs, r=lqd\n\nImprove Attribute doc methods\n\nr? `@lqd`", "tree": {"sha": "f9e9cd51a5e2a8a6c8993f01d79bf2f792173835", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9e9cd51a5e2a8a6c8993f01d79bf2f792173835"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fa8021451162bdc253c1ee781bc28d94980e5bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjIOc/CRBK7hj4Ov3rIwAAecAIADcOesltzBEo8C+NPZKZUcmy\n3bESlfRmH7KRWPTxgD3sFgiHSkoPHpRk73jsn3b/ZVi+m/nbfuvlLXPSrt7Y8ims\nREgSH3wW9UTwXqAe0IRmQ0o2SkqNjVGPbfzJRLZ/vFdMtA5qhDGgOOmLvETTn34y\nbOQ/iLQqwST8uS/uhChc4hStMq5jNP+rEYOzfZV8rlUrKC5uQKsYR+1c/h8EMFCP\ngThsd1J2KpnLQlwkfZNESYdOQuTk60sKcHqh8kH8FgmxsGbxeRjrURfI2n6CIxA3\n/xmOF8kBZG8VSq0/GvYepst1kO6qfw63CdaBW5uDtQ4WF8N1awaZ0Nl++KHKxoQ=\n=q/jB\n-----END PGP SIGNATURE-----\n", "payload": "tree f9e9cd51a5e2a8a6c8993f01d79bf2f792173835\nparent f80b38b5689165cfcd013af1051e0914a608487b\nparent c4559ebfde5d6cae587d4f099d758c1d7c74998f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663100735 +0200\ncommitter GitHub <noreply@github.com> 1663100735 +0200\n\nRollup merge of #101752 - GuillaumeGomez:improve-attr-docs, r=lqd\n\nImprove Attribute doc methods\n\nr? `@lqd`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fa8021451162bdc253c1ee781bc28d94980e5bf", "html_url": "https://github.com/rust-lang/rust/commit/8fa8021451162bdc253c1ee781bc28d94980e5bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fa8021451162bdc253c1ee781bc28d94980e5bf/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f80b38b5689165cfcd013af1051e0914a608487b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f80b38b5689165cfcd013af1051e0914a608487b", "html_url": "https://github.com/rust-lang/rust/commit/f80b38b5689165cfcd013af1051e0914a608487b"}, {"sha": "c4559ebfde5d6cae587d4f099d758c1d7c74998f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4559ebfde5d6cae587d4f099d758c1d7c74998f", "html_url": "https://github.com/rust-lang/rust/commit/c4559ebfde5d6cae587d4f099d758c1d7c74998f"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "28198e69bff8f91f8c9abc30ca9afd5bc41da68e", "filename": "compiler/rustc_ast/src/attr/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8fa8021451162bdc253c1ee781bc28d94980e5bf/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fa8021451162bdc253c1ee781bc28d94980e5bf/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs?ref=8fa8021451162bdc253c1ee781bc28d94980e5bf", "patch": "@@ -232,14 +232,20 @@ impl AttrItem {\n \n impl Attribute {\n     /// Returns `true` if it is a sugared doc comment (`///` or `//!` for example).\n-    /// So `#[doc = \"doc\"]` will return `false`.\n+    /// So `#[doc = \"doc\"]` (which is a doc comment) and `#[doc(...)]` (which is not\n+    /// a doc comment) will return `false`.\n     pub fn is_doc_comment(&self) -> bool {\n         match self.kind {\n             AttrKind::Normal(..) => false,\n             AttrKind::DocComment(..) => true,\n         }\n     }\n \n+    /// Returns the documentation and its kind if this is a doc comment or a sugared doc comment.\n+    /// * `///doc` returns `Some((\"doc\", CommentKind::Line))`.\n+    /// * `/** doc */` returns `Some((\"doc\", CommentKind::Block))`.\n+    /// * `#[doc = \"doc\"]` returns `Some((\"doc\", CommentKind::Line))`.\n+    /// * `#[doc(...)]` returns `None`.\n     pub fn doc_str_and_comment_kind(&self) -> Option<(Symbol, CommentKind)> {\n         match self.kind {\n             AttrKind::DocComment(kind, data) => Some((data, kind)),\n@@ -252,6 +258,10 @@ impl Attribute {\n         }\n     }\n \n+    /// Returns the documentation if this is a doc comment or a sugared doc comment.\n+    /// * `///doc` returns `Some(\"doc\")`.\n+    /// * `#[doc = \"doc\"]` returns `Some(\"doc\")`.\n+    /// * `#[doc(...)]` returns `None`.\n     pub fn doc_str(&self) -> Option<Symbol> {\n         match self.kind {\n             AttrKind::DocComment(.., data) => Some(data),"}]}