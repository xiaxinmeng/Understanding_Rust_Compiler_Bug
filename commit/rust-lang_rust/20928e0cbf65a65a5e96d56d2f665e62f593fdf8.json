{"sha": "20928e0cbf65a65a5e96d56d2f665e62f593fdf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwOTI4ZTBjYmY2NWE2NWE1ZTk2ZDU2ZDJmNjY1ZTYyZjU5M2ZkZjg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-25T13:34:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-25T13:34:03Z"}, "message": "Rollup merge of #82321 - bugadani:ast3, r=varkor\n\nAST: Remove some unnecessary boxes", "tree": {"sha": "19c061ba1f371275838d21f6243ee3c295a61285", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19c061ba1f371275838d21f6243ee3c295a61285"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20928e0cbf65a65a5e96d56d2f665e62f593fdf8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgN6dLCRBK7hj4Ov3rIwAAdHIIADSbaqxtNlH1o8QLTuybaLeK\nT5deA42up+/inGNBHwBhyNGMuswW29oaOJ92RiVLT6yKPCp03g9ckrOPRPdWXJ76\nH9VzhS7txkw3GQNhIq55QQFfqetOOBDJGgIv6Tl3feRLZG9JTxdf6E1Dj4DPwfKg\n344Tjat8NdfE8CQ6hch5/AAKh8obhLCMos0VRl9bTZyNyNTdPxY3Mc5Si5oZX4nX\nnhDIRAQmSgVueRPUS203bZrg0MCTeYm8yoEID7UjAOU+Mdm4MfM1BAYmjgiG/7kI\nMDpm8FojO/wLQCxNwqzZegch7WNk0xWhjESWAMzKvS3X7STUPlEz2bOP8dxAmsY=\n=Dkwx\n-----END PGP SIGNATURE-----\n", "payload": "tree 19c061ba1f371275838d21f6243ee3c295a61285\nparent 05ed0814b93345d635abff47339d9f04c0087bc5\nparent 10f234240dd9e790cc222570d99d7a320fa88d8e\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614260043 +0100\ncommitter GitHub <noreply@github.com> 1614260043 +0100\n\nRollup merge of #82321 - bugadani:ast3, r=varkor\n\nAST: Remove some unnecessary boxes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20928e0cbf65a65a5e96d56d2f665e62f593fdf8", "html_url": "https://github.com/rust-lang/rust/commit/20928e0cbf65a65a5e96d56d2f665e62f593fdf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20928e0cbf65a65a5e96d56d2f665e62f593fdf8/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05ed0814b93345d635abff47339d9f04c0087bc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/05ed0814b93345d635abff47339d9f04c0087bc5", "html_url": "https://github.com/rust-lang/rust/commit/05ed0814b93345d635abff47339d9f04c0087bc5"}, {"sha": "10f234240dd9e790cc222570d99d7a320fa88d8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/10f234240dd9e790cc222570d99d7a320fa88d8e", "html_url": "https://github.com/rust-lang/rust/commit/10f234240dd9e790cc222570d99d7a320fa88d8e"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "16b4378e7f77f5958c1068ac2a3d1cc106fe985a", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20928e0cbf65a65a5e96d56d2f665e62f593fdf8/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20928e0cbf65a65a5e96d56d2f665e62f593fdf8/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=20928e0cbf65a65a5e96d56d2f665e62f593fdf8", "patch": "@@ -2695,7 +2695,7 @@ pub enum ItemKind {\n     /// A use declaration item (`use`).\n     ///\n     /// E.g., `use foo;`, `use foo::bar;` or `use foo::bar as FooBar;`.\n-    Use(P<UseTree>),\n+    Use(UseTree),\n     /// A static item (`static`).\n     ///\n     /// E.g., `static FOO: i32 = 42;` or `static FOO: &'static str = \"bar\";`.\n@@ -2719,7 +2719,7 @@ pub enum ItemKind {\n     /// E.g., `extern {}` or `extern \"C\" {}`.\n     ForeignMod(ForeignMod),\n     /// Module-level inline assembly (from `global_asm!()`).\n-    GlobalAsm(P<GlobalAsm>),\n+    GlobalAsm(GlobalAsm),\n     /// A type alias (`type`).\n     ///\n     /// E.g., `type Foo = Bar<u8>;`."}, {"sha": "76d874529270e179167c66ce5a78fc0d9765e568", "filename": "compiler/rustc_builtin_macros/src/global_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20928e0cbf65a65a5e96d56d2f665e62f593fdf8/compiler%2Frustc_builtin_macros%2Fsrc%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20928e0cbf65a65a5e96d56d2f665e62f593fdf8/compiler%2Frustc_builtin_macros%2Fsrc%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fglobal_asm.rs?ref=20928e0cbf65a65a5e96d56d2f665e62f593fdf8", "patch": "@@ -28,7 +28,7 @@ pub fn expand_global_asm<'cx>(\n             ident: Ident::invalid(),\n             attrs: Vec::new(),\n             id: ast::DUMMY_NODE_ID,\n-            kind: ast::ItemKind::GlobalAsm(P(global_asm)),\n+            kind: ast::ItemKind::GlobalAsm(global_asm),\n             vis: ast::Visibility {\n                 span: sp.shrink_to_lo(),\n                 kind: ast::VisibilityKind::Inherited,"}, {"sha": "f446e6be84ca4dbdf38e6ffa9916533b8b8d51ef", "filename": "compiler/rustc_builtin_macros/src/standard_library_imports.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20928e0cbf65a65a5e96d56d2f665e62f593fdf8/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20928e0cbf65a65a5e96d56d2f665e62f593fdf8/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs?ref=20928e0cbf65a65a5e96d56d2f665e62f593fdf8", "patch": "@@ -1,5 +1,4 @@\n use rustc_ast as ast;\n-use rustc_ast::ptr::P;\n use rustc_expand::base::{ExtCtxt, ResolverExpand};\n use rustc_expand::expand::ExpansionConfig;\n use rustc_session::Session;\n@@ -72,11 +71,11 @@ pub fn inject(\n         span,\n         Ident::invalid(),\n         vec![cx.attribute(cx.meta_word(span, sym::prelude_import))],\n-        ast::ItemKind::Use(P(ast::UseTree {\n+        ast::ItemKind::Use(ast::UseTree {\n             prefix: cx.path(span, import_path),\n             kind: ast::UseTreeKind::Glob,\n             span,\n-        })),\n+        }),\n     );\n \n     krate.items.insert(0, use_item);"}, {"sha": "9668a24bf8ab609f6802390fa59f4d0071b9340d", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20928e0cbf65a65a5e96d56d2f665e62f593fdf8/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20928e0cbf65a65a5e96d56d2f665e62f593fdf8/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=20928e0cbf65a65a5e96d56d2f665e62f593fdf8", "patch": "@@ -225,7 +225,7 @@ impl<'a> Parser<'a> {\n                 return Err(e);\n             }\n \n-            (Ident::invalid(), ItemKind::Use(P(tree)))\n+            (Ident::invalid(), ItemKind::Use(tree))\n         } else if self.check_fn_front_matter() {\n             // FUNCTION ITEM\n             let (ident, sig, generics, body) = self.parse_fn(attrs, req_name, lo)?;"}]}