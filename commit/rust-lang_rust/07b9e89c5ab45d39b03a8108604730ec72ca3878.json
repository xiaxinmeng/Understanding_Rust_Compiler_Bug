{"sha": "07b9e89c5ab45d39b03a8108604730ec72ca3878", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YjllODljNWFiNDVkMzliMDNhODEwODYwNDczMGVjNzJjYTM4Nzg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-13T14:03:27Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-13T14:03:27Z"}, "message": "Rollup merge of #32179 - srinivasreddy:remove_int_suffix, r=steveklabnik\n\nRemoved integer suffixes in libsyntax crate", "tree": {"sha": "72a4ffa95c1e2f61152f0af840e3ff300a5ae2b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72a4ffa95c1e2f61152f0af840e3ff300a5ae2b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07b9e89c5ab45d39b03a8108604730ec72ca3878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07b9e89c5ab45d39b03a8108604730ec72ca3878", "html_url": "https://github.com/rust-lang/rust/commit/07b9e89c5ab45d39b03a8108604730ec72ca3878", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07b9e89c5ab45d39b03a8108604730ec72ca3878/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "511cb3061907078dc4f2dd380b4fcc3356a77bf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/511cb3061907078dc4f2dd380b4fcc3356a77bf3", "html_url": "https://github.com/rust-lang/rust/commit/511cb3061907078dc4f2dd380b4fcc3356a77bf3"}, {"sha": "b308ed06846460150eb2a5f67c89ff4e63e7e665", "url": "https://api.github.com/repos/rust-lang/rust/commits/b308ed06846460150eb2a5f67c89ff4e63e7e665", "html_url": "https://github.com/rust-lang/rust/commit/b308ed06846460150eb2a5f67c89ff4e63e7e665"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "f7621b0131ad45d919bae6619518b18de8984e6c", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07b9e89c5ab45d39b03a8108604730ec72ca3878/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b9e89c5ab45d39b03a8108604730ec72ca3878/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=07b9e89c5ab45d39b03a8108604730ec72ca3878", "patch": "@@ -927,7 +927,7 @@ pub enum ExprKind {\n     Binary(BinOp, P<Expr>, P<Expr>),\n     /// A unary operation (For example: `!x`, `*x`)\n     Unary(UnOp, P<Expr>),\n-    /// A literal (For example: `1u8`, `\"foo\"`)\n+    /// A literal (For example: `1`, `\"foo\"`)\n     Lit(P<Lit>),\n     /// A cast (`foo as f64`)\n     Cast(P<Expr>, P<Ty>),\n@@ -1016,7 +1016,7 @@ pub enum ExprKind {\n \n     /// An array literal constructed from one repeated element.\n     ///\n-    /// For example, `[1u8; 5]`. The first expression is the element\n+    /// For example, `[1; 5]`. The first expression is the element\n     /// to be repeated; the second is the number of times to repeat it.\n     Repeat(P<Expr>, P<Expr>),\n \n@@ -1288,7 +1288,7 @@ pub enum LitKind {\n     Byte(u8),\n     /// A character literal (`'a'`)\n     Char(char),\n-    /// An integer literal (`1u8`)\n+    /// An integer literal (`1`)\n     Int(u64, LitIntType),\n     /// A float literal (`1f64` or `1E10f64`)\n     Float(InternedString, FloatTy),"}, {"sha": "c1d922ea665b11d3b15fa04b0cb09f1d915b46ea", "filename": "src/libsyntax/print/pp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07b9e89c5ab45d39b03a8108604730ec72ca3878/src%2Flibsyntax%2Fprint%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b9e89c5ab45d39b03a8108604730ec72ca3878/src%2Flibsyntax%2Fprint%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpp.rs?ref=07b9e89c5ab45d39b03a8108604730ec72ca3878", "patch": "@@ -168,8 +168,8 @@ pub fn mk_printer<'a>(out: Box<io::Write+'a>, linewidth: usize) -> Printer<'a> {\n     let n: usize = 3 * linewidth;\n     debug!(\"mk_printer {}\", linewidth);\n     let token = vec![Token::Eof; n];\n-    let size = vec![0_isize; n];\n-    let scan_stack = vec![0_usize; n];\n+    let size = vec![0; n];\n+    let scan_stack = vec![0; n];\n     Printer {\n         out: out,\n         buf_len: n,"}]}