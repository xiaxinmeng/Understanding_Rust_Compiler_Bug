{"sha": "8af42f695d493ed868098e3d1c02318f631998e4", "node_id": "C_kwDOAAsO6NoAKDhhZjQyZjY5NWQ0OTNlZDg2ODA5OGUzZDFjMDIzMThmNjMxOTk4ZTQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-03-21T12:01:47Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-03-27T18:52:47Z"}, "message": "Remove useless Clone bounds", "tree": {"sha": "ff3466bc66b2fa851bfa49c0e91247c390cb825a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff3466bc66b2fa851bfa49c0e91247c390cb825a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8af42f695d493ed868098e3d1c02318f631998e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8af42f695d493ed868098e3d1c02318f631998e4", "html_url": "https://github.com/rust-lang/rust/commit/8af42f695d493ed868098e3d1c02318f631998e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8af42f695d493ed868098e3d1c02318f631998e4/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "436afdf1feab1a928538e8360ab6bfd3e1fef2ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/436afdf1feab1a928538e8360ab6bfd3e1fef2ab", "html_url": "https://github.com/rust-lang/rust/commit/436afdf1feab1a928538e8360ab6bfd3e1fef2ab"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3539943ebefe2c50cd7d7743f360e24df01649f1", "filename": "src/tools/tidy/src/walk.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8af42f695d493ed868098e3d1c02318f631998e4/src%2Ftools%2Ftidy%2Fsrc%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8af42f695d493ed868098e3d1c02318f631998e4/src%2Ftools%2Ftidy%2Fsrc%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fwalk.rs?ref=8af42f695d493ed868098e3d1c02318f631998e4", "patch": "@@ -41,15 +41,15 @@ pub fn filter_not_rust(path: &Path) -> bool {\n \n pub fn walk(\n     path: &Path,\n-    skip: impl Clone + Send + Sync + 'static + Fn(&Path, bool) -> bool,\n+    skip: impl Send + Sync + 'static + Fn(&Path, bool) -> bool,\n     f: &mut dyn FnMut(&DirEntry, &str),\n ) {\n     walk_many(&[path], skip, f);\n }\n \n pub fn walk_many(\n     paths: &[&Path],\n-    skip: impl Clone + Send + Sync + 'static + Fn(&Path, bool) -> bool,\n+    skip: impl Send + Sync + 'static + Fn(&Path, bool) -> bool,\n     f: &mut dyn FnMut(&DirEntry, &str),\n ) {\n     let mut contents = Vec::new();"}]}