{"sha": "e998d61fe6a1407f73504a2fee16df2f9167a37c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OThkNjFmZTZhMTQwN2Y3MzUwNGEyZmVlMTZkZjJmOTE2N2EzN2M=", "commit": {"author": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-10-18T09:36:37Z"}, "committer": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-11-17T16:28:37Z"}, "message": "Downgrade applicability to MaybeIncorrect", "tree": {"sha": "748ae31caa1dd206870f638622f1021c5ed081c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/748ae31caa1dd206870f638622f1021c5ed081c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e998d61fe6a1407f73504a2fee16df2f9167a37c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e998d61fe6a1407f73504a2fee16df2f9167a37c", "html_url": "https://github.com/rust-lang/rust/commit/e998d61fe6a1407f73504a2fee16df2f9167a37c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e998d61fe6a1407f73504a2fee16df2f9167a37c/comments", "author": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30632fb8e6e4d6b998f2af7da93931ddb9f5de03", "url": "https://api.github.com/repos/rust-lang/rust/commits/30632fb8e6e4d6b998f2af7da93931ddb9f5de03", "html_url": "https://github.com/rust-lang/rust/commit/30632fb8e6e4d6b998f2af7da93931ddb9f5de03"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6434b3033dd8e1d8f2e1f8cfcb32f2c6d92c0b0f", "filename": "clippy_lints/src/unnecessary_wrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e998d61fe6a1407f73504a2fee16df2f9167a37c/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e998d61fe6a1407f73504a2fee16df2f9167a37c/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wrap.rs?ref=e998d61fe6a1407f73504a2fee16df2f9167a37c", "patch": "@@ -122,7 +122,7 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWrap {\n                             fn_decl.output.span(),\n                             format!(\"remove `{}` from the return type...\", return_type).as_str(),\n                             inner_ty,\n-                            Applicability::MachineApplicable,\n+                            Applicability::MaybeIncorrect,\n                         );\n                     });\n                     diag.multipart_suggestion("}]}