{"sha": "79739d96f79b53a17bd79ab811efd5adfddf3a26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NzM5ZDk2Zjc5YjUzYTE3YmQ3OWFiODExZWZkNWFkZmRkZjNhMjY=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-13T11:51:11Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-13T12:18:55Z"}, "message": "extra::test: handle slow benchmarks more gracefully.\n\nThis makes sure we always run benchmarks even if they are predicted to\ntake a long time, so that we have some non-zero time to display\n(although the error bars may be huge for particularly slow benchmarks).\n\nFixes #9532.", "tree": {"sha": "fd26ffafa731ad5659aad0b3f4ad2df9b6375396", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd26ffafa731ad5659aad0b3f4ad2df9b6375396"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79739d96f79b53a17bd79ab811efd5adfddf3a26", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79739d96f79b53a17bd79ab811efd5adfddf3a26", "html_url": "https://github.com/rust-lang/rust/commit/79739d96f79b53a17bd79ab811efd5adfddf3a26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79739d96f79b53a17bd79ab811efd5adfddf3a26/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bbef13702561b955bc1fd71608502d3a10a4acc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bbef13702561b955bc1fd71608502d3a10a4acc", "html_url": "https://github.com/rust-lang/rust/commit/9bbef13702561b955bc1fd71608502d3a10a4acc"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "c2b4ff05d5d03fdc6be9db78aad23c0d13d7379e", "filename": "src/libextra/test.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/79739d96f79b53a17bd79ab811efd5adfddf3a26/src%2Flibextra%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79739d96f79b53a17bd79ab811efd5adfddf3a26/src%2Flibextra%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftest.rs?ref=79739d96f79b53a17bd79ab811efd5adfddf3a26", "patch": "@@ -1110,6 +1110,15 @@ impl BenchHarness {\n         } else {\n             n = 1_000_000 / self.ns_per_iter().max(&1);\n         }\n+        // if the first run took more than 1ms we don't want to just\n+        // be left doing 0 iterations on every loop. The unfortunate\n+        // side effect of not being able to do as many runs is\n+        // automatically handled by the statistical analysis below\n+        // (i.e. larger error bars).\n+        if n == 0 { n = 1; }\n+\n+        debug!(\"Initial run took {} ns, iter count that takes 1ms estimated as {}\",\n+               self.ns_per_iter(), n);\n \n         let mut total_run = 0;\n         let samples : &mut [f64] = [0.0_f64, ..50];\n@@ -1141,7 +1150,7 @@ impl BenchHarness {\n             let now = precise_time_ns();\n             let loop_run = now - loop_start;\n \n-            // If we've run for 100ms an seem to have converged to a\n+            // If we've run for 100ms and seem to have converged to a\n             // stable median.\n             if loop_run > 100_000_000 &&\n                 summ.median_abs_dev_pct < 1.0 &&"}]}