{"sha": "23a99f4e0e47025e949c6a68796afdf3a0d441ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzYTk5ZjRlMGU0NzAyNWU5NDljNmE2ODc5NmFmZGYzYTBkNDQxYWQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-10T12:08:20Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-10T14:43:57Z"}, "message": "Rollup merge of #44775 - MaloJaffre:debug-struct, r=sfackler\n\nRefactor to use `debug_struct` in several Debug impls\n\nAlso use `pad` and derive `Debug` for `Edge`.\n\nFixes #44771.", "tree": {"sha": "744eb8e8d28bdc35beda4baa037c8e547f02a7ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/744eb8e8d28bdc35beda4baa037c8e547f02a7ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23a99f4e0e47025e949c6a68796afdf3a0d441ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlnc3K0ACgkQ/vbIBR0O\nATxwGA//fJ6OHmQQXlaSLLdlZ7JrNDreY0XvJxYbhvolxgOF9YdIGbTPfUBBS9XI\n3OsdDh6MxrVXaLniCx7dh+VPgImQ1kcmdcywoek4pyU39ZvT9jIBNfGGwuPP+pfF\nZvRS0dfj8TejFaJeQf06RFJa9itSCFmFHhxWzbyhTayZLbtM+JttgTKR4iBG96pB\na3roZeZq9i6WKnBAl5ytYOziEioBzbZnjRbxrZckbZEvPpIlErsb3bFpvz+wYJHa\nZzfaYObCxxOGOUs5E20Z6qRzWIllWB7R/jlAqi7x5EXXKIUD+FrBkzVz6LgaLFn1\no+/ROOHhYVcqAPhZaT3xKH6shOSgGbqY80E4iOhZXRQKNnhwjaiUtC1jghNhQtpI\nwHM/s990J2lSaHq6qaWpG9OkNmz4yTjVZYQLvlcGvS2zewzOZi8aL3HDWcKs44Qu\nmejPMP3FbiOy6bS+SI14XoPXyPz50NF5XQGkElN5Y5IfaxW19Mu8Z/IJW4qNt6YG\nuAHB3qyDb7J+xkb9koAv5ohDSkIDMMxH+07c+qkl5nyBbOWWRL8ya16oaa1DYzgf\nphEGTChQl6JNe3TrIf5QorZb/zJQP5iEsAPoPasBkPjgNLumHKOcYgbD1kNM9CA2\njl/LZDkN0w6GNw0WGsXqRBosjhaU3g9FV3eR2Xe/lTicMzkNlgk=\n=5rc1\n-----END PGP SIGNATURE-----", "payload": "tree 744eb8e8d28bdc35beda4baa037c8e547f02a7ee\nparent 0217315bf23edee385a7042b5a23b3e7e376820c\nparent 679457ad2a0f33aed6b206107afedcccf5124374\nauthor kennytm <kennytm@gmail.com> 1507637300 +0800\ncommitter kennytm <kennytm@gmail.com> 1507646637 +0800\n\nRollup merge of #44775 - MaloJaffre:debug-struct, r=sfackler\n\nRefactor to use `debug_struct` in several Debug impls\n\nAlso use `pad` and derive `Debug` for `Edge`.\n\nFixes #44771.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23a99f4e0e47025e949c6a68796afdf3a0d441ad", "html_url": "https://github.com/rust-lang/rust/commit/23a99f4e0e47025e949c6a68796afdf3a0d441ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23a99f4e0e47025e949c6a68796afdf3a0d441ad/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0217315bf23edee385a7042b5a23b3e7e376820c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0217315bf23edee385a7042b5a23b3e7e376820c", "html_url": "https://github.com/rust-lang/rust/commit/0217315bf23edee385a7042b5a23b3e7e376820c"}, {"sha": "679457ad2a0f33aed6b206107afedcccf5124374", "url": "https://api.github.com/repos/rust-lang/rust/commits/679457ad2a0f33aed6b206107afedcccf5124374", "html_url": "https://github.com/rust-lang/rust/commit/679457ad2a0f33aed6b206107afedcccf5124374"}], "stats": {"total": 103, "additions": 42, "deletions": 61}, "files": [{"sha": "56d5f5ffa3f6c6abe2756878357433892b529e70", "filename": "src/librustc_data_structures/graph/mod.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs?ref=23a99f4e0e47025e949c6a68796afdf3a0d441ad", "patch": "@@ -31,7 +31,7 @@\n //! be indexed by the direction (see the type `Direction`).\n \n use bitvec::BitVector;\n-use std::fmt::{Formatter, Error, Debug};\n+use std::fmt::Debug;\n use std::usize;\n use snapshot_vec::{SnapshotVec, SnapshotVecDelegate};\n \n@@ -48,6 +48,7 @@ pub struct Node<N> {\n     pub data: N,\n }\n \n+#[derive(Debug)]\n pub struct Edge<E> {\n     next_edge: [EdgeIndex; 2], // see module comment\n     source: NodeIndex,\n@@ -69,18 +70,6 @@ impl<N> SnapshotVecDelegate for Edge<N> {\n     fn reverse(_: &mut Vec<Edge<N>>, _: ()) {}\n }\n \n-impl<E: Debug> Debug for Edge<E> {\n-    fn fmt(&self, f: &mut Formatter) -> Result<(), Error> {\n-        write!(f,\n-               \"Edge {{ next_edge: [{:?}, {:?}], source: {:?}, target: {:?}, data: {:?} }}\",\n-               self.next_edge[0],\n-               self.next_edge[1],\n-               self.source,\n-               self.target,\n-               self.data)\n-    }\n-}\n-\n #[derive(Copy, Clone, PartialEq, Eq, Debug, Hash)]\n pub struct NodeIndex(pub usize);\n "}, {"sha": "ce1a07b31b2ed0b01acdf897f6d68af2a34c45d3", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=23a99f4e0e47025e949c6a68796afdf3a0d441ad", "patch": "@@ -919,7 +919,7 @@ impl<T> Drop for Sender<T> {\n #[stable(feature = \"mpsc_debug\", since = \"1.8.0\")]\n impl<T> fmt::Debug for Sender<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"Sender {{ .. }}\")\n+        f.debug_struct(\"Sender\").finish()\n     }\n }\n \n@@ -1049,7 +1049,7 @@ impl<T> Drop for SyncSender<T> {\n #[stable(feature = \"mpsc_debug\", since = \"1.8.0\")]\n impl<T> fmt::Debug for SyncSender<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"SyncSender {{ .. }}\")\n+        f.debug_struct(\"SyncSender\").finish()\n     }\n }\n \n@@ -1551,7 +1551,7 @@ impl<T> Drop for Receiver<T> {\n #[stable(feature = \"mpsc_debug\", since = \"1.8.0\")]\n impl<T> fmt::Debug for Receiver<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"Receiver {{ .. }}\")\n+        f.debug_struct(\"Receiver\").finish()\n     }\n }\n \n@@ -3009,22 +3009,4 @@ mod sync_tests {\n             repro()\n         }\n     }\n-\n-    #[test]\n-    fn fmt_debug_sender() {\n-        let (tx, _) = channel::<i32>();\n-        assert_eq!(format!(\"{:?}\", tx), \"Sender { .. }\");\n-    }\n-\n-    #[test]\n-    fn fmt_debug_recv() {\n-        let (_, rx) = channel::<i32>();\n-        assert_eq!(format!(\"{:?}\", rx), \"Receiver { .. }\");\n-    }\n-\n-    #[test]\n-    fn fmt_debug_sync_sender() {\n-        let (tx, _) = sync_channel::<i32>(1);\n-        assert_eq!(format!(\"{:?}\", tx), \"SyncSender { .. }\");\n-    }\n }"}, {"sha": "a9f3cea243f366c61e0abf759c474c95a00581ae", "filename": "src/libstd/sync/mpsc/select.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs?ref=23a99f4e0e47025e949c6a68796afdf3a0d441ad", "patch": "@@ -354,13 +354,13 @@ impl Iterator for Packets {\n \n impl fmt::Debug for Select {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"Select {{ .. }}\")\n+        f.debug_struct(\"Select\").finish()\n     }\n }\n \n impl<'rx, T:Send+'rx> fmt::Debug for Handle<'rx, T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"Handle {{ .. }}\")\n+        f.debug_struct(\"Handle\").finish()\n     }\n }\n \n@@ -774,18 +774,4 @@ mod tests {\n             }\n         }\n     }\n-\n-    #[test]\n-    fn fmt_debug_select() {\n-        let sel = Select::new();\n-        assert_eq!(format!(\"{:?}\", sel), \"Select { .. }\");\n-    }\n-\n-    #[test]\n-    fn fmt_debug_handle() {\n-        let (_, rx) = channel::<i32>();\n-        let sel = Select::new();\n-        let handle = sel.handle(&rx);\n-        assert_eq!(format!(\"{:?}\", handle), \"Handle { .. }\");\n-    }\n }"}, {"sha": "eb507858b92b23f5bd8dd76f88add49e76a4650d", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=23a99f4e0e47025e949c6a68796afdf3a0d441ad", "patch": "@@ -394,11 +394,18 @@ impl<T: ?Sized + Default> Default for Mutex<T> {\n impl<T: ?Sized + fmt::Debug> fmt::Debug for Mutex<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         match self.try_lock() {\n-            Ok(guard) => write!(f, \"Mutex {{ data: {:?} }}\", &*guard),\n+            Ok(guard) => f.debug_struct(\"Mutex\").field(\"data\", &&*guard).finish(),\n             Err(TryLockError::Poisoned(err)) => {\n-                write!(f, \"Mutex {{ data: Poisoned({:?}) }}\", &**err.get_ref())\n+                f.debug_struct(\"Mutex\").field(\"data\", &&**err.get_ref()).finish()\n             },\n-            Err(TryLockError::WouldBlock) => write!(f, \"Mutex {{ <locked> }}\")\n+            Err(TryLockError::WouldBlock) => {\n+                struct LockedPlaceholder;\n+                impl fmt::Debug for LockedPlaceholder {\n+                    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { f.write_str(\"<locked>\") }\n+                }\n+\n+                f.debug_struct(\"Mutex\").field(\"data\", &LockedPlaceholder).finish()\n+            }\n         }\n     }\n }"}, {"sha": "5c49d6b58459ccb76988a2680372ee7ae826602a", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=23a99f4e0e47025e949c6a68796afdf3a0d441ad", "patch": "@@ -428,11 +428,18 @@ unsafe impl<#[may_dangle] T: ?Sized> Drop for RwLock<T> {\n impl<T: ?Sized + fmt::Debug> fmt::Debug for RwLock<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         match self.try_read() {\n-            Ok(guard) => write!(f, \"RwLock {{ data: {:?} }}\", &*guard),\n+            Ok(guard) => f.debug_struct(\"RwLock\").field(\"data\", &&*guard).finish(),\n             Err(TryLockError::Poisoned(err)) => {\n-                write!(f, \"RwLock {{ data: Poisoned({:?}) }}\", &**err.get_ref())\n+                f.debug_struct(\"RwLock\").field(\"data\", &&**err.get_ref()).finish()\n             },\n-            Err(TryLockError::WouldBlock) => write!(f, \"RwLock {{ <locked> }}\")\n+            Err(TryLockError::WouldBlock) => {\n+                struct LockedPlaceholder;\n+                impl fmt::Debug for LockedPlaceholder {\n+                    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { f.write_str(\"<locked>\") }\n+                }\n+\n+                f.debug_struct(\"RwLock\").field(\"data\", &LockedPlaceholder).finish()\n+            }\n         }\n     }\n }"}, {"sha": "ce43ec6d9abf585f70b910403824a59555e70762", "filename": "src/libstd/sys_common/remutex.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsys_common%2Fremutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibstd%2Fsys_common%2Fremutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fremutex.rs?ref=23a99f4e0e47025e949c6a68796afdf3a0d441ad", "patch": "@@ -116,11 +116,18 @@ impl<T> Drop for ReentrantMutex<T> {\n impl<T: fmt::Debug + 'static> fmt::Debug for ReentrantMutex<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         match self.try_lock() {\n-            Ok(guard) => write!(f, \"ReentrantMutex {{ data: {:?} }}\", &*guard),\n+            Ok(guard) => f.debug_struct(\"ReentrantMutex\").field(\"data\", &*guard).finish(),\n             Err(TryLockError::Poisoned(err)) => {\n-                write!(f, \"ReentrantMutex {{ data: Poisoned({:?}) }}\", &**err.get_ref())\n+                f.debug_struct(\"ReentrantMutex\").field(\"data\", &**err.get_ref()).finish()\n             },\n-            Err(TryLockError::WouldBlock) => write!(f, \"ReentrantMutex {{ <locked> }}\")\n+            Err(TryLockError::WouldBlock) => {\n+                struct LockedPlaceholder;\n+                impl fmt::Debug for LockedPlaceholder {\n+                    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result { f.write_str(\"<locked>\") }\n+                }\n+\n+                f.debug_struct(\"ReentrantMutex\").field(\"data\", &LockedPlaceholder).finish()\n+            }\n         }\n     }\n }"}, {"sha": "d30d79ece15c73cf62d566b10cc74dff87d18e11", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23a99f4e0e47025e949c6a68796afdf3a0d441ad/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=23a99f4e0e47025e949c6a68796afdf3a0d441ad", "patch": "@@ -339,8 +339,11 @@ impl serialize::UseSpecializedDecodable for Span {\n }\n \n fn default_span_debug(span: Span, f: &mut fmt::Formatter) -> fmt::Result {\n-    write!(f, \"Span {{ lo: {:?}, hi: {:?}, ctxt: {:?} }}\",\n-           span.lo(), span.hi(), span.ctxt())\n+    f.debug_struct(\"Span\")\n+        .field(\"lo\", &span.lo())\n+        .field(\"hi\", &span.hi())\n+        .field(\"ctxt\", &span.ctxt())\n+        .finish()\n }\n \n impl fmt::Debug for Span {"}]}