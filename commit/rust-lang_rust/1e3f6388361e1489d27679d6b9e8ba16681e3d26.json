{"sha": "1e3f6388361e1489d27679d6b9e8ba16681e3d26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlM2Y2Mzg4MzYxZTE0ODlkMjc2NzlkNmI5ZThiYTE2NjgxZTNkMjY=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-26T19:31:45Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-27T23:28:00Z"}, "message": "Make LLVM worker channel thread-safe", "tree": {"sha": "eaed568270cc4e047ec338187293c38339177ca4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eaed568270cc4e047ec338187293c38339177ca4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e3f6388361e1489d27679d6b9e8ba16681e3d26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e3f6388361e1489d27679d6b9e8ba16681e3d26", "html_url": "https://github.com/rust-lang/rust/commit/1e3f6388361e1489d27679d6b9e8ba16681e3d26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e3f6388361e1489d27679d6b9e8ba16681e3d26/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3773f4dc3f477749e9df7c7aa23b32c08f69ff81", "url": "https://api.github.com/repos/rust-lang/rust/commits/3773f4dc3f477749e9df7c7aa23b32c08f69ff81", "html_url": "https://github.com/rust-lang/rust/commit/3773f4dc3f477749e9df7c7aa23b32c08f69ff81"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "fa47315f41dfbd933de728dfafba7b22a8af36f9", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e3f6388361e1489d27679d6b9e8ba16681e3d26/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e3f6388361e1489d27679d6b9e8ba16681e3d26/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=1e3f6388361e1489d27679d6b9e8ba16681e3d26", "patch": "@@ -909,7 +909,7 @@ pub struct GlobalCtxt<'tcx> {\n     /// This is intended to only get used during the trans phase of the compiler\n     /// when satisfying the query for a particular codegen unit. Internally in\n     /// the query it'll send data along this channel to get processed later.\n-    pub tx_to_llvm_workers: mpsc::Sender<Box<dyn Any + Send>>,\n+    pub tx_to_llvm_workers: Lock<mpsc::Sender<Box<dyn Any + Send>>>,\n \n     output_filenames: Arc<OutputFilenames>,\n }\n@@ -1283,7 +1283,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             stability_interner: Lock::new(FxHashSet()),\n             interpret_interner: Default::default(),\n             all_traits: RefCell::new(None),\n-            tx_to_llvm_workers: tx,\n+            tx_to_llvm_workers: Lock::new(tx),\n             output_filenames: Arc::new(output_filenames.clone()),\n        }, f)\n     }"}, {"sha": "6e7ebd4846e396cdb2a6fc3a41e1b3c4d4ffe942", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1e3f6388361e1489d27679d6b9e8ba16681e3d26/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e3f6388361e1489d27679d6b9e8ba16681e3d26/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=1e3f6388361e1489d27679d6b9e8ba16681e3d26", "patch": "@@ -1035,7 +1035,7 @@ pub fn start_async_translation(tcx: TyCtxt,\n         crate_info,\n \n         time_graph,\n-        coordinator_send: tcx.tx_to_llvm_workers.clone(),\n+        coordinator_send: tcx.tx_to_llvm_workers.lock().clone(),\n         trans_worker_receive,\n         shared_emitter_main,\n         future: coordinator_thread,\n@@ -1428,7 +1428,7 @@ fn start_executing_work(tcx: TyCtxt,\n                         metadata_config: Arc<ModuleConfig>,\n                         allocator_config: Arc<ModuleConfig>)\n                         -> thread::JoinHandle<Result<CompiledModules, ()>> {\n-    let coordinator_send = tcx.tx_to_llvm_workers.clone();\n+    let coordinator_send = tcx.tx_to_llvm_workers.lock().clone();\n     let sess = tcx.sess;\n \n     // Compute the set of symbols we need to retain when doing LTO (if we need to)\n@@ -2340,7 +2340,7 @@ pub(crate) fn submit_translated_module_to_llvm(tcx: TyCtxt,\n                                                mtrans: ModuleTranslation,\n                                                cost: u64) {\n     let llvm_work_item = WorkItem::Optimize(mtrans);\n-    drop(tcx.tx_to_llvm_workers.send(Box::new(Message::TranslationDone {\n+    drop(tcx.tx_to_llvm_workers.lock().send(Box::new(Message::TranslationDone {\n         llvm_work_item,\n         cost,\n     })));"}]}