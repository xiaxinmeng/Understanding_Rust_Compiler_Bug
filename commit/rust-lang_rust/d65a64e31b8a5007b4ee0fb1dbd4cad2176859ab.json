{"sha": "d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NWE2NGUzMWI4YTUwMDdiNGVlMGZiMWRiZDRjYWQyMTc2ODU5YWI=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-08-23T20:13:28Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-08-24T19:40:57Z"}, "message": "change the default linker of the ARM Cortex-M targets\n\nto rust-lld so users won't need an external linker to build programs", "tree": {"sha": "18d2d104dced4d09a349e7e0927fba44f5c63d15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18d2d104dced4d09a349e7e0927fba44f5c63d15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab", "html_url": "https://github.com/rust-lang/rust/commit/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "727eabd68143e968d8826ee29b8ea7792d29fa96", "url": "https://api.github.com/repos/rust-lang/rust/commits/727eabd68143e968d8826ee29b8ea7792d29fa96", "html_url": "https://github.com/rust-lang/rust/commit/727eabd68143e968d8826ee29b8ea7792d29fa96"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "4c9a4764eff4097d47067c8aca8a71dff46cd82b", "filename": "src/librustc_target/spec/thumb_base.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs?ref=d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab", "patch": "@@ -42,9 +42,8 @@ pub fn opts() -> TargetOptions {\n     // See rust-lang/rfcs#1645 for a discussion about these defaults\n     TargetOptions {\n         executables: true,\n-        // In 99%+ of cases, we want to use the `arm-none-eabi-gcc` compiler (there aren't many\n-        // options around)\n-        linker: Some(\"arm-none-eabi-gcc\".to_string()),\n+        // In most cases, LLD is good enough\n+        linker: Some(\"rust-lld\".to_string()),\n         // Because these devices have very little resources having an unwinder is too onerous so we\n         // default to \"abort\" because the \"unwind\" strategy is very rare.\n         panic_strategy: PanicStrategy::Abort,"}, {"sha": "99034277abd58eba6071958f5dc7d0e2732a462c", "filename": "src/librustc_target/spec/thumbv6m_none_eabi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumbv6m_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumbv6m_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv6m_none_eabi.rs?ref=d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab", "patch": "@@ -10,7 +10,7 @@\n \n // Targets the Cortex-M0, Cortex-M0+ and Cortex-M1 processors (ARMv6-M architecture)\n \n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {\n@@ -23,7 +23,7 @@ pub fn target() -> TargetResult {\n         target_os: \"none\".to_string(),\n         target_env: String::new(),\n         target_vendor: String::new(),\n-        linker_flavor: LinkerFlavor::Gcc,\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n \n         options: TargetOptions {\n             // The ARMv6-M architecture doesn't support unaligned loads/stores so we disable them"}, {"sha": "17fad29dd29685c3d7a83babe6a42a16d36c5ab3", "filename": "src/librustc_target/spec/thumbv7em_none_eabi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabi.rs?ref=d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab", "patch": "@@ -19,7 +19,7 @@\n // To opt-in to hardware accelerated floating point operations, you can use, for example,\n // `-C target-feature=+vfp4` or `-C target-cpu=cortex-m4`.\n \n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {\n@@ -32,7 +32,7 @@ pub fn target() -> TargetResult {\n         target_os: \"none\".to_string(),\n         target_env: String::new(),\n         target_vendor: String::new(),\n-        linker_flavor: LinkerFlavor::Gcc,\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n \n         options: TargetOptions {\n             max_atomic_width: Some(32),"}, {"sha": "02ede112ed3c649d14decc5bf58c12ad740c6068", "filename": "src/librustc_target/spec/thumbv7em_none_eabihf.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabihf.rs?ref=d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab", "patch": "@@ -18,7 +18,7 @@\n //\n // To opt into double precision hardware support, use the `-C target-feature=-fp-only-sp` flag.\n \n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {\n@@ -31,7 +31,7 @@ pub fn target() -> TargetResult {\n         target_os: \"none\".to_string(),\n         target_env: String::new(),\n         target_vendor: String::new(),\n-        linker_flavor: LinkerFlavor::Gcc,\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n \n         options: TargetOptions {\n             // `+vfp4` is the lowest common denominator between the Cortex-M4 (vfp4-16) and the"}, {"sha": "f4fffade16351c7de1a8bc0c12e9bc34029deea9", "filename": "src/librustc_target/spec/thumbv7m_none_eabi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumbv7m_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab/src%2Flibrustc_target%2Fspec%2Fthumbv7m_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7m_none_eabi.rs?ref=d65a64e31b8a5007b4ee0fb1dbd4cad2176859ab", "patch": "@@ -10,7 +10,7 @@\n \n // Targets the Cortex-M3 processor (ARMv7-M)\n \n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {\n@@ -23,7 +23,7 @@ pub fn target() -> TargetResult {\n         target_os: \"none\".to_string(),\n         target_env: String::new(),\n         target_vendor: String::new(),\n-        linker_flavor: LinkerFlavor::Gcc,\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n \n         options: TargetOptions {\n             max_atomic_width: Some(32),"}]}