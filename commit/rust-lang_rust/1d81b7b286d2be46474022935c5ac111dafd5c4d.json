{"sha": "1d81b7b286d2be46474022935c5ac111dafd5c4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkODFiN2IyODZkMmJlNDY0NzQwMjI5MzVjNWFjMTExZGFmZDVjNGQ=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-19T15:29:38Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-19T15:50:50Z"}, "message": "iterator: add a chain adaptor", "tree": {"sha": "7b90208552ddf05cb5475afc4cc5de98eca5f522", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b90208552ddf05cb5475afc4cc5de98eca5f522"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d81b7b286d2be46474022935c5ac111dafd5c4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d81b7b286d2be46474022935c5ac111dafd5c4d", "html_url": "https://github.com/rust-lang/rust/commit/1d81b7b286d2be46474022935c5ac111dafd5c4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d81b7b286d2be46474022935c5ac111dafd5c4d/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90313b789c1d057dcc4aeed0374359f4927214c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/90313b789c1d057dcc4aeed0374359f4927214c5", "html_url": "https://github.com/rust-lang/rust/commit/90313b789c1d057dcc4aeed0374359f4927214c5"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "e233eb7feed6734bbd60bd71ca2c58b44054eb02", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1d81b7b286d2be46474022935c5ac111dafd5c4d/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d81b7b286d2be46474022935c5ac111dafd5c4d/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=1d81b7b286d2be46474022935c5ac111dafd5c4d", "patch": "@@ -18,6 +18,7 @@ pub trait Iterator<A> {\n }\n \n pub trait IteratorUtil<A> {\n+    fn chain(self, other: Self) -> ChainIterator<Self>;\n     fn zip<B, U: Iterator<B>>(self, other: U) -> ZipIterator<Self, U>;\n     // FIXME: #5898: should be called map\n     fn transform<'r, B>(self, f: &'r fn(A) -> B) -> MapIterator<'r, A, B, Self>;\n@@ -31,6 +32,11 @@ pub trait IteratorUtil<A> {\n }\n \n impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n+    #[inline(always)]\n+    fn chain(self, other: T) -> ChainIterator<T> {\n+        ChainIterator{a: self, b: other, flag: false}\n+    }\n+\n     #[inline(always)]\n     fn zip<B, U: Iterator<B>>(self, other: U) -> ZipIterator<T, U> {\n         ZipIterator{a: self, b: other}\n@@ -86,6 +92,28 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n     }\n }\n \n+pub struct ChainIterator<T> {\n+    priv a: T,\n+    priv b: T,\n+    priv flag: bool\n+}\n+\n+impl<A, T: Iterator<A>> Iterator<A> for ChainIterator<T> {\n+    #[inline]\n+    fn next(&mut self) -> Option<A> {\n+        if self.flag {\n+            self.b.next()\n+        } else {\n+            match self.a.next() {\n+                Some(x) => return Some(x),\n+                _ => ()\n+            }\n+            self.flag = true;\n+            self.b.next()\n+        }\n+    }\n+}\n+\n pub struct ZipIterator<T, U> {\n     priv a: T,\n     priv b: U\n@@ -288,6 +316,20 @@ mod tests {\n     use super::*;\n     use prelude::*;\n \n+    #[test]\n+    fn test_iterator_chain() {\n+        let xs = [0u, 1, 2, 3, 4, 5];\n+        let ys = [30, 40, 50, 60];\n+        let expected = [0, 1, 2, 3, 4, 5, 30, 40, 50, 60];\n+        let mut it = xs.iter().chain(ys.iter());\n+        let mut i = 0;\n+        for it.advance |&x: &uint| {\n+            assert_eq!(x, expected[i]);\n+            i += 1;\n+        }\n+        assert_eq!(i, expected.len());\n+    }\n+\n     #[test]\n     fn test_iterator_enumerate() {\n         let xs = [0u, 1, 2, 3, 4, 5];"}]}