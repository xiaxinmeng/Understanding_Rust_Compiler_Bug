{"sha": "10a243ea55565a0dd1de52f8f802c3e3a7bfef54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYTI0M2VhNTU1NjVhMGRkMWRlNTJmOGY4MDJjM2UzYTdiZmVmNTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-13T12:34:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-13T12:34:12Z"}, "message": "Merge #8507\n\n8507: internal: follow test style guide in typing.rs r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "f7ef8597e4ba1bfbcd7f0e44e302b6452010a0e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7ef8597e4ba1bfbcd7f0e44e302b6452010a0e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10a243ea55565a0dd1de52f8f802c3e3a7bfef54", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgdY/ECRBK7hj4Ov3rIwAAdHIIAFKdmdsDa6bSlQ+9mD0XrBz/\n/UZA851GHPvW/8/YANE6ffAgc3ZQNt0BsWRLu9WlfPgRvCqJ7NrOfImO9vlk5qo8\njL53/0cHlPlRxnp/gHJChwVRc/9A/8gDlxt8hAboHEaGhMklBNH+xIu4AAzvJpIf\n9dkW3kCRK1GZMnuJ9id8GDtDNUysTa7QywISMIzZKd5tfI7CEkGTG/dDhQdfyup/\noNUIYaHk2W+xgJOuce25ZJqPakquxikfkSVrpBkFRymxl3uzOiYzFLUluLQpW8oa\n3qy46B/GWJHWBcme1VRiOeLwMMEKHAExQ9qe+8k0fOgoiCGo3Atiqc6vLesOZso=\n=6O6E\n-----END PGP SIGNATURE-----\n", "payload": "tree f7ef8597e4ba1bfbcd7f0e44e302b6452010a0e3\nparent 9f18ba675fd1b60db6fb0f35264549969fddcee9\nparent 43071e81a6e3a8270ffa5263d180226654768ede\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1618317252 +0000\ncommitter GitHub <noreply@github.com> 1618317252 +0000\n\nMerge #8507\n\n8507: internal: follow test style guide in typing.rs r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10a243ea55565a0dd1de52f8f802c3e3a7bfef54", "html_url": "https://github.com/rust-lang/rust/commit/10a243ea55565a0dd1de52f8f802c3e3a7bfef54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10a243ea55565a0dd1de52f8f802c3e3a7bfef54/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f18ba675fd1b60db6fb0f35264549969fddcee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f18ba675fd1b60db6fb0f35264549969fddcee9", "html_url": "https://github.com/rust-lang/rust/commit/9f18ba675fd1b60db6fb0f35264549969fddcee9"}, {"sha": "43071e81a6e3a8270ffa5263d180226654768ede", "url": "https://api.github.com/repos/rust-lang/rust/commits/43071e81a6e3a8270ffa5263d180226654768ede", "html_url": "https://github.com/rust-lang/rust/commit/43071e81a6e3a8270ffa5263d180226654768ede"}], "stats": {"total": 200, "additions": 104, "deletions": 96}, "files": [{"sha": "82c7323908a7ef37ed7f07261bd29848eca1faac", "filename": "crates/ide/src/typing.rs", "status": "modified", "additions": 104, "deletions": 96, "changes": 200, "blob_url": "https://github.com/rust-lang/rust/blob/10a243ea55565a0dd1de52f8f802c3e3a7bfef54/crates%2Fide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10a243ea55565a0dd1de52f8f802c3e3a7bfef54/crates%2Fide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ftyping.rs?ref=10a243ea55565a0dd1de52f8f802c3e3a7bfef54", "patch": "@@ -222,8 +222,8 @@ mod tests {\n         assert_eq_text!(ra_fixture_after, &actual);\n     }\n \n-    fn type_char_noop(char_typed: char, before: &str) {\n-        let file_change = do_type_char(char_typed, before);\n+    fn type_char_noop(char_typed: char, ra_fixture_before: &str) {\n+        let file_change = do_type_char(char_typed, ra_fixture_before);\n         assert!(file_change.is_none())\n     }\n \n@@ -240,16 +240,16 @@ mod tests {\n         // \");\n         type_char(\n             '=',\n-            r\"\n+            r#\"\n fn foo() {\n     let foo $0 1 + 1\n }\n-\",\n-            r\"\n+\"#,\n+            r#\"\n fn foo() {\n     let foo = 1 + 1;\n }\n-\",\n+\"#,\n         );\n         //     do_check(r\"\n         // fn foo() {\n@@ -268,27 +268,27 @@ fn foo() {\n     fn indents_new_chain_call() {\n         type_char(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                $0\n-            }\n-            \",\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+    $0\n+}\n+            \"#,\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    $0\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        $0\n+}\n+            \"#,\n         )\n     }\n \n@@ -297,26 +297,26 @@ fn foo() {\n         type_char(\n             '.',\n             r\"\n-            fn main() {\n-                xs.foo()\n-                $0;\n-            }\n-            \",\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .;\n-            }\n+fn main() {\n+    xs.foo()\n+    $0;\n+}\n             \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .;\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    $0;\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        $0;\n+}\n+            \"#,\n         )\n     }\n \n@@ -345,90 +345,98 @@ fn main() {\n     fn indents_continued_chain_call() {\n         type_char(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .first()\n-                $0\n-            }\n-            \",\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .first()\n-                    .\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .first()\n+    $0\n+}\n+            \"#,\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .first()\n+        .\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .first()\n-                    $0\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .first()\n+        $0\n+}\n+            \"#,\n         );\n     }\n \n     #[test]\n     fn indents_middle_of_chain_call() {\n         type_char(\n             '.',\n-            r\"\n-            fn source_impl() {\n-                let var = enum_defvariant_list().unwrap()\n-                $0\n-                    .nth(92)\n-                    .unwrap();\n-            }\n-            \",\n-            r\"\n-            fn source_impl() {\n-                let var = enum_defvariant_list().unwrap()\n-                    .\n-                    .nth(92)\n-                    .unwrap();\n-            }\n-            \",\n+            r#\"\n+fn source_impl() {\n+    let var = enum_defvariant_list().unwrap()\n+    $0\n+        .nth(92)\n+        .unwrap();\n+}\n+            \"#,\n+            r#\"\n+fn source_impl() {\n+    let var = enum_defvariant_list().unwrap()\n+        .\n+        .nth(92)\n+        .unwrap();\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn source_impl() {\n-                let var = enum_defvariant_list().unwrap()\n-                    $0\n-                    .nth(92)\n-                    .unwrap();\n-            }\n-            \",\n+            r#\"\n+fn source_impl() {\n+    let var = enum_defvariant_list().unwrap()\n+        $0\n+        .nth(92)\n+        .unwrap();\n+}\n+            \"#,\n         );\n     }\n \n     #[test]\n     fn dont_indent_freestanding_dot() {\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-                $0\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    $0\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-            $0\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+$0\n+}\n+            \"#,\n         );\n     }\n \n     #[test]\n     fn adds_space_after_return_type() {\n-        type_char('>', \"fn foo() -$0{ 92 }\", \"fn foo() -> { 92 }\")\n+        type_char(\n+            '>',\n+            r#\"\n+fn foo() -$0{ 92 }\n+\"#,\n+            r#\"\n+fn foo() -> { 92 }\n+\"#,\n+        );\n     }\n \n     #[test]"}]}