{"sha": "ff7009a4d279c1e5ce1248ca373b91678ad6709c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNzAwOWE0ZDI3OWMxZTVjZTEyNDhjYTM3M2I5MTY3OGFkNjcwOWM=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-24T20:03:39Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-24T20:03:39Z"}, "message": "nit", "tree": {"sha": "169101fff3980cba2e0a95ebaf68152efd02c79a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/169101fff3980cba2e0a95ebaf68152efd02c79a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff7009a4d279c1e5ce1248ca373b91678ad6709c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff7009a4d279c1e5ce1248ca373b91678ad6709c", "html_url": "https://github.com/rust-lang/rust/commit/ff7009a4d279c1e5ce1248ca373b91678ad6709c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff7009a4d279c1e5ce1248ca373b91678ad6709c/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5430e5306a2f3706797d5e453860875abe463ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5430e5306a2f3706797d5e453860875abe463ed", "html_url": "https://github.com/rust-lang/rust/commit/e5430e5306a2f3706797d5e453860875abe463ed"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "86e8675afb2fb902c49a0978c09e1f030587b687", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/region_name.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff7009a4d279c1e5ce1248ca373b91678ad6709c/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff7009a4d279c1e5ce1248ca373b91678ad6709c/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs?ref=ff7009a4d279c1e5ce1248ca373b91678ad6709c", "patch": "@@ -404,7 +404,6 @@ impl<'tcx> MirBorrowckCtxt<'_, 'tcx> {\n         );\n         if type_name.find(&format!(\"'{}\", counter)).is_some() {\n             // Only add a label if we can confirm that a region was labelled.\n-\n             Some(RegionNameHighlight::CannotMatchHirTy(span, type_name))\n         } else {\n             None"}]}