{"sha": "6ad24baf06c687517f188e8c6e6ce848924d001c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZDI0YmFmMDZjNjg3NTE3ZjE4OGU4YzZlNmNlODQ4OTI0ZDAwMWM=", "commit": {"author": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-07T21:45:51Z"}, "committer": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-20T20:18:19Z"}, "message": "Adjust according to estebank's review comments", "tree": {"sha": "853bbd2cfdcc2ccab42ce4fcc0e6498f1b388dc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/853bbd2cfdcc2ccab42ce4fcc0e6498f1b388dc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ad24baf06c687517f188e8c6e6ce848924d001c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad24baf06c687517f188e8c6e6ce848924d001c", "html_url": "https://github.com/rust-lang/rust/commit/6ad24baf06c687517f188e8c6e6ce848924d001c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ad24baf06c687517f188e8c6e6ce848924d001c/comments", "author": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05d653199871955eba90abdd3b176603f030ab60", "url": "https://api.github.com/repos/rust-lang/rust/commits/05d653199871955eba90abdd3b176603f030ab60", "html_url": "https://github.com/rust-lang/rust/commit/05d653199871955eba90abdd3b176603f030ab60"}], "stats": {"total": 51, "additions": 24, "deletions": 27}, "files": [{"sha": "bec810fde081d65314b239637ca5d4c4200d3aca", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=6ad24baf06c687517f188e8c6e6ce848924d001c", "patch": "@@ -174,7 +174,10 @@ impl<'a> Parser<'a> {\n         } else {\n             (None, None)\n         };\n-        let init = match (self.parse_initializer(let_span, ty.is_some(), err.is_some()), err) {\n+        let init = match (\n+            self.parse_initializer(let_span.until(pat.span), ty.is_some(), err.is_some()),\n+            err,\n+        ) {\n             (Ok(init), None) => {\n                 // init parsed, ty parsed\n                 init\n@@ -231,25 +234,19 @@ impl<'a> Parser<'a> {\n                 self.sess.span_diagnostic,\n                 self.token.span,\n                 E0067,\n-                \"can't reassign to a uninitialized variable\"\n+                \"can't reassign to an uninitialized variable\"\n             );\n             err.span_suggestion_short(\n                 self.token.span,\n-                \"replace with `=` to initialize the variable\",\n+                \"initialize the variable\",\n                 \"=\".to_string(),\n-                if has_ty {\n-                    // for `let x: i8 += 1` it's highly likely that the `+` is a typo\n-                    Applicability::MachineApplicable\n-                } else {\n-                    // for `let x += 1` it's a bit less likely that the `+` is a typo\n-                    Applicability::MaybeIncorrect\n-                },\n+                Applicability::MaybeIncorrect,\n             );\n             // In case of code like `let x += 1` it's possible the user may have meant to write `x += 1`\n             if !has_ty {\n                 err.span_suggestion_short(\n                     let_span,\n-                    \"remove to reassign to a previously initialized variable\",\n+                    \"otherwise, reassign to a previously initialized variable\",\n                     \"\".to_string(),\n                     Applicability::MaybeIncorrect,\n                 );"}, {"sha": "4d6d9b5c8d37f894d2e5c2eae572cad400b9bcb7", "filename": "src/test/ui/parser/let-binop-plus.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Ftest%2Fui%2Fparser%2Flet-binop-plus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Ftest%2Fui%2Fparser%2Flet-binop-plus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flet-binop-plus.rs?ref=6ad24baf06c687517f188e8c6e6ce848924d001c", "patch": "@@ -3,6 +3,6 @@\n fn main() {\n     let a: i8 += 1;\n     //~^ ERROR expected trait, found builtin type `i8`\n-    //~| ERROR can't reassign to a uninitialized variable\n+    //~| ERROR can't reassign to an uninitialized variable\n     let _ = a;\n }"}, {"sha": "91a59fe24fedc1f77332a7388fa889cb19ce9a6d", "filename": "src/test/ui/parser/let-binop-plus.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Ftest%2Fui%2Fparser%2Flet-binop-plus.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Ftest%2Fui%2Fparser%2Flet-binop-plus.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flet-binop-plus.stderr?ref=6ad24baf06c687517f188e8c6e6ce848924d001c", "patch": "@@ -1,8 +1,8 @@\n-error[E0067]: can't reassign to a uninitialized variable\n+error[E0067]: can't reassign to an uninitialized variable\n   --> $DIR/let-binop-plus.rs:4:16\n    |\n LL |     let a: i8 += 1;\n-   |                ^ help: replace with `=` to initialize the variable\n+   |                ^ help: initialize the variable\n \n error[E0404]: expected trait, found builtin type `i8`\n   --> $DIR/let-binop-plus.rs:4:12"}, {"sha": "7f58f5df2d4125786ff200cc557cd910d1338554", "filename": "src/test/ui/parser/let-binop.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Ftest%2Fui%2Fparser%2Flet-binop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Ftest%2Fui%2Fparser%2Flet-binop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flet-binop.rs?ref=6ad24baf06c687517f188e8c6e6ce848924d001c", "patch": "@@ -1,8 +1,8 @@\n fn main() {\n-    let a: i8 *= 1; //~ ERROR can't reassign to a uninitialized variable\n+    let a: i8 *= 1; //~ ERROR can't reassign to an uninitialized variable\n     let _ = a;\n-    let b += 1; //~ ERROR can't reassign to a uninitialized variable\n+    let b += 1; //~ ERROR can't reassign to an uninitialized variable\n     let _ = b;\n-    let c *= 1; //~ ERROR can't reassign to a uninitialized variable\n+    let c *= 1; //~ ERROR can't reassign to an uninitialized variable\n     let _ = c;\n }"}, {"sha": "8a90b7cf74a4a961e397785fb91635f4e49f747e", "filename": "src/test/ui/parser/let-binop.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Ftest%2Fui%2Fparser%2Flet-binop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ad24baf06c687517f188e8c6e6ce848924d001c/src%2Ftest%2Fui%2Fparser%2Flet-binop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flet-binop.stderr?ref=6ad24baf06c687517f188e8c6e6ce848924d001c", "patch": "@@ -1,37 +1,37 @@\n-error[E0067]: can't reassign to a uninitialized variable\n+error[E0067]: can't reassign to an uninitialized variable\n   --> $DIR/let-binop.rs:2:15\n    |\n LL |     let a: i8 *= 1;\n-   |               ^^ help: replace with `=` to initialize the variable\n+   |               ^^ help: initialize the variable\n \n-error[E0067]: can't reassign to a uninitialized variable\n+error[E0067]: can't reassign to an uninitialized variable\n   --> $DIR/let-binop.rs:4:11\n    |\n LL |     let b += 1;\n    |           ^^\n    |\n-help: replace with `=` to initialize the variable\n+help: initialize the variable\n    |\n LL |     let b = 1;\n    |           ^\n-help: remove to reassign to a previously initialized variable\n+help: otherwise, reassign to a previously initialized variable\n    |\n-LL |      b += 1;\n+LL |     b += 1;\n    |    --\n \n-error[E0067]: can't reassign to a uninitialized variable\n+error[E0067]: can't reassign to an uninitialized variable\n   --> $DIR/let-binop.rs:6:11\n    |\n LL |     let c *= 1;\n    |           ^^\n    |\n-help: replace with `=` to initialize the variable\n+help: initialize the variable\n    |\n LL |     let c = 1;\n    |           ^\n-help: remove to reassign to a previously initialized variable\n+help: otherwise, reassign to a previously initialized variable\n    |\n-LL |      c *= 1;\n+LL |     c *= 1;\n    |    --\n \n error: aborting due to 3 previous errors"}]}