{"sha": "15d770400eed9018f18bddf83dd65cb7789280a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZDc3MDQwMGVlZDkwMThmMThiZGRmODNkZDY1Y2I3Nzg5MjgwYTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-11-06T18:58:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-11-06T18:58:31Z"}, "message": "Auto merge of #53996 - sekineh:thumb-run, r=japaric\n\n[CI] Run a `thumbv7m-none-eabi` binary using `qemu-system-arm` [IRR-2018-embedded]\n\n## What's included?\n\n- Run a `thumbv7m-none-eabi` binary using `qemu-system-arm`\n- We are using `cortex-m-rt = \"=0.5.4\"` which does not use `proc_macro`.\n(reason: stage2 build of rustc does not work well with `proc_macro` in `run-make` phase.)\n- We are using GNU LD for now.\n\n## Blocker\n\nAll resolved.\n- ~[Waiting] `#[panic_handler]` is not available in stable.~\n  - [Merged] https://github.com/rust-lang/rust/pull/53619\n- ~[Waiting] https://github.com/japaric/lm3s6965evb: does not compile on stable.~\n  - [OK] dependent crate ~`panic-abort`~ `panic-halt`: already moved to use `#[panic_handler]`.\n\n## Update\n\n`#[panic_handler]` will be stabilized in Rust 1.30.\n\nCC @kennytm @jamesmunns @nerdyvaishali", "tree": {"sha": "cd5359c448c6895ae8721c4d405c5b26af94a5a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd5359c448c6895ae8721c4d405c5b26af94a5a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15d770400eed9018f18bddf83dd65cb7789280a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15d770400eed9018f18bddf83dd65cb7789280a5", "html_url": "https://github.com/rust-lang/rust/commit/15d770400eed9018f18bddf83dd65cb7789280a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15d770400eed9018f18bddf83dd65cb7789280a5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdfeace114d989f58614bbc255ac08306fbf18ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdfeace114d989f58614bbc255ac08306fbf18ef", "html_url": "https://github.com/rust-lang/rust/commit/bdfeace114d989f58614bbc255ac08306fbf18ef"}, {"sha": "f87230362355e40bd5e9b359d12098562478fa13", "url": "https://api.github.com/repos/rust-lang/rust/commits/f87230362355e40bd5e9b359d12098562478fa13", "html_url": "https://github.com/rust-lang/rust/commit/f87230362355e40bd5e9b359d12098562478fa13"}], "stats": {"total": 144, "additions": 143, "deletions": 1}, "files": [{"sha": "c7e6af28f9d4fbb385c4d8f21394eea12f492ac8", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=15d770400eed9018f18bddf83dd65cb7789280a5", "patch": "@@ -22,7 +22,8 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   libssl-dev \\\n   pkg-config \\\n   gcc-arm-none-eabi \\\n-  libnewlib-arm-none-eabi\n+  libnewlib-arm-none-eabi \\\n+  qemu-system-arm\n \n WORKDIR /build\n "}, {"sha": "ffd17721b73bb30f1e5a04c7059a6b5daa87a8c4", "filename": "src/test/run-make/thumb-none-qemu/Makefile", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2FMakefile?ref=15d770400eed9018f18bddf83dd65cb7789280a5", "patch": "@@ -0,0 +1,30 @@\n+-include ../../run-make-fulldeps/tools.mk\n+\n+# How to run this\n+# $ ./x.py clean\n+# $ ./x.py test --target thumbv7m-none-eabi src/test/run-make\n+\n+ifneq (,$(filter $(TARGET),thumbv6m-none-eabi thumbv7m-none-eabi))\n+\n+# For cargo setting\n+export RUSTC := $(RUSTC_ORIGINAL)\n+export LD_LIBRARY_PATH := $(HOST_RPATH_DIR)\n+# We need to be outside of 'src' dir in order to run cargo\n+export WORK_DIR := $(TMPDIR)\n+export HERE := $(shell pwd)\n+\n+## clean up unused env variables which might cause harm.\n+unexport RUSTC_LINKER\n+unexport RUSTC_BOOTSTRAP\n+unexport RUST_BUILD_STAGE\n+unexport RUST_TEST_THREADS\n+unexport RUST_TEST_TMPDIR\n+unexport AR\n+unexport CC\n+unexport CXX\n+\n+all:\n+\tbash script.sh\n+else\n+all:\n+endif"}, {"sha": "0d6b19c124b1e59559339e8e2a16a5c3d571a115", "filename": "src/test/run-make/thumb-none-qemu/example/.cargo/config", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2F.cargo%2Fconfig", "raw_url": "https://github.com/rust-lang/rust/raw/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2F.cargo%2Fconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2F.cargo%2Fconfig?ref=15d770400eed9018f18bddf83dd65cb7789280a5", "patch": "@@ -0,0 +1,31 @@\n+[target.thumbv7m-none-eabi]\n+# uncomment this to make `cargo run` execute programs on QEMU\n+runner = \"qemu-system-arm -cpu cortex-m3 -machine lm3s6965evb -nographic -semihosting-config enable=on,target=native -kernel\"\n+\n+[target.thumbv6m-none-eabi]\n+# uncomment this to make `cargo run` execute programs on QEMU\n+# For now, we use cortex-m3 instead of cortex-m0 which are not supported by QEMU\n+runner = \"qemu-system-arm -cpu cortex-m3 -machine lm3s6965evb -nographic -semihosting-config enable=on,target=native -kernel\"\n+\n+[target.'cfg(all(target_arch = \"arm\", target_os = \"none\"))']\n+# uncomment ONE of these three option to make `cargo run` start a GDB session\n+# which option to pick depends on your system\n+# runner = \"arm-none-eabi-gdb -q -x openocd.gdb\"\n+# runner = \"gdb-multiarch -q -x openocd.gdb\"\n+# runner = \"gdb -q -x openocd.gdb\"\n+\n+rustflags = [\n+  # LLD (shipped with the Rust toolchain) is used as the default linker\n+  \"-C\", \"link-arg=-Tlink.x\",\n+\n+  # if you run into problems with LLD switch to the GNU linker by commenting out\n+  # this line\n+  # \"-C\", \"linker=arm-none-eabi-ld\",\n+\n+  # if you need to link to pre-compiled C libraries provided by a C toolchain\n+  # use GCC as the linker by commenting out both lines above and then\n+  # uncommenting the three lines below\n+  # \"-C\", \"linker=arm-none-eabi-gcc\",\n+  # \"-C\", \"link-arg=-Wl,-Tlink.x\",\n+  # \"-C\", \"link-arg=-nostartfiles\",\n+]\n\\ No newline at end of file"}, {"sha": "499553304c681ae6eb9d3f1a35952807cfbcb8a6", "filename": "src/test/run-make/thumb-none-qemu/example/Cargo.toml", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2FCargo.toml?ref=15d770400eed9018f18bddf83dd65cb7789280a5", "patch": "@@ -0,0 +1,11 @@\n+[package]\n+name = \"example\"\n+version = \"0.1.0\"\n+authors = [\"Hideki Sekine <sekineh@me.com>\"]\n+# edition = \"2018\"\n+\n+[dependencies]\n+cortex-m = \"0.5.4\"\n+cortex-m-rt = \"=0.5.4\"\n+panic-halt = \"0.2.0\"\n+cortex-m-semihosting = \"0.3.1\""}, {"sha": "dc7ad967a42a87978379cbaaea7f671264044f64", "filename": "src/test/run-make/thumb-none-qemu/example/memory.x", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2Fmemory.x", "raw_url": "https://github.com/rust-lang/rust/raw/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2Fmemory.x", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2Fmemory.x?ref=15d770400eed9018f18bddf83dd65cb7789280a5", "patch": "@@ -0,0 +1,23 @@\n+/* Device specific memory layout */\n+\n+/* This file is used to build the cortex-m-rt examples,\n+   but not other applications using cortex-m-rt. */\n+\n+MEMORY\n+{\n+  /* FLASH and RAM are mandatory memory regions */\n+  /* Update examples/data_overflow.rs if you change these sizes. */\n+  FLASH : ORIGIN = 0x00000000, LENGTH = 256K\n+  RAM : ORIGIN = 0x20000000, LENGTH = 64K\n+\n+  /* More memory regions can declared: for example this is a second RAM region */\n+  /* CCRAM : ORIGIN = 0x10000000, LENGTH = 8K */\n+}\n+\n+/* The location of the stack can be overridden using the `_stack_start` symbol.\n+   By default it will be placed at the end of the RAM region */\n+/* _stack_start = ORIGIN(CCRAM) + LENGTH(CCRAM); */\n+\n+/* The location of the .text section can be overridden using the `_stext` symbol.\n+   By default it will place after .vector_table */\n+/* _stext = ORIGIN(FLASH) + 0x40c; */\n\\ No newline at end of file"}, {"sha": "d88a327ef08b4c6b222918d64caaff34ee5ef9c1", "filename": "src/test/run-make/thumb-none-qemu/example/src/main.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fexample%2Fsrc%2Fmain.rs?ref=15d770400eed9018f18bddf83dd65cb7789280a5", "patch": "@@ -0,0 +1,30 @@\n+// #![feature(stdsimd)]\n+#![no_main]\n+#![no_std]\n+\n+extern crate cortex_m;\n+\n+extern crate cortex_m_rt as rt;\n+extern crate cortex_m_semihosting as semihosting;\n+extern crate panic_halt;\n+\n+use core::fmt::Write;\n+use cortex_m::asm;\n+use rt::entry;\n+\n+entry!(main);\n+\n+fn main() -> ! {\n+    let x = 42;\n+\n+    loop {\n+        asm::nop();\n+\n+        // write something through semihosting interface\n+        let mut hstdout = semihosting::hio::hstdout().unwrap();\n+        write!(hstdout, \"x = {}\\n\", x);\n+\n+        // exit from qemu\n+        semihosting::debug::exit(semihosting::debug::EXIT_SUCCESS);\n+    }\n+}"}, {"sha": "0f1c49f3a71b1e34a142ae0adf42d068ea48e3a9", "filename": "src/test/run-make/thumb-none-qemu/script.sh", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fscript.sh", "raw_url": "https://github.com/rust-lang/rust/raw/15d770400eed9018f18bddf83dd65cb7789280a5/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fscript.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fthumb-none-qemu%2Fscript.sh?ref=15d770400eed9018f18bddf83dd65cb7789280a5", "patch": "@@ -0,0 +1,16 @@\n+set -exuo pipefail\n+\n+CRATE=example\n+\n+env | sort\n+mkdir -p $WORK_DIR\n+pushd $WORK_DIR\n+    rm -rf $CRATE || echo OK\n+    cp -a $HERE/example .\n+    pushd $CRATE\n+        env RUSTFLAGS=\"-C linker=arm-none-eabi-ld -C link-arg=-Tlink.x\" \\\n+            $CARGO run --target $TARGET           | grep \"x = 42\"\n+        env RUSTFLAGS=\"-C linker=arm-none-eabi-ld -C link-arg=-Tlink.x\" \\\n+            $CARGO run --target $TARGET --release | grep \"x = 42\"\n+    popd\n+popd"}]}