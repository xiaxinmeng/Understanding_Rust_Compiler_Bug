{"sha": "64a54df86faf1f55148433753296dc2bc2a7e31d", "node_id": "C_kwDOAAsO6NoAKDY0YTU0ZGY4NmZhZjFmNTUxNDg0MzM3NTMyOTZkYzJiYzJhN2UzMWQ", "commit": {"author": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-06-07T15:17:58Z"}, "committer": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-06-07T15:21:00Z"}, "message": "Safe Transmute: Disable coinduction support\n\nThis patch just removes the `#[rustc_coinductive]` annotation from `BikeshedIntrinsicFrom` and flips the related tests to `check-fail`. Once an FCP for setting the annotation on the trait is approved, it could be enabled again.", "tree": {"sha": "1f1601ce42b08901481eeef3ee6752108b348008", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f1601ce42b08901481eeef3ee6752108b348008"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64a54df86faf1f55148433753296dc2bc2a7e31d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64a54df86faf1f55148433753296dc2bc2a7e31d", "html_url": "https://github.com/rust-lang/rust/commit/64a54df86faf1f55148433753296dc2bc2a7e31d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64a54df86faf1f55148433753296dc2bc2a7e31d/comments", "author": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2164d5c9a17a7c2eefeccf623c278612b2650de", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2164d5c9a17a7c2eefeccf623c278612b2650de", "html_url": "https://github.com/rust-lang/rust/commit/d2164d5c9a17a7c2eefeccf623c278612b2650de"}], "stats": {"total": 61, "additions": 56, "deletions": 5}, "files": [{"sha": "87ae30619c63bc091aec8e65c223f943905530de", "filename": "library/core/src/mem/transmutability.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64a54df86faf1f55148433753296dc2bc2a7e31d/library%2Fcore%2Fsrc%2Fmem%2Ftransmutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a54df86faf1f55148433753296dc2bc2a7e31d/library%2Fcore%2Fsrc%2Fmem%2Ftransmutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Ftransmutability.rs?ref=64a54df86faf1f55148433753296dc2bc2a7e31d", "patch": "@@ -5,7 +5,6 @@\n /// notwithstanding whatever safety checks you have asked the compiler to [`Assume`] are satisfied.\n #[unstable(feature = \"transmutability\", issue = \"99571\")]\n #[lang = \"transmute_trait\"]\n-#[rustc_coinductive]\n pub unsafe trait BikeshedIntrinsicFrom<Src, Context, const ASSUME: Assume = { Assume::NOTHING }>\n where\n     Src: ?Sized,"}, {"sha": "3ea80173afaa985772e73108356469c763ea09c8", "filename": "tests/ui/transmutability/references/recursive-wrapper-types-bit-compatible.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/64a54df86faf1f55148433753296dc2bc2a7e31d/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types-bit-compatible.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a54df86faf1f55148433753296dc2bc2a7e31d/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types-bit-compatible.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types-bit-compatible.rs?ref=64a54df86faf1f55148433753296dc2bc2a7e31d", "patch": "@@ -1,4 +1,5 @@\n-// check-pass\n+// check-fail\n+// FIXME(bryangarza): Change to check-pass when coinduction is supported for BikeshedIntrinsicFrom\n #![feature(transmutability)]\n \n mod assert {\n@@ -21,5 +22,5 @@ mod assert {\n fn main() {\n     #[repr(C)] struct A(bool, &'static A);\n     #[repr(C)] struct B(u8, &'static B);\n-    assert::is_maybe_transmutable::<&'static A, &'static B>();\n+    assert::is_maybe_transmutable::<&'static A, &'static B>(); //~ ERROR overflow evaluating the requirement\n }"}, {"sha": "fae332e6af93265e1ba27f02905a8bcb99544f0d", "filename": "tests/ui/transmutability/references/recursive-wrapper-types-bit-compatible.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/64a54df86faf1f55148433753296dc2bc2a7e31d/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types-bit-compatible.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64a54df86faf1f55148433753296dc2bc2a7e31d/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types-bit-compatible.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types-bit-compatible.stderr?ref=64a54df86faf1f55148433753296dc2bc2a7e31d", "patch": "@@ -0,0 +1,25 @@\n+error[E0275]: overflow evaluating the requirement `B: BikeshedIntrinsicFrom<A, assert::Context, Assume { alignment: true, lifetimes: false, safety: true, validity: false }>`\n+  --> $DIR/recursive-wrapper-types-bit-compatible.rs:25:5\n+   |\n+LL |     assert::is_maybe_transmutable::<&'static A, &'static B>();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: required by a bound in `is_maybe_transmutable`\n+  --> $DIR/recursive-wrapper-types-bit-compatible.rs:11:14\n+   |\n+LL |       pub fn is_maybe_transmutable<Src, Dst>()\n+   |              --------------------- required by a bound in this function\n+LL |       where\n+LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n+   |  ______________^\n+LL | |             Assume {\n+LL | |                 alignment: true,\n+LL | |                 lifetimes: false,\n+...  |\n+LL | |             }\n+LL | |         }>\n+   | |__________^ required by this bound in `is_maybe_transmutable`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0275`."}, {"sha": "59d1ad84a5d4c16e7780fe3aa940ea433c459bf2", "filename": "tests/ui/transmutability/references/recursive-wrapper-types.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/64a54df86faf1f55148433753296dc2bc2a7e31d/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a54df86faf1f55148433753296dc2bc2a7e31d/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types.rs?ref=64a54df86faf1f55148433753296dc2bc2a7e31d", "patch": "@@ -1,4 +1,5 @@\n-// check-pass\n+// check-fail\n+// FIXME(bryangarza): Change to check-pass when coinduction is supported for BikeshedIntrinsicFrom\n #![feature(transmutability)]\n \n mod assert {\n@@ -21,6 +22,6 @@ mod assert {\n fn main() {\n     #[repr(C)] struct A(&'static B);\n     #[repr(C)] struct B(&'static A);\n-    assert::is_maybe_transmutable::<&'static A, &'static B>();\n+    assert::is_maybe_transmutable::<&'static A, &'static B>(); //~ overflow evaluating the requirement\n     assert::is_maybe_transmutable::<&'static B, &'static A>();\n }"}, {"sha": "35a60c226437aafb18a2811e741a5c3328877b47", "filename": "tests/ui/transmutability/references/recursive-wrapper-types.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/64a54df86faf1f55148433753296dc2bc2a7e31d/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64a54df86faf1f55148433753296dc2bc2a7e31d/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Freferences%2Frecursive-wrapper-types.stderr?ref=64a54df86faf1f55148433753296dc2bc2a7e31d", "patch": "@@ -0,0 +1,25 @@\n+error[E0275]: overflow evaluating the requirement `A: BikeshedIntrinsicFrom<B, assert::Context, Assume { alignment: true, lifetimes: false, safety: true, validity: false }>`\n+  --> $DIR/recursive-wrapper-types.rs:25:5\n+   |\n+LL |     assert::is_maybe_transmutable::<&'static A, &'static B>();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: required by a bound in `is_maybe_transmutable`\n+  --> $DIR/recursive-wrapper-types.rs:11:14\n+   |\n+LL |       pub fn is_maybe_transmutable<Src, Dst>()\n+   |              --------------------- required by a bound in this function\n+LL |       where\n+LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n+   |  ______________^\n+LL | |             Assume {\n+LL | |                 alignment: true,\n+LL | |                 lifetimes: false,\n+...  |\n+LL | |             }\n+LL | |         }>\n+   | |__________^ required by this bound in `is_maybe_transmutable`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0275`."}]}