{"sha": "513276e595f8a8e988ec824a36b34cebe2aeaab4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMzI3NmU1OTVmOGE4ZTk4OGVjODI0YTM2YjM0Y2ViZTJhZWFhYjQ=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-08-03T18:46:32Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-08-03T19:42:35Z"}, "message": "Add #concat_idents[] and #ident_to_str[]", "tree": {"sha": "a2f54f90038d4593b149ea79e6bbcbeacc274a30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2f54f90038d4593b149ea79e6bbcbeacc274a30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/513276e595f8a8e988ec824a36b34cebe2aeaab4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/513276e595f8a8e988ec824a36b34cebe2aeaab4", "html_url": "https://github.com/rust-lang/rust/commit/513276e595f8a8e988ec824a36b34cebe2aeaab4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/513276e595f8a8e988ec824a36b34cebe2aeaab4/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a636b06f6fa45379603e91b8283b91616751666", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a636b06f6fa45379603e91b8283b91616751666", "html_url": "https://github.com/rust-lang/rust/commit/4a636b06f6fa45379603e91b8283b91616751666"}], "stats": {"total": 74, "additions": 65, "deletions": 9}, "files": [{"sha": "ce1cb27eb64649b17009647d8f6bcc8f400394e0", "filename": "src/comp/rustc.rc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Frustc.rc?ref=513276e595f8a8e988ec824a36b34cebe2aeaab4", "patch": "@@ -57,10 +57,13 @@ mod syntax {\n     }\n     mod ext {\n         mod base;\n+        mod expand;\n+\n         mod fmt;\n         mod env;\n         mod simplext;\n-        mod expand;\n+        mod concat_idents;\n+        mod ident_to_str;\n     }\n     mod print {\n         mod pprust;"}, {"sha": "fd37b6c2d3c0d2b0d5a6b7497e4b6f76a0646de6", "filename": "src/comp/syntax/ext/base.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Fsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Fsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fbase.rs?ref=513276e595f8a8e988ec824a36b34cebe2aeaab4", "patch": "@@ -25,6 +25,10 @@ fn syntax_expander_table() -> hashmap[str, syntax_extension] {\n     syntax_expanders.insert(\"env\", normal(ext::env::expand_syntax_ext));\n     syntax_expanders.insert(\"macro\",\n                             macro_defining(ext::simplext::add_new_extension));\n+    syntax_expanders.insert(\"concat_idents\",\n+                            normal(ext::concat_idents::expand_syntax_ext));\n+    syntax_expanders.insert(\"ident_to_str\",\n+                            normal(ext::ident_to_str::expand_syntax_ext));\n     ret syntax_expanders;\n }\n \n@@ -107,6 +111,12 @@ fn expr_to_ident(cx: &ext_ctxt, expr: @ast::expr, error: str) -> ast::ident {\n     }\n }\n \n+fn make_new_lit(cx: &ext_ctxt, sp: codemap::span, lit: ast::lit_) ->\n+   @ast::expr {\n+    let sp_lit = @{node: lit, span: sp};\n+    ret @{id: cx.next_id(), node: ast::expr_lit(sp_lit), span: sp};\n+}\n+\n \n \n //"}, {"sha": "d2e6511a99382bddf5e44e09780fc464d447372e", "filename": "src/comp/syntax/ext/concat_idents.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Fsyntax%2Fext%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Fsyntax%2Fext%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fconcat_idents.rs?ref=513276e595f8a8e988ec824a36b34cebe2aeaab4", "patch": "@@ -0,0 +1,22 @@\n+import std::ivec;\n+import std::option;\n+import base::*;\n+import syntax::ast;\n+\n+fn expand_syntax_ext(cx: &ext_ctxt, sp: codemap::span, arg: @ast::expr,\n+                     body: option::t[str]) -> @ast::expr {\n+    let args: (@ast::expr)[] = alt arg.node {\n+      ast::expr_vec(elts, _, _) { elts }\n+      _ { cx.span_fatal(sp, \"#concat_idents requires a vector argument .\") }\n+    };\n+    let res: ast::ident = \"\";\n+    for e: @ast::expr in args {\n+        res += expr_to_ident(cx, e, \"expected an ident\");\n+    }\n+\n+    ret @{id: cx.next_id(),\n+          node: ast::expr_path( {\n+              node: {global: false, idents: ~[res], types: ~[]},\n+              span: sp}),\n+          span: sp};\n+}\n\\ No newline at end of file"}, {"sha": "f2f4ae6a8fa99fb819b4573600814a1edf401185", "filename": "src/comp/syntax/ext/env.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Fsyntax%2Fext%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Fsyntax%2Fext%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fenv.rs?ref=513276e595f8a8e988ec824a36b34cebe2aeaab4", "patch": "@@ -1,12 +1,10 @@\n \n-\n /*\n  * The compiler code necessary to support the #env extension.  Eventually this\n  * should all get sucked into either the compiler syntax extension plugin\n  * interface.\n  */\n import std::ivec;\n-import std::str;\n import std::option;\n import std::generic_os;\n import base::*;\n@@ -31,12 +29,6 @@ fn expand_syntax_ext(cx: &ext_ctxt, sp: codemap::span, arg: @ast::expr,\n     }\n }\n \n-fn make_new_lit(cx: &ext_ctxt, sp: codemap::span, lit: ast::lit_) ->\n-   @ast::expr {\n-    let sp_lit = @{node: lit, span: sp};\n-    ret @{id: cx.next_id(), node: ast::expr_lit(sp_lit), span: sp};\n-}\n-\n fn make_new_str(cx: &ext_ctxt, sp: codemap::span, s: str) -> @ast::expr {\n     ret make_new_lit(cx, sp, ast::lit_str(s, ast::sk_rc));\n }"}, {"sha": "68a4303ec7298bc7d94db5e58d4f31731827e3d6", "filename": "src/comp/syntax/ext/ident_to_str.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Fsyntax%2Fext%2Fident_to_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Fcomp%2Fsyntax%2Fext%2Fident_to_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fident_to_str.rs?ref=513276e595f8a8e988ec824a36b34cebe2aeaab4", "patch": "@@ -0,0 +1,21 @@\n+import std::ivec;\n+import std::option;\n+import base::*;\n+import syntax::ast;\n+\n+fn expand_syntax_ext(cx: &ext_ctxt, sp: codemap::span, arg: @ast::expr,\n+                     body: option::t[str]) -> @ast::expr {\n+    let args: (@ast::expr)[] = alt arg.node {\n+      ast::expr_vec(elts, _, _) { elts }\n+      _ { cx.span_fatal(sp, \"#ident_to_str requires a vector argument .\") }\n+    };\n+    if ivec::len[@ast::expr](args) != 1u {\n+        cx.span_fatal(sp, \"malformed #ident_to_str call\");\n+    }\n+\n+    ret make_new_lit(cx, sp,\n+                     ast::lit_str(expr_to_ident(cx, args.(0u),\n+                                                \"expected an ident\"),\n+                                  ast::sk_rc));\n+\n+}\n\\ No newline at end of file"}, {"sha": "eabf3ebcbd0134448ab12a0c74274b4fe6067adb", "filename": "src/test/run-pass/syntax-extension-minor.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Ftest%2Frun-pass%2Fsyntax-extension-minor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513276e595f8a8e988ec824a36b34cebe2aeaab4/src%2Ftest%2Frun-pass%2Fsyntax-extension-minor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-minor.rs?ref=513276e595f8a8e988ec824a36b34cebe2aeaab4", "patch": "@@ -0,0 +1,8 @@\n+\n+fn main() {\n+    let asdf_fdsa = \"<.<\";\n+    assert(#concat_idents[asd,f_f,dsa] == \"<.<\");\n+\n+    assert(#ident_to_str[use_mention_distinction]\n+           == \"use_mention_distinction\");\n+}\n\\ No newline at end of file"}]}