{"sha": "1ab13549372ca12406ed948f1cdbcd5fd9da2e0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYjEzNTQ5MzcyY2ExMjQwNmVkOTQ4ZjFjZGJjZDVmZDlkYTJlMGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-14T13:21:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-14T13:21:54Z"}, "message": "auto merge of #5880 : Dretch/rust/signals, r=thestinger\n\nThis is a follow-up to #5761. Its purpose is to make core::libc more consistent - it currently only defines SIGKILL and SIGTERM, because they are the only values that happen to be needed by libcore.\r\n\r\nThis adds all the posix signal value constants, except for those that have different values on different architectures.\r\n\r\nThe output of the command `man 7 signal` was used to compile these signal values.", "tree": {"sha": "a38cf63e8e3237e25964e499e396685f543c7300", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a38cf63e8e3237e25964e499e396685f543c7300"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ab13549372ca12406ed948f1cdbcd5fd9da2e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ab13549372ca12406ed948f1cdbcd5fd9da2e0f", "html_url": "https://github.com/rust-lang/rust/commit/1ab13549372ca12406ed948f1cdbcd5fd9da2e0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ab13549372ca12406ed948f1cdbcd5fd9da2e0f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d4f1402e9abc7a8910a5d81dbb4d19c8c1b2b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d4f1402e9abc7a8910a5d81dbb4d19c8c1b2b6", "html_url": "https://github.com/rust-lang/rust/commit/79d4f1402e9abc7a8910a5d81dbb4d19c8c1b2b6"}, {"sha": "6994340ca0ff75fd9fcef7defed8c5bfd7cab448", "url": "https://api.github.com/repos/rust-lang/rust/commits/6994340ca0ff75fd9fcef7defed8c5bfd7cab448", "html_url": "https://github.com/rust-lang/rust/commit/6994340ca0ff75fd9fcef7defed8c5bfd7cab448"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "e5c5b2f9f2c26cc7b1e712343abd28cb820b3c85", "filename": "src/libcore/libc.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1ab13549372ca12406ed948f1cdbcd5fd9da2e0f/src%2Flibcore%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ab13549372ca12406ed948f1cdbcd5fd9da2e0f/src%2Flibcore%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flibc.rs?ref=1ab13549372ca12406ed948f1cdbcd5fd9da2e0f", "patch": "@@ -863,10 +863,20 @@ pub mod consts {\n             pub static F_TEST : int = 3;\n             pub static F_TLOCK : int = 2;\n             pub static F_ULOCK : int = 0;\n+            pub static SIGHUP : int = 1;\n+            pub static SIGINT : int = 2;\n+            pub static SIGQUIT : int = 3;\n+            pub static SIGILL : int = 4;\n+            pub static SIGABRT : int = 6;\n+            pub static SIGFPE : int = 8;\n             pub static SIGKILL : int = 9;\n+            pub static SIGSEGV : int = 11;\n+            pub static SIGPIPE : int = 13;\n+            pub static SIGALRM : int = 14;\n             pub static SIGTERM : int = 15;\n         }\n         pub mod posix01 {\n+            pub static SIGTRAP : int = 5;\n         }\n         pub mod posix08 {\n         }\n@@ -932,10 +942,20 @@ pub mod consts {\n             pub static F_TEST : int = 3;\n             pub static F_TLOCK : int = 2;\n             pub static F_ULOCK : int = 0;\n+            pub static SIGHUP : int = 1;\n+            pub static SIGINT : int = 2;\n+            pub static SIGQUIT : int = 3;\n+            pub static SIGILL : int = 4;\n+            pub static SIGABRT : int = 6;\n+            pub static SIGFPE : int = 8;\n             pub static SIGKILL : int = 9;\n+            pub static SIGSEGV : int = 11;\n+            pub static SIGPIPE : int = 13;\n+            pub static SIGALRM : int = 14;\n             pub static SIGTERM : int = 15;\n         }\n         pub mod posix01 {\n+            pub static SIGTRAP : int = 5;\n         }\n         pub mod posix08 {\n         }\n@@ -1002,10 +1022,20 @@ pub mod consts {\n             pub static F_TEST : int = 3;\n             pub static F_TLOCK : int = 2;\n             pub static F_ULOCK : int = 0;\n+            pub static SIGHUP : int = 1;\n+            pub static SIGINT : int = 2;\n+            pub static SIGQUIT : int = 3;\n+            pub static SIGILL : int = 4;\n+            pub static SIGABRT : int = 6;\n+            pub static SIGFPE : int = 8;\n             pub static SIGKILL : int = 9;\n+            pub static SIGSEGV : int = 11;\n+            pub static SIGPIPE : int = 13;\n+            pub static SIGALRM : int = 14;\n             pub static SIGTERM : int = 15;\n         }\n         pub mod posix01 {\n+            pub static SIGTRAP : int = 5;\n         }\n         pub mod posix08 {\n         }"}]}