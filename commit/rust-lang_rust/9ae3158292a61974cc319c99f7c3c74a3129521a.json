{"sha": "9ae3158292a61974cc319c99f7c3c74a3129521a", "node_id": "C_kwDOAAsO6NoAKDlhZTMxNTgyOTJhNjE5NzRjYzMxOWM5OWY3YzNjNzRhMzEyOTUyMWE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-06T19:26:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-06T19:26:51Z"}, "message": "Merge #10953\n\n10953: minor: Bump `tracing` r=lnicola a=lnicola\n\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "b2b65fe016b617986494c8a25d7a35001aeb0813", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2b65fe016b617986494c8a25d7a35001aeb0813"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ae3158292a61974cc319c99f7c3c74a3129521a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhrmP7CRBK7hj4Ov3rIwAAfSsIAJDVqHwJ7ZKmcBi6H9EjZaJs\nCDTG5CeNxSKJfUtT1n7kVQVWbYAAhuIFRhGAz2xHr6pNEvWMQLi4Xaeqm/K/vdlD\n3Kd2C75Zzxp9X+PoNYfGjr2Hx1YjCikqCV6N1GAhFIiypP0/vZHRzNQpN52bQ7Jt\no2U5iXDlcl8nVKZFS9Qia+B3fJmk73sxyfQdpTipl6NB+tJNkdHrRnPcYr8lnh9x\nn/rtj5WHQn4DA/TLbWkCk3/w2GDPlPh75c0bxf0M5Jlb4P1I6FHnTirkZ/KbiCDX\n2JK7In3pASnnxsE+BKecHIJ38iGRGhFd//+TGXr4JlUxWF6pCoIgvIPEhfniNSI=\n=V5kv\n-----END PGP SIGNATURE-----\n", "payload": "tree b2b65fe016b617986494c8a25d7a35001aeb0813\nparent 49b0970970564d5014315721ee0d58eba3a936e2\nparent 3678cbd12e0a0d083441e4408f738957e60f2383\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1638818811 +0000\ncommitter GitHub <noreply@github.com> 1638818811 +0000\n\nMerge #10953\n\n10953: minor: Bump `tracing` r=lnicola a=lnicola\n\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ae3158292a61974cc319c99f7c3c74a3129521a", "html_url": "https://github.com/rust-lang/rust/commit/9ae3158292a61974cc319c99f7c3c74a3129521a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ae3158292a61974cc319c99f7c3c74a3129521a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49b0970970564d5014315721ee0d58eba3a936e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/49b0970970564d5014315721ee0d58eba3a936e2", "html_url": "https://github.com/rust-lang/rust/commit/49b0970970564d5014315721ee0d58eba3a936e2"}, {"sha": "3678cbd12e0a0d083441e4408f738957e60f2383", "url": "https://api.github.com/repos/rust-lang/rust/commits/3678cbd12e0a0d083441e4408f738957e60f2383", "html_url": "https://github.com/rust-lang/rust/commit/3678cbd12e0a0d083441e4408f738957e60f2383"}], "stats": {"total": 45, "additions": 29, "deletions": 16}, "files": [{"sha": "92f98b536cab7a569f144378461175ca213a3c9d", "filename": "Cargo.lock", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ae3158292a61974cc319c99f7c3c74a3129521a/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9ae3158292a61974cc319c99f7c3c74a3129521a/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9ae3158292a61974cc319c99f7c3c74a3129521a", "patch": "@@ -881,9 +881,9 @@ dependencies = [\n \n [[package]]\n name = \"matchers\"\n-version = \"0.0.1\"\n+version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f099785f7595cc4b4553a174ce30dd7589ef93391ff414dbb67f62392b9e0ce1\"\n+checksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\n dependencies = [\n  \"regex-automata\",\n ]\n@@ -1731,9 +1731,9 @@ dependencies = [\n \n [[package]]\n name = \"tracing-subscriber\"\n-version = \"0.2.25\"\n+version = \"0.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0e0d2eaa99c3c2e41547cfa109e910a68ea03823cccad4a0525dcbc9b01e8c71\"\n+checksum = \"245da694cc7fc4729f3f418b304cb57789f1bed2a78c575407ab8a23f53cb4d3\"\n dependencies = [\n  \"lazy_static\",\n  \"matchers\",\n@@ -1747,9 +1747,9 @@ dependencies = [\n \n [[package]]\n name = \"tracing-tree\"\n-version = \"0.1.11\"\n+version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a2a408a91fbd4850982080e643a261aef2a2ef72c8263ce353b61d25acfc2c49\"\n+checksum = \"3ce989c9962c7f61fe084dd4a230eec784649dfc2392467c790007c3a6e134e7\"\n dependencies = [\n  \"ansi_term\",\n  \"atty\","}, {"sha": "5c6525c0f4da1a8cfa4c8de6f751c0177d7105e5", "filename": "crates/hir_ty/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ae3158292a61974cc319c99f7c3c74a3129521a/crates%2Fhir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9ae3158292a61974cc319c99f7c3c74a3129521a/crates%2Fhir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2FCargo.toml?ref=9ae3158292a61974cc319c99f7c3c74a3129521a", "patch": "@@ -36,8 +36,8 @@ limit = { path = \"../limit\", version = \"0.0.0\" }\n test_utils = { path = \"../test_utils\" }\n expect-test = \"1.2.0-pre.1\"\n tracing = \"0.1\"\n-tracing-subscriber = { version = \"0.2\", default-features = false, features = [\n+tracing-subscriber = { version = \"0.3\", default-features = false, features = [\n     \"env-filter\",\n     \"registry\",\n ] }\n-tracing-tree = { version = \"0.1.10\" }\n+tracing-tree = \"0.2\""}, {"sha": "6d2f042ccb532baefd425e5c16128f36c3d670af", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9ae3158292a61974cc319c99f7c3c74a3129521a/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9ae3158292a61974cc319c99f7c3c74a3129521a/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=9ae3158292a61974cc319c99f7c3c74a3129521a", "patch": "@@ -34,14 +34,14 @@ rayon = \"1.5\"\n mimalloc = { version = \"0.1.19\", default-features = false, optional = true }\n lsp-server = \"0.5.1\"\n tracing = \"0.1\"\n-tracing-subscriber = { version = \"0.2\", default-features = false, features = [\n+tracing-subscriber = { version = \"0.3\", default-features = false, features = [\n     \"env-filter\",\n     \"registry\",\n     \"fmt\",\n     \"tracing-log\",\n ] }\n tracing-log = \"0.1.2\"\n-tracing-tree = { version = \"0.1.10\" }\n+tracing-tree = \"0.2\"\n always-assert = \"0.1\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }"}, {"sha": "db00029da291f434c9175b90ee17af9a2e3308f9", "filename": "crates/rust-analyzer/src/bin/logger.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9ae3158292a61974cc319c99f7c3c74a3129521a/crates%2Frust-analyzer%2Fsrc%2Fbin%2Flogger.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ae3158292a61974cc319c99f7c3c74a3129521a/crates%2Frust-analyzer%2Fsrc%2Fbin%2Flogger.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Flogger.rs?ref=9ae3158292a61974cc319c99f7c3c74a3129521a", "patch": "@@ -2,17 +2,20 @@\n //! filter syntax and `tracing_appender` for non blocking output.\n \n use std::{\n-    fmt::{self, Write},\n+    fmt,\n     fs::File,\n-    io,\n+    io::{self, Stderr},\n     sync::Arc,\n };\n \n use rust_analyzer::Result;\n use tracing::{level_filters::LevelFilter, Event, Subscriber};\n use tracing_log::NormalizeEvent;\n use tracing_subscriber::{\n-    fmt::{writer::BoxMakeWriter, FmtContext, FormatEvent, FormatFields, FormattedFields},\n+    fmt::{\n+        format::Writer, writer::BoxMakeWriter, FmtContext, FormatEvent, FormatFields,\n+        FormattedFields, MakeWriter,\n+    },\n     layer::SubscriberExt,\n     registry::LookupSpan,\n     util::SubscriberInitExt,\n@@ -25,6 +28,16 @@ pub(crate) struct Logger {\n     file: Option<File>,\n }\n \n+struct MakeWriterStderr;\n+\n+impl<'a> MakeWriter<'a> for MakeWriterStderr {\n+    type Writer = Stderr;\n+\n+    fn make_writer(&'a self) -> Self::Writer {\n+        io::stderr()\n+    }\n+}\n+\n impl Logger {\n     pub(crate) fn new(file: Option<File>, filter: Option<&str>) -> Logger {\n         let filter = filter.map_or(EnvFilter::default(), EnvFilter::new);\n@@ -54,7 +67,7 @@ impl Logger {\n             .with_indent_lines(true)\n             .with_ansi(false)\n             .with_indent_amount(2)\n-            .with_writer(std::io::stderr);\n+            .with_writer(io::stderr);\n \n         let writer = match self.file {\n             Some(file) => BoxMakeWriter::new(Arc::new(file)),\n@@ -96,7 +109,7 @@ where\n     fn format_event(\n         &self,\n         ctx: &FmtContext<'_, S, N>,\n-        writer: &mut dyn Write,\n+        mut writer: Writer,\n         event: &Event<'_>,\n     ) -> fmt::Result {\n         // Write level and target\n@@ -135,7 +148,7 @@ where\n         })?;\n \n         // Write fields on the event\n-        ctx.field_format().format_fields(writer, event)?;\n+        ctx.field_format().format_fields(writer.by_ref(), event)?;\n \n         writeln!(writer)\n     }"}]}