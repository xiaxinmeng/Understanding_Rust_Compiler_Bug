{"sha": "ef77d8375130d12678d4b2316cc1708c90349dad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNzdkODM3NTEzMGQxMjY3OGQ0YjIzMTZjYzE3MDhjOTAzNDlkYWQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-01T15:13:33Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-04T16:18:30Z"}, "message": "Document the peculiarity of the solver query a bit\n\nAlso remove the only remaining mention of chalk outside of the ty::traits\nmodule.", "tree": {"sha": "37f495100cfcb5a8ce9e0bae8ed4fc50e3b49d80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37f495100cfcb5a8ce9e0bae8ed4fc50e3b49d80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef77d8375130d12678d4b2316cc1708c90349dad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef77d8375130d12678d4b2316cc1708c90349dad", "html_url": "https://github.com/rust-lang/rust/commit/ef77d8375130d12678d4b2316cc1708c90349dad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef77d8375130d12678d4b2316cc1708c90349dad/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8a643f090ed88289c7bc17b48078e39b932c8a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a643f090ed88289c7bc17b48078e39b932c8a4", "html_url": "https://github.com/rust-lang/rust/commit/c8a643f090ed88289c7bc17b48078e39b932c8a4"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "8aaf0375a15e62b8ba41a7099c2c9b3b9952ae16", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef77d8375130d12678d4b2316cc1708c90349dad/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef77d8375130d12678d4b2316cc1708c90349dad/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=ef77d8375130d12678d4b2316cc1708c90349dad", "patch": "@@ -153,9 +153,14 @@ pub trait HirDatabase: DefDatabase {\n     #[salsa::invoke(crate::ty::traits::impls_for_trait)]\n     fn impls_for_trait(&self, krate: Crate, trait_: Trait) -> Arc<[ImplBlock]>;\n \n+    /// This provides the Chalk trait solver instance. Because Chalk always\n+    /// works from a specific crate, this query is keyed on the crate; and\n+    /// because Chalk does its own internal caching, the solver is wrapped in a\n+    /// Mutex and the query is marked volatile, to make sure the cached state is\n+    /// thrown away when input facts change.\n     #[salsa::invoke(crate::ty::traits::solver)]\n     #[salsa::volatile]\n-    fn chalk_solver(&self, krate: Crate) -> Arc<Mutex<chalk_solve::Solver>>;\n+    fn solver(&self, krate: Crate) -> Arc<Mutex<crate::ty::traits::Solver>>;\n }\n \n #[test]"}, {"sha": "ac31ca2f6e3596f7883d7c055aa5a55a9d75d554", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef77d8375130d12678d4b2316cc1708c90349dad/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef77d8375130d12678d4b2316cc1708c90349dad/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=ef77d8375130d12678d4b2316cc1708c90349dad", "patch": "@@ -10,13 +10,15 @@ use self::chalk::{ToChalk, from_chalk};\n \n mod chalk;\n \n+pub(crate) type Solver = chalk_solve::Solver;\n+\n #[derive(Debug, Copy, Clone)]\n struct ChalkContext<'a, DB> {\n     db: &'a DB,\n     krate: Crate,\n }\n \n-pub(crate) fn solver(_db: &impl HirDatabase, _krate: Crate) -> Arc<Mutex<chalk_solve::Solver>> {\n+pub(crate) fn solver(_db: &impl HirDatabase, _krate: Crate) -> Arc<Mutex<Solver>> {\n     // krate parameter is just so we cache a unique solver per crate\n     let solver_choice = chalk_solve::SolverChoice::SLG { max_size: 10 };\n     Arc::new(Mutex::new(solver_choice.into_solver()))\n@@ -48,7 +50,7 @@ fn solve(\n     goal: &chalk_ir::UCanonical<chalk_ir::InEnvironment<chalk_ir::Goal>>,\n ) -> Option<chalk_solve::Solution> {\n     let context = ChalkContext { db, krate };\n-    let solver = db.chalk_solver(krate);\n+    let solver = db.solver(krate);\n     let solution = solver.lock().unwrap().solve(&context, goal);\n     eprintln!(\"solve({:?}) => {:?}\", goal, solution);\n     solution"}]}