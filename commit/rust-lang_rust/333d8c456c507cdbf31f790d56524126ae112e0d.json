{"sha": "333d8c456c507cdbf31f790d56524126ae112e0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzM2Q4YzQ1NmM1MDdjZGJmMzFmNzkwZDU2NTI0MTI2YWUxMTJlMGQ=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-08-01T08:12:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-01T08:12:41Z"}, "message": "Rollup merge of #52810 - matthewjasper:more-immutablity, r=pnkfelix\n\n[NLL] Don't make \"fake\" match variables mutable\n\nThese variables can't be mutated by the user, but since they have names the unused-mut lint thinks that it should check them.", "tree": {"sha": "5c9803442edecdc3a5adc43c1e4412bd260c3ece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c9803442edecdc3a5adc43c1e4412bd260c3ece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/333d8c456c507cdbf31f790d56524126ae112e0d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbYWt5CRBK7hj4Ov3rIwAAdHIIAEfp3H4dA1JDglEu5y72sT8R\n9CEte4dRmxr+86bMOeeyjxRx4FWdc4W/rkW55lIL5FvufYVVqvrchFGtpqK0WNsY\nLlwuyXYp+7RIKadGIVJ9GjE6Hj+M3SPLj4Stdn6VdUeiTHrZn7qUkl5hwAXg8w1C\nHP5yoeP1Q9HQf0uIDpMNxwQMN/dotBM73gkvAJkkzRnGUbkvawOwgL5GqRE4xdSS\nR5Y7I8iEV8MJrG42Q6Q4YVQhXzpNwTygUtKpBafV29xzq02G0c6mJXkXTVbqwMz/\nPJar00fUDWxr9h9+ONmX//C9PmT7QAfxTFJ+CEaLdi7iE8K0FBsPSAiSkpWv830=\n=ID1p\n-----END PGP SIGNATURE-----\n", "payload": "tree 5c9803442edecdc3a5adc43c1e4412bd260c3ece\nparent 714fd37b8ba17f1129f7429e21321edb11605955\nparent 173c33019e0daf982d64bc6658f4aca5b0dac419\nauthor Pietro Albini <pietro@pietroalbini.org> 1533111161 +0200\ncommitter GitHub <noreply@github.com> 1533111161 +0200\n\nRollup merge of #52810 - matthewjasper:more-immutablity, r=pnkfelix\n\n[NLL] Don't make \"fake\" match variables mutable\n\nThese variables can't be mutated by the user, but since they have names the unused-mut lint thinks that it should check them.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/333d8c456c507cdbf31f790d56524126ae112e0d", "html_url": "https://github.com/rust-lang/rust/commit/333d8c456c507cdbf31f790d56524126ae112e0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/333d8c456c507cdbf31f790d56524126ae112e0d/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "714fd37b8ba17f1129f7429e21321edb11605955", "url": "https://api.github.com/repos/rust-lang/rust/commits/714fd37b8ba17f1129f7429e21321edb11605955", "html_url": "https://github.com/rust-lang/rust/commit/714fd37b8ba17f1129f7429e21321edb11605955"}, {"sha": "173c33019e0daf982d64bc6658f4aca5b0dac419", "url": "https://api.github.com/repos/rust-lang/rust/commits/173c33019e0daf982d64bc6658f4aca5b0dac419", "html_url": "https://github.com/rust-lang/rust/commit/173c33019e0daf982d64bc6658f4aca5b0dac419"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "6a447d81dc3cb5f92f549b63621f1e5081df975a", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/333d8c456c507cdbf31f790d56524126ae112e0d/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333d8c456c507cdbf31f790d56524126ae112e0d/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=333d8c456c507cdbf31f790d56524126ae112e0d", "patch": "@@ -1213,11 +1213,17 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n         let locals = if has_guard.0 && tcx.all_pat_vars_are_implicit_refs_within_guards() {\n             let mut vals_for_guard = Vec::with_capacity(num_patterns);\n             for _ in 0..num_patterns {\n-                let val_for_guard_idx =  self.local_decls.push(local.clone());\n+                let val_for_guard_idx = self.local_decls.push(LocalDecl {\n+                    // This variable isn't mutated but has a name, so has to be\n+                    // immutable to avoid the unused mut lint.\n+                    mutability: Mutability::Not,\n+                    ..local.clone()\n+                });\n                 vals_for_guard.push(val_for_guard_idx);\n             }\n             let ref_for_guard = self.local_decls.push(LocalDecl::<'tcx> {\n-                mutability,\n+                // See previous comment.\n+                mutability: Mutability::Not,\n                 ty: tcx.mk_imm_ref(tcx.types.re_empty, var_ty),\n                 name: Some(name),\n                 source_info,"}, {"sha": "472ac2cf1e84c2415236a4b2f348416b3be84d60", "filename": "src/test/ui/nll/extra-unused-mut.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/333d8c456c507cdbf31f790d56524126ae112e0d/src%2Ftest%2Fui%2Fnll%2Fextra-unused-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333d8c456c507cdbf31f790d56524126ae112e0d/src%2Ftest%2Fui%2Fnll%2Fextra-unused-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fextra-unused-mut.rs?ref=333d8c456c507cdbf31f790d56524126ae112e0d", "patch": "@@ -55,10 +55,19 @@ fn parse_dot_or_call_expr_with(mut attrs: Vec<u32>) {\n     );\n }\n \n+// Found when trying to bootstrap rustc\n+fn if_guard(x: Result<i32, i32>) {\n+    match x {\n+        Ok(mut r) | Err(mut r) if true => r = 1,\n+        _ => (),\n+    }\n+}\n+\n fn main() {\n     ref_argument(0);\n     mutable_upvar();\n     generator_mutable_upvar();\n     ref_closure_argument();\n     parse_dot_or_call_expr_with(Vec::new());\n+    if_guard(Ok(0));\n }"}]}