plain
Set({"src/doc"}) not skipped for "bootstrap::doc::Standalone" -- not in ["src/tools/tidy"]
Set({"library/alloc", "library/core", "library/panic_abort", "library/panic_unwind", "library/proc_macro", "library/std", "library/test", "library/unwind"}) not skipped for "bootstrap::doc::Std" -- not in ["src/tools/tidy"]
Documenting stage2 std (x86_64-unknown-linux-gnu)
 Documenting core v0.0.0 (/checkout/library/core)
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("sized"), generics: None }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ord"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ord"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnmut"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ord"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ord"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnmut"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("pin"), generics: None }, kind: Struct }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ref"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ref"), generics: Some([TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]) }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ref"), generics: Some([TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]) }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ref"), generics: Some([TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]) }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ref"), generics: None }, kind: Struct }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("intoiterator"), generics: None }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("clone"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnmut"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("option"), generics: Some([TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]) }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("intoiterator"), generics: None }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("intoiterator"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("iterator"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("iterator"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("lazy"), generics: None }, kind: Struct }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("pin"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("pin"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("str"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("option"), generics: Some([TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]) }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("option"), generics: None }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("option"), generics: None }, kind: Enum }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("option"), generics: Some([TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]) }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("option"), generics: Some([TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]) }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("str"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("str"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("arguments"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("arguments"), generics: None }, kind: Struct }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("pin"), generics: None }, kind: Struct }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("pin"), generics: None }, kind: Struct }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("result"), generics: Some([TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]) }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("result"), generics: Some([TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]) }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("str"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("str"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("intoiterator"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("pin"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("context"), generics: None }, kind: Struct }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! [TypeWithKind { ty: RenderType { name: Some("ordering"), generics: None }, kind: Enum }]
!!!! []
---
    Checking hashbrown v0.11.0
    Checking object v0.26.1
    Checking addr2line v0.16.0
 Documenting std v0.0.0 (/checkout/library/std)
!!!! [TypeWithKind { ty: RenderType { name: Some("string"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("duration"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("duration"), generics: None }, kind: Struct }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("box"), generics: None }, kind: Struct }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("box"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("box"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("permissions"), generics: None }, kind: Struct }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("permissions"), generics: None }, kind: Struct }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("vec"), generics: None }, kind: Struct }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("string"), generics: None }, kind: Struct }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some("read"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("arguments"), generics: None }, kind: Struct }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("seekfrom"), generics: None }, kind: Enum }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("vec"), generics: None }, kind: Struct }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("string"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("vec"), generics: Some([TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]) }, kind: Struct }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("i32"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("rawfd"), generics: None }, kind: Typedef }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("i32"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("unixstream"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("unixstream"), generics: None }, kind: Struct }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("vec"), generics: Some([TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]) }, kind: Struct }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u16"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u8"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("file"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("file"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("file"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("file"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("file"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("file"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("rawfd"), generics: None }, kind: Typedef }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u64"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("rawhandle"), generics: None }, kind: Typedef }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("rawsocket"), generics: None }, kind: Typedef }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("bool"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("rawfd"), generics: None }, kind: Typedef }]
!!!! [TypeWithKind { ty: RenderType { name: Some("box"), generics: Some([TypeWithKind { ty: RenderType { name: Some("fn"), generics: None }, kind: Trait }]) }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: Some([TypeWithKind { ty: RenderType { name: Some("any"), generics: None }, kind: Trait }, TypeWithKind { ty: RenderType { name: Some("send"), generics: None }, kind: Trait }]) }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: Some([TypeWithKind { ty: RenderType { name: Some("fnonce"), generics: None }, kind: Trait }, TypeWithKind { ty: RenderType { name: Some("unwindsafe"), generics: None }, kind: Trait }]) }, kind: Generic }]
!!!! [TypeWithKind { ty: RenderType { name: Some("box"), generics: Some([TypeWithKind { ty: RenderType { name: Some("any"), generics: None }, kind: Trait }]) }, kind: Struct }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("char"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("usize"), generics: None }, kind: Primitive }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("box"), generics: Some([TypeWithKind { ty: RenderType { name: Some("path"), generics: None }, kind: Struct }]) }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some("asref"), generics: Some([TypeWithKind { ty: RenderType { name: Some("osstr"), generics: None }, kind: Struct }]) }, kind: Trait }]
!!!! []
!!!! [TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }, TypeWithKind { ty: RenderType { name: Some(""), generics: None }, kind: Generic }]
---
Suite("src/test/rustdoc-ui") not skipped for "bootstrap::test::RustdocUi" -- not in ["src/tools/tidy"]
Check compiletest suite=rustdoc-ui mode=ui (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)

running 129 tests
...FF..........F...............F...F....................F......F......F........F...F........FF...... 100/129
Some tests failed in compiletest suite=rustdoc-ui mode=ui host=x86_64-unknown-linux-gnu target=x86_64-unknown-linux-gnu
....FF.......................

---- [ui] rustdoc-ui/coverage/doc-examples.rs stdout ----
normalized stderr:
normalized stderr:
!!!! [TypeWithKind { ty: RenderType { name: Some("foo"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("bar"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("debug"), generics: None }, kind: Trait }]


The actual stderr differed from the expected stderr.
Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/coverage/doc-examples/doc-examples.stderr
Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/coverage/doc-examples/doc-examples.stderr
To update references, rerun the tests and pass the `--bless` flag
To only update this specific test, also pass `--test-args coverage/doc-examples.rs`

error: 1 errors occurred comparing output.
status: exit status: 0
command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustdoc" "/checkout/src/test/rustdoc-ui/coverage/doc-examples.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Ccodegen-units=1" "-Zui-testing" "-Zdeduplicate-diagnostics=no" "-Zemit-future-incompat-report" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/coverage/doc-examples" "-Cdebuginfo=0" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-Z" "unstable-options" "--show-coverage" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/coverage/doc-examples/auxiliary"
------------------------------------------
------------------------------------------
+-------------------------------------+------------+------------+------------+------------+
| File                                | Documented | Percentage |   Examples | Percentage |
+-------------------------------------+------------+------------+------------+------------+
| ...tdoc-ui/coverage/doc-examples.rs |          4 |     100.0% |          1 |      25.0% |
+-------------------------------------+------------+------------+------------+------------+
| Total                               |          4 |     100.0% |          1 |      25.0% |
+-------------------------------------+------------+------------+------------+------------+
------------------------------------------
stderr:
------------------------------------------
------------------------------------------
!!!! [TypeWithKind { ty: RenderType { name: Some("foo"), generics: None }, kind: Struct }]
!!!! [TypeWithKind { ty: RenderType { name: Some("u32"), generics: None }, kind: Primitive }]
!!!! [TypeWithKind { ty: RenderType { name: Some("bar"), generics: None }, kind: Trait }]
!!!! [TypeWithKind { ty: RenderType { name: Some("debug"), generics: None }, kind: Trait }]
------------------------------------------


---- [ui] rustdoc-ui/coverage/basic.rs stdout ----
---
To only update this specific test, also pass `--test-args coverage/basic.rs`

error: 1 errors occurred comparing output.
status: exit status: 0
command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustdoc" "/checkout/src/test/rustdoc-ui/coverage/basic.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Ccodegen-units=1" "-Zui-testing" "-Zdeduplicate-diagnostics=no" "-Zemit-future-incompat-report" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/coverage/basic" "-Cdebuginfo=0" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-Z" "unstable-options" "--show-coverage" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/coverage/basic/auxiliary"
------------------------------------------
------------------------------------------
+-------------------------------------+------------+------------+------------+------------+
| File                                | Documented | Percentage |   Examples | Percentage |
+-------------------------------------+------------+------------+------------+------------+
| ...est/rustdoc-ui/coverage/basic.rs |          7 |      50.0% |          0 |       0.0% |
+-------------------------------------+------------+------------+------------+------------+
| Total                               |          7 |      50.0% |          0 |       0.0% |
+-------------------------------------+------------+------------+------------+------------+
------------------------------------------
stderr:
------------------------------------------
!!!! []
---
To only update this specific test, also pass `--test-args coverage/traits.rs`

error: 1 errors occurred comparing output.
status: exit status: 0
command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustdoc" "/checkout/src/test/rustdoc-ui/coverage/traits.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Ccodegen-units=1" "-Zui-testing" "-Zdeduplicate-diagnostics=no" "-Zemit-future-incompat-report" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/coverage/traits" "-Cdebuginfo=0" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-Z" "unstable-options" "--show-coverage" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/coverage/traits/auxiliary"
------------------------------------------
------------------------------------------
+-------------------------------------+------------+------------+------------+------------+
| File                                | Documented | Percentage |   Examples | Percentage |
+-------------------------------------+------------+------------+------------+------------+
| ...st/rustdoc-ui/coverage/traits.rs |          8 |      88.9% |          0 |       0.0% |
+-------------------------------------+------------+------------+------------+------------+
| Total                               |          8 |      88.9% |          0 |       0.0% |
+-------------------------------------+------------+------------+------------+------------+
------------------------------------------
stderr:
------------------------------------------
!!!! []
---
To only update this specific test, also pass `--test-args deref-generic.rs`

error: 1 errors occurred comparing output.
status: exit status: 0
command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustdoc" "/checkout/src/test/rustdoc-ui/deref-generic.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Ccodegen-units=1" "-Zui-testing" "-Zdeduplicate-diagnostics=no" "-Zemit-future-incompat-report" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/deref-generic" "-Cdebuginfo=0" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/deref-generic/auxiliary"
------------------------------------------

------------------------------------------
stderr:
---
To only update this specific test, also pass `--test-args doc-include-suggestion.rs`

error: 1 errors occurred comparing output.
status: exit status: 0
command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustdoc" "/checkout/src/test/rustdoc-ui/doc-include-suggestion.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Ccodegen-units=1" "-Zui-testing" "-Zdeduplicate-diagnostics=no" "-Zemit-future-incompat-report" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/doc-include-suggestion" "-Cdebuginfo=0" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/doc-include-suggestion/auxiliary"
------------------------------------------

------------------------------------------
stderr:
stderr:
------------------------------------------
warning: unknown `doc` attribute `include`
   |
   |
LL | #[doc(include = "external-cross-doc.md")]
   | ------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-- help: use `doc = include_str!` instead: `#[doc = include_str!("external-cross-doc.md")]`
   = note: `#[warn(invalid_doc_attributes)]` on by default
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>

---
To only update this specific test, also pass `--test-args error-in-impl-trait/const-generics.rs`

error: 1 errors occurred comparing output.
status: exit status: 0
command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustdoc" "/checkout/src/test/rustdoc-ui/error-in-impl-trait/const-generics.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Ccodegen-units=1" "-Zui-testing" "-Zdeduplicate-diagnostics=no" "-Zemit-future-incompat-report" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/error-in-impl-trait/const-generics" "-Cdebuginfo=0" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--edition=2018" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/error-in-impl-trait/const-generics/auxiliary"
------------------------------------------

------------------------------------------
stderr:
---
---- [ui] rustdoc-ui/ignore-block-help.rs stdout ----
diff of stderr:

15    |     ^^^
16    = note: error from rustc: character literal may only contain one codepoint
+ !!!! []
+ !!!! []
+ !!!! []
+ !!!! []
---
To only update this specific test, also pass `--test-args ignore-block-help.rs`

error: 1 errors occurred comparing output.
status: exit status: 0
command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustdoc" "/checkout/src/test/rustdoc-ui/ignore-block-help.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Ccodegen-units=1" "-Zui-testing" "-Zdeduplicate-diagnostics=no" "-Zemit-future-incompat-report" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/ignore-block-help" "-Cdebuginfo=0" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/rustdoc-ui/ignore-block-help/auxiliary"
------------------------------------------

------------------------------------------
stderr:
stderr:
------------------------------------------
warning: could not parse code block as Rust code
  --> /checkout/src/test/rustdoc-ui/ignore-block-help.rs:3:5
   |
LL |   /// 