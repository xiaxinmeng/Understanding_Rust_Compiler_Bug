\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/traits/trait-item-privacy.rs","byte_start":2802,"byte_end":2806,"line_start":111,"line_end":111,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    C::A; //~ ERROR associated constant `A` is private","highlight_start":5,"highlight_end":9}],"label":"the trait `assoc_const::A` is not implemented for `dyn assoc_const::C`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required by `assoc_const::A::A`","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/traits/trait-item-privacy.rs","byte_start":789,"byte_end":805,"line_start":35,"line_end":35,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        const A: u8 = 0;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"error[E0277]: the trait bound `dyn assoc_const::C: assoc_const::A` is not satisfied\n  --> /checkout/src/test/ui/traits/trait-item-privacy.rs:111:5\n   |\nLL |     C::A; //~ ERROR associated constant `A` is private\n   |     ^^^^ the trait `assoc_const::A` is not implemented for `dyn assoc_const::C`\n   |\nnote: required by `assoc_const::A::A`\n  --> /checkout/src/test/ui/traits/trait-item-privacy.rs:35:9\n   |\nLL |         const A: u8 = 0;\n   |         ^^^^^^^^^^^^^^^^\n\n"}
[00:47:07] {"message":"the trait bound `dyn assoc_const::C: assoc_const::B` is not satisfied","code":{"codees. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n