\n\nFor more information about casts, take a look at The Book:\nhttps://doc.rust-lang.org/book/first-edition/casting-between-types.html\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/mismatched_types/cast-rfc0401.rs","byte_start":1029,"byte_end":1037,"line_start":39,"line_end":39,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let _ = v as &u8; //~ ERROR non-primitive cast","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an `as` expression can only be used to convert between primitive types. Consider using the `From` trait","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0605]: non-primitive cast: `*const u8` as `&u8`\n  --> /checkout/src/test/ui/mismatched_types/cast-rfc0401.rs:39:13\n   |\nLL |     let _ = v as &u8; //~ ERROR non-primitive cast\n   |             ^^^^^^^^\n   |\n   = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n\n"}
[00:48:08] {"message":"non-primitive cast: `*age":"non-primitive cast: `*const u8` as `fn()`","code":{"code":"E0605","explanation":"\nAn invalid cast was attempted.\n\nErroneous code examples:\n\n