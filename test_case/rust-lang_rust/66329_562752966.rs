plain
2019-12-06T21:04:06.4054995Z ##[command]git remote add origin https://github.com/rust-lang/rust
2019-12-06T21:04:06.4204040Z ##[command]git config gc.auto 0
2019-12-06T21:04:06.4265755Z ##[command]git config --get-all http.https://github.com/rust-lang/rust.extraheader
2019-12-06T21:04:06.4311539Z ##[command]git config --get-all http.proxy
2019-12-06T21:04:06.4428471Z ##[command]git -c http.extraheader="AUTHORIZATION: basic ***" fetch --force --tags --prune --progress --no-recurse-submodules --depth=2 origin +refs/heads/*:refs/remotes/origin/* +refs/pull/66329/merge:refs/remotes/pull/66329/merge
---
2019-12-06T21:52:11.1844060Z .................................................................................................... 1600/9327
2019-12-06T21:52:14.8746845Z .................................................................................................... 1700/9327
2019-12-06T21:52:24.7810125Z ...........................................i........................................................ 1800/9327
2019-12-06T21:52:31.1937435Z .................................................................................................... 1900/9327
2019-12-06T21:52:42.4859396Z ............................iiiii................................................................... 2000/9327
2019-12-06T21:52:50.4029962Z .................................................................................................... 2200/9327
2019-12-06T21:52:52.3703057Z .................................................................................................... 2300/9327
2019-12-06T21:52:55.9037818Z .................................................................................................... 2400/9327
2019-12-06T21:53:13.2542173Z .................................................................................................... 2500/9327
---
2019-12-06T21:55:18.3310111Z .............................i...............i...................................................... 4800/9327
2019-12-06T21:55:26.1792109Z .................................................................................................... 4900/9327
2019-12-06T21:55:31.3929044Z .................................................................................................... 5000/9327
2019-12-06T21:55:36.5841571Z .................................................................................................... 5100/9327
2019-12-06T21:55:43.5828105Z ......................................ii.ii...........i............................................. 5200/9327
2019-12-06T21:55:50.9909226Z .................................................................................................... 5400/9327
2019-12-06T21:55:58.4410211Z .................................................................................................... 5500/9327
2019-12-06T21:56:04.3858495Z ....................i............................................................................... 5600/9327
2019-12-06T21:56:09.2707703Z .................................................................................................... 5700/9327
2019-12-06T21:56:09.2707703Z .................................................................................................... 5700/9327
2019-12-06T21:56:18.3923587Z .................................................................................................... 5800/9327
2019-12-06T21:56:27.7084822Z ......ii...i..ii...........i........................................................................ 5900/9327
2019-12-06T21:56:41.8107801Z .................................................................................................... 6100/9327
2019-12-06T21:56:48.0552855Z .................................................................................................... 6200/9327
2019-12-06T21:56:48.0552855Z .................................................................................................... 6200/9327
2019-12-06T21:56:59.9339646Z .............................i..ii.................................................................. 6300/9327
2019-12-06T21:57:15.7080646Z .................................................................................................... 6500/9327
2019-12-06T21:57:17.3345102Z .i.................................................................................................. 6600/9327
2019-12-06T21:57:19.0822723Z ............................................................................................i....... 6700/9327
2019-12-06T21:57:21.2061179Z .................................................................................................... 6800/9327
---
2019-12-06T21:58:39.7987943Z .................................................................................................... 7400/9327
2019-12-06T21:58:44.0432017Z .................................................................................................... 7500/9327
2019-12-06T21:58:49.1370624Z .................................................................................................... 7600/9327
2019-12-06T21:58:57.8808628Z .................................................................................................... 7700/9327
2019-12-06T21:59:02.9136738Z .....iiii........................................................................................... 7800/9327
2019-12-06T21:59:14.7138654Z .................................................................................................... 8000/9327
2019-12-06T21:59:23.9206538Z .................................................................................................... 8100/9327
2019-12-06T21:59:34.0968090Z .................................................................................................... 8200/9327
2019-12-06T21:59:39.0288474Z .................................................................................................... 8300/9327
---
2019-12-06T22:01:25.4227831Z running 68 tests
2019-12-06T22:01:30.3111705Z ........................................F............F....F.....FF..
2019-12-06T22:01:30.3112170Z failures:
2019-12-06T22:01:30.3112254Z 
2019-12-06T22:01:30.3112546Z ---- [mir-opt] mir-opt/issue-62289.rs stdout ----
2019-12-06T22:01:30.3112591Z [ERROR compiletest::runtest] Some("    bb2: {")
2019-12-06T22:01:30.3112856Z thread '[mir-opt] mir-opt/issue-62289.rs' panicked at 'Did not find expected line, error: Mismatch in lines
2019-12-06T22:01:30.3112899Z Current block:     bb2: {
2019-12-06T22:01:30.3113115Z Actual Line: "        switchInt(move _5) -> [0isize: bb9, otherwise: bb4];"
2019-12-06T22:01:30.3113349Z Expected Line: "        switchInt(move _5) -> [0isize: bb10, 1isize: bb5, otherwise: bb4];"
2019-12-06T22:01:30.3113390Z Test Name: rustc.test.ElaborateDrops.before.mir
2019-12-06T22:01:30.3113474Z ... (elided)
2019-12-06T22:01:30.3113474Z ... (elided)
2019-12-06T22:01:30.3113658Z fn test() -> std::option::Option<std::boxed::Box<u32>> {
2019-12-06T22:01:30.3113695Z ... (elided)
2019-12-06T22:01:30.3113744Z     bb0: {
2019-12-06T22:01:30.3113778Z         StorageLive(_1);
2019-12-06T22:01:30.3113983Z         StorageLive(_2);
2019-12-06T22:01:30.3114030Z         _2 = Box(u32);
2019-12-06T22:01:30.3114082Z         StorageLive(_3);
2019-12-06T22:01:30.3114331Z         StorageLive(_4);
2019-12-06T22:01:30.3114367Z         _4 = std::option::Option::<u32>::None;
2019-12-06T22:01:30.3114882Z         _3 = const <std::option::Option<u32> as std::ops::Try>::into_result(move _4) -> [return: bb2, unwind: bb3];
2019-12-06T22:01:30.3114927Z     }
2019-12-06T22:01:30.3114963Z     bb1 (cleanup): {
2019-12-06T22:01:30.3115016Z         resume;
2019-12-06T22:01:30.3115086Z     bb2: {
2019-12-06T22:01:30.3115319Z         StorageDead(_4);
2019-12-06T22:01:30.3115375Z         _5 = discriminant(_3);
2019-12-06T22:01:30.3115375Z         _5 = discriminant(_3);
2019-12-06T22:01:30.3115602Z         switchInt(move _5) -> [0isize: bb10, 1isize: bb5, otherwise: bb4];
2019-12-06T22:01:30.3115643Z     }
2019-12-06T22:01:30.3115697Z     bb3 (cleanup): {
2019-12-06T22:01:30.3115875Z         drop(_2) -> bb1;
2019-12-06T22:01:30.3115965Z     bb4: {
2019-12-06T22:01:30.3116269Z         unreachable;
2019-12-06T22:01:30.3116308Z     }
2019-12-06T22:01:30.3116343Z     bb5: {
2019-12-06T22:01:30.3116343Z     bb5: {
2019-12-06T22:01:30.3116398Z         StorageLive(_6);
2019-12-06T22:01:30.3116438Z         _6 = ((_3 as Err).0: std::option::NoneError);
2019-12-06T22:01:30.3116478Z         StorageLive(_8);
2019-12-06T22:01:30.3116532Z         StorageLive(_9);
2019-12-06T22:01:30.3116569Z         _9 = _6;
2019-12-06T22:01:30.3116884Z         _8 = const <std::option::NoneError as std::convert::From<std::option::NoneError>>::from(move _9) -> [return: bb7, unwind: bb3];
2019-12-06T22:01:30.3116989Z     bb6: {
2019-12-06T22:01:30.3117025Z         return;
2019-12-06T22:01:30.3117060Z     }
2019-12-06T22:01:30.3117112Z     bb7: {
2019-12-06T22:01:30.3117112Z     bb7: {
2019-12-06T22:01:30.3117147Z         StorageDead(_9);
2019-12-06T22:01:30.3117435Z         _0 = const <std::option::Option<std::boxed::Box<u32>> as std::ops::Try>::from_error(move _8) -> [return: bb8, unwind: bb3];
2019-12-06T22:01:30.3117543Z     bb8: {
2019-12-06T22:01:30.3117585Z         StorageDead(_8);
2019-12-06T22:01:30.3117808Z         StorageDead(_6);
2019-12-06T22:01:30.3117808Z         StorageDead(_6);
2019-12-06T22:01:30.3118137Z         drop(_2) -> bb9;
2019-12-06T22:01:30.3118204Z     bb9: {
2019-12-06T22:01:30.3118256Z         StorageDead(_2);
2019-12-06T22:01:30.3118291Z         StorageDead(_1);
2019-12-06T22:01:30.3118324Z         StorageDead(_3);
2019-12-06T22:01:30.3118324Z         StorageDead(_3);
2019-12-06T22:01:30.3118663Z         goto -> bb6;
2019-12-06T22:01:30.3118872Z     }
2019-12-06T22:01:30.3118904Z     bb10: {
2019-12-06T22:01:30.3118954Z         StorageLive(_10);
2019-12-06T22:01:30.3118990Z         _10 = ((_3 as Ok).0: u32);
2019-12-06T22:01:30.3119025Z         (*_2) = _10;
2019-12-06T22:01:30.3119057Z         StorageDead(_10);
2019-12-06T22:01:30.3119109Z         _1 = move _2;
2019-12-06T22:01:30.3119290Z         drop(_2) -> [return: bb12, unwind: bb11];
2019-12-06T22:01:30.3119326Z     }
2019-12-06T22:01:30.3119374Z     bb11 (cleanup): {
2019-12-06T22:01:30.3119530Z         drop(_1) -> bb1;
2019-12-06T22:01:30.3119606Z     bb12: {
2019-12-06T22:01:30.3119656Z         StorageDead(_2);
2019-12-06T22:01:30.3119656Z         StorageDead(_2);
2019-12-06T22:01:30.3119693Z         _0 = std::option::Option::<std::boxed::Box<u32>>::Some(move _1,);
2019-12-06T22:01:30.3119853Z         drop(_1) -> bb13;
2019-12-06T22:01:30.3119935Z     bb13: {
2019-12-06T22:01:30.3119967Z         StorageDead(_1);
2019-12-06T22:01:30.3120016Z         StorageDead(_3);
2019-12-06T22:01:30.3120168Z         goto -> bb6;
2019-12-06T22:01:30.3120168Z         goto -> bb6;
2019-12-06T22:01:30.3120201Z     }
2019-12-06T22:01:30.3120231Z }
2019-12-06T22:01:30.3120280Z Actual:
2019-12-06T22:01:30.3120462Z fn  test() -> std::option::Option<std::boxed::Box<u32>> {
2019-12-06T22:01:30.3120503Z     let mut _0: std::option::Option<std::boxed::Box<u32>>;
2019-12-06T22:01:30.3120558Z     let mut _1: std::boxed::Box<u32>;
2019-12-06T22:01:30.3120593Z     let mut _2: std::boxed::Box<u32>;
2019-12-06T22:01:30.3120630Z     let mut _3: std::result::Result<u32, std::option::NoneError>;
2019-12-06T22:01:30.3123650Z     let mut _4: std::option::Option<u32>;
2019-12-06T22:01:30.3123717Z     let mut _5: isize;
2019-12-06T22:01:30.3123841Z     let mut _7: !;
2019-12-06T22:01:30.3123876Z     let mut _8: std::option::NoneError;
2019-12-06T22:01:30.3123910Z     let mut _9: std::option::NoneError;
2019-12-06T22:01:30.3123943Z     let _10: u32;
---
2019-12-06T22:01:30.3124236Z         debug val => _10;
2019-12-06T22:01:30.3124285Z         scope 4 {
2019-12-06T22:01:30.3124316Z         }
2019-12-06T22:01:30.3124346Z     }
2019-12-06T22:01:30.3124401Z     bb0: {
2019-12-06T22:01:30.3125243Z         StorageLive(_1);
2019-12-06T22:01:30.3125283Z         StorageLive(_2);
2019-12-06T22:01:30.3125498Z         _2 = Box(u32);
2019-12-06T22:01:30.3125556Z         StorageLive(_3);
2019-12-06T22:01:30.3125764Z         StorageLive(_4);
2019-12-06T22:01:30.3126364Z         _4 = std::option::Option::<u32>::None;
2019-12-06T22:01:30.3126907Z         _3 = const <std::option::Option<u32> as std::ops::Try>::into_result(move _4) -> [return: bb2, unwind: bb3];
2019-12-06T22:01:30.3126953Z     }
2019-12-06T22:01:30.3126986Z     bb1 (cleanup): {
2019-12-06T22:01:30.3127040Z         resume;
2019-12-06T22:01:30.3127105Z     bb2: {
2019-12-06T22:01:30.3127156Z         StorageDead(_4);
2019-12-06T22:01:30.3127192Z         _5 = discriminant(_3);
2019-12-06T22:01:30.3127192Z         _5 = discriminant(_3);
2019-12-06T22:01:30.3127402Z         switchInt(move _5) -> [0isize: bb9, otherwise: bb4];
2019-12-06T22:01:30.3127441Z     }
2019-12-06T22:01:30.3127493Z     bb3 (cleanup): {
2019-12-06T22:01:30.3127661Z         drop(_2) -> bb1;
2019-12-06T22:01:30.3127745Z     bb4: {
2019-12-06T22:01:30.3127796Z         StorageLive(_6);
2019-12-06T22:01:30.3127796Z         StorageLive(_6);
2019-12-06T22:01:30.3127833Z         _6 = ((_3 as Err).0: std::option::NoneError);
2019-12-06T22:01:30.3127869Z         StorageLive(_8);
2019-12-06T22:01:30.3127921Z         StorageLive(_9);
2019-12-06T22:01:30.3127955Z         _9 = _6;
2019-12-06T22:01:30.3128222Z         _8 = const <std::option::NoneError as std::convert::From<std::option::NoneError>>::from(move _9) -> [return: bb6, unwind: bb3];
2019-12-06T22:01:30.3128317Z     bb5: {
2019-12-06T22:01:30.3128350Z         return;
2019-12-06T22:01:30.3128401Z     }
2019-12-06T22:01:30.3128433Z     bb6: {
2019-12-06T22:01:30.3128433Z     bb6: {
2019-12-06T22:01:30.3128467Z         StorageDead(_9);
2019-12-06T22:01:30.3128903Z         _0 = const <std::option::Option<std::boxed::Box<u32>> as std::ops::Try>::from_error(move _8) -> [return: bb7, unwind: bb3];
2019-12-06T22:01:30.3128976Z     bb7: {
2019-12-06T22:01:30.3129008Z         StorageDead(_8);
2019-12-06T22:01:30.3129060Z         StorageDead(_6);
2019-12-06T22:01:30.3129060Z         StorageDead(_6);
2019-12-06T22:01:30.3129234Z         drop(_2) -> bb8;
2019-12-06T22:01:30.3129317Z     bb8: {
2019-12-06T22:01:30.3129350Z         StorageDead(_2);
2019-12-06T22:01:30.3129383Z         StorageDead(_1);
2019-12-06T22:01:30.3129415Z         StorageDead(_3);
2019-12-06T22:01:30.3129415Z         StorageDead(_3);
2019-12-06T22:01:30.3129593Z         goto -> bb5;
2019-12-06T22:01:30.3129627Z     }
2019-12-06T22:01:30.3129658Z     bb9: {
2019-12-06T22:01:30.3129709Z         StorageLive(_10);
2019-12-06T22:01:30.3129745Z         _10 = ((_3 as Ok).0: u32);
2019-12-06T22:01:30.3129780Z         (*_2) = _10;
2019-12-06T22:01:30.3129831Z         StorageDead(_10);
2019-12-06T22:01:30.3129865Z         _1 = move _2;
2019-12-06T22:01:30.3130053Z         drop(_2) -> [return: bb11, unwind: bb10];
2019-12-06T22:01:30.3130088Z     }
2019-12-06T22:01:30.3130141Z     bb10 (cleanup): {
2019-12-06T22:01:30.3130486Z         drop(_1) -> bb1;
2019-12-06T22:01:30.3130571Z     bb11: {
2019-12-06T22:01:30.3130620Z         StorageDead(_2);
2019-12-06T22:01:30.3130620Z         StorageDead(_2);
2019-12-06T22:01:30.3130660Z         _0 = std::option::Option::<std::boxed::Box<u32>>::Some(move _1,);
2019-12-06T22:01:30.3130848Z         drop(_1) -> bb12;
2019-12-06T22:01:30.3130914Z     bb12: {
2019-12-06T22:01:30.3130947Z         StorageDead(_1);
2019-12-06T22:01:30.3130999Z         StorageDead(_3);
2019-12-06T22:01:30.3131159Z         goto -> bb5;
2019-12-06T22:01:30.3131159Z         goto -> bb5;
2019-12-06T22:01:30.3131194Z     }
2019-12-06T22:01:30.3131396Z }', src/tools/compiletest/src/runtest.rs:3328:13
2019-12-06T22:01:30.3131441Z note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.
2019-12-06T22:01:30.3131471Z 
2019-12-06T22:01:30.3131665Z ---- [mir-opt] mir-opt/simplify-arm-identity.rs stdout ----
2019-12-06T22:01:30.3131724Z [ERROR compiletest::runtest] None
2019-12-06T22:01:30.3131965Z thread '[mir-opt] mir-opt/simplify-arm-identity.rs' panicked at 'Did not find expected line, error: Mismatch in lines
2019-12-06T22:01:30.3132009Z Current block: None
2019-12-06T22:01:30.3132720Z Actual Line: "        switchInt(move _3) -> [0isize: bb2, otherwise: bb1];"
2019-12-06T22:01:30.3132978Z Expected Line: "        switchInt(move _3) -> [0isize: bb3, 1isize: bb1, otherwise: bb2];"
2019-12-06T22:01:30.3133024Z Test Name: rustc.main.SimplifyArmIdentity.before.mir
2019-12-06T22:01:30.3133116Z ... (elided)
2019-12-06T22:01:30.3133435Z fn main() -> () {
2019-12-06T22:01:30.3133491Z ... (elided)
2019-12-06T22:01:30.3133524Z     bb0: {
2019-12-06T22:01:30.3133524Z     bb0: {
2019-12-06T22:01:30.3133558Z         StorageLive(_1);
2019-12-06T22:01:30.3133593Z         ((_1 as Foo).0: u8) = const 0u8;
2019-12-06T22:01:30.3133647Z         discriminant(_1) = 0;
2019-12-06T22:01:30.3133681Z         StorageLive(_2);
2019-12-06T22:01:30.3133716Z         _3 = discriminant(_1);
2019-12-06T22:01:30.3133954Z         switchInt(move _3) -> [0isize: bb3, 1isize: bb1, otherwise: bb2];
2019-12-06T22:01:30.3134025Z     bb1: {
2019-12-06T22:01:30.3134025Z     bb1: {
2019-12-06T22:01:30.3134085Z         ((_2 as Foo).0: u8) = const 0u8;
2019-12-06T22:01:30.3134128Z         discriminant(_2) = 0;
2019-12-06T22:01:30.3134292Z         goto -> bb4;
2019-12-06T22:01:30.3134378Z ... (elided)
2019-12-06T22:01:30.3134412Z     bb3: {
2019-12-06T22:01:30.3134412Z     bb3: {
2019-12-06T22:01:30.3134446Z         _4 = ((_1 as Foo).0: u8);
2019-12-06T22:01:30.3134501Z         ((_2 as Foo).0: u8) = move _4;
2019-12-06T22:01:30.3134712Z         discriminant(_2) = 0;
2019-12-06T22:01:30.3134882Z         goto -> bb4;
2019-12-06T22:01:30.3134970Z ... (elided)
2019-12-06T22:01:30.3135004Z }
2019-12-06T22:01:30.3135038Z Actual:
2019-12-06T22:01:30.3135092Z | User Type Annotations
2019-12-06T22:01:30.3135092Z | User Type Annotations
2019-12-06T22:01:30.3135361Z | 0: Canonical { max_universe: U0, variables: [], value: Ty(Src) } at /checkout/src/test/mir-opt/simplify-arm-identity.rs:16:12: 16:15
2019-12-06T22:01:30.3141895Z | 1: Canonical { max_universe: U0, variables: [], value: Ty(Src) } at /checkout/src/test/mir-opt/simplify-arm-identity.rs:16:12: 16:15
2019-12-06T22:01:30.3142284Z | 2: Canonical { max_universe: U0, variables: [], value: Ty(Dst) } at /checkout/src/test/mir-opt/simplify-arm-identity.rs:17:12: 17:15
2019-12-06T22:01:30.3142742Z | 3: Canonical { max_universe: U0, variables: [], value: Ty(Dst) } at /checkout/src/test/mir-opt/simplify-arm-identity.rs:17:12: 17:15
2019-12-06T22:01:30.3143159Z fn  main() -> () {
2019-12-06T22:01:30.3143201Z     let mut _0: ();
2019-12-06T22:01:30.3143201Z     let mut _0: ();
2019-12-06T22:01:30.3143245Z     let _1: Src as UserTypeProjection { base: UserType(0), projs: [] };
2019-12-06T22:01:30.3143305Z     let mut _2: Dst;
2019-12-06T22:01:30.3143344Z     let mut _3: isize;
2019-12-06T22:01:30.3143382Z     let mut _5: u8;
2019-12-06T22:01:30.3143475Z         debug e => _1;
2019-12-06T22:01:30.3143513Z         let _4: u8;
2019-12-06T22:01:30.3143550Z         scope 2 {
2019-12-06T22:01:30.3143604Z         }
2019-12-06T22:01:30.3143604Z         }
2019-12-06T22:01:30.3143640Z         scope 3 {
2019-12-06T22:01:30.3143679Z             debug x => _4;
2019-12-06T22:01:30.3143749Z         }
2019-12-06T22:01:30.3143784Z     }
2019-12-06T22:01:30.3143820Z     bb0: {
2019-12-06T22:01:30.3143859Z         StorageLive(_1);
2019-12-06T22:01:30.3143920Z         ((_1 as Foo).0: u8) = const 0u8;
2019-12-06T22:01:30.3143960Z         discriminant(_1) = 0;
2019-12-06T22:01:30.3143999Z         StorageLive(_2);
2019-12-06T22:01:30.3144056Z         _3 = discriminant(_1);
2019-12-06T22:01:30.3144463Z         switchInt(move _3) -> [0isize: bb2, otherwise: bb1];
2019-12-06T22:01:30.3144564Z     bb1: {
2019-12-06T22:01:30.3144564Z     bb1: {
2019-12-06T22:01:30.3144604Z         ((_2 as Foo).0: u8) = const 0u8;
2019-12-06T22:01:30.3144646Z         discriminant(_2) = 0;
2019-12-06T22:01:30.3144834Z         goto -> bb3;
2019-12-06T22:01:30.3144931Z     bb2: {
2019-12-06T22:01:30.3144931Z     bb2: {
2019-12-06T22:01:30.3144970Z         _4 = ((_1 as Foo).0: u8);
2019-12-06T22:01:30.3145031Z         ((_2 as Foo).0: u8) = move _4;
2019-12-06T22:01:30.3145073Z         discriminant(_2) = 0;
2019-12-06T22:01:30.3145675Z         goto -> bb3;
2019-12-06T22:01:30.3145780Z     bb3: {
2019-12-06T22:01:30.3145817Z         StorageDead(_2);
2019-12-06T22:01:30.3145855Z         StorageDead(_1);
2019-12-06T22:01:30.3146107Z         return;
2019-12-06T22:01:30.3146107Z         return;
2019-12-06T22:01:30.3151743Z     }
2019-12-06T22:01:30.3152088Z }', src/tools/compiletest/src/runtest.rs:3328:13
2019-12-06T22:01:30.3152122Z 
2019-12-06T22:01:30.3152344Z ---- [mir-opt] mir-opt/simplify_try.rs stdout ----
2019-12-06T22:01:30.3152388Z [ERROR compiletest::runtest] Some("    bb0: {")
2019-12-06T22:01:30.3152629Z thread '[mir-opt] mir-opt/simplify_try.rs' panicked at 'Did not find expected line, error: Mismatch in lines
2019-12-06T22:01:30.3152693Z Current block:     bb0: {
2019-12-06T22:01:30.3152908Z Actual Line: "        switchInt(move _5) -> [0isize: bb3, otherwise: bb1];"
2019-12-06T22:01:30.3153140Z Expected Line: "        switchInt(move _5) -> [0isize: bb4, 1isize: bb2, otherwise: bb1];"
2019-12-06T22:01:30.3153235Z Test Name: rustc.try_identity.SimplifyArmIdentity.before.mir
2019-12-06T22:01:30.3153307Z ... (elided)
2019-12-06T22:01:30.3153307Z ... (elided)
2019-12-06T22:01:30.3153555Z fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {
2019-12-06T22:01:30.3153600Z     debug x => _1;
2019-12-06T22:01:30.3153639Z     let mut _0: std::result::Result<u32, i32>;
2019-12-06T22:01:30.3153697Z     let _2: u32;
2019-12-06T22:01:30.3153736Z     let mut _3: std::result::Result<u32, i32>;
2019-12-06T22:01:30.3153775Z     let mut _4: std::result::Result<u32, i32>;
2019-12-06T22:01:30.3153811Z     let mut _5: isize;
2019-12-06T22:01:30.3153866Z     let _6: i32;
2019-12-06T22:01:30.3153901Z     let mut _7: !;
2019-12-06T22:01:30.3153936Z     let mut _8: i32;
2019-12-06T22:01:30.3153989Z     let mut _9: i32;
2019-12-06T22:01:30.3154024Z     let _10: u32;
2019-12-06T22:01:30.3154059Z     let mut _11: u32;
2019-12-06T22:01:30.3154146Z         debug y => _10;
2019-12-06T22:01:30.3154192Z     }
2019-12-06T22:01:30.3154225Z     scope 2 {
2019-12-06T22:01:30.3154281Z         debug err => _6;
---
2019-12-06T22:01:30.3155197Z     }
2019-12-06T22:01:30.3179561Z     scope 6 {
2019-12-06T22:01:30.3179652Z         debug self => _1;
2019-12-06T22:01:30.3179688Z     }
2019-12-06T22:01:30.3179722Z     bb0: {
2019-12-06T22:01:30.3179834Z         _5 = discriminant(_1);
2019-12-06T22:01:30.3180223Z         switchInt(move _5) -> [0isize: bb4, 1isize: bb2, otherwise: bb1];
2019-12-06T22:01:30.3180297Z     bb1: {
2019-12-06T22:01:30.3180350Z         unreachable;
2019-12-06T22:01:30.3180382Z     }
2019-12-06T22:01:30.3180413Z     bb2: {
2019-12-06T22:01:30.3180413Z     bb2: {
2019-12-06T22:01:30.3180464Z         _6 = ((_1 as Err).0: i32);
2019-12-06T22:01:30.3180501Z         ((_0 as Err).0: i32) = move _6;
2019-12-06T22:01:30.3180536Z         discriminant(_0) = 1;
2019-12-06T22:01:30.3182174Z         goto -> bb3;
2019-12-06T22:01:30.3182261Z     bb3: {
2019-12-06T22:01:30.3182296Z         return;
2019-12-06T22:01:30.3182350Z     }
2019-12-06T22:01:30.3182384Z     bb4: {
2019-12-06T22:01:30.3182384Z     bb4: {
2019-12-06T22:01:30.3182421Z         _10 = ((_1 as Ok).0: u32);
2019-12-06T22:01:30.3182477Z         ((_0 as Ok).0: u32) = move _10;
2019-12-06T22:01:30.3182516Z         discriminant(_0) = 0;
2019-12-06T22:01:30.3182814Z         goto -> bb3;
2019-12-06T22:01:30.3183120Z }
2019-12-06T22:01:30.3183154Z Actual:
2019-12-06T22:01:30.3183154Z Actual:
2019-12-06T22:01:30.3183417Z fn  try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {
2019-12-06T22:01:30.3183575Z     debug x => _1;
2019-12-06T22:01:30.3183613Z     let mut _0: std::result::Result<u32, i32>;
2019-12-06T22:01:30.3183651Z     let _2: u32;
2019-12-06T22:01:30.3183707Z     let mut _3: std::result::Result<u32, i32>;
2019-12-06T22:01:30.3183746Z     let mut _4: std::result::Result<u32, i32>;
2019-12-06T22:01:30.3183783Z     let mut _5: isize;
2019-12-06T22:01:30.3183818Z     let _6: i32;
2019-12-06T22:01:30.3183871Z     let mut _7: !;
2019-12-06T22:01:30.3183908Z     let mut _8: i32;
2019-12-06T22:01:30.3183943Z     let mut _9: i32;
2019-12-06T22:01:30.3184147Z     let _10: u32;
2019-12-06T22:01:30.3184183Z     let mut _11: u32;
2019-12-06T22:01:30.3184250Z         debug y => _10;
2019-12-06T22:01:30.3184310Z     }
2019-12-06T22:01:30.3184348Z     scope 2 {
2019-12-06T22:01:30.3184383Z         debug err => _6;
---
2019-12-06T22:01:30.3185566Z     }
2019-12-06T22:01:30.3185599Z     scope 6 {
2019-12-06T22:01:30.3185634Z         debug self => _1;
2019-12-06T22:01:30.3185684Z     }
2019-12-06T22:01:30.3185718Z     bb0: {
2019-12-06T22:01:30.3185760Z         _5 = discriminant(_1);
2019-12-06T22:01:30.3186561Z         switchInt(move _5) -> [0isize: bb3, otherwise: bb1];
2019-12-06T22:01:30.3186645Z     bb1: {
2019-12-06T22:01:30.3186645Z     bb1: {
2019-12-06T22:01:30.3186923Z         _6 = ((_1 as Err).0: i32);
2019-12-06T22:01:30.3186987Z         ((_0 as Err).0: i32) = move _6;
2019-12-06T22:01:30.3187030Z         discriminant(_0) = 1;
2019-12-06T22:01:30.3187223Z         goto -> bb2;
2019-12-06T22:01:30.3187322Z     bb2: {
2019-12-06T22:01:30.3187362Z         return;
2019-12-06T22:01:30.3187400Z     }
2019-12-06T22:01:30.3187457Z     bb3: {
2019-12-06T22:01:30.3187457Z     bb3: {
2019-12-06T22:01:30.3187499Z         _10 = ((_1 as Ok).0: u32);
2019-12-06T22:01:30.3187544Z         ((_0 as Ok).0: u32) = move _10;
2019-12-06T22:01:30.3187774Z         discriminant(_0) = 0;
2019-12-06T22:01:30.3187977Z         goto -> bb2;
2019-12-06T22:01:30.3188266Z }', src/tools/compiletest/src/runtest.rs:3328:13
2019-12-06T22:01:30.3188302Z 
2019-12-06T22:01:30.3194880Z ---- [mir-opt] mir-opt/uninhabited_enum_branching.rs stdout ----
2019-12-06T22:01:30.3194880Z ---- [mir-opt] mir-opt/uninhabited_enum_branching.rs stdout ----
2019-12-06T22:01:30.3195142Z [ERROR compiletest::runtest] Some("bb0: {")
2019-12-06T22:01:30.3196223Z thread '[mir-opt] mir-opt/uninhabited_enum_branching.rs' panicked at 'Did not find expected line, error: Mismatch in lines
2019-12-06T22:01:30.3196287Z Current block: bb0: {
2019-12-06T22:01:30.3196569Z Actual Line: "        switchInt(move _3) -> [0isize: bb2, 1isize: bb3, otherwise: bb1];"
2019-12-06T22:01:30.3196886Z Expected Line: "  switchInt(move _3) -> [0isize: bb3, 1isize: bb4, 2isize: bb1, otherwise: bb2];"
2019-12-06T22:01:30.3196943Z Test Name: rustc.main.UninhabitedEnumBranching.before.mir
2019-12-06T22:01:30.3197050Z ... (elided)
2019-12-06T22:01:30.3197093Z let mut _0: ();
2019-12-06T22:01:30.3197134Z let _1: &str;
2019-12-06T22:01:30.3197176Z let mut _2: Test1;
2019-12-06T22:01:30.3197176Z let mut _2: Test1;
2019-12-06T22:01:30.3197237Z let mut _3: isize;
2019-12-06T22:01:30.3197279Z let _4: &str;
2019-12-06T22:01:30.3197490Z let _5: &str;
2019-12-06T22:01:30.3197606Z let _6: &str;
2019-12-06T22:01:30.3197650Z let mut _7: Test2;
2019-12-06T22:01:30.3197692Z let mut _8: isize;
2019-12-06T22:01:30.3197749Z let _9: &str;
2019-12-06T22:01:30.3197790Z bb0: {
2019-12-06T22:01:30.3197831Z   StorageLive(_1);
2019-12-06T22:01:30.3197872Z   StorageLive(_2);
2019-12-06T22:01:30.3197931Z   _2 = Test1::C;
2019-12-06T22:01:30.3197973Z   _3 = discriminant(_2);
2019-12-06T22:01:30.3198280Z   switchInt(move _3) -> [0isize: bb3, 1isize: bb4, 2isize: bb1, otherwise: bb2];
2019-12-06T22:01:30.3198391Z bb1: {
2019-12-06T22:01:30.3198432Z   StorageLive(_5);
2019-12-06T22:01:30.3198472Z   _5 = const "C";
2019-12-06T22:01:30.3198532Z   _1 = &(*_5);
2019-12-06T22:01:30.3198532Z   _1 = &(*_5);
2019-12-06T22:01:30.3198572Z   StorageDead(_5);
2019-12-06T22:01:30.3198767Z   goto -> bb5;
2019-12-06T22:01:30.3198831Z }
2019-12-06T22:01:30.3198871Z bb2: {
2019-12-06T22:01:30.3198910Z   unreachable;
2019-12-06T22:01:30.3198949Z }
2019-12-06T22:01:30.3199005Z bb3: {
2019-12-06T22:01:30.3199063Z   _1 = const "A(Empty)";
2019-12-06T22:01:30.3199259Z   goto -> bb5;
2019-12-06T22:01:30.3199359Z bb4: {
2019-12-06T22:01:30.3199399Z   StorageLive(_4);
2019-12-06T22:01:30.3199399Z   StorageLive(_4);
2019-12-06T22:01:30.3199609Z   _4 = const "B(Empty)";
2019-12-06T22:01:30.3199666Z   _1 = &(*_4);
2019-12-06T22:01:30.3199705Z   StorageDead(_4);
2019-12-06T22:01:30.3200209Z   goto -> bb5;
2019-12-06T22:01:30.3200292Z bb5: {
2019-12-06T22:01:30.3200325Z   StorageDead(_2);
2019-12-06T22:01:30.3200376Z   StorageDead(_1);
2019-12-06T22:01:30.3200569Z   StorageLive(_6);
2019-12-06T22:01:30.3200569Z   StorageLive(_6);
2019-12-06T22:01:30.3200600Z   StorageLive(_7);
2019-12-06T22:01:30.3200632Z   _7 = Test2::D;
2019-12-06T22:01:30.3200683Z   _8 = discriminant(_7);
2019-12-06T22:01:30.3200885Z   switchInt(move _8) -> [4isize: bb8, 5isize: bb6, otherwise: bb7];
2019-12-06T22:01:30.3200970Z bb6: {
2019-12-06T22:01:30.3201002Z   StorageLive(_9);
2019-12-06T22:01:30.3201035Z   _9 = const "E";
2019-12-06T22:01:30.3201078Z   _6 = &(*_9);
---
2019-12-06T22:01:30.3201806Z   StorageDead(_6);
2019-12-06T22:01:30.3201838Z   _0 = ();
2019-12-06T22:01:30.3201888Z   return;
2019-12-06T22:01:30.3201918Z }
2019-12-06T22:01:30.3201949Z Actual:
2019-12-06T22:01:30.3202125Z fn  main() -> () {
2019-12-06T22:01:30.3202160Z     let mut _0: ();
2019-12-06T22:01:30.3202192Z     let _1: &str;
2019-12-06T22:01:30.3202226Z     let mut _2: Test1;
2019-12-06T22:01:30.3202276Z     let mut _3: isize;
2019-12-06T22:01:30.3202308Z     let _4: &str;
2019-12-06T22:01:30.3202352Z     let _5: &str;
2019-12-06T22:01:30.3202402Z     let _6: &str;
2019-12-06T22:01:30.3202435Z     let mut _7: Test2;
2019-12-06T22:01:30.3202467Z     let mut _8: isize;
2019-12-06T22:01:30.3202517Z     let _9: &str;
2019-12-06T22:01:30.3202548Z     bb0: {
2019-12-06T22:01:30.3202582Z         StorageLive(_1);
2019-12-06T22:01:30.3202615Z         StorageLive(_2);
2019-12-06T22:01:30.3202665Z         _2 = Test1::C;
2019-12-06T22:01:30.3202699Z         _3 = discriminant(_2);
2019-12-06T22:01:30.3202908Z         switchInt(move _3) -> [0isize: bb2, 1isize: bb3, otherwise: bb1];
2019-12-06T22:01:30.3202997Z     bb1: {
2019-12-06T22:01:30.3203029Z         StorageLive(_5);
2019-12-06T22:01:30.3203079Z         _5 = const "C";
2019-12-06T22:01:30.3203114Z         _1 = &(*_5);
2019-12-06T22:01:30.3203114Z         _1 = &(*_5);
2019-12-06T22:01:30.3203147Z         StorageDead(_5);
2019-12-06T22:01:30.3203305Z         goto -> bb4;
2019-12-06T22:01:30.3203357Z     }
2019-12-06T22:01:30.3203388Z     bb2: {
2019-12-06T22:01:30.3203549Z         _1 = const "A(Empty)";
2019-12-06T22:01:30.3203749Z         goto -> bb4;
2019-12-06T22:01:30.3203816Z     bb3: {
2019-12-06T22:01:30.3203848Z         StorageLive(_4);
2019-12-06T22:01:30.3203848Z         StorageLive(_4);
2019-12-06T22:01:30.3203900Z         _4 = const "B(Empty)";
2019-12-06T22:01:30.3203933Z         _1 = &(*_4);
2019-12-06T22:01:30.3203965Z         StorageDead(_4);
2019-12-06T22:01:30.3204142Z         goto -> bb4;
2019-12-06T22:01:30.3204208Z     bb4: {
2019-12-06T22:01:30.3204240Z         StorageDead(_2);
2019-12-06T22:01:30.3204290Z         StorageDead(_1);
2019-12-06T22:01:30.3204322Z         StorageLive(_6);
2019-12-06T22:01:30.3204322Z         StorageLive(_6);
2019-12-06T22:01:30.3204355Z         StorageLive(_7);
2019-12-06T22:01:30.3204404Z         _7 = Test2::D;
2019-12-06T22:01:30.3204438Z         _8 = discriminant(_7);
2019-12-06T22:01:30.3204633Z         switchInt(move _8) -> [4isize: bb6, otherwise: bb5];
2019-12-06T22:01:30.3204719Z     bb5: {
2019-12-06T22:01:30.3204758Z         StorageLive(_9);
2019-12-06T22:01:30.3204797Z         _9 = const "E";
2019-12-06T22:01:30.3204848Z         _6 = &(*_9);
---
2019-12-06T22:01:30.3205612Z         return;
2019-12-06T22:01:30.3205665Z     }
2019-12-06T22:01:30.3205850Z }', src/tools/compiletest/src/runtest.rs:3328:13
2019-12-06T22:01:30.3205879Z 
2019-12-06T22:01:30.3206055Z ---- [mir-opt] mir-opt/unreachable.rs stdout ----
2019-12-06T22:01:30.3206115Z [ERROR compiletest::runtest] None
2019-12-06T22:01:30.3206348Z thread '[mir-opt] mir-opt/unreachable.rs' panicked at 'Did not find expected line, error: Mismatch in lines
2019-12-06T22:01:30.3206396Z Current block: None
2019-12-06T22:01:30.3206453Z Actual Line: "    bb8: {"
2019-12-06T22:01:30.3206485Z Expected Line: " }"
2019-12-06T22:01:30.3206522Z Test Name: rustc.main.UnreachablePropagation.after.mir
2019-12-06T22:01:30.3206607Z ... (elided)
2019-12-06T22:01:30.3206640Z      bb5: {
2019-12-06T22:01:30.3206673Z ... (elided)
2019-12-06T22:01:30.3206724Z          unreachable;
2019-12-06T22:01:30.3206724Z          unreachable;
2019-12-06T22:01:30.3206756Z      }
2019-12-06T22:01:30.3206787Z  }
2019-12-06T22:01:30.3206837Z Actual:
2019-12-06T22:01:30.3206997Z fn  main() -> () {
2019-12-06T22:01:30.3207033Z     let mut _0: ();
2019-12-06T22:01:30.3207069Z     let mut _1: std::option::Option<Empty>;
2019-12-06T22:01:30.3207127Z     let mut _2: isize;
2019-12-06T22:01:30.3207161Z     let _3: Empty;
2019-12-06T22:01:30.3207193Z     let _5: ();
2019-12-06T22:01:30.3207245Z     let mut _6: bool;
2019-12-06T22:01:30.3207290Z     let mut _7: !;
2019-12-06T22:01:30.3207355Z         debug _x => _3;
2019-12-06T22:01:30.3207405Z         let mut _4: i32;
2019-12-06T22:01:30.3207438Z         scope 2 {
2019-12-06T22:01:30.3207438Z         scope 2 {
2019-12-06T22:01:30.3207471Z             debug _y => _4;
2019-12-06T22:01:30.3207554Z     }
2019-12-06T22:01:30.3207585Z     bb0: {
2019-12-06T22:01:30.3207635Z         StorageLive(_1);
2019-12-06T22:01:30.3207635Z         StorageLive(_1);
2019-12-06T22:01:30.3207834Z         _1 = const empty() -> [return: bb2, unwind: bb1];
2019-12-06T22:01:30.3207871Z     }
2019-12-06T22:01:30.3207903Z     bb1 (cleanup): {
2019-12-06T22:01:30.3207955Z         resume;
2019-12-06T22:01:30.3214567Z     bb2: {
2019-12-06T22:01:30.3214567Z     bb2: {
2019-12-06T22:01:30.3214681Z         FakeRead(ForMatchedPlace, _1);
2019-12-06T22:01:30.3214721Z         _2 = discriminant(_1);
2019-12-06T22:01:30.3215278Z         switchInt(move _2) -> [1isize: bb3, otherwise: bb4];
2019-12-06T22:01:30.3215381Z     bb3: {
2019-12-06T22:01:30.3215381Z     bb3: {
2019-12-06T22:01:30.3215830Z         falseEdges -> [real: bb5, imaginary: bb4];
2019-12-06T22:01:30.3216138Z     bb4: {
2019-12-06T22:01:30.3216175Z         _0 = ();
2019-12-06T22:01:30.3216214Z         StorageDead(_1);
2019-12-06T22:01:30.3216270Z         return;
2019-12-06T22:01:30.3216270Z         return;
2019-12-06T22:01:30.3216307Z     }
2019-12-06T22:01:30.3216343Z     bb5: {
2019-12-06T22:01:30.3216381Z         StorageLive(_3);
2019-12-06T22:01:30.3216440Z         _3 = move ((_1 as Some).0: Empty);
2019-12-06T22:01:30.3216480Z         StorageLive(_4);
2019-12-06T22:01:30.3216518Z         StorageLive(_5);
2019-12-06T22:01:30.3216574Z         StorageLive(_6);
2019-12-06T22:01:30.3216612Z         _6 = const true;
2019-12-06T22:01:30.3216652Z         FakeRead(ForMatchedPlace, _6);
2019-12-06T22:01:30.3216879Z         goto -> bb6;
2019-12-06T22:01:30.3216954Z     bb6: {
2019-12-06T22:01:30.3216954Z     bb6: {
2019-12-06T22:01:30.3217611Z         falseEdges -> [real: bb8, imaginary: bb7];
2019-12-06T22:01:30.3217733Z     bb7: {
2019-12-06T22:01:30.3217770Z         _4 = const 42i32;
2019-12-06T22:01:30.3217825Z         _5 = ();
2019-12-06T22:01:30.3217862Z         unreachable;
---
2019-12-06T22:01:30.3220807Z 
2019-12-06T22:01:30.3221048Z thread 'main' panicked at 'Some tests failed', src/tools/compiletest/src/main.rs:537:22
2019-12-06T22:01:30.3221079Z 
2019-12-06T22:01:30.3221117Z 
2019-12-06T22:01:30.3223151Z command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0-tools-bin/compiletest" "--compile-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib" "--run-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib" "--rustc-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "--src-base" "/checkout/src/test/mir-opt" "--build-base" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/mir-opt" "--stage-id" "stage2-x86_64-unknown-linux-gnu" "--mode" "mir-opt" "--target" "x86_64-unknown-linux-gnu" "--host" "x86_64-unknown-linux-gnu" "--llvm-filecheck" "/usr/lib/llvm-7/bin/FileCheck" "--host-rustcflags" "-Crpath -O -Cdebuginfo=0 -Zunstable-options  -Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--target-rustcflags" "-Crpath -O -Cdebuginfo=0 -Zunstable-options  -Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--docck-python" "/usr/bin/python2.7" "--lldb-python" "/usr/bin/python2.7" "--gdb" "/usr/bin/gdb" "--quiet" "--llvm-version" "7.0.0\n" "--system-llvm" "--cc" "" "--cxx" "" "--cflags" "" "--llvm-components" "" "--llvm-cxxflags" "" "--adb-path" "adb" "--adb-test-dir" "/data/tmp/work" "--android-cross-path" "" "--color" "always"
2019-12-06T22:01:30.3223398Z 
2019-12-06T22:01:30.3223427Z 
2019-12-06T22:01:30.3223469Z failed to run: /checkout/obj/build/bootstrap/debug/bootstrap test
2019-12-06T22:01:30.3223540Z Build completed unsuccessfully in 0:52:02
2019-12-06T22:01:30.3223540Z Build completed unsuccessfully in 0:52:02
2019-12-06T22:01:30.3223748Z == clock drift check ==
2019-12-06T22:01:30.3224804Z   local time: Fri Dec  6 22:01:30 UTC 2019
2019-12-06T22:01:30.5993966Z   network time: Fri, 06 Dec 2019 22:01:30 GMT
2019-12-06T22:01:30.6001912Z == end clock drift check ==
2019-12-06T22:01:34.9886086Z 
2019-12-06T22:01:34.9988636Z ##[error]Bash exited with code '1'.
2019-12-06T22:01:35.0018060Z ##[section]Starting: Checkout
2019-12-06T22:01:35.0020389Z ==============================================================================
2019-12-06T22:01:35.0020433Z Task         : Get sources
2019-12-06T22:01:35.0020470Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
