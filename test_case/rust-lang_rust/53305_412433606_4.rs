\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/issue-47646.rs","byte_start":723,"byte_end":727,"line_start":22,"line_end":22,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"            println!(\"{:?}\", heap); //~ ERROR cannot borrow `heap` as immutable","highlight_start":30,"highlight_end":34}],"label":"immutable borrow occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/issue-47646.rs","byte_start":624,"byte_end":628,"line_start":18,"line_end":18,"column_start":18,"column_end":22,"is_primary":false,"text":[{"text":"    let borrow = heap.peek_mut();","highlight_start":18,"highlight_end":22}],"label":"mutable borrow occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider extracting this into a `let`-binding","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/issue-47646.rs","byte_start":715,"byte_end":721,"line_start":22,"line_end":22,"column_start":22,"column_end":28,"is_primary":true,"text":[{"text":"            println!(\"{:?}\", heap); //~ ERROR cannot borrow `heap` as immutable","highlight_start":22,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"<println macros>","byte_start":87,"byte_end":121,"line_start":2,"line_end":2,"column_start":29,"column_end":63,"is_primary":false,"text":[{"text":"{ $ crate :: io :: _print ( format_args_nl ! ( $ ( $ arg ) * ) ) ; } )","highlight_start":29,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/checkout/src/test/ui/issue-47646.rs","byte_start":706,"byte_end":729,"line_start":22,"line_end":22,"column_start":13,"column_end":36,"is_primary":false,"text":[{"text":"            println!(\"{:?}\", heap); //~ ERROR cannot borrow `heap` as immutable","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"println!","def_site_span":{"file_name":"<println macros>","byte_start":0,"byte_end":129,"line_start":1,"line_end":2,"column_start":1,"column_end":71,"is_primary":false,"text":[{"text":"(  ) => ( print ! ( \"\\n\" ) ) ; ( $ ( $ arg : tt ) * ) => (","highlight_start":1,"highlight_end":59},{"text":"{ $ crate :: io :: _print ( format_args_nl ! ( $ ( $ arg ) * ) ) ; } )","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"format_args_nl!","def_site_span":null}}],"children":[],"rendered":null}],"rendered":"error[E0502]: cannot borrow `heap` as immutable because it is also borrowed as mutable\n  --> /checkout/src/test/ui/issue-47646.rs:22:30\n   |\nLL |     let borrow = heap.peek_mut();\n   |                  ---- mutable borrow occurs here\n...\nLL |             println!(\"{:?}\", heap); //~ ERROR cannot borrow `heap` as immutable\n   |                              ^^^^ immutable borrow occurs here\n   |\nnote: consider extracting this into a `let`-binding\n  --> /checkout/src/test/ui/issue-47646.rs:22:22\n   |\nLL |             println!(\"{:?}\", heap); //~ ERROR cannot borrow `heap` as immutable\n   |                      ^^^^^^\n\n"}
[00:58:42] {"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"error: aborting due to previo-------------------------------
[00:58:42] ------------------------------------------
[00:58:42] ------------------------------------------
[00:58:42] {"message":"cannot borrow `*map` as mutable because it is also borrowed as immutable (Ast)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n