plain
travis_time:end:20ad2540:start=1555262522099115274,finish=1555262523452543327,duration=1353428053
$ git checkout -qf FETCH_HEAD
travis_fold:end:git.checkout

Encrypted environment variables have been removed for security reasons.
See https://docs.travis-ci.com/user/pull-requests/#pull-requests-and-security-restrictions
$ export SCCACHE_BUCKET=rust-lang-ci-sccache2
$ export SCCACHE_REGION=us-west-1
$ export GCP_CACHE_BUCKET=rust-lang-ci-cache
$ export AWS_ACCESS_KEY_ID=AKIA46X5W6CZEJZ6XT55
---
travis_time:start:test_assembly
Check compiletest suite=assembly mode=assembly (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
[01:17:38] 
[01:17:38] running 9 tests
[01:17:38] iiiiiiiii
[01:17:38] 
[01:17:38]  finished in 0.157
[01:17:38] travis_fold:end:test_assembly

---
travis_time:start:test_debuginfo
Check compiletest suite=debuginfo mode=debuginfo-both (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
[01:17:54] 
[01:17:54] running 121 tests
[01:18:20] .iiiii...i.....i..i...i..i.i.i..i.ii...i.....i..i....i..........iiii..........i...ii...i.......ii.i. 100/121
[01:18:25] i.i......iii.i.....ii
[01:18:25] 
[01:18:25]  finished in 30.994
[01:18:25] travis_fold:end:test_debuginfo

---
[01:44:24]     Finished release [optimized] target(s) in 14.85s
[01:44:24]      Running build/x86_64-unknown-linux-gnu/stage1-rustc/x86_64-unknown-linux-gnu/release/deps/rustc_target-d2f1612a4a817c78
[01:44:24] 
[01:44:24] running 124 tests
[01:44:24] ..........................................................................................F......FF. 100/124
[01:44:24] FF.......F..............
[01:44:24] 
[01:44:24] ---- spec::test_json_encode_decode::sparcv9_sun_solaris stdout ----
[01:44:24] thread 'spec::test_json_encode_decode::sparcv9_sun_solaris' panicked at 'assertion failed: `(left == right)`
[01:44:24] thread 'spec::test_json_encode_decode::sparcv9_sun_solaris' panicked at 'assertion failed: `(left == right)`
[01:44:24]   left: `Target { llvm_target: "sparcv9-sun-solaris", target_endian: "big", target_pointer_width: "64", target_c_int_width: "32", target_os: "solaris", target_env: "", target_vendor: "sun", arch: "sparc64", data_layout: "E-m:e-i64:64-n32:64-S128", linker_flavor: Gcc, options: TargetOptions { is_builtin: false, linker: None, lld_flavor: Ld, pre_link_args: {Gcc: ["-m64"]}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {}, link_env: [], asm_args: [], cpu: "v9", features: "", dynamic_linking: true, only_cdylib: false, executables: true, relocation_model: "pic", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: Some("unix"), abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: true, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: false, is_like_fuchsia: false, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: true, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: false, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Unwind, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: false, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: false, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`,
[01:44:24]  right: `Target { llvm_target: "sparcv9-sun-solaris", target_endian: "big", target_pointer_width: "64", target_c_int_width: "32", target_os: "solaris", target_env: "", target_vendor: "sun", arch: "sparc64", data_layout: "E-m:e-i64:64-n32:64-S128", linker_flavor: Gcc, options: TargetOptions { is_builtin: false, linker: None, lld_flavor: Ld, pre_link_args: {Gcc: ["-m64"]}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {}, link_env: [], asm_args: [], cpu: "v9", features: "", dynamic_linking: true, only_cdylib: false, executables: true, relocation_model: "pic", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: Some("unix"), abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: true, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: false, is_like_fuchsia: false, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: true, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: false, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Unwind, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: false, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`', src/librustc_target/spec/mod.rs:331:1
[01:44:24] 
[01:44:24] ---- spec::test_json_encode_decode::wasm32_unknown_emscripten stdout ----
[01:44:24] thread 'spec::test_json_encode_decode::wasm32_unknown_emscripten' panicked at 'assertion failed: `(left == right)`
[01:44:24] thread 'spec::test_json_encode_decode::wasm32_unknown_emscripten' panicked at 'assertion failed: `(left == right)`
[01:44:24]   left: `Target { llvm_target: "asmjs-unknown-emscripten", target_endian: "little", target_pointer_width: "32", target_c_int_width: "32", target_os: "emscripten", target_env: "", target_vendor: "unknown", arch: "wasm32", data_layout: "e-p:32:32-i64:64-v128:32:128-n32-S128", linker_flavor: Em, options: TargetOptions { is_builtin: false, linker: None, lld_flavor: Ld, pre_link_args: {}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {Em: ["-s", "BINARYEN=1", "-s", "ERROR_ON_UNDEFINED_SYMBOLS=1", "-s", "BINARYEN_TRAP_MODE=\'clamp\'"]}, link_env: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: "pic", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: ".js", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: Some("unix"), abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: true, is_like_fuchsia: false, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: false, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: true, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Unwind, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, i128_lowering: false, codegen_backend: "emscripten", default_hidden_visibility: false, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: false, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`,
[01:44:24]  right: `Target { llvm_target: "asmjs-unknown-emscripten", target_endian: "little", target_pointer_width: "32", target_c_int_width: "32", target_os: "emscripten", target_env: "", target_vendor: "unknown", arch: "wasm32", data_layout: "e-p:32:32-i64:64-v128:32:128-n32-S128", linker_flavor: Em, options: TargetOptions { is_builtin: false, linker: None, lld_flavor: Ld, pre_link_args: {}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {Em: ["-s", "BINARYEN=1", "-s", "ERROR_ON_UNDEFINED_SYMBOLS=1", "-s", "BINARYEN_TRAP_MODE=\'clamp\'"]}, link_env: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: "pic", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: ".js", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: Some("unix"), abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: true, is_like_fuchsia: false, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: false, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: true, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Unwind, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, i128_lowering: false, codegen_backend: "emscripten", default_hidden_visibility: false, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`', src/librustc_target/spec/mod.rs:331:1
[01:44:24] ---- spec::test_json_encode_decode::wasm32_experimental_emscripten stdout ----
[01:44:24] thread 'spec::test_json_encode_decode::wasm32_experimental_emscripten' panicked at 'assertion failed: `(left == right)`
[01:44:24] thread 'spec::test_json_encode_decode::wasm32_experimental_emscripten' panicked at 'assertion failed: `(left == right)`
[01:44:24]   left: `Target { llvm_target: "wasm32-unknown-unknown", target_endian: "little", target_pointer_width: "32", target_c_int_width: "32", target_os: "emscripten", target_env: "", target_vendor: "unknown", arch: "wasm32", data_layout: "e-m:e-p:32:32-i64:64-n32:64-S128", linker_flavor: Em, options: TargetOptions { is_builtin: false, linker: None, lld_flavor: Ld, pre_link_args: {}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {Em: ["-s", "WASM=1", "-s", "ASSERTIONS=1", "-s", "ERROR_ON_UNDEFINED_SYMBOLS=1", "-g3"]}, link_env: [("EMCC_WASM_BACKEND", "1")], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: "pic", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: ".js", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: Some("unix"), abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: true, is_like_fuchsia: false, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: false, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: true, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Unwind, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: false, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: false, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`,
[01:44:24]  right: `Target { llvm_target: "wasm32-unknown-unknown", target_endian: "little", target_pointer_width: "32", target_c_int_width: "32", target_os: "emscripten", target_env: "", target_vendor: "unknown", arch: "wasm32", data_layout: "e-m:e-p:32:32-i64:64-n32:64-S128", linker_flavor: Em, options: TargetOptions { is_builtin: false, linker: None, lld_flavor: Ld, pre_link_args: {}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {Em: ["-s", "WASM=1", "-s", "ASSERTIONS=1", "-s", "ERROR_ON_UNDEFINED_SYMBOLS=1", "-g3"]}, link_env: [("EMCC_WASM_BACKEND", "1")], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: "pic", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: ".js", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: Some("unix"), abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: true, is_like_fuchsia: false, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: false, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: true, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Unwind, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: false, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`', src/librustc_target/spec/mod.rs:331:1
[01:44:24] ---- spec::test_json_encode_decode::wasm32_unknown_unknown stdout ----
[01:44:24] thread 'spec::test_json_encode_decode::wasm32_unknown_unknown' panicked at 'assertion failed: `(left == right)`
[01:44:24] thread 'spec::test_json_encode_decode::wasm32_unknown_unknown' panicked at 'assertion failed: `(left == right)`
[01:44:24]   left: `Target { llvm_target: "wasm32-unknown-unknown", target_endian: "little", target_pointer_width: "32", target_c_int_width: "32", target_os: "unknown", target_env: "", target_vendor: "unknown", arch: "wasm32", data_layout: "e-m:e-p:32:32-i64:64-n32:64-S128", linker_flavor: Lld(Wasm), options: TargetOptions { is_builtin: false, linker: Some("rust-lld"), lld_flavor: Wasm, pre_link_args: {Gcc: ["-Wl,--no-threads", "-Wl,-z", "-Wl,stack-size=1048576", "-Wl,--stack-first", "-Wl,--allow-undefined", "-Wl,--fatal-warnings", "-Wl,--no-demangle", "-Wl,--export-dynamic", "--target=wasm32-unknown-unknown", "-nostdlib", "-Wl,--no-entry"], Lld(Wasm): ["--no-threads", "-z", "stack-size=1048576", "--stack-first", "--allow-undefined", "--fatal-warnings", "--no-demangle", "--export-dynamic", "--no-entry"]}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {}, link_env: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: true, only_cdylib: true, executables: true, relocation_model: "static", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "", dll_suffix: ".wasm", exe_suffix: ".wasm", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: None, abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: false, is_like_fuchsia: false, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: false, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Abort, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: true, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: true, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: false, limit_rdylib_exports: false, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`,
[01:44:24]  right: `Target { llvm_target: "wasm32-unknown-unknown", target_endian: "little", target_pointer_width: "32", target_c_int_width: "32", target_os: "unknown", target_env: "", target_vendor: "unknown", arch: "wasm32", data_layout: "e-m:e-p:32:32-i64:64-n32:64-S128", linker_flavor: Lld(Wasm), options: TargetOptions { is_builtin: false, linker: Some("rust-lld"), lld_flavor: Wasm, pre_link_args: {Gcc: ["-Wl,--no-threads", "-Wl,-z", "-Wl,stack-size=1048576", "-Wl,--stack-first", "-Wl,--allow-undefined", "-Wl,--fatal-warnings", "-Wl,--no-demangle", "-Wl,--export-dynamic", "--target=wasm32-unknown-unknown", "-nostdlib", "-Wl,--no-entry"], Lld(Wasm): ["--no-threads", "-z", "stack-size=1048576", "--stack-first", "--allow-undefined", "--fatal-warnings", "--no-demangle", "--export-dynamic", "--no-entry"]}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {}, link_env: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: true, only_cdylib: true, executables: true, relocation_model: "static", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "", dll_suffix: ".wasm", exe_suffix: ".wasm", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: None, abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: false, is_like_fuchsia: false, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: false, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Abort, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: true, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: true, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: false, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`', src/librustc_target/spec/mod.rs:331:1
[01:44:24] ---- spec::test_json_encode_decode::wasm32_unknown_wasi stdout ----
[01:44:24] ---- spec::test_json_encode_decode::wasm32_unknown_wasi stdout ----
[01:44:24] thread 'spec::test_json_encode_decode::wasm32_unknown_wasi' panicked at 'assertion failed: `(left == right)`
[01:44:24]   left: `Target { llvm_target: "wasm32-unknown-wasi", target_endian: "little", target_pointer_width: "32", target_c_int_width: "32", target_os: "unknown", target_env: "wasi", target_vendor: "unknown", arch: "wasm32", data_layout: "e-m:e-p:32:32-i64:64-n32:64-S128", linker_flavor: Lld(Wasm), options: TargetOptions { is_builtin: false, linker: Some("rust-lld"), lld_flavor: Wasm, pre_link_args: {Gcc: ["-Wl,--no-threads", "-Wl,-z", "-Wl,stack-size=1048576", "-Wl,--stack-first", "-Wl,--allow-undefined", "-Wl,--fatal-warnings", "-Wl,--no-demangle", "-Wl,--export-dynamic", "--target=wasm32-unknown-wasi"], Lld(Wasm): ["--no-threads", "-z", "stack-size=1048576", "--stack-first", "--allow-undefined", "--fatal-warnings", "--no-demangle", "--export-dynamic"]}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: ["crt1.o"], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {}, link_env: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: true, only_cdylib: true, executables: true, relocation_model: "static", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "", dll_suffix: ".wasm", exe_suffix: ".wasm", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: None, abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: false, is_like_fuchsia: false, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: false, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Abort, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: true, crt_static_respected: true, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: true, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: true, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: false, limit_rdylib_exports: false, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`,
[01:44:24]  right: `Target { llvm_target: "wasm32-unknown-wasi", target_endian: "little", target_pointer_width: "32", target_c_int_width: "32", target_os: "unknown", target_env: "wasi", target_vendor: "unknown", arch: "wasm32", data_layout: "e-m:e-p:32:32-i64:64-n32:64-S128", linker_flavor: Lld(Wasm), options: TargetOptions { is_builtin: false, linker: Some("rust-lld"), lld_flavor: Wasm, pre_link_args: {Gcc: ["-Wl,--no-threads", "-Wl,-z", "-Wl,stack-size=1048576", "-Wl,--stack-first", "-Wl,--allow-undefined", "-Wl,--fatal-warnings", "-Wl,--no-demangle", "-Wl,--export-dynamic", "--target=wasm32-unknown-wasi"], Lld(Wasm): ["--no-threads", "-z", "stack-size=1048576", "--stack-first", "--allow-undefined", "--fatal-warnings", "--no-demangle", "--export-dynamic"]}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: ["crt1.o"], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {}, link_env: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: true, only_cdylib: true, executables: true, relocation_model: "static", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "", dll_suffix: ".wasm", exe_suffix: ".wasm", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: None, abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: false, is_like_fuchsia: false, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: false, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Abort, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: true, crt_static_respected: true, stack_probes: false, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: true, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: true, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: false, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`', src/librustc_target/spec/mod.rs:331:1
[01:44:24] ---- spec::test_json_encode_decode::x86_64_sun_solaris stdout ----
[01:44:24] thread 'spec::test_json_encode_decode::x86_64_sun_solaris' panicked at 'assertion failed: `(left == right)`
[01:44:24] thread 'spec::test_json_encode_decode::x86_64_sun_solaris' panicked at 'assertion failed: `(left == right)`
[01:44:24]   left: `Target { llvm_target: "x86_64-pc-solaris", target_endian: "little", target_pointer_width: "64", target_c_int_width: "32", target_os: "solaris", target_env: "", target_vendor: "sun", arch: "x86_64", data_layout: "e-m:e-i64:64-f80:128-n8:16:32:64-S128", linker_flavor: Gcc, options: TargetOptions { is_builtin: false, linker: None, lld_flavor: Ld, pre_link_args: {Gcc: ["-m64"]}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {}, link_env: [], asm_args: [], cpu: "x86-64", features: "", dynamic_linking: true, only_cdylib: false, executables: true, relocation_model: "pic", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: Some("unix"), abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: true, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: false, is_like_fuchsia: false, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: true, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: false, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Unwind, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: true, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: false, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: false, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`,
[01:44:24]  right: `Target { llvm_target: "x86_64-pc-solaris", target_endian: "little", target_pointer_width: "64", target_c_int_width: "32", target_os: "solaris", target_env: "", target_vendor: "sun", arch: "x86_64", data_layout: "e-m:e-i64:64-f80:128-n8:16:32:64-S128", linker_flavor: Gcc, options: TargetOptions { is_builtin: false, linker: None, lld_flavor: Ld, pre_link_args: {Gcc: ["-m64"]}, pre_link_args_crt: {}, pre_link_objects_exe: [], pre_link_objects_exe_crt: [], pre_link_objects_dll: [], late_link_args: {}, post_link_objects: [], post_link_objects_crt: [], post_link_args: {}, link_env: [], asm_args: [], cpu: "x86-64", features: "", dynamic_linking: true, only_cdylib: false, executables: true, relocation_model: "pic", code_model: None, tls_model: "global-dynamic", disable_redzone: false, eliminate_frame_pointer: true, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", target_family: Some("unix"), abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: true, is_like_windows: false, is_like_msvc: false, is_like_android: false, is_like_emscripten: false, is_like_fuchsia: false, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: true, no_default_libraries: true, position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, custom_unwind_resume: false, has_elf_tls: false, obj_is_bitcode: false, no_integrated_as: false, min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Unwind, abi_blacklist: [], crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: true, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, i128_lowering: false, codegen_backend: "llvm", default_hidden_visibility: false, embed_bitcode: false, emit_debug_gdb_scripts: true, requires_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, target_mcount: "mcount" } }`', src/librustc_target/spec/mod.rs:331:1
[01:44:24] 
[01:44:24] failures:
[01:44:24]     spec::test_json_encode_decode::sparcv9_sun_solaris
[01:44:24]     spec::test_json_encode_decode::wasm32_experimental_emscripten
---
[01:44:24] 
[01:44:24] error: test failed, to rerun pass '--lib'
[01:44:24] 
[01:44:24] 
[01:44:24] command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo" "test" "--target" "x86_64-unknown-linux-gnu" "-j" "4" "--release" "--locked" "--color" "always" "--features" "" "--manifest-path" "/checkout/src/rustc/Cargo.toml" "-p" "rustc_target" "--" "--quiet"
[01:44:24] 
[01:44:24] 
[01:44:24] failed to run: /checkout/obj/build/bootstrap/debug/bootstrap test
[01:44:24] Build completed unsuccessfully in 0:39:01
[01:44:24] Build completed unsuccessfully in 0:39:01
[01:44:24] Makefile:48: recipe for target 'check' failed
[01:44:24] make: *** [check] Error 1
The command "stamp sh -x -c "$RUN_SCRIPT"" exited with 2.
travis_time:start:1947374a
$ date && (curl -fs --head https://google.com | grep ^Date: | sed 's/Date: //g' || true)
Sun Apr 14 19:06:38 UTC 2019
