\n\nSee also https://doc.rust-lang.org/book/first-edition/unsafe.html\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn_unsafe.rs","byte_start":1789,"byte_end":1792,"line_start":50,"line_end":50,"column_start":77,"column_end":80,"is_primary":true,"text":[{"text":"const fn bad_const_fn_deref_raw(x: *mut usize) -> &'static usize { unsafe { &*x } } //~ is unsafe","highlight_start":77,"highlight_end":80}],"label":"dereference of raw pointer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn_unsafe.rs:50:77\n   |\nLL | const fn bad_const_fn_deref_raw(x: *mut usize) -> &'static usize { unsafe { &*x } } //~ is unsafe\n   |                                                                             ^^^ dereference of raw pointer\n   |\n   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n\n"}
[01:00:53] {"message":"dereferencing raw pointers in constant functions is unstable (see issue #51911)","code":{"code":"E0658","explanation":"\nAn unstable feature was used.\n\nErroneous code example:\n\n