\n\nNote that the error here is in the definition of the generic function: Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function: It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:evel":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0277]: the size for values of type `(dyn std::marker::Copy + std::marker::Send + 'static)` cannot be known at compilation time\n  --> /checkout/src/test/ui/traits/trait-object-macro-matcher.rs:18:8\n   |\nLL |     m!(Copy + Send + 'static); //~ ERROR the trait `std::marker::Copy` cannot be made into an object\n   |        ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `(dyn std::marker::Copy + std::marker::Send + 'static)`\n   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n   = note: the return type of a function must have a statically known size\n\n"}
[00:46:34] {"message":"the size for values of type `(dyn std::marker::Send + 'static)` cannot be known at compilation time","code":{"code":"E0277","explanation":"\nYou tried to use a type which doesn't implement some trait in a place which\nexpected that trait. Erroneous code example:\n\n