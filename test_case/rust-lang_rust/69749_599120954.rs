plain
2020-03-14T17:15:50.2408693Z ========================== Starting Command Output ===========================
2020-03-14T17:15:50.2411879Z [command]/bin/bash --noprofile --norc /home/vsts/work/_temp/4f53341f-d04a-4aa0-a2de-b181880c5c5f.sh
2020-03-14T17:15:50.2412094Z 
2020-03-14T17:15:50.2415718Z ##[section]Finishing: Disable git automatic line ending conversion
2020-03-14T17:15:50.2433991Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/69749/merge to s
2020-03-14T17:15:50.2436769Z Task         : Get sources
2020-03-14T17:15:50.2437006Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-03-14T17:15:50.2437236Z Version      : 1.0.0
2020-03-14T17:15:50.2437432Z Author       : Microsoft
---
2020-03-14T17:15:51.0379344Z ##[command]git remote add origin https://github.com/rust-lang/rust
2020-03-14T17:15:51.0383623Z ##[command]git config gc.auto 0
2020-03-14T17:15:51.0386765Z ##[command]git config --get-all http.https://github.com/rust-lang/rust.extraheader
2020-03-14T17:15:51.0389606Z ##[command]git config --get-all http.proxy
2020-03-14T17:15:51.0394872Z ##[command]git -c http.extraheader="AUTHORIZATION: basic ***" fetch --force --tags --prune --progress --no-recurse-submodules --depth=2 origin +refs/heads/*:refs/remotes/origin/* +refs/pull/69749/merge:refs/remotes/pull/69749/merge
---
2020-03-14T18:08:25.1462539Z .................................................................................................... 1700/9781
2020-03-14T18:08:29.1525448Z .................................................................................................... 1800/9781
2020-03-14T18:08:39.1795921Z ...................................................................i................................ 1900/9781
2020-03-14T18:08:45.0956625Z .................................................................................................... 2000/9781
2020-03-14T18:08:57.3104497Z .........................................................iiiii...................................... 2100/9781
2020-03-14T18:09:07.2209850Z .................................................................................................... 2300/9781
2020-03-14T18:09:09.1526905Z .................................................................................................... 2400/9781
2020-03-14T18:09:11.7933819Z .................................................................................................... 2500/9781
2020-03-14T18:09:30.9074787Z .................................................................................................... 2600/9781
---
2020-03-14T18:11:50.1554055Z .............................i...............i...................................................... 5000/9781
2020-03-14T18:11:58.6006363Z .................................................................................................... 5100/9781
2020-03-14T18:12:03.6744800Z ........................................................................i........................... 5200/9781
2020-03-14T18:12:08.5900050Z .................................................................................................... 5300/9781
2020-03-14T18:12:17.0746612Z .....................................................ii.ii........i...i............................. 5400/9781
2020-03-14T18:12:24.0979933Z .................................................................................................... 5600/9781
2020-03-14T18:12:32.3516388Z .................................................................................................... 5700/9781
2020-03-14T18:12:37.5749434Z .............................................i...................................................... 5800/9781
2020-03-14T18:12:43.1208061Z .................................................................................................... 5900/9781
2020-03-14T18:12:43.1208061Z .................................................................................................... 5900/9781
2020-03-14T18:12:51.8938819Z .................................................................................................... 6000/9781
2020-03-14T18:12:57.4087198Z .......................................ii...i..ii...........i....................................... 6100/9781
2020-03-14T18:13:15.3238305Z .................................................................................................... 6300/9781
2020-03-14T18:13:21.5060876Z .................................................................................................... 6400/9781
2020-03-14T18:13:21.5060876Z .................................................................................................... 6400/9781
2020-03-14T18:13:29.7314379Z .....................................................................i..ii.......................... 6500/9781
2020-03-14T18:13:49.4776821Z .................................................................................................... 6700/9781
2020-03-14T18:13:56.7137600Z ...................................................................i................................ 6800/9781
2020-03-14T18:13:58.4007747Z .................................................................................................... 6900/9781
2020-03-14T18:14:00.3523474Z .................................................................................................... 7000/9781
---
2020-03-14T18:15:29.9945317Z .................................................................................................... 7800/9781
2020-03-14T18:15:34.8781485Z .................................................................................................... 7900/9781
2020-03-14T18:15:40.3117265Z .............................................................i...................................... 8000/9781
2020-03-14T18:15:49.1281846Z .................................................................................................... 8100/9781
2020-03-14T18:15:54.0021280Z ..........iiiiiiiiii.i.............................................................................. 8200/9781
2020-03-14T18:16:05.8847447Z .................................................................................................... 8400/9781
2020-03-14T18:16:14.1182527Z .................................................................................................... 8500/9781
2020-03-14T18:16:25.9345637Z .................................................................................................... 8600/9781
2020-03-14T18:16:31.8270658Z .................................................................................................... 8700/9781
---
2020-03-14T18:18:32.6903381Z  finished in 6.635
2020-03-14T18:18:32.7075312Z Check compiletest suite=codegen mode=codegen (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-14T18:18:32.9006190Z 
2020-03-14T18:18:32.9006656Z running 181 tests
2020-03-14T18:18:35.3816863Z iiii......i............ii..iiii....i....i...........i............i..i..................i....i....... 100/181
2020-03-14T18:18:37.5332968Z .....i.i.i...iii..iiiiiiiiiiiiiiii.......................iii.............ii......
2020-03-14T18:18:37.5336290Z 
2020-03-14T18:18:37.5342388Z  finished in 4.826
2020-03-14T18:18:37.5487449Z Check compiletest suite=codegen-units mode=codegen-units (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-14T18:18:37.7065861Z 
---
2020-03-14T18:18:39.4688579Z  finished in 1.920
2020-03-14T18:18:39.4871231Z Check compiletest suite=assembly mode=assembly (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-14T18:18:39.6277844Z 
2020-03-14T18:18:39.6278134Z running 9 tests
2020-03-14T18:18:39.6279050Z iiiiiiiii
2020-03-14T18:18:39.6280079Z 
2020-03-14T18:18:39.6280376Z  finished in 0.140
2020-03-14T18:18:39.6437568Z Check compiletest suite=incremental mode=incremental (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-14T18:18:39.8315554Z 
---
2020-03-14T18:18:56.7665564Z  finished in 17.122
2020-03-14T18:18:56.7850016Z Check compiletest suite=debuginfo mode=debuginfo (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-14T18:18:56.9486276Z 
2020-03-14T18:18:56.9486840Z running 115 tests
2020-03-14T18:19:09.0207232Z iiiii..i.....i..i...i..i.i.i..i..i..ii....i.i....ii..........iiii.........i.....i..i.......ii.i.ii.. 100/115
2020-03-14T18:19:10.4693467Z ...iiii.....ii.
2020-03-14T18:19:10.4698421Z 
2020-03-14T18:19:10.4699916Z  finished in 13.684
2020-03-14T18:19:10.4704032Z Uplifting stage1 rustc (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-14T18:19:10.4704824Z Copying stage2 rustc from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)
---
2020-03-14T18:30:35.0405748Z 
2020-03-14T18:30:35.0406469Z    Doc-tests core
2020-03-14T18:30:39.1402306Z 
2020-03-14T18:30:39.1403162Z running 2480 tests
2020-03-14T18:30:47.1464164Z ......iiiii......................................................................................... 100/2480
2020-03-14T18:30:54.9264577Z ....................................................................................ii.............. 200/2480
2020-03-14T18:31:12.9618856Z ...................i................................................................................ 400/2480
2020-03-14T18:31:12.9618856Z ...................i................................................................................ 400/2480
2020-03-14T18:31:21.5109295Z ........................................................................i..i..................iiii.. 500/2480
2020-03-14T18:31:35.8994013Z .................................................................................................... 700/2480
2020-03-14T18:31:43.2318137Z .................................................................................................... 800/2480
2020-03-14T18:31:50.6642338Z .................................................................................................... 900/2480
2020-03-14T18:31:58.3363619Z .................................................................................................... 1000/2480
---
2020-03-14T18:35:07.2103694Z 
2020-03-14T18:35:07.2104020Z running 1010 tests
2020-03-14T18:35:22.6855622Z i................................................................................................... 100/1010
2020-03-14T18:35:31.6005950Z .................................................................................................... 200/1010
2020-03-14T18:35:37.7021101Z ..................iii......i......i...i......i...................................................... 300/1010
2020-03-14T18:35:42.0298011Z .................................................................................................... 400/1010
2020-03-14T18:35:47.9708013Z ............................................i..i......................................ii............ 500/1010
2020-03-14T18:35:58.8412161Z .................................................................................................... 700/1010
2020-03-14T18:35:58.8412161Z .................................................................................................... 700/1010
2020-03-14T18:36:04.8794136Z ....................................iiii............................................................ 800/1010
2020-03-14T18:36:17.2592141Z .................................................................................................... 900/1010
2020-03-14T18:36:23.0849291Z ..........................................................iiii...................................... 1000/1010
2020-03-14T18:36:23.4794644Z test result: ok. 990 passed; 0 failed; 20 ignored; 0 measured; 0 filtered out
2020-03-14T18:36:23.4795805Z 
2020-03-14T18:36:23.4868647Z  finished in 146.138
2020-03-14T18:36:23.4879564Z Testing term stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
---
2020-03-14T18:52:12.5434256Z  finished in 36.525
2020-03-14T18:52:12.5647561Z Check compiletest suite=run-make-fulldeps mode=run-make (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-14T18:52:12.7721346Z 
2020-03-14T18:52:12.7721677Z running 210 tests
2020-03-14T18:52:40.4568963Z ......................i...ii.......................................................................i 100/210
2020-03-14T18:53:11.7456946Z ........................................iiiiii......i..............iii.F............................ 200/210
2020-03-14T18:53:15.6303242Z failures:
2020-03-14T18:53:15.6313956Z 
2020-03-14T18:53:15.6314852Z ---- [run-make] run-make-fulldeps/save-analysis stdout ----
2020-03-14T18:53:15.6315283Z 
2020-03-14T18:53:15.6315283Z 
2020-03-14T18:53:15.6315573Z error: make failed
2020-03-14T18:53:15.6315908Z status: exit code: 2
2020-03-14T18:53:15.6316290Z command: "make"
2020-03-14T18:53:15.6316544Z stdout:
2020-03-14T18:53:15.6317376Z ------------------------------------------
2020-03-14T18:53:15.6319289Z LD_LIBRARY_PATH="/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis:/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib:/checkout/obj/build/x86_64-unknown-linux-gnu/stage0-bootstrap-tools/x86_64-unknown-linux-gnu/release/deps:/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/lib" '/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc' --out-dir /checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis -L /checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis  krate2.rs
2020-03-14T18:53:15.6322317Z LD_LIBRARY_PATH="/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis:/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib:/checkout/obj/build/x86_64-unknown-linux-gnu/stage0-bootstrap-tools/x86_64-unknown-linux-gnu/release/deps:/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/lib" '/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc' --out-dir /checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis -L /checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis  foo.rs -Zsave-analysis
2020-03-14T18:53:15.6324937Z Makefile:6: recipe for target 'code' failed
2020-03-14T18:53:15.6325514Z ------------------------------------------
2020-03-14T18:53:15.6325681Z stderr:
2020-03-14T18:53:15.6326135Z ------------------------------------------
2020-03-14T18:53:15.6326390Z warning: unused `std::result::Result` that must be used
2020-03-14T18:53:15.6326390Z warning: unused `std::result::Result` that must be used
2020-03-14T18:53:15.6326787Z  --> krate2.rs:7:5
2020-03-14T18:53:15.6326917Z   |
2020-03-14T18:53:15.6327097Z 7 |     std::io::stdout().write_all(b"hello world!\n");
2020-03-14T18:53:15.6327653Z   |
2020-03-14T18:53:15.6328100Z   = note: `#[warn(unused_must_use)]` on by default
2020-03-14T18:53:15.6328369Z   = note: this `Result` may be an `Err` variant, which should be handled
2020-03-14T18:53:15.6328550Z 
2020-03-14T18:53:15.6328550Z 
2020-03-14T18:53:15.6328745Z warning: unused import: `graphviz::RenderOption`
2020-03-14T18:53:15.6329251Z    |
2020-03-14T18:53:15.6329251Z    |
2020-03-14T18:53:15.6329402Z 13 | use graphviz::RenderOption;
2020-03-14T18:53:15.6329743Z    |
2020-03-14T18:53:15.6329913Z    = note: `#[warn(unused_imports)]` on by default
2020-03-14T18:53:15.6330081Z 
2020-03-14T18:53:15.6330233Z warning: unused import: `HashSet`
2020-03-14T18:53:15.6330233Z warning: unused import: `HashSet`
2020-03-14T18:53:15.6330545Z   --> foo.rs:14:32
2020-03-14T18:53:15.6330675Z    |
2020-03-14T18:53:15.6330861Z 14 | use std::collections::{HashMap,HashSet};
2020-03-14T18:53:15.6331219Z 
2020-03-14T18:53:15.6331890Z warning: unused import: `std::mem::size_of`
2020-03-14T18:53:15.6332315Z   --> foo.rs:23:5
2020-03-14T18:53:15.6332618Z    |
---
2020-03-14T18:53:15.6339934Z 
2020-03-14T18:53:15.6340236Z warning: type `nested_enum` should have an upper camel case name
2020-03-14T18:53:15.6340951Z   --> foo.rs:83:18
2020-03-14T18:53:15.6341096Z    |
2020-03-14T18:53:15.6341241Z 83 |         pub enum nested_enum {
2020-03-14T18:53:15.6341927Z    |                  ^^^^^^^^^^^ help: convert the identifier to upper camel case: `NestedEnum`
2020-03-14T18:53:15.6342180Z 
2020-03-14T18:53:15.6342350Z warning: unused import: `sub::sub2 as msalias`
2020-03-14T18:53:15.6342892Z  --> SubDir/mod.rs:3:5
2020-03-14T18:53:15.6343029Z   |
2020-03-14T18:53:15.6343171Z 3 | use sub::sub2 as msalias;
2020-03-14T18:53:15.6343852Z 
2020-03-14T18:53:15.6344003Z warning: unused import: `sub::sub2`
2020-03-14T18:53:15.6344526Z  --> SubDir/mod.rs:4:5
2020-03-14T18:53:15.6344792Z   |
2020-03-14T18:53:15.6344792Z   |
2020-03-14T18:53:15.6344928Z 4 | use sub::sub2;
2020-03-14T18:53:15.6345175Z 
2020-03-14T18:53:15.6345381Z warning: type `nested_struct` should have an upper camel case name
2020-03-14T18:53:15.6345769Z   --> SubDir/mod.rs:19:20
2020-03-14T18:53:15.6345907Z    |
2020-03-14T18:53:15.6345907Z    |
2020-03-14T18:53:15.6346140Z 19 |         pub struct nested_struct {
2020-03-14T18:53:15.6346458Z    |                    ^^^^^^^^^^^^^ help: convert the identifier to upper camel case: `NestedStruct`
2020-03-14T18:53:15.6347089Z 
2020-03-14T18:53:15.6347574Z warning: type `nofields` should have an upper camel case name
2020-03-14T18:53:15.6348140Z    |
2020-03-14T18:53:15.6348288Z 96 | struct nofields;
2020-03-14T18:53:15.6348288Z 96 | struct nofields;
2020-03-14T18:53:15.6348559Z    |        ^^^^^^^^ help: convert the identifier to upper camel case: `Nofields`
2020-03-14T18:53:15.6348970Z warning: type `some_fields` should have an upper camel case name
2020-03-14T18:53:15.6349350Z   --> foo.rs:99:8
2020-03-14T18:53:15.6349484Z    |
2020-03-14T18:53:15.6349619Z 99 | struct some_fields {
2020-03-14T18:53:15.6349619Z 99 | struct some_fields {
2020-03-14T18:53:15.6350101Z    |        ^^^^^^^^^^^ help: convert the identifier to upper camel case: `SomeFields`
2020-03-14T18:53:15.6350328Z 
2020-03-14T18:53:15.6350685Z warning: trait objects without an explicit `dyn` are deprecated
2020-03-14T18:53:15.6351082Z    --> foo.rs:251:16
2020-03-14T18:53:15.6351236Z     |
2020-03-14T18:53:15.6351448Z 251 |     let s: Box<SomeTrait> = box some_fields {field1: 43};
2020-03-14T18:53:15.6351950Z 
2020-03-14T18:53:15.6352131Z warning: trait objects without an explicit `dyn` are deprecated
2020-03-14T18:53:15.6352471Z    --> foo.rs:267:24
2020-03-14T18:53:15.6352625Z     |
2020-03-14T18:53:15.6352625Z     |
2020-03-14T18:53:15.6352778Z 267 |     let s4 = s3 as Box<SomeTrait>;
2020-03-14T18:53:15.6353042Z     |                        ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`
2020-03-14T18:53:15.6353241Z 
2020-03-14T18:53:15.6353438Z warning: trait objects without an explicit `dyn` are deprecated
2020-03-14T18:53:15.6353786Z    --> foo.rs:273:32
2020-03-14T18:53:15.6353921Z     |
2020-03-14T18:53:15.6354119Z 273 |     let closure = |x: u32, s: &SomeTrait| {
2020-03-14T18:53:15.6360081Z 
2020-03-14T18:53:15.6360081Z 
2020-03-14T18:53:15.6360271Z warning: type `blah` should have an upper camel case name
2020-03-14T18:53:15.6361014Z     |
2020-03-14T18:53:15.6361145Z 281 | pub struct blah {
2020-03-14T18:53:15.6361423Z     |            ^^^^ help: convert the identifier to upper camel case: `Blah`
2020-03-14T18:53:15.6361634Z 
---
2020-03-14T18:53:15.6364873Z 
2020-03-14T18:53:15.6365250Z warning: trait objects without an explicit `dyn` are deprecated
2020-03-14T18:53:15.6365604Z    --> foo.rs:418:10
2020-03-14T18:53:15.6365743Z     |
2020-03-14T18:53:15.6367113Z 418 |         <Error + 'static>::is::<T>(self)
2020-03-14T18:53:15.6368026Z 
2020-03-14T18:53:15.6368229Z warning: unused variable: `s`
2020-03-14T18:53:15.6368614Z   --> foo.rs:35:9
2020-03-14T18:53:15.6368784Z    |
2020-03-14T18:53:15.6368784Z    |
2020-03-14T18:53:15.6369184Z 35 |     let s = sub_struct{ field2: 45u32, };
2020-03-14T18:53:15.6369588Z    |         ^ help: consider prefixing with an underscore: `_s`
2020-03-14T18:53:15.6370341Z    = note: `#[warn(unused_variables)]` on by default
2020-03-14T18:53:15.6370517Z 
2020-03-14T18:53:15.6370661Z warning: unused variable: `x`
2020-03-14T18:53:15.6371241Z   --> foo.rs:41:9
---
2020-03-14T18:53:15.6373082Z 
2020-03-14T18:53:15.6373221Z warning: unused variable: `i`
2020-03-14T18:53:15.6373544Z   --> foo.rs:34:28
2020-03-14T18:53:15.6373676Z    |
2020-03-14T18:53:15.6373891Z 34 | fn test_alias<I: Iterator>(i: Option<<I as Iterator>::Item>) {
2020-03-14T18:53:15.6374476Z 
2020-03-14T18:53:15.6374615Z warning: unused variable: `x`
2020-03-14T18:53:15.6374924Z   --> foo.rs:38:12
2020-03-14T18:53:15.6375072Z    |
2020-03-14T18:53:15.6375072Z    |
2020-03-14T18:53:15.6375217Z 38 |     fn foo(x: &Write) {}
2020-03-14T18:53:15.6375473Z    |            ^ help: consider prefixing with an underscore: `_x`
2020-03-14T18:53:15.6375683Z 
2020-03-14T18:53:15.6375823Z warning: unused variable: `f1`
2020-03-14T18:53:15.6376129Z    --> foo.rs:212:40
2020-03-14T18:53:15.6376282Z     |
2020-03-14T18:53:15.6376531Z 212 |         SomeStructEnum::EnumStruct2{f1:f1, f2:f_2} => println(&f_2.field1.to_string()),
2020-03-14T18:53:15.6376938Z     |                                        ^^ help: consider prefixing with an underscore: `_f1`
2020-03-14T18:53:15.6377345Z warning: unused variable: `f2`
2020-03-14T18:53:15.6377654Z    --> foo.rs:222:29
2020-03-14T18:53:15.6377789Z     |
2020-03-14T18:53:15.6377789Z     |
2020-03-14T18:53:15.6378019Z 222 |         EnumStruct2{f1, f2: f2} => println(&f1.field1.to_string()),
2020-03-14T18:53:15.6378375Z     |                             ^^ help: consider prefixing with an underscore: `_f2`
2020-03-14T18:53:15.6378762Z warning: unused variable: `f2`
2020-03-14T18:53:15.6379070Z    --> foo.rs:223:49
2020-03-14T18:53:15.6379209Z     |
2020-03-14T18:53:15.6379209Z     |
2020-03-14T18:53:15.6379453Z 223 |         EnumStruct3{f1, f3: SomeEnum::Ints(..), f2} => println(&f1.field1.to_string()),
2020-03-14T18:53:15.6379867Z     |                                                 ^^ help: try ignoring the field: `f2: _`
2020-03-14T18:53:15.6380245Z warning: unused variable: `y`
2020-03-14T18:53:15.6380567Z    --> foo.rs:240:13
2020-03-14T18:53:15.6380702Z     |
2020-03-14T18:53:15.6380702Z     |
2020-03-14T18:53:15.6380870Z 240 |     let (x, y): (u32, u32) = (5, 3);
2020-03-14T18:53:15.6381166Z     |             ^ help: consider prefixing with an underscore: `_y`
2020-03-14T18:53:15.6381500Z warning: unused variable: `r`
2020-03-14T18:53:15.6381801Z    --> foo.rs:263:9
2020-03-14T18:53:15.6381951Z     |
2020-03-14T18:53:15.6381951Z     |
2020-03-14T18:53:15.6382115Z 263 |     let r = some_fields::stat(y);
2020-03-14T18:53:15.6382389Z     |         ^ help: consider prefixing with an underscore: `_r`
2020-03-14T18:53:15.6382733Z warning: unused variable: `r`
2020-03-14T18:53:15.6383036Z    --> foo.rs:265:9
2020-03-14T18:53:15.6383169Z     |
2020-03-14T18:53:15.6383169Z     |
2020-03-14T18:53:15.6383352Z 265 |     let r = SubTrait::stat2(&*s3);
2020-03-14T18:53:15.6383620Z     |         ^ help: consider prefixing with an underscore: `_r`
2020-03-14T18:53:15.6383962Z warning: unused variable: `z`
2020-03-14T18:53:15.6384260Z    --> foo.rs:278:9
2020-03-14T18:53:15.6384394Z     |
2020-03-14T18:53:15.6384394Z     |
2020-03-14T18:53:15.6384610Z 278 |     let z = closure(10, &*s);
2020-03-14T18:53:15.6384889Z     |         ^ help: consider prefixing with an underscore: `_z`
2020-03-14T18:53:15.6385215Z warning: unused variable: `a`
2020-03-14T18:53:15.6385558Z    --> foo.rs:236:28
2020-03-14T18:53:15.6385693Z     |
2020-03-14T18:53:15.6385693Z     |
2020-03-14T18:53:15.6385900Z 236 | fn hello<X: SomeTrait>((z, a) : (u32, String), ex: X) {
2020-03-14T18:53:15.6386322Z     |                            ^ help: consider prefixing with an underscore: `_a`
2020-03-14T18:53:15.6386683Z warning: unused variable: `ut`
2020-03-14T18:53:15.6388151Z    --> foo.rs:315:9
2020-03-14T18:53:15.6388327Z     |
2020-03-14T18:53:15.6388327Z     |
2020-03-14T18:53:15.6388828Z 315 |     let ut = "Les Miséééééééérables";
2020-03-14T18:53:15.6389126Z     |         ^^ help: consider prefixing with an underscore: `_ut`
2020-03-14T18:53:15.6389620Z warning: unused variable: `vs`
2020-03-14T18:53:15.6390614Z    --> foo.rs:324:9
2020-03-14T18:53:15.6390765Z     |
2020-03-14T18:53:15.6390765Z     |
2020-03-14T18:53:15.6391877Z 324 |     let vs = variable_str!(32);
2020-03-14T18:53:15.6392561Z     |         ^^ help: consider prefixing with an underscore: `_vs`
2020-03-14T18:53:15.6393179Z warning: unused variable: `candidates`
2020-03-14T18:53:15.6393846Z    --> foo.rs:326:13
2020-03-14T18:53:15.6394036Z     |
2020-03-14T18:53:15.6394036Z     |
2020-03-14T18:53:15.6394920Z 326 |     let mut candidates: RefCell<HashMap<&'static str, &'static str>> = RefCell::new(HashMap::new());
2020-03-14T18:53:15.6396215Z     |             ^^^^^^^^^^ help: consider prefixing with an underscore: `_candidates`
2020-03-14T18:53:15.6397040Z warning: unused variable: `s1`
2020-03-14T18:53:15.6397420Z    --> foo.rs:330:9
2020-03-14T18:53:15.6397555Z     |
2020-03-14T18:53:15.6397826Z 330 |     let s1 = nofields;
2020-03-14T18:53:15.6397826Z 330 |     let s1 = nofields;
2020-03-14T18:53:15.6398275Z     |         ^^ help: consider prefixing with an underscore: `_s1`
2020-03-14T18:53:15.6398578Z 
2020-03-14T18:53:15.6398728Z warning: unused variable: `s3`
2020-03-14T18:53:15.6399463Z    --> foo.rs:332:9
2020-03-14T18:53:15.6399635Z     |
2020-03-14T18:53:15.6399840Z 332 |     let s3: some_fields = some_fields{ field1: 55};
2020-03-14T18:53:15.6400294Z     |         ^^ help: consider prefixing with an underscore: `_s3`
2020-03-14T18:53:15.6400658Z warning: unused variable: `s4`
2020-03-14T18:53:15.6401144Z    --> foo.rs:333:9
2020-03-14T18:53:15.6401304Z     |
2020-03-14T18:53:15.6401304Z     |
2020-03-14T18:53:15.6401848Z 333 |     let s4: msalias::nested_struct = sub::sub2::nested_struct{ field2: 55};
2020-03-14T18:53:15.6402205Z     |         ^^ help: consider prefixing with an underscore: `_s4`
2020-03-14T18:53:15.6402659Z warning: unused variable: `s4`
2020-03-14T18:53:15.6403009Z    --> foo.rs:334:9
2020-03-14T18:53:15.6403281Z     |
2020-03-14T18:53:15.6403281Z     |
2020-03-14T18:53:15.6403533Z 334 |     let s4: msalias::nested_struct = sub2::nested_struct{ field2: 55};
2020-03-14T18:53:15.6404120Z     |         ^^ help: consider prefixing with an underscore: `_s4`
2020-03-14T18:53:15.6404470Z warning: unused variable: `s`
2020-03-14T18:53:15.6404955Z    --> foo.rs:337:9
2020-03-14T18:53:15.6405093Z     |
2020-03-14T18:53:15.6405093Z     |
2020-03-14T18:53:15.6405296Z 337 |     let s = SameDir::SameStruct{name: "Bob".to_string()};
2020-03-14T18:53:15.6405619Z     |         ^ help: consider prefixing with an underscore: `_s`
2020-03-14T18:53:15.6405954Z warning: unused variable: `s`
2020-03-14T18:53:15.6406274Z    --> foo.rs:338:9
2020-03-14T18:53:15.6406407Z     |
2020-03-14T18:53:15.6406407Z     |
2020-03-14T18:53:15.6406701Z 338 |     let s = SubDir::SubStruct{name:"Bob".to_string()};
2020-03-14T18:53:15.6407007Z     |         ^ help: consider prefixing with an underscore: `_s`
2020-03-14T18:53:15.6407375Z warning: variable `x` is assigned to, but never used
2020-03-14T18:53:15.6407731Z    --> foo.rs:299:21
2020-03-14T18:53:15.6407883Z     |
2020-03-14T18:53:15.6407883Z     |
2020-03-14T18:53:15.6408029Z 299 |             let mut x = $src;
2020-03-14T18:53:15.6408471Z ...
2020-03-14T18:53:15.6408471Z ...
2020-03-14T18:53:15.6408617Z 378 |     internal_vars!(x);
2020-03-14T18:53:15.6409173Z     |
2020-03-14T18:53:15.6409345Z     = note: consider using `_x` instead
2020-03-14T18:53:15.6410973Z     = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)
2020-03-14T18:53:15.6411347Z 
2020-03-14T18:53:15.6411347Z 
2020-03-14T18:53:15.6412110Z warning: value assigned to `x` is never read
2020-03-14T18:53:15.6412711Z    --> foo.rs:300:13
2020-03-14T18:53:15.6412857Z     |
2020-03-14T18:53:15.6413210Z 300 |             x += 100;
2020-03-14T18:53:15.6413377Z     |             ^
2020-03-14T18:53:15.6414171Z ...
2020-03-14T18:53:15.6414320Z 378 |     internal_vars!(x);
2020-03-14T18:53:15.6414975Z     |
2020-03-14T18:53:15.6415661Z     = note: `#[warn(unused_assignments)]` on by default
2020-03-14T18:53:15.6415948Z     = help: maybe it is overwritten before being read?
2020-03-14T18:53:15.6416482Z     = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)
---
2020-03-14T18:53:15.6418854Z 
2020-03-14T18:53:15.6419001Z warning: unused variable: `x`
2020-03-14T18:53:15.6419563Z    --> foo.rs:144:14
2020-03-14T18:53:15.6419710Z     |
2020-03-14T18:53:15.6420229Z 144 |     fn stat2(x: &some_fields) -> u32 {
2020-03-14T18:53:15.6420729Z     |              ^ help: consider prefixing with an underscore: `_x`
2020-03-14T18:53:15.6421443Z warning: function cannot return without recursing
2020-03-14T18:53:15.6421800Z    --> foo.rs:160:5
2020-03-14T18:53:15.6422083Z     |
2020-03-14T18:53:15.6422083Z     |
2020-03-14T18:53:15.6422464Z 160 |     fn Method(&self, x: u32) -> u32 {
2020-03-14T18:53:15.6422756Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot return without recursing
2020-03-14T18:53:15.6423138Z 161 |         self.Method(x);
2020-03-14T18:53:15.6423547Z     |         -------------- recursive call site
2020-03-14T18:53:15.6423959Z     = note: `#[warn(unconditional_recursion)]` on by default
2020-03-14T18:53:15.6423959Z     = note: `#[warn(unconditional_recursion)]` on by default
2020-03-14T18:53:15.6424528Z     = help: a `loop` may express intention better if this is on purpose
2020-03-14T18:53:15.6425228Z warning: variable does not need to be mutable
2020-03-14T18:53:15.6425672Z    --> foo.rs:326:9
2020-03-14T18:53:15.6425811Z     |
2020-03-14T18:53:15.6425811Z     |
2020-03-14T18:53:15.6426305Z 326 |     let mut candidates: RefCell<HashMap<&'static str, &'static str>> = RefCell::new(HashMap::new());
2020-03-14T18:53:15.6437669Z     |         |
2020-03-14T18:53:15.6437860Z     |         help: remove this `mut`
2020-03-14T18:53:15.6438234Z     |
2020-03-14T18:53:15.6438425Z     = note: `#[warn(unused_mut)]` on by default
---
2020-03-14T18:53:15.6441055Z 
2020-03-14T18:53:15.6441221Z warning: static item is never used: `uni`
2020-03-14T18:53:15.6441777Z   --> foo.rs:27:1
2020-03-14T18:53:15.6441908Z    |
2020-03-14T18:53:15.6442275Z 27 | static uni: &'static str = "Les Miséééééééérables";
2020-03-14T18:53:15.6442702Z    |
2020-03-14T18:53:15.6443021Z    = note: `#[warn(dead_code)]` on by default
2020-03-14T18:53:15.6443176Z 
2020-03-14T18:53:15.6443336Z warning: static item is never used: `bob`
2020-03-14T18:53:15.6443336Z warning: static item is never used: `bob`
2020-03-14T18:53:15.6443800Z   --> foo.rs:30:1
2020-03-14T18:53:15.6443929Z    |
2020-03-14T18:53:15.6444119Z 30 | static bob: Option<graphviz::RenderOption> = None;
2020-03-14T18:53:15.6444638Z 
2020-03-14T18:53:15.6444802Z warning: function is never used: `test_alias`
2020-03-14T18:53:15.6445594Z   --> foo.rs:34:4
2020-03-14T18:53:15.6445748Z    |
2020-03-14T18:53:15.6445748Z    |
2020-03-14T18:53:15.6446165Z 34 | fn test_alias<I: Iterator>(i: Option<<I as Iterator>::Item>) {
2020-03-14T18:53:15.6446533Z 
2020-03-14T18:53:15.6446533Z 
2020-03-14T18:53:15.6446711Z warning: field is never read: `ac_lut`
2020-03-14T18:53:15.6447218Z    |
2020-03-14T18:53:15.6447218Z    |
2020-03-14T18:53:15.6447421Z 53 |     ac_lut: Option<[(i16, u8); 1 << LUT_BITS]>,
2020-03-14T18:53:15.6447839Z 
2020-03-14T18:53:15.6447839Z 
2020-03-14T18:53:15.6448020Z warning: struct is never constructed: `TupStruct`
2020-03-14T18:53:15.6449009Z    |
2020-03-14T18:53:15.6449009Z    |
2020-03-14T18:53:15.6449174Z 56 | struct TupStruct(isize, isize, Box<str>);
2020-03-14T18:53:15.6449490Z 
2020-03-14T18:53:15.6449490Z 
2020-03-14T18:53:15.6449664Z warning: function is never used: `test_tup_struct`
2020-03-14T18:53:15.6450150Z    |
2020-03-14T18:53:15.6450150Z    |
2020-03-14T18:53:15.6450478Z 58 | fn test_tup_struct(x: TupStruct) -> isize {
2020-03-14T18:53:15.6450813Z 
2020-03-14T18:53:15.6450975Z warning: enum is never used: `nested_enum`
2020-03-14T18:53:15.6451298Z   --> foo.rs:83:18
2020-03-14T18:53:15.6451447Z    |
2020-03-14T18:53:15.6451447Z    |
2020-03-14T18:53:15.6451597Z 83 |         pub enum nested_enum {
2020-03-14T18:53:15.6451961Z    |                  ^^^^^^^^^^^
2020-03-14T18:53:15.6452084Z 
2020-03-14T18:53:15.6452262Z warning: static item is never used: `yy`
2020-03-14T18:53:15.6452736Z  --> SubDir/mod.rs:6:1
2020-03-14T18:53:15.6452859Z   |
2020-03-14T18:53:15.6453004Z 6 | static yy: usize = 25;
2020-03-14T18:53:15.6453269Z 
2020-03-14T18:53:15.6453415Z warning: function is never used: `hello`
2020-03-14T18:53:15.6453747Z   --> SubDir/mod.rs:11:20
2020-03-14T18:53:15.6454055Z    |
---
2020-03-14T18:53:15.6457175Z 
2020-03-14T18:53:15.6457359Z warning: method is never used: `stat2`
2020-03-14T18:53:15.6457706Z    --> foo.rs:144:5
2020-03-14T18:53:15.6457858Z     |
2020-03-14T18:53:15.6458214Z 144 |     fn stat2(x: &some_fields) -> u32 {
2020-03-14T18:53:15.6459255Z 
2020-03-14T18:53:15.6459417Z warning: method is never used: `align_to`
2020-03-14T18:53:15.6459799Z    --> foo.rs:148:5
2020-03-14T18:53:15.6459938Z     |
---
2020-03-14T18:53:15.6461056Z     |
2020-03-14T18:53:15.6461749Z 152 |     fn test(&mut self) {
2020-03-14T18:53:15.6461952Z     |     ^^^^^^^^^^^^^^^^^^
2020-03-14T18:53:15.6462078Z 
2020-03-14T18:53:15.6462457Z warning: function is never used: `f_with_params`
2020-03-14T18:53:15.6463016Z     |
2020-03-14T18:53:15.6463016Z     |
2020-03-14T18:53:15.6463230Z 174 | fn f_with_params<T: SomeTrait>(x: &T) {
2020-03-14T18:53:15.6463652Z 
2020-03-14T18:53:15.6464020Z warning: variant is never constructed: `Ints`
2020-03-14T18:53:15.6464939Z    --> foo.rs:181:5
2020-03-14T18:53:15.6465093Z     |
2020-03-14T18:53:15.6465093Z     |
2020-03-14T18:53:15.6465243Z 181 |     Ints(isize, isize),
2020-03-14T18:53:15.6465443Z     |     ^^^^^^^^^^^^^^^^^^
2020-03-14T18:53:15.6465568Z 
2020-03-14T18:53:15.6465752Z warning: variant is never constructed: `Floats`
2020-03-14T18:53:15.6466158Z    --> foo.rs:182:5
2020-03-14T18:53:15.6466304Z     |
2020-03-14T18:53:15.6466452Z 182 |     Floats(f64, f64),
2020-03-14T18:53:15.6466781Z 
2020-03-14T18:53:15.6467124Z warning: variant is never constructed: `SomeConst1`
2020-03-14T18:53:15.6467670Z    --> foo.rs:189:5
2020-03-14T18:53:15.6467827Z     |
2020-03-14T18:53:15.6467827Z     |
2020-03-14T18:53:15.6468074Z 189 |     SomeConst1,
2020-03-14T18:53:15.6468232Z     |     ^^^^^^^^^^
2020-03-14T18:53:15.6468344Z 
2020-03-14T18:53:15.6468729Z warning: variant is never constructed: `EnumStruct`
2020-03-14T18:53:15.6469270Z     |
2020-03-14T18:53:15.6469270Z     |
2020-03-14T18:53:15.6469466Z 195 |     EnumStruct{a:isize, b:isize},
2020-03-14T18:53:15.6470037Z 
2020-03-14T18:53:15.6470037Z 
2020-03-14T18:53:15.6470236Z warning: variant is never constructed: `EnumStruct3`
2020-03-14T18:53:15.6471288Z     |
2020-03-14T18:53:15.6471288Z     |
2020-03-14T18:53:15.6471715Z 197 |     EnumStruct3{f1:MyType, f2:MyType, f3:SomeEnum<'static>}
2020-03-14T18:53:15.6472222Z 
2020-03-14T18:53:15.6472222Z 
2020-03-14T18:53:15.6472411Z warning: function is never used: `matchSomeStructEnum2`
2020-03-14T18:53:15.6472931Z     |
2020-03-14T18:53:15.6472931Z     |
2020-03-14T18:53:15.6473123Z 218 | fn matchSomeStructEnum2(se: SomeStructEnum) {
2020-03-14T18:53:15.6473494Z 
2020-03-14T18:53:15.6473669Z warning: field is never read: `used_link_args`
2020-03-14T18:53:15.6474506Z    --> foo.rs:282:5
2020-03-14T18:53:15.6474659Z     |
2020-03-14T18:53:15.6474659Z     |
2020-03-14T18:53:15.6474999Z 282 |     used_link_args: RefCell<[&'static str; 0]>,
2020-03-14T18:53:15.6475253Z     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2020-03-14T18:53:15.6475405Z 
2020-03-14T18:53:15.6475775Z warning: struct is never constructed: `CharSearcher`
2020-03-14T18:53:15.6476362Z    --> foo.rs:405:8
2020-03-14T18:53:15.6476718Z     |
2020-03-14T18:53:15.6477138Z 405 | struct CharSearcher<'a>(<CharEqPattern as Pattern<'a>>::Searcher);
2020-03-14T18:53:15.6477528Z 
2020-03-14T18:53:15.6477709Z warning: function is never used: `test_format_args`
2020-03-14T18:53:15.6478255Z    --> foo.rs:426:4
2020-03-14T18:53:15.6478400Z     |
---
2020-03-14T18:53:15.6479824Z     |
2020-03-14T18:53:15.6479958Z 437 | union TestUnion {
2020-03-14T18:53:15.6480114Z     |       ^^^^^^^^^
2020-03-14T18:53:15.6480241Z 
2020-03-14T18:53:15.6480424Z warning: struct is never constructed: `StructWithDocs`
2020-03-14T18:53:15.6480921Z     |
2020-03-14T18:53:15.6480921Z     |
2020-03-14T18:53:15.6481394Z 458 | struct StructWithDocs;
2020-03-14T18:53:15.6481668Z 
2020-03-14T18:53:15.6481949Z warning: static variable `uni` should have an upper case name
2020-03-14T18:53:15.6482598Z   --> foo.rs:27:8
2020-03-14T18:53:15.6482912Z    |
2020-03-14T18:53:15.6482912Z    |
2020-03-14T18:53:15.6483315Z 27 | static uni: &'static str = "Les Miséééééééérables";
2020-03-14T18:53:15.6483615Z    |        ^^^ help: convert the identifier to upper case: `UNI`
2020-03-14T18:53:15.6484118Z    = note: `#[warn(non_upper_case_globals)]` on by default
2020-03-14T18:53:15.6484285Z 
2020-03-14T18:53:15.6484285Z 
2020-03-14T18:53:15.6484465Z warning: static variable `yy` should have an upper case name
2020-03-14T18:53:15.6484973Z    |
2020-03-14T18:53:15.6484973Z    |
2020-03-14T18:53:15.6485117Z 28 | static yy: usize = 25;
2020-03-14T18:53:15.6485420Z    |        ^^ help: convert the identifier to upper case (notice the capitalization): `YY`
2020-03-14T18:53:15.6485661Z 
2020-03-14T18:53:15.6485861Z warning: static variable `bob` should have an upper case name
2020-03-14T18:53:15.6486680Z    |
2020-03-14T18:53:15.6486680Z    |
2020-03-14T18:53:15.6486897Z 30 | static bob: Option<graphviz::RenderOption> = None;
2020-03-14T18:53:15.6487200Z    |        ^^^ help: convert the identifier to upper case: `BOB`
2020-03-14T18:53:15.6487800Z warning: unused `std::result::Result` that must be used
2020-03-14T18:53:15.6488150Z   --> foo.rs:63:5
2020-03-14T18:53:15.6488292Z    |
2020-03-14T18:53:15.6488292Z    |
2020-03-14T18:53:15.6488494Z 63 |     std::io::stdout().write_all(s.as_bytes());
2020-03-14T18:53:15.6489098Z    |
2020-03-14T18:53:15.6489555Z    = note: `#[warn(unused_must_use)]` on by default
2020-03-14T18:53:15.6490325Z    = note: this `Result` may be an `Err` variant, which should be handled
2020-03-14T18:53:15.6490708Z 
2020-03-14T18:53:15.6490708Z 
2020-03-14T18:53:15.6490892Z warning: module `SameDir` should have a snake case name
2020-03-14T18:53:15.6491301Z   --> foo.rs:90:9
2020-03-14T18:53:15.6491443Z    |
2020-03-14T18:53:15.6491580Z 90 | pub mod SameDir;
2020-03-14T18:53:15.6491876Z    |         ^^^^^^^ help: convert the identifier to snake case: `same_dir`
2020-03-14T18:53:15.6492469Z    = note: `#[warn(non_snake_case)]` on by default
2020-03-14T18:53:15.6492782Z 
2020-03-14T18:53:15.6493198Z warning: module `SubDir` should have a snake case name
2020-03-14T18:53:15.6493687Z   --> foo.rs:91:9
2020-03-14T18:53:15.6493687Z   --> foo.rs:91:9
2020-03-14T18:53:15.6493836Z    |
2020-03-14T18:53:15.6493985Z 91 | pub mod SubDir;
2020-03-14T18:53:15.6494244Z    |         ^^^^^^ help: convert the identifier to snake case: `sub_dir`
2020-03-14T18:53:15.6494639Z warning: module `SameDir2` should have a snake case name
2020-03-14T18:53:15.6495005Z   --> foo.rs:94:9
2020-03-14T18:53:15.6495140Z    |
2020-03-14T18:53:15.6495140Z    |
2020-03-14T18:53:15.6495274Z 94 | pub mod SameDir2;
2020-03-14T18:53:15.6495558Z    |         ^^^^^^^^ help: convert the identifier to snake case: `same_dir2`
2020-03-14T18:53:15.6495964Z warning: trait method `Method` should have a snake case name
2020-03-14T18:53:15.6496492Z    --> foo.rs:110:8
2020-03-14T18:53:15.6496631Z     |
2020-03-14T18:53:15.6496631Z     |
2020-03-14T18:53:15.6497292Z 110 |     fn Method(&self, x: u32) -> u32;
2020-03-14T18:53:15.6497708Z     |        ^^^^^^ help: convert the identifier to snake case: `method`
2020-03-14T18:53:15.6497938Z 
2020-03-14T18:53:15.6498124Z warning: function `matchSomeEnum` should have a snake case name
2020-03-14T18:53:15.6498673Z     |
2020-03-14T18:53:15.6498673Z     |
2020-03-14T18:53:15.6498840Z 200 | fn matchSomeEnum(val: SomeEnum) {
2020-03-14T18:53:15.6499145Z     |    ^^^^^^^^^^^^^ help: convert the identifier to snake case: `match_some_enum`
2020-03-14T18:53:15.6499370Z 
2020-03-14T18:53:15.6499579Z warning: function `matchSomeStructEnum` should have a snake case name
2020-03-14T18:53:15.6500240Z     |
2020-03-14T18:53:15.6500240Z     |
2020-03-14T18:53:15.6500434Z 209 | fn matchSomeStructEnum(se: SomeStructEnum) {
2020-03-14T18:53:15.6500846Z     |    ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `match_some_struct_enum`
2020-03-14T18:53:15.6501265Z warning: the `a:` in this pattern is redundant
2020-03-14T18:53:15.6501607Z    --> foo.rs:211:36
2020-03-14T18:53:15.6501742Z     |
2020-03-14T18:53:15.6501742Z     |
2020-03-14T18:53:15.6501962Z 211 |         SomeStructEnum::EnumStruct{a:a, ..} => println(&a.to_string()),
2020-03-14T18:53:15.6502395Z     |                                    ^^^ help: use shorthand field pattern: `a`
2020-03-14T18:53:15.6503004Z     = note: `#[warn(non_shorthand_field_patterns)]` on by default
2020-03-14T18:53:15.6503196Z 
2020-03-14T18:53:15.6503361Z warning: the `f1:` in this pattern is redundant
2020-03-14T18:53:15.6503715Z    --> foo.rs:212:37
2020-03-14T18:53:15.6503715Z    --> foo.rs:212:37
2020-03-14T18:53:15.6503871Z     |
2020-03-14T18:53:15.6504126Z 212 |         SomeStructEnum::EnumStruct2{f1:f1, f2:f_2} => println(&f_2.field1.to_string()),
2020-03-14T18:53:15.6504527Z     |                                     ^^^^^ help: use shorthand field pattern: `f1`
2020-03-14T18:53:15.6504778Z 
2020-03-14T18:53:15.6504979Z warning: function `matchSomeStructEnum2` should have a snake case name
2020-03-14T18:53:15.6505481Z     |
2020-03-14T18:53:15.6505481Z     |
2020-03-14T18:53:15.6505682Z 218 | fn matchSomeStructEnum2(se: SomeStructEnum) {
2020-03-14T18:53:15.6506028Z     |    ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `match_some_struct_enum2`
2020-03-14T18:53:15.6506637Z warning: the `f2:` in this pattern is redundant
2020-03-14T18:53:15.6506962Z    --> foo.rs:222:25
2020-03-14T18:53:15.6507096Z     |
2020-03-14T18:53:15.6507096Z     |
2020-03-14T18:53:15.6507325Z 222 |         EnumStruct2{f1, f2: f2} => println(&f1.field1.to_string()),
2020-03-14T18:53:15.6507661Z     |                         ^^^^^^ help: use shorthand field pattern: `f2`
2020-03-14T18:53:15.6507868Z 
2020-03-14T18:53:15.6508056Z warning: function `matchSomeOtherEnum` should have a snake case name
2020-03-14T18:53:15.6508552Z     |
2020-03-14T18:53:15.6508552Z     |
2020-03-14T18:53:15.6508734Z 228 | fn matchSomeOtherEnum(val: SomeOtherEnum) {
2020-03-14T18:53:15.6509080Z     |    ^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `match_some_other_enum`
2020-03-14T18:53:15.6509313Z 
2020-03-14T18:53:15.6509486Z warning: static variable `yy` should have an upper case name
2020-03-14T18:53:15.6510432Z  --> SubDir/mod.rs:6:8
2020-03-14T18:53:15.6510592Z   |
2020-03-14T18:53:15.6510734Z 6 | static yy: usize = 25;
2020-03-14T18:53:15.6511035Z   |        ^^ help: convert the identifier to upper case (notice the capitalization): `YY`
2020-03-14T18:53:15.6511467Z error: linking with `cc` failed: exit code: 1
2020-03-14T18:53:15.6511643Z   |
2020-03-14T18:53:15.6511643Z   |
2020-03-14T18:53:15.6526927Z   = note: "cc" "-Wl,--as-needed" "-Wl,-z,noexecstack" "-m64" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.0.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.1.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.10.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.11.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.12.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.13.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.14.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.15.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.2.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.3.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.4.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.5.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.6.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.7.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.8.rcgu.o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.9.rcgu.o" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.5fi6c8ty3hqyycqf.rcgu.o" "-Wl,--gc-sections" "-pie" "-Wl,-zrelro" "-Wl,-znow" "-nodefaultlibs" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib" "-Wl,-Bstatic" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libserialize-8908f559b6dd6e6f.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libindexmap-79d02798c5d2a5c4.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libsmallvec-2c0a0e311f35cd16.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/libkrate2.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libgraphviz-9bd01bf4791bb936.rlib" "-Wl,--start-group" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-596f1d5dda622271.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-8f08d218a46e9a89.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libhashbrown-d5d39f69a0d84052.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_alloc-e0a82c9599c51854.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libbacktrace-45ddcff4132c3853.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libbacktrace_sys-ad5b774686eb472a.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_demangle-d922433b80d36220.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-66b8926d470f9a72.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcfg_if-d1af63221e002c72.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-8006d46c5bfd7eb1.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-2db0e8ddc8440cb5.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_std_workspace_core-78518076c188514b.rlib" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-b7586de83bb44c64.rlib" "-Wl,--end-group" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-48b641724a4e912f.rlib" "-Wl,-Bdynamic" "-ldl" "-lrt" "-lpthread" "-lgcc_s" "-lc" "-lm" "-lrt" "-lpthread" "-lutil" "-lutil"
2020-03-14T18:53:15.6537621Z   = note: /checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/libkrate2.rlib(krate2.krate2.3a1fbbbh-cgu.5.rcgu.o): In function `core::alloc::Layout::array::{{closure}}':
2020-03-14T18:53:15.6538687Z           krate2.3a1fbbbh-cgu.5:(.text._ZN4core5alloc6Layout5array28_$u7b$$u7b$closure$u7d$$u7d$17ha5d3faea49f29034E+0x0): multiple definition of `core::alloc::Layout::array::{{closure}}'
2020-03-14T18:53:15.6539940Z           /checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/save-analysis/save-analysis/test.test.7rcbfp3g-cgu.6.rcgu.o:test.7rcbfp3g-cgu.6:(.text._ZN4core5alloc6Layout5array28_$u7b$$u7b$closure$u7d$$u7d$17ha5d3faea49f29034E+0x0): first defined here
2020-03-14T18:53:15.6540560Z           collect2: error: ld returned 1 exit status
2020-03-14T18:53:15.6540845Z 
2020-03-14T18:53:15.6540990Z error: aborting due to previous error
2020-03-14T18:53:15.6541137Z 
2020-03-14T18:53:15.6541264Z make: *** [code] Error 1
---
2020-03-14T18:53:15.6543940Z thread 'main' panicked at 'Some tests failed', src/tools/compiletest/src/main.rs:348:22
2020-03-14T18:53:15.6544286Z note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
2020-03-14T18:53:15.6544481Z 
2020-03-14T18:53:15.6544561Z 
2020-03-14T18:53:15.6555437Z command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0-tools-bin/compiletest" "--compile-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib" "--run-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib" "--rustc-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "--rustdoc-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustdoc" "--src-base" "/checkout/src/test/run-make-fulldeps" "--build-base" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps" "--stage-id" "stage2-x86_64-unknown-linux-gnu" "--mode" "run-make" "--target" "x86_64-unknown-linux-gnu" "--host" "x86_64-unknown-linux-gnu" "--llvm-filecheck" "/usr/lib/llvm-7/bin/FileCheck" "--host-rustcflags" "-Crpath -O -Cdebuginfo=0 -Zunstable-options  -Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--target-rustcflags" "-Crpath -O -Cdebuginfo=0 -Zunstable-options  -Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--docck-python" "/usr/bin/python2.7" "--lldb-python" "/usr/bin/python2.7" "--gdb" "/usr/bin/gdb" "--quiet" "--llvm-version" "7.0.0\n" "--system-llvm" "--cc" "cc" "--cxx" "c++" "--cflags" "-ffunction-sections -fdata-sections -fPIC -m64" "--llvm-components" "aarch64 aarch64asmparser aarch64asmprinter aarch64codegen aarch64desc aarch64disassembler aarch64info aarch64utils aggressiveinstcombine all all-targets amdgpu amdgpuasmparser amdgpuasmprinter amdgpucodegen amdgpudesc amdgpudisassembler amdgpuinfo amdgpuutils analysis arm armasmparser armasmprinter armcodegen armdesc armdisassembler arminfo armutils asmparser asmprinter avr avrasmparser avrasmprinter avrcodegen avrdesc avrdisassembler avrinfo binaryformat bitreader bitwriter bpf bpfasmparser bpfasmprinter bpfcodegen bpfdesc bpfdisassembler bpfinfo codegen core coroutines coverage debuginfocodeview debuginfodwarf debuginfomsf debuginfopdb demangle dlltooldriver engine executionengine fuzzmutate globalisel hexagon hexagonasmparser hexagoncodegen hexagondesc hexagondisassembler hexagoninfo instcombine instrumentation interpreter ipo irreader lanai lanaiasmparser lanaiasmprinter lanaicodegen lanaidesc lanaidisassembler lanaiinfo libdriver lineeditor linker lto mc mcdisassembler mcjit mcparser mips mipsasmparser mipsasmprinter mipscodegen mipsdesc mipsdisassembler mipsinfo mirparser msp430 msp430asmprinter msp430codegen msp430desc msp430info native nativecodegen nvptx nvptxasmprinter nvptxcodegen nvptxdesc nvptxinfo objcarcopts object objectyaml option orcjit passes perfjitevents powerpc powerpcasmparser powerpcasmprinter powerpccodegen powerpcdesc powerpcdisassembler powerpcinfo profiledata runtimedyld scalaropts selectiondag sparc sparcasmparser sparcasmprinter sparccodegen sparcdesc sparcdisassembler sparcinfo support symbolize systemz systemzasmparser systemzasmprinter systemzcodegen systemzdesc systemzdisassembler systemzinfo tablegen target transformutils vectorize webassembly webassemblyasmparser webassemblyasmprinter webassemblycodegen webassemblydesc webassemblydisassembler webassemblyinfo windowsmanifest x86 x86asmparser x86asmprinter x86codegen x86desc x86disassembler x86info x86utils xcore xcoreasmprinter xcorecodegen xcoredesc xcoredisassembler xcoreinfo" "--ar" "ar" "--llvm-bin-dir" "/usr/lib/llvm-7/bin" "--adb-path" "adb" "--adb-test-dir" "/data/tmp/work" "--android-cross-path" "" "--color" "always"
2020-03-14T18:53:15.6561104Z 
2020-03-14T18:53:15.6561184Z 
2020-03-14T18:53:15.6561407Z failed to run: /checkout/obj/build/bootstrap/debug/bootstrap test
2020-03-14T18:53:15.6561683Z Build completed unsuccessfully in 1:32:08
2020-03-14T18:53:15.6561683Z Build completed unsuccessfully in 1:32:08
2020-03-14T18:53:15.6561881Z == clock drift check ==
2020-03-14T18:53:15.6562074Z   local time: Sat Mar 14 18:53:15 UTC 2020
2020-03-14T18:53:15.9158596Z   network time: Sat, 14 Mar 2020 18:53:15 GMT
2020-03-14T18:53:15.9165847Z == end clock drift check ==
2020-03-14T18:53:17.9854710Z 
2020-03-14T18:53:17.9925444Z ##[error]Bash exited with code '1'.
2020-03-14T18:53:17.9938909Z ##[section]Finishing: Run build
2020-03-14T18:53:17.9992176Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/69749/merge to s
2020-03-14T18:53:17.9996721Z Task         : Get sources
2020-03-14T18:53:17.9997022Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-03-14T18:53:17.9997282Z Version      : 1.0.0
2020-03-14T18:53:17.9997477Z Author       : Microsoft
2020-03-14T18:53:17.9997477Z Author       : Microsoft
2020-03-14T18:53:17.9997784Z Help         : [More Information](https://go.microsoft.com/fwlink/?LinkId=798199)
2020-03-14T18:53:17.9998116Z ==============================================================================
2020-03-14T18:53:18.2978416Z Cleaning any cached credential from repository: rust-lang/rust (GitHub)
2020-03-14T18:53:18.3020967Z ##[section]Finishing: Checkout rust-lang/rust@refs/pull/69749/merge to s
2020-03-14T18:53:18.3114700Z Cleaning up task key
2020-03-14T18:53:18.3115968Z Start cleaning up orphan processes.
2020-03-14T18:53:18.3510976Z Terminate orphan process: pid (5995) (python)
2020-03-14T18:53:18.3577399Z ##[section]Finishing: Finalize Job
