\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/associated-types/associated-types-eq-3.rs","byte_start":1096,"byte_end":1100,"line_start":48,"line_end":48,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    foo1(a);","highlight_start":5,"highlight_end":9}],"label":"expected usize, found struct `Bar`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected type `usize`\n   found type `Bar`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `foo1`","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/associated-types/associated-types-eq-3.rs","byte_start":736,"byte_end":764,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"fn foo1<I: Foo<A=Bar>>(x: I) {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"error[E0271]: type mismatch resolving `<isize as Foo>::A == Bar`\n  --> /checkout/src/test/ui/associated-types/associated-types-eq-3.rs:48:5\n   |\nLL |     foo1(a);\n   |     ^^^^ expected usize, found struct `Bar`\n   |\n   = note: expected type `usize`\n              found type `Bar`\nnote: required by `foo1`\n  --> /checkout/src/test/ui/associated-types/associated-types-eq-3.rs:28:1\n   |\nLL | fn foo1<I: Foo<A=Bar>>(x: I) {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[00:49:31] {"message":"type mismatch resolving `<isize as Foo>::A == Bar`","code":{"code":"E0271","explanation":"\nThis is because of a type mismatch between the associated type of some\ntrait (e.g., `T::Bar`, where `T` implements `trait Quux { type Bar; }`)\nand another type `U` that is required to be equal to `T::Bar`, but is not.\nExamples follow.\n\nHere is a basic example:\n\n