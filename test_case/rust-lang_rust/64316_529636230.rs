plain
2019-09-09T17:38:40.3427321Z ##[command]git remote add origin https://github.com/rust-lang/rust
2019-09-09T17:38:41.1899622Z ##[command]git config gc.auto 0
2019-09-09T17:38:41.1907776Z ##[command]git config --get-all http.https://github.com/rust-lang/rust.extraheader
2019-09-09T17:38:41.1911849Z ##[command]git config --get-all http.proxy
2019-09-09T17:38:41.1914244Z ##[command]git -c http.extraheader="AUTHORIZATION: basic ***" fetch --force --tags --prune --progress --no-recurse-submodules --depth=2 origin +refs/heads/*:refs/remotes/origin/* +refs/pull/64316/merge:refs/remotes/pull/64316/merge
---
2019-09-09T18:45:25.7876285Z .................................................................................................... 1500/9003
2019-09-09T18:45:32.0205141Z .................................................................................................... 1600/9003
2019-09-09T18:45:45.6940700Z .....................................................i...............i.............................. 1700/9003
2019-09-09T18:45:54.0972014Z .................................................................................................... 1800/9003
2019-09-09T18:46:09.7951161Z ............................................iiiii................................................... 1900/9003
2019-09-09T18:46:21.7954512Z .................................................................................................... 2100/9003
2019-09-09T18:46:24.6085580Z .................................................................................................... 2200/9003
2019-09-09T18:46:28.8949137Z .................................................................................................... 2300/9003
2019-09-09T18:46:37.3529397Z .................................................................................................... 2400/9003
---
2019-09-09T18:49:51.4238691Z ...............................i...............i.................................................... 4700/9003
2019-09-09T18:50:04.3742124Z .................................................................................................... 4800/9003
2019-09-09T18:50:11.1364736Z .................................................................................................... 4900/9003
2019-09-09T18:50:22.9149536Z .................................................................................................... 5000/9003
2019-09-09T18:50:29.2091395Z .............ii.ii.................................................................................. 5100/9003
2019-09-09T18:50:40.9211436Z .................................................................................................... 5300/9003
2019-09-09T18:50:51.7282349Z ............................................................................i....................... 5400/9003
2019-09-09T18:50:59.9034246Z .................................................................................................... 5500/9003
2019-09-09T18:51:06.7076831Z .................................................................................................... 5600/9003
2019-09-09T18:51:06.7076831Z .................................................................................................... 5600/9003
2019-09-09T18:51:18.3653102Z ......................................................................ii...i..ii...........i........ 5700/9003
2019-09-09T18:51:45.5458932Z .................................................................................................... 5900/9003
2019-09-09T18:51:55.9348011Z .................................................................................................... 6000/9003
2019-09-09T18:51:55.9348011Z .................................................................................................... 6000/9003
2019-09-09T18:52:04.8453296Z ........................................................................i..ii....................... 6100/9003
2019-09-09T18:52:36.8044003Z .................................................................................................... 6300/9003
2019-09-09T18:52:39.0873427Z ...............................i.................................................................... 6400/9003
2019-09-09T18:52:41.4068250Z .................................................................................................... 6500/9003
2019-09-09T18:52:44.2690764Z ...i................................................................................................ 6600/9003
---
2019-09-09T18:57:54.3119284Z  finished in 21.498
2019-09-09T18:57:54.3332139Z Check compiletest suite=codegen mode=codegen (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2019-09-09T18:57:54.5163539Z 
2019-09-09T18:57:54.5163851Z running 150 tests
2019-09-09T18:57:58.0662986Z i....iii......iii..iiii....i.............................i..i..................i....i.........ii.i.i 100/150
2019-09-09T18:58:00.2482077Z ..iiii..............i.........iii.i.......ii......
2019-09-09T18:58:00.2483654Z 
2019-09-09T18:58:00.2485937Z  finished in 5.915
2019-09-09T18:58:00.2684013Z Check compiletest suite=codegen-units mode=codegen-units (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2019-09-09T18:58:00.4538914Z 
---
2019-09-09T18:58:02.7114088Z  finished in 2.442
2019-09-09T18:58:02.7332410Z Check compiletest suite=assembly mode=assembly (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2019-09-09T18:58:02.9068425Z 
2019-09-09T18:58:02.9069313Z running 9 tests
2019-09-09T18:58:02.9070599Z iiiiiiiii
2019-09-09T18:58:02.9073212Z 
2019-09-09T18:58:02.9073504Z  finished in 0.174
2019-09-09T18:58:02.9286866Z Check compiletest suite=incremental mode=incremental (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2019-09-09T18:58:03.1124593Z 
---
2019-09-09T18:58:23.6077617Z  finished in 20.106
2019-09-09T18:58:23.6079121Z Check compiletest suite=debuginfo mode=debuginfo-gdb+lldb (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2019-09-09T18:58:23.6079204Z 
2019-09-09T18:58:23.6079252Z running 123 tests
2019-09-09T18:58:49.3437754Z .iiiii...i.....i..i...i..i.i.i..i.ii..i.i.....i..i....ii..........iiii..........i...ii...i.......ii. 100/123
2019-09-09T18:58:54.4425323Z i.i.i......iii.i.....ii
2019-09-09T18:58:54.4425791Z 
2019-09-09T18:58:54.4427256Z  finished in 31.384
2019-09-09T18:58:54.4438799Z Uplifting stage1 rustc (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2019-09-09T18:58:54.4439139Z Copying stage2 rustc from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)
---
2019-09-09T19:13:10.7088123Z .................................................................................................... 100/977
2019-09-09T19:13:10.7188608Z .................................................................................................... 200/977
2019-09-09T19:13:10.7277922Z .................................................................................................... 300/977
2019-09-09T19:13:10.7464082Z .................................................................................................... 400/977
2019-09-09T19:13:10.9263689Z ..ii................................................................................................ 500/977
2019-09-09T19:13:10.9848295Z .................................................................................................... 700/977
2019-09-09T19:13:10.9914704Z .................................................................................................... 800/977
2019-09-09T19:13:11.6057589Z .................................................................................................... 900/977
2019-09-09T19:13:12.8000941Z .............................................................................
2019-09-09T19:13:12.8000941Z .............................................................................
2019-09-09T19:13:12.8001933Z test result: ok. 975 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out
2019-09-09T19:13:12.8002221Z 
2019-09-09T19:13:12.8003873Z    Doc-tests core
2019-09-09T19:13:18.3654516Z 
2019-09-09T19:13:18.3672290Z running 2400 tests
2019-09-09T19:13:30.3211665Z ......iiiii......................................................................................... 100/2400
2019-09-09T19:13:41.9583757Z ...........................................................................ii....................... 200/2400
2019-09-09T19:13:55.0672271Z .................................................................................................i.. 300/2400
2019-09-09T19:14:09.1825640Z .................................................................................................... 400/2400
2019-09-09T19:14:20.2953363Z ............................................i..i.................iiii............................... 500/2400
2019-09-09T19:14:42.1157626Z .................................................................................................... 700/2400
2019-09-09T19:14:53.2532198Z .................................................................................................... 800/2400
2019-09-09T19:15:04.3287627Z .................................................................................................... 900/2400
2019-09-09T19:15:15.4414457Z .................................................................................................... 1000/2400
---
2019-09-09T19:19:53.4418155Z 
2019-09-09T19:19:53.4419192Z running 991 tests
2019-09-09T19:20:16.3431270Z i................................................................................................... 100/991
2019-09-09T19:20:28.7683202Z .................................................................................................... 200/991
2019-09-09T19:20:37.7338084Z .................iii......i......i...i......i....................................................... 300/991
2019-09-09T19:20:44.0808356Z .................................................................................................... 400/991
2019-09-09T19:20:52.5604745Z ..................................i..i.................................ii........................... 500/991
2019-09-09T19:21:08.7535460Z .................................................................................................... 700/991
2019-09-09T19:21:08.7535460Z .................................................................................................... 700/991
2019-09-09T19:21:17.6286278Z .................iiii............................................................................... 800/991
2019-09-09T19:21:33.7469739Z .................................................................................................... 900/991
2019-09-09T19:21:41.9681092Z .......................................iiii................................................
2019-09-09T19:21:41.9683517Z 
2019-09-09T19:21:41.9791196Z  finished in 217.584
2019-09-09T19:21:41.9810921Z Testing term stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2019-09-09T19:21:42.3224179Z    Compiling term v0.0.0 (/checkout/src/libterm)
---
2019-09-09T19:25:08.0923015Z     Finished release [optimized] target(s) in 0.17s
2019-09-09T19:25:08.0924294Z  finished in 0.180
2019-09-09T19:25:08.0924829Z Testing serialize stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2019-09-09T19:25:08.0925492Z    Compiling serialize v0.0.0 (/checkout/src/libserialize)
2019-09-09T19:25:08.6566532Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6571836Z    --> src/libserialize/tests/json.rs:852:27
2019-09-09T19:25:08.6579632Z 852 |     use std::collections::HashMap;
2019-09-09T19:25:08.6579632Z 852 |     use std::collections::HashMap;
2019-09-09T19:25:08.6587848Z     |                           ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6596301Z     |
2019-09-09T19:25:08.6604298Z     = note: `-D rustc::default-hash-types` implied by `-D warnings`
2019-09-09T19:25:08.6610399Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6617134Z 
2019-09-09T19:25:08.6623942Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6631254Z    --> src/libserialize/tests/json.rs:853:17
2019-09-09T19:25:08.6638817Z     |
2019-09-09T19:25:08.6661977Z 853 |     let mut hm: HashMap<usize, bool> = HashMap::new();
2019-09-09T19:25:08.6663307Z     |                 ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6681563Z     |
2019-09-09T19:25:08.6681919Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6681964Z 
2019-09-09T19:25:08.6682236Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6682525Z    --> src/libserialize/tests/json.rs:853:40
2019-09-09T19:25:08.6682741Z     |
2019-09-09T19:25:08.6683053Z 853 |     let mut hm: HashMap<usize, bool> = HashMap::new();
2019-09-09T19:25:08.6683427Z     |                                        ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6683683Z     |
2019-09-09T19:25:08.6684154Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6684194Z 
2019-09-09T19:25:08.6684453Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6684709Z    --> src/libserialize/tests/json.rs:867:27
2019-09-09T19:25:08.6685201Z 867 |     use std::collections::HashMap;
2019-09-09T19:25:08.6685201Z 867 |     use std::collections::HashMap;
2019-09-09T19:25:08.6686189Z     |                           ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6686452Z     |
2019-09-09T19:25:08.6687021Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6687062Z 
2019-09-09T19:25:08.6687348Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6687612Z    --> src/libserialize/tests/json.rs:868:17
2019-09-09T19:25:08.6687825Z     |
2019-09-09T19:25:08.6688135Z 868 |     let mut hm: HashMap<usize, bool> = HashMap::new();
2019-09-09T19:25:08.6688460Z     |                 ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6688683Z     |
2019-09-09T19:25:08.6689167Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6689212Z 
2019-09-09T19:25:08.6689462Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6689721Z    --> src/libserialize/tests/json.rs:868:40
2019-09-09T19:25:08.6690137Z     |
2019-09-09T19:25:08.6690430Z 868 |     let mut hm: HashMap<usize, bool> = HashMap::new();
2019-09-09T19:25:08.6690789Z     |                                        ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6691014Z     |
2019-09-09T19:25:08.6691401Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6691468Z 
2019-09-09T19:25:08.6691759Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6692038Z    --> src/libserialize/tests/json.rs:933:27
2019-09-09T19:25:08.6692544Z 933 |     use std::collections::HashMap;
2019-09-09T19:25:08.6692544Z 933 |     use std::collections::HashMap;
2019-09-09T19:25:08.6692871Z     |                           ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6693103Z     |
2019-09-09T19:25:08.6693398Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6693437Z 
2019-09-09T19:25:08.6693709Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6693995Z    --> src/libserialize/tests/json.rs:940:19
2019-09-09T19:25:08.6694491Z 940 |     let mut map = HashMap::new();
2019-09-09T19:25:08.6694491Z 940 |     let mut map = HashMap::new();
2019-09-09T19:25:08.6694833Z     |                   ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6695056Z     |
2019-09-09T19:25:08.6695705Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6695750Z 
2019-09-09T19:25:08.6696050Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6696313Z    --> src/libserialize/tests/json.rs:944:18
2019-09-09T19:25:08.6696557Z     |
2019-09-09T19:25:08.6696878Z 944 |     let decoded: HashMap<Enum, _> = json::decode(&result).unwrap();
2019-09-09T19:25:08.6697338Z     |                  ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6697580Z     |
2019-09-09T19:25:08.6697876Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6697916Z 
2019-09-09T19:25:08.6698198Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6698459Z    --> src/libserialize/tests/json.rs:950:27
2019-09-09T19:25:08.6699107Z 950 |     use std::collections::HashMap;
2019-09-09T19:25:08.6699107Z 950 |     use std::collections::HashMap;
2019-09-09T19:25:08.6699420Z     |                           ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6699635Z     |
2019-09-09T19:25:08.6700289Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6700337Z 
2019-09-09T19:25:08.6700811Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6701281Z    --> src/libserialize/tests/json.rs:957:14
2019-09-09T19:25:08.6701493Z     |
2019-09-09T19:25:08.6701796Z 957 |     let _hm: HashMap<usize, bool> = Decodable::decode(&mut decoder).unwrap();
2019-09-09T19:25:08.6702415Z     |              ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6702654Z     |
2019-09-09T19:25:08.6702931Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6702992Z 
2019-09-09T19:25:08.6703243Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6703484Z    --> src/libserialize/tests/json.rs:962:27
2019-09-09T19:25:08.6703954Z 962 |     use std::collections::HashMap;
2019-09-09T19:25:08.6703954Z 962 |     use std::collections::HashMap;
2019-09-09T19:25:08.6704255Z     |                           ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6704491Z     |
2019-09-09T19:25:08.6704776Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6704814Z 
2019-09-09T19:25:08.6705229Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6705900Z    --> src/libserialize/tests/json.rs:969:24
2019-09-09T19:25:08.6706124Z     |
2019-09-09T19:25:08.6706455Z 969 |     let result: Result<HashMap<usize, bool>, DecoderError> = Decodable::decode(&mut decoder);
2019-09-09T19:25:08.6706807Z     |                        ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6707025Z     |
2019-09-09T19:25:08.6707351Z     = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6707402Z 
2019-09-09T19:25:08.6707671Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6708079Z     --> src/libserialize/tests/json.rs:1216:28
2019-09-09T19:25:08.6708315Z      |
2019-09-09T19:25:08.6708601Z 1216 |     use std::collections::{HashMap,BTreeMap};
2019-09-09T19:25:08.6709096Z      |                            ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6709331Z      |
2019-09-09T19:25:08.6709649Z      = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6709687Z 
2019-09-09T19:25:08.6709971Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6710231Z     --> src/libserialize/tests/json.rs:1259:24
2019-09-09T19:25:08.6710734Z 1259 |     let mut hash_map = HashMap::new();
2019-09-09T19:25:08.6710734Z 1259 |     let mut hash_map = HashMap::new();
2019-09-09T19:25:08.6711050Z      |                        ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6711281Z      |
2019-09-09T19:25:08.6711585Z      = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6711623Z 
2019-09-09T19:25:08.6711879Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6712149Z     --> src/libserialize/tests/json.rs:1270:27
2019-09-09T19:25:08.6712732Z 1270 |     use std::collections::HashMap;
2019-09-09T19:25:08.6712732Z 1270 |     use std::collections::HashMap;
2019-09-09T19:25:08.6713077Z      |                           ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6713294Z      |
2019-09-09T19:25:08.6713578Z      = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6713633Z 
2019-09-09T19:25:08.6713889Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6714143Z     --> src/libserialize/tests/json.rs:1273:17
2019-09-09T19:25:08.6714366Z      |
2019-09-09T19:25:08.6714673Z 1273 |     let mut hm: HashMap<ArbitraryType, bool> = HashMap::new();
2019-09-09T19:25:08.6714989Z      |                 ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6715227Z      |
2019-09-09T19:25:08.6715882Z      = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:08.6715925Z 
2019-09-09T19:25:08.6783974Z error: Prefer FxHashMap over HashMap, it has better performance
2019-09-09T19:25:08.6784313Z     --> src/libserialize/tests/json.rs:1273:48
2019-09-09T19:25:08.6784532Z      |
2019-09-09T19:25:08.6784820Z 1273 |     let mut hm: HashMap<ArbitraryType, bool> = HashMap::new();
2019-09-09T19:25:08.6785185Z      |                                                ^^^^^^^ help: use: `FxHashMap`
2019-09-09T19:25:08.6785837Z      |
2019-09-09T19:25:08.6786386Z      = note: a `use rustc_data_structures::fx::FxHashMap` may be necessary
2019-09-09T19:25:09.3143256Z error: aborting due to 18 previous errors
2019-09-09T19:25:09.3147980Z 
2019-09-09T19:25:09.3326234Z error: Could not compile `serialize`.
2019-09-09T19:25:09.3337784Z warning: build failed, waiting for other jobs to finish...
2019-09-09T19:25:09.3337784Z warning: build failed, waiting for other jobs to finish...
2019-09-09T19:25:11.7462527Z error: build failed
2019-09-09T19:25:11.7477524Z 
2019-09-09T19:25:11.7477654Z 
2019-09-09T19:25:11.7478538Z command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo" "test" "-Zconfig-profile" "--target" "x86_64-unknown-linux-gnu" "-Zbinary-dep-depinfo" "-j" "2" "--release" "--locked" "--color" "always" "--features" "" "--manifest-path" "/checkout/src/rustc/Cargo.toml" "-p" "serialize" "--" "--quiet"
2019-09-09T19:25:11.7478677Z 
2019-09-09T19:25:11.7478732Z 
2019-09-09T19:25:11.7490262Z failed to run: /checkout/obj/build/bootstrap/debug/bootstrap test
2019-09-09T19:25:11.7490345Z Build completed unsuccessfully in 1:39:08
2019-09-09T19:25:11.7490345Z Build completed unsuccessfully in 1:39:08
2019-09-09T19:25:11.7550341Z == clock drift check ==
2019-09-09T19:25:11.7573045Z   local time: Mon Sep  9 19:25:11 UTC 2019
2019-09-09T19:25:11.9194760Z   network time: Mon, 09 Sep 2019 19:25:11 GMT
2019-09-09T19:25:11.9194899Z == end clock drift check ==
2019-09-09T19:25:12.5137841Z ##[error]Bash exited with code '1'.
2019-09-09T19:25:12.5181123Z ##[section]Starting: Checkout
2019-09-09T19:25:12.5183098Z ==============================================================================
2019-09-09T19:25:12.5183175Z Task         : Get sources
2019-09-09T19:25:12.5183222Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
