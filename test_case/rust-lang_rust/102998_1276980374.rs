plain
   Compiling hashbrown v0.12.3
   Compiling std_detect v0.1.5 (/checkout/library/stdarch/crates/std_detect)
   Compiling miniz_oxide v0.4.0
   Compiling addr2line v0.16.0
error: internal compiler error: no errors encountered even though `delay_span_bug` issued
error: internal compiler error: 
error: internal compiler error: 
                                ItemLocalIds not assigned densely in ::sys_common::once::futex::{impl#2}::call. Max ItemLocalId = 287, missing IDs = [
                                    "[local_id: 171, owner: ::sys_common::once::futex::{impl#2}::call]",
                                ]; seens IDs = [
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 0 } method call in sys_common::once::futex::Once::call (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 0 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 1 } param &self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 1 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 2 } pat &self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 2 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 3 } param ignore_poisoning: bool (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 3 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 4 } pat ignore_poisoning (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 4 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 5 } param f: &mut impl FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 5 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 6 } pat f (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 6 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 7 } stmt let mut state = self.state.load(Acquire); (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 7 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 8 } path segment load (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 8 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 9 } path segment self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 9 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 10 } expr self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 10 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 11 } expr self.state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 11 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 12 } path segment Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 12 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 13 } expr Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 13 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 14 } expr self.state.load(Acquire) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 14 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 15 } local let mut state = self.state.load(Acquire); (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 15 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 16 } pat mut state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 16 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 17 } path segment state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 17 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 18 } expr state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 18 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 19 } path segment POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 19 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 20 } pat POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 20 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 21 } path segment ignore_poisoning (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 21 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 22 } expr ignore_poisoning (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 22 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 23 } expr !ignore_poisoning (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 23 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 24 } arm POISONED if !ignore_poisoning => {\n                    // Panic to propagate the poison.\n                    panic!(\"Once instance has previously been poisoned\");\n                } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 24 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 25 } path segment $crate (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 25 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 26 } path segment panicking (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 26 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 27 } path segment panic_fmt (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 27 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 28 } expr $crate::panicking::panic_fmt (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 28 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 29 } path segment $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 29 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 30 } path segment $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 30 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 31 } lifetime $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 31 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 32 } path segment $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 32 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 33 } type  (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 33 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 34 } path segment $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 34 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 35 } expr $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 35 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 36 } expr \"Once instance has previously been poisoned\" (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 36 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 37 } expr \"Once instance has previously been poisoned\" (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 37 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 38 } expr \"Once instance has previously been poisoned\" (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 38 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 39 } expr $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 39 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 40 } expr $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 40 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 41 } expr $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 41 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 42 } expr $crate::panicking::panic_fmt($crate::const_format_args!($($t)+)) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 42 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 43 } stmt panic!(\"Once instance has previously been poisoned\") (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 43 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 44 } block {\n                    // Panic to propagate the poison.\n                    panic!(\"Once instance has previously been poisoned\");\n                } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 44 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 45 } expr {\n                    // Panic to propagate the poison.\n                    panic!(\"Once instance has previously been poisoned\");\n                } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 45 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 46 } path segment INCOMPLETE (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 46 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 47 } pat INCOMPLETE (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 47 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 48 } path segment POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 48 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 49 } pat POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 49 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 50 } pat INCOMPLETE | POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 50 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 51 } arm INCOMPLETE | POISONED => {\n                    // Try to register the current thread as the one running.\n                    if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n                    // `waiter_queue` will manage other waiting threads, and\n                    // wake them up on drop.\n                    let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED };\n                    // Run the function, letting it know if we're poisoned or not.\n                    let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    };\n                    f(&f_state);\n                    waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get();\n                    return;\n                } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 51 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 52 } unknown node (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 52 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 53 } path segment Err (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 53 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 54 } pat new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 54 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 55 } pat Err(new) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 55 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 56 } path segment compare_exchange_weak (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 56 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 57 } path segment self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 57 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 58 } expr self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 58 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 59 } expr self.state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 59 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 60 } path segment state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 60 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 61 } expr state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 61 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 62 } path segment RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 62 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 63 } expr RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 63 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 64 } path segment Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 64 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 65 } expr Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 65 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 66 } path segment Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 66 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 67 } expr Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 67 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 68 } expr self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 68 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 69 } expr let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 69 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 70 } path segment state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 70 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 71 } expr state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 71 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 72 } path segment new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 72 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 73 } expr new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 73 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 74 } expr state = new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 74 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 75 } stmt state = new; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 75 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 76 } expr loop {\n            match state {\n                POISONED if !ignore_poisoning => {\n                    // Panic to propagate the poison.\n                    panic!(\"Once instance has previously been poisoned\");\n                }\n                INCOMPLETE | POISONED => {\n                    // Try to register the current thread as the one running.\n                    if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n                    // `waiter_queue` will manage other waiting threads, and\n                    // wake them up on drop.\n                    let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED };\n                    // Run the function, letting it know if we're poisoned or not.\n                    let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    };\n                    f(&f_state);\n                    waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get();\n                    return;\n                }\n                RUNNING | QUEUED => {\n                    // Set the state to QUEUED if it is not already.\n                    if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n\n                    futex_wait(&self.state, QUEUED, None);\n                    state = self.state.load(Acquire);\n                }\n                COMPLETE => return,\n                _ => unreachable!(\"state is never set to invalid values\"),\n            }\n        } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 76 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 77 } expr continue (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 77 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 78 } stmt continue; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 78 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 79 } block {\n                        state = new;\n                        continue;\n                    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 79 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 80 } expr {\n                        state = new;\n                        continue;\n                    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 80 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 81 } expr if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 81 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 82 } stmt if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 82 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 83 } stmt let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED }; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 83 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 84 } lifetime CompletionGuard (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 84 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 85 } path segment CompletionGuard (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 85 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 86 } expr field state: &self.state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 86 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 87 } path segment self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 87 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 88 } expr self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 88 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 89 } expr self.state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 89 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 90 } expr &self.state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 90 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 91 } expr field set_state_on_drop_to: POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 91 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 92 } path segment POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 92 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 93 } expr POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 93 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 94 } expr CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 94 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 95 } local let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED }; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 95 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 96 } pat mut waiter_queue (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 96 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 97 } stmt let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    }; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 97 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 98 } path segment public (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 98 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 99 } path segment OnceState (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 99 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 100 } expr field inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 100 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 101 } path segment OnceState (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 101 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 102 } expr field poisoned: state == POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 102 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 103 } path segment state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 103 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 104 } expr state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 104 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 105 } path segment POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 105 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 106 } expr POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 106 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 107 } expr state == POISONED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 107 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 108 } expr field set_state_to: Cell::new(COMPLETE) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 108 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 109 } path segment Cell (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 109 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 110 } type Cell (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 110 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 111 } path segment new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 111 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 112 } expr Cell::new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 112 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 113 } path segment COMPLETE (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 113 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 114 } expr COMPLETE (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 114 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 115 } expr Cell::new(COMPLETE) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 115 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 116 } expr OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 116 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 117 } expr public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 117 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 118 } local let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    }; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 118 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 119 } pat f_state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 119 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 120 } path segment f (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 120 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 121 } expr f (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 121 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 122 } path segment f_state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 122 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 123 } expr f_state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 123 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 124 } expr &f_state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 124 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 125 } expr f(&f_state) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 125 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 126 } stmt f(&f_state); (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 126 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 127 } path segment waiter_queue (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 127 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 128 } expr waiter_queue (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 128 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 129 } expr waiter_queue.set_state_on_drop_to (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 129 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 130 } path segment get (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 130 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 131 } path segment f_state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 131 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 132 } expr f_state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 132 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 133 } expr f_state.inner (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 133 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 134 } expr f_state.inner.set_state_to (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 134 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 135 } expr f_state.inner.set_state_to.get() (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 135 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 136 } expr waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get() (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 136 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 137 } stmt waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get(); (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 137 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 138 } expr return (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 138 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 139 } stmt return; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 139 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 140 } block {\n                    // Try to register the current thread as the one running.\n                    if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n                    // `waiter_queue` will manage other waiting threads, and\n                    // wake them up on drop.\n                    let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED };\n                    // Run the function, letting it know if we're poisoned or not.\n                    let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    };\n                    f(&f_state);\n                    waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get();\n                    return;\n                } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 140 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 141 } expr {\n                    // Try to register the current thread as the one running.\n                    if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n                    // `waiter_queue` will manage other waiting threads, and\n                    // wake them up on drop.\n                    let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED };\n                    // Run the function, letting it know if we're poisoned or not.\n                    let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    };\n                    f(&f_state);\n                    waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get();\n                    return;\n                } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 141 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 142 } path segment RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 142 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 143 } pat RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 143 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 144 } path segment QUEUED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 144 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 145 } pat QUEUED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 145 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 146 } pat RUNNING | QUEUED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 146 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 147 } arm RUNNING | QUEUED => {\n                    // Set the state to QUEUED if it is not already.\n                    if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n\n                    futex_wait(&self.state, QUEUED, None);\n                    state = self.state.load(Acquire);\n                } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 147 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 148 } path segment state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 148 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 149 } expr state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 149 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 150 } path segment RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 150 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 151 } expr RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 151 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 152 } expr state == RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 152 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 153 } unknown node (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 153 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 154 } path segment Err (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 154 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 155 } pat new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 155 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 156 } pat Err(new) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 156 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 157 } path segment compare_exchange_weak (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 157 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 158 } path segment self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 158 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 159 } expr self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 159 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 160 } expr self.state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 160 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 161 } path segment RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 161 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 162 } expr RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 162 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 163 } path segment QUEUED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 163 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 164 } expr QUEUED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 164 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 165 } path segment Relaxed (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 165 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 166 } expr Relaxed (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 166 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 167 } path segment Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 167 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 168 } expr Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 168 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 169 } expr self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 169 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 170 } expr let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 170 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 172 } expr state == RUNNING (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 172 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 173 } expr state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 173 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 174 } path segment state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 174 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 175 } expr state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 175 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 176 } path segment new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 176 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 177 } expr new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 177 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 178 } expr state = new (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 178 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 179 } stmt state = new; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 179 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 180 } expr continue (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 180 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 181 } stmt continue; (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 181 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 182 } block {\n                        state = new;\n                        continue;\n                    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 182 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 183 } expr {\n                        state = new;\n                        continue;\n                    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 183 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 184 } expr if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 184 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 185 } stmt if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 185 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 186 } path segment futex_wait (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 186 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 187 } expr futex_wait (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 187 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 188 } path segment self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 188 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 189 } expr self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 189 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 190 } expr self.state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 190 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 191 } expr &self.state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 191 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 192 } path segment QUEUED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 192 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 193 } expr QUEUED (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 193 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 194 } path segment None (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 194 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 195 } expr None (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 195 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 196 } expr futex_wait(&self.state, QUEUED, None) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 196 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 197 } stmt futex_wait(&self.state, QUEUED, None); (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 197 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 198 } path segment state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 198 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 199 } expr state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 199 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 200 } path segment load (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 200 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 201 } path segment self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 201 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 202 } expr self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 202 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 203 } expr self.state (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 203 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 204 } path segment Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 204 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 205 } expr Acquire (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 205 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 206 } expr self.state.load(Acquire) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 206 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 207 } expr state = self.state.load(Acquire) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 207 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 208 } stmt state = self.state.load(Acquire); (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 208 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 209 } block {\n                    // Set the state to QUEUED if it is not already.\n                    if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n\n                    futex_wait(&self.state, QUEUED, None);\n                    state = self.state.load(Acquire);\n                } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 209 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 210 } expr {\n                    // Set the state to QUEUED if it is not already.\n                    if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n\n                    futex_wait(&self.state, QUEUED, None);\n                    state = self.state.load(Acquire);\n                } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 210 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 211 } path segment COMPLETE (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 211 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 212 } pat COMPLETE (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 212 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 213 } arm COMPLETE => return (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 213 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 214 } expr return (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 214 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 215 } pat _ (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 215 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 216 } arm _ => unreachable!(\"state is never set to invalid values\") (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 216 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 217 } path segment $crate (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 217 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 218 } path segment panicking (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 218 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 219 } path segment panic_fmt (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 219 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 220 } expr $crate::panicking::panic_fmt (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 220 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 221 } path segment $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 221 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 222 } path segment $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 222 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 223 } lifetime $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 223 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 224 } path segment $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 224 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 225 } type  (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 225 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 226 } path segment $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 226 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 227 } expr $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 227 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 228 } expr \"internal error: entered unreachable code: {}\" (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 228 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 229 } expr \"internal error: entered unreachable code: {}\" (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 229 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 230 } expr \"internal error: entered unreachable code: {}\" (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 230 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 231 } path segment $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 231 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 232 } path segment $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 232 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 233 } lifetime $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 233 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 234 } path segment $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 234 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 235 } type  (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 235 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 236 } path segment $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 236 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 237 } expr $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 237 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 238 } path segment $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 238 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 239 } path segment $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 239 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 240 } lifetime $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 240 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 241 } path segment $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 241 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 242 } type  (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 242 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 243 } path segment $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 243 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 244 } expr $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 244 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 245 } expr \"state is never set to invalid values\" (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 245 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 246 } expr \"state is never set to invalid values\" (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 246 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 247 } expr \"state is never set to invalid values\" (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 247 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 248 } expr $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 248 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 249 } expr $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 249 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 250 } expr $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 250 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 251 } expr $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 251 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 252 } expr $crate::format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 252 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 253 } expr $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 253 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 254 } expr $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 254 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 255 } expr $crate::const_format_args!($($t)+) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 255 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 256 } expr $crate::panicking::panic_fmt($crate::const_format_args!($($t)+)) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 256 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 257 } expr match state {\n                POISONED if !ignore_poisoning => {\n                    // Panic to propagate the poison.\n                    panic!(\"Once instance has previously been poisoned\");\n                }\n                INCOMPLETE | POISONED => {\n                    // Try to register the current thread as the one running.\n                    if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n                    // `waiter_queue` will manage other waiting threads, and\n                    // wake them up on drop.\n                    let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED };\n                    // Run the function, letting it know if we're poisoned or not.\n                    let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    };\n                    f(&f_state);\n                    waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get();\n                    return;\n                }\n                RUNNING | QUEUED => {\n                    // Set the state to QUEUED if it is not already.\n                    if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n\n                    futex_wait(&self.state, QUEUED, None);\n                    state = self.state.load(Acquire);\n                }\n                COMPLETE => return,\n                _ => unreachable!(\"state is never set to invalid values\"),\n            } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 257 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 258 } block {\n            match state {\n                POISONED if !ignore_poisoning => {\n                    // Panic to propagate the poison.\n                    panic!(\"Once instance has previously been poisoned\");\n                }\n                INCOMPLETE | POISONED => {\n                    // Try to register the current thread as the one running.\n                    if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n                    // `waiter_queue` will manage other waiting threads, and\n                    // wake them up on drop.\n                    let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED };\n                    // Run the function, letting it know if we're poisoned or not.\n                    let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    };\n                    f(&f_state);\n                    waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get();\n                    return;\n                }\n                RUNNING | QUEUED => {\n                    // Set the state to QUEUED if it is not already.\n                    if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n\n                    futex_wait(&self.state, QUEUED, None);\n                    state = self.state.load(Acquire);\n                }\n                COMPLETE => return,\n                _ => unreachable!(\"state is never set to invalid values\"),\n            }\n        } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 258 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 259 } block {\n        let mut state = self.state.load(Acquire);\n        loop {\n            match state {\n                POISONED if !ignore_poisoning => {\n                    // Panic to propagate the poison.\n                    panic!(\"Once instance has previously been poisoned\");\n                }\n                INCOMPLETE | POISONED => {\n                    // Try to register the current thread as the one running.\n                    if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n                    // `waiter_queue` will manage other waiting threads, and\n                    // wake them up on drop.\n                    let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED };\n                    // Run the function, letting it know if we're poisoned or not.\n                    let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    };\n                    f(&f_state);\n                    waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get();\n                    return;\n                }\n                RUNNING | QUEUED => {\n                    // Set the state to QUEUED if it is not already.\n                    if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n\n                    futex_wait(&self.state, QUEUED, None);\n                    state = self.state.load(Acquire);\n                }\n                COMPLETE => return,\n                _ => unreachable!(\"state is never set to invalid values\"),\n            }\n        }\n    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 259 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 260 } expr {\n        let mut state = self.state.load(Acquire);\n        loop {\n            match state {\n                POISONED if !ignore_poisoning => {\n                    // Panic to propagate the poison.\n                    panic!(\"Once instance has previously been poisoned\");\n                }\n                INCOMPLETE | POISONED => {\n                    // Try to register the current thread as the one running.\n                    if let Err(new) =\n                        self.state.compare_exchange_weak(state, RUNNING, Acquire, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n                    // `waiter_queue` will manage other waiting threads, and\n                    // wake them up on drop.\n                    let mut waiter_queue =\n                        CompletionGuard { state: &self.state, set_state_on_drop_to: POISONED };\n                    // Run the function, letting it know if we're poisoned or not.\n                    let f_state = public::OnceState {\n                        inner: OnceState {\n                            poisoned: state == POISONED,\n                            set_state_to: Cell::new(COMPLETE),\n                        },\n                    };\n                    f(&f_state);\n                    waiter_queue.set_state_on_drop_to = f_state.inner.set_state_to.get();\n                    return;\n                }\n                RUNNING | QUEUED => {\n                    // Set the state to QUEUED if it is not already.\n                    if state == RUNNING\n                        && let Err(new) = self.state.compare_exchange_weak(RUNNING, QUEUED, Relaxed, Acquire)\n                    {\n                        state = new;\n                        continue;\n                    }\n\n                    futex_wait(&self.state, QUEUED, None);\n                    state = self.state.load(Acquire);\n                }\n                COMPLETE => return,\n                _ => unreachable!(\"state is never set to invalid values\"),\n            }\n        }\n    } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 260 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 261 } generic_param GenericParam { hir_id: HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 261 }, name: Fresh, span: library/std/src/sys_common/once/futex.rs:86:17: 86:18 (#0), pure_wrt_drop: false, kind: Lifetime { kind: Elided }, colon_span: None } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 261 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 262 } generic_param GenericParam { hir_id: HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 262 }, name: Fresh, span: library/std/src/sys_common/once/futex.rs:86:51: 86:52 (#0), pure_wrt_drop: false, kind: Lifetime { kind: Elided }, colon_span: None } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 262 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 263 } lifetime & (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 263 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 264 } path segment  (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 264 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 265 } type &self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 265 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 266 } type &self (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 266 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 267 } type bool (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 267 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 268 } path segment bool (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 268 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 269 } lifetime & (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 269 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 270 } generic_param GenericParam { hir_id: HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 270 }, name: Plain(impl FnMut(&public::OnceState)#0), span: library/std/src/sys_common/once/futex.rs:86:56: 86:86 (#0), pure_wrt_drop: false, kind: Type { default: None, synthetic: true }, colon_span: None } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 270 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 271 } generic_param GenericParam { hir_id: HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 271 }, name: Fresh, span: library/std/src/sys_common/once/futex.rs:86:67: 86:68 (#0), pure_wrt_drop: false, kind: Lifetime { kind: Elided }, colon_span: None } (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 271 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 272 } lifetime & (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 272 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 273 } type public::OnceState (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 273 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 274 } path segment public (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 274 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 275 } path segment OnceState (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 275 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 276 } type &public::OnceState (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 276 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 277 } type FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 277 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 278 } type (&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 278 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 279 } type binding FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 279 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 280 } path segment FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 280 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 281 } trait ref FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 281 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 282 } path segment impl FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 282 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 283 } type impl FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 283 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 284 } unknown node (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 284 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 285 } path segment impl FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 285 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 286 } type impl FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 286 }))",
                                    "(HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 287 } type &mut impl FnMut(&public::OnceState) (hir_id=HirId { owner: OwnerId { def_id: DefId(0:15058 ~ std[f318]::sys_common::once::futex::{impl#2}::call) }, local_id: 287 }))",
  |
  = note: delayed at compiler/rustc_passes/src/hir_id_validator.rs:37:22

thread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1548:13
thread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1548:13
stack backtrace:
   0:     0x7f23b0ee2ebc - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h177c487a2b42ece7
   1:     0x7f23b0f49f28 - core::fmt::write::h6d6e96066401bc0f
   2:     0x7f23b0ed3881 - std::io::Write::write_fmt::h9c2ccad779deae55
   3:     0x7f23b0ee613f - std::panicking::default_hook::{{closure}}::h7f73035c0964e272
   4:     0x7f23b0ee5e45 - std::panicking::default_hook::h00b629c37cff372c
   5:     0x7f23b1842b34 - rustc_driver[f2e031a064542774]::DEFAULT_HOOK::{closure#0}::{closure#0}
   6:     0x7f23b0ee6afa - std::panicking::rust_panic_with_hook::h20f2c6f3395969fb
   7:     0x7f23b4470093 - std[5eb61729617d0f15]::panicking::begin_panic::<rustc_errors[d7c268f1427f3856]::ExplicitBug>::{closure#0}
   8:     0x7f23b446ce26 - std[5eb61729617d0f15]::sys_common::backtrace::__rust_end_short_backtrace::<std[5eb61729617d0f15]::panicking::begin_panic<rustc_errors[d7c268f1427f3856]::ExplicitBug>::{closure#0}, !>
   9:     0x7f23b180be66 - std[5eb61729617d0f15]::panicking::begin_panic::<rustc_errors[d7c268f1427f3856]::ExplicitBug>
  10:     0x7f23b44c59e6 - std[5eb61729617d0f15]::panic::panic_any::<rustc_errors[d7c268f1427f3856]::ExplicitBug>
  11:     0x7f23b44ce550 - <rustc_errors[d7c268f1427f3856]::HandlerInner>::flush_delayed::<alloc[595f3abe7f02ad4b]::vec::Vec<rustc_errors[d7c268f1427f3856]::diagnostic::Diagnostic>, &str>
  12:     0x7f23b44ccaee - <rustc_errors[d7c268f1427f3856]::Handler>::flush_delayed
  13:     0x7f23b197c8bc - <rustc_interface[8dadcfefb4b44424]::passes::QueryContext>::enter::<<rustc_interface[8dadcfefb4b44424]::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core[69c2305d6fa5d54f]::result::Result<alloc[595f3abe7f02ad4b]::boxed::Box<dyn core[69c2305d6fa5d54f]::any::Any>, rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>>
  14:     0x7f23b19602b2 - <rustc_interface[8dadcfefb4b44424]::queries::Queries>::ongoing_codegen
  15:     0x7f23b1844b9b - <rustc_interface[8dadcfefb4b44424]::interface::Compiler>::enter::<rustc_driver[f2e031a064542774]::run_compiler::{closure#1}::{closure#2}, core[69c2305d6fa5d54f]::result::Result<core[69c2305d6fa5d54f]::option::Option<rustc_interface[8dadcfefb4b44424]::queries::Linker>, rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>>
  16:     0x7f23b182fff2 - rustc_span[d01290800366294b]::with_source_map::<core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>, rustc_interface[8dadcfefb4b44424]::interface::create_compiler_and_run<core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>, rustc_driver[f2e031a064542774]::run_compiler::{closure#1}>::{closure#1}>
  17:     0x7f23b1858829 - rustc_interface[8dadcfefb4b44424]::interface::create_compiler_and_run::<core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>, rustc_driver[f2e031a064542774]::run_compiler::{closure#1}>
  18:     0x7f23b18b0f3f - <scoped_tls[ce9fa241ba16890b]::ScopedKey<rustc_span[d01290800366294b]::SessionGlobals>>::set::<rustc_interface[8dadcfefb4b44424]::interface::run_compiler<core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>, rustc_driver[f2e031a064542774]::run_compiler::{closure#1}>::{closure#0}, core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>>
  19:     0x7f23b1871550 - std[5eb61729617d0f15]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[8dadcfefb4b44424]::util::run_in_thread_pool_with_globals<rustc_interface[8dadcfefb4b44424]::interface::run_compiler<core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>, rustc_driver[f2e031a064542774]::run_compiler::{closure#1}>::{closure#0}, core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>>::{closure#0}, core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>>
  20:     0x7f23b1831c56 - std[5eb61729617d0f15]::panicking::try::<core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>, core[69c2305d6fa5d54f]::panic::unwind_safe::AssertUnwindSafe<<std[5eb61729617d0f15]::thread::Builder>::spawn_unchecked_<rustc_interface[8dadcfefb4b44424]::util::run_in_thread_pool_with_globals<rustc_interface[8dadcfefb4b44424]::interface::run_compiler<core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>, rustc_driver[f2e031a064542774]::run_compiler::{closure#1}>::{closure#0}, core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>>::{closure#0}, core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>>::{closure#1}::{closure#0}>>
  21:     0x7f23b1866589 - <<std[5eb61729617d0f15]::thread::Builder>::spawn_unchecked_<rustc_interface[8dadcfefb4b44424]::util::run_in_thread_pool_with_globals<rustc_interface[8dadcfefb4b44424]::interface::run_compiler<core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>, rustc_driver[f2e031a064542774]::run_compiler::{closure#1}>::{closure#0}, core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>>::{closure#0}, core[69c2305d6fa5d54f]::result::Result<(), rustc_errors[d7c268f1427f3856]::ErrorGuaranteed>>::{closure#1} as core[69c2305d6fa5d54f]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  22:     0x7f23b0ef3695 - std::sys::unix::thread::Thread::new::thread_start::h12d42971cd2a2609
  23:     0x7f23b0c8fb43 - <unknown>
  24:     0x7f23b0d21a00 - <unknown>
  25:                0x0 - <unknown>
note: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md


note: rustc 1.66.0-nightly (87c9c73b5 2022-10-13) running on x86_64-unknown-linux-gnu

note: compiler flags: --crate-type dylib --crate-type rlib -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 -C debuginfo=0 -C debug-assertions=on -Z unstable-options -C symbol-mangling-version=legacy -Z unstable-options -Z unstable-options -Z macro-backtrace -C link-args=-Wl,-z,origin -C link-args=-Wl,-rpath,$ORIGIN/../lib -C split-debuginfo=off -C prefer-dynamic -C llvm-args=-import-instr-limit=10 -C embed-bitcode=yes -Z crate-attr=doc(html_root_url="https://doc.rust-lang.org/nightly/") -Z binary-dep-depinfo -Z force-unstable-if-unmarked
note: some of the compiler flags provided by cargo are hidden

query stack during panic:
end of query stack
