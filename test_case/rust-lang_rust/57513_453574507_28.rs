\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/check-static-values-constraints.rs","byte_start":3624,"byte_end":3625,"line_start":116,"line_end":116,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"    let y = { static x: Box<isize> = box 3; x };","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0019]: static contains unimplemented expression type\n  --> /checkout/src/test/ui/check-static-values-constraints.rs:116:42\n   |\nLL |     let y = { static x: Box<isize> = box 3; x };\n   |                                          ^\n\n"}
[01:31:44] {"message":"aborting due to 17 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"error: aborting due to 17 previous errors\n\n"}
[01:31:44] {"message":"Some errors occurred: E0010, E0015, E0019, E0493, E0507.","code":null,"level":"","spans":[],"children":[],"rendered":"Some errors occurred: E0010, E0015, E0019, E0493, E0507.\n"}
[01:31:44] 
[01:31:44] ------------------------------------------
[01:31:44] 
[01:31:44] thread '[ui (nll)] ui/check-static-values-constraints.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3245:9
[01:31:44] thread '[ui (nll)] ui/check-static-values-constraints.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3245:9
[01:31:44] note: Run with `RUST_BACKTRACE=1` for a backtrace.
[01:31:44] 
[01:31:44] ---- [ui (nll)] ui/consts/min_const_fn/min_const_fn.rs stdout ----
[01:31:44] thread 'main' panicked at 'Some tests failed', src/tools/compiletest/src/main.rs:495:22
[01:31:44] diff of stderr:
[01:31:44] 
[01:31:44] 112 LL | const fn foo30_5(b: bool) { while b { } } //~ ERROR not stable in const fn
[01:31:44] 114 
[01:31:44] 114 
[01:31:44] - error: local variables in const fn are unstable
[01:31:44] -    |
[01:31:44] -    |
[01:31:44] - LL | const fn foo30_6() -> bool { let x = true; x } //~ ERROR local variables in const fn
[01:31:44] - 
[01:31:44] - 
[01:31:44] 121 error: `if`, `match`, `&&` and `||` are not stable in const fn
[01:31:44] 123    |
[01:31:44] 
[01:31:44] 
[01:31:44] 220 LL | const fn no_fn_ptrs2() -> fn() { fn foo() {} foo }
[01:31:44] 222 
[01:31:44] - error: aborting due to 35 previous errors
[01:31:44] + error: aborting due to 34 previous errors
[01:31:44] 224 
[01:31:44] 224 
[01:31:44] 225 Some errors occurred: E0493, E0515.
[01:31:44] 226 For more information about an error, try `rustc --explain E0493`.
[01:31:44] 
[01:31:44] 
[01:31:44] The actual stderr differed from the expected stderr.
[01:31:44] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/consts/min_const_fn/min_const_fn.nll/min_const_fn.nll.stderr
[01:31:44] To update references, rerun the tests and pass the `--bless` flag
[01:31:44] To only update this specific test, also pass `--test-args consts/min_const_fn/min_const_fn.rs`
[01:31:44] error: 1 errors occurred comparing output.
[01:31:44] status: exit code: 1
[01:31:44] status: exit code: 1
[01:31:44] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/consts/min_const_fn/min_const_fn.nll/a" "-Zborrowck=migrate" "-Ztwo-phase-borrows" "-Crpath" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/consts/min_const_fn/min_const_fn.nll/auxiliary" "-A" "unused"
[01:31:44] ------------------------------------------
[01:31:44] 
[01:31:44] ------------------------------------------
[01:31:44] stderr:
[01:31:44] stderr:
[01:31:44] ------------------------------------------
[01:31:44] {"message":"destructors cannot be evaluated at compile-time","code":{"code":"E0493","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":1264,"byte_end":1268,"line_start":37,"line_end":37,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"    const fn into_inner(self) -> T { self.0 } //~ destructors cannot be evaluated","highlight_start":25,"highlight_end":29}],"label":"constant functions cannot evaluate destructors","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0493]: destructors cannot be evaluated at compile-time\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:37:25\n   |\nLL |     const fn into_inner(self) -> T { self.0 } //~ destructors cannot be evaluated\n   |                         ^^^^ constant functions cannot evaluate destructors\n\n"}
[01:31:44] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":1399,"byte_end":1405,"line_start":39,"line_end":39,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"    const fn get_mut(&mut self) -> &mut T { &mut self.0 }","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:39:36\n   |\nLL |     const fn get_mut(&mut self) -> &mut T { &mut self.0 }\n   |                                    ^^^^^^\n\n"}
[01:31:44] {"message":"destructors cannot be evaluated at compile-time","code":{"code":"E0493","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":1570,"byte_end":1574,"line_start":44,"line_end":44,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"    const fn into_inner_lt(self) -> T { self.0 } //~ destructors cannot be evaluated","highlight_start":28,"highlight_end":32}],"label":"constant functions cannot evaluate destructors","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0493]: destructors cannot be evaluated at compile-time\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:44:28\n   |\nLL |     const fn into_inner_lt(self) -> T { self.0 } //~ destructors cannot be evaluated\n   |                            ^^^^ constant functions cannot evaluate destructors\n\n"}
[01:31:44] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":1717,"byte_end":1723,"line_start":46,"line_end":46,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"    const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }","highlight_start":42,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:46:42\n   |\nLL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n   |                                          ^^^^^^\n\n"}
[01:31:44] {"message":"destructors cannot be evaluated at compile-time","code":{"code":"E0493","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":1889,"byte_end":1893,"line_start":51,"line_end":51,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"    const fn into_inner_s(self) -> T { self.0 } //~ ERROR destructors","highlight_start":27,"highlight_end":31}],"label":"constant functions cannot evaluate destructors","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0493]: destructors cannot be evaluated at compile-time\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:51:27\n   |\nLL |     const fn into_inner_s(self) -> T { self.0 } //~ ERROR destructors\n   |                           ^^^^ constant functions cannot evaluate destructors\n\n"}
[01:31:44] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":2014,"byte_end":2020,"line_start":53,"line_end":53,"column_start":38,"column_end":44,"is_primary":true,"text":[{"text":"    const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }","highlight_start":38,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:53:38\n   |\nLL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n   |                                      ^^^^^^\n\n"}
[01:31:44] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":2200,"byte_end":2206,"line_start":58,"line_end":58,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"    const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }","highlight_start":39,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:58:39\n   |\nLL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n   |                                       ^^^^^^\n\n"}
[01:31:44] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":2926,"byte_end":2927,"line_start":76,"line_end":76,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"const fn foo11<T: std::fmt::Display>(t: T) -> T { t }","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:76:16\n   |\nLL | const fn foo11<T: std::fmt::Display>(t: T) -> T { t }\n   |                ^\n\n"}
[01:31:44] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3061,"byte_end":3062,"line_start":78,"line_end":78,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"const fn foo11_2<T: Send>(t: T) -> T { t }","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:78:18\n   |\nLL | const fn foo11_2<T: Send>(t: T) -> T { t }\n   |                  ^\n\n"}
[01:31:44] {"message":"only int, `bool` and `char` operations are stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3198,"byte_end":3205,"line_start":80,"line_end":80,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"const fn foo19(f: f32) -> f32 { f * 2.0 }","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: only int, `bool` and `char` operations are stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:80:33\n   |\nLL | const fn foo19(f: f32) -> f32 { f * 2.0 }\n   |                                 ^^^^^^^\n\n"}
[01:31:44] {"message":"only int, `bool` and `char` operations are stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3315,"byte_end":3322,"line_start":82,"line_end":82,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"const fn foo19_2(f: f32) -> f32 { 2.0 - f }","highlight_start":35,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: only int, `bool` and `char` operations are stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:82:35\n   |\nLL | const fn foo19_2(f: f32) -> f32 { 2.0 - f }\n   |                                   ^^^^^^^\n\n"}
[01:31:44] {"message":"only int and `bool` operations are stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3432,"byte_end":3434,"line_start":84,"line_end":84,"column_start":35,"column_end":37,"is_primary":true,"text":[{"text":"const fn foo19_3(f: f32) -> f32 { -f }","highlight_start":35,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: only int and `bool` operations are stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:84:35\n   |\nLL | const fn foo19_3(f: f32) -> f32 { -f }\n   |                                   ^^\n\n"}
[01:31:44] {"message":"only int, `bool` and `char` operations are stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3544,"byte_end":3549,"line_start":86,"line_end":86,"column_start":43,"column_end":48,"is_primary":true,"text":[{"text":"const fn foo19_4(f: f32, g: f32) -> f32 { f / g }","highlight_start":43,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: only int, `bool` and `char` operations are stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:86:43\n   |\nLL | const fn foo19_4(f: f32, g: f32) -> f32 { f / g }\n   |                                           ^^^^^\n\n"}
[01:31:44] {"message":"cannot access `static` items in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3674,"byte_end":3677,"line_start":90,"line_end":90,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"const fn foo25() -> u32 { BAR } //~ ERROR cannot access `static` items in const fn","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: cannot access `static` items in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:90:27\n   |\nLL | const fn foo25() -> u32 { BAR } //~ ERROR cannot access `static` items in const fn\n   |                           ^^^\n\n"}
[01:31:44] {"message":"cannot access `static` items in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3766,"byte_end":3770,"line_start":91,"line_end":91,"column_start":36,"column_end":40,"is_primary":true,"text":[{"text":"const fn foo26() -> &'static u32 { &BAR } //~ ERROR cannot access `static` items","highlight_start":36,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: cannot access `static` items in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:91:36\n   |\nLL | const fn foo26() -> &'static u32 { &BAR } //~ ERROR cannot access `static` items\n   |                                    ^^^^\n\n"}
[01:31:44] {"message":"casting pointers to ints is unstable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3853,"byte_end":3863,"line_start":92,"line_end":92,"column_start":42,"column_end":52,"is_primary":true,"text":[{"text":"const fn foo30(x: *const u32) -> usize { x as usize }","highlight_start":42,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: casting pointers to ints is unstable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:92:42\n   |\nLL | const fn foo30(x: *const u32) -> usize { x as usize }\n   |                                          ^^^^^^^^^^\n\n"}
[01:31:44] {"message":"casting pointers to ints is unstable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3942,"byte_end":3952,"line_start":94,"line_end":94,"column_start":42,"column_end":52,"is_primary":true,"text":[{"text":"const fn foo30_2(x: *mut u32) -> usize { x as usize }","highlight_start":42,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: casting pointers to ints is unstable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:94:42\n   |\nLL | const fn foo30_2(x: *mut u32) -> usize { x as usize }\n   |                                          ^^^^^^^^^^\n\n"}
[01:31:44] {"message":"`if`, `match`, `&&` and `||` are not stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4027,"byte_end":4049,"line_start":96,"line_end":96,"column_start":38,"column_end":60,"is_primary":true,"text":[{"text":"const fn foo30_4(b: bool) -> usize { if b { 1 } else { 42 } }","highlight_start":38,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `if`, `match`, `&&` and `||` are not stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:96:38\n   |\nLL | const fn foo30_4(b: bool) -> usize { if b { 1 } else { 42 } }\n   |                                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[01:31:44] {"message":"`if`, `match`, `&&` and `||` are not stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4147,"byte_end":4158,"line_start":98,"line_end":98,"column_start":29,"column_end":40,"is_primary":true,"text":[{"text":"const fn foo30_5(b: bool) { while b { } } //~ ERROR not stable in const fn","highlight_start":29,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `if`, `match`, `&&` and `||` are not stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:98:29\n   |\nLL | const fn foo30_5(b: bool) { while b { } } //~ ERROR not stable in const fn\n   |                             ^^^^^^^^^^^\n\n"}
[01:31:44] {"message":"`if`, `match`, `&&` and `||` are not stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4284,"byte_end":4290,"line_start":100,"line_end":100,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"const fn foo36(a: bool, b: bool) -> bool { a && b }","highlight_start":44,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `if`, `match`, `&&` and `||` are not stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:100:44\n   |\nLL | const fn foo36(a: bool, b: bool) -> bool { a && b }\n   |                                            ^^^^^^\n\n"}
[01:31:44] {"message":"`if`, `match`, `&&` and `||` are not stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4403,"byte_end":4409,"line_start":102,"line_end":102,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"const fn foo37(a: bool, b: bool) -> bool { a || b }","highlight_start":44,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `if`, `match`, `&&` and `||` are not stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:102:44\n   |\nLL | const fn foo37(a: bool, b: bool) -> bool { a || b }\n   |                                            ^^^^^^\n\n"}
[01:31:44] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4492,"byte_end":4493,"line_start":104,"line_end":104,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"const fn inc(x: &mut i32) { *x += 1 }","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:104:14\n   |\nLL | const fn inc(x: &mut i32) { *x += 1 }\n   |              ^\n\n"}
[01:31:44] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4592,"byte_end":4593,"line_start":109,"line_end":109,"column_start":6,"column_end":7,"is_primary":true,"text":[{"text":"impl<T: std::fmt::Debug> Foo<T> {","highlight_start":6,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:109:6\n   |\nLL | impl<T: std::fmt::Debug> Foo<T> {\n   |      ^\n\n"}
[01:31:44] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4735,"byte_end":4736,"line_start":114,"line_end":114,"column_start":6,"column_end":7,"is_primary":true,"text":[{"text":"impl<T: std::fmt::Debug + Sized> Foo<T> {","highlight_start":6,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:114:6\n   |\nLL | impl<T: std::fmt::Debug + Sized> Foo<T> {\n   |      ^\n\n"}
[01:31:44] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4887,"byte_end":4888,"line_start":119,"line_end":119,"column_start":6,"column_end":7,"is_primary":true,"text":[{"text":"impl<T: Sync + Sized> Foo<T> {","highlight_start":6,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:119:6\n   |\nLL | impl<T: Sync + Sized> Foo<T> {\n   |      ^\n\n"}
[01:31:44] {"message":"`impl Trait` in const fn is unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5071,"byte_end":5103,"line_start":125,"line_end":125,"column_start":24,"column_end":56,"is_primary":true,"text":[{"text":"const fn no_rpit2() -> AlanTuring<impl std::fmt::Debug> { AlanTuring(0) }","highlight_start":24,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `impl Trait` in const fn is unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:125:24\n   |\nLL | const fn no_rpit2() -> AlanTuring<impl std::fmt::Debug> { AlanTuring(0) }\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[01:31:44] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5203,"byte_end":5223,"line_start":127,"line_end":127,"column_start":34,"column_end":54,"is_primary":true,"text":[{"text":"const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}","highlight_start":34,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:127:34\n   |\nLL | const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}\n   |                                  ^^^^^^^^^^^^^^^^^^^^\n\n"}
[01:31:44] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5293,"byte_end":5313,"line_start":129,"line_end":129,"column_start":22,"column_end":42,"is_primary":true,"text":[{"text":"const fn no_apit(_x: impl std::fmt::Debug) {} //~ ERROR trait bounds other than `Sized`","highlight_start":22,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:129:22\n   |\nLL | const fn no_apit(_x: impl std::fmt::Debug) {} //~ ERROR trait bounds other than `Sized`\n   |                      ^^^^^^^^^^^^^^^^^^^^\n\n"}
[01:31:44] {"message":"`impl Trait` in const fn is unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5382,"byte_end":5402,"line_start":130,"line_end":130,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"const fn no_rpit() -> impl std::fmt::Debug {} //~ ERROR `impl Trait` in const fn is unstable","highlight_start":23,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `impl Trait` in const fn is unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:130:23\n   |\nLL | const fn no_rpit() -> impl std::fmt::Debug {} //~ ERROR `impl Trait` in const fn is unstable\n   |                       ^^^^^^^^^^^^^^^^^^^^\n\n"}
[01:31:44] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5475,"byte_end":5477,"line_start":131,"line_end":131,"column_start":23,"column_end":25,"is_primary":true,"text":[{"text":"const fn no_dyn_trait(_x: &dyn std::fmt::Debug) {} //~ ERROR trait bounds other than `Sized`","highlight_start":23,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:131:23\n   |\nLL | const fn no_dyn_trait(_x: &dyn std::fmt::Debug) {} //~ ERROR trait bounds other than `Sized`\n   |                       ^^\n\n"}
[01:31:44] make: *** [check] Error 1
[01:31:44] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5577,"byte_end":5605,"line_start":132,"line_end":132,"column_start":32,"column_end":60,"is_primary":true,"text":[{"text":"const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }","highlight_start":32,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:132:32\n   |\nLL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[01:31:44] {"message":"cannot return reference to temporary value","code":{"code":"E0515","explanation":"\nCannot return value that references local variable\n\nLocal variables, function parameters and temporaries are all dropped before the\nend of the function body. So a reference to them cannot be returned.\n\n