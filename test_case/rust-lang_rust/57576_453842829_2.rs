\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/coherence/coherence-impl-trait-for-marker-trait-negative.rs","byte_start":400,"byte_end":438,"line_start":16,"line_end":16,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"impl !Marker2 for dyn Object + Marker2 { }   //~ ERROR E0371","highlight_start":1,"highlight_end":39}],"label":"`(dyn Object + Marker2 + 'static)` automatically implements trait `Marker2`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0371]: the object type `(dyn Object + Marker2 + 'static)` automatically implements the trait `Marker2`\n  --> /checkout/src/test/ui/coherence/coherence-impl-trait-for-marker-trait-negative.rs:16:1\n   |\nLL | impl !Marker2 for dyn Object + Marker2 { }   //~ ERROR E0371\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn Object + Marker2 + 'static)` automatically implements trait `Marker2`\n\n"}
[01:03:54] {"message":"only traits defined in the current crate can be implemented for arbitrary types","code":{"code":"E0117","explanation":"\nThis error indicates a violation of one of Rust's orphan rules for trait\nimplementations. The rule prohibits any implementation of a foreign trait (a\ntrait defined in another crate) where\n\n - the type that is implementing the trait is foreign\n - all of the parameters being passed to the trait (if there are any) are also\n   foreign.\n\nHere's one example of this error:\n\n