\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/span/method-and-field-eager-resolution.rs","byte_start":716,"byte_end":717,"line_start":22,"line_end":22,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    x[0];","highlight_start":5,"highlight_end":6}],"label":"cannot infer type for `_`","suggested_replacement":null,"expansion":null},{"file_name":"/checkout/src/test/ui/span/method-and-field-eager-resolution.rs","byte_start":684,"byte_end":689,"line_start":21,"line_end":21,"column_start":9,"column_end":14,"is_primary":false,"text":[{"text":"    let mut x = Default::default();","highlight_start":9,"highlight_end":14}],"label":"consider giving `x` a type","suggested_replacement":null,"expansion":null}],"children":[{"message":"type must be known at this point","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0282]: type annotations needed\n  --> /checkout/src/test/ui/span/method-and-field-eager-resolution.rs:22:5: in fn foo\n   |\nLL |     let mut x = Default::default();\n   |         ----- consider giving `x` a type\nLL |     x[0];\n   |     ^ cannot infer type for `_`\n   |\n   = note: type must be known at this point\n\n"}
[00:50:37] {"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"error: aborting due to 2 previous errors\n\n"}
[00:50:37] {"message":"For more information about this error, try `rustc --explain E0282`.","code":null,"level":"","spans":[],"children":[],"rendered":"For more information about this error, tu8,\n}\n\nfn main() {\n    let mut fancy = FancyNum{ num: 5 };\n    let fancy_ref = &(&mut fancy);\n    fancy_ref.num = 6; // error: cannot assign to data in a `&` reference\n    println!(\"{}\", fancy_ref.num);\n}\n