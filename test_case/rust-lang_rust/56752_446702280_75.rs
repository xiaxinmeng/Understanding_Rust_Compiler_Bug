compile_fail,E0038\ntrait Foo {\n    const X: i32;\n}\n\nimpl Foort":1,"highlight_end":47},{"text":"    if !tts.is_empty() {","highlight_start":1,"highlight_end":25},{"text":"        cx.span_fatal(sp, \"make_a_1 takes no arguments\");","highlight_start":1,"highlight_end":58},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    MacEager::expr(quote_expr!(cx, 1))","highlight_start":1,"highlight_end":39},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"the trait `syntax::ext::base::MacResult` cannot be made into an object","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait cannot require that `Self : Sized`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0038]: the trait `syntax::ext::base::MacResult` cannot be made into an object\n  --> /checkout/src/test/ui-fulldeps/auxiliary/macro_crate_test.rs:48:1\n   |\nLL | / fn expand_make_a_1(cx: &mut ExtCtxt, sp: Span, tts: &[TokenTree])\nLL | |                    -> Box<MacResult+'static> {\nLL | |     if !tts.is_empty() {\nLL | |         cx.span_fatal(sp, \"make_a_1 takes no arguments\");\nLL | |     }\nLL | |     MacEager::expr(quote_expr!(cx, 1))\nLL | | }\n   | |_^ the trait `syntax::ext::base::MacResult` cannot be made into an object\n   |\n   = note: the trait cannot require that `Self : Sized`\n\n"}
[00:57:27] {"message":"the trait `syntax::ext::base::MacResult` cannot be made into an object","code":{"code":"E0038","explanation":"\nTrait objects like `Box<Trait>` can only be constructed when certain\nrequirements are satisfied by the trait in question.\n\nTrait objects are a form of dynamic dispatch and use a dle, if I have\n\n