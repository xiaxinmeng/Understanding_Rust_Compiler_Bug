\n\nLifetime elision in implementation headers was part of the lifetime elision\nRFC. It is, however, [currently unimplemented][iss15872].\n\n[book-le]: https://doc.rust-lang.org/nightly/book/first-edition/lifetimes.html#lifetime-elision\n[iss15872]: https://github.com/rust-lang/rust/issues/15872\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/issue-26638.rs","byte_start":524,"byte_end":524,"line_start":11,"line_end":11,"column_start":58,"column_end":58,"is_primary":true,"text":[{"text":"fn parse_type(iter: Box<Iterator<Item=&str>+'static>) -> &str { iter.next() }","highlight_start":58,"highlight_end":58}],"label":"expected lifetime parameter","suggested_replacement":null,"expansion":null}],"children":[{"message":"this function's return type contains a borrowed value, but the signature does not say which one of `iter`'s 2 lifetimes it is borrowed from","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"error[E0106]: missing lifetime specifier\n  --> /checkout/src/test/ui/issue-26638.rs:11:58\n   |\nLL | fn parse_type(iter: Box<Iterator<Item=&str>+'static>) -> &str { iter.next() }\n   |                                                          ^ expected lifetime parameter\n   |\n   = help: this function's return type contains a borrowed value, but the signature does not say which one of `iter`'s 2 lifetimes it is borrowed from\n\n"}
[00:45:50] {"message":"missing lifetime specifier","code":{"code":"E0106","explanation":"\nThis error indicates that a lifetime is missing from a type. If it is an error\ninside a function signature, the problem may be with failing to adhere to the\nlifetime elision rules (see below).\n\nHere are some simple examples of where you'll run into this error:\n\n