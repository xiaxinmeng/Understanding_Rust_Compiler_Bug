plain
2020-03-10T20:58:51.5243544Z ========================== Starting Command Output ===========================
2020-03-10T20:58:51.5247454Z [command]/bin/bash --noprofile --norc /home/vsts/work/_temp/7e443919-6a81-4df4-a27f-5caddea4d61d.sh
2020-03-10T20:58:51.5247700Z 
2020-03-10T20:58:51.5252158Z ##[section]Finishing: Disable git automatic line ending conversion
2020-03-10T20:58:51.5272719Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/69899/merge to s
2020-03-10T20:58:51.5275830Z Task         : Get sources
2020-03-10T20:58:51.5276100Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-03-10T20:58:51.5276415Z Version      : 1.0.0
2020-03-10T20:58:51.5276593Z Author       : Microsoft
---
2020-03-10T20:58:52.5147438Z ##[command]git remote add origin https://github.com/rust-lang/rust
2020-03-10T20:58:52.5153204Z ##[command]git config gc.auto 0
2020-03-10T20:58:52.5158686Z ##[command]git config --get-all http.https://github.com/rust-lang/rust.extraheader
2020-03-10T20:58:52.5162379Z ##[command]git config --get-all http.proxy
2020-03-10T20:58:52.5169506Z ##[command]git -c http.extraheader="AUTHORIZATION: basic ***" fetch --force --tags --prune --progress --no-recurse-submodules --depth=2 origin +refs/heads/*:refs/remotes/origin/* +refs/pull/69899/merge:refs/remotes/pull/69899/merge
---
2020-03-10T22:02:18.7396796Z .................................................................................................... 1700/9755
2020-03-10T22:02:23.4802567Z .................................................................................................... 1800/9755
2020-03-10T22:02:35.3932090Z .............................................................i...................................... 1900/9755
2020-03-10T22:02:43.2738617Z .................................................................................................... 2000/9755
2020-03-10T22:02:58.3166062Z ...................................................iiiii............................................ 2100/9755
2020-03-10T22:03:08.8131990Z .................................................................................................... 2300/9755
2020-03-10T22:03:11.1311866Z .................................................................................................... 2400/9755
2020-03-10T22:03:14.4264116Z .................................................................................................... 2500/9755
2020-03-10T22:03:37.0331823Z .................................................................................................... 2600/9755
---
2020-03-10T22:06:23.1794049Z .....................i...............i.............................................................. 5000/9755
2020-03-10T22:06:33.2267469Z .................................................................................................... 5100/9755
2020-03-10T22:06:39.1200198Z ................................................................i................................... 5200/9755
2020-03-10T22:06:45.5519768Z .................................................................................................... 5300/9755
2020-03-10T22:06:55.1982611Z .............................................ii.ii........i...i..................................... 5400/9755
2020-03-10T22:07:03.3862827Z .................................................................................................... 5600/9755
2020-03-10T22:07:13.1895027Z .................................................................................................... 5700/9755
2020-03-10T22:07:20.2557427Z ....................................i............................................................... 5800/9755
2020-03-10T22:07:26.3291394Z .................................................................................................... 5900/9755
2020-03-10T22:07:26.3291394Z .................................................................................................... 5900/9755
2020-03-10T22:07:37.0702859Z .................................................................................................... 6000/9755
2020-03-10T22:07:46.5653681Z .............................ii...i..ii...........i................................................. 6100/9755
2020-03-10T22:08:04.7367348Z .................................................................................................... 6300/9755
2020-03-10T22:08:11.8773585Z .................................................................................................... 6400/9755
2020-03-10T22:08:11.8773585Z .................................................................................................... 6400/9755
2020-03-10T22:08:20.6524180Z ............................................................i..ii................................... 6500/9755
2020-03-10T22:08:47.5253508Z .................................................................................................... 6700/9755
2020-03-10T22:08:51.6022849Z ......................................................i............................................. 6800/9755
2020-03-10T22:08:53.7123881Z .................................................................................................... 6900/9755
2020-03-10T22:08:55.8285725Z .....................................................................................i.............. 7000/9755
---
2020-03-10T22:10:39.3241474Z .................................................................................................... 7700/9755
2020-03-10T22:10:43.6260644Z .................................................................................................... 7800/9755
2020-03-10T22:10:50.0514769Z .................................................................................................... 7900/9755
2020-03-10T22:10:57.4105313Z ...................................i................................................................ 8000/9755
2020-03-10T22:11:06.5959849Z ....................................................................................iiiiiiiiii.i.... 8100/9755
2020-03-10T22:11:23.1919141Z ............................i......i................................................................ 8300/9755
2020-03-10T22:11:28.3741696Z .................................................................................................... 8400/9755
2020-03-10T22:11:40.2338637Z .................................................................................................... 8500/9755
2020-03-10T22:11:52.6857272Z .................................................................................................... 8600/9755
---
2020-03-10T22:14:20.2949992Z  finished in 7.803
2020-03-10T22:14:20.3137173Z Check compiletest suite=codegen mode=codegen (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-10T22:14:20.5135930Z 
2020-03-10T22:14:20.5136648Z running 179 tests
2020-03-10T22:14:23.8916547Z iiii......i...........ii..iiii....i....i...........i............i..i..................i....i........ 100/179
2020-03-10T22:14:26.3454099Z ....i.i.i...iii..iiiiiiiiiiiiiiii.......................iii............ii......
2020-03-10T22:14:26.3456676Z 
2020-03-10T22:14:26.3519542Z  finished in 6.031
2020-03-10T22:14:26.3671745Z Check compiletest suite=codegen-units mode=codegen-units (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-10T22:14:26.5372835Z 
---
2020-03-10T22:14:28.6360825Z  finished in 2.269
2020-03-10T22:14:28.6556800Z Check compiletest suite=assembly mode=assembly (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-10T22:14:28.8193117Z 
2020-03-10T22:14:28.8194882Z running 9 tests
2020-03-10T22:14:28.8195917Z iiiiiiiii
2020-03-10T22:14:28.8197327Z 
2020-03-10T22:14:28.8197474Z  finished in 0.163
2020-03-10T22:14:28.8395490Z Check compiletest suite=incremental mode=incremental (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-10T22:14:29.0358683Z 
---
2020-03-10T22:14:51.1686879Z  finished in 22.329
2020-03-10T22:14:51.7034728Z Check compiletest suite=debuginfo mode=debuginfo (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-10T22:14:51.8936068Z 
2020-03-10T22:14:51.8936547Z running 115 tests
2020-03-10T22:15:06.2312227Z iiiii..i.....i..i...i..i.i.i..i..i..ii....i.i....ii..........iiii.........i.....i..i.......ii.i..ii. 100/115
2020-03-10T22:15:07.8719749Z ...iiii.....ii.
2020-03-10T22:15:07.8721104Z 
2020-03-10T22:15:07.8721258Z  finished in 16.167
2020-03-10T22:15:07.8721977Z Uplifting stage1 rustc (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-03-10T22:15:07.8722959Z Copying stage2 rustc from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)
---
2020-03-10T22:28:28.4619187Z 
2020-03-10T22:28:28.4627206Z    Doc-tests core
2020-03-10T22:28:33.3299635Z 
2020-03-10T22:28:33.3300009Z running 2480 tests
2020-03-10T22:28:42.6460254Z ......iiiii......................................................................................... 100/2480
2020-03-10T22:28:51.9210756Z ....................................................................................ii.............. 200/2480
2020-03-10T22:29:13.0248331Z ...................i................................................................................ 400/2480
2020-03-10T22:29:13.0248331Z ...................i................................................................................ 400/2480
2020-03-10T22:29:23.0556588Z ........................................................................i..i..................iiii.. 500/2480
2020-03-10T22:29:39.8206833Z .................................................................................................... 700/2480
2020-03-10T22:29:48.5982566Z .................................................................................................... 800/2480
2020-03-10T22:29:57.2979492Z .................................................................................................... 900/2480
2020-03-10T22:30:06.2921908Z .................................................................................................... 1000/2480
---
2020-03-10T22:33:35.1096235Z .................................................thread '<unnamed>' panicked at 'explicit panic', src/libstd/io/stdio.rs:871:13
2020-03-10T22:33:35.1107726Z ... 300/760
2020-03-10T22:33:35.1959936Z .................................................................................................... 400/760
2020-03-10T22:33:37.2707382Z .................................................................................................... 500/760
2020-03-10T22:33:37.2955044Z .................thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', src/libstd/sync/mpsc/mod.rs:2741:22
2020-03-10T22:33:37.2967445Z ....thread 'thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: "SendError(..)"', src/libstd/sync/mpsc/mod.rs:2766:17
2020-03-10T22:33:37.2981253Z .<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', .src/libstd/sync/mpsc/mod.rs.:2778..:21
2020-03-10T22:33:37.2987317Z ..thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', src/libstd/sync/mpsc/mod.rs:2645:13
2020-03-10T22:33:37.5642490Z ..........................................thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', src/libstd/sync/mpsc/mod.rs:1997:22
2020-03-10T22:33:37.5680689Z ....thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', ..src/libstd/sync/mpsc/mod.rs......thread ':2034:21
2020-03-10T22:33:37.5781320Z .................. 600/760
2020-03-10T22:33:39.6054372Z ...................thread '<unnamed>' panicked at 'explicit panic', src/libstd/sync/mutex.rs:633:13
2020-03-10T22:33:39.6055771Z .thread '<unnamed>' panicked at 'test panic in inner thread to poison mutex', src/libstd/sync/mutex.rs:587:13
2020-03-10T22:33:39.6059495Z thread '<unnamed>' panicked at 'test panic in inner thread to poison mutex', src/libstd/sync/mutex.rs:563:13
---
2020-03-10T22:33:48.6210268Z 
2020-03-10T22:33:48.6211227Z running 1010 tests
2020-03-10T22:34:06.9094614Z i................................................................................................... 100/1010
2020-03-10T22:34:17.3088813Z .................................................................................................... 200/1010
2020-03-10T22:34:24.5829665Z ..................iii......i......i...i......i...................................................... 300/1010
2020-03-10T22:34:29.7799564Z .................................................................................................... 400/1010
2020-03-10T22:34:36.6798493Z ............................................i..i......................................ii............ 500/1010
2020-03-10T22:34:49.5869392Z .................................................................................................... 700/1010
2020-03-10T22:34:49.5869392Z .................................................................................................... 700/1010
2020-03-10T22:34:56.7235459Z ....................................iiii............................................................ 800/1010
2020-03-10T22:35:10.9206496Z .................................................................................................... 900/1010
2020-03-10T22:35:17.8297382Z ..........................................................iiii...................................... 1000/1010
2020-03-10T22:35:18.2798853Z test result: ok. 990 passed; 0 failed; 20 ignored; 0 measured; 0 filtered out
2020-03-10T22:35:18.2799105Z 
2020-03-10T22:35:18.2961198Z  finished in 168.995
2020-03-10T22:35:18.2976435Z Testing term stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
---
2020-03-10T22:37:47.2399599Z error[E0658]: `if` is not allowed in a `const fn`
2020-03-10T22:37:47.2400379Z      | 
2020-03-10T22:37:47.2401179Z     ::: src/librustc_index/vec/tests.rs:2:1
2020-03-10T22:37:47.2401884Z      |
2020-03-10T22:37:47.2402768Z 2    |       newtype_index!(struct MyIdx { MAX = 0xFFFF_FFFA });
2020-03-10T22:37:47.2405166Z     --> src/librustc_index/vec.rs:127:17
2020-03-10T22:37:47.2406382Z      |
2020-03-10T22:37:47.2407290Z 70   |     / macro_rules! newtype_index {
2020-03-10T22:37:47.2407290Z 70   |     / macro_rules! newtype_index {
2020-03-10T22:37:47.2408630Z 71   |     |     // ---- public rules ----
2020-03-10T22:37:47.2410548Z 73   |     |     // Use default constants
2020-03-10T22:37:47.2411410Z ...        |
2020-03-10T22:37:47.2411410Z ...        |
2020-03-10T22:37:47.2412470Z 87   | /   |         $crate::newtype_index!(
2020-03-10T22:37:47.2413845Z 88   | |   |             // Leave out derives marker so we can use its absence to ensure it comes first
2020-03-10T22:37:47.2415197Z 89   | |   |             @attrs        [$(#[$attrs])*]
2020-03-10T22:37:47.2416394Z 90   | |   |             @type         [$name]
2020-03-10T22:37:47.2417414Z ...    |   |
2020-03-10T22:37:47.2418459Z 94   | |   |             @debug_format ["{}"]
2020-03-10T22:37:47.2419670Z 95   | |   |                           $($tokens)+);
2020-03-10T22:37:47.2420869Z      | |___|_______________________________________- in this macro invocation (#2)
2020-03-10T22:37:47.2421795Z ...        |
2020-03-10T22:37:47.2422904Z 127  |     |                 assert!(value <= ($max as usize));
2020-03-10T22:37:47.2425558Z ...        |
2020-03-10T22:37:47.2425558Z ...        |
2020-03-10T22:37:47.2428122Z 380  | /   |         $crate::newtype_index!(
2020-03-10T22:37:47.2432315Z 381  | |   |             @derives      [RustcEncodable,]
2020-03-10T22:37:47.2433431Z 382  | |   |             @attrs        [$(#[$attrs])*]
2020-03-10T22:37:47.2434559Z 383  | |   |             @type         [$type]
2020-03-10T22:37:47.2435518Z ...    |   |
2020-03-10T22:37:47.2436383Z 386  | |   |             @debug_format [$debug_format]
2020-03-10T22:37:47.2437954Z 387  | |   |                           $($tokens)*);
2020-03-10T22:37:47.2439104Z      | |___|_______________________________________- in this macro invocation (#3)
2020-03-10T22:37:47.2439862Z ...        |
2020-03-10T22:37:47.2440739Z 407  | /   |         $crate::newtype_index!(
2020-03-10T22:37:47.2441796Z 408  | |   |             @derives      [$($derives,)*]
2020-03-10T22:37:47.2442850Z 409  | |   |             @attrs        [$(#[$attrs])*]
2020-03-10T22:37:47.2443876Z 410  | |   |             @type         [$type]
2020-03-10T22:37:47.2444689Z ...    |   |
2020-03-10T22:37:47.2445603Z 413  | |   |             @debug_format [$debug_format]
2020-03-10T22:37:47.2446652Z 414  | |   |                           $name = $constant,);
2020-03-10T22:37:47.2447712Z      | |___|______________________________________________- in this macro invocation (#4)
2020-03-10T22:37:47.2448457Z ...        |
2020-03-10T22:37:47.2449330Z 445  | /   |         $crate::newtype_index!(
2020-03-10T22:37:47.2450394Z 446  | |   |             @derives      [$($derives,)*]
2020-03-10T22:37:47.2451699Z 447  | |   |             @attrs        [$(#[$attrs])*]
2020-03-10T22:37:47.2453041Z 448  | |   |             @type         [$type]
2020-03-10T22:37:47.2453853Z ...    |   |
2020-03-10T22:37:47.2454771Z 451  | |   |             @debug_format [$debug_format]
2020-03-10T22:37:47.2456017Z 452  | |   |                           $($tokens)*);
2020-03-10T22:37:47.2457012Z      | |___|_______________________________________- in this macro invocation (#5)
2020-03-10T22:37:47.2458498Z 494  |     |     );
2020-03-10T22:37:47.2459427Z 495  |     | }
2020-03-10T22:37:47.2460338Z      |     | -
2020-03-10T22:37:47.2461038Z      |     | |
2020-03-10T22:37:47.2461038Z      |     | |
2020-03-10T22:37:47.2462101Z      |     | in this expansion of `newtype_index!` (#1)
2020-03-10T22:37:47.2463056Z      |     | in this expansion of `$crate::newtype_index!` (#2)
2020-03-10T22:37:47.2464076Z      |     | in this expansion of `$crate::newtype_index!` (#3)
2020-03-10T22:37:47.2465613Z      |     |_in this expansion of `$crate::newtype_index!` (#4)
2020-03-10T22:37:47.2466746Z      |       in this expansion of `$crate::newtype_index!` (#5)
2020-03-10T22:37:47.2468294Z     ::: /checkout/src/libcore/macros/mod.rs:1276:5
2020-03-10T22:37:47.2469010Z      |
2020-03-10T22:37:47.2469833Z 1276 | /         macro_rules! assert {
2020-03-10T22:37:47.2469833Z 1276 | /         macro_rules! assert {
2020-03-10T22:37:47.2470969Z 1277 | |             ($cond:expr) => {{ /* compiler built-in */ }};
2020-03-10T22:37:47.2472184Z 1278 | |             ($cond:expr,) => {{ /* compiler built-in */ }};
2020-03-10T22:37:47.2473460Z 1279 | |             ($cond:expr, $($arg:tt)+) => {{ /* compiler built-in */ }};
2020-03-10T22:37:47.2475505Z      | |_________- in this expansion of `assert!` (#6)
2020-03-10T22:37:47.2476281Z      |
2020-03-10T22:37:47.2476281Z      |
2020-03-10T22:37:47.2477257Z      = note: see issue #49146 <***/issues/49146> for more information
2020-03-10T22:37:47.2478739Z      = help: add `#![feature(const_if_match)]` to the crate attributes to enable
2020-03-10T22:37:47.2479844Z error[E0658]: `if` is not allowed in a `const fn`
2020-03-10T22:37:47.2480710Z      | 
2020-03-10T22:37:47.2486853Z     ::: src/librustc_index/vec/tests.rs:2:1
2020-03-10T22:37:47.2501534Z      |
2020-03-10T22:37:47.2501534Z      |
2020-03-10T22:37:47.2502252Z 2    |       newtype_index!(struct MyIdx { MAX = 0xFFFF_FFFA });
2020-03-10T22:37:47.2504048Z     --> src/librustc_index/vec.rs:135:17
2020-03-10T22:37:47.2504547Z      |
2020-03-10T22:37:47.2505227Z 70   |     / macro_rules! newtype_index {
2020-03-10T22:37:47.2505227Z 70   |     / macro_rules! newtype_index {
2020-03-10T22:37:47.2506076Z 71   |     |     // ---- public rules ----
2020-03-10T22:37:47.2507793Z 73   |     |     // Use default constants
2020-03-10T22:37:47.2508550Z ...        |
2020-03-10T22:37:47.2508550Z ...        |
2020-03-10T22:37:47.2509411Z 87   | /   |         $crate::newtype_index!(
2020-03-10T22:37:47.2510555Z 88   | |   |             // Leave out derives marker so we can use its absence to ensure it comes first
2020-03-10T22:37:47.2511667Z 89   | |   |             @attrs        [$(#[$attrs])*]
2020-03-10T22:37:47.2512867Z 90   | |   |             @type         [$name]
2020-03-10T22:37:47.2516863Z ...    |   |
2020-03-10T22:37:47.2517865Z 94   | |   |             @debug_format ["{}"]
2020-03-10T22:37:47.2519107Z 95   | |   |                           $($tokens)+);
2020-03-10T22:37:47.2520125Z      | |___|_______________________________________- in this macro invocation (#2)
2020-03-10T22:37:47.2520995Z ...        |
2020-03-10T22:37:47.2522075Z 135  |     |                 assert!(value <= $max);
2020-03-10T22:37:47.2523985Z ...        |
2020-03-10T22:37:47.2523985Z ...        |
2020-03-10T22:37:47.2524784Z 380  | /   |         $crate::newtype_index!(
2020-03-10T22:37:47.2525772Z 381  | |   |             @derives      [RustcEncodable,]
2020-03-10T22:37:47.2527090Z 382  | |   |             @attrs        [$(#[$attrs])*]
2020-03-10T22:37:47.2528038Z 383  | |   |             @type         [$type]
2020-03-10T22:37:47.2528819Z ...    |   |
2020-03-10T22:37:47.2529979Z 386  | |   |             @debug_format [$debug_format]
2020-03-10T22:37:47.2530953Z 387  | |   |                           $($tokens)*);
2020-03-10T22:37:47.2532089Z      | |___|_______________________________________- in this macro invocation (#3)
2020-03-10T22:37:47.2532802Z ...        |
2020-03-10T22:37:47.2533821Z 407  | /   |         $crate::newtype_index!(
2020-03-10T22:37:47.2534910Z 408  | |   |             @derives      [$($derives,)*]
2020-03-10T22:37:47.2536108Z 409  | |   |             @attrs        [$(#[$attrs])*]
2020-03-10T22:37:47.2537387Z 410  | |   |             @type         [$type]
2020-03-10T22:37:47.2538160Z ...    |   |
2020-03-10T22:37:47.2539362Z 413  | |   |             @debug_format [$debug_format]
2020-03-10T22:37:47.2540579Z 414  | |   |                           $name = $constant,);
2020-03-10T22:37:47.2541812Z      | |___|______________________________________________- in this macro invocation (#4)
2020-03-10T22:37:47.2542571Z ...        |
2020-03-10T22:37:47.2543782Z 445  | /   |         $crate::newtype_index!(
2020-03-10T22:37:47.2545111Z 446  | |   |             @derives      [$($derives,)*]
2020-03-10T22:37:47.2546083Z 447  | |   |             @attrs        [$(#[$attrs])*]
2020-03-10T22:37:47.2547047Z 448  | |   |             @type         [$type]
2020-03-10T22:37:47.2547803Z ...    |   |
2020-03-10T22:37:47.2548650Z 451  | |   |             @debug_format [$debug_format]
2020-03-10T22:37:47.2549613Z 452  | |   |                           $($tokens)*);
2020-03-10T22:37:47.2550548Z      | |___|_______________________________________- in this macro invocation (#5)
2020-03-10T22:37:47.2553236Z 494  |     |     );
2020-03-10T22:37:47.2554010Z 495  |     | }
2020-03-10T22:37:47.2554922Z      |     | -
2020-03-10T22:37:47.2555782Z      |     | |
2020-03-10T22:37:47.2555782Z      |     | |
2020-03-10T22:37:47.2556568Z      |     | in this expansion of `newtype_index!` (#1)
2020-03-10T22:37:47.2557468Z      |     | in this expansion of `$crate::newtype_index!` (#2)
2020-03-10T22:37:47.2559297Z      |     | in this expansion of `$crate::newtype_index!` (#3)
2020-03-10T22:37:47.2560425Z      |     |_in this expansion of `$crate::newtype_index!` (#4)
2020-03-10T22:37:47.2561359Z      |       in this expansion of `$crate::newtype_index!` (#5)
2020-03-10T22:37:47.2562652Z     ::: /checkout/src/libcore/macros/mod.rs:1276:5
2020-03-10T22:37:47.2563132Z      |
2020-03-10T22:37:47.2563754Z 1276 | /         macro_rules! assert {
2020-03-10T22:37:47.2563754Z 1276 | /         macro_rules! assert {
2020-03-10T22:37:47.2564637Z 1277 | |             ($cond:expr) => {{ /* compiler built-in */ }};
2020-03-10T22:37:47.2565612Z 1278 | |             ($cond:expr,) => {{ /* compiler built-in */ }};
2020-03-10T22:37:47.2566644Z 1279 | |             ($cond:expr, $($arg:tt)+) => {{ /* compiler built-in */ }};
2020-03-10T22:37:47.2568230Z      | |_________- in this expansion of `assert!` (#6)
2020-03-10T22:37:47.2568952Z      |
2020-03-10T22:37:47.2568952Z      |
2020-03-10T22:37:47.2569714Z      = note: see issue #49146 <***/issues/49146> for more information
2020-03-10T22:37:47.2570579Z      = help: add `#![feature(const_if_match)]` to the crate attributes to enable
2020-03-10T22:37:47.2571374Z error: aborting due to 2 previous errors
2020-03-10T22:37:47.2571628Z 
2020-03-10T22:37:47.2572069Z For more information about this error, try `rustc --explain E0658`.
2020-03-10T22:37:47.2572620Z error: could not compile `rustc_index`.
2020-03-10T22:37:47.2572620Z error: could not compile `rustc_index`.
2020-03-10T22:37:47.2572845Z 
2020-03-10T22:37:47.2573238Z To learn more, run the command again with --verbose.
2020-03-10T22:37:47.2573421Z 
2020-03-10T22:37:47.2573513Z 
2020-03-10T22:37:47.2574658Z command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo" "test" "-Zconfig-profile" "--target" "x86_64-unknown-linux-gnu" "-Zbinary-dep-depinfo" "-j" "2" "--release" "--locked" "--color" "always" "--features" " llvm" "--manifest-path" "/checkout/src/rustc/Cargo.toml" "-p" "rustc_index" "--" "--quiet"
2020-03-10T22:37:47.2575816Z 
2020-03-10T22:37:47.2575915Z 
2020-03-10T22:37:47.2576246Z failed to run: /checkout/obj/build/bootstrap/debug/bootstrap test
2020-03-10T22:37:47.2576822Z Build completed unsuccessfully in 1:31:52
2020-03-10T22:37:47.2576822Z Build completed unsuccessfully in 1:31:52
2020-03-10T22:37:47.2577078Z == clock drift check ==
2020-03-10T22:37:47.2577354Z   local time: Tue Mar 10 22:37:46 UTC 2020
2020-03-10T22:37:47.2577670Z   network time: Tue, 10 Mar 2020 22:37:47 GMT
2020-03-10T22:37:47.2577941Z == end clock drift check ==
2020-03-10T22:37:47.5826351Z 
2020-03-10T22:37:47.5962014Z ##[error]Bash exited with code '1'.
2020-03-10T22:37:47.5976527Z ##[section]Finishing: Run build
2020-03-10T22:37:47.6031997Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/69899/merge to s
2020-03-10T22:37:47.6037049Z Task         : Get sources
2020-03-10T22:37:47.6037414Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-03-10T22:37:47.6038139Z Version      : 1.0.0
2020-03-10T22:37:47.6038384Z Author       : Microsoft
2020-03-10T22:37:47.6038384Z Author       : Microsoft
2020-03-10T22:37:47.6038761Z Help         : [More Information](https://go.microsoft.com/fwlink/?LinkId=798199)
2020-03-10T22:37:47.6039183Z ==============================================================================
2020-03-10T22:37:47.9684708Z Cleaning any cached credential from repository: rust-lang/rust (GitHub)
2020-03-10T22:37:47.9730500Z ##[section]Finishing: Checkout rust-lang/rust@refs/pull/69899/merge to s
2020-03-10T22:37:47.9827470Z Cleaning up task key
2020-03-10T22:37:47.9828746Z Start cleaning up orphan processes.
2020-03-10T22:37:48.0013526Z Terminate orphan process: pid (3731) (python)
2020-03-10T22:37:48.0258561Z ##[section]Finishing: Finalize Job
