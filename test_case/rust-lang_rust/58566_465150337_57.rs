\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the chapter in the\nBook:\n\nhttps://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/unsized-locals/borrow-after-move.rs","byte_start":534,"byte_end":535,"line_start":29,"line_end":29,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        y.foo();","highlight_start":9,"highlight_end":10}],"label":"value moved here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/unsized-locals/borrow-after-move.rs","byte_start":631,"byte_end":633,"line_start":32,"line_end":32,"column_start":24,"column_end":26,"is_primary":true,"text":[{"text":"        println!(\"{}\", &y);","highlight_start":24,"highlight_end":26}],"label":"value borrowed here after move","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/unsized-locals/borrow-after-move.rs","byte_start":518,"byte_end":519,"line_start":28,"line_end":28,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"        let y = *x;","highlight_start":13,"highlight_end":14}],"label":"move occurs because `y` has type `str`, which does not implement the `Copy` trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0382]: borrow of moved value: `y`\n  --> /checkout/src/test/ui/unsized-locals/borrow-after-move.rs:32:24\n   |\nLL |         let y = *x;\n   |             - move occurs because `y` has type `str`, which does not implement the `Copy` trait\nLL |         y.foo();\n   |         - value moved here\n...\nLL |         println!(\"{}\", &y);\n   |                        ^^ value borrowed here after move\n\n"}
[01:30:22] {"message":"borrow of moved value: `x`","code":{"code":"E0382","explanation":"\nThis error occurs when an attempt is made to use a variable after its contents\nhave been moved elsewhere. For example:\n\n