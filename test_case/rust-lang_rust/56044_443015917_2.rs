\n\nMust always be called with exactly two arguments, e.g. `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/run-pass/binding/fn-arg-incomplete-pattern-drop-order.rs","byte_start":1871,"byte_end":1879,"line_start":67,"line_end":67,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    (0..=4).for_each(test_drop_order, bindings_with_let);","highlight_start":13,"highlight_end":21}],"label":"expected 1 parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0061]: this function takes 1 parameter but 2 parameters were supplied\n  --> /checkout/src/test/run-pass/binding/fn-arg-incomplete-pattern-drop-order.rs:67:13\n   |\nLL |     (0..=4).for_each(test_drop_order, bindings_with_let);\n   |             ^^^^^^^^ expected 1 parameter\n\n"}
[00:56:47] {"message":"this function takes 1 parameter but 2 parameters were supplied","code":{"code":"E0061","explanation":"\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n