\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/coercion/coerce-expect-unsized-ascribed.rs","byte_start":1471,"byte_end":1495,"line_start":30,"line_end":30,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        box |x| (x as i16 as u8),","highlight_start":9,"highlight_end":33}],"label":"expected closure, found a different closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected type `std::boxed::Box<[closure@/checkout/src/test/ui/coercion/coerce-expect-unsized-ascribed.rs:29:18: 29:31]>`\n   found type `std::boxed::Box<[closure@/checkout/src/test/ui/coercion/coerce-expect-unsized-ascribed.rs:30:13: 30:33]>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"no two closures, even if identical, have the same type","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider boxing your closure and/or using it as a trait object","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"error[E0308]: mismatched types\n  --> /checkout/src/test/ui/coercion/coerce-expect-unsized-ascribed.rs:30:9\n   |\nLL |         box |x| (x as i16 as u8),\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^ expected closure, found a different closure\n   |\n   = note: expected type `std::boxed::Box<[closure@/checkout/src/test/ui/coercion/coerce-expect-unsized-ascribed.rs:29:18: 29:31]>`\n              found type `std::boxed::Box<[closure@/checkout/src/test/ui/coercion/coerce-expect-unsized-ascribed.rs:30:13: 30:33]>`\n   = note: no two closures, even if identical, have the same type\n   = help: consider boxing your closure and/or using it as a trait object\n\n"}
[01:05:24] {"message":"the size for values of type `[std::boxed::Box<dyn std::ops::Fn(i32) -> _>]` cannot be known at compilation time","code":{"code":"E0277","explanation":"\nYou tried to use a type which doesn't implement some trait in a place which\nexpected that trait. Erroneous code example:\n\n