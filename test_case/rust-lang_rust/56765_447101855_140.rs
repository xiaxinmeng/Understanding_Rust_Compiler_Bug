\n\nA `const` represents a constant value that should never change. If one takes\na `&` reference to the constant, then one is taking a pointer to some memory\nlocation containing the value. Normally this is perfectly fine: most values\ncan't be changed via a shared `&` pointer, but interior mutability woul"column_end":25,"is_primary":true,"text":[{"text":"const F: &'static C = &D;","highlight_start":23,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0492]: cannot borrow a constant which may contain interior mutability, create a static instead\n  --> /checkout/src/test/ui/issues/issue-17718-const-borrow.rs:21:23\n   |\nLL | const F: &'static C = &D;\n   |                       ^^\n\n"}
[01:00:57] {"message":"cannot borrow a constant which may contain interior mutability, create a static instead","code":{"code":"E0492","explanation":"\nA borrow of a constant containing interior mutability was attempted. Erroneous\ncode example:\n\n