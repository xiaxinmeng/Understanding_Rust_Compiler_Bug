\n\nNote that this approach needs a reference to S with lifetime `'a`.\nNothing shorter than `'a` will suffice: a shorter lifetime would imply\nthat after `demo` finishes executing, something else (such as the\ndestructor!) could access `s.data` after the end of that shorter\nlifetime, which would again violate the `&mut`-borrow's exclusive\naccess.\n"},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.rs","byte_start":2730,"byte_end":2731,"line_start":66,"line_end":66,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.rs","byte_start":2427,"byte_end":2429,"line_start":62,"line_end":62,"column_start":14,"column_end":16,"is_primary":false,"text":[{"text":"fn scribbled<'a>(s: Scribble<'a>) -> &'a mut u32 {","highlight_start":14,"highlight_end":16}],"label":"lifetime `'a` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.rs","byte_start":2469,"byte_end":2478,"line_start":63,"line_end":63,"column_start":5,"column_end":14,"is_primary":true,"teop` trait.\n\nExample of erroneous code:\n\n