\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/unsized-enum2.rs","byte_start":1452,"byte_end":1460,"line_start":49,"line_end":49,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    VH{u: isize, x: [u32]},","highlight_start":18,"highlight_end":26}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `std::marker::Sized` is not implemented for `[u32]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"no field of an enum variant may have a dynamically sized type","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0277]: the size for value values of type `[u32]` cannot be known at compilation time\n  --> /checkout/src/test/ui/unsized-enum2.rs:49:18\n   |\nLL |     VH{u: isize, x: [u32]},\n   |                  ^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `[u32]`\n   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n   = note: no field of an enum variant may have a dynamically sized type\n\n"}
[00:48:08] {"message":"the size for value values of type `(dyn Foo + 'static)` cannot be known at compilation time","code":{"code":"E0277","explanation":"\nYou tried to use a type which doesn't implement some trait in a place which\nexpected that trait. Erroneous code example:\n\n