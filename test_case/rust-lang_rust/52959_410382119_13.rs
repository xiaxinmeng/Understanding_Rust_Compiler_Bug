\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/borrowck/borrowck-slice-pattern-element-loan.rs","byte_start":2010,"rom_begin3, _, ..] = *s {","highlight_start":50,"highlight_end":65}],"label":"immutable borrow occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/borrowck/borrowck-slice-pattern-element-loan.rs","byte_start":2583,"byte_end":2594,"line_start":73,"line_end":73,"column_start":45,"column_end":56,"is_primary":false,"text":[{"text":"            nop(&[from_begin0, from_begin1, from_begin3, from_end3]);","highlight_start":45,"highlight_end":56}],"label":"borrow used here in later iteration of loop","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0502]: cannot borrow `s[..]` as mutable because it is also borrowed as immutable\n  --> /checkout/src/test/ui/borrowck/borrowck-slice-pattern-element-loan.rs:72:21\n   |\nLL |     if let [ref from_begin0, ref from_begin1, _, ref from_begin3, _, ..] = *s {\n   |                                                  --------------- immutable borrow occurs here\n...\nLL |         if let [.., ref mut from_end3, _,  _] = *s { //~ERROR\n   |                     ^^^^^^^^^^^^^^^^^ mutable borrow occurs here\nLL |             nop(&[from_begin0, from_begin1, from_begin3, from_end3]);\n   |                                             ----------- borrow used here in later iteration of loop\n\n"}
[00:43:19] {"message":"cannot borrow `s[..]` as mutable because it is also borrowed as immutable","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n