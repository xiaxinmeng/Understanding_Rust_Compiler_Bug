\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/bad/bad-sized.rs","byte_start":43,"byte_end":61,"line_start":4,"line_end":4,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"    let x: Vec<Trait + Sized> = Vec::new();","highlight_start":12,"highlight_end":30}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `std::marker::Sized` is not implemented for `dyn Trait`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `std::vec::Vec`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time\n  --> /checkout/src/test/ui/bad/bad-sized.rs:4:12\n   |\nLL |     let x: Vec<Trait + Sized> = Vec::new();\n   |            ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `dyn Trait`\n   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n   = note: required by `std::vec::Vec`\n\n"}
[01:15:35] {"message":"the size for values of type `dyn Trait` cannot be known at compilation time","code":{"code":"E0277","explanation":"\nYou tried to use a type which doesn't implement some trait in a place which\nexpected that trait. Erroneous code example:\n\n