
    Checking rust_issue v0.1.0 (/tmp/rust_issue)
     Running `rustc --crate-name rust_issue --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C metadata=1ba6d13940848f0a -C extra-filename=-1ba6d13940848f0a --out-dir /tmp/rust_issue/target/debug/deps -C incremental=/tmp/rust_issue/target/debug/incremental -L dependency=/tmp/rust_issue/target/debug/deps`
DEBUG rustc_resolve resolve_crate_root($crate#0)
DEBUG rustc_resolve resolve_crate_root: marks=[]
DEBUG rustc_resolve resolve_crate_root: found opaque mark None None
DEBUG rustc_resolve resolve_crate_root: found semi-transparent mark None None
DEBUG rustc_resolve resolve_crate_root($crate#0): found no mark (ident.span = src/lib.rs:1:1: 1:1 (#0))
DEBUG rustc_resolve resolve_crate_root($crate#1)
DEBUG rustc_resolve resolve_crate_root: marks=[(ExpnData { kind: AstPass(StdImports), parent: ExpnId(0), call_site: src/lib.rs:1:1: 1:1 (#0), def_site: src/lib.rs:1:1: 1:1 (#0), allow_internal_unstable: Some(["prelude_import"]), allow_internal_unsafe: false, local_inner_macros: false, edition: Edition2018, macro_def_id: None, krate: crate0, orig_id: Some(1) }, Opaque)]
DEBUG rustc_resolve resolve_crate_root: found opaque mark Some(ExpnId(1)) Some(ExpnData { kind: AstPass(StdImports), parent: ExpnId(0), call_site: src/lib.rs:1:1: 1:1 (#0), def_site: src/lib.rs:1:1: 1:1 (#0), allow_internal_unstable: Some(["prelude_import"]), allow_internal_unsafe: false, local_inner_macros: false, edition: Edition2018, macro_def_id: None, krate: crate0, orig_id: Some(1) })
DEBUG rustc_resolve resolve_crate_root: found semi-transparent mark Some(ExpnId(1)) Some(ExpnData { kind: AstPass(StdImports), parent: ExpnId(0), call_site: src/lib.rs:1:1: 1:1 (#0), def_site: src/lib.rs:1:1: 1:1 (#0), allow_internal_unstable: Some(["prelude_import"]), allow_internal_unsafe: false, local_inner_macros: false, edition: Edition2018, macro_def_id: None, krate: crate0, orig_id: Some(1) })
DEBUG rustc_resolve resolve_crate_root($crate#1): got module Some(Def(Mod, DefId(0:0))) (Some("")) (ident.span = src/lib.rs:1:1: 1:1 (#1))
DEBUG rustc_resolve resolve_crate_root($crate#2)
DEBUG rustc_resolve resolve_crate_root: marks=[]
DEBUG rustc_resolve resolve_crate_root: found opaque mark None None
DEBUG rustc_resolve resolve_crate_root: found semi-transparent mark None None
DEBUG rustc_resolve resolve_crate_root($crate#2): found no mark (ident.span = src/lib.rs:1:1: 1:1 (#2))
DEBUG rustc_resolve::def_collector visit_item: Item { attrs: [], id: NodeId(2), span: src/lib.rs:1:1: 3:2 (#0), vis: Visibility { kind: Public, span: src/lib.rs:1:1: 1:1 (#0), tokens: None }, ident: #0, kind: Mod(Mod { inner: src/lib.rs:1:1: 3:2 (#0), unsafety: No, items: [Item { attrs: [Attribute { kind: Normal(AttrItem { path: Path { span: src/lib.rs:1:1: 1:1 (#1), segments: [PathSegment { ident: prelude_import#1, id: NodeId(3), args: None }], tokens: None }, args: Empty, tokens: None }, None), id: AttrId(1), style: Outer, span: src/lib.rs:1:1: 1:1 (#1) }], id: NodeId(4), span: src/lib.rs:1:1: 1:1 (#1), vis: Visibility { kind: Inherited, span: src/lib.rs:1:1: 1:1 (#1), tokens: None }, ident: #0, kind: Use(UseTree { prefix: Path { span: src/lib.rs:1:1: 1:1 (#1), segments: [PathSegment { ident: std#1, id: NodeId(5), args: None }, PathSegment { ident: prelude#1, id: NodeId(6), args: None }, PathSegment { ident: v1#1, id: NodeId(7), args: None }], tokens: None }, kind: Glob, span: src/lib.rs:1:1: 1:1 (#1) }), tokens: None }, Item { attrs: [Attribute { kind: Normal(AttrItem { path: Path { span: src/lib.rs:1:1: 1:1 (#1), segments: [PathSegment { ident: macro_use#1, id: NodeId(8), args: None }], tokens: None }, args: Empty, tokens: None }, None), id: AttrId(0), style: Outer, span: src/lib.rs:1:1: 1:1 (#1) }], id: NodeId(9), span: src/lib.rs:1:1: 1:1 (#1), vis: Visibility { kind: Inherited, span: src/lib.rs:1:1: 1:1 (#1), tokens: None }, ident: std#1, kind: ExternCrate(None), tokens: None }, Item { attrs: [], id: NodeId(10), span: src/lib.rs:1:1: 3:2 (#0), vis: Visibility { kind: Inherited, span: src/lib.rs:1:1: 1:1 (#0), tokens: None }, ident: lifetime_outer#0, kind: Fn(Final, FnSig { header: FnHeader { unsafety: No, asyncness: No, constness: No, ext: None }, decl: FnDecl { inputs: [Param { attrs: ThinVec(None), ty: Ty { id: NodeId(13), kind: Rptr(Some(lifetime(14: 'a)), MutTy { ty: Ty { id: NodeId(15), kind: Tup([]), span: src/lib.rs:1:30: 1:32 (#0), tokens: None }, mutbl: Not }), span: src/lib.rs:1:26: 1:32 (#0), tokens: None }, pat: Pat { id: NodeId(12), kind: Wild, span: src/lib.rs:1:23: 1:24 (#0), tokens: None }, id: NodeId(11), span: src/lib.rs:1:23: 1:32 (#0), is_placeholder: false }], output: Default(src/lib.rs:1:34: 1:34 (#0)) }, span: src/lib.rs:1:1: 1:33 (#0) }, Generics { params: [GenericParam { id: NodeId(16), ident: 'a#0, attrs: ThinVec(None), bounds: [], is_placeholder: false, kind: Lifetime }], where_clause: WhereClause { has_where_token: false, predicates: [], span: src/lib.rs:1:33: 1:33 (#0) }, span: src/lib.rs:1:18: 1:22 (#0) }, Some(Block { stmts: [Stmt { id: NodeId(4294967040), kind: Item(Item { attrs: [], id: NodeId(18), span: src/lib.rs:2:5: 2:27 (#0), vis: Visibility { kind: Inherited, span: src/lib.rs:2:5: 2:5 (#0), tokens: None }, ident: inner#0, kind: Fn(Final, FnSig { header: FnHeader { unsafety: No, asyncness: No, constness: No, ext: None }, decl: FnDecl { inputs: [Param { attrs: ThinVec(None), ty: Ty { id: NodeId(21), kind: Rptr(Some(lifetime(22: 'a)), MutTy { ty: Ty { id: NodeId(23), kind: Tup([]), span: src/lib.rs:2:21: 2:23 (#0), tokens: None }, mutbl: Not }), span: src/lib.rs:2:17: 2:23 (#0), tokens: None }, pat: Pat { id: NodeId(20), kind: Wild, span: src/lib.rs:2:14: 2:15 (#0), tokens: None }, id: NodeId(19), span: src/lib.rs:2:14: 2:23 (#0), is_placeholder: false }], output: Default(src/lib.rs:2:25: 2:25 (#0)) }, span: src/lib.rs:2:5: 2:24 (#0) }, Generics { params: [], where_clause: WhereClause { has_where_token: false, predicates: [], span: src/lib.rs:2:24: 2:24 (#0) }, span: src/lib.rs:2:13: 2:13 (#0) }, Some(Block { stmts: [], id: NodeId(24), rules: Default, span: src/lib.rs:2:25: 2:27 (#0), tokens: None })), tokens: None }), span: src/lib.rs:2:5: 2:27 (#0) }], id: NodeId(17), rules: Default, span: src/lib.rs:1:34: 3:2 (#0), tokens: None })), tokens: None }], inline: true }), tokens: None }
DEBUG rustc_resolve::def_collector visit_item: Item { attrs: [Attribute { kind: Normal(AttrItem { path: Path { span: src/lib.rs:1:1: 1:1 (#1), segments: [PathSegment { ident: prelude_import#1, id: NodeId(3), args: None }], tokens: None }, args: Empty, tokens: None }, None), id: AttrId(1), style: Outer, span: src/lib.rs:1:1: 1:1 (#1) }], id: NodeId(4), span: src/lib.rs:1:1: 1:1 (#1), vis: Visibility { kind: Inherited, span: src/lib.rs:1:1: 1:1 (#1), tokens: None }, ident: #0, kind: Use(UseTree { prefix: Path { span: src/lib.rs:1:1: 1:1 (#1), segments: [PathSegment { ident: std#1, id: NodeId(5), args: None }, PathSegment { ident: prelude#1, id: NodeId(6), args: None }, PathSegment { ident: v1#1, id: NodeId(7), args: None }], tokens: None }, kind: Glob, span: src/lib.rs:1:1: 1:1 (#1) }), tokens: None }
DEBUG rustc_resolve::def_collector create_def(node_id=NodeId(4), data=Misc, parent_def=DefId(0:0))
DEBUG rustc_resolve create_def: def_id_to_node_id[DefId(0:1)] <-> NodeId(4)
DEBUG rustc_resolve::def_collector visit_item: Item { attrs: [Attribute { kind: Normal(AttrItem { path: Path { span: src/lib.rs:1:1: 1:1 (#1), segments: [PathSegment { ident: macro_use#1, id: NodeId(8), args: None }], tokens: None }, args: Empty, tokens: None }, None), id: AttrId(0), style: Outer, span: src/lib.rs:1:1: 1:1 (#1) }], id: NodeId(9), span: src/lib.rs:1:1: 1:1 (#1), vis: Visibility { kind: Inherited, span: src/lib.rs:1:1: 1:1 (#1), tokens: None }, ident: std#1, kind: ExternCrate(None), tokens: None }
DEBUG rustc_resolve::def_collector create_def(node_id=NodeId(9), data=TypeNs("std"), parent_def=DefId(0:0))
DEBUG rustc_resolve create_def: def_id_to_node_id[DefId(0:2)] <-> NodeId(9)
DEBUG rustc_resolve::def_collector visit_item: Item { attrs: [], id: NodeId(10), span: src/lib.rs:1:1: 3:2 (#0), vis: Visibility { kind: Inherited, span: src/lib.rs:1:1: 1:1 (#0), tokens: None }, ident: lifetime_outer#0, kind: Fn(Final, FnSig { header: FnHeader { unsafety: No, asyncness: No, constness: No, ext: None }, decl: FnDecl { inputs: [Param { attrs: ThinVec(None), ty: Ty { id: NodeId(13), kind: Rptr(Some(lifetime(14: 'a)), MutTy { ty: Ty { id: NodeId(15), kind: Tup([]), span: src/lib.rs:1:30: 1:32 (#0), tokens: None }, mutbl: Not }), span: src/lib.rs:1:26: 1:32 (#0), tokens: None }, pat: Pat { id: NodeId(12), kind: Wild, span: src/lib.rs:1:23: 1:24 (#0), tokens: None }, id: NodeId(11), span: src/lib.rs:1:23: 1:32 (#0), is_placeholder: false }], output: Default(src/lib.rs:1:34: 1:34 (#0)) }, span: src/lib.rs:1:1: 1:33 (#0) }, Generics { params: [GenericParam { id: NodeId(16), ident: 'a#0, attrs: ThinVec(None), bounds: [], is_placeholder: false, kind: Lifetime }], where_clause: WhereClause { has_where_token: false, predicates: [], span: src/lib.rs:1:33: 1:33 (#0) }, span: src/lib.rs:1:18: 1:22 (#0) }, Some(Block { stmts: [Stmt { id: NodeId(4294967040), kind: Item(Item { attrs: [], id: NodeId(18), span: src/lib.rs:2:5: 2:27 (#0), vis: Visibility { kind: Inherited, span: src/lib.rs:2:5: 2:5 (#0), tokens: None }, ident: inner#0, kind: Fn(Final, FnSig { header: FnHeader { unsafety: No, asyncness: No, constness: No, ext: None }, decl: FnDecl { inputs: [Param { attrs: ThinVec(None), ty: Ty { id: NodeId(21), kind: Rptr(Some(lifetime(22: 'a)), MutTy { ty: Ty { id: NodeId(23), kind: Tup([]), span: src/lib.rs:2:21: 2:23 (#0), tokens: None }, mutbl: Not }), span: src/lib.rs:2:17: 2:23 (#0), tokens: None }, pat: Pat { id: NodeId(20), kind: Wild, span: src/lib.rs:2:14: 2:15 (#0), tokens: None }, id: NodeId(19), span: src/lib.rs:2:14: 2:23 (#0), is_placeholder: false }], output: Default(src/lib.rs:2:25: 2:25 (#0)) }, span: src/lib.rs:2:5: 2:24 (#0) }, Generics { params: [], where_clause: WhereClause { has_where_token: false, predicates: [], span: src/lib.rs:2:24: 2:24 (#0) }, span: src/lib.rs:2:13: 2:13 (#0) }, Some(Block { stmts: [], id: NodeId(24), rules: Default, span: src/lib.rs:2:25: 2:27 (#0), tokens: None })), tokens: None }), span: src/lib.rs:2:5: 2:27 (#0) }], id: NodeId(17), rules: Default, span: src/lib.rs:1:34: 3:2 (#0), tokens: None })), tokens: None }
DEBUG rustc_resolve::def_collector create_def(node_id=NodeId(10), data=ValueNs("lifetime_outer"), parent_def=DefId(0:0))
DEBUG rustc_resolve create_def: def_id_to_node_id[DefId(0:3)] <-> NodeId(10)
DEBUG rustc_resolve::def_collector create_def(node_id=NodeId(16), data=LifetimeNs("\'a"), parent_def=DefId(0:3))
DEBUG rustc_resolve create_def: def_id_to_node_id[DefId(0:4)] <-> NodeId(16)
DEBUG rustc_resolve::def_collector visit_item: Item { attrs: [], id: NodeId(18), span: src/lib.rs:2:5: 2:27 (#0), vis: Visibility { kind: Inherited, span: src/lib.rs:2:5: 2:5 (#0), tokens: None }, ident: inner#0, kind: Fn(Final, FnSig { header: FnHeader { unsafety: No, asyncness: No, constness: No, ext: None }, decl: FnDecl { inputs: [Param { attrs: ThinVec(None), ty: Ty { id: NodeId(21), kind: Rptr(Some(lifetime(22: 'a)), MutTy { ty: Ty { id: NodeId(23), kind: Tup([]), span: src/lib.rs:2:21: 2:23 (#0), tokens: None }, mutbl: Not }), span: src/lib.rs:2:17: 2:23 (#0), tokens: None }, pat: Pat { id: NodeId(20), kind: Wild, span: src/lib.rs:2:14: 2:15 (#0), tokens: None }, id: NodeId(19), span: src/lib.rs:2:14: 2:23 (#0), is_placeholder: false }], output: Default(src/lib.rs:2:25: 2:25 (#0)) }, span: src/lib.rs:2:5: 2:24 (#0) }, Generics { params: [], where_clause: WhereClause { has_where_token: false, predicates: [], span: src/lib.rs:2:24: 2:24 (#0) }, span: src/lib.rs:2:13: 2:13 (#0) }, Some(Block { stmts: [], id: NodeId(24), rules: Default, span: src/lib.rs:2:25: 2:27 (#0), tokens: None })), tokens: None }
DEBUG rustc_resolve::def_collector create_def(node_id=NodeId(18), data=ValueNs("inner"), parent_def=DefId(0:3))
DEBUG rustc_resolve create_def: def_id_to_node_id[DefId(0:5)] <-> NodeId(18)
DEBUG rustc_resolve::build_reduced_graph build_reduced_graph_for_use_tree(parent_prefix=[], use_tree=UseTree { prefix: Path { span: src/lib.rs:1:1: 1:1 (#1), segments: [PathSegment { ident: std#1, id: NodeId(5), args: None }, PathSegment { ident: prelude#1, id: NodeId(6), args: None }, PathSegment { ident: v1#1, id: NodeId(7), args: None }], tokens: None }, kind: Glob, span: src/lib.rs:1:1: 1:1 (#1) }, nested=false)
DEBUG rustc_resolve::build_reduced_graph build_reduced_graph_for_use_tree: prefix=[Segment { ident: std#1, id: Some(NodeId(5)), has_generic_args: false }, Segment { ident: prelude#1, id: Some(NodeId(6)), has_generic_args: false }, Segment { ident: v1#1, id: Some(NodeId(7)), has_generic_args: false }]
DEBUG rustc_resolve::build_reduced_graph add_import(Import { kind: Glob { is_prelude: true, max_vis: Cell { value: Invisible } }, id: NodeId(4), root_id: NodeId(4), use_span: src/lib.rs:1:1: 1:1 (#1), use_span_with_attributes: src/lib.rs:1:1: 1:1 (#1), has_attributes: true, span: src/lib.rs:1:1: 1:1 (#1), root_span: src/lib.rs:1:1: 1:1 (#1), parent_scope: ParentScope { module: Some(Def(Mod, DefId(0:0))), expansion: ExpnId(0), macro_rules: PtrKey(Cell { value: Empty }), derives: [] }, module_path: [Segment { ident: std#1, id: Some(NodeId(5)), has_generic_args: false }, Segment { ident: prelude#1, id: Some(NodeId(6)), has_generic_args: false }, Segment { ident: v1#1, id: Some(NodeId(7)), has_generic_args: false }], imported_module: Cell { value: None }, vis: Cell { value: Restricted(DefId(0:0)) }, used: Cell { value: false } })
DEBUG rustc_resolve::imports (resolving import for module) resolving import `std::prelude::v1::...` in `???`
DEBUG rustc_resolve resolve_path(path=[Segment { ident: std#1, id: Some(NodeId(5)), has_generic_args: false }, Segment { ident: prelude#1, id: Some(NodeId(6)), has_generic_args: false }, Segment { ident: v1#1, id: Some(NodeId(7)), has_generic_args: false }], opt_ns=None, record_used=false, path_span=src/lib.rs:1:1: 1:1 (#1), crate_lint=UsePath { root_id: NodeId(4), root_span: src/lib.rs:1:1: 1:1 (#1) })
DEBUG rustc_resolve resolve_path ident 0 std#1 Some(NodeId(5))
DEBUG rustc_resolve resolve_path ident 1 prelude#1 Some(NodeId(6))
DEBUG rustc_resolve resolve_path ident 2 v1#1 Some(NodeId(7))
DEBUG rustc_resolve resolve_path(path=[Segment { ident: std#1, id: Some(NodeId(5)), has_generic_args: false }, Segment { ident: prelude#1, id: Some(NodeId(6)), has_generic_args: false }, Segment { ident: v1#1, id: Some(NodeId(7)), has_generic_args: false }], opt_ns=None, record_used=true, path_span=src/lib.rs:1:1: 1:1 (#1), crate_lint=UsePath { root_id: NodeId(4), root_span: src/lib.rs:1:1: 1:1 (#1) })
DEBUG rustc_resolve resolve_path ident 0 std#1 Some(NodeId(5))
DEBUG rustc_resolve (recording res) recording PartialRes { base_res: Def(Mod, DefId(1:0)), unresolved_segments: 0 } for 5
DEBUG rustc_resolve resolve_path ident 1 prelude#1 Some(NodeId(6))
DEBUG rustc_resolve (recording res) recording PartialRes { base_res: Def(Mod, DefId(1:15)), unresolved_segments: 0 } for 6
DEBUG rustc_resolve resolve_path ident 2 v1#1 Some(NodeId(7))
DEBUG rustc_resolve (recording res) recording PartialRes { base_res: Def(Mod, DefId(1:16)), unresolved_segments: 0 } for 7
DEBUG rustc_resolve::late (resolving item) resolving  (Use(UseTree { prefix: Path { span: src/lib.rs:1:1: 1:1 (#1), segments: [PathSegment { ident: std#1, id: NodeId(5), args: None }, PathSegment { ident: prelude#1, id: NodeId(6), args: None }, PathSegment { ident: v1#1, id: NodeId(7), args: None }], tokens: None }, kind: Glob, span: src/lib.rs:1:1: 1:1 (#1) }))
DEBUG rustc_resolve walk rib
{"reason":"compiler-message","package_id":"rust_issue 0.1.0 (path+file:///tmp/rust_issue)","target":{"kind":["lib"],"crate_types":["lib"],"name":"rust_issue","src_path":"/tmp/rust_issue/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"message":{}}
DEBUG rustc_resolve walk rib
{"reason":"compiler-message","package_id":"rust_issue 0.1.0 (path+file:///tmp/rust_issue)","target":{"kind":["lib"],"crate_types":["lib"],"name":"rust_issue","src_path":"/tmp/rust_issue/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"message":{}}
DEBUG rustc_resolve::late (resolving item) resolving std (ExternCrate(None))
DEBUG rustc_resolve::late (resolving item) resolving lifetime_outer (Fn(Final, FnSig { header: FnHeader { unsafety: No, asyncness: No, constness: No, ext: None }, decl: FnDecl { inputs: [Param { attrs: ThinVec(None), ty: Ty { id: NodeId(13), kind: Rptr(Some(lifetime(14: 'a)), MutTy { ty: Ty { id: NodeId(15), kind: Tup([]), span: src/lib.rs:1:30: 1:32 (#0), tokens: None }, mutbl: Not }), span: src/lib.rs:1:26: 1:32 (#0), tokens: None }, pat: Pat { id: NodeId(12), kind: Wild, span: src/lib.rs:1:23: 1:24 (#0), tokens: None }, id: NodeId(11), span: src/lib.rs:1:23: 1:32 (#0), is_placeholder: false }], output: Default(src/lib.rs:1:34: 1:34 (#0)) }, span: src/lib.rs:1:1: 1:33 (#0) }, Generics { params: [GenericParam { id: NodeId(16), ident: 'a#0, attrs: ThinVec(None), bounds: [], is_placeholder: false, kind: Lifetime }], where_clause: WhereClause { has_where_token: false, predicates: [], span: src/lib.rs:1:33: 1:33 (#0) }, span: src/lib.rs:1:18: 1:22 (#0) }, Some(Block { stmts: [Stmt { id: NodeId(25), kind: Item(Item { attrs: [], id: NodeId(18), span: src/lib.rs:2:5: 2:27 (#0), vis: Visibility { kind: Inherited, span: src/lib.rs:2:5: 2:5 (#0), tokens: None }, ident: inner#0, kind: Fn(Final, FnSig { header: FnHeader { unsafety: No, asyncness: No, constness: No, ext: None }, decl: FnDecl { inputs: [Param { attrs: ThinVec(None), ty: Ty { id: NodeId(21), kind: Rptr(Some(lifetime(22: 'a)), MutTy { ty: Ty { id: NodeId(23), kind: Tup([]), span: src/lib.rs:2:21: 2:23 (#0), tokens: None }, mutbl: Not }), span: src/lib.rs:2:17: 2:23 (#0), tokens: None }, pat: Pat { id: NodeId(20), kind: Wild, span: src/lib.rs:2:14: 2:15 (#0), tokens: None }, id: NodeId(19), span: src/lib.rs:2:14: 2:23 (#0), is_placeholder: false }], output: Default(src/lib.rs:2:25: 2:25 (#0)) }, span: src/lib.rs:2:5: 2:24 (#0) }, Generics { params: [], where_clause: WhereClause { has_where_token: false, predicates: [], span: src/lib.rs:2:24: 2:24 (#0) }, span: src/lib.rs:2:13: 2:13 (#0) }, Some(Block { stmts: [], id: NodeId(24), rules: Default, span: src/lib.rs:2:25: 2:27 (#0), tokens: None })), tokens: None }), span: src/lib.rs:2:5: 2:27 (#0) }], id: NodeId(17), rules: Default, span: src/lib.rs:1:34: 3:2 (#0), tokens: None })))
DEBUG rustc_resolve::late with_generic_param_rib
DEBUG rustc_resolve::late (resolving function) entering function
DEBUG rustc_resolve::late resolve_pattern pat=Pat { id: NodeId(12), kind: Wild, span: src/lib.rs:1:23: 1:24 (#0), tokens: None } node=Wild
DEBUG rustc_resolve::late (resolving function / closure) recorded parameter
DEBUG rustc_resolve::late (resolving block) entering block
DEBUG rustc_resolve::late (resolving block) found anonymous module, moving down
DEBUG rustc_resolve::late (resolving item) resolving inner (Fn(Final, FnSig { header: FnHeader { unsafety: No, asyncness: No, constness: No, ext: None }, decl: FnDecl { inputs: [Param { attrs: ThinVec(None), ty: Ty { id: NodeId(21), kind: Rptr(Some(lifetime(22: 'a)), MutTy { ty: Ty { id: NodeId(23), kind: Tup([]), span: src/lib.rs:2:21: 2:23 (#0), tokens: None }, mutbl: Not }), span: src/lib.rs:2:17: 2:23 (#0), tokens: None }, pat: Pat { id: NodeId(20), kind: Wild, span: src/lib.rs:2:14: 2:15 (#0), tokens: None }, id: NodeId(19), span: src/lib.rs:2:14: 2:23 (#0), is_placeholder: false }], output: Default(src/lib.rs:2:25: 2:25 (#0)) }, span: src/lib.rs:2:5: 2:24 (#0) }, Generics { params: [], where_clause: WhereClause { has_where_token: false, predicates: [], span: src/lib.rs:2:24: 2:24 (#0) }, span: src/lib.rs:2:13: 2:13 (#0) }, Some(Block { stmts: [], id: NodeId(24), rules: Default, span: src/lib.rs:2:25: 2:27 (#0), tokens: None })))
DEBUG rustc_resolve::late with_generic_param_rib
DEBUG rustc_resolve::late (resolving function) entering function
DEBUG rustc_resolve::late resolve_pattern pat=Pat { id: NodeId(20), kind: Wild, span: src/lib.rs:2:14: 2:15 (#0), tokens: None } node=Wild
DEBUG rustc_resolve::late (resolving function / closure) recorded parameter
DEBUG rustc_resolve::late (resolving block) entering block
DEBUG rustc_resolve::late (resolving block) leaving block
DEBUG rustc_resolve::late (resolving function) leaving function
DEBUG rustc_resolve::late (resolving block) leaving block
DEBUG rustc_resolve::late (resolving function) leaving function
DEBUG rustc_resolve::late::lifetimes insert_late_bound_lifetimes(decl=FnDecl { inputs: [Ty { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 9 }, kind: Rptr(lifetime(HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 7 }: 'a), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 8 }, kind: Tup([]), span: src/lib.rs:1:30: 1:32 (#0) }, mutbl: Not }), span: src/lib.rs:1:26: 1:32 (#0) }], output: DefaultReturn(src/lib.rs:1:34: 1:34 (#0)), c_variadic: false, implicit_self: None }, generics=Generics { params: [GenericParam { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 6 }, name: Plain('a#0), attrs: [], bounds: [], span: src/lib.rs:1:19: 1:21 (#0), pure_wrt_drop: false, kind: Lifetime { kind: Explicit } }], where_clause: WhereClause { predicates: [], span: src/lib.rs:1:33: 1:33 (#0) }, span: src/lib.rs:1:18: 1:22 (#0) })
DEBUG rustc_resolve::late::lifetimes insert_late_bound_lifetimes: constrained_by_input={Param(Plain('a#0))}
DEBUG rustc_resolve::late::lifetimes insert_late_bound_lifetimes: appears_in_where_clause={}
DEBUG rustc_resolve::late::lifetimes insert_late_bound_lifetimes: lifetime 'a#0 with id HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 6 } is late-bound
DEBUG rustc_resolve::late::lifetimes Region::late: param=GenericParam { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 6 }, name: Plain('a#0), attrs: [], bounds: [], span: src/lib.rs:1:19: 1:21 (#0), pure_wrt_drop: false, kind: Lifetime { kind: Explicit } } depth=DebruijnIndex(0) def_id=DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a) origin=ExplicitOrElided
DEBUG rustc_resolve::late::lifetimes entering scope Binder { lifetimes: {Plain('a#0): LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root }
DEBUG rustc_resolve::late::lifetimes visit_fn_like_elision: enter
DEBUG rustc_resolve::late::lifetimes entering scope Elision { elide: FreshLateAnon(Cell { value: 0 }), s: Binder { lifetimes: {Plain('a#0): LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } }
DEBUG rustc_resolve::late::lifetimes visit_ty: id=HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 9 } ty=Ty { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 9 }, kind: Rptr(lifetime(HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 7 }: 'a), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 8 }, kind: Tup([]), span: src/lib.rs:1:30: 1:32 (#0) }, mutbl: Not }), span: src/lib.rs:1:26: 1:32 (#0) }
DEBUG rustc_resolve::late::lifetimes visit_ty: ty.kind=Rptr(lifetime(HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 7 }: 'a), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 8 }, kind: Tup([]), span: src/lib.rs:1:30: 1:32 (#0) }, mutbl: Not })
DEBUG rustc_resolve::late::lifetimes visit_lifetime(lifetime_ref=lifetime(HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 7 }: 'a))
DEBUG rustc_resolve::late::lifetimes resolve_lifetime_ref(lifetime_ref=lifetime(HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 7 }: 'a))
DEBUG rustc_resolve::late::lifetimes insert_lifetime: lifetime 'a (hir_id=HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 7 }) resolved to LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided) span="src/lib.rs:1:27: 1:29"
DEBUG rustc_resolve::late::lifetimes insert_lifetime: track_lifetime_uses=true
DEBUG rustc_resolve::late::lifetimes insert_lifetime: first use of DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a)
DEBUG rustc_resolve::late::lifetimes entering scope ObjectLifetimeDefault { lifetime: Some(LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)), s: Elision { elide: FreshLateAnon(Cell { value: 0 }), s: Binder { lifetimes: {Plain('a#0): LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } } }
DEBUG rustc_resolve::late::lifetimes visit_ty: id=HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 8 } ty=Ty { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 8 }, kind: Tup([]), span: src/lib.rs:1:30: 1:32 (#0) }
DEBUG rustc_resolve::late::lifetimes visit_ty: ty.kind=Tup([])
DEBUG rustc_resolve::late::lifetimes check_uses_for_lifetimes_defined_by_scope: not in a binder scope
DEBUG rustc_resolve::late::lifetimes exiting scope ObjectLifetimeDefault { lifetime: Some(LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)), s: Elision { elide: FreshLateAnon(Cell { value: 0 }), s: Binder { lifetimes: {Plain('a#0): LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } } }
DEBUG rustc_resolve::late::lifetimes check_uses_for_lifetimes_defined_by_scope: not in a binder scope
DEBUG rustc_resolve::late::lifetimes exiting scope Elision { elide: FreshLateAnon(Cell { value: 0 }), s: Binder { lifetimes: {Plain('a#0): LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } }
DEBUG rustc_resolve::late::lifetimes entering scope Body { id: BodyId { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 5 } }, s: Binder { lifetimes: {Plain('a#0): LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } }
DEBUG rustc_resolve::late::lifetimes check_uses_for_lifetimes_defined_by_scope: not in a binder scope
DEBUG rustc_resolve::late::lifetimes exiting scope Body { id: BodyId { hir_id: HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 5 } }, s: Binder { lifetimes: {Plain('a#0): LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } }
DEBUG rustc_resolve::late::lifetimes check_uses_for_lifetimes_defined_by_scope: def_id = DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a)
DEBUG rustc_resolve::late::lifetimes check_uses_for_lifetimes_defined_by_scope: lifetimeuseset = Some(One(lifetime(HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 7 }: 'a)))
DEBUG rustc_resolve::late::lifetimes hir id first=HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 6 }
DEBUG rustc_resolve::late::lifetimes id = HirId { owner: DefId(0:3 ~ rust_issue[9fcc]::lifetime_outer), local_id: 6 } span = src/lib.rs:1:19: 1:21 (#0) name = 'a#0
DEBUG rustc_resolve::late::lifetimes exiting scope Binder { lifetimes: {Plain('a#0): LateBound(DebruijnIndex(0), DefId(0:4 ~ rust_issue[9fcc]::lifetime_outer::'a), ExplicitOrElided)}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root }
DEBUG rustc_resolve::late::lifetimes insert_late_bound_lifetimes(decl=FnDecl { inputs: [Ty { hir_id: HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 7 }, kind: Rptr(lifetime(HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 5 }: 'a), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 6 }, kind: Tup([]), span: src/lib.rs:2:21: 2:23 (#0) }, mutbl: Not }), span: src/lib.rs:2:17: 2:23 (#0) }], output: DefaultReturn(src/lib.rs:2:25: 2:25 (#0)), c_variadic: false, implicit_self: None }, generics=Generics { params: [], where_clause: WhereClause { predicates: [], span: src/lib.rs:2:24: 2:24 (#0) }, span: src/lib.rs:2:13: 2:13 (#0) })
DEBUG rustc_resolve::late::lifetimes insert_late_bound_lifetimes: constrained_by_input={Param(Plain('a#0))}
DEBUG rustc_resolve::late::lifetimes insert_late_bound_lifetimes: appears_in_where_clause={}
DEBUG rustc_resolve::late::lifetimes entering scope Binder { lifetimes: {}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root }
DEBUG rustc_resolve::late::lifetimes visit_fn_like_elision: enter
DEBUG rustc_resolve::late::lifetimes entering scope Elision { elide: FreshLateAnon(Cell { value: 0 }), s: Binder { lifetimes: {}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } }
DEBUG rustc_resolve::late::lifetimes visit_ty: id=HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 7 } ty=Ty { hir_id: HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 7 }, kind: Rptr(lifetime(HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 5 }: 'a), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 6 }, kind: Tup([]), span: src/lib.rs:2:21: 2:23 (#0) }, mutbl: Not }), span: src/lib.rs:2:17: 2:23 (#0) }
DEBUG rustc_resolve::late::lifetimes visit_ty: ty.kind=Rptr(lifetime(HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 5 }: 'a), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 6 }, kind: Tup([]), span: src/lib.rs:2:21: 2:23 (#0) }, mutbl: Not })
DEBUG rustc_resolve::late::lifetimes visit_lifetime(lifetime_ref=lifetime(HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 5 }: 'a))
DEBUG rustc_resolve::late::lifetimes resolve_lifetime_ref(lifetime_ref=lifetime(HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 5 }: 'a))
error[E0261]: use of undeclared lifetime name `'a`
 --> src/lib.rs:2:18
  |
2 |     fn inner(_: &'a ()) {}
  |             -    ^^ undeclared lifetime
  |             |
  |             help: consider introducing lifetime `'a` here: `<'a>`
  |
  = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes

DEBUG rustc_resolve::late::lifetimes entering scope ObjectLifetimeDefault { lifetime: None, s: Elision { elide: FreshLateAnon(Cell { value: 0 }), s: Binder { lifetimes: {}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } } }
DEBUG rustc_resolve::late::lifetimes visit_ty: id=HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 6 } ty=Ty { hir_id: HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 6 }, kind: Tup([]), span: src/lib.rs:2:21: 2:23 (#0) }
DEBUG rustc_resolve::late::lifetimes visit_ty: ty.kind=Tup([])
DEBUG rustc_resolve::late::lifetimes check_uses_for_lifetimes_defined_by_scope: not in a binder scope
DEBUG rustc_resolve::late::lifetimes exiting scope ObjectLifetimeDefault { lifetime: None, s: Elision { elide: FreshLateAnon(Cell { value: 0 }), s: Binder { lifetimes: {}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } } }
DEBUG rustc_resolve::late::lifetimes check_uses_for_lifetimes_defined_by_scope: not in a binder scope
DEBUG rustc_resolve::late::lifetimes exiting scope Elision { elide: FreshLateAnon(Cell { value: 0 }), s: Binder { lifetimes: {}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } }
DEBUG rustc_resolve::late::lifetimes entering scope Body { id: BodyId { hir_id: HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 4 } }, s: Binder { lifetimes: {}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } }
DEBUG rustc_resolve::late::lifetimes check_uses_for_lifetimes_defined_by_scope: not in a binder scope
DEBUG rustc_resolve::late::lifetimes exiting scope Body { id: BodyId { hir_id: HirId { owner: DefId(0:5 ~ rust_issue[9fcc]::lifetime_outer::inner), local_id: 4 } }, s: Binder { lifetimes: {}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root } }
DEBUG rustc_resolve::late::lifetimes exiting scope Binder { lifetimes: {}, next_early_index: 0, track_lifetime_uses: false, opaque_type_parent: true, s: Root }
error: aborting due to previous error

For more information about this error, try `rustc --explain E0261`.
error: could not compile `rust_issue`

Caused by:
  process didn't exit successfully: `rustc --crate-name rust_issue --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C metadata=1ba6d13940848f0a -C extra-filename=-1ba6d13940848f0a --out-dir /tmp/rust_issue/target/debug/deps -C incremental=/tmp/rust_issue/target/debug/incremental -L dependency=/tmp/rust_issue/target/debug/deps` (exit code: 1)
