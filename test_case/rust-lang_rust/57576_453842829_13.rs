\n\nOnly structs and enums are permitted to impl Send, Sync, and other opt-out\ntrait, and the struct or enum must be local to the current crate. So, for\nexample, `unsafe impl Send for Rc<Foo>` is not allowed.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/coherence/coherence-impl-trait-for-marker-trait-positive.rs","byte_start":790,"byte_end":821,"line_start":26,"line_end":26,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"unsafe impl Send for dyn Object {} //~ ERROR E0321","highlight_start":1,"highlight_end":32}],"label":"can't implement cross-crate trait with a default impl for non-struct/enum type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `(dyn Object + 'static)`\n  --> /checkout/src/test/ui/coherence/coherence-impl-trait-for-marker-trait-positive.rs:26:1\n   |\nLL | unsafe impl Send for dyn Object {} //~ ERROR E0321\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't implement cross-crate trait with a default impl for non-struct/enum type\n\n"}
[01:03:54] {"message":"cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `(dyn Object + Marker2 + 'static)`","code":{"code":"E0321","explanation":"\nA cross-crate opt-out trait was implemented on something which wasn't a struct\nor enum type. Erroneous code example:\n\n