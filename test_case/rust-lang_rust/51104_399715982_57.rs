\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/mismatched_types/cast-rfc0401.rs","byte_start":2041,"byte_end":2046,"line_start":63,"line_end":63,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"    let _ = fat_v as *const Foo; //~ ERROR the size for value values of type","highlight_start":13,"highlight_end":18}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `std::marker::Sized` is not implemented for `[u8]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for the cast to the object type `dyn Foo`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0277]: the size for value values of type `[u8]` cannot be known at compilation time\n  --> /checkout/src/test/ui/mismatched_types/cast-rfc0401.rs:63:13\n   |\nLL |     let _ = fat_v as *const Foo; //~ ERROR the size for value values of type\n   |             ^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `[u8]`\n   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n   = note: required for the cast to the object type `dyn Foo`\n\n"}
[00:48:08] {"message":"the size for value values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"\nYou tried to use a type which doesn't implement some trait in a place which\nexpected that trait. Erroneous code example:\n\n