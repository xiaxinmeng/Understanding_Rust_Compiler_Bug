plain
[00:47:43] ....................................................................................................
[00:47:46] ....................................................................................................
[00:47:49] ....................................................................................................
[00:47:52] ....................................................................................................
[00:47:55] ...F..........................i.....................................................................
[00:48:01] ....................................................................................................
[00:48:05] ...............................................................i....................................
[00:48:08] ....................................................................................................
[00:48:11] ....................................................................................................
[00:48:11] ....................................................................................................
[00:48:15] ..............i............................................................
[00:48:15] failures:
[00:48:15] 
[00:48:15] ---- [ui] ui/resolve/tuple-struct-alias.rs stdout ----
[00:48:15] diff of stderr:
[00:48:15] 
[00:48:15] 30    |
[00:48:15] 31    = note: can't use a type alias as a constructor
[00:48:15] - error: aborting due to 4 previous errors
[00:48:15] - error: aborting due to 4 previous errors
[00:48:15] + error[E0658]: tuple struct Self constructors are unstable (see issue #51994)
[00:48:15] +   --> $DIR/tuple-struct-alias.rs:16:17
[00:48:15] +    |
[00:48:15] + LL |         let s = Self(0, 1); //~ ERROR expected function
[00:48:15] +    |
[00:48:15] +    |
[00:48:15] +    = help: add #![feature(tuple_struct_self_ctor)] to the crate attributes to enable
[00:48:15] 34 
[00:48:15] - Some erro pub const I: i32 = 1;\n}\n\nfn h1() -> i32 {\n    a.I\n    //~^ ERROR expected value, found module `a`\n    // did you mean `a::I`?\n}\n