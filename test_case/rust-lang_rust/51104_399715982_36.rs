\n\nFor more information about casts, take a look at The Book:\nhttps://doc.rust-lang.org/book/first-edition/casting-between-types.html\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/mismatched_types/cast-rfc0401.rs","byte_start":1129,"byte_end":1138,"line_start":41,"line_end":41,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let _ = v as fn(); //~ ERROR non-primitive cast","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"an `as` expression can only be used to convert between primitive types. Consider using the `From` trait","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0605]: non-primitive cast: `*const u8` as `fn()`\n  --> /checkout/src/test/ui/mismatched_types/cast-rfc0401.rs:41:13\n   |\nLL |     let _ = v as fn(); //~ ERROR non-primitive cast\n   |             ^^^^^^^^^\n   |\n   = note: an `as` expression can only be used to convert between primitive types. Consider usinas *const u8; //~ ERROR non-primitive cast\n   |             ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n\n"}
[00:48:08] {"message":"casting `*const u8` as `f32` is invalid","code":{"code":"E0606","explanation":"\nAn incompatible cast was attempted.\n\nErroneous code example:\n\n