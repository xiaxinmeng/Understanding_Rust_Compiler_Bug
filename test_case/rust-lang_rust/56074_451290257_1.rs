\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/impl-trait/infinite-impl-trait-issue-38064.rs","byte_start":154,"byte_end":163,"line_start":8,"line_end":8,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"fn foo() -> impl Quux { //~ opaque type expands to a recursive type","highlight_start":13,"highlight_end":22}],"label":"expands to self-referential type","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/checkout/src/test/ui/impl-trait/infinite-impl-trait-issue-38064.rs","byte_start":154,"byte_end":163,"line_start":8,"line_end":8,"column_start":13,"column_end":22,"is_primary":false,"text":[{"text":"fn foo() -> impl Quux { //~ opaque type expands to a recursive type","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `existential type`","def_site_span":{"file_name":"/checkout/src/test/ui/impl-trait/infinite-impl-trait-issue-38064.rs","byte_start":154,"byte_end":163,"line_start":8,"line_end":8,"column_start":13,"column_end":22,"is_primary":false,"text":[{"text":"fn foo() -> impl Quux { //~ opaque type expands to a recursive type","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expanded type is `foo::Foo<bar::Bar<impl Quux>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0720]: opaque type expands to a recursive type\n  --> /checkout/src/test/ui/impl-trait/infinite-impl-trait-issue-38064.rs:8:13\n   |\nLL | fn foo() e":"/checkout/src/test/ui/impl-trait/infinite-impl-trait-issue-38064.rs","byte_start":293,"byte_end":302,"line_start":14,"line_end":14,"column_start":13,"column_end":22,"is_primary":false,"text":[{"text":"fn bar() -> impl Quux { //~ opaque type expands to a recursive type","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expanded type is `bar::Bar<foo::Foo<impl Quux>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0720]: opaque type expands to a recursive type\n  --> /checkout/src/test/ui/impl-trait/infinite-impl-trait-issue-38064.rs:14:13\n   |\nLL | fn bar() -> impl Quux { //~ opaque type expands to a recursive type\n   |             ^^^^^^^^^ expands to self-referential type\n   |\n   = note: expanded type is `bar::Bar<foo::Foo<impl Quux>>`\n\n"}
[01:03:44] {"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"error: aborting due to 2 previous errors\n\n"}
[01:03:44] {"message":"For more information about this error, try `rustc --explain E0720`.","code":null,"level":"","spans":[],"children":[],"rendered":"For more information about this error, try `rustc --explain E0720`.\n"}
[01:03:44] ------------------------------------------
[01:03:44] 
[01:03:44] thread '[ui] ui/impl-trait/infinite-impl-trait-issue-38064.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3245:9
[01:03:44] note: Run with `RUST_BACKTRACE=1` for a backtrace.
