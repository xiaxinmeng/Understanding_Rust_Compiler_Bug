\n\nIn here, `x` is created before `y` and therefore has a greater lifetime. Always\nkeep in mind that values in a scope are dropped in the opposite order-29793-small.rs","byte_start":1402,"byte_end":1403,"line_start":38,"line_end":38,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    };","highlight_start":5,"highlight_end":6}],"label":"borrowed value only lives until here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0597]: `y` does not live long enough\n  --> /checkout/src/test/ui/regions/region-borrow-params-issue-29793-small.rs:34:45\n   |\nLL |         let f = |t: bool| if t { x } else { y }; // (separate errors for `x` vs `y`)\n   |                 ---------                   ^ borrowed value does not live long enough\n   |                 |\n   |                 capture occurs here\n...\nLL |     };\n   |     - borrowed value only lives until here\n...\nLL | }\n   | - borrowed value needs to live until here\n\n"}
[00:51:24] {"message":"closure may outlive the current function, but it borrows `x`, which is owned by the current function","code":{"code":"E0373","explanation":"\nThis error occurs when an attempt is made to use data captured by a closure,\nwhen that data may no longer exist. It's most commonly seen when attempting to\nreturn a closure:\n\n