plain
2020-01-29T12:34:51.2250177Z ========================== Starting Command Output ===========================
2020-01-29T12:34:51.2251759Z [command]/bin/bash --noprofile --norc /home/vsts/work/_temp/7f0c1994-5fd7-4d2f-af10-f59bb748874a.sh
2020-01-29T12:34:51.2251793Z 
2020-01-29T12:34:51.2254164Z ##[section]Finishing: Disable git automatic line ending conversion
2020-01-29T12:34:51.2259737Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/68638/merge to s
2020-01-29T12:34:51.2261315Z Task         : Get sources
2020-01-29T12:34:51.2261392Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-01-29T12:34:51.2261427Z Version      : 1.0.0
2020-01-29T12:34:51.2261460Z Author       : Microsoft
---
2020-01-29T12:34:52.2272188Z ##[command]git remote add origin https://github.com/rust-lang/rust
2020-01-29T12:34:52.2282908Z ##[command]git config gc.auto 0
2020-01-29T12:34:52.2284933Z ##[command]git config --get-all http.https://github.com/rust-lang/rust.extraheader
2020-01-29T12:34:52.2288569Z ##[command]git config --get-all http.proxy
2020-01-29T12:34:52.2295908Z ##[command]git -c http.extraheader="AUTHORIZATION: basic ***" fetch --force --tags --prune --progress --no-recurse-submodules --depth=2 origin +refs/heads/*:refs/remotes/origin/* +refs/pull/68638/merge:refs/remotes/pull/68638/merge
---
2020-01-29T13:24:04.1589025Z .................................................................................................... 1700/9558
2020-01-29T13:24:08.6641612Z .................................................................................................... 1800/9558
2020-01-29T13:24:19.9876476Z ..........................i......................................................................... 1900/9558
2020-01-29T13:24:26.1759133Z .................................................................................................... 2000/9558
2020-01-29T13:24:38.9956838Z ...............iiiii................................................................................ 2100/9558
2020-01-29T13:24:47.8235939Z .................................................................................................... 2300/9558
2020-01-29T13:24:49.9794709Z .................................................................................................... 2400/9558
2020-01-29T13:24:54.5352104Z .................................................................................................... 2500/9558
2020-01-29T13:25:12.8517066Z .................................................................................................... 2600/9558
---
2020-01-29T13:27:31.0829733Z .................................................................................................... 4800/9558
2020-01-29T13:27:35.5980787Z ...........................................................i...............i........................ 4900/9558
2020-01-29T13:27:42.6708933Z .................................................................................................... 5000/9558
2020-01-29T13:27:49.7863339Z .................................................................................................... 5100/9558
2020-01-29T13:27:54.1278696Z ..i................................................................................................. 5200/9558
2020-01-29T13:28:03.8832288Z ...........................................................................ii.ii........i...i....... 5300/9558
2020-01-29T13:28:11.5090827Z .............i...................................................................................... 5500/9558
2020-01-29T13:28:20.3133685Z .................................................................................................... 5600/9558
2020-01-29T13:28:26.0728477Z ..............................................................i..................................... 5700/9558
2020-01-29T13:28:32.4757602Z .................................................................................................... 5800/9558
2020-01-29T13:28:32.4757602Z .................................................................................................... 5800/9558
2020-01-29T13:28:39.5384820Z .................................................................................................... 5900/9558
2020-01-29T13:28:47.6128013Z .....................................................ii...i..ii...........i......................... 6000/9558
2020-01-29T13:29:07.3605115Z .................................................................................................... 6200/9558
2020-01-29T13:29:12.5228984Z .................................................................................................... 6300/9558
2020-01-29T13:29:12.5228984Z .................................................................................................... 6300/9558
2020-01-29T13:29:16.4788710Z .................................................................................i..ii.............. 6400/9558
2020-01-29T13:29:40.2156317Z .................................................................................................... 6600/9558
2020-01-29T13:29:45.1454786Z .........................................................i.......................................... 6700/9558
2020-01-29T13:29:47.0824721Z .................................................................................................... 6800/9558
2020-01-29T13:29:49.0576890Z ........................................................i........................................... 6900/9558
---
2020-01-29T13:31:18.1609016Z .................................................................................................... 7600/9558
2020-01-29T13:31:22.9296731Z .................................................................................................... 7700/9558
2020-01-29T13:31:28.8919433Z .................................................................................................... 7800/9558
2020-01-29T13:31:38.4063079Z .................................................................................................... 7900/9558
2020-01-29T13:31:43.8646233Z ............iiiiiii.i............................................................................... 8000/9558
2020-01-29T13:31:56.7060693Z .................................................................................................... 8200/9558
2020-01-29T13:32:06.3659815Z .................................................................................................... 8300/9558
2020-01-29T13:32:18.2941485Z .................................................................................................... 8400/9558
2020-01-29T13:32:24.2885557Z .................................................................................................... 8500/9558
---
2020-01-29T13:34:31.1276946Z  finished in 6.570
2020-01-29T13:34:31.1459647Z Check compiletest suite=codegen mode=codegen (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-29T13:34:31.3008597Z 
2020-01-29T13:34:31.3009900Z running 169 tests
2020-01-29T13:34:34.0003263Z iiii......i........ii..iiii...i....i...........i............i..i..................i....i............ 100/169
2020-01-29T13:34:35.9887911Z i.i.i...iii..iiiiiiiiii.......................iii............ii......
2020-01-29T13:34:35.9890242Z 
2020-01-29T13:34:35.9895178Z  finished in 4.843
2020-01-29T13:34:36.0081250Z Check compiletest suite=codegen-units mode=codegen-units (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-29T13:34:36.1580548Z 
---
2020-01-29T13:34:37.9963068Z  finished in 1.988
2020-01-29T13:34:38.0145412Z Check compiletest suite=assembly mode=assembly (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-29T13:34:38.1585894Z 
2020-01-29T13:34:38.1590666Z running 9 tests
2020-01-29T13:34:38.1596974Z iiiiiiiii
2020-01-29T13:34:38.1597553Z 
2020-01-29T13:34:38.1606223Z  finished in 0.145
2020-01-29T13:34:38.1803443Z Check compiletest suite=incremental mode=incremental (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-29T13:34:38.3236888Z 
---
2020-01-29T13:34:56.3562783Z  finished in 18.177
2020-01-29T13:34:56.3770283Z Check compiletest suite=debuginfo mode=debuginfo (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-29T13:34:56.5306769Z 
2020-01-29T13:34:56.5307587Z running 116 tests
2020-01-29T13:35:08.6283702Z iiiii..i.....i..i...i..i.i.i..i..i..ii....i.i....ii..........iiii..........i.....i..i.......ii.i.ii. 100/116
2020-01-29T13:35:10.3101400Z ....iiii.....ii.
2020-01-29T13:35:10.3105212Z 
2020-01-29T13:35:10.3110965Z  finished in 13.934
2020-01-29T13:35:10.3117469Z Uplifting stage1 rustc (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-29T13:35:10.3117826Z Copying stage2 rustc from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)
---
2020-01-29T13:47:16.8262604Z 
2020-01-29T13:47:16.8270248Z    Doc-tests core
2020-01-29T13:47:21.3637819Z 
2020-01-29T13:47:21.3639063Z running 2467 tests
2020-01-29T13:47:30.1860374Z ......iiiii......................................................................................... 100/2467
2020-01-29T13:47:38.7101462Z ..................................................................................ii................ 200/2467
2020-01-29T13:47:58.0764315Z .................i.................................................................................. 400/2467
2020-01-29T13:47:58.0764315Z .................i.................................................................................. 400/2467
2020-01-29T13:48:06.9764413Z ..................................................................i..i..................iiii........ 500/2467
2020-01-29T13:48:22.5007211Z .................................................................................................... 700/2467
2020-01-29T13:48:30.6140354Z .................................................................................................... 800/2467
2020-01-29T13:48:38.7669250Z .................................................................................................... 900/2467
2020-01-29T13:48:46.8883266Z .................................................................................................... 1000/2467
---
2020-01-29T13:52:18.6362991Z 
2020-01-29T13:52:18.6364851Z running 1003 tests
2020-01-29T13:52:35.4815646Z i................................................................................................... 100/1003
2020-01-29T13:52:44.8497607Z .................................................................................................... 200/1003
2020-01-29T13:52:51.4149303Z ..................iii......i......i...i......i...................................................... 300/1003
2020-01-29T13:52:56.2570432Z .................................................................................................... 400/1003
2020-01-29T13:53:02.7294202Z ..........................................i..i.....................................ii............... 500/1003
2020-01-29T13:53:15.1148686Z .................................................................................................... 700/1003
2020-01-29T13:53:15.1148686Z .................................................................................................... 700/1003
2020-01-29T13:53:21.4428960Z .............................iiii................................................................... 800/1003
2020-01-29T13:53:34.4243491Z .................................................................................................... 900/1003
2020-01-29T13:53:40.9612085Z ...................................................iiii............................................. 1000/1003
2020-01-29T13:53:41.0279049Z test result: ok. 983 passed; 0 failed; 20 ignored; 0 measured; 0 filtered out
2020-01-29T13:53:41.0279445Z 
2020-01-29T13:53:41.0386962Z  finished in 158.138
2020-01-29T13:53:41.0399574Z Testing term stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
---
2020-01-29T14:09:17.5793422Z     Checking rustc-std-workspace-core v1.99.0 (/checkout/src/tools/rustc-std-workspace-core)
2020-01-29T14:09:18.9019708Z  Documenting alloc v0.0.0 (/checkout/src/liballoc)
2020-01-29T14:09:22.5169372Z     Finished release [optimized] target(s) in 23.70s
2020-01-29T14:09:22.5218251Z  Documenting core v0.0.0 (/checkout/src/libcore)
2020-01-29T14:09:34.3404372Z error: `[Vec::sort_by_key]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3420458Z    --> src/libcore/cmp.rs:446:61
2020-01-29T14:09:34.3432005Z     |
2020-01-29T14:09:34.3448106Z 446 | /// This struct is a helper to be used with functions like [`Vec::sort_by_key`] and
2020-01-29T14:09:34.3451220Z     |
2020-01-29T14:09:34.3451926Z note: lint level defined here
2020-01-29T14:09:34.3452596Z    --> src/libcore/lib.rs:64:9
2020-01-29T14:09:34.3453212Z     |
2020-01-29T14:09:34.3453212Z     |
2020-01-29T14:09:34.3454017Z 64  | #![deny(intra_doc_link_resolution_failure)] // rustdoc is run without -D warnings
2020-01-29T14:09:34.3455546Z     = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3455812Z 
2020-01-29T14:09:34.3455812Z 
2020-01-29T14:09:34.3456620Z error: `[eq]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3457003Z   --> src/libcore/cmp.rs:58:34
2020-01-29T14:09:34.3457327Z    |
2020-01-29T14:09:34.3457787Z 58 | /// PartialEq only requires the [`eq`] method to be implemented; [`ne`] is defined
2020-01-29T14:09:34.3458583Z    |
2020-01-29T14:09:34.3459021Z    = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3459169Z 
2020-01-29T14:09:34.3459540Z error: `[ne]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3459540Z error: `[ne]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3459921Z   --> src/libcore/cmp.rs:58:67
2020-01-29T14:09:34.3460244Z    |
2020-01-29T14:09:34.3460692Z 58 | /// PartialEq only requires the [`eq`] method to be implemented; [`ne`] is defined
2020-01-29T14:09:34.3461544Z    |
2020-01-29T14:09:34.3461971Z    = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3462110Z 
2020-01-29T14:09:34.3462478Z error: `[ne]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3462478Z error: `[ne]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3462849Z   --> src/libcore/cmp.rs:59:62
2020-01-29T14:09:34.3463170Z    |
2020-01-29T14:09:34.3463618Z 59 | /// in terms of it by default. Any manual implementation of [`ne`] *must* respect
2020-01-29T14:09:34.3465659Z    |
2020-01-29T14:09:34.3465982Z    = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3466046Z 
2020-01-29T14:09:34.3466046Z 
2020-01-29T14:09:34.3466303Z error: `[eq]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3466555Z   --> src/libcore/cmp.rs:60:20
2020-01-29T14:09:34.3466905Z    |
2020-01-29T14:09:34.3468031Z 60 | /// the rule that [`eq`] is a strict inverse of [`ne`]; that is, `!(a == b)` if and
2020-01-29T14:09:34.3468635Z    |
2020-01-29T14:09:34.3468949Z    = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3469008Z 
2020-01-29T14:09:34.3469265Z error: `[ne]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3469265Z error: `[ne]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3469517Z   --> src/libcore/cmp.rs:60:50
2020-01-29T14:09:34.3469733Z    |
2020-01-29T14:09:34.3470077Z 60 | /// the rule that [`eq`] is a strict inverse of [`ne`]; that is, `!(a == b)` if and
2020-01-29T14:09:34.3470690Z    |
2020-01-29T14:09:34.3471010Z    = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3471051Z 
2020-01-29T14:09:34.3471051Z 
2020-01-29T14:09:34.3471305Z error: `[cmp]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3471576Z    --> src/libcore/cmp.rs:512:49
2020-01-29T14:09:34.3471791Z     |
2020-01-29T14:09:34.3472121Z 512 | /// Then you must define an implementation for [`cmp`]. You may find it useful to use
2020-01-29T14:09:34.3472732Z     |
2020-01-29T14:09:34.3473060Z     = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3473108Z 
2020-01-29T14:09:34.3473108Z 
2020-01-29T14:09:34.3473365Z error: `[cmp]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3473619Z    --> src/libcore/cmp.rs:513:6
2020-01-29T14:09:34.3473852Z     |
2020-01-29T14:09:34.3474134Z 513 | /// [`cmp`] on your type's fields.
2020-01-29T14:09:34.3474697Z     |
2020-01-29T14:09:34.3475009Z     = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3475049Z 
2020-01-29T14:09:34.3475327Z error: `[partial_cmp]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3475327Z error: `[partial_cmp]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3475694Z    --> src/libcore/cmp.rs:693:55
2020-01-29T14:09:34.3475925Z     |
2020-01-29T14:09:34.3476279Z 693 | /// `PartialOrd` only requires implementation of the [`partial_cmp`] method, with the others
2020-01-29T14:09:34.3476899Z     |
2020-01-29T14:09:34.3477288Z     = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3477335Z 
2020-01-29T14:09:34.3477612Z error: `[partial_cmp]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3477612Z error: `[partial_cmp]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3477868Z    --> src/libcore/cmp.rs:706:49
2020-01-29T14:09:34.3478091Z     |
2020-01-29T14:09:34.3478430Z 706 | /// If your type is [`Ord`], you can implement [`partial_cmp`] by using [`cmp`]:
2020-01-29T14:09:34.3479031Z     |
2020-01-29T14:09:34.3479369Z     = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3479420Z 
2020-01-29T14:09:34.3479420Z 
2020-01-29T14:09:34.3479676Z error: `[cmp]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3479947Z    --> src/libcore/cmp.rs:706:74
2020-01-29T14:09:34.3480162Z     |
2020-01-29T14:09:34.3480494Z 706 | /// If your type is [`Ord`], you can implement [`partial_cmp`] by using [`cmp`]:
2020-01-29T14:09:34.3481131Z     |
2020-01-29T14:09:34.3481463Z     = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3481513Z 
2020-01-29T14:09:34.3481775Z error: `[partial_cmp]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3481775Z error: `[partial_cmp]` cannot be resolved, ignoring it.
2020-01-29T14:09:34.3482045Z    --> src/libcore/cmp.rs:737:41
2020-01-29T14:09:34.3482259Z     |
2020-01-29T14:09:34.3482593Z 737 | /// You may also find it useful to use [`partial_cmp`] on your type's fields. Here
2020-01-29T14:09:34.3483200Z     |
2020-01-29T14:09:34.3483530Z     = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2020-01-29T14:09:34.3483570Z 
2020-01-29T14:09:35.5207629Z error: aborting due to 12 previous errors
2020-01-29T14:09:35.5207629Z error: aborting due to 12 previous errors
2020-01-29T14:09:35.5208238Z 
2020-01-29T14:09:35.5221555Z error: Could not document `core`.
2020-01-29T14:09:35.5221679Z 
2020-01-29T14:09:35.5221835Z Caused by:
2020-01-29T14:09:35.7994461Z   process didn't exit successfully: `/checkout/obj/build/bootstrap/debug/rustdoc --edition=2018 --crate-type lib --crate-name core src/libcore/lib.rs --target x86_64-unknown-linux-gnu -o /checkout/obj/build/x86_64-unknown-linux-gnu/stage2-std/x86_64-unknown-linux-gnu/doc --error-format=json --json=diagnostic-rendered-ansi --markdown-css rust.css --markdown-no-toc --generate-redirect-pages --resource-suffix 1.42.0 --index-page /checkout/src/doc/index.md -L dependency=/checkout/obj/build/x86_64-unknown-linux-gnu/stage2-std/x86_64-unknown-linux-gnu/release/deps -L dependency=/checkout/obj/build/x86_64-unknown-linux-gnu/stage2-std/release/deps` (exit code: 1)
2020-01-29T14:09:35.7995086Z 
2020-01-29T14:09:35.7995086Z 
2020-01-29T14:09:35.7997442Z command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo" "rustdoc" "-Zconfig-profile" "--target" "x86_64-unknown-linux-gnu" "-Zbinary-dep-depinfo" "-j" "2" "--release" "--locked" "--color" "always" "--features" "panic-unwind backtrace compiler-builtins-c" "--manifest-path" "/checkout/src/libtest/Cargo.toml" "-Z" "unstable-options" "-p" "core" "--" "--markdown-css" "rust.css" "--markdown-no-toc" "--generate-redirect-pages" "--resource-suffix" "1.42.0" "--index-page" "/checkout/src/doc/index.md"
2020-01-29T14:09:35.7997722Z 
2020-01-29T14:09:35.7997784Z 
2020-01-29T14:09:35.7997897Z failed to run: /checkout/obj/build/bootstrap/debug/bootstrap test
2020-01-29T14:09:35.7997997Z Build completed unsuccessfully in 1:29:18
2020-01-29T14:09:35.7997997Z Build completed unsuccessfully in 1:29:18
2020-01-29T14:09:35.7998084Z == clock drift check ==
2020-01-29T14:09:35.7998195Z   local time: Wed Jan 29 14:09:34 UTC 2020
2020-01-29T14:09:35.7998300Z   network time: Wed, 29 Jan 2020 14:09:34 GMT
2020-01-29T14:09:35.7998388Z == end clock drift check ==
2020-01-29T14:09:35.8706600Z 
2020-01-29T14:09:35.8805817Z ##[error]Bash exited with code '1'.
2020-01-29T14:09:35.8819597Z ##[section]Finishing: Run build
2020-01-29T14:09:35.8863481Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/68638/merge to s
2020-01-29T14:09:35.8865790Z Task         : Get sources
2020-01-29T14:09:35.8865843Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-01-29T14:09:35.8865892Z Version      : 1.0.0
2020-01-29T14:09:35.8865938Z Author       : Microsoft
2020-01-29T14:09:35.8865938Z Author       : Microsoft
2020-01-29T14:09:35.8866007Z Help         : [More Information](https://go.microsoft.com/fwlink/?LinkId=798199)
2020-01-29T14:09:35.8866062Z ==============================================================================
2020-01-29T14:09:36.3082536Z Cleaning any cached credential from repository: rust-lang/rust (GitHub)
2020-01-29T14:09:36.3120722Z ##[section]Finishing: Checkout rust-lang/rust@refs/pull/68638/merge to s
2020-01-29T14:09:36.3227514Z Cleaning up task key
2020-01-29T14:09:36.3228556Z Start cleaning up orphan processes.
2020-01-29T14:09:36.3333187Z Terminate orphan process: pid (3728) (python)
2020-01-29T14:09:36.3612851Z ##[section]Finishing: Finalize Job
