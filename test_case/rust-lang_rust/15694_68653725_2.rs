rust, CookedStr), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, is_sugared_doc: true }, span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, Spanned { node: Attribute_ { id: AttrId(1039), style: AttrOuter, value: Spanned { node: MetaNameValue(doc, Spanned { node: LitStr(/// use std::mem;, CookedStr), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, is_sugared_doc: true }, span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, Spanned { node: Attribute_ { id: AttrId(1040), style: AttrOuter, value: Spanned { node: MetaNameValue(doc, Spanned { node: LitStr(///, CookedStr), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, is_sugared_doc: true }, span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, Spanned { node: Attribute_ { id: AttrId(1041), style: AttrOuter, value: Spanned { node: MetaNameValue(doc, Spanned { node: LitStr(/// let v: &[u8] = unsafe { mem::transmute("L") };, CookedStr), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, is_sugared_doc: true }, span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, Spanned { node: Attribute_ { id: AttrId(1042), style: AttrOuter, value: Spanned { node: MetaNameValue(doc, Spanned { node: LitStr(/// assert!(v == [76u8]);, CookedStr), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }), span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, is_sugared_doc: true }, span: Span { lo: BytePos(0), hi: BytePos(0), expn_id: ExpnId(4294967295) } }, Spanned { node: Attribute_ { id: AttrId(1043), style: AttrOuter, value: Spanned { node: MetaNameValue(doc, Spanned { node: LitStr(/// 