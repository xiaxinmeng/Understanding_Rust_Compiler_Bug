\n\n`#[inline]` hints the compiler whether or not to attempt to inline a method or\nfunction. By default, the compiler does a pretty good job of figuring this out\nitself, but if you feel the need for annotations, `#[inline(always)]` and\n`#[inline(never)]` can override or force the compiler's decision.\n\nIf you wish to apply this attribute to all methods in an impl, manually annotate\neach method; it is not possible to annotate the entire impl with an `#[inline]`\nattribute.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/feature-gate/issue-43106-gating-of-inline.rs","byte_start":1197,"byte_end":1208,"line_start":32,"line_end":32,"column_start":24,"column_end":35,"is_primary":false,"text":[{"text":"    #[inline = \"2100\"] type T = S;","highlight_start":24,"highlight_end":35}],"label":"not a function or closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/feature-gate/issue-43106-gating-of-inline.rs","byte_start":1178,"byte_end":1196,"line_start":32,"line_end":32,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    #[inline = \"2100\"] type T = S;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0518]: attribute should be applied to function or closure\n  --> /checkout/src/test/ui/feature-gate/issue-43106-gating-of-inline.rs:32:5\n   |\nLL |     #[inline = \"2100\"] type T = S;\n   |     ^^^^^^^^^^^^^^^^^^ ----------- not a function or closure\n\n"}
[00:50:19] {"message":"attribute should be applied to function or closure","code":{"code":"E0518","explanation":"\nThis error indicates that an `#[inline(..)]` attribute was incorrectly placed\non something other than a function or method.\n\nExamples of erroneous code:\n\n