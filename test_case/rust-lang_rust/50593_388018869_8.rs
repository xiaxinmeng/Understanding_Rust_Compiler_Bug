\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/nll/get_default.rs","byte_start":1053,"byte_end":1075,"line_start":33,"line_end":33,"column_start":17,"column_end":39,"is_primary":true,"text":[{"text":"                map.set(String::new()); // Ideally, this would not error.","highlight_start":17,"highlight_end":39}],"label":"mutable borrow occurs here","suggested_replacement":null,"expansion":null},{"file_name":"/checkout/src/test/ui/nll/get_default.rs","byte_start":938,"byte_end":941,"line_start":28,"line_end":28,"column_start":15,"column_end":18,"is_primary":false,"text":[{"text":"        match map.get() {","highlight_start":15,"highlight_end":18}],"label":"immutable borrow occurs here","suggested_replacement":null,"expansion":null}],"children":[{"message":"borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 26:1...","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/nll/get_default.rs","byte_start":879,"byte_end":1252,"line_start":26,"line_end":39,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"fn ok(map: &mut Map) -> &String {","highlight_start":1,"highlight_end":34},{"text":"    loop {","highlight_start":1,"highlight_end":11},{"text":"        match map.get() {","highlight_start":1,"highlight_end":26},{"text":"            Some(v) => {","highlight_start":1,"highlight_end":25},{"text":"                return v;","highlight_start":1,"highlight_end":26},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            None => {","highlight_start":1,"highlight_end":22},{"text":"                map.set(String::new()); // Ideally, this would not error.","highlight_start":1,"highlight_end":74},{"text":"                //~^ ERROR borrowed as immutable (Ast)","highlight_start":1,"highlight_end":55},{"text":"                //~| ERROR borrowed as immutable (Mir)","highlight_start":1,"highlight_end":55},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n  --> /checkout/src/test/ui/nll/get_default.rs:33:17\n   |\nLL |         match map.get() {\n   |               --- immutable borrow occurs here\n...\nLL |                 map.set(String::new()); // Ideally, this would not error.\n   |                 ^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 26:1...\n  --> /checkout/src/test/ui/nll/get_default.rs:26:1\n   |\nLL | / fn ok(map: &mut Map) -> &String {\nLL | |     loop {\nLL | |         match map.get() {\nLL | |             Some(v) => {\n...  |\nLL | |     }\nLL | | }\n   | |_^\n\n"}
[00:47:19] {"message":"cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)","code":{"code":"E0502","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n