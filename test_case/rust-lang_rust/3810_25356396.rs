 rust
fn main() {

    macro_rules! demo(
        ($fmt:expr, $num:expr) =>
        ( println!("demo format!({:>9s}, {:>21s}) \t=> {:s}",
                   format!("\"{:s}\"", $fmt), stringify!($num), format!($fmt, $num)) )
    )

    demo!(     "{}", 1.00);
    demo!(   "{:f}", 1.00);
    demo!(  "{:0f}", 1.00);
    demo!("{:0.0f}", 1.00);
    demo!("{:0.1f}", 1.00);
    demo!("{:0.2f}", 1.00);
    demo!(   "{:f}", 1.20);
    demo!(  "{:0f}", 1.20);
    demo!( "{:02f}", 1.20);
    demo!( "{:20f}", 1.20);
    demo!( "{:08f}", 1.20);
    demo!( "{:.3f}", 1.20);
    demo!( "{:0.f}", 1.20);
    demo!(  "{:+f}", 1.20);
    demo!( "{:.1f}", 1.20);
    demo!( "{:.2f}", 1.20);
    demo!( "{:.3f}", 1.20);
    demo!( "{:.4f}", 1.20);

    demo!( "{:.1f}", 1.24);
    demo!( "{:.2f}", 1.24);
    demo!( "{:.3f}", 1.24);
    demo!( "{:.4f}", 1.24);

    demo!( "{:.1f}", 1.25);
    demo!( "{:.2f}", 1.25);
    demo!( "{:.3f}", 1.25);
    demo!( "{:.4f}", 1.25);

    demo!( "{:.1f}", 1.26);
    demo!( "{:.2f}", 1.26);
    demo!( "{:.3f}", 1.26);
    demo!( "{:.4f}", 1.26);

    demo!(   "{:f}", 1.123456789123456789f);
    demo!( "{:.0f}", 1.123456789123456789f);
    demo!("{:0.0f}", 1.123456789123456789f);
    demo!("{:0.1f}", 1.123456789123456789f);
    demo!( "{:.1f}", 1.123456789123456789f);
    demo!("{:6.1f}", 1.123456789123456789f);
    demo!("{:6.3f}", 1.123456789123456789f);
    demo!( "{:.8f}", 1.123456789123456789f);
    demo!("{:.20f}", 1.123456789123456789f);
}
