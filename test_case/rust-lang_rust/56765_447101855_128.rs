\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/generator/yield-while-local-borrowed.rs","byte_start":1774,"byte_end":1781,"line_start":55,"line_end":55,"column_start":13,"column_end":20,"is_primary":false,"text":[{"text":"            yield();","highlight_start":13,"highlight_end":20}],"label":"possible yield occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/generator/yield-while-local-borrowed.rs","byte_start":1602,"byte_end":1604,"line_start":52,"line_end":52,"column_start":21,"column_end":23,"is_primary":true,"text":[{"text":"            let b = &a;","highlight_start":21,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0626]: borrow may still be in use when generator yields (Mir)\n  --> /checkout/src/test/ui/generator/yield-while-local-borrowed.rs:52:21\n   |\nLL |             let b = &a;\n   |                     ^^\n...\nLL |             yield();\n   |             ------- possible yield occurs here\n\n"}
[01:00:57] {"message":"borrow may still be in use when generator yields (Mir)","code":{"code":"E0626","explanation":"\nThis error occurs because a borrow in a generator persists across a\nyield point.\n\n`2","explanation":"\nThis error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nExample of erroneous code:\n\n