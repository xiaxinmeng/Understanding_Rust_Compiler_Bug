plain
2020-03-05T13:30:52.1340165Z ========================== Starting Command Output ===========================
2020-03-05T13:30:52.1343420Z [command]/bin/bash --noprofile --norc /home/vsts/work/_temp/0ee59ff0-3b99-4045-9ce2-139750f0df9d.sh
2020-03-05T13:30:52.1343696Z 
2020-03-05T13:30:52.1347859Z ##[section]Finishing: Disable git automatic line ending conversion
2020-03-05T13:30:52.1366743Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/69503/merge to s
2020-03-05T13:30:52.1369633Z Task         : Get sources
2020-03-05T13:30:52.1369931Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-03-05T13:30:52.1370155Z Version      : 1.0.0
2020-03-05T13:30:52.1370308Z Author       : Microsoft
---
2020-03-05T13:30:53.1637732Z ##[command]git remote add origin https://github.com/rust-lang/rust
2020-03-05T13:30:53.1643807Z ##[command]git config gc.auto 0
2020-03-05T13:30:53.1646643Z ##[command]git config --get-all http.https://github.com/rust-lang/rust.extraheader
2020-03-05T13:30:53.1649266Z ##[command]git config --get-all http.proxy
2020-03-05T13:30:53.1654422Z ##[command]git -c http.extraheader="AUTHORIZATION: basic ***" fetch --force --tags --prune --progress --no-recurse-submodules --depth=2 origin +refs/heads/*:refs/remotes/origin/* +refs/pull/69503/merge:refs/remotes/pull/69503/merge
---
2020-03-05T14:26:48.6920753Z .................................................................................................... 1700/9727
2020-03-05T14:26:52.8388173Z .................................................................................................... 1800/9727
2020-03-05T14:27:03.2884313Z ......................................................i............................................. 1900/9727
2020-03-05T14:27:10.3682352Z .................................................................................................... 2000/9727
2020-03-05T14:27:22.8509824Z ............................................iiiii................................................... 2100/9727
2020-03-05T14:27:32.1119988Z .................................................................................................... 2300/9727
2020-03-05T14:27:34.2183137Z .................................................................................................... 2400/9727
2020-03-05T14:27:37.5102611Z .................................................................................................... 2500/9727
2020-03-05T14:27:57.4871617Z .................................................................................................... 2600/9727
---
2020-03-05T14:30:21.7181810Z .....i...............i.............................................................................. 5000/9727
2020-03-05T14:30:30.7468968Z .................................................................................................... 5100/9727
2020-03-05T14:30:35.0573734Z ................................................i................................................... 5200/9727
2020-03-05T14:30:42.6962159Z .................................................................................................... 5300/9727
2020-03-05T14:30:49.2151616Z ...........................ii.ii........i...i....................................................... 5400/9727
2020-03-05T14:30:56.9190468Z .................................................................................................... 5600/9727
2020-03-05T14:31:05.5086652Z .................................................................................................... 5700/9727
2020-03-05T14:31:11.7544608Z ..................i................................................................................. 5800/9727
2020-03-05T14:31:16.9257772Z .................................................................................................... 5900/9727
2020-03-05T14:31:16.9257772Z .................................................................................................... 5900/9727
2020-03-05T14:31:26.9561708Z .................................................................................................... 6000/9727
2020-03-05T14:31:36.8506062Z ..........ii...i..ii...........i.................................................................... 6100/9727
2020-03-05T14:31:51.4505279Z .................................................................................................... 6300/9727
2020-03-05T14:31:57.6267322Z .................................................................................................... 6400/9727
2020-03-05T14:31:57.6267322Z .................................................................................................... 6400/9727
2020-03-05T14:32:13.5975151Z .........................................i..ii...................................................... 6500/9727
2020-03-05T14:32:35.7163753Z .................................................................................................... 6700/9727
2020-03-05T14:32:37.8129226Z .................................i.................................................................. 6800/9727
2020-03-05T14:32:39.9130837Z .................................................................................................... 6900/9727
2020-03-05T14:32:42.1140771Z ...............................................................i.................................... 7000/9727
---
2020-03-05T14:34:23.5703034Z .................................................................................................... 7700/9727
2020-03-05T14:34:28.7936689Z .................................................................................................... 7800/9727
2020-03-05T14:34:34.2523767Z .................................................................................................... 7900/9727
2020-03-05T14:34:42.4454961Z .........i.......................................................................................... 8000/9727
2020-03-05T14:34:51.2940745Z ..........................................................iiiiiiiii.i............................... 8100/9727
2020-03-05T14:35:05.5036761Z .i......i........................................................................................... 8300/9727
2020-03-05T14:35:10.6326042Z .................................................................................................... 8400/9727
2020-03-05T14:35:25.0176020Z .................................................................................................... 8500/9727
2020-03-05T14:35:33.2246385Z .................................................................................................... 8600/9727
---
2020-03-05T14:37:37.0028188Z running 82 tests
2020-03-05T14:37:43.5946629Z .....................................FFF.............................F............
2020-03-05T14:37:43.5948428Z failures:
2020-03-05T14:37:43.5948534Z 
2020-03-05T14:37:43.5949172Z ---- [mir-opt] mir-opt/inline/inline-closure-borrows-arg.rs stdout ----
2020-03-05T14:37:43.5949747Z [ERROR compiletest::runtest] Some("    let mut _4: &[closure@foo<T>::{{closure}}#0];")
2020-03-05T14:37:43.5950641Z thread '[mir-opt] mir-opt/inline/inline-closure-borrows-arg.rs' panicked at 'Did not find expected line, error: Mismatch in lines
2020-03-05T14:37:43.5951928Z Current block:     let mut _4: &[closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.5952237Z Actual Line: "    scope 1 {"
2020-03-05T14:37:43.5952477Z Expected Line: "    let mut _8: &i32;"
2020-03-05T14:37:43.5952726Z Test Name: rustc.foo.Inline.after.mir
2020-03-05T14:37:43.5953073Z ... (elided)
2020-03-05T14:37:43.5953481Z fn foo(_1: T, _2: &i32) -> i32{
2020-03-05T14:37:43.5953481Z fn foo(_1: T, _2: &i32) -> i32{
2020-03-05T14:37:43.5954041Z     debug _t => _1;
2020-03-05T14:37:43.5954215Z     debug q => _2;
2020-03-05T14:37:43.5954393Z     let mut _0: i32;
2020-03-05T14:37:43.5954644Z     let _3: [closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.5954931Z     let mut _4: &[closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.5955187Z     let mut _5: (&i32, &i32);
2020-03-05T14:37:43.5955409Z     let mut _6: &i32;
2020-03-05T14:37:43.5955602Z     let mut _7: &i32;
2020-03-05T14:37:43.5955976Z     let mut _8: &i32;
2020-03-05T14:37:43.5956182Z     let mut _9: &i32;
2020-03-05T14:37:43.5956563Z         debug x => _3;
2020-03-05T14:37:43.5956746Z         scope 2 {
2020-03-05T14:37:43.5956955Z             debug r => _8;
2020-03-05T14:37:43.5956955Z             debug r => _8;
2020-03-05T14:37:43.5957164Z             debug _s => _9;
2020-03-05T14:37:43.5957503Z     }
2020-03-05T14:37:43.5957651Z     scope 3 {
2020-03-05T14:37:43.5957839Z         debug variable => _8;
2020-03-05T14:37:43.5958016Z     }
2020-03-05T14:37:43.5958016Z     }
2020-03-05T14:37:43.5958182Z     bb0: {
2020-03-05T14:37:43.5958345Z ... (elided)
2020-03-05T14:37:43.5958580Z         _3 = [closure@foo::<T>::{{closure}}#0];
2020-03-05T14:37:43.5958833Z ... (elided)
2020-03-05T14:37:43.5958997Z         _4 = &_3;
2020-03-05T14:37:43.5959162Z ... (elided)
2020-03-05T14:37:43.5959348Z         _6 = &(*_2);
2020-03-05T14:37:43.5959518Z ... (elided)
2020-03-05T14:37:43.5959844Z         _7 = &(*_2);
2020-03-05T14:37:43.5960059Z         _5 = (move _6, move _7);
2020-03-05T14:37:43.5960289Z         _8 = move (_5.0: &i32);
2020-03-05T14:37:43.5960526Z         _9 = move (_5.1: &i32);
2020-03-05T14:37:43.5960719Z ... (elided)
2020-03-05T14:37:43.5961061Z         _0 = (*_8);
2020-03-05T14:37:43.5961219Z ... (elided)
2020-03-05T14:37:43.5961526Z     }
2020-03-05T14:37:43.5961641Z }
2020-03-05T14:37:43.5961761Z Actual:
2020-03-05T14:37:43.5962149Z fn  foo(_1: T, _2: &i32) -> i32 {
2020-03-05T14:37:43.5962149Z fn  foo(_1: T, _2: &i32) -> i32 {
2020-03-05T14:37:43.5962360Z     debug _t => _1;
2020-03-05T14:37:43.5962689Z     debug q => _2;
2020-03-05T14:37:43.5962863Z     let mut _0: i32;
2020-03-05T14:37:43.5963286Z     let _3: [closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.5963724Z     let mut _4: &[closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.5963971Z     let mut _5: (&i32, &i32);
2020-03-05T14:37:43.5964186Z     let mut _6: &i32;
2020-03-05T14:37:43.5964371Z     let mut _7: &i32;
2020-03-05T14:37:43.5964712Z         debug x => _3;
2020-03-05T14:37:43.5964858Z     }
2020-03-05T14:37:43.5964989Z     bb0: {
2020-03-05T14:37:43.5965171Z         StorageLive(_3);
2020-03-05T14:37:43.5965171Z         StorageLive(_3);
2020-03-05T14:37:43.5965401Z         _3 = [closure@foo::<T>::{{closure}}#0];
2020-03-05T14:37:43.5965630Z         StorageLive(_4);
2020-03-05T14:37:43.5965798Z         _4 = &_3;
2020-03-05T14:37:43.5965983Z         StorageLive(_5);
2020-03-05T14:37:43.5966161Z         StorageLive(_6);
2020-03-05T14:37:43.5966333Z         _6 = &(*_2);
2020-03-05T14:37:43.5966633Z         StorageLive(_7);
2020-03-05T14:37:43.5966819Z         _7 = &(*_2);
2020-03-05T14:37:43.5967065Z         _5 = (move _6, move _7);
2020-03-05T14:37:43.5967876Z         _0 = const <[closure@foo<T>::{{closure}}#0] as std::ops::Fn<(&i32, &i32)>>::call(move _4, move _5) -> bb1;
2020-03-05T14:37:43.5968318Z     bb1: {
2020-03-05T14:37:43.5968491Z         StorageDead(_7);
2020-03-05T14:37:43.5968664Z         StorageDead(_6);
2020-03-05T14:37:43.5968835Z         StorageDead(_5);
2020-03-05T14:37:43.5968835Z         StorageDead(_5);
2020-03-05T14:37:43.5969023Z         StorageDead(_4);
2020-03-05T14:37:43.5969195Z         StorageDead(_3);
2020-03-05T14:37:43.5969354Z         return;
2020-03-05T14:37:43.5969484Z     }
2020-03-05T14:37:43.5969851Z }', src/tools/compiletest/src/runtest.rs:3133:13
2020-03-05T14:37:43.5970156Z note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
2020-03-05T14:37:43.5970362Z 
2020-03-05T14:37:43.5970750Z ---- [mir-opt] mir-opt/inline/inline-closure-captures.rs stdout ----
2020-03-05T14:37:43.5971300Z [ERROR compiletest::runtest] Some("    let mut _6: &[closure@foo<T>::{{closure}}#0 q:&i32, t:&T];")
2020-03-05T14:37:43.5971997Z thread '[mir-opt] mir-opt/inline/inline-closure-captures.rs' panicked at 'Did not find expected line, error: Mismatch in lines
2020-03-05T14:37:43.5972469Z Current block:     let mut _6: &[closure@foo<T>::{{closure}}#0 q:&i32, t:&T];
2020-03-05T14:37:43.5972751Z Actual Line: "    scope 1 {"
2020-03-05T14:37:43.5972966Z Expected Line: "    let mut _11: i32;"
2020-03-05T14:37:43.5973211Z Test Name: rustc.foo.Inline.after.mir
2020-03-05T14:37:43.5973510Z ... (elided)
2020-03-05T14:37:43.5973849Z fn foo(_1: T, _2: i32) -> (i32, T){
2020-03-05T14:37:43.5974037Z     debug t => _1;
2020-03-05T14:37:43.5974189Z     debug q => _2;
2020-03-05T14:37:43.5974189Z     debug q => _2;
2020-03-05T14:37:43.5974358Z     let mut _0: (i32, T);
2020-03-05T14:37:43.5974618Z     let _3: [closure@foo<T>::{{closure}}#0 q:&i32, t:&T];
2020-03-05T14:37:43.5974855Z     let mut _4: &i32;
2020-03-05T14:37:43.5975028Z     let mut _5: &T;
2020-03-05T14:37:43.5975293Z     let mut _6: &[closure@foo<T>::{{closure}}#0 q:&i32, t:&T];
2020-03-05T14:37:43.5975544Z     let mut _7: (i32,);
2020-03-05T14:37:43.5975718Z     let mut _8: i32;
2020-03-05T14:37:43.5975908Z     let mut _11: i32;
2020-03-05T14:37:43.5976214Z         debug x => _3;
2020-03-05T14:37:43.5976385Z         scope 2 {
2020-03-05T14:37:43.5976385Z         scope 2 {
2020-03-05T14:37:43.5976550Z             debug _q => _11;
2020-03-05T14:37:43.5976769Z             debug q => (*((*_6).0: &i32));
2020-03-05T14:37:43.5977034Z             debug t => (*((*_6).1: &T));
2020-03-05T14:37:43.5977254Z             let mut _9: i32;
2020-03-05T14:37:43.5977616Z         }
2020-03-05T14:37:43.5977752Z     }
2020-03-05T14:37:43.5977876Z     bb0: {
2020-03-05T14:37:43.5978010Z ... (elided)
2020-03-05T14:37:43.5978010Z ... (elided)
2020-03-05T14:37:43.5978167Z         _4 = &_2;
2020-03-05T14:37:43.5978307Z ... (elided)
2020-03-05T14:37:43.5978450Z         _5 = &_1;
2020-03-05T14:37:43.5978725Z         _3 = [closure@foo::<T>::{{closure}}#0] { q: move _4, t: move _5 };
2020-03-05T14:37:43.5978973Z ... (elided)
2020-03-05T14:37:43.5979112Z         _6 = &_3;
2020-03-05T14:37:43.5979268Z ... (elided)
2020-03-05T14:37:43.5979401Z ... (elided)
2020-03-05T14:37:43.5979539Z         _8 = _2;
2020-03-05T14:37:43.5979695Z         _7 = (move _8,);
2020-03-05T14:37:43.5979908Z         _11 = move (_7.0: i32);
2020-03-05T14:37:43.5980079Z ... (elided)
2020-03-05T14:37:43.5980251Z         _9 = (*((*_6).0: &i32));
2020-03-05T14:37:43.5980439Z ... (elided)
2020-03-05T14:37:43.5980608Z         _10 = (*((*_6).1: &T));
2020-03-05T14:37:43.5980811Z         (_0.0: i32) = move _9;
2020-03-05T14:37:43.5981023Z         (_0.1: T) = move _10;
2020-03-05T14:37:43.5981187Z ... (elided)
2020-03-05T14:37:43.5981450Z     }
2020-03-05T14:37:43.5981573Z }
2020-03-05T14:37:43.5981681Z Actual:
2020-03-05T14:37:43.5982030Z fn  foo(_1: T, _2: i32) -> (i32, T) {
2020-03-05T14:37:43.5982030Z fn  foo(_1: T, _2: i32) -> (i32, T) {
2020-03-05T14:37:43.5982315Z     debug t => _1;
2020-03-05T14:37:43.5982474Z     debug q => _2;
2020-03-05T14:37:43.5982692Z     let mut _0: (i32, T);
2020-03-05T14:37:43.5982955Z     let _3: [closure@foo<T>::{{closure}}#0 q:&i32, t:&T];
2020-03-05T14:37:43.5983373Z     let mut _4: &i32;
2020-03-05T14:37:43.5983548Z     let mut _5: &T;
2020-03-05T14:37:43.5983816Z     let mut _6: &[closure@foo<T>::{{closure}}#0 q:&i32, t:&T];
2020-03-05T14:37:43.5984072Z     let mut _7: (i32,);
2020-03-05T14:37:43.5984253Z     let mut _8: i32;
2020-03-05T14:37:43.5984583Z         debug x => _3;
2020-03-05T14:37:43.5984725Z     }
2020-03-05T14:37:43.5984852Z     bb0: {
2020-03-05T14:37:43.5985026Z         StorageLive(_3);
2020-03-05T14:37:43.5985026Z         StorageLive(_3);
2020-03-05T14:37:43.5985200Z         StorageLive(_4);
2020-03-05T14:37:43.5985360Z         _4 = &_2;
2020-03-05T14:37:43.5985540Z         StorageLive(_5);
2020-03-05T14:37:43.5985702Z         _5 = &_1;
2020-03-05T14:37:43.5985969Z         _3 = [closure@foo::<T>::{{closure}}#0] { q: move _4, t: move _5 };
2020-03-05T14:37:43.5986257Z         StorageDead(_5);
2020-03-05T14:37:43.5986433Z         StorageDead(_4);
2020-03-05T14:37:43.5986605Z         StorageLive(_6);
2020-03-05T14:37:43.5986782Z         _6 = &_3;
2020-03-05T14:37:43.5986944Z         StorageLive(_7);
2020-03-05T14:37:43.5987116Z         StorageLive(_8);
2020-03-05T14:37:43.5987275Z         _8 = _2;
2020-03-05T14:37:43.5987454Z         _7 = (move _8,);
2020-03-05T14:37:43.5988219Z         _0 = const <[closure@foo<T>::{{closure}}#0 q:&i32, t:&T] as std::ops::Fn<(i32,)>>::call(move _6, move _7) -> bb1;
2020-03-05T14:37:43.5988679Z     bb1: {
2020-03-05T14:37:43.5988830Z         StorageDead(_8);
2020-03-05T14:37:43.5989175Z         StorageDead(_7);
2020-03-05T14:37:43.5989365Z         StorageDead(_6);
2020-03-05T14:37:43.5989365Z         StorageDead(_6);
2020-03-05T14:37:43.5989537Z         StorageDead(_3);
2020-03-05T14:37:43.5989695Z         return;
2020-03-05T14:37:43.5989842Z     }
2020-03-05T14:37:43.5990195Z }', src/tools/compiletest/src/runtest.rs:3133:13
2020-03-05T14:37:43.5990365Z 
2020-03-05T14:37:43.5990727Z ---- [mir-opt] mir-opt/inline/inline-closure.rs stdout ----
2020-03-05T14:37:43.5991546Z [ERROR compiletest::runtest] Some("    let mut _4: &[closure@foo<T>::{{closure}}#0];")
2020-03-05T14:37:43.5992319Z thread '[mir-opt] mir-opt/inline/inline-closure.rs' panicked at 'Did not find expected line, error: Mismatch in lines
2020-03-05T14:37:43.5992894Z Current block:     let mut _4: &[closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.5993168Z Actual Line: "    scope 1 {"
2020-03-05T14:37:43.5993381Z Expected Line: "    let mut _8: i32;"
2020-03-05T14:37:43.5993604Z Test Name: rustc.foo.Inline.after.mir
2020-03-05T14:37:43.5993919Z ... (elided)
2020-03-05T14:37:43.5994233Z fn foo(_1: T, _2: i32) -> i32{
2020-03-05T14:37:43.5994233Z fn foo(_1: T, _2: i32) -> i32{
2020-03-05T14:37:43.5994432Z     debug _t => _1;
2020-03-05T14:37:43.5994586Z     debug q => _2;
2020-03-05T14:37:43.5994747Z     let mut _0: i32;
2020-03-05T14:37:43.5995159Z     let _3: [closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.5996638Z     let mut _4: &[closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.5996951Z     let mut _5: (i32, i32);
2020-03-05T14:37:43.5997174Z     let mut _6: i32;
2020-03-05T14:37:43.5997405Z     let mut _7: i32;
2020-03-05T14:37:43.5997613Z     let mut _8: i32;
2020-03-05T14:37:43.5997821Z     let mut _9: i32;
2020-03-05T14:37:43.5998210Z         debug x => _3;
2020-03-05T14:37:43.5998402Z         scope 2 {
2020-03-05T14:37:43.5998402Z         scope 2 {
2020-03-05T14:37:43.5998619Z             debug _t => _8;
2020-03-05T14:37:43.5998837Z             debug _q => _9;
2020-03-05T14:37:43.5999341Z     }
2020-03-05T14:37:43.5999479Z     bb0: {
2020-03-05T14:37:43.5999785Z ... (elided)
2020-03-05T14:37:43.5999785Z ... (elided)
2020-03-05T14:37:43.6000157Z         _3 = [closure@foo::<T>::{{closure}}#0];
2020-03-05T14:37:43.6000378Z ... (elided)
2020-03-05T14:37:43.6000677Z         _4 = &_3;
2020-03-05T14:37:43.6000818Z ... (elided)
2020-03-05T14:37:43.6001096Z         _6 = _2;
2020-03-05T14:37:43.6001249Z ... (elided)
2020-03-05T14:37:43.6001452Z         _7 = _2;
2020-03-05T14:37:43.6001638Z         _5 = (move _6, move _7);
2020-03-05T14:37:43.6001837Z         _8 = move (_5.0: i32);
2020-03-05T14:37:43.6002042Z         _9 = move (_5.1: i32);
2020-03-05T14:37:43.6002214Z         _0 = _8;
2020-03-05T14:37:43.6002370Z ... (elided)
2020-03-05T14:37:43.6002632Z     }
2020-03-05T14:37:43.6002764Z Actual:
2020-03-05T14:37:43.6004649Z fn  foo(_1: T, _2: i32) -> i32 {
2020-03-05T14:37:43.6004649Z fn  foo(_1: T, _2: i32) -> i32 {
2020-03-05T14:37:43.6004852Z     debug _t => _1;
2020-03-05T14:37:43.6005793Z     debug q => _2;
2020-03-05T14:37:43.6005966Z     let mut _0: i32;
2020-03-05T14:37:43.6006556Z     let _3: [closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.6006896Z     let mut _4: &[closure@foo<T>::{{closure}}#0];
2020-03-05T14:37:43.6007180Z     let mut _5: (i32, i32);
2020-03-05T14:37:43.6007403Z     let mut _6: i32;
2020-03-05T14:37:43.6007613Z     let mut _7: i32;
2020-03-05T14:37:43.6008019Z         debug x => _3;
2020-03-05T14:37:43.6008193Z     }
2020-03-05T14:37:43.6008362Z     bb0: {
2020-03-05T14:37:43.6008549Z         StorageLive(_3);
2020-03-05T14:37:43.6008549Z         StorageLive(_3);
2020-03-05T14:37:43.6008812Z         _3 = [closure@foo::<T>::{{closure}}#0];
2020-03-05T14:37:43.6009096Z         StorageLive(_4);
2020-03-05T14:37:43.6009290Z         _4 = &_3;
2020-03-05T14:37:43.6009483Z         StorageLive(_5);
2020-03-05T14:37:43.6009709Z         StorageLive(_6);
2020-03-05T14:37:43.6009901Z         _6 = _2;
2020-03-05T14:37:43.6010249Z         StorageLive(_7);
2020-03-05T14:37:43.6010582Z         _7 = _2;
2020-03-05T14:37:43.6010948Z         _5 = (move _6, move _7);
2020-03-05T14:37:43.6011782Z         _0 = const <[closure@foo<T>::{{closure}}#0] as std::ops::Fn<(i32, i32)>>::call(move _4, move _5) -> bb1;
2020-03-05T14:37:43.6012240Z     bb1: {
2020-03-05T14:37:43.6012553Z         StorageDead(_7);
2020-03-05T14:37:43.6012726Z         StorageDead(_6);
2020-03-05T14:37:43.6013084Z         StorageDead(_5);
2020-03-05T14:37:43.6013084Z         StorageDead(_5);
2020-03-05T14:37:43.6013259Z         StorageDead(_4);
2020-03-05T14:37:43.6013432Z         StorageDead(_3);
2020-03-05T14:37:43.6013609Z         return;
2020-03-05T14:37:43.6013918Z     }
2020-03-05T14:37:43.6014307Z }', src/tools/compiletest/src/runtest.rs:3133:13
2020-03-05T14:37:43.6014477Z 
2020-03-05T14:37:43.6014828Z ---- [mir-opt] mir-opt/simplify_try.rs stdout ----
2020-03-05T14:37:43.6015249Z [ERROR compiletest::runtest] None
2020-03-05T14:37:43.6016191Z thread '[mir-opt] mir-opt/simplify_try.rs' panicked at 'Did not find expected line, error: Mismatch in lines
2020-03-05T14:37:43.6016571Z Current block: None
2020-03-05T14:37:43.6016803Z Actual Line: "                debug v => _8;"
2020-03-05T14:37:43.6017083Z Expected Line: "                debug t => _6;"
2020-03-05T14:37:43.6017404Z Test Name: rustc.try_identity.SimplifyArmIdentity.before.mir
2020-03-05T14:37:43.6017782Z ... (elided)
2020-03-05T14:37:43.6017782Z ... (elided)
2020-03-05T14:37:43.6018330Z fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {
2020-03-05T14:37:43.6018657Z     debug x => _1;
2020-03-05T14:37:43.6019059Z     let mut _0: std::result::Result<u32, i32>;
2020-03-05T14:37:43.6019304Z     let _2: u32;
2020-03-05T14:37:43.6019533Z     let mut _3: std::result::Result<u32, i32>;
2020-03-05T14:37:43.6020147Z     let mut _4: std::result::Result<u32, i32>;
2020-03-05T14:37:43.6020650Z     let mut _5: isize;
2020-03-05T14:37:43.6020839Z     let _6: i32;
2020-03-05T14:37:43.6021022Z     let mut _7: !;
2020-03-05T14:37:43.6021213Z     let mut _8: i32;
2020-03-05T14:37:43.6021424Z     let mut _9: i32;
2020-03-05T14:37:43.6021611Z     let _10: u32;
2020-03-05T14:37:43.6021800Z     let mut _11: u32;
2020-03-05T14:37:43.6022168Z         debug y => _10;
2020-03-05T14:37:43.6022326Z     }
2020-03-05T14:37:43.6022485Z     scope 2 {
2020-03-05T14:37:43.6022660Z         debug err => _6;
---
2020-03-05T14:37:43.6025848Z     }
2020-03-05T14:37:43.6026175Z     scope 6 {
2020-03-05T14:37:43.6026339Z         debug self => _1;
2020-03-05T14:37:43.6026490Z     }
2020-03-05T14:37:43.6026637Z     bb0: {
2020-03-05T14:37:43.6026809Z         _5 = discriminant(_1);
2020-03-05T14:37:43.6027302Z         switchInt(move _5) -> [0isize: bb1, otherwise: bb2];
2020-03-05T14:37:43.6027692Z     bb1: {
2020-03-05T14:37:43.6027692Z     bb1: {
2020-03-05T14:37:43.6027888Z         _10 = ((_1 as Ok).0: u32);
2020-03-05T14:37:43.6028132Z         ((_0 as Ok).0: u32) = move _10;
2020-03-05T14:37:43.6028372Z         discriminant(_0) = 0;
2020-03-05T14:37:43.6028694Z         goto -> bb3;
2020-03-05T14:37:43.6028990Z     bb2: {
2020-03-05T14:37:43.6028990Z     bb2: {
2020-03-05T14:37:43.6029335Z         _6 = ((_1 as Err).0: i32);
2020-03-05T14:37:43.6029720Z         ((_0 as Err).0: i32) = move _6;
2020-03-05T14:37:43.6029945Z         discriminant(_0) = 1;
2020-03-05T14:37:43.6030243Z         goto -> bb3;
2020-03-05T14:37:43.6030519Z     bb3: {
2020-03-05T14:37:43.6030658Z         return;
2020-03-05T14:37:43.6030785Z     }
2020-03-05T14:37:43.6031912Z }
2020-03-05T14:37:43.6031912Z }
2020-03-05T14:37:43.6032045Z Actual:
2020-03-05T14:37:43.6032554Z fn  try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {
2020-03-05T14:37:43.6033013Z     debug x => _1;
2020-03-05T14:37:43.6033252Z     let mut _0: std::result::Result<u32, i32>;
2020-03-05T14:37:43.6033470Z     let _2: u32;
2020-03-05T14:37:43.6033685Z     let mut _3: std::result::Result<u32, i32>;
2020-03-05T14:37:43.6033970Z     let mut _4: std::result::Result<u32, i32>;
2020-03-05T14:37:43.6034196Z     let mut _5: isize;
2020-03-05T14:37:43.6034365Z     let _6: i32;
2020-03-05T14:37:43.6034548Z     let mut _7: !;
2020-03-05T14:37:43.6034722Z     let mut _8: i32;
2020-03-05T14:37:43.6034897Z     let mut _9: i32;
2020-03-05T14:37:43.6035067Z     let _10: u32;
2020-03-05T14:37:43.6035259Z     let mut _11: u32;
2020-03-05T14:37:43.6035576Z         debug y => _10;
2020-03-05T14:37:43.6035737Z     }
2020-03-05T14:37:43.6035866Z     scope 2 {
2020-03-05T14:37:43.6036024Z         debug err => _6;
---
2020-03-05T14:37:43.6041371Z     }
2020-03-05T14:37:43.6041495Z     scope 6 {
2020-03-05T14:37:43.6041664Z         debug self => _1;
2020-03-05T14:37:43.6041978Z     }
2020-03-05T14:37:43.6042106Z     bb0: {
2020-03-05T14:37:43.6042271Z         _5 = discriminant(_1);
2020-03-05T14:37:43.6042892Z         switchInt(move _5) -> [0isize: bb1, otherwise: bb2];
2020-03-05T14:37:43.6043247Z     bb1: {
2020-03-05T14:37:43.6043247Z     bb1: {
2020-03-05T14:37:43.6043453Z         _10 = ((_1 as Ok).0: u32);
2020-03-05T14:37:43.6043690Z         ((_0 as Ok).0: u32) = move _10;
2020-03-05T14:37:43.6043906Z         discriminant(_0) = 0;
2020-03-05T14:37:43.6044243Z         goto -> bb3;
2020-03-05T14:37:43.6044846Z     bb2: {
2020-03-05T14:37:43.6044846Z     bb2: {
2020-03-05T14:37:43.6045229Z         _6 = ((_1 as Err).0: i32);
2020-03-05T14:37:43.6045853Z         _8 = const <i32 as std::convert::From<i32>>::from(move _6) -> bb4;
2020-03-05T14:37:43.6046268Z     bb3: {
2020-03-05T14:37:43.6046421Z         return;
2020-03-05T14:37:43.6046560Z     }
2020-03-05T14:37:43.6046694Z     bb4: {
2020-03-05T14:37:43.6046694Z     bb4: {
2020-03-05T14:37:43.6046915Z         ((_0 as Err).0: i32) = move _8;
2020-03-05T14:37:43.6047144Z         discriminant(_0) = 1;
2020-03-05T14:37:43.6047474Z         goto -> bb3;
2020-03-05T14:37:43.6048517Z }', src/tools/compiletest/src/runtest.rs:3133:13
2020-03-05T14:37:43.6048694Z 
2020-03-05T14:37:43.6048783Z 
2020-03-05T14:37:43.6049091Z failures:
---
2020-03-05T14:37:43.6053952Z test result: FAILED. 78 passed; 4 failed; 0 ignored; 0 measured; 0 filtered out
2020-03-05T14:37:43.6054211Z 
2020-03-05T14:37:43.6054297Z 
2020-03-05T14:37:43.6054380Z 
2020-03-05T14:37:43.6058329Z command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0-tools-bin/compiletest" "--compile-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib" "--run-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib" "--rustc-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "--src-base" "/checkout/src/test/mir-opt" "--build-base" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/mir-opt" "--stage-id" "stage2-x86_64-unknown-linux-gnu" "--mode" "mir-opt" "--target" "x86_64-unknown-linux-gnu" "--host" "x86_64-unknown-linux-gnu" "--llvm-filecheck" "/usr/lib/llvm-7/bin/FileCheck" "--host-rustcflags" "-Crpath -O -Cdebuginfo=0 -Zunstable-options  -Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--target-rustcflags" "-Crpath -O -Cdebuginfo=0 -Zunstable-options  -Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--docck-python" "/usr/bin/python2.7" "--lldb-python" "/usr/bin/python2.7" "--gdb" "/usr/bin/gdb" "--quiet" "--llvm-version" "7.0.0\n" "--system-llvm" "--cc" "" "--cxx" "" "--cflags" "" "--llvm-components" "" "--adb-path" "adb" "--adb-test-dir" "/data/tmp/work" "--android-cross-path" "" "--color" "always"
2020-03-05T14:37:43.6061290Z 
2020-03-05T14:37:43.6061391Z 
2020-03-05T14:37:43.6061646Z failed to run: /checkout/obj/build/bootstrap/debug/bootstrap test
2020-03-05T14:37:43.6061973Z Build completed unsuccessfully in 1:01:10
2020-03-05T14:37:43.6061973Z Build completed unsuccessfully in 1:01:10
2020-03-05T14:37:43.6062570Z thread 'main' panicked at 'Some tests failed', src/tools/compiletest/src/main.rs:348:22
2020-03-05T14:37:43.6062911Z == clock drift check ==
2020-03-05T14:37:43.6063165Z   local time: Thu Mar  5 14:37:43 UTC 2020
2020-03-05T14:37:44.7849898Z   network time: Thu, 05 Mar 2020 14:37:43 GMT
2020-03-05T14:37:44.7850236Z == end clock drift check ==
2020-03-05T14:37:46.3729307Z 
2020-03-05T14:37:46.3796971Z ##[error]Bash exited with code '1'.
2020-03-05T14:37:46.3810189Z ##[section]Finishing: Run build
2020-03-05T14:37:46.3863287Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/69503/merge to s
2020-03-05T14:37:46.3868718Z Task         : Get sources
2020-03-05T14:37:46.3868978Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-03-05T14:37:46.3869217Z Version      : 1.0.0
2020-03-05T14:37:46.3869401Z Author       : Microsoft
2020-03-05T14:37:46.3869401Z Author       : Microsoft
2020-03-05T14:37:46.3869664Z Help         : [More Information](https://go.microsoft.com/fwlink/?LinkId=798199)
2020-03-05T14:37:46.3869967Z ==============================================================================
2020-03-05T14:37:46.6999164Z Cleaning any cached credential from repository: rust-lang/rust (GitHub)
2020-03-05T14:37:46.7046483Z ##[section]Finishing: Checkout rust-lang/rust@refs/pull/69503/merge to s
2020-03-05T14:37:46.7142721Z Cleaning up task key
2020-03-05T14:37:46.7143779Z Start cleaning up orphan processes.
2020-03-05T14:37:46.7336117Z Terminate orphan process: pid (3976) (python)
2020-03-05T14:37:46.7560995Z ##[section]Finishing: Finalize Job
