\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/coherence/coherence-impl-trait-for-marker-trait-negative.rs","byte_start":304,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"impl !Marker1 for dyn Object + Marker2 { }   //~ ERROR E0371","highlight_start":1,"highlight_end":39}],"label":"`(dyn Object + Marker2 + 'static)` automatically implements trait `Marker1`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0371]: the object type `(dyn Object + Marker2 + 'static)` automatically implements the trait `Marker1`\n  --> /checkout/src/test/ui/coherence/coherence-impl-trait-for-marker-trait-negative.rs:14:1\n   |\nLL | impl !Marker1 for dyn Object + Marker2 { }   //~ ERROR E0371\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn Object + Marker2 + 'static)` automatically implements trait `Marker1`\n\n"}
[01:03:54] {"message":"the object type `(dyn Object + Marker2 + 'static)` automatically implements the trait `Marker2`","code":{"code":"E0371","explanation":"\nWhen `Trait2` is a subtrait of `Trait1` (for example, when `Trait2` has a\ndefinition like `trait Trait2: Trait1 { ... }`), it is not allowed to implement\n`Trait1` for `Trait2`. This is because `Trait2` already implements `Trait1` by\ndefinition, so it is not useful to do this.\n\nExample:\n\n