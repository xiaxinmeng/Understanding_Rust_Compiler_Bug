plain
2020-01-18T19:43:01.9466618Z ========================== Starting Command Output ===========================
2020-01-18T19:43:01.9469695Z [command]/bin/bash --noprofile --norc /home/vsts/work/_temp/02968fe9-63ee-476a-a567-ce3e04203cd0.sh
2020-01-18T19:43:01.9469870Z 
2020-01-18T19:43:01.9472959Z ##[section]Finishing: Disable git automatic line ending conversion
2020-01-18T19:43:01.9479153Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/68133/merge to s
2020-01-18T19:43:01.9480790Z Task         : Get sources
2020-01-18T19:43:01.9480870Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-01-18T19:43:01.9480902Z Version      : 1.0.0
2020-01-18T19:43:01.9480934Z Author       : Microsoft
---
2020-01-18T19:43:02.8108684Z ##[command]git remote add origin https://github.com/rust-lang/rust
2020-01-18T19:43:02.8180262Z ##[command]git config gc.auto 0
2020-01-18T19:43:02.8252290Z ##[command]git config --get-all http.https://github.com/rust-lang/rust.extraheader
2020-01-18T19:43:02.8314404Z ##[command]git config --get-all http.proxy
2020-01-18T19:43:02.8452353Z ##[command]git -c http.extraheader="AUTHORIZATION: basic ***" fetch --force --tags --prune --progress --no-recurse-submodules --depth=2 origin +refs/heads/*:refs/remotes/origin/* +refs/pull/68133/merge:refs/remotes/pull/68133/merge
---
2020-01-18T20:37:03.4451220Z .................................................................................................... 1700/9539
2020-01-18T20:37:10.3290262Z .................................................................................................... 1800/9539
2020-01-18T20:37:20.6500158Z .................i.................................................................................. 1900/9539
2020-01-18T20:37:27.5799713Z .................................................................................................... 2000/9539
2020-01-18T20:37:42.6499947Z .......iiiii........................................................................................ 2100/9539
2020-01-18T20:37:51.6340685Z .................................................................................................... 2300/9539
2020-01-18T20:37:54.0221058Z .................................................................................................... 2400/9539
2020-01-18T20:37:59.2978973Z .................................................................................................... 2500/9539
2020-01-18T20:38:19.5892411Z .................................................................................................... 2600/9539
---
2020-01-18T20:40:55.9808778Z ....................................................i...............i............................... 4900/9539
2020-01-18T20:41:03.8162028Z .................................................................................................... 5000/9539
2020-01-18T20:41:11.4114164Z ...............................................................................................i.... 5100/9539
2020-01-18T20:41:16.4080447Z .................................................................................................... 5200/9539
2020-01-18T20:41:26.7822241Z ...................................................................ii.ii...........i................ 5300/9539
2020-01-18T20:41:35.4783582Z ....i............................................................................................... 5500/9539
2020-01-18T20:41:45.3422443Z .................................................................................................... 5600/9539
2020-01-18T20:41:51.7279289Z .....................................................i.............................................. 5700/9539
2020-01-18T20:41:58.6832985Z .................................................................................................... 5800/9539
2020-01-18T20:41:58.6832985Z .................................................................................................... 5800/9539
2020-01-18T20:42:08.4147960Z .................................................................................................... 5900/9539
2020-01-18T20:42:15.1962038Z ............................................ii...i..ii...........i.................................. 6000/9539
2020-01-18T20:42:36.7825869Z .................................................................................................... 6200/9539
2020-01-18T20:42:44.8946325Z .................................................................................................... 6300/9539
2020-01-18T20:42:44.8946325Z .................................................................................................... 6300/9539
2020-01-18T20:42:53.7605411Z ........................................................................i..ii....................... 6400/9539
2020-01-18T20:43:21.6263855Z .................................................................................................... 6600/9539
2020-01-18T20:43:24.5003760Z ................................................i................................................... 6700/9539
2020-01-18T20:43:26.6522447Z .................................................................................................... 6800/9539
2020-01-18T20:43:28.9564473Z ................................................i................................................... 6900/9539
---
2020-01-18T20:45:04.7628679Z .................................................................................................... 7500/9539
2020-01-18T20:45:09.3241806Z .................................................................................................... 7600/9539
2020-01-18T20:45:14.8378391Z .................................................................................................... 7700/9539
2020-01-18T20:45:21.2449422Z .................................................................................................... 7800/9539
2020-01-18T20:45:31.9012873Z ...................................................................................................i 7900/9539
2020-01-18T20:45:37.9368544Z iiiiii.............................................................................................. 8000/9539
2020-01-18T20:45:52.7573231Z .................................................................................................... 8200/9539
2020-01-18T20:46:04.0821148Z .................................................................................................... 8300/9539
2020-01-18T20:46:16.3218866Z .................................................................................................... 8400/9539
2020-01-18T20:46:22.0700486Z .................................................................................................... 8500/9539
---
2020-01-18T20:48:41.4505077Z  finished in 7.108
2020-01-18T20:48:41.4704210Z Check compiletest suite=codegen mode=codegen (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-18T20:48:41.6343083Z 
2020-01-18T20:48:41.6381764Z running 166 tests
2020-01-18T20:48:44.6175295Z iiii......i........ii..iiii...i....i...........i............i..i..................i....i............ 100/166
2020-01-18T20:48:46.7736330Z i.i.i...iii..iiiiiii.......................iii............ii......
2020-01-18T20:48:46.7737496Z 
2020-01-18T20:48:46.7740586Z  finished in 5.303
2020-01-18T20:48:46.7915523Z Check compiletest suite=codegen-units mode=codegen-units (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-18T20:48:47.5688947Z 
---
2020-01-18T20:48:48.8783673Z  finished in 2.086
2020-01-18T20:48:48.8971513Z Check compiletest suite=assembly mode=assembly (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-18T20:48:49.0515736Z 
2020-01-18T20:48:49.0516378Z running 9 tests
2020-01-18T20:48:49.0517211Z iiiiiiiii
2020-01-18T20:48:49.0517966Z 
2020-01-18T20:48:49.0521023Z  finished in 0.155
2020-01-18T20:48:49.0711898Z Check compiletest suite=incremental mode=incremental (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-18T20:48:49.2313194Z 
---
2020-01-18T20:49:08.6602116Z  finished in 19.589
2020-01-18T20:49:08.6797300Z Check compiletest suite=debuginfo mode=debuginfo-gdb+lldb (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-18T20:49:08.8437265Z 
2020-01-18T20:49:08.8437950Z running 116 tests
2020-01-18T20:49:33.0264102Z .iiiii..i.....i..i...i..i.i.i..i..i..ii....i.i....ii..........iiii..........i.....i..i.......ii.i.ii 100/116
2020-01-18T20:49:36.3957540Z .....iiii.....ii
2020-01-18T20:49:36.3959417Z 
2020-01-18T20:49:36.3959625Z  finished in 27.716
2020-01-18T20:49:36.3965727Z Uplifting stage1 rustc (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
2020-01-18T20:49:36.3966063Z Copying stage2 rustc from stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu / x86_64-unknown-linux-gnu)
---
2020-01-18T21:02:35.8693061Z 
2020-01-18T21:02:35.8694020Z    Doc-tests core
2020-01-18T21:02:40.5975738Z 
2020-01-18T21:02:40.5976538Z running 2443 tests
2020-01-18T21:02:50.0549031Z ......iiiii......................................................................................... 100/2443
2020-01-18T21:02:59.1824052Z ..................................................................................ii................ 200/2443
2020-01-18T21:03:20.7038090Z .................i.................................................................................. 400/2443
2020-01-18T21:03:20.7038090Z .................i.................................................................................. 400/2443
2020-01-18T21:03:30.0900915Z ..................................................................i..i..................iiii........ 500/2443
2020-01-18T21:03:46.5442111Z .................................................................................................... 700/2443
2020-01-18T21:03:55.1461657Z .................................................................................................... 800/2443
2020-01-18T21:04:03.5148304Z .................................................................................................... 900/2443
2020-01-18T21:04:11.9261854Z .................................................................................................... 1000/2443
---
2020-01-18T21:07:31.0612057Z .................................................thread '<unnamed>' panicked at 'explicit panic', src/libstd/io/stdio.rs:871:13
2020-01-18T21:07:31.0619644Z ... 300/760
2020-01-18T21:07:31.1743791Z .................................................................................................... 400/760
2020-01-18T21:07:33.2557143Z .................................................................................................... 500/760
2020-01-18T21:07:33.2966405Z .................thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', src/libstd/sync/mpsc/mod.rs:2741:22
2020-01-18T21:07:33.2985918Z ....thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: "SendError(..)"', src/libstd/sync/mpsc/mod.rs:2766:17
2020-01-18T21:07:33.2999538Z .thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError.', src/libstd/sync/mpsc/mod.rs:2778:21
2020-01-18T21:07:33.3013952Z .....thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', src/libstd/sync/mpsc/mod.rs:2645:13
2020-01-18T21:07:33.5549480Z ..........................................thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', src/libstd/sync/mpsc/mod.rs:1997:22
2020-01-18T21:07:33.5569497Z ....thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', src/libstd/sync/mpsc/mod.rs:2034:21
2020-01-18T21:07:33.5600475Z .......thread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: RecvError', src/libstd/sync/mpsc/mod.rs:1916:13
2020-01-18T21:07:33.5931824Z ................... 600/760
2020-01-18T21:07:35.6192464Z ...........................thread '<unnamed>' panicked at 'explicit panic', src/libstd/sync/mutex.rs:633:13
2020-01-18T21:07:35.6196149Z thread '<unnamed>' panicked at 'test panic in inner thread to poison mutex', src/libstd/sync/mutex.rs:587:13
---
2020-01-18T21:07:44.7989159Z 
2020-01-18T21:07:44.7989830Z running 1003 tests
2020-01-18T21:08:03.9512907Z i................................................................................................... 100/1003
2020-01-18T21:08:14.1256365Z .................................................................................................... 200/1003
2020-01-18T21:08:21.1395218Z ..................iii......i......i...i......i...................................................... 300/1003
2020-01-18T21:08:26.1128524Z .................................................................................................... 400/1003
2020-01-18T21:08:32.8753949Z ..........................................i..i.....................................ii............... 500/1003
2020-01-18T21:08:45.4977574Z .................................................................................................... 700/1003
2020-01-18T21:08:45.4977574Z .................................................................................................... 700/1003
2020-01-18T21:08:51.9578041Z .............................iiii................................................................... 800/1003
2020-01-18T21:09:06.7697913Z .................................................................................................... 900/1003
2020-01-18T21:09:13.8057154Z ...................................................iiii............................................. 1000/1003
2020-01-18T21:09:13.8872107Z test result: ok. 983 passed; 0 failed; 20 ignored; 0 measured; 0 filtered out
2020-01-18T21:09:13.8872364Z 
2020-01-18T21:09:13.8991434Z  finished in 171.174
2020-01-18T21:09:13.9010993Z Testing term stage1 (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)
---
2020-01-18T21:11:11.9043929Z 
2020-01-18T21:11:11.9931676Z error[E0425]: cannot find function `item_to_string` in this scope
2020-01-18T21:11:11.9932805Z    --> src/librustc_expand/parse/tests.rs:136:23
2020-01-18T21:11:11.9933390Z     |
2020-01-18T21:11:11.9934680Z 46  | / fn string_to_item(source_str: String) -> Option<P<ast::Item>> {
2020-01-18T21:11:11.9935455Z 47  | |     with_error_checking_parse(source_str, &sess(), |p| p.parse_item())
2020-01-18T21:11:11.9937008Z     | |_- similarly named function `string_to_item` defined here
2020-01-18T21:11:11.9937495Z ...
2020-01-18T21:11:11.9937495Z ...
2020-01-18T21:11:11.9937974Z 136 |           let vitem_s = item_to_string(&vitem);
2020-01-18T21:11:11.9938874Z     |
2020-01-18T21:11:11.9939318Z help: a function with a similar name exists
2020-01-18T21:11:11.9939713Z     |
2020-01-18T21:11:11.9939713Z     |
2020-01-18T21:11:11.9940362Z 136 |         let vitem_s = string_to_item(&vitem);
2020-01-18T21:11:11.9941329Z help: possible candidate is found in another module, you can import it into scope
2020-01-18T21:11:11.9941729Z     |
2020-01-18T21:11:11.9942220Z 1   | use rustc_ast_pretty::pprust::item_to_string;
2020-01-18T21:11:11.9942996Z     |
2020-01-18T21:11:11.9942996Z     |
2020-01-18T21:11:11.9943170Z 
2020-01-18T21:11:11.9950934Z error[E0425]: cannot find function `item_to_string` in this scope
2020-01-18T21:11:11.9951490Z    --> src/librustc_expand/parse/tests.rs:141:23
2020-01-18T21:11:11.9951958Z     |
2020-01-18T21:11:11.9952522Z 46  | / fn string_to_item(source_str: String) -> Option<P<ast::Item>> {
2020-01-18T21:11:11.9953063Z 47  | |     with_error_checking_parse(source_str, &sess(), |p| p.parse_item())
2020-01-18T21:11:11.9954065Z     | |_- similarly named function `string_to_item` defined here
2020-01-18T21:11:11.9954478Z ...
2020-01-18T21:11:11.9954478Z ...
2020-01-18T21:11:11.9954946Z 141 |           let vitem_s = item_to_string(&vitem);
2020-01-18T21:11:11.9955836Z     |
2020-01-18T21:11:11.9956587Z help: a function with a similar name exists
2020-01-18T21:11:11.9957042Z     |
2020-01-18T21:11:11.9957042Z     |
2020-01-18T21:11:11.9957519Z 141 |         let vitem_s = string_to_item(&vitem);
2020-01-18T21:11:11.9958484Z help: possible candidate is found in another module, you can import it into scope
2020-01-18T21:11:11.9959376Z     |
2020-01-18T21:11:11.9959889Z 1   | use rustc_ast_pretty::pprust::item_to_string;
2020-01-18T21:11:11.9960296Z     |
2020-01-18T21:11:11.9960296Z     |
2020-01-18T21:11:11.9960457Z 
2020-01-18T21:11:11.9966710Z error[E0425]: cannot find function `item_to_string` in this scope
2020-01-18T21:11:11.9967309Z    --> src/librustc_expand/parse/tests.rs:151:23
2020-01-18T21:11:11.9967729Z     |
2020-01-18T21:11:11.9968411Z 46  | / fn string_to_item(source_str: String) -> Option<P<ast::Item>> {
2020-01-18T21:11:11.9969025Z 47  | |     with_error_checking_parse(source_str, &sess(), |p| p.parse_item())
2020-01-18T21:11:11.9970038Z     | |_- similarly named function `string_to_item` defined here
2020-01-18T21:11:11.9970493Z ...
2020-01-18T21:11:11.9970493Z ...
2020-01-18T21:11:11.9971148Z 151 |           let vitem_s = item_to_string(&vitem);
2020-01-18T21:11:11.9972066Z     |
2020-01-18T21:11:11.9972545Z help: a function with a similar name exists
2020-01-18T21:11:11.9972974Z     |
2020-01-18T21:11:11.9972974Z     |
2020-01-18T21:11:11.9973452Z 151 |         let vitem_s = string_to_item(&vitem);
2020-01-18T21:11:11.9974425Z help: possible candidate is found in another module, you can import it into scope
2020-01-18T21:11:11.9974913Z     |
2020-01-18T21:11:11.9982147Z 1   | use rustc_ast_pretty::pprust::item_to_string;
2020-01-18T21:11:11.9982876Z     |
2020-01-18T21:11:11.9982876Z     |
2020-01-18T21:11:11.9983515Z 
2020-01-18T21:11:11.9990481Z error[E0425]: cannot find function `item_to_string` in this scope
2020-01-18T21:11:11.9990801Z    --> src/librustc_expand/parse/tests.rs:156:23
2020-01-18T21:11:11.9991059Z     |
2020-01-18T21:11:11.9991416Z 46  | / fn string_to_item(source_str: String) -> Option<P<ast::Item>> {
2020-01-18T21:11:11.9991772Z 47  | |     with_error_checking_parse(source_str, &sess(), |p| p.parse_item())
2020-01-18T21:11:11.9992434Z     | |_- similarly named function `string_to_item` defined here
2020-01-18T21:11:11.9992648Z ...
2020-01-18T21:11:11.9992648Z ...
2020-01-18T21:11:11.9992974Z 156 |           let vitem_s = item_to_string(&vitem);
2020-01-18T21:11:11.9993497Z     |
2020-01-18T21:11:11.9993770Z help: a function with a similar name exists
2020-01-18T21:11:11.9993987Z     |
2020-01-18T21:11:11.9993987Z     |
2020-01-18T21:11:11.9994275Z 156 |         let vitem_s = string_to_item(&vitem);
2020-01-18T21:11:11.9994891Z help: possible candidate is found in another module, you can import it into scope
2020-01-18T21:11:11.9995127Z     |
2020-01-18T21:11:11.9995424Z 1   | use rustc_ast_pretty::pprust::item_to_string;
2020-01-18T21:11:11.9995643Z     |
2020-01-18T21:11:11.9995643Z     |
2020-01-18T21:11:11.9995811Z 
2020-01-18T21:11:13.2265369Z error[E0277]: the size for values of type `str` cannot be known at compilation time
2020-01-18T21:11:13.2265723Z    --> <::std::macros::panic macros>:6:9
2020-01-18T21:11:13.2265997Z     |
2020-01-18T21:11:13.2266382Z 1   | / () => ({ $ crate :: panic ! ("explicit panic") }) ; ($ msg : expr) =>
2020-01-18T21:11:13.2266737Z 2   | | ({ $ crate :: rt :: begin_panic ($ msg) }) ; ($ msg : expr,) =>
2020-01-18T21:11:13.2267361Z 3   | | ({ $ crate :: panic ! ($ msg) }) ; ($ fmt : expr, $ ($ arg : tt) +) =>
2020-01-18T21:11:13.2267664Z 4   | | ({
2020-01-18T21:11:13.2267988Z 5   | |      $ crate :: rt :: begin_panic_fmt
2020-01-18T21:11:13.2268357Z 6   | |      (& $ crate :: format_args ! ($ fmt, $ ($ arg) +))
2020-01-18T21:11:13.2269575Z     | |         |
2020-01-18T21:11:13.2269944Z     | |         doesn't have a size known at compile-time
2020-01-18T21:11:13.2270263Z     | |         in this macro invocation (#3)
2020-01-18T21:11:13.2270586Z 7   | |  }) ;
2020-01-18T21:11:13.2270586Z 7   | |  }) ;
2020-01-18T21:11:13.2270903Z     | |_____- in this expansion of `panic!` (#2)
2020-01-18T21:11:13.2271131Z     | 
2020-01-18T21:11:13.2271420Z    ::: /checkout/src/libcore/fmt/mod.rs:277:20
2020-01-18T21:11:13.2271639Z     |
2020-01-18T21:11:13.2271982Z 277 |       pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
2020-01-18T21:11:13.2272386Z     |                      - required by this bound in `std::fmt::ArgumentV1::<'a>::new`
2020-01-18T21:11:13.2272891Z    ::: src/librustc_expand/mut_visit/tests.rs:26:1
2020-01-18T21:11:13.2273133Z     |
2020-01-18T21:11:13.2273133Z     |
2020-01-18T21:11:13.2273436Z 26  | / macro_rules! assert_pred {
2020-01-18T21:11:13.2273792Z 27  | |     ($pred:expr, $predname:expr, $a:expr , $b:expr) => {{
2020-01-18T21:11:13.2274113Z 28  | |         let pred_val = $pred;
2020-01-18T21:11:13.2274433Z 29  | |         let a_val = $a;
2020-01-18T21:11:13.2274700Z ...   |
2020-01-18T21:11:13.2275252Z 32  | |             panic!("expected args satisfying {}, got {} and {}", $predname, a_val, b_val);
2020-01-18T21:11:13.2276353Z 33  | |         }
2020-01-18T21:11:13.2276659Z 34  | |     }};
2020-01-18T21:11:13.2277133Z 35  | | }
2020-01-18T21:11:13.2277451Z     | |_- in this expansion of `assert_pred!` (#1)
2020-01-18T21:11:13.2277451Z     | |_- in this expansion of `assert_pred!` (#1)
2020-01-18T21:11:13.2277668Z ...
2020-01-18T21:11:13.2278005Z 45  | /         assert_pred!(
2020-01-18T21:11:13.2278323Z 46  | |             matches_codepattern,
2020-01-18T21:11:13.2278653Z 47  | |             "matches_codepattern",
2020-01-18T21:11:13.2279003Z 48  | |             pprust::to_string(|s| fake_print_crate(s, &krate)),
2020-01-18T21:11:13.2279380Z 49  | |             "#[zz]mod zz{fn zz(zz:zz,zz:zz){zz!(zz,zz,zz);zz;zz}}".to_string()
2020-01-18T21:11:13.2280032Z     | |__________- in this macro invocation (#1)
2020-01-18T21:11:13.2280288Z     | 
2020-01-18T21:11:13.2280565Z    ::: <::core::macros::builtin::format_args macros>:1:1
2020-01-18T21:11:13.2280782Z     |
2020-01-18T21:11:13.2280782Z     |
2020-01-18T21:11:13.2281129Z 1   |   ($ fmt : expr) => { { } } ; ($ fmt : expr, $ ($ args : tt) *) => { { } } ;
2020-01-18T21:11:13.2281797Z     |
2020-01-18T21:11:13.2282102Z     = help: the trait `std::marker::Sized` is not implemented for `str`
2020-01-18T21:11:13.2282486Z     = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>
2020-01-18T21:11:13.2282559Z 
2020-01-18T21:11:13.2282559Z 
2020-01-18T21:11:13.2337265Z error[E0277]: the size for values of type `str` cannot be known at compilation time
2020-01-18T21:11:13.2337591Z    --> <::std::macros::panic macros>:6:9
2020-01-18T21:11:13.2337825Z     |
2020-01-18T21:11:13.2338173Z 1   | / () => ({ $ crate :: panic ! ("explicit panic") }) ; ($ msg : expr) =>
2020-01-18T21:11:13.2338566Z 2   | | ({ $ crate :: rt :: begin_panic ($ msg) }) ; ($ msg : expr,) =>
2020-01-18T21:11:13.2339061Z 3   | | ({ $ crate :: panic ! ($ msg) }) ; ($ fmt : expr, $ ($ arg : tt) +) =>
2020-01-18T21:11:13.2339398Z 4   | | ({
2020-01-18T21:11:13.2339745Z 5   | |      $ crate :: rt :: begin_panic_fmt
2020-01-18T21:11:13.2340081Z 6   | |      (& $ crate :: format_args ! ($ fmt, $ ($ arg) +))
2020-01-18T21:11:13.2340837Z     | |         |
2020-01-18T21:11:13.2341168Z     | |         doesn't have a size known at compile-time
2020-01-18T21:11:13.2341507Z     | |         in this macro invocation (#3)
2020-01-18T21:11:13.2341796Z 7   | |  }) ;
2020-01-18T21:11:13.2341796Z 7   | |  }) ;
2020-01-18T21:11:13.2342109Z     | |_____- in this expansion of `panic!` (#2)
2020-01-18T21:11:13.2342592Z     | 
2020-01-18T21:11:13.2342869Z    ::: /checkout/src/libcore/fmt/mod.rs:277:20
2020-01-18T21:11:13.2343105Z     |
2020-01-18T21:11:13.2343476Z 277 |       pub fn new<'b, T>(x: &'b T, f: fn(&T, &mut Formatter<'_>) -> Result) -> ArgumentV1<'b> {
2020-01-18T21:11:13.2343853Z     |                      - required by this bound in `std::fmt::ArgumentV1::<'a>::new`
2020-01-18T21:11:13.2344374Z    ::: src/librustc_expand/mut_visit/tests.rs:26:1
2020-01-18T21:11:13.2344591Z     |
2020-01-18T21:11:13.2344591Z     |
2020-01-18T21:11:13.2344907Z 26  | / macro_rules! assert_pred {
2020-01-18T21:11:13.2345251Z 27  | |     ($pred:expr, $predname:expr, $a:expr , $b:expr) => {{
2020-01-18T21:11:13.2345579Z 28  | |         let pred_val = $pred;
2020-01-18T21:11:13.2346129Z 29  | |         let a_val = $a;
2020-01-18T21:11:13.2346464Z ...   |
2020-01-18T21:11:13.2346841Z 32  | |             panic!("expected args satisfying {}, got {} and {}", $predname, a_val, b_val);
2020-01-18T21:11:13.2347608Z 33  | |         }
2020-01-18T21:11:13.2347940Z 34  | |     }};
2020-01-18T21:11:13.2348231Z 35  | | }
2020-01-18T21:11:13.2348698Z     | |_- in this expansion of `assert_pred!` (#1)
2020-01-18T21:11:13.2348698Z     | |_- in this expansion of `assert_pred!` (#1)
2020-01-18T21:11:13.2348967Z ...
2020-01-18T21:11:13.2349268Z 65  | /         assert_pred!(
2020-01-18T21:11:13.2349600Z 66  | |             matches_codepattern,
2020-01-18T21:11:13.2349924Z 67  | |             "matches_codepattern",
2020-01-18T21:11:13.2350386Z 68  | |             pprust::to_string(|s| fake_print_crate(s, &krate)),
2020-01-18T21:11:13.2350784Z 69  | |             "macro_rules! zz{(zz$zz:zz$(zz $zz:zz)zz+=>(zz$(zz$zz$zz)+))}".to_string()
2020-01-18T21:11:13.2351437Z     | |__________- in this macro invocation (#1)
2020-01-18T21:11:13.2351666Z     | 
2020-01-18T21:11:13.2351939Z    ::: <::core::macros::builtin::format_args macros>:1:1
2020-01-18T21:11:13.2352182Z     |
2020-01-18T21:11:13.2352182Z     |
2020-01-18T21:11:13.2352507Z 1   |   ($ fmt : expr) => { { } } ; ($ fmt : expr, $ ($ args : tt) *) => { { } } ;
2020-01-18T21:11:13.2353189Z     |
2020-01-18T21:11:13.2353491Z     = help: the trait `std::marker::Sized` is not implemented for `str`
2020-01-18T21:11:13.2353888Z     = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>
2020-01-18T21:11:13.2358190Z 
---
2020-01-18T21:11:13.2581384Z 
2020-01-18T21:11:13.2581907Z To learn more, run the command again with --verbose.
2020-01-18T21:11:13.2597012Z 
2020-01-18T21:11:13.2597154Z 
2020-01-18T21:11:13.2597962Z command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo" "test" "-Zconfig-profile" "--target" "x86_64-unknown-linux-gnu" "-Zbinary-dep-depinfo" "-j" "2" "--release" "--locked" "--color" "always" "--features" " llvm" "--manifest-path" "/checkout/src/rustc/Cargo.toml" "-p" "rustc_expand" "--" "--quiet"
2020-01-18T21:11:13.2598125Z 
2020-01-18T21:11:13.2598156Z 
2020-01-18T21:11:13.2609647Z failed to run: /checkout/obj/build/bootstrap/debug/bootstrap test
2020-01-18T21:11:13.2610005Z Build completed unsuccessfully in 1:22:52
2020-01-18T21:11:13.2610005Z Build completed unsuccessfully in 1:22:52
2020-01-18T21:11:13.2663877Z == clock drift check ==
2020-01-18T21:11:13.2682167Z   local time: Sat Jan 18 21:11:13 UTC 2020
2020-01-18T21:11:13.3586323Z   network time: Sat, 18 Jan 2020 21:11:13 GMT
2020-01-18T21:11:13.3588750Z == end clock drift check ==
2020-01-18T21:11:13.7094204Z 
2020-01-18T21:11:13.7197146Z ##[error]Bash exited with code '1'.
2020-01-18T21:11:13.7209563Z ##[section]Finishing: Run build
2020-01-18T21:11:13.7229253Z ##[section]Starting: Checkout rust-lang/rust@refs/pull/68133/merge to s
2020-01-18T21:11:13.7231175Z Task         : Get sources
2020-01-18T21:11:13.7231223Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
2020-01-18T21:11:13.7231286Z Version      : 1.0.0
2020-01-18T21:11:13.7231327Z Author       : Microsoft
2020-01-18T21:11:13.7231327Z Author       : Microsoft
2020-01-18T21:11:13.7231521Z Help         : [More Information](https://go.microsoft.com/fwlink/?LinkId=798199)
2020-01-18T21:11:13.7231585Z ==============================================================================
2020-01-18T21:11:14.1521147Z Cleaning any cached credential from repository: rust-lang/rust (GitHub)
2020-01-18T21:11:14.1559372Z ##[section]Finishing: Checkout rust-lang/rust@refs/pull/68133/merge to s
2020-01-18T21:11:14.1672125Z Cleaning up task key
2020-01-18T21:11:14.1672923Z Start cleaning up orphan processes.
2020-01-18T21:11:14.1792443Z Terminate orphan process: pid (3480) (python)
2020-01-18T21:11:14.2014748Z ##[section]Finishing: Finalize Job
