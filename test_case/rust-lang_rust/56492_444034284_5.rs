\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/run-pass-fulldeps/auxiliary/custom_derive_partial_eq.rs","byte_start":2939,"byte_end":2944,"line_start":80,"line_end":80,"column_start":26,"column_end":31,"is_primary":true,"text":[{"text":"    trait_def.expand(cx, mitem, item, push)","highlight_start":26,"highlight_end":31}],"label":"did you mean `item`?","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0425]: cannot find value `mitem` in this scope\n  --> /checkout/src/test/run-pass-fulldeps/auxiliary/custom_derive_partial_eq.rs:80:26\n   |\nLL |     trait_def.expand(cx, mitem, item, push)\n   |                          ^^^^^ did you mean `item`?\n\n"}
[01:00:47] {"message":"function is expected to take 5 argumentsxpr> {","highlight_start":1,"highlight_end":79},{"text":"        cs_fold(true,","highlight_start":1,"highlight_end":22},{"text":"                |cx, span, subexpr, self_f, other_fs| {","highlight_start":1,"highlight_end":56},{"text":"                    let other_f = (other_fs.len(), other_fs.get(0)).1.unwrap();","highlight_start":1,"highlight_end":80},{"text":"                    let eq = cx.expr_binary(span, BinOpKind::Eq, self_f, other_f.clone());","highlight_start":1,"highlight_end":91},{"text":"                    cx.expr_binary(span, BinOpKind::And, subexpr, eq)","highlight_start":1,"highlight_end":70},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                cx.expr_bool(span, true),","highlight_start":1,"highlight_end":42},{"text":"                Box::new(|cx, span, _, _| cx.expr_bool(span, false)),","highlight_start":1,"highlight_end":70},{"text":"                cx,","highlight_start":1,"highlight_end":20},{"text":"                span,","highlight_start":1,"highlight_end":22},{"text":"                substr)","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    let inline = cx.meta_word(span, Symbol::intern(\"inline\"));","highlight_start":1,"highlight_end":63},{"text":"    let attrs = vec![cx.attribute(span, inline)];","highlight_start":1,"highlight_end":50},{"text":"    let methods = vec![MethodDef {","highlight_start":1,"highlight_end":35},{"text":"        name: \"eq\",","highlight_start":1,"highlight_end":20},{"text":"        generics: LifetimeBounds::empty(),","highlighhlight_start":1,"highlight_end":38},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    trait_def.expand(cx, mitem, item, push)","highlight_start":1,"highlight_end":44},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"takes 4 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required because of the requirements on the impl of `syntax::ext::base::MultiItemDecorator` for `for<'r, 's, 't0, 't1> fn(&'r mut syntax::ext::base::ExtCtxt<'s>, syntax::source_map::Span, &'t0 syntax::ext::base::Annotatable, &'t1 mut (dyn std::ops::FnMut(syntax::ext::base::Annotatable) + 't1)) {expand_deriving_partial_eq}`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for the cast to the object type `dyn syntax::ext::base::MultiItemDecorator + rustc_data_structures::sync::Send + rustc_data_structures::sync::Sync`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0593]: function is expected to take 5 arguments, but it takes 4 arguments\n  --> /checkout/src/test/run-pass-fulldeps/auxiliary/custom_derive_partial_eq.rs:34:50\n   |\nLL |                                     MultiDecorator(Box::new(expand_deriving_partial_eq)));\n   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected function that takes 5 arguments\n...\nLL | / fn expand_deriving_partial_eq(cx: &mut ExtCtxt, span: Span, item: &Annotatable,\nLL | |                               push: &mut FnMut(Annotatable)) {\nLL | |     // structures are equal if all fields are equal, and "expansion":null}],"children":[],"rendered":"error[E0061]: this function takes 3 parameters but 4 parameters were supplied\n  --> /checkout/src/test/run-pass-fulldeps/auxiliary/custom_derive_partial_eq.rs:80:15\n   |\nLL |     trait_def.expand(cx, mitem, item, push)\n   |               ^^^^^^ expected 3 parameters\n\n"}
[01:00:47] {"message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"error: aborting due to 3 previous errors\n\n"}
[01:00:47] {"message":"Some errors occurred: E0061, E0425, E0593.","code":null,"level":"","spans":[],"children":[],"rendered":"Some errors occurred: E0061, E0425, E0593.\n"}
[01:00:47] {"message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"","spans":[],"children":[],"rendered":"For more information about an error, try `rustc --explain E0061`.\n"}
[01:00:47] ------------------------------------------
[01:00:47] 
[01:00:47] thread '[run-pass] run-pass-fulldeps/custom-derive-partial-eq.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3282:9
[01:00:47] note: Run with `RUST_BACKTRACE=1` for a backtrace.
[01:00:47] note: Run with `RUST_BACKTRACE=1` for a backtrace.
[01:00:47] 
[01:00:47] ---- [run-pass] run-pass-fulldeps/derive-totalsum-attr.rs stdout ----
[01:00:47] 
[01:00:47] error: auxiliary build of "/checkout/src/test/run-pass-fulldeps/auxiliary/custom_derive_plugin_attr.rs" failed to compile: 
[01:00:47] status: exit code: 1
[01:00:47] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/run-pass-fulldeps/auxiliary/custom_derive_plugin_attr.rs" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "--out-dir" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-pass-fulldeps/derive-totalsum-attr/auxiliary" "-Crpath" "-O" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--crate-type" "dylib" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/run-pass-fulldeps/derive-totalsum-attr/auxiliary"
[01:00:47] ------------------------------------------
[01:00:47] 
[01:00:47] ------------------------------------------
[01:00:47] stderr:
[01:00:47] stderr:
[01:00:47] ------------------------------------------
[01:00:47] {"message":"this function takes 3 parameters but 4 parameters were supplied","code":{"code":"E0061","explanation":"\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n