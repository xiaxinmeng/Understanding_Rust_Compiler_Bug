\nfn main() {\n    let mut value = 3;\n    // By creating a new block, you can limit the scope\n    // of the reference.\n    {\n        letsrc/test/ui/borrowck/borrowck-describe-lvalue.rs","byte_start":3251,"byte_end":3252,"line_start":114,"line_end":114,"column_start":14,"column_end":15,"is_primary":false,"text":[{"text":"        drop(x);","highlight_start":14,"highlight_end":15}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0503]: cannot use `h.0` because it was mutably borrowed\n  --> /checkout/src/test/ui/borrowck/borrowck-describe-lvalue.rs:112:9\n   |\nLL |         let x = &mut h.0;\n   |                 -------- borrow of `h.0` occurs here\nLL |         h.0; //[ast]~ ERROR cannot use `h.0` because it was mutably borrowed\n   |         ^^^ use of borrowed `h.0`\nLL |              //[mir]~^ ERROR cannot use `h.0` because it was mutably borrowed\nLL |         drop(x);\n   |              - borrow later used here\n\n"}
[00:48:22] {"message":"cannot use `e.0` because it was mutably borrowed","code":{"code":"E0503","explanation":"\nA value was used after it was mutably borrowed.\n\nExample of erroneous code:\n\n