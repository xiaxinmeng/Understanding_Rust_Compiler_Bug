
Nov 28 10:49:30.564 INFO [stderr] error: recursive opaque type
Nov 28 10:49:30.564 INFO [stderr]    --> src/metadata/mod.rs:149:63
Nov 28 10:49:30.564 INFO [stderr]     |
Nov 28 10:49:30.564 INFO [stderr] 149 |     pub fn iter_over<'a>(&'a self, mis: MappingIterScheme) -> impl Iterator<Item = &'a String> {
Nov 28 10:49:30.564 INFO [stderr]     |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ resolves to self-referential type
Nov 28 10:49:30.564 INFO [stderr]     |
Nov 28 10:49:30.564 INFO [stderr]     = note: resolved type is `generator::GenConverter::gen_to_iter::It<[generator@src/metadata/mod.rs:150:23: 184:10 self:&'a metadata::MetaValue, mis:metadata::MappingIterScheme for<'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6, 't7, 't8, 't9, 't10, 't11, 't12, 't13, 't14, 't15, 't16, 't17, 't18, 't19, 't20, 't21, 't22, 't23, 't24, 't25, 't26, 't27, 't28, 't29, 't30, 't31, 't32, 't33, 't34, 't35> {&'r metadata::MetaValue, metadata::MetaValue, &'s std::string::String, (), &'t0 std::vec::Vec<metadata::MetaValue>, fn(&'t1 std::vec::Vec<metadata::MetaValue>) -> <&'t1 std::vec::Vec<metadata::MetaValue> as std::iter::IntoIterator>::IntoIter {<&'t1 std::vec::Vec<metadata::MetaValue> as std::iter::IntoIterator>::into_iter}, std::slice::Iter<'t2, metadata::MetaValue>, std::slice::Iter<'t3, metadata::MetaValue>, &'t4 metadata::MetaValue, &'t5 metadata::MetaValue, fn(std::boxed::Box<impl std::iter::Iterator>) -> <std::boxed::Box<impl std::iter::Iterator> as std::iter::IntoIterator>::IntoIter {<std::boxed::Box<impl std::iter::Iterator> as std::iter::IntoIterator>::into_iter}, fn(impl std::iter::Iterator) -> std::boxed::Box<impl std::iter::Iterator> {<std::boxed::Box<T>><impl std::iter::Iterator>::new}, &'t8 metadata::MetaValue, metadata::MappingIterScheme, impl std::iter::Iterator, std::boxed::Box<impl std::iter::Iterator>, &'t11 std::string::String, &'t12 std::string::String, std::string::String, &'t13 std::string::String, &'t14 std::collections::BTreeMap<metadata::MetaKey, metadata::MetaValue>, fn(&'t15 std::collections::BTreeMap<metadata::MetaKey, metadata::MetaValue>) -> <&'t15 std::collections::BTreeMap<metadata::MetaKey, metadata::MetaValue> as std::iter::IntoIterator>::IntoIter {<&'t15 std::collections::BTreeMap<metadata::MetaKey, metadata::MetaValue> as std::iter::IntoIterator>::into_iter}, std::collections::btree_map::Iter<'t16, metadata::MetaKey, metadata::MetaValue>, std::collections::btree_map::Iter<'t17, metadata::MetaKey, metadata::MetaValue>, (&'t18 metadata::MetaKey, &'t19 metadata::MetaValue), &'t20 metadata::MetaKey, &'t21 metadata::MetaValue, fn(std::boxed::Box<impl std::iter::Iterator>) -> <std::boxed::Box<impl std::iter::Iterator> as std::iter::IntoIterator>::IntoIter {<std::boxed::Box<impl std::iter::Iterator> as std::iter::IntoIterator>::into_iter}, fn(impl std::iter::Iterator) -> std::boxed::Box<impl std::iter::Iterator> {<std::boxed::Box<T>><impl std::iter::Iterator>::new}, metadata::MetaKey, &'t24 metadata::MetaKey, impl std::iter::Iterator, std::boxed::Box<impl std::iter::Iterator>, &'t27 std::string::String, &'t28 std::string::String, fn(std::boxed::Box<impl std::iter::Iterator>) -> <std::boxed::Box<impl std::iter::Iterator> as std::iter::IntoIterator>::IntoIter {<std::boxed::Box<impl std::iter::Iterator> as std::iter::IntoIterator>::into_iter}, fn(impl std::iter::Iterator) -> std::boxed::Box<impl std::iter::Iterator> {<std::boxed::Box<T>><impl std::iter::Iterator>::new}, &'t31 metadata::MetaValue, impl std::iter::Iterator, std::boxed::Box<impl std::iter::Iterator>, &'t34 std::string::String, &'t35 std::string::String}]>`
