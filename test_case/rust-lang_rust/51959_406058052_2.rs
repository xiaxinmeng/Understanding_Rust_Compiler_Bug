\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/issue-20831-debruijn.rs","byte_start":1159,"byte_end":1555,"line_start":38,"line_end":46,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    fn subscribe(&mut self, t : Box<Subscriber<Input=<Self as Publisher>::Output> + 'a>) {","highlight_start":5,"highlight_end":91},{"text":"        // Not obvious, but there is an implicit lifetime here -------^","highlight_start":1,"highlight_end":72},{"text":"        //~^^ ERROR cannot infer","highlight_start":1,"highlight_end":33},{"text":"        //","highlight_start":1,"highlight_end":11},{"text":"        // The fact that `Publisher` is using an implicit lifetime is","highlight_start":1,"highlight_end":70},{"text":"        // what was causing the debruijn accounting to be off, so","highlight_start":1,"highlight_end":66},{"text":"        // leave it that way!","highlight_start":1,"highlight_end":30},{"text":"        self.sub = t;","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"lifetime mismatch","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected type `'a`\n   found type ``","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lifetime 'a as defined on the impl at 36:6...","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/issue-20831-debruijn.rs","byte_start":1095,"byte_end":1097,"line_start":36,"line_end":36,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a> Publisher<'a> for MyStruct<'a> {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...does not necessarily outlive the anonymous lifetime #2 defined on the method body at 38:5","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/issue-20831-debruijn.rs","byte_start":1159,"byte_end":1555,"line_start":38,"line_end":46,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    fn subscribe(&mut self, t : Box<Subscriber<Input=<Self as Publisher>::Output> + 'a>) {","highlight_start":5,"highlight_end":91},{"text":"        // Not obvious, but there is an implicit lifetime here -------^","highlight_start":1,"highlight_end":72},{"text":"        //~^^ ERROR cannot infer","highlight_start":1,"highlight_end":33},{"text":"        //","highlight_start":1,"highlight_end":11},{"text":"        // The fact that `Publisher` is using an implicit lifetime is","highlight_start":1,"highlight_end":70},{"text":"        // what was causing the debruijn accounting to be off, so","highlight_start":1,"highlight_end":66},{"text":"        // leave it that way!","highlight_start":1,"highlight_end":30},{"text":"        self.sub = t;","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"error[E0308]: mismatched types\n  --> /checkout/src/test/ui/issue-20831-debruijn.rs:38:5\n   |\nLL | /     fn subscribe(&mut self, t : Box<Subscriber<Input=<Self as Publisher>::Output> + 'a>) {\nLL | |         // Not obvious, but there is an implicit lifetime here -------^\nLL | |         //~^^ ERROR cannot infer\nLL | |         //\n...  |\nLL | |         self.sub = t;\nLL | |     }\n   | |_____^ lifetime mismatch\n   |\n   = note: expected type `'a`\n              found type ``\nnote: the lifetime 'a as defined on the impl at 36:6...\n  --> /checkout/src/test/ui/issue-20831-debruijn.rs:36:6\n   |\nLL | impl<'a> Publisher<'a> for MyStruct<'a> {\n   |      ^^\nnote: ...does not necessarily outlive the anonymous lifetime #2 defined on the method body at 38:5\n  --> /checkout/src/test/ui/issue-20831-debruijn.rs:38:5\n   |\nLL | /     fn subscribe(&mut self, t : Box<Subscriber<Input=<Self as Publisher>::Output> + 'a>) {\nLL | |         // Not obvious, but there is an implicit lifetime here -------^\nLL | |         //~^^ ERROR cannot infer\nLL | |         //\n...  |\nLL | |         self.sub = t;\nLL | |     }\n   | |_____^\n\n"}
[00:41:43] {"message":"cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements","code":{"code":"E0495","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/issue-20831-debruijn.rs","byte_start":1159,"byte_end":1555,"line_start":38,"line_end":46,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    fn subscribe(&mut self, t : Box<Subscriber<Input=<Self as Publisher>::Output> + 'a>) {","highlight_start":5,"highlight_end":91},{"text":"        // Not obvious, but there is an implicit lifetime here -------^","highlight_start":1,"highlight_end":72},{"text":"        //~^^ ERROR cannot infer","highlight_start":1,"highlight_end":33},{"text":"        //","highlight_start":1,"highlight_end":11},{"text":"        // The fact that `Publisher` is using an implicit lifetime is","highlight_start":1,"highlight_end":70},{"text":"        // what was causing the debruijn accounting to be off, so","highlight_start":1,"highlight_end":66},{"text":"        // leave it that way!","highlight_start":1,"highlight_end":30},{"text":"        self.sub = t;","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"first, the lifetime cannot outlive the anonymous lifetime #2 defined on the method body at 38:5...","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/issue-20831-debruijn.rs","byte_start":1159,"byte_end":1555,"line_start":38,"line_end":46,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    fn subscribe(&mut self, t : Box<Subscriber<Input=<Self as Publisher>::Output> + 'a>) {","highlight_start":5,"highlight_end":91},{"text":"        // Not obvious, but there is an implicit lifetime here -------^","highlight_start":1,"highlight_end":72},{"text":"        //~^^ ERROR cannot infer","highlight_start":1,"highlight_end":33},{"text":"        //","highlight_start":1,"highlight_end":11},{"text":"        // The fact that `Publisher` is using an implicit lifetime is","highlight_start":1,"highlight_end":70},{"text":"        // what was causing the debruijn accounting to be off, so","highlight_start":1,"highlight_end":66},{"text":"        // leave it that way!","highlight_start":1,"highlight_end":30},{"text":"        self.sub = t;","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...but the lifetime must also be valid for the lifetime 'a as defined on the impl at 36:6...","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/issue-20831-debruijn.rs","byte_start":1095,"byte_end":1097,"line_start":36,"line_end":36,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a> Publisher<'a> for MyStruct<'a> {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"...so that the types are compatible:\nexpected Publisher<'_>\n   found Publisher<'_>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n  --> /checkout/src/test/ui/issue-20831-debruijn.rs:38:5\n   |\nLL | /     fn subscribe(&mut self, t : Box<Subscriber<Input=<Self as Publisher>::Output> + 'a>) {\nLL | |         // Not obvious, but there is an implicit lifetime here -------^\nLL | |         //~^^ ERROR cannot infer\nLL | |         //\n...  |\nLL | |         self.sub = t;\nLL | |     }\n   | |_____^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #2 defined on the method body at 38:5...\n  --> /checkout/src/test/ui/issue-20831-debruijn.rs:38:5\n   |\nLL | /     fn subscribe(&mut self, t : Box<Subscriber<Input=<Self as Publisher>::Output> + 'a>) {\nLL | |         // Not obvious, but there is an implicit lifetime here -------^\nLL | |         //~^^ ERROR cannot infer\nLL | |         //\n...  |\nLL | |         self.sub = t;\nLL | |     }\n   | |_____^\nnote: ...but the lifetime must also be valid for the lifetime 'a as defined on the impl at 36:6...\n  --> /checkout/src/test/ui/issue-20831-debruijn.rs:36:6\n   |\nLL | impl<'a> Publisher<'a> for MyStruct<'a> {\n   |      ^^\n   = note: ...so that the types are compatible:\n           expected Publisher<'_>\n              found Publisher<'_>\n\n"}
[00:41:43] thread 'main' panicked at 'Some tests failed', tools/compiletest/src/main.rs:498:22
[00:41:43] {"message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"error: aborting due to 3 previous errors\n\n"}
[00:41:43] {"message":"Some errors occurred: E0308, E0495.","code":null,"level":"","spans":[],"children":[],"rendered":"Some errors occurred: E0308, E0495.\n"}
[00:41:43] {"message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"","spans":[],"children":[],"rendered":"For more information about an error, try `rustc --explain E0308`.\n"}
[00:41:43] ------------------------------------------
[00:41:43] 
[00:41:43] thread '[ui] ui/issue-20831-debruijn.rs' panicked at 'explicit panic', tools/compiletest/src/runtest.rs:3139:9
[00:41:43] note: Run with `RUST_BACKTRACE=1` for a backtrace.
---
[00:41:43] test result: FAILED. 2110 passed; 1 failed; 7 ignored; 0 measured; 0 filtered out
[00:41:43] 
[00:41:43] 
[00:41:43] 
[00:41:43] command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0-tools-bin/compiletest" "--compile-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib" "--run-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib" "--rustc-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "--src-base" "/checkout/src/test/ui" "--build-base" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui" "--stage-id" "s

The command "stamp sh -x -c "$RUN_SCRIPT"" exited with 2.
travis_time:start:028be3b1
$ date && (curl -fs --head https://google.com | grep ^Date: | sed 's/Date: //g' || true)
