\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/resolve/privacy-enum-ctor.rs","byte_start":1006,"byte_end":1015,"line_start":39,"line_end":39,"column_start":20,"column_end":29,"is_primary":true,"text":[{"text":"        let _: Z = Z::Struct;","highlight_start":20,"highlight_end":29}],"label":"did you mean `Z::Struct { /* fields */ }`?","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0423]: expected value, found struct variant `Z::Struct`\n  --> /checkout/src/test/ui/resolve/privacy-enum-ctor.rs:39:20\n   |\nLL |         let _: Z = Z::Struct;\n   |                    ^^^^^^^^^ did you mean `Z::Struct { /* fields */ }`?\n\n"}
[01:05:22] {"message":"expected value, found enum `m::E`","code":{"code":"E0423","explanation":"\nA `struct` variant name was used like a function name.\n\nErroneous imported","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::f32::consts::E;\n","suggestion_applicability":"Unspecified","expansion":null},{"file_name":"/checkout/src/test/ui/resolve/privacy-enum-ctor.rs","byte_start":1277,"byte_end":1277,"line_start":48,"line_end":48,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use m::E; // OK, only the type is imported","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::f64::consts::E;\n","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"error[E0423]: expected value, found enum `m::E`\n  --> /checkout/src/test/ui/resolve/privacy-enum-ctor.rs:51:16\n   |\nLL |     let _: E = m::E;\n   |                ^^^-\n   |                   |\n   |                   did you mean `f`?\n   |\n   = note: did you mean to use one of the following variants?\n           - `E::Fn`\n           - `E::Struct`\n           - `E::Unit`\nhelp: possible better candidates are found in other modules, you can import them into scope\n   |\nLL | use std::f32::consts::E;\n   |\nLL | use std::f64::consts::E;\n   |\n\n"}
[01:05:22] {"message":"expected value, found struct variant `m::E::Struct`","code":{"code":"E0423","explanation":"\nA `struct` variant name was used like a function name.\n\nErroneous code example:\n\n