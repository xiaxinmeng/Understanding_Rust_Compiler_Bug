\n\nStatics are shared everywhere, and if they refer to mutable data one might\nviolate memory safety since holding multiple mutable references to shared data\nis not allowed.\n\nIf you really want global mutable state, try using `static mut` or a global\n`UnsafeCell`.\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/static_mut_containing_mut_ref2.rs","byte_start":110,"byte_end":136,"line_start":5,"line_end":5,"column_start":46,"column_end":72,"is_primary":true,"text":[{"text":"pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };","highlight_start":46,"highlight_end":72}],"label":"statics require immutable values","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0017]: references in statics may only refer to immutable values\n  --> /checkout/src/test/ui/consts/static_mut_containing_mut_ref2.rs:5:46\n   |\nLL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ statics require immutable values\n\n"}
[01:04:26] {"message":"static contains unimplemented expression type","code":{"code":"E0019","explanation":"\nA function call isn't allowed in the const's initialization expression\nbecause the expression's value must be known at compile-time. Erroneous code\nexample:\n\n