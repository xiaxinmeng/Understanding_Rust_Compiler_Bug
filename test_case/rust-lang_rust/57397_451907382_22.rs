\n\nFor information on the design of the orphan rules, see [RFC 1023].\n\n[RFC 1023]: https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/coherence/coherence-impls-send.rs","byte_start":310,"byte_end":347,"line_start":20,"line_end":20,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"unsafe impl Send for (MyType, MyType) {}","highlight_start":1,"highlight_end":38}],"label":"impl doesn't use types inside crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the impl does not reference only types defined in this crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"define and implement a trait or new type instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n  --> /checkout/src/test/ui/coherence/coherence-impls-send.rs:20:1\n   |\nLL | unsafe impl Send for (MyType, MyType) {}\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n   |\n   = note: the impl does not reference only types defined in this crate\n   = note: define and implement a trait or new type instead\n\n"}
[01:00:21] {"message":"cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `&'static NotSync`","code":{"code":"E0321","explanation":"\nA cross-crate opt-out trait was implemented on something which wasn't a struct\nor enum type. Erroneous code example:\n\n