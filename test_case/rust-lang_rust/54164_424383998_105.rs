\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn_dyn.rs","byte_start":783,"byte_end":784,"line_start":24,"line_end":24,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"const fn no_inner_dyn_trait_ret() -> Hide { Hide(HasDyn { field: &0 }) }","highlight_start":67,"highlight_end":68}],"label":"creates a temporary which is freed while still in use","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn_dyn.rs","byte_start":788,"byte_end":789,"line_start":24,"line_end":24,"column_start":72,"column_end":73,"is_primary":false,"text":[{"text":"const fn no_inner_dyn_trait_ret() -> Hide { Hide(HasDyn { field: &0 }) }","highlight_start":72,"highlight_end":73}],"label":"temporary value is freed at the end of this statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"borrowed value must be valid for the static lifetime...","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0716]: temporary value dropped while borrowed\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn_dyn.rs:24:67\n   |\nLL | const fn no_inner_dyn_trait_ret() -> Hide { Hide(HasDyn { field: &0 }) }\n   |                                                                   ^    - temporary value is freed at the end of this statement\n   |                                                                   |\n   |                                                                   creates a temporary which is freed while still in use\n   |\n   = note: borrowed value must be valid for the static lifetime...\n\n"}
[00:59:39] {"message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"error: aborting due to 3 previous errors\n\n"}
[00:59:39] {"message":"For more information about this error, try `rustc --explain E0716`.","code":null,"level":"","spans":[],"children":[],"rendered":"For more information about this error, try `rustc --explain E0716`.\n"}
[00:59:39] ------------------------------------------
[00:59:39] 
[00:59:39] thread '[ui (nll)] ui/consts/min_const_fn/min_const_fn_dyn.rs' panicked at 'explicit panic', tools/compiletest/src/runtest.rs:3238:9
[00:59:39] 
[00:59:39] 
[00:59:39] ---- [ui (nll)] ui/consts/min_const_fn/min_const_fn.rs stdout ----
[00:59:39] diff of stderr:
[00:59:39] 
[00:59:39] 190 LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }
[00:59:39] 192 
[00:59:39] 192 
[00:59:39] - error[E0714]: temporary value dropped while borrowed
[00:59:39] + error[E0716]: temporary value dropped while borrowed
[00:59:39] 195    |
[00:59:39] 195    |
[00:59:39] 196 LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }
[00:59:39] 220 
[00:59:39] 221 error: aborting due to 36 previous errors
[00:59:39] 222 
[00:59:39] - Some errors occurred: E0493, E0714.
[00:59:39] - Some errors occurred: E0493, E0714.
[00:59:39] + Some errors occurred: E0493, E0716.
[00:59:39] 224 For more information about an error, try `rustc --explain E0493`.
[00:59:39] 225 
[00:59:39] 
[00:59:39] 
[00:59:39] The actual stderr differed from the expected stderr.
[00:59:39] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/consts/min_const_fn/min_const_fn.nll/min_const_fn.nll.stderr
[00:59:39] To update references, rerun the tests and pass the `--bless` flag
[00:59:39] To only update this specific test, also pass `--test-args consts/min_const_fn/min_const_fn.rs`
[00:59:39] error: 1 errors occurred comparing output.
[00:59:39] status: exit code: 1
[00:59:39] status: exit code: 1
[00:59:39] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/consts/min_const_fn/min_const_fn.nll/a" "-Zborrowck=mir" "-Ztwo-phase-borrows" "-Crpath" "-O" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/consts/min_const_fn/min_const_fn.nll/auxiliary" "-A" "unused"
[00:59:39] ------------------------------------------
[00:59:39] 
[00:59:39] ------------------------------------------
[00:59:39] stderr:
[00:59:39] stderr:
[00:59:39] ------------------------------------------
[00:59:39] {"message":"destructors cannot be evaluated at compile-time","code":{"code":"E0493","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":1758,"byte_end":1762,"line_start":49,"line_end":49,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"    const fn into_inner(self) -> T { self.0 } //~ destructors cannot be evaluated","highlight_start":25,"highlight_end":29}],"label":"constant functions cannot evaluate destructors","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0493]: destructors cannot be evaluated at compile-time\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:49:25\n   |\nLL |     const fn into_inner(self) -> T { self.0 } //~ destructors cannot be evaluated\n   |                         ^^^^ constant functions cannot evaluate destructors\n\n"}
[00:59:39] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":1893,"byte_end":1899,"line_start":51,"line_end":51,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"    const fn get_mut(&mut self) -> &mut T { &mut self.0 }","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:51:36\n   |\nLL |     const fn get_mut(&mut self) -> &mut T { &mut self.0 }\n   |                                    ^^^^^^\n\n"}
[00:59:39] {"message":"destructors cannot be evaluated at compile-time","code":{"code":"E0493","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":2064,"byte_end":2068,"line_start":56,"line_end":56,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"    const fn into_inner_lt(self) -> T { self.0 } //~ destructors cannot be evaluated","highlight_start":28,"highlight_end":32}],"label":"constant functions cannot evaluate destructors","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0493]: destructors cannot be evaluated at compile-time\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:56:28\n   |\nLL |     const fn into_inner_lt(self) -> T { self.0 } //~ destructors cannot be evaluated\n   |                            ^^^^ constant functions cannot evaluate destructors\n\n"}
[00:59:39] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":2211,"byte_end":2217,"line_start":58,"line_end":58,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"    const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }","highlight_start":42,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:58:42\n   |\nLL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n   |                                          ^^^^^^\n\n"}
[00:59:39] {"message":"destructors cannot be evaluated at compile-time","code":{"code":"E0493","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":2383,"byte_end":2387,"line_start":63,"line_end":63,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"    const fn into_inner_s(self) -> T { self.0 } //~ ERROR destructors","highlight_start":27,"highlight_end":31}],"label":"constant functions cannot evaluate destructors","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0493]: destructors cannot be evaluated at compile-time\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:63:27\n   |\nLL |     const fn into_inner_s(self) -> T { self.0 } //~ ERROR destructors\n   |                           ^^^^ constant functions cannot evaluate destructors\n\n"}
[00:59:39] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":2508,"byte_end":2514,"line_start":65,"line_end":65,"column_start":38,"column_end":44,"is_primary":true,"text":[{"text":"    const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }","highlight_start":38,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:65:38\n   |\nLL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n   |                                      ^^^^^^\n\n"}
[00:59:39] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":2694,"byte_end":2700,"line_start":70,"line_end":70,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"    const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }","highlight_start":39,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:70:39\n   |\nLL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n   |                                       ^^^^^^\n\n"}
[00:59:39] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3367,"byte_end":3368,"line_start":88,"line_end":88,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"const fn foo11<T: std::fmt::Display>(t: T) -> T { t }","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:88:16\n   |\nLL | const fn foo11<T: std::fmt::Display>(t: T) -> T { t }\n   |                ^\n\n"}
[00:59:39] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3502,"byte_end":3503,"line_start":90,"line_end":90,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"const fn foo11_2<T: Send>(t: T) -> T { t }","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:90:18\n   |\nLL | const fn foo11_2<T: Send>(t: T) -> T { t }\n   |                  ^\n\n"}
[00:59:39] {"message":"only int, `bool` and `char` operations are stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3639,"byte_end":3646,"line_start":92,"line_end":92,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"const fn foo19(f: f32) -> f32 { f * 2.0 }","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: only int, `bool` and `char` operations are stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:92:33\n   |\nLL | const fn foo19(f: f32) -> f32 { f * 2.0 }\n   |                                 ^^^^^^^\n\n"}
[00:59:39] {"message":"only int, `bool` and `char` operations are stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3756,"byte_end":3763,"line_start":94,"line_end":94,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"const fn foo19_2(f: f32) -> f32 { 2.0 - f }","highlight_start":35,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: only int, `bool` and `char` operations are stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:94:35\n   |\nLL | const fn foo19_2(f: f32) -> f32 { 2.0 - f }\n   |                                   ^^^^^^^\n\n"}
[00:59:39] {"message":"only int and `bool` operations are stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3873,"byte_end":3875,"line_start":96,"line_end":96,"column_start":35,"column_end":37,"is_primary":true,"text":[{"text":"const fn foo19_3(f: f32) -> f32 { -f }","highlight_start":35,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: only int and `bool` operations are stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:96:35\n   |\nLL | const fn foo19_3(f: f32) -> f32 { -f }\n   |                                   ^^\n\n"}
[00:59:39] {"message":"only int, `bool` and `char` operations are stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":3985,"byte_end":3990,"line_start":98,"line_end":98,"column_start":43,"column_end":48,"is_primary":true,"text":[{"text":"const fn foo19_4(f: f32, g: f32) -> f32 { f / g }","highlight_start":43,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: only int, `bool` and `char` operations are stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:98:43\n   |\nLL | const fn foo19_4(f: f32, g: f32) -> f32 { f / g }\n   |                                           ^^^^^\n\n"}
[00:59:39] {"message":"cannot access `static` items in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4115,"byte_end":4118,"line_start":102,"line_end":102,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"const fn foo25() -> u32 { BAR } //~ ERROR cannot access `static` items in const fn","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: cannot access `static` items in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:102:27\n   |\nLL | const fn foo25() -> u32 { BAR } //~ ERROR cannot access `static` items in const fn\n   |                           ^^^\n\n"}
[00:59:39] {"message":"cannot access `static` items in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4207,"byte_end":4211,"line_start":103,"line_end":103,"column_start":36,"column_end":40,"is_primary":true,"text":[{"text":"const fn foo26() -> &'static u32 { &BAR } //~ ERROR cannot access `static` items","highlight_start":36,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: cannot access `static` items in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:103:36\n   |\nLL | const fn foo26() -> &'static u32 { &BAR } //~ ERROR cannot access `static` items\n   |                                    ^^^^\n\n"}
[00:59:39] {"message":"casting pointers to ints is unstable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4294,"byte_end":4304,"line_start":104,"line_end":104,"column_start":42,"column_end":52,"is_primary":true,"text":[{"text":"const fn foo30(x: *const u32) -> usize { x as usize }","highlight_start":42,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: casting pointers to ints is unstable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:104:42\n   |\nLL | const fn foo30(x: *const u32) -> usize { x as usize }\n   |                                          ^^^^^^^^^^\n\n"}
[00:59:39] {"message":"casting pointers to ints is unstable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4383,"byte_end":4393,"line_start":106,"line_end":106,"column_start":42,"column_end":52,"is_primary":true,"text":[{"text":"const fn foo30_2(x: *mut u32) -> usize { x as usize }","highlight_start":42,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: casting pointers to ints is unstable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:106:42\n   |\nLL | const fn foo30_2(x: *mut u32) -> usize { x as usize }\n   |                                          ^^^^^^^^^^\n\n"}
[00:59:39] {"message":"`if`, `match`, `&&` and `||` are not stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4468,"byte_end":4490,"line_start":108,"line_end":108,"column_start":38,"column_end":60,"is_primary":true,"text":[{"text":"const fn foo30_4(b: bool) -> usize { if b { 1 } else { 42 } }","highlight_start":38,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `if`, `match`, `&&` and `||` are not stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:108:38\n   |\nLL | const fn foo30_4(b: bool) -> usize { if b { 1 } else { 42 } }\n   |                                      ^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[00:59:39] {"message":"`if`, `match`, `&&` and `||` are not stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4588,"byte_end":4599,"line_start":110,"line_end":110,"column_start":29,"column_end":40,"is_primary":true,"text":[{"text":"const fn foo30_5(b: bool) { while b { } } //~ ERROR not stable in const fn","highlight_start":29,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `if`, `match`, `&&` and `||` are not stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:110:29\n   |\nLL | const fn foo30_5(b: bool) { while b { } } //~ ERROR not stable in const fn\n   |                             ^^^^^^^^^^^\n\n"}
[00:59:39] {"message":"local variables in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4668,"byte_end":4669,"line_start":111,"line_end":111,"column_start":34,"column_end":35,"is_primary":true,"text":[{"text":"const fn foo30_6() -> bool { let x = true; x } //~ ERROR local variables in const fn are unstable","highlight_start":34,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: local variables in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:111:34\n   |\nLL | const fn foo30_6() -> bool { let x = true; x } //~ ERROR local variables in const fn are unstable\n   |                                  ^\n\n"}
[00:59:39] {"message":"`if`, `match`, `&&` and `||` are not stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4776,"byte_end":4782,"line_start":112,"line_end":112,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"const fn foo36(a: bool, b: bool) -> bool { a && b }","highlight_start":44,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `if`, `match`, `&&` and `||` are not stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:112:44\n   |\nLL | const fn foo36(a: bool, b: bool) -> bool { a && b }\n   |                                            ^^^^^^\n\n"}
[00:59:39] {"message":"`if`, `match`, `&&` and `||` are not stable in const fn","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4895,"byte_end":4901,"line_start":114,"line_end":114,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"const fn foo37(a: bool, b: bool) -> bool { a || b }","highlight_start":44,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `if`, `match`, `&&` and `||` are not stable in const fn\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:114:44\n   |\nLL | const fn foo37(a: bool, b: bool) -> bool { a || b }\n   |                                            ^^^^^^\n\n"}
[00:59:39] {"message":"mutable references in const fn are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":4984,"byte_end":4985,"line_start":116,"line_end":116,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"const fn inc(x: &mut i32) { *x += 1 }","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: mutable references in const fn are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:116:14\n   |\nLL | const fn inc(x: &mut i32) { *x += 1 }\n   |              ^\n\n"}
[00:59:39] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5084,"byte_end":5085,"line_start":121,"line_end":121,"column_start":6,"column_end":7,"is_primary":true,"text":[{"text":"impl<T: std::fmt::Debug> Foo<T> {","highlight_start":6,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:121:6\n   |\nLL | impl<T: std::fmt::Debug> Foo<T> {\n   |      ^\n\n"}
[00:59:39] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5227,"byte_end":5228,"line_start":126,"line_end":126,"column_start":6,"column_end":7,"is_primary":true,"text":[{"text":"impl<T: std::fmt::Debug + Sized> Foo<T> {","highlight_start":6,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:126:6\n   |\nLL | impl<T: std::fmt::Debug + Sized> Foo<T> {\n   |      ^\n\n"}
[00:59:39] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5379,"byte_end":5380,"line_start":131,"line_end":131,"column_start":6,"column_end":7,"is_primary":true,"text":[{"text":"impl<T: Sync + Sized> Foo<T> {","highlight_start":6,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:131:6\n   |\nLL | impl<T: Sync + Sized> Foo<T> {\n   |      ^\n\n"}
[00:59:39] {"message":"`impl Trait` in const fn is unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5563,"byte_end":5595,"line_start":137,"line_end":137,"column_start":24,"column_end":56,"is_primary":true,"text":[{"text":"const fn no_rpit2() -> AlanTuring<impl std::fmt::Debug> { AlanTuring(0) }","highlight_start":24,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `impl Trait` in const fn is unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:137:24\n   |\nLL | const fn no_rpit2() -> AlanTuring<impl std::fmt::Debug> { AlanTuring(0) }\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[00:59:39] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5695,"byte_end":5715,"line_start":139,"line_end":139,"column_start":34,"column_end":54,"is_primary":true,"text":[{"text":"const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}","highlight_start":34,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:139:34\n   |\nLL | const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}\n   |                                  ^^^^^^^^^^^^^^^^^^^^\n\n"}
[00:59:39] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5785,"byte_end":5805,"line_start":141,"line_end":141,"column_start":22,"column_end":42,"is_primary":true,"text":[{"text":"const fn no_apit(_x: impl std::fmt::Debug) {} //~ ERROR trait bounds other than `Sized`","highlight_start":22,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:141:22\n   |\nLL | const fn no_apit(_x: impl std::fmt::Debug) {} //~ ERROR trait bounds other than `Sized`\n   |                      ^^^^^^^^^^^^^^^^^^^^\n\n"}
[00:59:39] {"message":"`impl Trait` in const fn is unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5874,"byte_end":5894,"line_start":142,"line_end":142,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"const fn no_rpit() -> impl std::fmt::Debug {} //~ ERROR `impl Trait` in const fn is unstable","highlight_start":23,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: `impl Trait` in const fn is unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:142:23\n   |\nLL | const fn no_rpit() -> impl std::fmt::Debug {} //~ ERROR `impl Trait` in const fn is unstable\n   |                       ^^^^^^^^^^^^^^^^^^^^\n\n"}
[00:59:39] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":5967,"byte_end":5969,"line_start":143,"line_end":143,"column_start":23,"column_end":25,"is_primary":true,"text":[{"text":"const fn no_dyn_trait(_x: &dyn std::fmt::Debug) {} //~ ERROR trait bounds other than `Sized`","highlight_start":23,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:143:23\n   |\nLL | const fn no_dyn_trait(_x: &dyn std::fmt::Debug) {} //~ ERROR trait bounds other than `Sized`\n   |                       ^^\n\n"}
[00:59:39] {"message":"trait bounds other than `Sized` on const fn parameters are unstable","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs","byte_start":6069,"byte_end":6097,"line_start":144,"line_end":144,"column_start":32,"column_end":60,"is_primary":true,"text":[{"text":"const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }","highlight_start":32,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: trait bounds other than `Sized` on const fn parameters are unstable\n  --> /checkout/src/test/ui/consts/min_const_fn/min_const_fn.rs:144:32\n   |\nLL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[00:59:39] {"message":"temporary value dropped while borrowed","code":{"code":"E0716","explanation":"\nThis error indicates that a temporary value is being dropped\nwhile a borrow is still in active use.\n\nErroneous code example:\n\n