\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/nll/user-annotations/patterns.rs","byte_start":928,"byte_end":930,"line_start":46,"line_end":46,"column_start":27,"column_end":29,"is_primary":true,"text":[{"text":"    let y: &'static u32 = &x; //~ ERROR","highlight_start":27,"highlight_end":29}],"label":"borrowed value does not live long enough","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/nll/user-annotations/patterns.rs","byte_start":942,"byte_end":943,"line_start":47,"line_end":47,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"`x` dropped here while still borrowed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":ed value does not live long enough","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/nll/user-annotations/patterns.rs","byte_start":1432,"byte_end":1433,"line_start":61,"line_end":61,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"`x` dropped here while still borrowed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"borrowed value must be valid for the static lifetime...","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0597]: `x` does not live long enough\n  --> /checkout/src/test/ui/nll/user-annotations/patterns.rs:51:27\n   |\nLL |     let _: &'static u32 = &x; //~ ERROR\n   |                           ^^ borrowed value does not live long enough\n...\nLL | }\n   | - `x` dropped here while still borrowed\n   |\n   = note: borrowed value must be valid for the static lifetime...\n\n"}
[00:54:02] {"message":"temporary value borrowed for too long","code":{"code":"E0713","explanation":"\nWhen you write `&expr` and `expr` is not a \"path\" rooted in some\nvariable (e.g., `&foo.bar`) but rather something that creates\na new value (e.g., `&foo()`), a temporary will be created:\n\n