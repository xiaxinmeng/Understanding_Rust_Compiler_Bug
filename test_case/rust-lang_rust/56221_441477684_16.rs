\npub mod moon {\n    pub fn foo() {}\n}\n\npub mod earth {\n    pub fn foo() {}\n}\n\nmod collider {\n    pub use moon;\n    pub use earth;\n}\n\nfn main() {\n    collider::moon::foo(); a built-in extern crate","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/macros/macro-path-prelude-shadowing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"// Copyright 2018 The Rust Project Developers. See the COPYRIGHT","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`std` could also refer to the module imported here","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/macros/macro-path-prelude-shadowing.rs","byte_start":1063,"byte_end":1068,"line_start":37,"line_end":37,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    use m2::*; // glob-import user-defined `std`","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider adding an explicit import of `std` to disambiguate","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or use `self::std` to refer to this module unambiguously","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"error[E0659]: `std` is ambiguous (glob import vs any other name from outer scope during import/macro resolution)\n  --> /checkout/src/test/ui/macros/macro-path-prelude-shadowing.rs:39:9\n   |\nLL |         std::panic!(); //~ ERROR `std` is ambiguous\n   |         ^^^ ambiguous name\n   |\nnote: `std` could refer to a built-in extern crate\nnotexpected stderr.
[00:53:40] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros-nested/ambiguity-macros-nested.stderr
[00:53:40] To update references, rerun the tests and pass the `--bless` flag
[00:53:40] To only update this specific test, also pass `--test-args rust-2018/uniform-paths-forward-compat/ambiguity-macros-nested.rs`
[00:53:40] error: 1 errors occurred comparing output.
[00:53:40] status: exit code: 1
[00:53:40] status: exit code: 1
[00:53:40] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros-nested.rs" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros-nested/a" "-Crpath" "-O" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--edition=2018" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros-nested/auxiliary" "-A" "unused"
[00:53:40] ------------------------------------------
[00:53:40] 
[00:53:40] ------------------------------------------
[00:53:40] stderr:
[00:53:40] stderr:
[00:53:40] ------------------------------------------
[00:53:40] {"message":"`std` is ambiguous (name vs any other name during import resolution)","code":{"code":"E0659","explanation":"\nAn item usage is ambiguous.\n\nErroneous code example:\n\n