
thread 'rustc' panicked at 'forcing query with already existing `DepNode`
- query-key: Canonical { value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::FullyCapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::shop::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::shop::RecordShopPurchaseTransactionLink>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as std::marker::Sync>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::shop::RecordShopPurchase>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::shop::GetShopPurchaseLimit>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::shop::GetShopEntry>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::shop::GetShop>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::shop::FindShopEntry<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:958 ~ arcadian_processor[44a0]::request::shop::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::shop::GetShopCatalog>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::shop::GetDefaultShop>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::statistics::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::statistics::GetUserPopulationsAt>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::statistics::GetUserPopulationAt>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::statistics::GetProtagonistLevelRankings>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::statistics::GetTopRankingForUser<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:1171 ~ arcadian_processor[44a0]::request::statistics::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::statistics::GetTopRankingForProtagonistLevel>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::traveling::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::traveling::CheckTravelExhaustion>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::traveling::RecordJourney>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::traveling::UpdateLocation>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::traveling::ActivateTravelingCooldown>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::traveling::GetAllValidJourneyDurations>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::traveling::GetJourneyDurations>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::traveling::GetJourneyDurationByOriginAndTarget>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::traveling::GetJourneyDurationsByOrigin>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::race::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::race::GetWellKnownRaceNames>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::class::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::class::GetWellKnownClassNames>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::class::FindClass<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:1136 ~ arcadian_processor[44a0]::request::class::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::class::GetClass>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::class::GetClassStats>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::items::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetOwnedItemNames>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetWellKnownItemNames>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetEquipmentSlotLayout>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetEquipArchetype>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetAllOwnedEquipment>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetEquipmentStats>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::FindEquip<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:1111 ~ arcadian_processor[44a0]::request::items::CapableProcessor::'req#3), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetConsumableEffects>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetConsumable>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::UpdateCatalogDecimalCache<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:1110 ~ arcadian_processor[44a0]::request::items::CapableProcessor::'req#2), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetCatalogByKinds<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:1109 ~ arcadian_processor[44a0]::request::items::CapableProcessor::'req#1), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetCatalog>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetItemWithStats>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetItemByCardId>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::GetItem>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::FindItem<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:1108 ~ arcadian_processor[44a0]::request::items::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::items::usage::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::items::usage::RecordCompleteItemUsage<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:1035 ~ arcadian_processor[44a0]::request::items::usage::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::settings::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::settings::locations::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::settings::locations::GetDefaultLocation>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::settings::preferences::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::settings::preferences::SetPreference<'a>>>, polarity:Positive), [Region(BrNamed(DefId(201:1003 ~ arcadian_processor[44a0]::request::settings::preferences::CapableProcessor::'a), 'a))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::settings::default::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::settings::default::GetDefaultProtagonist>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::settings::default::SetDefaultProtagonist>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::settings::wallet::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::settings::wallet::GetWallet>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::settings::wallet::SetWallet<'a>>>, polarity:Positive), [Region(BrNamed(DefId(201:974 ~ arcadian_processor[44a0]::request::settings::wallet::CapableProcessor::'a), 'a))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::tags::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::tags::GetLocationTagSets>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::arcadia::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::arcadia::GetAllBasicLocations>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::arcadia::GetLocation>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::arcadia::GetLocations>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::arcadia::FindLocation<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:856 ~ arcadian_processor[44a0]::request::arcadia::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::weekly::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::weekly::RestoreWeeklyEnergy>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::weekly::AllocateWeeklyEnergy>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::weekly::RecordWeekly>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::weekly::GetRandomWeeklyScenario>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::wander::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::wander::RestoreWanderEnergy>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::wander::AllocateWanderEnergy>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::wander::RecordWander>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::wander::GetRandomWanderScenario>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::user::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::user::GetUserByWallet<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:783 ~ arcadian_processor[44a0]::request::user::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::user::CreateUser>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::user::GetUserByDiscordId>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::user::GetUser>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::training::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::CancelTrainingSession>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::CompleteTrainingSession>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::CompleteTrainingParticipant>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::BeginExecutingTrainingParticipant>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::AssignTransactionToTrainingSession>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::BeginExecutingTrainingSession>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::RecordTraining>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::GetTrainingCostForProtagonist<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:760 ~ arcadian_processor[44a0]::request::training::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::GetTrainingCosts>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::RestoreTrainingCooldown>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::CheckTrainingCooldown>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::ActivateTrainingCooldown>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::training::GetTrainingData>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::status::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::status::RemoveSimEntity>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::status::ApplyStatuses>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::status::GetStatus>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::stats::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::stats::GetStats>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::stats::FindStat<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:687 ~ arcadian_processor[44a0]::request::stats::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::solo::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::solo::CheckSoloExhaustion>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::solo::RestoreSoloEnergy>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::solo::AllocateSoloEnergy>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::solo::FindRewardsForOutcome>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::solo::RecordSolo>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::solo::GetResolutionStrategy>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::solo::GetSoloScenario>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::solo::GetRandomSoloScenarioId>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::roster::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetEmojisForProtagonists>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetProtagonistAsset>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetProtagonists>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetProtagonist>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::FillStatsForProtagonist<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:612 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'req#7), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetOwnedProtagonistWithStatsByAsset<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:611 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'req#6), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetOwnedProtagonistWithStats<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:610 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'req#5), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetOwnedProtagonistByAsset<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:609 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'req#4), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetOwnedProtagonist<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:608 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'req#3), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetAllOwnedProtagonistsWithStats<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:607 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'req#2), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::GetAllOwnedProtagonists<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:606 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'req#1), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::FindProtagonistWithStats<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:605 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::SetName<'a>>>, polarity:Positive), [Region(BrNamed(DefId(201:604 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'a#3), 'a))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::FindOwnedProtagonistWithStats<'a>>>, polarity:Positive), [Region(BrNamed(DefId(201:603 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'a#2), 'a))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::FindOwnedProtagonist<'a>>>, polarity:Positive), [Region(BrNamed(DefId(201:602 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'a#1), 'a))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::roster::FindOwnedProtagonistOnly<'a>>>, polarity:Positive), [Region(BrNamed(DefId(201:601 ~ arcadian_processor[44a0]::request::roster::CapableProcessor::'a), 'a))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::random_message::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::random_message::GetRandomMessage>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::loadout::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::loadout::UnequipAll>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::loadout::UnequipCard>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::loadout::Unequip>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::loadout::EquipLoadout>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::loadout::Equip<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:484 ~ arcadian_processor[44a0]::request::loadout::CapableProcessor::'req#3), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::loadout::SaveLoadout<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:483 ~ arcadian_processor[44a0]::request::loadout::CapableProcessor::'req#2), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::loadout::FindLoadout<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:482 ~ arcadian_processor[44a0]::request::loadout::CapableProcessor::'req#1), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::loadout::ValidateEquipment<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:481 ~ arcadian_processor[44a0]::request::loadout::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::listing::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::listing::LoadCatalogForListing<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:414 ~ arcadian_processor[44a0]::request::listing::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::listing::ConstructListing>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::listing::GetListing>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::leveling::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::leveling::GetLevelUpMessage>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::leveling::ChangeXPs<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:385 ~ arcadian_processor[44a0]::request::leveling::CapableProcessor::'req#3), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::leveling::ChangeXP<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:384 ~ arcadian_processor[44a0]::request::leveling::CapableProcessor::'req#2), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::leveling::ClassUp<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:383 ~ arcadian_processor[44a0]::request::leveling::CapableProcessor::'req#1), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::leveling::ValidateClassUp<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:382 ~ arcadian_processor[44a0]::request::leveling::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::leveling::FindNextLevelBreakpoint>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::leveling::GetAvailableClasses>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::leveling::GetMaxXPForLevels>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::ledger::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::Payout>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::GetBouncedAssetsAndMarkResolved>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::SettleTransaction>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::GetHydratedTransaction>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::GetActiveTransactionId>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::CancelTransaction>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::CancelTransactionDeposit>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::RecordTransactionDeposit<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:323 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd#9), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::BeginTransactionDeposit<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:322 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd#8), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::TransferInventoryToPool>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::AdjustPool<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:321 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd#7), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::FinalizeTransaction>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::FinalizeParticipant>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::FinalizeUser>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::SubmitTransaction>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::UnsubmitAllOffers>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::SubmitOffersForUser>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::SubmitOffers>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::AdjustOfferToMatchListing<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:320 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd#6), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::AdjustOfferToMatchCombinedListing<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:319 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd#5), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::MultiAdjustOffer<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:318 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd#4), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::AdjustOffer<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:317 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd#3), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::UnlockTransactionParticipantList>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::LockTransactionParticipantList>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::RemoveTransactionParticipant<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:316 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd#2), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::AddTransactionParticipant<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:315 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd#1), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::ledger::InitiateTransaction<'cmd>>>, polarity:Positive), [Region(BrNamed(DefId(201:314 ~ arcadian_processor[44a0]::request::ledger::CapableProcessor::'cmd), 'cmd))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::inventory::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::inventory::RemoveAtMostItems>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::inventory::RemoveItems>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::inventory::AddItems>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::inventory::GetItemCount>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::inventory::GetInventory<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:185 ~ arcadian_processor[44a0]::request::inventory::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::cooldown::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::cooldown::CooldownRequest>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::config::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::config::GetArcadianMapUrl>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::config::GetDiscordBotDescription>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::config::GetSystemWalletMnemonic>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::config::GetSystemWallet>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::iam::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::discord::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::discord::GetUserJourneyAndActiveUIs>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::discord::UserDM<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:111 ~ arcadian_processor[44a0]::request::discord::CapableProcessor::'req#1), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::discord::LookupUserMention<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:110 ~ arcadian_processor[44a0]::request::discord::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::request::algorand::CapableProcessor>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::algorand::GetOwnedAssets<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:80 ~ arcadian_processor[44a0]::request::algorand::CapableProcessor::'req#2), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::algorand::GetAlgorandBlock>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::algorand::FindOwnedAssetUrl>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::algorand::GetDecimalForAsset>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::algorand::GetDecimalsForAssets>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::algorand::GetAssetUrl>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::algorand::GetAsset>>, polarity:Positive), []), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::algorand::GetAlgorandTransaction<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:79 ~ arcadian_processor[44a0]::request::algorand::CapableProcessor::'req#1), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as arcadian_processor::traits::Processor<arcadian_processor::request::algorand::CheckWalletForProtagonistAssets<'req>>>, polarity:Positive), [Region(BrNamed(DefId(201:78 ~ arcadian_processor[44a0]::request::algorand::CapableProcessor::'req), 'req))]), Binder(TraitPredicate(<impl FullyCapableProcessor as std::marker::Sized>, polarity:Positive), [])], reveal: UserFacing, constness: NotConst }, value: Normalize { value: [async fn body@discord/src/cmd/shop/shop/shared.rs:276:43: 341:6] } }, max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }
- dep-node: type_op_normalize_ty(12662eb1b12f6748-6e70e2bfb8faf5d)', /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/compiler/rustc_query_system/src/dep_graph/graph.rs:350:9
stack backtrace:
   0:     0x7fb8b6b2fcb3 - std::backtrace_rs::backtrace::libunwind::trace::h0f5267dce289589e
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5
   1:     0x7fb8b6b2fcb3 - std::backtrace_rs::backtrace::trace_unsynchronized::h63caddfcb86e1af4
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5
   2:     0x7fb8b6b2fcb3 - std::sys_common::backtrace::_print_fmt::h30388f34a919f01b
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/sys_common/backtrace.rs:65:5
   3:     0x7fb8b6b2fcb3 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hc61df5f7c0c3b855
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/sys_common/backtrace.rs:44:22
   4:     0x7fb8b6b9065f - core::fmt::write::hfc13a98814f35b19
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/core/src/fmt/mod.rs:1247:17
   5:     0x7fb8b6b22c71 - std::io::Write::write_fmt::h13b8049290b0eaab
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/io/mod.rs:1698:15
   6:     0x7fb8b6b2fac5 - std::sys_common::backtrace::_print::h1c9658192110aef2
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/sys_common/backtrace.rs:47:5
   7:     0x7fb8b6b2fac5 - std::sys_common::backtrace::print::hb6532e99aa86745b
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/sys_common/backtrace.rs:34:9
   8:     0x7fb8b6b32677 - std::panicking::default_hook::{{closure}}::hbc0aeca22c0c1b56
   9:     0x7fb8b6b32465 - std::panicking::default_hook::hf85980d683607eba
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/panicking.rs:288:9
  10:     0x7fb8b9df9145 - <rustc_driver_impl[34c12da676d02f27]::DEFAULT_HOOK::{closure#0}::{closure#0} as core[96e68d6c6efcebbc]::ops::function::FnOnce<(&core[96e68d6c6efcebbc]::panic::panic_info::PanicInfo,)>>::call_once::{shim:vtable#0}
  11:     0x7fb8b6b32db5 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h46f04f9070353a3d
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/alloc/src/boxed.rs:1976:9
  12:     0x7fb8b6b32db5 - std::panicking::rust_panic_with_hook::he89be2d97b5e7f39
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/panicking.rs:695:13
  13:     0x7fb8b6b32b29 - std::panicking::begin_panic_handler::{{closure}}::h38d0ab208b98569e
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/panicking.rs:582:13
  14:     0x7fb8b6b300f6 - std::sys_common::backtrace::__rust_end_short_backtrace::hc941f3c41b5bd0b0
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/sys_common/backtrace.rs:150:18
  15:     0x7fb8b6b32882 - rust_begin_unwind
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/panicking.rs:578:5
  16:     0x7fb8b6b8c8f3 - core::panicking::panic_fmt::h9acc5c939339d9f6
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/core/src/panicking.rs:67:14
  17:     0x7fb8b92cc737 - <std[1fa74e4c3f99f4e6]::thread::local::LocalKey<core[96e68d6c6efcebbc]::cell::Cell<*const ()>>>::with::<rustc_middle[fcc835a641c9863a]::ty::context::tls::enter_context<rustc_query_system[df480f7fba748436]::query::plumbing::execute_job_incr<rustc_query_impl[d81e5c845014471f]::queries::type_op_normalize_ty, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>::{closure#2}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>::{closure#0}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>
  18:     0x7fb8b92cb992 - rustc_query_system[df480f7fba748436]::query::plumbing::try_execute_query::<rustc_query_impl[d81e5c845014471f]::queries::type_op_normalize_ty, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>
  19:     0x7fb8b92cb2a1 - <rustc_query_impl[d81e5c845014471f]::Queries as rustc_middle[fcc835a641c9863a]::ty::query::QueryEngine>::type_op_normalize_ty
  20:     0x7fb8b8cc8617 - <rustc_middle[fcc835a641c9863a]::ty::ParamEnvAnd<rustc_middle[fcc835a641c9863a]::traits::query::type_op::Normalize<rustc_middle[fcc835a641c9863a]::ty::Ty>> as rustc_trait_selection[ed4fae3b12fd04d3]::traits::query::type_op::TypeOp>::fully_perform
  21:     0x7fb8b8c990cb - rustc_borrowck[87d612dd4652109f]::type_check::free_region_relations::create
  22:     0x7fb8b8c717f7 - rustc_borrowck[87d612dd4652109f]::type_check::type_check
  23:     0x7fb8b8c6a37b - rustc_borrowck[87d612dd4652109f]::nll::compute_regions
  24:     0x7fb8b8c1ce93 - rustc_borrowck[87d612dd4652109f]::do_mir_borrowck
  25:     0x7fb8b8c190fe - rustc_borrowck[87d612dd4652109f]::mir_borrowck
  26:     0x7fb8b8c1bb2e - <std[1fa74e4c3f99f4e6]::thread::local::LocalKey<core[96e68d6c6efcebbc]::cell::Cell<*const ()>>>::with::<rustc_middle[fcc835a641c9863a]::ty::context::tls::enter_context<rustc_query_system[df480f7fba748436]::query::plumbing::execute_job_incr<rustc_query_impl[d81e5c845014471f]::queries::mir_borrowck, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>::{closure#2}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>::{closure#0}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>
  27:     0x7fb8b8c185ea - rustc_query_system[df480f7fba748436]::query::plumbing::try_execute_query::<rustc_query_impl[d81e5c845014471f]::queries::mir_borrowck, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>
  28:     0x7fb8b8c17e63 - <rustc_query_impl[d81e5c845014471f]::Queries as rustc_middle[fcc835a641c9863a]::ty::query::QueryEngine>::mir_borrowck
  29:     0x7fb8b8df3f29 - <rustc_borrowck[87d612dd4652109f]::type_check::TypeChecker>::prove_closure_bounds
  30:     0x7fb8b8dd0161 - <rustc_borrowck[87d612dd4652109f]::type_check::TypeChecker>::typeck_mir
  31:     0x7fb8b8c71cbd - rustc_borrowck[87d612dd4652109f]::type_check::type_check
  32:     0x7fb8b8c6a37b - rustc_borrowck[87d612dd4652109f]::nll::compute_regions
  33:     0x7fb8b8c1ce93 - rustc_borrowck[87d612dd4652109f]::do_mir_borrowck
  34:     0x7fb8b8c190fe - rustc_borrowck[87d612dd4652109f]::mir_borrowck
  35:     0x7fb8b8c1bb2e - <std[1fa74e4c3f99f4e6]::thread::local::LocalKey<core[96e68d6c6efcebbc]::cell::Cell<*const ()>>>::with::<rustc_middle[fcc835a641c9863a]::ty::context::tls::enter_context<rustc_query_system[df480f7fba748436]::query::plumbing::execute_job_incr<rustc_query_impl[d81e5c845014471f]::queries::mir_borrowck, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>::{closure#2}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>::{closure#0}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 8usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>
  36:     0x7fb8b8c185ea - rustc_query_system[df480f7fba748436]::query::plumbing::try_execute_query::<rustc_query_impl[d81e5c845014471f]::queries::mir_borrowck, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>
  37:     0x7fb8ba65f8cd - rustc_query_system[df480f7fba748436]::query::plumbing::force_query::<rustc_query_impl[d81e5c845014471f]::queries::mir_borrowck, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>
  38:     0x7fb8ba7705b5 - <rustc_query_impl[d81e5c845014471f]::plumbing::query_callback<rustc_query_impl[d81e5c845014471f]::queries::mir_borrowck>::{closure#0} as core[96e68d6c6efcebbc]::ops::function::FnOnce<(rustc_middle[fcc835a641c9863a]::ty::context::TyCtxt, rustc_query_system[df480f7fba748436]::dep_graph::dep_node::DepNode<rustc_middle[fcc835a641c9863a]::dep_graph::dep_node::DepKind>)>>::call_once
  39:     0x7fb8b7f34309 - <rustc_query_system[df480f7fba748436]::dep_graph::graph::DepGraphData<rustc_middle[fcc835a641c9863a]::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>
  40:     0x7fb8b84c4d90 - rustc_query_system[df480f7fba748436]::query::plumbing::try_execute_query::<rustc_query_impl[d81e5c845014471f]::queries::type_of, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>
  41:     0x7fb8b84c32ba - <rustc_query_impl[d81e5c845014471f]::Queries as rustc_middle[fcc835a641c9863a]::ty::query::QueryEngine>::type_of
  42:     0x7fb8b8eca973 - <rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander>::expand_opaque_ty
  43:     0x7fb8b87c0740 - <rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander as rustc_type_ir[538da815f10eefde]::fold::TypeFolder<rustc_middle[fcc835a641c9863a]::ty::context::TyCtxt>>::fold_ty
  44:     0x7fb8ba315646 - rustc_middle[fcc835a641c9863a]::ty::util::fold_list::<rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander, rustc_middle[fcc835a641c9863a]::ty::Ty, <&rustc_middle[fcc835a641c9863a]::ty::list::List<rustc_middle[fcc835a641c9863a]::ty::Ty> as rustc_type_ir[538da815f10eefde]::fold::TypeFoldable<rustc_middle[fcc835a641c9863a]::ty::context::TyCtxt>>::try_fold_with<rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander>::{closure#0}>
  45:     0x7fb8b87c1218 - <rustc_middle[fcc835a641c9863a]::ty::Ty as rustc_type_ir[538da815f10eefde]::fold::TypeSuperFoldable<rustc_middle[fcc835a641c9863a]::ty::context::TyCtxt>>::super_fold_with::<rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander>
  46:     0x7fb8b87c0729 - <rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander as rustc_type_ir[538da815f10eefde]::fold::TypeFolder<rustc_middle[fcc835a641c9863a]::ty::context::TyCtxt>>::fold_ty
  47:     0x7fb8b87c0a0d - rustc_middle[fcc835a641c9863a]::ty::util::fold_list::<rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander, rustc_middle[fcc835a641c9863a]::ty::subst::GenericArg, <&rustc_middle[fcc835a641c9863a]::ty::list::List<rustc_middle[fcc835a641c9863a]::ty::subst::GenericArg> as rustc_type_ir[538da815f10eefde]::fold::TypeFoldable<rustc_middle[fcc835a641c9863a]::ty::context::TyCtxt>>::try_fold_with<rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander>::{closure#0}>
  48:     0x7fb8b87c11ec - <rustc_middle[fcc835a641c9863a]::ty::Ty as rustc_type_ir[538da815f10eefde]::fold::TypeSuperFoldable<rustc_middle[fcc835a641c9863a]::ty::context::TyCtxt>>::super_fold_with::<rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander>
  49:     0x7fb8b87c0729 - <rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander as rustc_type_ir[538da815f10eefde]::fold::TypeFolder<rustc_middle[fcc835a641c9863a]::ty::context::TyCtxt>>::fold_ty
  50:     0x7fb8b8eca738 - <rustc_middle[fcc835a641c9863a]::ty::util::OpaqueTypeExpander>::expand_opaque_ty
  51:     0x7fb8b8ec7737 - <rustc_middle[fcc835a641c9863a]::ty::context::TyCtxt>::try_expand_impl_trait_type
  52:     0x7fb8b8ea6c76 - rustc_hir_analysis[aee8732c8d117318]::check::check::check_mod_item_types
  53:     0x7fb8b942f9eb - <std[1fa74e4c3f99f4e6]::thread::local::LocalKey<core[96e68d6c6efcebbc]::cell::Cell<*const ()>>>::with::<rustc_middle[fcc835a641c9863a]::ty::context::tls::enter_context<rustc_query_system[df480f7fba748436]::query::plumbing::execute_job_incr<rustc_query_impl[d81e5c845014471f]::queries::check_mod_item_types, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>::{closure#2}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 0usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>::{closure#0}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 0usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>
  54:     0x7fb8b942f25d - rustc_query_system[df480f7fba748436]::query::plumbing::try_execute_query::<rustc_query_impl[d81e5c845014471f]::queries::check_mod_item_types, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>
  55:     0x7fb8b942ec79 - <rustc_query_impl[d81e5c845014471f]::Queries as rustc_middle[fcc835a641c9863a]::ty::query::QueryEngine>::check_mod_item_types
  56:     0x7fb8b91ca07c - <rustc_middle[fcc835a641c9863a]::hir::map::Map>::for_each_module::<rustc_hir_analysis[aee8732c8d117318]::check_crate::{closure#6}::{closure#0}>
  57:     0x7fb8b91c638c - rustc_hir_analysis[aee8732c8d117318]::check_crate
  58:     0x7fb8b91bfe3d - rustc_interface[b741c44058bed653]::passes::analysis
  59:     0x7fb8b955b673 - <std[1fa74e4c3f99f4e6]::thread::local::LocalKey<core[96e68d6c6efcebbc]::cell::Cell<*const ()>>>::with::<rustc_middle[fcc835a641c9863a]::ty::context::tls::enter_context<rustc_query_system[df480f7fba748436]::query::plumbing::execute_job_incr<rustc_query_impl[d81e5c845014471f]::queries::analysis, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>::{closure#2}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 1usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>::{closure#0}, (rustc_middle[fcc835a641c9863a]::query::erase::Erased<[u8; 1usize]>, rustc_query_system[df480f7fba748436]::dep_graph::graph::DepNodeIndex)>
  60:     0x7fb8b955b14b - rustc_query_system[df480f7fba748436]::query::plumbing::try_execute_query::<rustc_query_impl[d81e5c845014471f]::queries::analysis, rustc_query_impl[d81e5c845014471f]::plumbing::QueryCtxt>
  61:     0x7fb8b955ad10 - <rustc_query_impl[d81e5c845014471f]::Queries as rustc_middle[fcc835a641c9863a]::ty::query::QueryEngine>::analysis
  62:     0x7fb8b9444f5a - <rustc_middle[fcc835a641c9863a]::ty::context::GlobalCtxt>::enter::<rustc_driver_impl[34c12da676d02f27]::run_compiler::{closure#1}::{closure#2}::{closure#4}, core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>>
  63:     0x7fb8b9014f89 - <rustc_interface[b741c44058bed653]::interface::Compiler>::enter::<rustc_driver_impl[34c12da676d02f27]::run_compiler::{closure#1}::{closure#2}, core[96e68d6c6efcebbc]::result::Result<core[96e68d6c6efcebbc]::option::Option<rustc_interface[b741c44058bed653]::queries::Linker>, rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>>
  64:     0x7fb8b900eeef - rustc_span[f7030d4a6fd4e0f]::set_source_map::<core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>, rustc_interface[b741c44058bed653]::interface::run_compiler<core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>, rustc_driver_impl[34c12da676d02f27]::run_compiler::{closure#1}>::{closure#0}::{closure#0}>
  65:     0x7fb8b900eb08 - <scoped_tls[3a728348a2c18957]::ScopedKey<rustc_span[f7030d4a6fd4e0f]::SessionGlobals>>::set::<rustc_interface[b741c44058bed653]::interface::run_compiler<core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>, rustc_driver_impl[34c12da676d02f27]::run_compiler::{closure#1}>::{closure#0}, core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>>
  66:     0x7fb8b900e11b - std[1fa74e4c3f99f4e6]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[b741c44058bed653]::util::run_in_thread_pool_with_globals<rustc_interface[b741c44058bed653]::interface::run_compiler<core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>, rustc_driver_impl[34c12da676d02f27]::run_compiler::{closure#1}>::{closure#0}, core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>>
  67:     0x7fb8b96c6e51 - <<std[1fa74e4c3f99f4e6]::thread::Builder>::spawn_unchecked_<rustc_interface[b741c44058bed653]::util::run_in_thread_pool_with_globals<rustc_interface[b741c44058bed653]::interface::run_compiler<core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>, rustc_driver_impl[34c12da676d02f27]::run_compiler::{closure#1}>::{closure#0}, core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>>::{closure#0}::{closure#0}, core[96e68d6c6efcebbc]::result::Result<(), rustc_span[f7030d4a6fd4e0f]::ErrorGuaranteed>>::{closure#1} as core[96e68d6c6efcebbc]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  68:     0x7fb8b6b3d1b5 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hbb7cc2fca328c45c
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/alloc/src/boxed.rs:1962:9
  69:     0x7fb8b6b3d1b5 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hbc3edbd43df62583
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/alloc/src/boxed.rs:1962:9
  70:     0x7fb8b6b3d1b5 - std::sys::unix::thread::Thread::new::thread_start::h0c7216ee6b9feb9f
                               at /rustc/fec9adcdbc21469ef105162cc8cabf81c72d06be/library/std/src/sys/unix/thread.rs:108:17
  71:     0x7fb8b6a00609 - start_thread
  72:     0x7fb8b6923133 - clone
  73:                0x0 - <unknown>

error: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md

note: rustc 1.71.0-nightly (fec9adcdb 2023-04-21) running on x86_64-unknown-linux-gnu

note: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]

note: some of the compiler flags provided by cargo are hidden

query stack during panic:
#0 [type_op_normalize_ty] normalizing `[async fn body@discord/src/cmd/shop/shop/shared.rs:276:43: 341:6]`
#1 [mir_borrowck] borrow-checking `cmd::shop::shop::shared::<impl at discord/src/cmd/shop/shop/shared.rs:271:1: 271:25>::execute::{closure#0}`
#2 [mir_borrowck] borrow-checking `cmd::shop::shop::shared::<impl at discord/src/cmd/shop/shop/shared.rs:271:1: 271:25>::execute`
#3 [type_of] computing type of `cmd::shop::shop::shared::<impl at discord/src/cmd/shop/shop/shared.rs:271:1: 271:25>::execute::{opaque#1}`
#4 [check_mod_item_types] checking item types in module `cmd::shop::shop::appcomm`
#5 [analysis] running analysis passes on this crate
end of query stack
there was a panic while trying to force a dep node
try_mark_green dep node stack:
#0 type_of(arcadian_discord[1211]::cmd::shop::shop::shared::{impl#2}::execute::{opaque#1})
end of try_mark_green dep node stack
Some errors have detailed explanations: E0061, E0308, E0422, E0425, E0599.
For more information about an error, try `rustc --explain E0061`.
warning: `arcadian-discord` (lib) generated 40 warnings
error: could not compile `arcadian-discord` (lib) due to 26 previous errors; 40 warnings emitted
