compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now calld>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding a `where X: std::marker::Sized` bound","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"no field of an enum variant may have a dynamically sized type","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0277]: the size for value values of type `X` cannot be known at compilation time\n  --> /checkout/src/test/ui/unsized-enum2.rs:35:8\n   |\nLL |     VB{x: X},\n   |        ^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `X`\n   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n   = help: consider adding a `where X: std::marker::Sized` bound\n   = note: no field of an enum variant may have a dynamically sized type\n\n"}
[00:48:08] {"message":"the size for value values of type `Y` cannot be known at compilation time","code":{"code":"E0277","explanation":"\nYou tried to use a type which doesn't implement some trait in a place which\nexpected that trait. Erroneous code example:\n\n