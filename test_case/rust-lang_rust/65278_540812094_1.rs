\n\nEnsure that the expressions given can be evaluated as the desired integer type.\nSee the FFI section of the Reference for more information about using a custom\ninteger type:\n\nhttps://doc.rust-lang.org/reference.html#ffi-attributes\n"},"level":"error","spans":[{"file_name":"/checkout/src/libcore/panicking.rs","byte_start":3348,"byte_end":3363,"line_start":84,"line_end":84,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"    unsafe { panic_impl(&pi) }","highlight_start":14,"highlight_end":29}],"label":"Miri evaluation error: the evaluated program panicked","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"inside call to `core::panicking::panic_fmt` at /checkout/src/libcore/macros.rs:18:9","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to `std::result::unwrap_failed` at /checkout/src/libcore/result.rs:933:23","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to `std::result::Result::<std::fs::File, std::io::Error>::unwrap` at tests/run-pass/file_manipulation.rs:11:20","code":null,"level":"note","spans":[{"file_name":"tests/run-pass/file_manipulation.rs","byte_start":359,"byte_end":386,"line_start":11,"line_end":11,"column_start":20,"column_end":47,"is_primary":true,"text":[{"text":"    let mut file = File::create(path).unwrap();","highlight_start":20,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"inside call to `main` at /checkout/src/libstd/rt.rs:61:34","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to closure at /checkout/src/libstd/rt.rs:48:73","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to closure at /checkout/src/libstd/sys_common/backtrace.rs:129:5","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to `std::sys_common::backtrace::__rust_begin_short_backtrace::<[closure@DefId(1:6033 ~ std[1695]::rt[0]::lang_start_internal[0]::{{closure}}[0]::{{closure}}[0]) 0:&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>` at /checkout/src/libstd/rt.rs:48:13","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to closure at /checkout/src/libstd/panicking.rs:288:40","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to `std::panicking::try::do_call::<[closure@DefId(1:6032 ~ std[1695]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>` at /checkout/src/libstd/panicking.rs:284:5","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to `std::panicking::try::<i32, [closure@DefId(1:6032 ~ std[1695]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe]>` at /checkout/src/libstd/panic.rs:394:9","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to `std::panic::catch_unwind::<[closure@DefId(1:6032 ~ std[1695]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>` at /checkout/src/libstd/rt.rs:47:25","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to `std::rt::lang_start_internal` at /checkout/src/libstd/rt.rs:61:5","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"inside call to `std::rt::lang_start::<()>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error[E0080]: Miri evaluation error: the evaluated program panicked\n  --> /checkout/src/libcore/panicking.rs:84:14\n   |\n84 |     unsafe { panic_impl(&pi) }\n   |              ^^^^^^^^^^^^^^^ Miri evaluation error: the evaluated program panicked\n   |\n   = note: inside call to `core::panicking::panic_fmt` at /checkout/src/libcore/macros.rs:18:9\n   = note: inside call to `std::result::unwrap_failed` at /checkout/src/libcore/result.rs:933:23\nnote: inside call to `std::result::Result::<std::fs::File, std::io::Error>::unwrap` at tests/run-pass/file_manipulation.rs:11:20\n  --> tests/run-pass/file_manipulation.rs:11:20\n   |\n11 |     let mut file = File::create(path).unwrap();\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = note: inside call to `main` at /checkout/src/libstd/rt.rs:61:34\n   = note: inside call to closure at /checkout/src/libstd/rt.rs:48:73\n   = note: inside call to closure at /checkout/src/libstd/sys_common/backtrace.rs:129:5\n   = note: inside call to `std::sys_common::backtrace::__rust_begin_short_backtrace::<[closure@DefId(1:6033 ~ std[1695]::rt[0]::lang_start_internal[0]::{{closure}}[0]::{{closure}}[0]) 0:&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>` at /checkout/src/libstd/rt.rs:48:13\n   = note: inside call to closure at /checkout/src/libstd/panicking.rs:288:40\n   = note: inside call to `std::panicking::try::do_call::<[closure@DefId(1:6032 ~ std[1695]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>` at /checkout/src/libstd/panicking.rs:284:5\n   = note: inside call to `std::panicking::try::<i32, [closure@DefId(1:6032 ~ std[1695]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe]>` at /checkout/src/libstd/panic.rs:394:9\n   = note: inside call to `std::panic::catch_unwind::<[closure@DefId(1:6032 ~ std[1695]::rt[0]::lang_start_internal[0]::{{closure}}[0]) 0:&&dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe], i32>` at /checkout/src/libstd/rt.rs:47:25\n   = note: inside call to `std::rt::lang_start_internal` at /checkout/src/libstd/rt.rs:61:5\n   = note: inside call to `std::rt::lang_start::<()>`\n\n"}
2019-10-10T21:40:58.9152965Z {"message":"For more information about this error, try `rustc --explain E0080`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"For more information about this error, try `rustc --explain E0080`.\n"}
2019-10-10T21:40:58.9153006Z 
2019-10-10T21:40:58.9153178Z ------------------------------------------
2019-10-10T21:40:58.9153220Z 
---
2019-10-10T21:40:58.9412068Z Verifying status of clippy-driver...
2019-10-10T21:40:58.9422007Z Verifying status of miri...
2019-10-10T21:40:58.9433994Z This PR updated 'src/tools/miri', verifying if status is 'test-pass'...
2019-10-10T21:40:58.9442219Z 
2019-10-10T21:40:58.9442731Z ⚠️ We detected that this PR updated 'miri', but its tests failed.
2019-10-10T21:40:58.9442790Z 
2019-10-10T21:40:58.9443028Z If you do intend to update 'miri', please check the error messages above and
2019-10-10T21:40:58.9443071Z commit another update.
2019-10-10T21:40:58.9443092Z 
2019-10-10T21:40:58.9443279Z If you do NOT intend to update 'miri', please ensure you did not accidentally
2019-10-10T21:40:58.9443486Z change the submodule at 'src/tools/miri'. You may ask your reviewer for the
2019-10-10T21:40:58.9443525Z proper steps.
2019-10-10T21:40:58.9460637Z   local time: Thu Oct 10 21:40:58 UTC 2019
2019-10-10T21:40:59.1239034Z   network time: Thu, 10 Oct 2019 21:40:59 GMT
2019-10-10T21:40:59.1239133Z == end clock drift check ==
2019-10-10T21:40:59.1239133Z == end clock drift check ==
2019-10-10T21:40:59.6202260Z ##[error]Bash exited with code '3'.
2019-10-10T21:40:59.6261905Z ##[section]Starting: Checkout
2019-10-10T21:40:59.6263459Z ==============================================================================
2019-10-10T21:40:59.6263502Z Task         : Get sources
2019-10-10T21:40:59.6263539Z Description  : Get sources from a repository. Supports Git, TfsVC, and SVN repositories.
