\n\nThis error indicates that the compiler was unable to sensibly evaluate a\nconstant expression that had to be evaluated. Attempting to divide by 0\nor causing an integer overflow are two ways to induce this error.\n\nEnsure that the expressions given can be evaluated as the desired integer type.\n\nSee the [Custom Discriminants][custom-discriminants] section of the Reference\nfor more information about setting custom integer types on fieldless enums\nusing the [`repr` attribute][repr-attribute].\n\n[custom-discriminants]: https://doc.rust-lang.org/reference/items/enumerations.html#custom-discriminant-values-for-field-less-enumerations\n[repr-attribute]: https://doc.rust-lang.org/reference/type-layout.html#reprc-enums\n"},"level":"error","spans":[{"file_name":"tests/ui/indexing_slicing_index.rs","byte_start":483,"byte_end":494,"line_start":10,"line_end":10,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"const REF_ERR: &i32 = &ARR[idx4()]; // Ok, let rustc handle const contexts.","highlight_start":24,"highlight_end":35}],"label":"index out of bounds: the length is 2 but the index is 4","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error[E0080]: evaluation of constant value failed\n  --> tests/ui/indexing_slicing_index.rs:10:24\n   |\nLL | const REF_ERR: &i32 = &ARR[idx4()]; // Ok, let rustc handle const contexts.\n   |                        ^^^^^^^^^^^ index out of bounds: the length is 2 but the index is 4\n\n"}
{"message":"For more information about this error, try `rustc --explain E0080`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"For more information about this error, try `rustc --explain E0080`.\n"}

------------------------------------------

