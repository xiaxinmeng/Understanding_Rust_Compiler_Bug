\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/associated-types/associated-types-eq-3.rs","byte_start":1096,"byte_end":1100,"line_start":48,"line_end":48,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    foo1(a);","highlight_start":5,"highlight_end":9}],"label":"expected usize, found struct `Bar`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected type `usize`\n   found type `Bar`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `foo1`","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/associated-types/associated-types-eq-3.rs","byte_start":736,"byte_end":764,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"fn foo1<I: Foo<A=Bar>>(x: I) {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"error[E0271]: type mismatch resolving `<isize as Foo>::A == Bar`\n  --> /checkout/src/test/ui/associated-types/associated-types-eq-3.rs:48:5\n   |\nLL |     foo1(a);\n   |     ^^^^ expected usize, found struct `Bar`\n   |\n   = note: exn\nimpl Trait for i8 { type AssociatedType = &'static str; }\n//~~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//      |                             |\n// `i8` does have                     |\n// implementation                     |\n// of `Trait`...                      |\n//                     ... but it is an implementation\n//                     that assigns `&'static str` to\n//                     the associated type.\n\nfoo(3_i8);\n// Here, we invoke `foo` with an `i8`, which does not satisfy\n// the constraint `<i8 as Trait>::AssociatedType=u32`, and\n// therefore the type-checker complains with this error code.\n