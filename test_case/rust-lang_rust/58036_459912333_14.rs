\n"},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/feature-gates/feature-gate-generic_associated_types.rs","byte_start":687,"byte_end":722,"line_start":26,"line_end":26,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"    type Assoc where Self: Sized = Foo;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add #![feature(generic_associated_types)] to the crate attributes to enable","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"error[E0658]: where-clauses on associated types are unstable (see issue #44265)\n  --> /checkout/src/test/ui/feature-gates/feature-gate-generic_associated_types.rs:26:5\n   |\nLL |     type Assoc where Self: Sized = Foo;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n\n"}
[01:06:13] {"message":"For more information about this error, try `rustc --explain E0658`.","code":null,"level":"","spans":[],"children":[],"rendered":"For more information about this error, try `rustc --explain E0658`.\n"}
[01:06:13] 
[01:06:13] ------------------------------------------
[01:06:13] 
---
[01:06:13] 
[01:06:13] 11    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
[01:06:13] 12    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
[01:06:13] 13    = note: for more information, see issue #51443 <https://github.com/rust-lang/rust/issues/51443>
[01:06:13] -    = note: method `foo` references the `Self` type in where clauses
[01:06:13] +    = note: method `foo` references the `Self` type in where-clauses
[01:06:13] 16 error: aborting due to previous error
[01:06:13] 17 
[01:06:13] 
[01:06:13] 
[01:06:13] 
[01:06:13] The actual stderr differed from the expected stderr.
[01:06:13] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/issues/issue-50781/issue-50781.stderr
[01:06:13] To update references, rerun the tests and pass the `--bless` flag
[01:06:13] To only update this specific test, also pass `--test-args issues/issue-50781.rs`
[01:06:13] error: 1 errors occurred comparing output.
[01:06:13] status: exit code: 1
[01:06:13] status: exit code: 1
[01:06:13] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/ui/issues/issue-50781.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/issues/issue-50781/a" "-Crpath" "-O" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/issues/issue-50781/auxiliary" "-A" "unused"
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] ------------------------------------------
[01:06:13] stderr:
[01:06:13] stderr:
[01:06:13] ------------------------------------------
[01:06:13] {"message":"the trait `X` cannot be made into an object","code":{"code":"where_clauses_object_safety","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/issues/issue-50781.rs","byte_start":69,"byte_end":101,"line_start":6,"line_end":6,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    fn foo(&self) where Self: Trait; //~ ERROR the trait `X` cannot be made into an object","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"lint level defined here","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/issues/issue-50781.rs","byte_start":8,"byte_end":35,"line_start":1,"line_end":1,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"#![deny(where_clauses_object_safety)]","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #51443 <https://github.com/rust-lang/rust/issues/51443>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"method `foo` references the `Self` type in where-clauses","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"error: the trait `X` cannot be made into an object\n  --> /checkout/src/test/ui/issues/issue-50781.rs:6:5\n   |\nLL |     fn foo(&self) where Self: Trait; //~ ERROR the trait `X` cannot be made into an object\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: lint level defined here\n  --> /checkout/src/test/ui/issues/issue-50781.rs:1:9\n   |\nLL | #![deny(where_clauses_object_safety)]\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n   = note: for more information, see issue #51443 <https://github.com/rust-lang/rust/issues/51443>\n   = note: method `foo` references the `Self` type in where-clauses\n\n"}
[01:06:13] 
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] thread '[ui] ui/issues/issue-50781.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3300:9
[01:06:13] thread '[ui] ui/issues/issue-50781.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3300:9
[01:06:13] 
[01:06:13] ---- [ui] ui/rust-2018/edition-lint-infer-outlives.rs stdout ----
[01:06:13] diff of fixed:
[01:06:13] 
[01:06:13] 12 // combinations—
[01:06:13] 13 //
[01:06:13] 14 // • one generic parameter (T) bound inline
[01:06:13] - // • one parameter (T) with a where clause
[01:06:13] + // • one parameter (T) with a where-clause
[01:06:13] 16 // • two parameters (T and U), both bound inline
[01:06:13] - // • two parameters (T and U), one bound inline, one with a where clause
[01:06:13] - // • two parameters (T and U), both with where clauses
[01:06:13] + // • two parameters (T and U), one bound inline, one with a where-clause
[01:06:13] + // • two parameters (T and U), both with where-clauses
[01:06:13] 19 //
[01:06:13] 20 // —and for every permutation of 0, 1, or 2 lifetimes to outlive and 0 or 1
[01:06:13] - // trait bounds distributed among said parameters (subject to no where clause
[01:06:13] + // trait bounds distributed among said parameters (subject to no where-clause
[01:06:13] 22 // being empty and the struct having at least one lifetime).
[01:06:13] 24 
[01:06:13] 
[01:06:13] 
[01:06:13] The actual fixed differed from the expected fixed.
[01:06:13] The actual fixed differed from the expected fixed.
[01:06:13] Actual fixed saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/rust-2018/edition-lint-infer-outlives/edition-lint-infer-outlives.fixed
[01:06:13] To update references, rerun the tests and pass the `--bless` flag
[01:06:13] To only update this specific test, also pass `--test-args rust-2018/edition-lint-infer-outlives.rs`
[01:06:13] error: 1 errors occurred comparing output.
[01:06:13] status: exit code: 1
[01:06:13] status: exit code: 1
[01:06:13] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/rust-2018/edition-lint-infer-outlives/a" "-Crpath" "-O" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/rust-2018/edition-lint-infer-outlives/auxiliary" "-A" "unused"
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] ------------------------------------------
[01:06:13] stderr:
[01:06:13] stderr:
[01:06:13] ------------------------------------------
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":770,"byte_end":774,"line_start":25,"line_end":25,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"struct TeeOutlivesAy<'a, T: 'a> {","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"lint level defined here","code":null,"level":"note","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":42,"byte_end":72,"line_start":4,"line_end":4,"column_start":9,"column_end":39,"is_primary":true,"text":[{"text":"#![deny(explicit_outlives_requirements)]","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":770,"byte_end":774,"line_start":25,"line_end":25,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"struct TeeOutlivesAy<'a, T: 'a> {","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:25:27\n   |\nLL | struct TeeOutlivesAy<'a, T: 'a> {\n   |                           ^^^^ help: remove this bound\n   |\nnote: lint level defined here\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:4:9\n   |\nLL | #![deny(explicit_outlives_requirements)]\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":884,"byte_end":889,"line_start":30,"line_end":30,"column_start":36,"column_end":41,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyIsDebug<'a, T: 'a + Debug> {","highlight_start":36,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":884,"byte_end":889,"line_start":30,"line_end":30,"column_start":36,"column_end":41,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyIsDebug<'a, T: 'a + Debug> {","highlight_start":36,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:30:36\n   |\nLL | struct TeeOutlivesAyIsDebug<'a, T: 'a + Debug> {\n   |                                    ^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1009,"byte_end":1014,"line_start":35,"line_end":35,"column_start":41,"column_end":46,"is_primary":true,"text":[{"text":"struct TeeIsDebugOutlivesAy<'a, T: Debug + 'a> {","highlight_start":41,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1009,"byte_end":1014,"line_start":35,"line_end":35,"column_start":41,"column_end":46,"is_primary":true,"text":[{"text":"struct TeeIsDebugOutlivesAy<'a, T: Debug + 'a> {","highlight_start":41,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:35:41\n   |\nLL | struct TeeIsDebugOutlivesAy<'a, T: Debug + 'a> {\n   |                                         ^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1122,"byte_end":1131,"line_start":40,"line_end":40,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyBee<'a, 'b, T: 'a + 'b> {","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1122,"byte_end":1131,"line_start":40,"line_end":40,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyBee<'a, 'b, T: 'a + 'b> {","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:40:34\n   |\nLL | struct TeeOutlivesAyBee<'a, 'b, T: 'a + 'b> {\n   |                                  ^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1252,"byte_end":1262,"line_start":45,"line_end":45,"column_start":43,"column_end":53,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyBeeIsDebug<'a, 'b, T: 'a + 'b + Debug> {","highlight_start":43,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1252,"byte_end":1262,"line_start":45,"line_end":45,"column_start":43,"column_end":53,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyBeeIsDebug<'a, 'b, T: 'a + 'b + Debug> {","highlight_start":43,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:45:43\n   |\nLL | struct TeeOutlivesAyBeeIsDebug<'a, 'b, T: 'a + 'b + Debug> {\n   |                                           ^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1393,"byte_end":1403,"line_start":50,"line_end":50,"column_start":48,"column_end":58,"is_primary":true,"text":[{"text":"struct TeeIsDebugOutlivesAyBee<'a, 'b, T: Debug + 'a + 'b> {","highlight_start":48,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1393,"byte_end":1403,"line_start":50,"line_end":50,"column_start":48,"column_end":58,"is_primary":true,"text":[{"text":"struct TeeIsDebugOutlivesAyBee<'a, 'b, T: Debug + 'a + 'b> {","highlight_start":48,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:50:48\n   |\nLL | struct TeeIsDebugOutlivesAyBee<'a, 'b, T: Debug + 'a + 'b> {\n   |                                                ^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1514,"byte_end":1526,"line_start":55,"line_end":55,"column_start":33,"column_end":45,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAy<'a, T> where T: 'a {","highlight_start":33,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1514,"byte_end":1526,"line_start":55,"line_end":55,"column_start":33,"column_end":45,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAy<'a, T> where T: 'a {","highlight_start":33,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:55:33\n   |\nLL | struct TeeWhereOutlivesAy<'a, T> where T: 'a {\n   |                                 ^^^^^^^^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1649,"byte_end":1654,"line_start":60,"line_end":60,"column_start":50,"column_end":55,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyIsDebug<'a, T> where T: 'a + Debug {","highlight_start":50,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1649,"byte_end":1654,"line_start":60,"line_end":60,"column_start":50,"column_end":55,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyIsDebug<'a, T> where T: 'a + Debug {","highlight_start":50,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:60:50\n   |\nLL | struct TeeWhereOutlivesAyIsDebug<'a, T> where T: 'a + Debug {\n   |                                                  ^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1787,"byte_end":1792,"line_start":65,"line_end":65,"column_start":55,"column_end":60,"is_primary":true,"text":[{"text":"struct TeeWhereIsDebugOutlivesAy<'a, T> where T: Debug + 'a {","highlight_start":55,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1787,"byte_end":1792,"line_start":65,"line_end":65,"column_start":55,"column_end":60,"is_primary":true,"text":[{"text":"struct TeeWhereIsDebugOutlivesAy<'a, T> where T: Debug + 'a {","highlight_start":55,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:65:55\n   |\nLL | struct TeeWhereIsDebugOutlivesAy<'a, T> where T: Debug + 'a {\n   |                                                       ^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1905,"byte_end":1922,"line_start":70,"line_end":70,"column_start":40,"column_end":57,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyBee<'a, 'b, T> where T: 'a + 'b {","highlight_start":40,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":1905,"byte_end":1922,"line_start":70,"line_end":70,"column_start":40,"column_end":57,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyBee<'a, 'b, T> where T: 'a + 'b {","highlight_start":40,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:70:40\n   |\nLL | struct TeeWhereOutlivesAyBee<'a, 'b, T> where T: 'a + 'b {\n   |                                        ^^^^^^^^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2056,"byte_end":2066,"line_start":75,"line_end":75,"column_start":57,"column_end":67,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyBeeIsDebug<'a, 'b, T> where T: 'a + 'b + Debug {","highlight_start":57,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2056,"byte_end":2066,"line_start":75,"line_end":75,"column_start":57,"column_end":67,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyBeeIsDebug<'a, 'b, T> where T: 'a + 'b + Debug {","highlight_start":57,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:75:57\n   |\nLL | struct TeeWhereOutlivesAyBeeIsDebug<'a, 'b, T> where T: 'a + 'b + Debug {\n   |                                                         ^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2210,"byte_end":2220,"line_start":80,"line_end":80,"column_start":62,"column_end":72,"is_primary":true,"text":[{"text":"struct TeeWhereIsDebugOutlivesAyBee<'a, 'b, T> where T: Debug + 'a + 'b {","highlight_start":62,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2210,"byte_end":2220,"line_start":80,"line_end":80,"column_start":62,"column_end":72,"is_primary":true,"text":[{"text":"struct TeeWhereIsDebugOutlivesAyBee<'a, 'b, T> where T: Debug + 'a + 'b {","highlight_start":62,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:80:62\n   |\nLL | struct TeeWhereIsDebugOutlivesAyBee<'a, 'b, T> where T: Debug + 'a + 'b {\n   |                                                              ^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2330,"byte_end":2334,"line_start":85,"line_end":85,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"struct TeeYooOutlivesAy<'a, T, U: 'a> {","highlight_start":33,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2330,"byte_end":2334,"line_start":85,"line_end":85,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"struct TeeYooOutlivesAy<'a, T, U: 'a> {","highlight_start":33,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:85:33\n   |\nLL | struct TeeYooOutlivesAy<'a, T, U: 'a> {\n   |                                 ^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2462,"byte_end":2467,"line_start":91,"line_end":91,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"struct TeeYooOutlivesAyIsDebug<'a, T, U: 'a + Debug> {","highlight_start":42,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2462,"byte_end":2467,"line_start":91,"line_end":91,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"struct TeeYooOutlivesAyIsDebug<'a, T, U: 'a + Debug> {","highlight_start":42,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:91:42\n   |\nLL | struct TeeYooOutlivesAyIsDebug<'a, T, U: 'a + Debug> {\n   |                                          ^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2605,"byte_end":2610,"line_start":97,"line_end":97,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"struct TeeYooIsDebugOutlivesAy<'a, T, U: Debug + 'a> {","highlight_start":47,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2605,"byte_end":2610,"line_start":97,"line_end":97,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"struct TeeYooIsDebugOutlivesAy<'a, T, U: Debug + 'a> {","highlight_start":47,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:97:47\n   |\nLL | struct TeeYooIsDebugOutlivesAy<'a, T, U: Debug + 'a> {\n   |                                               ^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2733,"byte_end":2737,"line_start":103,"line_end":103,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyYooIsDebug<'a, T: 'a, U: Debug> {","highlight_start":37,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2733,"byte_end":2737,"line_start":103,"line_end":103,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyYooIsDebug<'a, T: 'a, U: Debug> {","highlight_start":37,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:103:37\n   |\nLL | struct TeeOutlivesAyYooIsDebug<'a, T: 'a, U: Debug> {\n   |                                     ^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2873,"byte_end":2882,"line_start":109,"line_end":109,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"struct TeeYooOutlivesAyBee<'a, 'b, T, U: 'a + 'b> {","highlight_start":40,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":2873,"byte_end":2882,"line_start":109,"line_end":109,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"struct TeeYooOutlivesAyBee<'a, 'b, T, U: 'a + 'b> {","highlight_start":40,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:109:40\n   |\nLL | struct TeeYooOutlivesAyBee<'a, 'b, T, U: 'a + 'b> {\n   |                                        ^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3021,"byte_end":3031,"line_start":115,"line_end":115,"column_start":49,"column_end":59,"is_primary":true,"text":[{"text":"struct TeeYooOutlivesAyBeeIsDebug<'a, 'b, T, U: 'a + 'b + Debug> {","highlight_start":49,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3021,"byte_end":3031,"line_start":115,"line_end":115,"column_start":49,"column_end":59,"is_primary":true,"text":[{"text":"struct TeeYooOutlivesAyBeeIsDebug<'a, 'b, T, U: 'a + 'b + Debug> {","highlight_start":49,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:115:49\n   |\nLL | struct TeeYooOutlivesAyBeeIsDebug<'a, 'b, T, U: 'a + 'b + Debug> {\n   |                                                 ^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3180,"byte_end":3190,"line_start":121,"line_end":121,"column_start":54,"column_end":64,"is_primary":true,"text":[{"text":"struct TeeYooIsDebugOutlivesAyBee<'a, 'b, T, U: Debug + 'a + 'b> {","highlight_start":54,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3180,"byte_end":3190,"line_start":121,"line_end":121,"column_start":54,"column_end":64,"is_primary":true,"text":[{"text":"struct TeeYooIsDebugOutlivesAyBee<'a, 'b, T, U: Debug + 'a + 'b> {","highlight_start":54,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:121:54\n   |\nLL | struct TeeYooIsDebugOutlivesAyBee<'a, 'b, T, U: Debug + 'a + 'b> {\n   |                                                      ^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3324,"byte_end":3333,"line_start":127,"line_end":127,"column_start":44,"column_end":53,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyBeeYooIsDebug<'a, 'b, T: 'a + 'b, U: Debug> {","highlight_start":44,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3324,"byte_end":3333,"line_start":127,"line_end":127,"column_start":44,"column_end":53,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyBeeYooIsDebug<'a, 'b, T: 'a + 'b, U: Debug> {","highlight_start":44,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:127:44\n   |\nLL | struct TeeOutlivesAyBeeYooIsDebug<'a, 'b, T: 'a + 'b, U: Debug> {\n   |                                            ^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3472,"byte_end":3484,"line_start":133,"line_end":133,"column_start":39,"column_end":51,"is_primary":true,"text":[{"text":"struct TeeYooWhereOutlivesAy<'a, T, U> where U: 'a {","highlight_start":39,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3472,"byte_end":3484,"line_start":133,"line_end":133,"column_start":39,"column_end":51,"is_primary":true,"text":[{"text":"struct TeeYooWhereOutlivesAy<'a, T, U> where U: 'a {","highlight_start":39,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:133:39\n   |\nLL | struct TeeYooWhereOutlivesAy<'a, T, U> where U: 'a {\n   |                                       ^^^^^^^^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3625,"byte_end":3630,"line_start":139,"line_end":139,"column_start":56,"column_end":61,"is_primary":true,"text":[{"text":"struct TeeYooWhereOutlivesAyIsDebug<'a, T, U> where U: 'a + Debug {","highlight_start":56,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3625,"byte_end":3630,"line_start":139,"line_end":139,"column_start":56,"column_end":61,"is_primary":true,"text":[{"text":"struct TeeYooWhereOutlivesAyIsDebug<'a, T, U> where U: 'a + Debug {","highlight_start":56,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:139:56\n   |\nLL | struct TeeYooWhereOutlivesAyIsDebug<'a, T, U> where U: 'a + Debug {\n   |                                                        ^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3781,"byte_end":3786,"line_start":145,"line_end":145,"column_start":61,"column_end":66,"is_primary":true,"text":[{"text":"struct TeeYooWhereIsDebugOutlivesAy<'a, T, U> where U: Debug + 'a {","highlight_start":61,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3781,"byte_end":3786,"line_start":145,"line_end":145,"column_start":61,"column_end":66,"is_primary":true,"text":[{"text":"struct TeeYooWhereIsDebugOutlivesAy<'a, T, U> where U: Debug + 'a {","highlight_start":61,"highlight_end":66}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:145:61\n   |\nLL | struct TeeYooWhereIsDebugOutlivesAy<'a, T, U> where U: Debug + 'a {\n   |                                                             ^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3913,"byte_end":3917,"line_start":151,"line_end":151,"column_start":42,"column_end":46,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyYooWhereIsDebug<'a, T: 'a, U> where U: Debug {","highlight_start":42,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":3913,"byte_end":3917,"line_start":151,"line_end":151,"column_start":42,"column_end":46,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyYooWhereIsDebug<'a, T: 'a, U> where U: Debug {","highlight_start":42,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:151:42\n   |\nLL | struct TeeOutlivesAyYooWhereIsDebug<'a, T: 'a, U> where U: Debug {\n   |                                          ^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4067,"byte_end":4084,"line_start":157,"line_end":157,"column_start":46,"column_end":63,"is_primary":true,"text":[{"text":"struct TeeYooWhereOutlivesAyBee<'a, 'b, T, U> where U: 'a + 'b {","highlight_start":46,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4067,"byte_end":4084,"line_start":157,"line_end":157,"column_start":46,"column_end":63,"is_primary":true,"text":[{"text":"struct TeeYooWhereOutlivesAyBee<'a, 'b, T, U> where U: 'a + 'b {","highlight_start":46,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:157:46\n   |\nLL | struct TeeYooWhereOutlivesAyBee<'a, 'b, T, U> where U: 'a + 'b {\n   |                                              ^^^^^^^^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4236,"byte_end":4246,"line_start":163,"line_end":163,"column_start":63,"column_end":73,"is_primary":true,"text":[{"text":"struct TeeYooWhereOutlivesAyBeeIsDebug<'a, 'b, T, U> where U: 'a + 'b + Debug {","highlight_start":63,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4236,"byte_end":4246,"line_start":163,"line_end":163,"column_start":63,"column_end":73,"is_primary":true,"text":[{"text":"struct TeeYooWhereOutlivesAyBeeIsDebug<'a, 'b, T, U> where U: 'a + 'b + Debug {","highlight_start":63,"highlight_end":73}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:163:63\n   |\nLL | struct TeeYooWhereOutlivesAyBeeIsDebug<'a, 'b, T, U> where U: 'a + 'b + Debug {\n   |                                                               ^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4408,"byte_end":4418,"line_start":169,"line_end":169,"column_start":68,"column_end":78,"is_primary":true,"text":[{"text":"struct TeeYooWhereIsDebugOutlivesAyBee<'a, 'b, T, U> where U: Debug + 'a + 'b {","highlight_start":68,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4408,"byte_end":4418,"line_start":169,"line_end":169,"column_start":68,"column_end":78,"is_primary":true,"text":[{"text":"struct TeeYooWhereIsDebugOutlivesAyBee<'a, 'b, T, U> where U: Debug + 'a + 'b {","highlight_start":68,"highlight_end":78}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:169:68\n   |\nLL | struct TeeYooWhereIsDebugOutlivesAyBee<'a, 'b, T, U> where U: Debug + 'a + 'b {\n   |                                                                    ^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4556,"byte_end":4565,"line_start":175,"line_end":175,"column_start":49,"column_end":58,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyBeeYooWhereIsDebug<'a, 'b, T: 'a + 'b, U> where U: Debug {","highlight_start":49,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4556,"byte_end":4565,"line_start":175,"line_end":175,"column_start":49,"column_end":58,"is_primary":true,"text":[{"text":"struct TeeOutlivesAyBeeYooWhereIsDebug<'a, 'b, T: 'a + 'b, U> where U: Debug {","highlight_start":49,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:175:49\n   |\nLL | struct TeeOutlivesAyBeeYooWhereIsDebug<'a, 'b, T: 'a + 'b, U> where U: Debug {\n   |                                                 ^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4731,"byte_end":4738,"line_start":181,"line_end":181,"column_start":58,"column_end":65,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyYooWhereIsDebug<'a, T, U> where T: 'a, U: Debug {","highlight_start":58,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this bound","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4731,"byte_end":4738,"line_start":181,"line_end":181,"column_start":58,"column_end":65,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyYooWhereIsDebug<'a, T, U> where T: 'a, U: Debug {","highlight_start":58,"highlight_end":65}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:181:58\n   |\nLL | struct TeeWhereOutlivesAyYooWhereIsDebug<'a, T, U> where T: 'a, U: Debug {\n   |                                                          ^^^^^^^ help: remove this bound\n\n"}
[01:06:13] {"message":"outlives requirements can be inferred","code":{"code":"explicit_outlives_requirements","explanation":null},"level":"error","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4896,"byte_end":4908,"line_start":187,"line_end":187,"column_start":65,"column_end":77,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyBeeYooWhereIsDebug<'a, 'b, T, U> where T: 'a + 'b, U: Debug {","highlight_start":65,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these bounds","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs","byte_start":4896,"byte_end":4908,"line_start":187,"line_end":187,"column_start":65,"column_end":77,"is_primary":true,"text":[{"text":"struct TeeWhereOutlivesAyBeeYooWhereIsDebug<'a, 'b, T, U> where T: 'a + 'b, U: Debug {","highlight_start":65,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"error: outlives requirements can be inferred\n  --> /checkout/src/test/ui/rust-2018/edition-lint-infer-outlives.rs:187:65\n   |\nLL | struct TeeWhereOutlivesAyBeeYooWhereIsDebug<'a, 'b, T, U> where T: 'a + 'b, U: Debug {\n   |                                                                 ^^^^^^^^^^^^ help: remove these bounds\n\n"}
[01:06:13] 
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] thread '[ui] ui/rust-2018/edition-lint-infer-outlives.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3300:9
[01:06:13] thread '[ui] ui/rust-2018/edition-lint-infer-outlives.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3300:9
[01:06:13] 
[01:06:13] ---- [ui] ui/trivial-bounds/trivial-bounds-inconsistent.rs stdout ----
[01:06:13] diff of stderr:
[01:06:13] 
[01:06:13] 24 LL | union U where i32: Foo { f: i32 }
[01:06:13] 26 
[01:06:13] - warning: where clauses are not enforced in type aliases
[01:06:13] - warning: where clauses are not enforced in type aliases
[01:06:13] + warning: where-clauses are not enforced in type aliases
[01:06:13] 29    |
[01:06:13] 29    |
[01:06:13] 30 LL | type Y where i32: Foo = ();
[01:06:13] 
[01:06:13] The actual stderr differed from the expected stderr.
[01:06:13] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/trivial-bounds/trivial-bounds-inconsistent/trivial-bounds-inconsistent.stderr
[01:06:13] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/trivial-bounds/trivial-bounds-inconsistent/trivial-bounds-inconsistent.stderr
[01:06:13] To update references, rerun the tests and pass the `--bless` flag
[01:06:13] To only update this specific test, also pass `--test-args trivial-bounds/trivial-bounds-inconsistent.rs`
[01:06:13] error: 1 errors occurred comparing output.
[01:06:13] status: exit code: 0
[01:06:13] status: exit code: 0
[01:06:13] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/trivial-bounds/trivial-bounds-inconsistent/a" "-Crpath" "-O" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/trivial-bounds/trivial-bounds-inconsistent/auxiliary" "-A" "unused"
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] ------------------------------------------
[01:06:13] stderr:
[01:06:13] stderr:
[01:06:13] ------------------------------------------
[01:06:13] {"message":"Trait bound i32: Foo does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":246,"byte_end":249,"line_start":14,"line_end":14,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"enum E where i32: Foo { V }","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"#[warn(trivial_bounds)] on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"warning: Trait bound i32: Foo does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:14:19\n   |\nLL | enum E where i32: Foo { V }\n   |                   ^^^\n   |\n   = note: #[warn(trivial_bounds)] on by default\n\n"}
[01:06:13] {"message":"Trait bound i32: Foo does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":277,"byte_end":280,"line_start":16,"line_end":16,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"struct S where i32: Foo;","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound i32: Foo does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:16:21\n   |\nLL | struct S where i32: Foo;\n   |                     ^^^\n\n"}
[01:06:13] {"message":"Trait bound i32: Foo does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":302,"byte_end":305,"line_start":18,"line_end":18,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"trait T where i32: Foo {}","highlight_start":20,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound i32: Foo does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:18:20\n   |\nLL | trait T where i32: Foo {}\n   |                    ^^^\n\n"}
[01:06:13] {"message":"Trait bound i32: Foo does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":329,"byte_end":332,"line_start":20,"line_end":20,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"union U where i32: Foo { f: i32 }","highlight_start":20,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound i32: Foo does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:20:20\n   |\nLL | union U where i32: Foo { f: i32 }\n   |                    ^^^\n\n"}
[01:06:13] {"message":"where-clauses are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":358,"byte_end":366,"line_start":22,"line_end":22,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"type Y where i32: Foo = ();","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"#[warn(type_alias_bounds)] on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the clause will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"warning: where-clauses are not enforced in type aliases\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:22:14\n   |\nLL | type Y where i32: Foo = ();\n   |              ^^^^^^^^\n   |\n   = note: #[warn(type_alias_bounds)] on by default\n   = help: the clause will not be checked when the type alias is used, and should be removed\n\n"}
[01:06:13] {"message":"Trait bound i32: Foo does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":363,"byte_end":366,"line_start":22,"line_end":22,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"type Y where i32: Foo = ();","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound i32: Foo does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:22:19\n   |\nLL | type Y where i32: Foo = ();\n   |                   ^^^\n\n"}
[01:06:13] {"message":"Trait bound i32: Foo does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":401,"byte_end":404,"line_start":24,"line_end":24,"column_start":28,"column_end":31,"is_primary":true,"text":[{"text":"impl Foo for () where i32: Foo {","highlight_start":28,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound i32: Foo does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:24:28\n   |\nLL | impl Foo for () where i32: Foo {\n   |                            ^^^\n\n"}
[01:06:13] {"message":"Trait bound i32: Foo does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":534,"byte_end":537,"line_start":32,"line_end":32,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"fn f() where i32: Foo {","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound i32: Foo does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:32:19\n   |\nLL | fn f() where i32: Foo {\n   |                   ^^^\n\n"}
[01:06:13] {"message":"Trait bound &'static str: Foo does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":652,"byte_end":655,"line_start":39,"line_end":39,"column_start":28,"column_end":31,"is_primary":true,"text":[{"text":"fn g() where &'static str: Foo {","highlight_start":28,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound &'static str: Foo does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:39:28\n   |\nLL | fn g() where &'static str: Foo {\n   |                            ^^^\n\n"}
[01:06:13] {"message":"Trait bound str: std::marker::Sized does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":835,"byte_end":840,"line_start":53,"line_end":53,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"struct TwoStrs(str, str) where str: Sized;","highlight_start":37,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound str: std::marker::Sized does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:53:37\n   |\nLL | struct TwoStrs(str, str) where str: Sized;\n   |                                     ^^^^^\n\n"}
[01:06:13] {"message":"Trait bound for<'a> Dst<(dyn A + 'a)>: std::marker::Sized does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":889,"byte_end":894,"line_start":55,"line_end":55,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"fn unsized_local() where for<'a> Dst<A + 'a>: Sized {","highlight_start":47,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound for<'a> Dst<(dyn A + 'a)>: std::marker::Sized does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:55:47\n   |\nLL | fn unsized_local() where for<'a> Dst<A + 'a>: Sized {\n   |                                               ^^^^^\n\n"}
[01:06:13] {"message":"Trait bound str: std::marker::Sized does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":996,"byte_end":1001,"line_start":59,"line_end":59,"column_start":35,"column_end":40,"is_primary":true,"text":[{"text":"fn return_str() -> str where str: Sized {","highlight_start":35,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound str: std::marker::Sized does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:59:35\n   |\nLL | fn return_str() -> str where str: Sized {\n   |                                   ^^^^^\n\n"}
[01:06:13] {"message":"Trait bound std::string::String: std::ops::Neg does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":1094,"byte_end":1126,"line_start":63,"line_end":63,"column_start":46,"column_end":78,"is_primary":true,"text":[{"text":"fn use_op(s: String) -> String where String: ::std::ops::Neg<Output = String> {","highlight_start":46,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound std::string::String: std::ops::Neg does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:63:46\n   |\nLL | fn use_op(s: String) -> String where String: ::std::ops::Neg<Output = String> {\n   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[01:06:13] {"message":"Trait bound i32: std::iter::Iterator does not depend on any type or lifetime parameters","code":{"code":"trivial_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs","byte_start":1163,"byte_end":1171,"line_start":67,"line_end":67,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"fn use_for() where i32: Iterator {","highlight_start":25,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"warning: Trait bound i32: std::iter::Iterator does not depend on any type or lifetime parameters\n  --> /checkout/src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs:67:25\n   |\nLL | fn use_for() where i32: Iterator {\n   |                         ^^^^^^^^\n\n"}
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] thread '[ui] ui/trivial-bounds/trivial-bounds-inconsistent.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3300:9
[01:06:13] 
[01:06:13] 
[01:06:13] ---- [ui] ui/type/type-alias-bounds.rs stdout ----
[01:06:13] diff of stderr:
[01:06:13] 
[01:06:13] 7    = note: #[warn(type_alias_bounds)] on by default
[01:06:13] 8    = help: the bound will not be checked when the type alias is used, and should be removed
[01:06:13] - warning: where clauses are not enforced in type aliases
[01:06:13] - warning: where clauses are not enforced in type aliases
[01:06:13] + warning: where-clauses are not enforced in type aliases
[01:06:13] 12    |
[01:06:13] 12    |
[01:06:13] 13 LL | type S2Vec<T> where T: Send = Vec<T>;
[01:06:13] 31    |
[01:06:13] 31    |
[01:06:13] 32    = help: the bound will not be checked when the type alias is used, and should be removed
[01:06:13] - warning: where clauses are not enforced in type aliases
[01:06:13] - warning: where clauses are not enforced in type aliases
[01:06:13] + warning: where-clauses are not enforced in type aliases
[01:06:13] 36    |
[01:06:13] 36    |
[01:06:13] 37 LL | type W2Vec<'b, T> where T: 'b, T: 'b = (&'b u32, Vec<T>);
[01:06:13] 
[01:06:13] 52 LL | type T1<U: Bound> = U::Assoc; //~ WARN not enforced in type aliases
[01:06:13] 54 
[01:06:13] - warning: where clauses are not enforced in type aliases
[01:06:13] - warning: where clauses are not enforced in type aliases
[01:06:13] + warning: where-clauses are not enforced in type aliases
[01:06:13] 57    |
[01:06:13] 57    |
[01:06:13] 58 LL | type T2<U> where U: Bound = U::Assoc;  //~ WARN not enforced in type aliases
[01:06:13] 
[01:06:13] The actual stderr differed from the expected stderr.
[01:06:13] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/type/type-alias-bounds/type-alias-bounds.stderr
[01:06:13] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/type/type-alias-bounds/type-alias-bounds.stderr
[01:06:13] To update references, rerun the tests and pass the `--bless` flag
[01:06:13] To only update this specific test, also pass `--test-args type/type-alias-bounds.rs`
[01:06:13] error: 1 errors occurred comparing output.
[01:06:13] status: exit code: 0
[01:06:13] status: exit code: 0
[01:06:13] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/ui/type/type-alias-bounds.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/type/type-alias-bounds/a" "-Crpath" "-O" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/type/type-alias-bounds/auxiliary" "-A" "unused"
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] ------------------------------------------
[01:06:13] stderr:
[01:06:13] stderr:
[01:06:13] ------------------------------------------
[01:06:13] {"message":"bounds on generic parameters are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":145,"byte_end":149,"line_start":8,"line_end":8,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"type SVec<T: Send + Send> = Vec<T>;","highlight_start":14,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":152,"byte_end":156,"line_start":8,"line_end":8,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"type SVec<T: Send + Send> = Vec<T>;","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"#[warn(type_alias_bounds)] on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the bound will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"warning: bounds on generic parameters are not enforced in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:8:14\n   |\nLL | type SVec<T: Send + Send> = Vec<T>;\n   |              ^^^^   ^^^^\n   |\n   = note: #[warn(type_alias_bounds)] on by default\n   = help: the bound will not be checked when the type alias is used, and should be removed\n\n"}
[01:06:13] {"message":"where-clauses are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":280,"byte_end":287,"line_start":10,"line_end":10,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"type S2Vec<T> where T: Send = Vec<T>;","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the clause will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"warning: where-clauses are not enforced in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:10:21\n   |\nLL | type S2Vec<T> where T: Send = Vec<T>;\n   |                     ^^^^^^^\n   |\n   = help: the clause will not be checked when the type alias is used, and should be removed\n\n"}
[01:06:13] {"message":"bounds on generic parameters are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":393,"byte_end":395,"line_start":12,"line_end":12,"column_start":19,"column_end":21,"is_primary":true,"text":[{"text":"type VVec<'b, 'a: 'b + 'b> = (&'b u32, Vec<&'a i32>);","highlight_start":19,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":398,"byte_end":400,"line_start":12,"line_end":12,"column_start":24,"column_end":26,"is_primary":true,"text":[{"text":"type VVec<'b, 'a: 'b + 'b> = (&'b u32, Vec<&'a i32>);","highlight_start":24,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the bound will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"warning: bounds on generic parameters are not enforced in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:12:19\n   |\nLL | type VVec<'b, 'a: 'b + 'b> = (&'b u32, Vec<&'a i32>);\n   |                   ^^   ^^\n   |\n   = help: the bound will not be checked when the type alias is used, and should be removed\n\n"}
[01:06:13] {"message":"bounds on generic parameters are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":538,"byte_end":540,"line_start":14,"line_end":14,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"type WVec<'b, T: 'b + 'b> = (&'b u32, Vec<T>);","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":543,"byte_end":545,"line_start":14,"line_end":14,"column_start":23,"column_end":25,"is_primary":true,"text":[{"text":"type WVec<'b, T: 'b + 'b> = (&'b u32, Vec<T>);","highlight_start":23,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the bound will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"warning: bounds on generic parameters are not enforced in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:14:18\n   |\nLL | type WVec<'b, T: 'b + 'b> = (&'b u32, Vec<T>);\n   |                  ^^   ^^\n   |\n   = help: the bound will not be checked when the type alias is used, and should be removed\n\n"}
[01:06:13] {"message":"where-clauses are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":684,"byte_end":689,"line_start":16,"line_end":16,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"type W2Vec<'b, T> where T: 'b, T: 'b = (&'b u32, Vec<T>);","highlight_start":25,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":691,"byte_end":696,"line_start":16,"line_end":16,"column_start":32,"column_end":37,"is_primary":true,"text":[{"text":"type W2Vec<'b, T> where T: 'b, T: 'b = (&'b u32, Vec<T>);","highlight_start":32,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the clause will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"warning: where-clauses are not enforced in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:16:25\n   |\nLL | type W2Vec<'b, T> where T: 'b, T: 'b = (&'b u32, Vec<T>);\n   |                         ^^^^^  ^^^^^\n   |\n   = help: the clause will not be checked when the type alias is used, and should be removed\n\n"}
[01:06:13] {"message":"bounds on generic parameters are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":1886,"byte_end":1891,"line_start":47,"line_end":47,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"type T1<U: Bound> = U::Assoc; //~ WARN not enforced in type aliases","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the bound will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"use fully disambiguated paths (i.e., `<T as Trait>::Assoc`) to refer to associated types in type aliases","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":1895,"byte_end":1903,"line_start":47,"line_end":47,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"type T1<U: Bound> = U::Assoc; //~ WARN not enforced in type aliases","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"warning: bounds on generic parameters are not enforced in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:47:12\n   |\nLL | type T1<U: Bound> = U::Assoc; //~ WARN not enforced in type aliases\n   |            ^^^^^\n   |\n   = help: the bound will not be checked when the type alias is used, and should be removed\nhelp: use fully disambiguated paths (i.e., `<T as Trait>::Assoc`) to refer to associated types in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:47:21\n   |\nLL | type T1<U: Bound> = U::Assoc; //~ WARN not enforced in type aliases\n   |                     ^^^^^^^^\n\n"}
[01:06:13] {"message":"where-clauses are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":1960,"byte_end":1968,"line_start":48,"line_end":48,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"type T2<U> where U: Bound = U::Assoc;  //~ WARN not enforced in type aliases","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the clause will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"use fully disambiguated paths (i.e., `<T as Trait>::Assoc`) to refer to associated types in type aliases","code":null,"level":"help","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":1971,"byte_end":1979,"line_start":48,"line_end":48,"column_start":29,"column_end":37,"is_primary":true,"text":[{"text":"type T2<U> where U: Bound = U::Assoc;  //~ WARN not enforced in type aliases","highlight_start":29,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"warning: where-clauses are not enforced in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:48:18\n   |\nLL | type T2<U> where U: Bound = U::Assoc;  //~ WARN not enforced in type aliases\n   |                  ^^^^^^^^\n   |\n   = help: the clause will not be checked when the type alias is used, and should be removed\nhelp: use fully disambiguated paths (i.e., `<T as Trait>::Assoc`) to refer to associated types in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:48:29\n   |\nLL | type T2<U> where U: Bound = U::Assoc;  //~ WARN not enforced in type aliases\n   |                             ^^^^^^^^\n\n"}
[01:06:13] {"message":"bounds on generic parameters are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":2200,"byte_end":2205,"line_start":56,"line_end":56,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"type T5<U: Bound> = <U as Bound>::Assoc;  //~ WARN not enforced in type aliases","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the bound will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"warning: bounds on generic parameters are not enforced in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:56:12\n   |\nLL | type T5<U: Bound> = <U as Bound>::Assoc;  //~ WARN not enforced in type aliases\n   |            ^^^^^\n   |\n   = help: the bound will not be checked when the type alias is used, and should be removed\n\n"}
[01:06:13] {"message":"bounds on generic parameters are not enforced in type aliases","code":{"code":"type_alias_bounds","explanation":null},"level":"warning","spans":[{"file_name":"/checkout/src/test/ui/type/type-alias-bounds.rs","byte_start":2280,"byte_end":2285,"line_start":57,"line_end":57,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"type T6<U: Bound> = ::std::vec::Vec<U>;  //~ WARN not enforced in type aliases","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the bound will not be checked when the type alias is used, and should be removed","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"warning: bounds on generic parameters are not enforced in type aliases\n  --> /checkout/src/test/ui/type/type-alias-bounds.rs:57:12\n   |\nLL | type T6<U: Bound> = ::std::vec::Vec<U>;  //~ WARN not enforced in type aliases\n   |            ^^^^^\n   |\n   = help: the bound will not be checked when the type alias is used, and should be removed\n\n"}
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] thread '[ui] ui/type/type-alias-bounds.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3300:9
[01:06:13] 
[01:06:13] 
[01:06:13] ---- [ui] ui/where-clauses/where-equality-constraints.rs stdout ----
[01:06:13] diff of stderr:
[01:06:13] 
[01:06:13] - error: equality constraints are not yet supported in where clauses (see #20041)
[01:06:13] + error: equality constraints are not yet supported in where-clauses (see #20041)
[01:06:13] 3    |
[01:06:13] 3    |
[01:06:13] 4 LL | fn f() where u8 = u16 {}
[01:06:13] 5    |              ^^^^^^^^
[01:06:13] 6 
[01:06:13] 6 
[01:06:13] - error: equality constraints are not yet supported in where clauses (see #20041)
[01:06:13] + error: equality constraints are not yet supported in where-clauses (see #20041)
[01:06:13] 9    |
[01:06:13] 9    |
[01:06:13] 10 LL | fn g() where for<'a> &'static (u8,) == u16, {}
[01:06:13] 
[01:06:13] The actual stderr differed from the expected stderr.
[01:06:13] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/where-clauses/where-equality-constraints/where-equality-constraints.stderr
[01:06:13] Actual stderr saved to /checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/where-clauses/where-equality-constraints/where-equality-constraints.stderr
[01:06:13] To update references, rerun the tests and pass the `--bless` flag
[01:06:13] To only update this specific test, also pass `--test-args where-clauses/where-equality-constraints.rs`
[01:06:13] error: 1 errors occurred comparing output.
[01:06:13] status: exit code: 1
[01:06:13] status: exit code: 1
[01:06:13] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/ui/where-clauses/where-equality-constraints.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "-o" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/where-clauses/where-equality-constraints/a" "-Crpath" "-O" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui/where-clauses/where-equality-constraints/auxiliary" "-A" "unused"
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] ------------------------------------------
[01:06:13] stderr:
[01:06:13] stderr:
[01:06:13] ------------------------------------------
[01:06:13] {"message":"equality constraints are not yet supported in where-clauses (see #20041)","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/where-clauses/where-equality-constraints.rs","byte_start":13,"byte_end":21,"line_start":1,"line_end":1,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"fn f() where u8 = u16 {}","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: equality constraints are not yet supported in where-clauses (see #20041)\n  --> /checkout/src/test/ui/where-clauses/where-equality-constraints.rs:1:14\n   |\nLL | fn f() where u8 = u16 {}\n   |              ^^^^^^^^\n\n"}
[01:06:13] {"message":"equality constraints are not yet supported in where-clauses (see #20041)","code":null,"level":"error","spans":[{"file_name":"/checkout/src/test/ui/where-clauses/where-equality-constraints.rs","byte_start":109,"byte_end":138,"line_start":3,"line_end":3,"column_start":14,"column_end":43,"is_primary":true,"text":[{"text":"fn g() where for<'a> &'static (u8,) == u16, {}","highlight_start":14,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"error: equality constraints are not yet supported in where-clauses (see #20041)\n  --> /checkout/src/test/ui/where-clauses/where-equality-constraints.rs:3:14\n   |\nLL | fn g() where for<'a> &'static (u8,) == u16, {}\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}
[01:06:13] 
[01:06:13] ------------------------------------------
[01:06:13] 
[01:06:13] thread '[ui] ui/where-clauses/where-equality-constraints.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3300:9
---
[01:06:13] 
[01:06:13] thread 'main' panicked at 'Some tests failed', src/tools/compiletest/src/main.rs:502:22
[01:06:13] 
[01:06:13] 
[01:06:13] command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0-tools-bin/compiletest" "--compile-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib" "--run-lib-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/lib/rustlib/x86_64-unknown-linux-gnu/lib" "--rustc-path" "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "--src-base" "/checkout/src/test/ui" "--build-base" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui" "--stage-id" "stage2-x86_64-unknown-linux-gnu" "--mode" "ui" "--target" "x86_64-unknown-linux-gnu" "--host" "x86_64-unknown-linux-gnu" "--llvm-filecheck" "/usr/lib/llvm-6.0/bin/FileCheck" "--host-rustcflags" "-Crpath -O -Zunstable-options  -Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--target-rustcflags" "-Crpath -O -Zunstable-options  -Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--docck-python" "/usr/bin/python2.7" "--lldb-python" "/usr/bin/python2.7" "--gdb" "/usr/bin/gdb" "--quiet" "--llvm-version" "6.0.0\n" "--system-llvm" "--cc" "" "--cxx" "" "--cflags" "" "--llvm-components" "" "--llvm-cxxflags" "" "--adb-path" "adb" "--adb-test-dir" "/data/tmp/work" "--android-cross-path" "" "--color" "always"
[01:06:13] 
[01:06:13] 
[01:06:13] failed to run: /checkout/obj/build/bootstrap/debug/bootstrap test
[01:06:13] Build completed unsuccessfully in 0:04:24
[01:06:13] Build completed unsuccessfully in 0:04:24
[01:06:13] make: *** [check] Error 1
[01:06:13] Makefile:48: recipe for target 'check' failed
The command "stamp sh -x -c "$RUN_SCRIPT"" exited with 2.
travis_time:start:07fdee2f
$ date && (curl -fs --head https://google.com | grep ^Date: | sed 's/Date: //g' || true)
Sat Feb  2 00:20:23 UTC 2019
---
travis_time:end:214d54e2:start=1549066824420455903,finish=1549066824426089762,duration=5633859
travis_fold:end:after_failure.3
travis_fold:start:after_failure.4
travis_time:start:035825a9
$ ln -s . checkout && for CORE in obj/cores/core.*; do EXE=$(echo $CORE | sed 's|obj/cores/core\.[0-9]*\.!checkout!\(.*\)|\1|;y|!|/|'); if [ -f "$EXE" ]; then printf travis_fold":start:crashlog\n\033[31;1m%s\033[0m\n" "$CORE"; gdb --batch -q -c "$CORE" "$EXE" -iex 'set auto-load off' -iex 'dir src/' -iex 'set sysroot .' -ex bt -ex q; echo travis_fold":"end:crashlog; fi; done || true
travis_fold:end:after_failure.4
travis_fold:start:after_failure.5
travis_time:start:05e049e4
travis_time:start:05e049e4
$ cat ./obj/build/x86_64-unknown-linux-gnu/native/asan/build/lib/asan/clang_rt.asan-dynamic-i386.vers || true
cat: ./obj/build/x86_64-unknown-linux-gnu/native/asan/build/lib/asan/clang_rt.asan-dynamic-i386.vers: No such file or directory
travis_fold:end:after_failure.5
travis_fold:start:after_failure.6
travis_time:start:11dece96
$ dmesg | grep -i kill
