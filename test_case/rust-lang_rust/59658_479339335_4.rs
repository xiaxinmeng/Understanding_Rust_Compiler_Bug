\n"},"level":"error","spans":[{"file_name":"<::rustc::lint::declare_tool_lint macros>","byte_start":681,"byte_end":704,"line_start":12,"line_end":13,"column_start":74,"column_end":22,"is_primary":true,"text":[{"text":"$ ( # [ $ attr ] ) * $ vis static $ NAME : & $ crate :: lint :: Lint = & $","highlight_start":74,"highlight_end":75},{"text":"crate :: lint :: Lint {","highlight_start":1,"highlight_end":22}],"label":"missing `min_level`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"<::rustc::lint::declare_tool_lint macros>","byte_start":116,"byte_end":210,"line_start":4,"line_end":5,"column_start":1,"column_end":73,"is_primary":false,"text":[{"text":"declare_tool_lint ! {","highlight_start":1,"highlight_end":22},{"text":"$ ( # [ $ attr ] ) * $ vis $ tool :: $ NAME , $ Level , $ desc , false } ) ; (","highlight_start":1,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/checkout/src/test/ui-fulldeps/auxiliary/lint-tool-test.rs","byte_start":407,"byte_end":510,"line_start":16,"line_end":20,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"declare_tool_lint!(","highlight_start":1,"highlight_end":20},{"text":"    /// Some docs","highlight_start":1,"highlight_end":18},{"text":"    pub clippy::TEST_GROUP,","highlight_start":1,"highlight_end":28},{"text":"    Warn, \"Warn about other stuff\"","highlight_start":1,"highlight_end":35},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"declare_tool_lint!","def_site_span":{"file_name":"<::rustc::lint::declare_tool_lint macros>","byte_start":0,"byte_end":921,"line_start":1,"line_end":16,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"(","highlight_start":1,"highlight_end":2},{"text":"$ ( # [ $ attr : meta ] ) * $ vis : vis $ tool : ident :: $ NAME : ident , $","highlight_start":1,"highlight_end":77},{"text":"Level : ident , $ desc : expr ) => (","highlight_start":1,"highlight_end":37},{"text":"declare_tool_lint ! {","highlight_start":1,"highlight_end":22},{"text":"$ ( # [ $ attr ] ) * $ vis $ tool :: $ NAME , $ Level , $ desc , false } ) ; (","highlight_start":1,"highlight_end":79},{"text":"$ ( # [ $ attr : meta ] ) * $ vis : vis $ tool : ident :: $ NAME : ident , $","highlight_start":1,"highlight_end":77},{"text":"Level : ident , $ desc : expr , report_in_external_macro : $ rep : expr ) => (","highlight_start":1,"highlight_end":79},{"text":"declare_tool_lint ! {","highlight_start":1,"highlight_end":22},{"text":"$ ( # [ $ attr ] ) * $ vis $ tool :: $ NAME , $ Level , $ desc , $ rep } ) ; (","highlight_start":1,"highlight_end":79},{"text":"$ ( # [ $ attr : meta ] ) * $ vis : vis $ tool : ident :: $ NAME : ident , $","highlight_start":1,"highlight_end":77},{"text":"Level : ident , $ desc : expr , $ external : expr ) => (","highlight_start":1,"highlight_end":57},{"text":"$ ( # [ $ attr ] ) * $ vis static $ NAME : & $ crate :: lint :: Lint = & $","highlight_start":1,"highlight_end":75},{"text":"crate :: lint :: Lint {","highlight_start":1,"highlight_end":24},{"text":"name : & concat ! ( stringify ! ( $ tool ) , \"::\" , stringify ! ( $ NAME ) ) ,","highlight_start":1,"highlight_end":79},{"text":"default_level : $ crate :: lint :: $ Level , desc : $ desc , edition_lint_opts","highlight_start":1,"highlight_end":79},{"text":": None , report_in_external_macro : $ external , } ; ) ;","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"declare_tool_lint!","def_site_span":{"file_name":"<::rustc::lint::declare_tool_lint macros>","byte_start":0,"byte_end":921,"line_start":1,"line_end":16,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"(","highlight_start":1,"highlight_end":2},{"text":"$ ( # [ $ attr : meta ] ) * $ vis : vis $ tool : ident :: $ NAME : ident , $","highlight_start":1,"highlight_end":77},{"text":"Level : ident , $ desc : expr ) => (","highlight_start":1,"highlight_end":37},{"text":"declare_tool_lint ! {","highlight_start":1,"highlight_end":22},{"text":"$ ( # [ $ attr ] ) * $ vis $ tool :: $ NAME , $ Level , $ desc , false } ) ; (","highlight_start":1,"highlight_end":79},{"text":"$ ( # [ $ attr : meta ] ) * $ vis : vis $ tool : ident :: $ NAME : ident , $","highlight_start":1,"highlight_end":77},{"text":"Level : ident , $ desc : expr , report_in_external_macro : $ rep : expr ) => (","highlight_start":1,"highlight_end":79},{"text":"declare_tool_lint ! {","highlight_start":1,"highlight_end":22},{"text":"$ ( # [ $ attr ] ) * $ vis $ tool :: $ NAME , $ Level , $ desc , $ rep } ) ; (","highlight_start":1,"highlight_end":79},{"text":"$ ( # [ $ attr : meta ] ) * $ vis : vis $ tool : ident :: $ NAME : ident , $","highlight_start":1,"highlight_end":77},{"text":"Level : ident , $ desc : expr , $ external : expr ) => (","highlight_start":1,"highlight_end":57},{"text":"$ ( # [ $ attr ] ) * $ vis static $ NAME : & $ crate :: lint :: Lint = & $","highlight_start":1,"highlight_end":75},{"text":"crate :: lint :: Lint {","highlight_start":1,"highlight_end":24},{"text":"name : & concat ! ( stringify ! ( $ tool ) , \"::\" , stringify ! ( $ NAME ) ) ,","highlight_start":1,"highlight_end":79},{"text":"default_level : $ crate :: lint :: $ Level , desc : $ desc , edition_lint_opts","highlight_start":1,"highlight_end":79},{"text":": None , report_in_external_macro : $ external , } ; ) ;","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"error[E0063]: missing field `min_level` in initializer of `rustc::lint::Lint`\n  --> /checkout/src/test/ui-fulldeps/auxiliary/lint-tool-test.rs:16:1\n   |\nLL | / declare_tool_lint!(\nLL | |     /// Some docs\nLL | |     pub clippy::TEST_GROUP,\nLL | |     Warn, \"Warn about other stuff\"\nLL | | );\n   | |__^ missing `min_level`\n   |\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n\n"}
[01:23:40] {"message":"For more information about this error, try `rustc --explain E0063`.","code":null,"level":"","spans":[],"children":[],"rendered":"For more information about this error, try `rustc --explain E0063`.\n"}
[01:23:40] 
[01:23:40] ------------------------------------------
[01:23:40] 
[01:23:40] 
[01:23:40] thread '[ui] ui-fulldeps/lint-tool-cmdline-allow.rs' panicked at 'explicit panic', src/tools/compiletest/src/runtest.rs:3422:9
[01:23:40] note: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.
[01:23:40] 
[01:23:40] ---- [ui] ui-fulldeps/lint-tool-test.rs stdout ----
[01:23:40] 
[01:23:40] error: auxiliary build of "/checkout/src/test/ui-fulldeps/auxiliary/lint-tool-test.rs" failed to compile: 
[01:23:40] status: exit code: 1
[01:23:40] command: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin/rustc" "/checkout/src/test/ui-fulldeps/auxiliary/lint-tool-test.rs" "-Zthreads=1" "--target=x86_64-unknown-linux-gnu" "--error-format" "json" "-Zui-testing" "-C" "prefer-dynamic" "--out-dir" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui-fulldeps/lint-tool-test/auxiliary" "-Crpath" "-O" "-Zunstable-options" "-Lnative=/checkout/obj/build/x86_64-unknown-linux-gnu/native/rust-test-helpers" "--crate-type" "dylib" "-L" "/checkout/obj/build/x86_64-unknown-linux-gnu/test/ui-fulldeps/lint-tool-test/auxiliary"
[01:23:40] ------------------------------------------
[01:23:40] 
[01:23:40] ------------------------------------------
[01:23:40] stderr:
[01:23:40] stderr:
[01:23:40] ------------------------------------------
[01:23:40] {"message":"missing field `min_level` in initializer of `rustc::lint::Lint`","code":{"code":"E0063","explanation":"\nThis error indicates that during an attempt to build a struct or struct-like\nenum variant, one of the fields was not provided. Erroneous code example:\n\n