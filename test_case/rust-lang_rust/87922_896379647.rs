plain
    Finished release [optimized] target(s) in 10.91s
     Running unittests (build/x86_64-unknown-linux-gnu/stage1-rustc/x86_64-unknown-linux-gnu/release/deps/rustc_target-e6563a46f1cd24ff)

running 175 tests
.....................................F..F........FFF..F...F......................................... 100/175
.........................FF...FFF..FF...F..................................

---- spec::tests::armebv7r_none_eabi stdout ----
thread 'spec::tests::armebv7r_none_eabi' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::armebv7r_none_eabi' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "armebv7r-unknown-none-eabi", pointer_width: 32, arch: "arm", data_layout: "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: big, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "armebv7r-unknown-none-eabi", pointer_width: 32, arch: "arm", data_layout: "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: big, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5

---- spec::tests::armebv7r_none_eabihf stdout ----
thread 'spec::tests::armebv7r_none_eabihf' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::armebv7r_none_eabihf' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "armebv7r-unknown-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: big, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+vfp3,-d32,-fp16", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "armebv7r-unknown-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: big, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+vfp3,-d32,-fp16", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::armv7a_none_eabihf stdout ----
thread 'spec::tests::armv7a_none_eabihf' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::armv7a_none_eabihf' panicked at 'assertion failed: `(left == right)`
error: test failed, to rerun pass '-p rustc_target --lib'
  left: `Ok(Target { llvm_target: "armv7a-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+v7,+vfp3,-d32,+thumb2,-neon,+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: true, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "armv7a-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+v7,+vfp3,-d32,+thumb2,-neon,+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: true, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::armv7r_none_eabihf stdout ----
thread 'spec::tests::armv7r_none_eabihf' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::armv7r_none_eabihf' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "armv7r-unknown-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+vfp3,-d32,-fp16", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "armv7r-unknown-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+vfp3,-d32,-fp16", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::armv7a_none_eabi stdout ----
thread 'spec::tests::armv7a_none_eabi' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::armv7a_none_eabi' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "armv7a-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+v7,+thumb2,+soft-float,-neon,+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: true, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "armv7a-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+v7,+thumb2,+soft-float,-neon,+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: true, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(64), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::armv7r_none_eabi stdout ----
thread 'spec::tests::armv7r_none_eabi' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::armv7r_none_eabi' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "armv7r-unknown-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "armv7r-unknown-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::hexagon_unknown_linux_musl stdout ----
thread 'spec::tests::hexagon_unknown_linux_musl' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::hexagon_unknown_linux_musl' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "hexagon-unknown-linux-musl", pointer_width: 32, arch: "hexagon", data_layout: "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "linux", env: "musl", abi: "", vendor: "unknown", linker_flavor: Gcc, linker: None, lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {DynamicNoPicExe: ["crt1.o", "crti.o", "crtbegin.o"], DynamicPicExe: ["Scrt1.o", "crti.o", "crtbeginS.o"], StaticNoPicExe: ["crt1.o", "crti.o", "crtbegin.o"], StaticPicExe: ["rcrt1.o", "crti.o", "crtbeginS.o"], DynamicDylib: ["crti.o", "crtbeginS.o"], StaticDylib: ["crti.o", "crtbeginS.o"]}, post_link_objects_fallback: {DynamicNoPicExe: ["crtend.o", "crtn.o"], DynamicPicExe: ["crtendS.o", "crtn.o"], StaticNoPicExe: ["crtend.o", "crtn.o"], StaticPicExe: ["crtendS.o", "crtn.o"], DynamicDylib: ["crtendS.o", "crtn.o"], StaticDylib: ["crtendS.o", "crtn.o"]}, crt_objects_fallback: Some(Musl), late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "hexagonv60", features: "-small-data,+hvx-length128b", dynamic_linking: true, only_cdylib: false, executables: true, relocation_model: Pic, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: ["unix"], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: true, no_default_libraries: true, position_independent_executables: true, static_position_independent_executables: false, needs_plt: false, relro_level: Full, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: true, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Unwind, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: true, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: true, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "hexagon-unknown-linux-musl", pointer_width: 32, arch: "hexagon", data_layout: "e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "linux", env: "musl", abi: "", vendor: "unknown", linker_flavor: Gcc, linker: None, lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {DynamicNoPicExe: ["crt1.o", "crti.o", "crtbegin.o"], DynamicPicExe: ["Scrt1.o", "crti.o", "crtbeginS.o"], StaticNoPicExe: ["crt1.o", "crti.o", "crtbegin.o"], StaticPicExe: ["rcrt1.o", "crti.o", "crtbeginS.o"], DynamicDylib: ["crti.o", "crtbeginS.o"], StaticDylib: ["crti.o", "crtbeginS.o"]}, post_link_objects_fallback: {DynamicNoPicExe: ["crtend.o", "crtn.o"], DynamicPicExe: ["crtendS.o", "crtn.o"], StaticNoPicExe: ["crtend.o", "crtn.o"], StaticPicExe: ["crtendS.o", "crtn.o"], DynamicDylib: ["crtendS.o", "crtn.o"], StaticDylib: ["crtendS.o", "crtn.o"]}, crt_objects_fallback: Some(Musl), late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "hexagonv60", features: "-small-data,+hvx-length128b", dynamic_linking: true, only_cdylib: false, executables: true, relocation_model: Pic, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: MayOmit, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: ["unix"], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: false, allows_weak_linkage: true, has_rpath: true, no_default_libraries: true, position_independent_executables: true, static_position_independent_executables: false, needs_plt: false, relro_level: Full, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: true, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Unwind, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: true, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: true, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::thumbv6m_none_eabi stdout ----
thread 'spec::tests::thumbv6m_none_eabi' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::thumbv6m_none_eabi' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "thumbv6m-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: None, atomic_cas: false, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "thumbv6m-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: None, atomic_cas: false, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::thumbv4t_none_eabi stdout ----
thread 'spec::tests::thumbv4t_none_eabi' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::thumbv4t_none_eabi' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "thumbv4t-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Ld, linker: Some("arm-none-eabi-ld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: ["-mthumb-interwork", "-march=armv4t", "-mlittle-endian"], cpu: "generic", features: "+soft-float,+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: false, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: None, atomic_cas: false, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: true, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "thumbv4t-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Ld, linker: Some("arm-none-eabi-ld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: ["-mthumb-interwork", "-march=armv4t", "-mlittle-endian"], cpu: "generic", features: "+soft-float,+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: false, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: None, atomic_cas: false, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: true, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::thumbv7em_none_eabihf stdout ----
thread 'spec::tests::thumbv7em_none_eabihf' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::thumbv7em_none_eabihf' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "thumbv7em-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+vfp4,-d32,-fp64", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "thumbv7em-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+vfp4,-d32,-fp64", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::thumbv7em_none_eabi stdout ----
thread 'spec::tests::thumbv7em_none_eabi' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::thumbv7em_none_eabi' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "thumbv7em-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "thumbv7em-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::thumbv7m_none_eabi stdout ----
thread 'spec::tests::thumbv7m_none_eabi' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::thumbv7m_none_eabi' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "thumbv7m-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "thumbv7m-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::thumbv8m_base_none_eabi stdout ----
thread 'spec::tests::thumbv8m_base_none_eabi' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::thumbv8m_base_none_eabi' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "thumbv8m.base-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "thumbv8m.base-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+strict-align", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::thumbv8m_main_none_eabi stdout ----
thread 'spec::tests::thumbv8m_main_none_eabi' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::thumbv8m_main_none_eabi' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "thumbv8m.main-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "thumbv8m.main-none-eabi", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabi", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5
---- spec::tests::thumbv8m_main_none_eabihf stdout ----
thread 'spec::tests::thumbv8m_main_none_eabihf' panicked at 'assertion failed: `(left == right)`
thread 'spec::tests::thumbv8m_main_none_eabihf' panicked at 'assertion failed: `(left == right)`
  left: `Ok(Target { llvm_target: "thumbv8m.main-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+fp-armv8,-fp64,-d32", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 32 } })`,
 right: `Ok(Target { llvm_target: "thumbv8m.main-none-eabihf", pointer_width: 32, arch: "arm", data_layout: "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64", options: TargetOptions { is_builtin: false, endian: little, c_int_width: "32", os: "none", env: "", abi: "eabihf", vendor: "unknown", linker_flavor: Lld(Ld), linker: Some("rust-lld"), lld_flavor: Ld, pre_link_args: {}, pre_link_objects: {}, post_link_objects: {}, pre_link_objects_fallback: {}, post_link_objects_fallback: {}, crt_objects_fallback: None, late_link_args: {}, late_link_args_dynamic: {}, late_link_args_static: {}, post_link_args: {}, link_script: None, link_env: [], link_env_remove: [], asm_args: [], cpu: "generic", features: "+fp-armv8,-fp64,-d32", dynamic_linking: false, only_cdylib: false, executables: true, relocation_model: Static, code_model: None, tls_model: GeneralDynamic, disable_redzone: false, frame_pointer: Always, function_sections: true, dll_prefix: "lib", dll_suffix: ".so", exe_suffix: "", staticlib_prefix: "lib", staticlib_suffix: ".a", families: [], abi_return_struct_as_int: false, is_like_osx: false, is_like_solaris: false, is_like_windows: false, is_like_msvc: false, is_like_emscripten: false, is_like_fuchsia: false, is_like_wasm: false, dwarf_version: None, linker_is_gnu: true, allows_weak_linkage: true, has_rpath: false, no_default_libraries: true, position_independent_executables: false, static_position_independent_executables: false, needs_plt: false, relro_level: None, archive_format: "gnu", allow_asm: true, main_needs_argc_argv: true, has_elf_tls: false, obj_is_bitcode: false, forces_embed_bitcode: false, bitcode_llvm_cmdline: "", min_atomic_width: None, max_atomic_width: Some(32), atomic_cas: true, panic_strategy: Abort, crt_static_allows_dylibs: false, crt_static_default: false, crt_static_respected: false, stack_probes: None, min_global_align: None, default_codegen_units: None, trap_unreachable: true, requires_lto: false, singlethread: false, no_builtins: false, default_hidden_visibility: false, emit_debug_gdb_scripts: false, requires_uwtable: false, default_uwtable: false, simd_types_indirect: true, limit_rdylib_exports: true, override_export_symbols: None, merge_functions: Aliases, mcount: "mcount", llvm_abiname: "", relax_elf_relocations: false, llvm_args: [], use_ctors_section: false, eh_frame_header: true, has_thumb_interworking: false, split_debuginfo: Off, supported_sanitizers: (empty), default_adjusted_cabi: None, c_enum_min_bits: 8 } })`', compiler/rustc_target/src/spec/tests/tests_impl.rs:6:5

failures:
    spec::tests::armebv7r_none_eabi
    spec::tests::armebv7r_none_eabihf
---
test result: FAILED. 160 passed; 15 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s



command did not execute successfully: "/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo" "test" "--target" "x86_64-unknown-linux-gnu" "-Zbinary-dep-depinfo" "-j" "16" "--release" "--locked" "--color" "always" "--features" " llvm" "--manifest-path" "/checkout/compiler/rustc/Cargo.toml" "-p" "rustc_target" "--" "--quiet"


Build completed unsuccessfully in 0:24:15
