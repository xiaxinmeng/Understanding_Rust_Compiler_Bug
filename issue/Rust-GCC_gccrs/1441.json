{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1441", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1441/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1441/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1441/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1441", "id": 1331345182, "node_id": "I_kwDOANBUbM5PWrce", "number": 1441, "title": "Missing privacy check in array argument's size expression", "user": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-08-08T05:22:04Z", "updated_at": "2022-08-08T05:22:46Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This code should cause errors since `mem::size_of` and `mem::transmute` are private functions used outside of their (sub)module(s).\r\n\r\n```rust\r\nmod intrinsics {\r\n    extern \"rust-intrinsic\" {\r\n        pub fn wrapping_add<T>(a: T, b: T) -> T;\r\n        pub fn rotate_left<T>(a: T, b: T) -> T;\r\n        pub fn rotate_right<T>(a: T, b: T) -> T;\r\n        pub fn offset<T>(ptr: *const T, count: isize) -> *const T;\r\n    }\r\n}\r\n\r\nmod mem {\r\n    extern \"rust-intrinsic\" {\r\n        fn transmute<T, U>(_: T) -> U;\r\n        fn size_of<T>() -> usize;\r\n    }\r\n}\r\n\r\nmacro_rules! impl_uint {\r\n    ($($ty:ident = $lang:literal),*) => {\r\n        $(\r\n            impl $ty {\r\n                pub fn wrapping_add(self, rhs: Self) -> Self {\r\n                    // intrinsics::wrapping_add(self, rhs)\r\n                    self + rhs\r\n                }\r\n\r\n                pub fn rotate_left(self, n: u32) -> Self {\r\n                    unsafe {\r\n                        intrinsics::rotate_left(self, n as Self)\r\n                    }\r\n                }\r\n\r\n                pub fn rotate_right(self, n: u32) -> Self {\r\n                    unsafe {\r\n                        intrinsics::rotate_right(self, n as Self)\r\n                    }\r\n                }\r\n\r\n                pub fn to_le(self) -> Self {\r\n                    #[cfg(target_endian = \"little\")]\r\n                    {\r\n                        self\r\n                    }\r\n                }\r\n\r\n                pub const fn from_le_bytes(bytes: [u8; mem::size_of::<Self>()]) -> Self {\r\n                    Self::from_le(Self::from_ne_bytes(bytes))\r\n                }\r\n\r\n                pub const fn from_le(x: Self) -> Self {\r\n                    #[cfg(target_endian = \"little\")]\r\n                    {\r\n                        x\r\n                    }\r\n                }\r\n\r\n                pub const fn from_ne_bytes(bytes: [u8; mem::size_of::<Self>()]) -> Self {\r\n                    unsafe { mem::transmute(bytes) }\r\n                }\r\n            }\r\n        )*\r\n    }\r\n}\r\n\r\nimpl_uint!(\r\n    u8 = \"u8\",\r\n    u16 = \"u16\",\r\n    u32 = \"u32\",\r\n    u64 = \"u64\",\r\n    u128 = \"u128\",\r\n    usize = \"usize\"\r\n);\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1441/timeline", "performed_via_github_app": null, "state_reason": null}