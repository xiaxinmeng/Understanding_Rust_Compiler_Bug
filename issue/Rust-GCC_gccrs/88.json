{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/88", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/88/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/88/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/88", "id": 772143760, "node_id": "MDU6SXNzdWU3NzIxNDM3NjA=", "number": 88, "title": "Type Resolution Dump", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2591793259, "node_id": "MDU6TGFiZWwyNTkxNzkzMjU5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/good-first-pr", "name": "good-first-pr", "color": "A9A76D", "default": false, "description": ""}, {"id": 2765304340, "node_id": "MDU6TGFiZWwyNzY1MzA0MzQw", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/gsoc", "name": "gsoc", "color": "88837B", "default": false, "description": "google summer of code project"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-12-21T12:48:11Z", "updated_at": "2021-09-28T14:35:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Type resolution dumps will be critical in debugging the rust front-end. The format we have right now is pretty poor:\r\n\r\n```\r\n$ cat gccrs.type-resolution.dump \r\nimpl <Foo{0:Int:i32:(Ref: 60 TyRef: 8[8,26,])} HIRID: 35 RF:35 TF:129 - [28, ]> {\r\n    fn baz <fn (ref self & Foo{0:Int:i32:(Ref: 60 TyRef: 8[8,26,])},) -> () HIRID: 66 RF:66 TF:66 - []>\r\n    {\r\n        ;\r\n    }\r\n\r\n}\r\n\r\nfn static_dispatch <fn<T REF: 70> (t & T REF: 70,) -> () HIRID: 81 RF:81 TF:81 - []>\r\n{\r\n    ;\r\n}\r\n\r\nfn dynamic_dispatch <fn (t & dyn [Bar],) -> () HIRID: 94 RF:122 TF:94 - [94, ]>\r\n{\r\n    ;\r\n}\r\n\r\nfn main <fn () -> () HIRID: 127 RF:127 TF:127 - []>\r\n{\r\n    let a:<Foo{0:Int:i32:(Ref: 26 TyRef: 8[8,])} HIRID: 95 RF:100 TF:129 - [28, 95, 96, 98, 100, ]>;\r\n    a:<Foo{0:Int:i32:(Ref: 26 TyRef: 8[8,])} HIRID: 96 RF:100 TF:129 - [28, 95, 96, 98, 100, ]> = ;\r\n    ;\r\n    let b:<& dyn [Bar] HIRID: 115 RF:116 TF:114 - [114, 116, 118, ]>;\r\n    b:<& dyn [Bar] HIRID: 116 RF:116 TF:114 - [114, ]> = ;\r\n    ;\r\n}\r\n\r\n```\r\n\r\n- [ ] Converge on an S-expression format, which is more extensible and easier to read\r\n- [ ] Add command line switch https://github.com/Rust-GCC/gccrs/pull/222\r\n- [ ] Add dump entry point https://github.com/Rust-GCC/gccrs/blob/28f527c9598339cf834a30b5ee1f14258b8ecbb2/gcc/rust/rust-session-manager.cc#L891\r\n- [ ] Dump to file https://github.com/Rust-GCC/gccrs/blob/master/gcc/rust/typecheck/rust-tycheck-dump.h", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/88/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/88/timeline", "performed_via_github_app": null, "state_reason": null}