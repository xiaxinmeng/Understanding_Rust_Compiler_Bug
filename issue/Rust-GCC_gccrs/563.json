{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/563", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/563/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/563/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/563", "id": 944471589, "node_id": "MDU6SXNzdWU5NDQ0NzE1ODk=", "number": 563, "title": "cfg expansion", "user": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2029873897, "node_id": "MDU6TGFiZWwyMDI5ODczODk3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/plan", "name": "plan", "color": "42ed5c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/7", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/7", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/7/labels", "id": 6862692, "node_id": "MDk6TWlsZXN0b25lNjg2MjY5Mg==", "number": 7, "title": "Macro Expansion", "description": "The compiler needs to support macros which is likely 2-3 month effort", "creator": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 163, "state": "closed", "created_at": "2021-06-17T09:43:24Z", "updated_at": "2022-08-23T08:04:13Z", "due_on": "2022-03-28T07:00:00Z", "closed_at": "2022-03-31T10:49:54Z"}, "comments": 4, "created_at": "2021-07-14T14:11:37Z", "updated_at": "2022-03-14T09:31:12Z", "closed_at": "2022-03-14T09:31:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This issue is designed to act as documentation of the current `cfg` expansion system and to allow discussion regarding potential improvements to it.\r\n\r\nThe way `cfg` expansion currently works is via a recursive pass through the AST, starting from the crate. \r\n\r\nThis is currently implemented as part of the `AttrVisitor` class (with calling code in the `MacroExpander` class), which implements a visitor for all AST nodes. As such, this entails having a \"visit_x_node\" method for each AST node, which then visits the child nodes. For example, a `Crate` calls this on its `Item`s, which could call it on their internal `Expr`s if they have any. \r\n\r\nFor each node, `cfg` expansion will first expand any `cfg_attr` attributes recursively (if the node supports attributes). Then, if the node is considered \"strippable\", the method will check if any `cfg` attribute (not `cfg_attr` attribute) is false. If so, then the node is marked to be stripped.\r\n\r\nThe parent node to the node marked for strip will check all strippable nodes for this mark, and if they are marked to be stripped, it removes them. If the child nodes are not strippable in the context, parent nodes will only call the visitor method for the child nodes, and will not have any strip-checking functionality.\r\n\r\nNotes:\r\n\r\n- The reason why `cfg` expansion is treated as parted of macro expansion is because it allows the unification of handling for `cfg` attributes and `cfg` macros. \r\n    - Alternatively, if the macro expander became too large to be easily readable, both 'cfg' macro and 'cfg' attribute expansion could be moved to a separate 'CfgExpander' class. This is, I believe, how rustc implements it. The current code is designed to allow this by having a logical separation of 'cfg' and other macro code (e.g. by not interlacing 'cfg' expansion and macro expansion into the same pass).\r\n    - Note that no macro expansion has actually been fully implemented yet, including `cfg` macro handling. There is a method, `expand_cfg_macro`, that reuses much of the `cfg` attribute code and should expand a `cfg` macro given a macro as input, but this is not currently called.\r\n- `cfg_attr` attributes are used to conditionally add attributes to an node. \r\n- What nodes are considered \"strippable\" are mentioned in various places of the Rust Reference.\r\n- The system of \"mark for strip\" and removal was created because it was the best idea I had at the time to allow a recursive removal of items in a straightforward and consistent way. There may be better ways that I haven't thought of to do so.\r\n- Note that despite being called `AttrVisitor`, the class does not actually deal with any attributes other than `cfg` or `cfg_attr` attributes. I had originally intended for attributes to also be expanded in this pass, but I had not thought through the implications of this decision nor implemented any functionality that would require this. It may be better to have other attributes handled separately.", "closed_by": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/563/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 1, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/563/timeline", "performed_via_github_app": null, "state_reason": "completed"}