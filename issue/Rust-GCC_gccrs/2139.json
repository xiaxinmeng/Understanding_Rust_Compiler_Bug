{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2139", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2139/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2139/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2139/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/2139", "id": 1676542045, "node_id": "I_kwDOANBUbM5j7gBd", "number": 2139, "title": "ICE with bad method resolution", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/22", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/22", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/22/labels", "id": 9278274, "node_id": "MI_kwDOANBUbM4AjZNC", "number": 22, "title": "HIR Pipeline for libcore 1.49 Complete", "description": "Support all of the patterns and features used in libcore 1.49 at the HIR level: this includes, and isn't limited to, complex match patterns, inline assembly, some of the more complex type system features such as specialization, etc.", "creator": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "open_issues": 34, "closed_issues": 54, "state": "open", "created_at": "2023-04-13T08:17:13Z", "updated_at": "2023-06-20T19:14:22Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2023-04-20T11:31:55Z", "updated_at": "2023-04-26T15:53:12Z", "closed_at": "2023-04-26T15:53:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nI already have a fix for this but i am raising it for tracking purposes\r\n\r\n```rust\r\npub trait Foo {\r\n    fn foo();\r\n}\r\n\r\nimpl Foo for u16 {\r\n    fn foo() {\r\n        <u16 as Foo>::foo()\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let a: u16 = 123;\r\n    a.foo();\r\n}\r\n```\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. c474bc0f0117f5aa6819e4dbabde64c54090de44\r\n\r\n### Error output\r\n\r\n```\r\ncrab1: internal compiler error: in select, at rust/typecheck/rust-hir-dot-operator.cc:381  \r\n```\r\n\r\n<!--\r\nInclude a backtrace if available.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n  <p>\r\n  \r\n  ```                                                                                                                                      \r\n0x1533e6f Rust::Resolver::MethodResolver::select(Rust::TyTy::BaseType&)                                                                                                                                                          \r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-dot-operator.cc:381                                                                                                                                                              \r\n0x154d9bd Rust::Resolver::AutoderefCycle::try_autoderefed(Rust::TyTy::BaseType*)                                                                                                                                                 \r\n        ../../gccrs/gcc/rust/typecheck/rust-autoderef.cc:391                                                                                                                                                                     \r\n0x154d4b1 Rust::Resolver::AutoderefCycle::cycle(Rust::TyTy::BaseType*)                                                                                                                                                           \r\n        ../../gccrs/gcc/rust/typecheck/rust-autoderef.cc:302                                                                                                                                                                     \r\n0x1532548 Rust::Resolver::MethodResolver::Probe(Rust::TyTy::BaseType*, Rust::HIR::PathIdentSegment const&, bool)                                                                                                                 \r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-dot-operator.cc:40                                                                                                                                                               \r\n0x1525fc7 Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::MethodCallExpr&)                                                                                                                                                       \r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:1047                                                                                                                                                          \r\n0x13bef87 Rust::HIR::MethodCallExpr::accept_vis(Rust::HIR::HIRExpressionVisitor&)                                                                                                                                                \r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:4899                                                                                                                                                                           \r\n0x15212c3 Rust::Resolver::TypeCheckExpr::Resolve(Rust::HIR::Expr*)                                                                                                                                                               \r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:42                                                                                                                                                            \r\n0x152d24d Rust::Resolver::TypeCheckStmt::visit(Rust::HIR::ExprStmt&)                                                                                                                                                             \r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-stmt.cc:41                                                                                                                                                            \r\n0x13beaf1 Rust::HIR::ExprStmt::accept_vis(Rust::HIR::HIRStmtVisitor&)                                                                                                                                                            \r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:4773                                                                                                                                                                           \r\n0x152d1f7 Rust::Resolver::TypeCheckStmt::Resolve(Rust::HIR::Stmt*)                                                                                                                                                               \r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-stmt.cc:34                                                                                                                                                            \r\n0x15238cb Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::BlockExpr&)                                                                                                                                                            \r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:555                                                                                                                                                           \r\n0x13bf2d7 Rust::HIR::BlockExpr::accept_vis(Rust::HIR::HIRExpressionVisitor&)                                                                                                                                                     \r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:4989                                                                                                                                                                           \r\n0x15212c3 Rust::Resolver::TypeCheckExpr::Resolve(Rust::HIR::Expr*)                                                                                                                                                               \r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:42                                                                                                                                                            \r\n0x151115e Rust::Resolver::TypeCheckItem::visit(Rust::HIR::Function&)                                                                                                                                                             \r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-item.cc:434                                                                                                                                                           \r\n0x13bf34d Rust::HIR::Function::accept_vis(Rust::HIR::HIRVisItemVisitor&)                                                                                                                                                         \r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:5001\r\n0x150e89c Rust::Resolver::TypeCheckItem::Resolve(Rust::HIR::Item&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-item.cc:49\r\n0x14a7b79 Rust::Resolver::TypeResolution::Resolve(Rust::HIR::Crate&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check.cc:37\r\n0x13076a7 Rust::Session::compile_crate(char const*)\r\n        ../../gccrs/gcc/rust/rust-session-manager.cc:620 \r\n0x1306a78 Rust::Session::handle_input_files(int, char const**)\r\n        ../../gccrs/gcc/rust/rust-session-manager.cc:381 \r\n0x1197452 grs_langhook_parse_file\r\n        ../../gccrs/gcc/rust/rust-lang.cc:183\r\nPlease submit a full bug report, with preprocessed source (by using -freport-bug).\r\nPlease include the complete backtrace with any bug report.\r\nSee <https://gcc.gnu.org/bugs/> for instructions.\r\n  ```\r\n  \r\n  </p>\r\n</details>\r\n", "closed_by": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2139/timeline", "performed_via_github_app": null, "state_reason": "completed"}