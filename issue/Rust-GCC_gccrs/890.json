{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/890", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/890/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/890/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/890/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/890", "id": 1112741140, "node_id": "I_kwDOANBUbM5CUxUU", "number": 890, "title": "ICE when using deref_mut lang item", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/7", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/7", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/7/labels", "id": 6862692, "node_id": "MDk6TWlsZXN0b25lNjg2MjY5Mg==", "number": 7, "title": "Macro Expansion", "description": "The compiler needs to support macros which is likely 2-3 month effort", "creator": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 163, "state": "closed", "created_at": "2021-06-17T09:43:24Z", "updated_at": "2022-08-23T08:04:13Z", "due_on": "2022-03-28T07:00:00Z", "closed_at": "2022-03-31T10:49:54Z"}, "comments": 0, "created_at": "2022-01-24T14:44:57Z", "updated_at": "2022-02-12T17:06:39Z", "closed_at": "2022-02-12T17:06:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```rust\r\n#[lang = \"deref\"]\r\npub trait Deref {\r\n    type Target;\r\n\r\n    fn deref(&self) -> &Self::Target;\r\n}\r\n\r\n#[lang = \"deref_mut\"]\r\npub trait DerefMut: Deref {\r\n    fn deref_mut(&mut self) -> &mut Self::Target;\r\n}\r\n\r\nimpl<T> Deref for &T {\r\n    type Target = T;\r\n\r\n    fn deref(&self) -> &T {\r\n        *self\r\n    }\r\n}\r\n\r\npub struct Bar(i32);\r\nimpl Bar {\r\n    pub fn foobar(&mut self) -> i32 {\r\n        self.0\r\n    }\r\n}\r\n\r\npub struct Foo<T>(T);\r\nimpl<T> Deref for Foo<T> {\r\n    type Target = T;\r\n\r\n    fn deref(&self) -> &Self::Target {\r\n        &self.0\r\n    }\r\n}\r\n\r\nimpl<T> DerefMut for Foo<T> {\r\n    fn deref_mut(&mut self) -> &mut Self::Target {\r\n        &mut self.0\r\n    }\r\n}\r\n\r\npub fn test() -> i32 {\r\n    let mut bar = Bar(123);\r\n    let mut foo: Foo<&mut Bar> = Foo(&mut bar);\r\n    let foobar = foo.foobar();\r\n\r\n    foobar - 123\r\n}\r\n```\r\n\r\nhttps://godbolt.org/z/TaK5qzcqz\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. b02824c6a798a78657568e7d831bd10529d63e37\r\n\r\n### Error output\r\n\r\n```\r\nrust1: internal compiler error: in process_impl_item_candidate, at rust/typecheck/rust-hir-path-probe.h:284\r\n0x1e23409 internal_error(char const*, ...)\r\n\t???:0\r\n0x7bc05b fancy_abort(char const*, int, char const*)\r\n\t???:0\r\n0x93ed30 std::_Function_handler<bool (unsigned int, Rust::HIR::ImplItem*, Rust::HIR::ImplBlock*), Rust::Resolver::PathProbeType::process_impl_items_for_candidates()::{lambda(unsigned int, Rust::HIR::ImplItem*, Rust::HIR::ImplBlock*)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&, Rust::HIR::ImplItem*&&, Rust::HIR::ImplBlock*&&)\r\n\t???:0\r\n0x8baf0d Rust::Analysis::Mappings::iterate_impl_items(std::function<bool (unsigned int, Rust::HIR::ImplItem*, Rust::HIR::ImplBlock*)>)\r\n\t???:0\r\n0x93d01f Rust::Resolver::TypeCheckType::resolve_segments(unsigned int, unsigned int, std::vector<std::unique_ptr<Rust::HIR::TypePathSegment, std::default_delete<Rust::HIR::TypePathSegment> >, std::allocator<std::unique_ptr<Rust::HIR::TypePathSegment, std::default_delete<Rust::HIR::TypePathSegment> > > >&, unsigned long, Rust::TyTy::BaseType*, Rust::Analysis::NodeMapping const&, Location)\r\n\t???:0\r\n0x93e7ac Rust::Resolver::TypeCheckType::visit(Rust::HIR::TypePath&)\r\n\t???:0\r\n0x90bbb0 Rust::Resolver::TypeCheckType::Resolve(Rust::HIR::Type*, std::vector<Rust::TyTy::SubstitutionParamMapping, std::allocator<Rust::TyTy::SubstitutionParamMapping> >*)\r\n\t???:0\r\n0x93fca2 Rust::Resolver::TypeCheckType::visit(Rust::HIR::ReferenceType&)\r\n\t???:0\r\n0x90bbb0 Rust::Resolver::TypeCheckType::Resolve(Rust::HIR::Type*, std::vector<Rust::TyTy::SubstitutionParamMapping, std::allocator<Rust::TyTy::SubstitutionParamMapping> >*)\r\n\t???:0\r\n0x90d936 Rust::Resolver::TypeCheckTopLevelImplItem::visit(Rust::HIR::Function&)\r\n\t???:0\r\n0x90c4e7 Rust::Resolver::TypeCheckTopLevel::visit(Rust::HIR::ImplBlock&)\r\n\t???:0\r\n0x8ff872 Rust::Resolver::TypeResolution::Resolve(Rust::HIR::Crate&)\r\n\t???:0\r\n0x8763bb Rust::Session::parse_file(char const*)\r\n\t???:0\r\n0x876f20 Rust::Session::parse_files(int, char const**)\r\n\t???:0\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nPlease include the complete backtrace with any bug report.\r\nSee <https://gcc.gnu.org/bugs/> for instructions.\r\nCompiler returned: 1\r\n```\r\n\r\n<!--\r\nInclude a backtrace if available.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n  <p>\r\n  \r\n  ```\r\n0x1e23409 internal_error(char const*, ...)\r\n\t???:0\r\n0x7bc05b fancy_abort(char const*, int, char const*)\r\n\t???:0\r\n0x93ed30 std::_Function_handler<bool (unsigned int, Rust::HIR::ImplItem*, Rust::HIR::ImplBlock*), Rust::Resolver::PathProbeType::process_impl_items_for_candidates()::{lambda(unsigned int, Rust::HIR::ImplItem*, Rust::HIR::ImplBlock*)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&, Rust::HIR::ImplItem*&&, Rust::HIR::ImplBlock*&&)\r\n\t???:0\r\n0x8baf0d Rust::Analysis::Mappings::iterate_impl_items(std::function<bool (unsigned int, Rust::HIR::ImplItem*, Rust::HIR::ImplBlock*)>)\r\n\t???:0\r\n0x93d01f Rust::Resolver::TypeCheckType::resolve_segments(unsigned int, unsigned int, std::vector<std::unique_ptr<Rust::HIR::TypePathSegment, std::default_delete<Rust::HIR::TypePathSegment> >, std::allocator<std::unique_ptr<Rust::HIR::TypePathSegment, std::default_delete<Rust::HIR::TypePathSegment> > > >&, unsigned long, Rust::TyTy::BaseType*, Rust::Analysis::NodeMapping const&, Location)\r\n\t???:0\r\n0x93e7ac Rust::Resolver::TypeCheckType::visit(Rust::HIR::TypePath&)\r\n\t???:0\r\n0x90bbb0 Rust::Resolver::TypeCheckType::Resolve(Rust::HIR::Type*, std::vector<Rust::TyTy::SubstitutionParamMapping, std::allocator<Rust::TyTy::SubstitutionParamMapping> >*)\r\n\t???:0\r\n0x93fca2 Rust::Resolver::TypeCheckType::visit(Rust::HIR::ReferenceType&)\r\n\t???:0\r\n0x90bbb0 Rust::Resolver::TypeCheckType::Resolve(Rust::HIR::Type*, std::vector<Rust::TyTy::SubstitutionParamMapping, std::allocator<Rust::TyTy::SubstitutionParamMapping> >*)\r\n\t???:0\r\n0x90d936 Rust::Resolver::TypeCheckTopLevelImplItem::visit(Rust::HIR::Function&)\r\n\t???:0\r\n0x90c4e7 Rust::Resolver::TypeCheckTopLevel::visit(Rust::HIR::ImplBlock&)\r\n\t???:0\r\n0x8ff872 Rust::Resolver::TypeResolution::Resolve(Rust::HIR::Crate&)\r\n\t???:0\r\n0x8763bb Rust::Session::parse_file(char const*)\r\n\t???:0\r\n0x876f20 Rust::Session::parse_files(int, char const**)\r\n\t???:0\r\n  ```\r\n  \r\n  </p>\r\n</details>\r\n", "closed_by": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/890/timeline", "performed_via_github_app": null, "state_reason": "completed"}