{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1141", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1141/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1141/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1141/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1141", "id": 1210317595, "node_id": "I_kwDOANBUbM5II_sb", "number": 1141, "title": "Macro invocations are not expanded in the `if` expressions", "user": {"login": "antego", "id": 1451467, "node_id": "MDQ6VXNlcjE0NTE0Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1451467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antego", "html_url": "https://github.com/antego", "followers_url": "https://api.github.com/users/antego/followers", "following_url": "https://api.github.com/users/antego/following{/other_user}", "gists_url": "https://api.github.com/users/antego/gists{/gist_id}", "starred_url": "https://api.github.com/users/antego/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antego/subscriptions", "organizations_url": "https://api.github.com/users/antego/orgs", "repos_url": "https://api.github.com/users/antego/repos", "events_url": "https://api.github.com/users/antego/events{/privacy}", "received_events_url": "https://api.github.com/users/antego/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-04-20T23:20:26Z", "updated_at": "2022-05-09T08:36:31Z", "closed_at": "2022-05-09T08:36:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Related to the #1119 \r\n\r\nLooks like the macro expansion works incorrectly in the comparison expressions and in the `if` expressions\r\n\r\nI tried this code:\r\n\r\n```rust\r\n  let res = \"test1\" == \"test1\";\r\n  if res {\r\n    print(0);\r\n  }\r\n  let res = (concat!(\"test2\") == \"test3\");\r\n  if res {\r\n    print(1);\r\n  }\r\n  if concat!(\"test2\") == \"test3\" {\r\n    print(2);\r\n  }\r\n```\r\n\r\nI expected the code to compile successfully. Instead, the compilation failed with the error:\r\n```\r\nfatal error: Failed to lower expr: [MacroInvocation:\r\n outer attributes: none\r\n concat!((\"test2\"))\r\n has semicolon: false]\r\ncompilation terminated.\r\n```\r\n\r\n### Meta\r\n\r\nFrom the zulip chat:\r\n\r\n```\r\n@antego:\r\nSome conclusions from the ast above:\r\n\r\nmacros are expanded outside of the if expressions, but they remove all other parts of the expression. concat!(\"test2\") == \"test3\" became just test2\r\nmacros are not expanded inside the if expressions, leading to the error\r\n\r\nQuestions:\r\n\r\nAre the above conclusions correct?\r\nAny hints about where to look next? I was planning to go through the code and find the place where the macro expansion is called and check how the expanded macro is handled for a simple expression vs if expression.\r\n\r\n@CohenArthur:\r\nMacro expansion is done in our attribute visitor, which you can find the implementation of in gcc/rust/expand/[rust-attribute-visitor.cc](http://rust-attribute-visitor.cc/). The code is a little bit hard to follow as it does a lof of in-place replacements of the expanded AST fragments (btw, we could probably think about splitting the attribute visitor and in-place expansion phase. Even though it might be a slowdown?).\r\n\r\nThe reason it crashes and you get the \"Couldn't lower expression\" error is that the macro fragment simply does not get used in the proper place. You can look at the visitor for AST::LetExpr values and see how you are supposed to expand an expression in-place.\r\n\r\nI've checked the code, and it hasn't been implemented for all AST::If{Expr, LetExpr...} nodes yet. You can probably do the same as a LetExpr and add tests to see your progress gradually.\r\n\r\nSo to answer your questions precisely:\r\n\r\na/ Yes and no! These are probably side-effects of the code just not existing yet. Sorry about that!\r\nb/ Yes! That's completely right\r\n\r\nThe rust-attribute-visitor.cc file is a good place to look at, and specifically LetExpr or ArithmeticExpr which do expression expansion :)\r\n```\r\n\r\n\r\n", "closed_by": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1141/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1141/timeline", "performed_via_github_app": null, "state_reason": "completed"}