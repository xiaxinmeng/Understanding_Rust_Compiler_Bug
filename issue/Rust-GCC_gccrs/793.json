{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/793", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/793/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/793/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/793/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/793", "id": 1044059487, "node_id": "I_kwDOANBUbM4-OxVf", "number": 793, "title": "GCCRS does not check integers for zero before division", "user": {"login": "Serentty", "id": 614548, "node_id": "MDQ6VXNlcjYxNDU0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/614548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serentty", "html_url": "https://github.com/Serentty", "followers_url": "https://api.github.com/users/Serentty/followers", "following_url": "https://api.github.com/users/Serentty/following{/other_user}", "gists_url": "https://api.github.com/users/Serentty/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serentty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serentty/subscriptions", "organizations_url": "https://api.github.com/users/Serentty/orgs", "repos_url": "https://api.github.com/users/Serentty/repos", "events_url": "https://api.github.com/users/Serentty/events{/privacy}", "received_events_url": "https://api.github.com/users/Serentty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-03T19:59:03Z", "updated_at": "2021-11-03T19:59:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As seen [here](https://godbolt.org/z/8qWjGndTM), when dividing a variable with a statically unknown value by itself, GCCRS generates an instruction to generate the statically known value `1`, based on the assumption that the denominator will not be zero.\r\n\r\n```assembly\r\n        mov     eax, 1\r\n        ret\r\n```\r\n\r\nHowever, this is not undefined behaviour in Rust, and should panic instead. The [Rust reference compiler ](https://godbolt.org/z/1E8n13vY3) version 1.56.0 (using the default LLVM backend) also avoids using a division instruction and generates a static `1` instead, but first checks to see if the denominator is zero.\r\n\r\n```assembly\r\n        test    rdi, rdi\r\n        je      .LBB0_2\r\n        mov     eax, 1\r\n        ret\r\n.LBB0_2:\r\n        push    rax\r\n        lea     rdi, [rip + str.0]\r\n        lea     rdx, [rip + .L__unnamed_1]\r\n        mov     esi, 25\r\n        call    qword ptr [rip + core::panicking::panic@GOTPCREL]\r\n        ud2\r\n ```\r\n \r\n The reference compiler also avoids this [when using the GCC backend](https://godbolt.org/z/xhzG8P5r8).\r\n \r\n ```assembly\r\n        test    rdi, rdi\r\n        je      .L14\r\n        mov     eax, 1\r\n        ret\r\n.L14:\r\n        push    rax\r\n        mov     rdx, QWORD PTR global_3_example_955dbcfe_cgu_0@GOTPCREL[rip]\r\n        mov     esi, 25\r\n        mov     rdi, QWORD PTR str.0@GOTPCREL[rip]\r\n        call    core::panicking::panic@PLT\r\n ```\r\n\r\nThe version of GCCRS being tested was `gcc version 12.0.0 20210917 (experimental) (Compiler-Explorer-Build-gcc-5f0df4812c37fc428b5508e019e9fb7f8a7b77b1-binutils-2.36.1)`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/793/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/793/timeline", "performed_via_github_app": null, "state_reason": null}