{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/195", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/195/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/195/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/195", "id": 795121089, "node_id": "MDU6SXNzdWU3OTUxMjEwODk=", "number": 195, "title": "Closure types", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372777, "node_id": "MDU6TGFiZWw2MTM3Mjc3Nw==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/12", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/12", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/12/labels", "id": 8516486, "node_id": "MI_kwDOANBUbM4AgfOG", "number": 12, "title": "Final upstream patches", "description": "", "creator": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 241, "state": "closed", "created_at": "2022-10-07T08:38:31Z", "updated_at": "2023-06-14T11:12:35Z", "due_on": "2023-04-30T07:00:00Z", "closed_at": "2023-05-10T08:27:18Z"}, "comments": 10, "created_at": "2021-01-27T13:53:50Z", "updated_at": "2022-12-04T22:36:59Z", "closed_at": "2022-12-04T22:36:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://doc.rust-lang.org/reference/types/closure.html\r\nhttps://doc.rust-lang.org/rust-by-example/fn/closures.html\r\nhttps://doc.rust-lang.org/nomicon/hrtb.html\r\n\r\nI think there is stuff in GCC we can take inspiration from the C++ implementation of closures for example:\r\n\r\n```c++\r\nint test() {\r\n    int capture = 456;\r\n    auto a = [&](int a) -> int {\r\n        return a + capture;\r\n    };\r\n    return a(123);\r\n}\r\n```\r\n\r\nwill give us\r\n\r\n```c\r\nint test ()\r\n{\r\n  int D.2400;\r\n  int capture;\r\n  struct ._anon_0 a;\r\n  typedef struct ._anon_0 ._anon_0;\r\n\r\n  try\r\n    {\r\n      capture = 456;\r\n      a.__capture = &capture;\r\n      D.2400 = test()::<lambda(int)>::operator() (&a, 123);\r\n      return D.2400;\r\n    }\r\n  finally\r\n    {\r\n      capture = {CLOBBER};\r\n      a = {CLOBBER};\r\n    }\r\n}\r\n\r\nint test()::<lambda(int)>::operator() (const struct ._anon_0 * const __closure, int a)\r\n{\r\n  int D.2403;\r\n  int & capture [value-expr: __closure->__capture];\r\n\r\n  _1 = __closure->__capture;\r\n  _2 = *_1;\r\n  D.2403 = a + _2;\r\n  return D.2403;\r\n}\r\n```\r\n\r\nThe task list breaks down into:\r\n\r\n- [x] Implement ClosureType for the type system\r\n- [x] name resolution to mark captured variables\r\n- [x] backend code generation to generate implicit struct for this closure type and take references, all with must me TREE_ADDRESSABLE \r\n- [x] generate new function body and take code address of it into the lamba implicit struct\r\n- [x] Support function lang-items https://github.com/rust-lang/rust/blob/7807a694c2f079fd3f395821bcc357eee8650071/library/core/src/ops/function.rs#L54-L71\r\n- [x] Investigate blocking unstable stuff in rustc https://github.com/rust-lang/rust/issues/29625\r\n- [x] rust-abi will convert variable number of arguments into a tuple \r\n\r\nI am currently blocked on this until we get lang-item support into the compiler from my operator overloading branch,", "closed_by": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/195/timeline", "performed_via_github_app": null, "state_reason": "completed"}