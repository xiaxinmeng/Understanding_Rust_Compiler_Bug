{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1714", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1714/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1714/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1714/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1714", "id": 1516494648, "node_id": "I_kwDOANBUbM5aY984", "number": 1714, "title": "Probably correct warning in rust-hir-type-check-expr.cc", "user": {"login": "jbglaw", "id": 7965297, "node_id": "MDQ6VXNlcjc5NjUyOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/7965297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbglaw", "html_url": "https://github.com/jbglaw", "followers_url": "https://api.github.com/users/jbglaw/followers", "following_url": "https://api.github.com/users/jbglaw/following{/other_user}", "gists_url": "https://api.github.com/users/jbglaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbglaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbglaw/subscriptions", "organizations_url": "https://api.github.com/users/jbglaw/orgs", "repos_url": "https://api.github.com/users/jbglaw/repos", "events_url": "https://api.github.com/users/jbglaw/events{/privacy}", "received_events_url": "https://api.github.com/users/jbglaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-02T15:11:39Z", "updated_at": "2023-01-06T13:26:28Z", "closed_at": "2023-01-06T13:10:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With my CI builds, using a fairly recent GCC as the host/build compiler (Debian's `gcc-snapshot` package, based on g:b65e391da94), I get this warning when building for `--target=x86_64-linux`, which seems correct (this is intentionally a `--enable-werror-always` build):\r\n\r\n```\r\n[all 2023-01-02 10:06:17] /usr/lib/gcc-snapshot/bin/g++ -std=c++11  -fno-PIE -c  -DIN_GCC_FRONTEND -g -O2   -DIN_GCC     -fno-exceptions -fno-rtti -fasynchronous-unwind-tables -W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual -Wmissing-format-attribute -Wconditionally-supported -Woverloaded-virtual -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings -Werror -Wno-unused-parameter -fno-common  -DHAVE_CONFIG_H -I. -Irust -I../../gcc/gcc -I../../gcc/gcc/rust -I../../gcc/gcc/../include -I../../gcc/gcc/../libcpp/include -I../../gcc/gcc/../libcody  -I../../gcc/gcc/../libdecnumber -I../../gcc/gcc/../libdecnumber/bid -I../libdecnumber -I../../gcc/gcc/../libbacktrace   -o rust/rust-hir-type-check-expr.o -MT rust/rust-hir-type-check-expr.o -MMD -MP -MF rust/.deps/rust-hir-type-check-expr.TPo -g -O2   -I ../../gcc/gcc/rust -I ../../gcc/gcc/rust/lex -I ../../gcc/gcc/rust/parse -I ../../gcc/gcc/rust/ast -I ../../gcc/gcc/rust/analysis -I ../../gcc/gcc/rust/backend -I ../../gcc/gcc/rust/expand -I ../../gcc/gcc/rust/hir/tree -I ../../gcc/gcc/rust/hir -I ../../gcc/gcc/rust/resolve -I ../../gcc/gcc/rust/util -I ../../gcc/gcc/rust/typecheck -I ../../gcc/gcc/rust/checks/lints -I ../../gcc/gcc/rust/checks/errors -I ../../gcc/gcc/rust/checks/errors/privacy -I ../../gcc/gcc/rust/util -I ../../gcc/gcc/rust/metadata ../../gcc/gcc/rust/typecheck/rust-hir-type-check-expr.cc\r\n[all 2023-01-02 10:06:24] ../../gcc/gcc/rust/typecheck/rust-hir-type-check-expr.cc: In member function 'virtual void Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::MethodCallExpr&)':\r\n[all 2023-01-02 10:06:24] ../../gcc/gcc/rust/typecheck/rust-hir-type-check-expr.cc:1060:25: error: possibly dangling reference to a temporary [-Werror=dangling-reference]\r\n[all 2023-01-02 10:06:24]  1060 |       HIR::GenericArgs &args = expr.get_method_name ().get_generic_args ();\r\n[all 2023-01-02 10:06:24]       |                         ^~~~\r\n[all 2023-01-02 10:06:24] ../../gcc/gcc/rust/typecheck/rust-hir-type-check-expr.cc:1060:73: note: the temporary was destroyed at the end of the full expression 'Rust::HIR::MethodCallExpr::get_method_name() const().Rust::HIR::PathExprSegment::get_generic_args()'\r\n[all 2023-01-02 10:06:24]  1060 |       HIR::GenericArgs &args = expr.get_method_name ().get_generic_args ();\r\n[all 2023-01-02 10:06:24]       |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\r\n[all 2023-01-02 10:06:47] cc1plus: all warnings being treated as errors\r\n[all 2023-01-02 10:06:47] make[1]: *** [../../gcc/gcc/rust/Make-lang.in:385: rust/rust-hir-type-check-expr.o] Error 1\r\n```\r\nThe `HIR::GenericArgs &args` reference should probably be a copy instead I guess:\r\n```\r\n1057   // apply any remaining generic arguments                                                                                                                                                \r\n1058   if (expr.get_method_name ().has_generic_args ())                                                                                                                                        \r\n1059     {                                                                                                                                                                                     \r\n1060       HIR::GenericArgs &args = expr.get_method_name ().get_generic_args ();                                                                                                               \r\n1061       lookup                                                                                                                                                                              \r\n1062         = SubstMapper::Resolve (lookup, expr.get_method_name ().get_locus (),                                                                                                             \r\n1063                                 &args);                                                                                                                                                   \r\n1064       if (lookup->get_kind () == TyTy::TypeKind::ERROR)                                                                                                                                   \r\n1065         return;                                                                                                                                                                           \r\n1066     }                                                                                                                                                                                     \r\n```\r\n\r\n(If a patch is applied here, I'll happily throw it into my CI builder and give it a run for all targets. May take a day or two as the box is heavily loaded and not the most recent hardware.)", "closed_by": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1714/timeline", "performed_via_github_app": null, "state_reason": "completed"}