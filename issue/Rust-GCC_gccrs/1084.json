{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1084", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1084/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1084/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1084/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1084", "id": 1193895482, "node_id": "I_kwDOANBUbM5HKWY6", "number": 1084, "title": "macros: Any macro in the return position will result in Rust GCC stuck", "user": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-04-06T01:25:34Z", "updated_at": "2022-07-22T09:55:10Z", "closed_at": "2022-07-22T09:55:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nmacro_rules! add {\r\n    ($a:expr) => { $a };\r\n    ($a:expr, $($b:expr),+) => { $a + add!($($b),*) }\r\n}\r\n\r\nfn test() -> i32 {\r\n    add!(add!(1, 2), add!(1, 2))\r\n}\r\n\r\nfn main() {\r\n    let _ = test();\r\n}\r\n```\r\n\r\nA reduced case for `gccrs`:\r\n\r\n```rust\r\nmacro_rules! add {\r\n    ($a:expr) => { $a };\r\n    ($a:expr, $($b:expr),+) => { $a + add!($($b),*) }\r\n}\r\n\r\nfn main() -> i32 {\r\n    add!(add!(1, 2))\r\n}\r\n```\r\n\r\nI expected to see this happen: `gccrs` should compile the code, and the generated program should run and exit with `6` (the reduced case should exit with `3`).\r\n\r\nInstead, this happened: `gccrs` stuck in an infinite loop in the macro expansion pass.\r\n\r\n### Stack Trace\r\n\r\n<details>\r\n<summary>Click to show detailed stack trace</summary>\r\n<p>\r\n\r\n```\r\n#0  0x00007ffff79cf4c4 in __memmove_avx_unaligned_erms () from /usr/lib/libc.so.6\r\n#1  0x00000000020f5731 in std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long) ()\r\n#2  0x00000000020e5f54 in std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) ()\r\n#3  0x0000000000934a03 in std::operator<< <std::char_traits<char> > (__c=<optimized out>, __out=...) at /usr/include/c++/11.2.0/ostream:518\r\n#4  expand_format (fmt=<optimized out>) at ../../gcc/rust/rust-diagnostics.cc:42\r\n#5  expand_message(const char *, typedef __va_list_tag __va_list_tag *) (fmt=<optimized out>, ap=0x7fffffffc788) at ../../gcc/rust/rust-diagnostics.cc:114\r\n#6  0x00000000009353b2 in Rust::Error::Error (this=this@entry=0x7fffffffc960, location=..., fmt=fmt@entry=0x2139080 \"unrecognised token %qs for start of %s\")\r\n    at ../../gcc/rust/rust-diagnostics.cc:239\r\n#7  0x0000000000a50d65 in Rust::Parser<Rust::MacroInvocLexer>::parse_item (this=0x7fffffffcb80, called_from_statement=called_from_statement@entry=true)\r\n    at ../../gcc/rust/parse/rust-parse-impl.h:1095\r\n#8  0x0000000000a059b9 in operator() (__closure=<optimized out>, __closure=<optimized out>) at ../../gcc/rust/expand/rust-macro-expand.cc:811\r\n#9  std::__invoke_impl<Rust::AST::SingleASTNode, Rust::transcribe_many_items(Rust::Parser<Rust::MacroInvocLexer>&, Rust::TokenId&)::<lambda()>&> (__f=...)\r\n    at /usr/include/c++/11.2.0/bits/invoke.h:61\r\n#10 std::__invoke_r<Rust::AST::SingleASTNode, Rust::transcribe_many_items(Rust::Parser<Rust::MacroInvocLexer>&, Rust::TokenId&)::<lambda()>&> (__fn=...)\r\n    at /usr/include/c++/11.2.0/bits/invoke.h:143\r\n#11 std::_Function_handler<Rust::AST::SingleASTNode(), Rust::transcribe_many_items(Rust::Parser<Rust::MacroInvocLexer>&, Rust::TokenId&)::<lambda()> >::_M_invoke(const std::_Any_data &) (\r\n    __functor=...) at /usr/include/c++/11.2.0/bits/std_function.h:292\r\n#12 0x00000000009fbed4 in std::function<Rust::AST::SingleASTNode ()>::operator()() const (this=0x7fffffffcc10) at /usr/include/c++/11.2.0/bits/std_function.h:560\r\n#13 Rust::parse_many(Rust::Parser<Rust::MacroInvocLexer> &, Rust::TokenId &, std::function<Rust::AST::SingleASTNode()>) (parser=..., delimiter=@0x7fffffffcab0: Rust::RIGHT_CURLY, \r\n    parse_fn=...) at ../../gcc/rust/expand/rust-macro-expand.cc:794\r\n#14 0x0000000000a041f3 in Rust::transcribe_many_stmts (delimiter=<optimized out>, parser=...) at ../../gcc/rust/expand/rust-macro-expand.cc:896\r\n#15 Rust::transcribe_on_delimiter (last_token_id=<optimized out>, delimiter=<optimized out>, semicolon=<optimized out>, parser=...) at ../../gcc/rust/expand/rust-macro-expand.cc:930\r\n#16 Rust::transcribe_context (last_token_id=<optimized out>, delimiter=<optimized out>, semicolon=false, parser=..., ctx=Rust::MacroExpander::ITEM)\r\n    at ../../gcc/rust/expand/rust-macro-expand.cc:978\r\n#17 Rust::MacroExpander::transcribe_rule (this=<optimized out>, match_rule=..., invoc_token_tree=..., matched_fragments=..., semicolon=<optimized out>, ctx=Rust::MacroExpander::ITEM)\r\n    at ../../gcc/rust/expand/rust-macro-expand.cc:1054\r\n#18 0x0000000000a07573 in Rust::MacroExpander::expand_decl_macro (this=0x7fffffffd100, invoc_locus=..., invoc=..., rules_def=..., semicolon=<optimized out>)\r\n    at ../../gcc/rust/expand/rust-macro-expand.cc:149\r\n#19 0x0000000000a078db in Rust::MacroExpander::expand_invoc (this=0x7fffffffd100, invoc=...) at ../../gcc/rust/expand/rust-macro-expand.cc:205\r\n#20 0x0000000000a56b75 in Rust::AttrVisitor::visit (this=0x7fffffffcfe0, expr=...) at ../../gcc/rust/expand/rust-attribute-visitor.cc:622\r\n#21 0x00000000009fc43f in Rust::MacroExpander::take_expanded_fragment (vis=..., this=0x7fffffffd100) at ../../gcc/rust/expand/rust-macro-expand.h:303\r\n#22 Rust::MacroExpander::expand_crate (this=this@entry=0x7fffffffd100) at ../../gcc/rust/expand/rust-macro-expand.cc:382\r\n#23 0x00000000009dc376 in Rust::Session::expansion (this=this@entry=0x2bf56c0 <Rust::Session::get_instance()::instance>, crate=...) at ../../gcc/rust/rust-session-manager.cc:831\r\n#24 0x00000000009e888a in Rust::Session::parse_file (this=this@entry=0x2bf56c0 <Rust::Session::get_instance()::instance>, filename=<optimized out>)\r\n    at ../../gcc/rust/rust-session-manager.cc:568\r\n#25 0x00000000009e8e31 in Rust::Session::parse_files (this=0x2bf56c0 <Rust::Session::get_instance()::instance>, num_files=1, files=<optimized out>)\r\n    at ../../gcc/rust/rust-session-manager.cc:484\r\n#26 0x00000000010a0dc1 in compile_file () at ../../gcc/toplev.cc:452\r\n#27 0x000000000092c96e in do_compile (no_backend=false) at ../../gcc/toplev.cc:2158\r\n#28 toplev::main (this=this@entry=0x7fffffffd876, argc=<optimized out>, argc@entry=6, argv=<optimized out>, argv@entry=0x7fffffffd9a8) at ../../gcc/toplev.cc:2310\r\n#29 0x000000000092e8ec in main (argc=6, argv=0x7fffffffd9a8) at ../../gcc/main.cc:39\r\n```\r\n</p>\r\n</details>\r\n\r\n### Meta\r\n\r\n- Rust GCC version: 9011184f38a04f81ba3194b826bec3f30a11c07b\r\n\r\n", "closed_by": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1084/timeline", "performed_via_github_app": null, "state_reason": "completed"}