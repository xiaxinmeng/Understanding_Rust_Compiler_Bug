{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1005", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1005/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1005/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1005/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1005", "id": 1165163672, "node_id": "I_kwDOANBUbM5FcvyY", "number": 1005, "title": "ICE in canonical path generation of slices", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/7", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/7", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/7/labels", "id": 6862692, "node_id": "MDk6TWlsZXN0b25lNjg2MjY5Mg==", "number": 7, "title": "Macro Expansion", "description": "The compiler needs to support macros which is likely 2-3 month effort", "creator": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 163, "state": "closed", "created_at": "2021-06-17T09:43:24Z", "updated_at": "2022-08-23T08:04:13Z", "due_on": "2022-03-28T07:00:00Z", "closed_at": "2022-03-31T10:49:54Z"}, "comments": 0, "created_at": "2022-03-10T12:30:44Z", "updated_at": "2022-03-11T10:39:21Z", "closed_at": "2022-03-11T10:39:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```rust\r\nextern \"rust-intrinsic\" {\r\n    pub fn abort() -> !;\r\n    pub fn offset<T>(dst: *const T, offset: isize) -> *const T;\r\n}\r\n\r\n#[lang = \"Range\"]\r\npub struct Range<Idx> {\r\n    pub start: Idx,\r\n    pub end: Idx,\r\n}\r\n\r\n#[lang = \"index\"]\r\ntrait Index<Idx> {\r\n    type Output;\r\n\r\n    fn index(&self, index: Idx) -> &Self::Output;\r\n}\r\n\r\npub unsafe trait SliceIndex<T> {\r\n    type Output;\r\n\r\n    unsafe fn get_unchecked(self, slice: *const T) -> *const Self::Output;\r\n\r\n    fn index(self, slice: &T) -> &Self::Output;\r\n}\r\n\r\nunion Repr<T> {\r\n    rust: *const [T],\r\n    rust_mut: *mut [T],\r\n    raw: FatPtr<T>,\r\n}\r\n\r\nstruct FatPtr<T> {\r\n    data: *const T,\r\n    len: usize,\r\n}\r\n\r\nimpl<T, I> Index<I> for [T]\r\nwhere\r\n    I: SliceIndex<[T]>,\r\n{\r\n    type Output = I::Output;\r\n\r\n    fn index(&self, index: I) -> &I::Output {\r\n        index.index(self)\r\n    }\r\n}\r\n\r\n#[lang = \"const_ptr\"]\r\nimpl<T> *const T {\r\n    pub const unsafe fn offset(self, count: isize) -> *const T {\r\n        unsafe { offset(self, count) }\r\n    }\r\n\r\n    pub const unsafe fn add(self, count: usize) -> Self {\r\n        unsafe { self.offset(count as isize) }\r\n    }\r\n\r\n    pub const fn as_ptr(self) -> *const T {\r\n        self as *const T\r\n    }\r\n}\r\n\r\n```\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. 77a49507446b67a6c207b4e4fec3639f536b9eca\r\n\r\n### Error output\r\n\r\n```\r\nrust1: internal compiler error: in append, at rust/util/rust-canonical-path.h:90\r\n```\r\n\r\n<!--\r\nInclude a backtrace if available.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n  <p>\r\n  \r\n  ```\r\nrust1: internal compiler error: in append, at rust/util/rust-canonical-path.h:90\r\n0x1202f00 Rust::Resolver::CanonicalPath::append(Rust::Resolver::CanonicalPath const&) const\r\n        ../../gccrs/gcc/rust/util/rust-canonical-path.h:90\r\n0xfba983 Rust::AST::InherentImpl::accept_vis(Rust::AST::ASTVisitor&)\r\n        ../../gccrs/gcc/rust/ast/rust-ast-full-test.cc:5470\r\n0x120138f Rust::Resolver::NameResolution::go(Rust::AST::Crate&)\r\n        ../../gccrs/gcc/rust/resolve/rust-ast-resolve.cc:382\r\n0x1201131 Rust::Resolver::NameResolution::Resolve(Rust::AST::Crate&)\r\n        ../../gccrs/gcc/rust/resolve/rust-ast-resolve.cc:352\r\n0x10aa15b Rust::Session::parse_file(char const*)\r\n        ../../gccrs/gcc/rust/rust-session-manager.cc:573\r\n0x10a9d7c Rust::Session::parse_files(int, char const**)\r\n        ../../gccrs/gcc/rust/rust-session-manager.cc:483\r\n0xf7225b grs_langhook_parse_file\r\n        ../../gccrs/gcc/rust/rust-lang.cc:171\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nPlease include the complete backtrace with any bug report.\r\nSee <https://gcc.gnu.org/bugs/> for instructions.\r\n[Inferior 1 (process 486858) exited with code 04]\r\n  ```\r\n  \r\n  </p>\r\n</details>\r\n", "closed_by": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1005/timeline", "performed_via_github_app": null, "state_reason": "completed"}