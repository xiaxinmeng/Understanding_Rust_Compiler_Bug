{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/389", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/389/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/389/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/389", "id": 867015626, "node_id": "MDU6SXNzdWU4NjcwMTU2MjY=", "number": 389, "title": "Mentions of go in rustspec.cc", "user": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-25T13:45:47Z", "updated_at": "2021-04-25T15:22:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "`go` and `libgo` are mentionned quite a lot in `rustspec.cc`, during argument parsing. I'd like to help in removing the unneeded references by giving them a more rust-related name or removing them if necesary.\r\nHere are a few snippets:\r\n```cpp\r\n  /* This is a tristate:\r\n     -1 means we should not link in libgo\r\n     0  means we should link in libgo if it is needed\r\n     1  means libgo is needed and should be linked in.\r\n     2  means libgo is needed and should be linked statically.  */\r\n  int library = 0;\r\n```\r\nIs this needed? There is currently no `librust`to link against. That tristate is used quite extensively in the rest of the file.\r\n\r\n```cpp\r\n  /* The first input file with an extension of .go.  */\r\n  const char *first_go_file = NULL;\r\n```\r\nReplacing the various references with `first_rust_file` and changing its behavior to refer to an `*.rs` argument does not change the behavior of gccrs, and the tests still pass. But I'm assuming that it is unneeded and I guess it can be removed.\r\n\r\n```cpp\r\n\tcase OPT_static_libgo:\r\n\t  library = library >= 0 ? 2 : library;\r\n\t  args[i] |= SKIPOPT;\r\n\t  break;\r\n```\r\nAgain, probably not in use right now.\r\n\r\nSome of the references to go in this file have already been commented", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/389/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/389/timeline", "performed_via_github_app": null, "state_reason": null}