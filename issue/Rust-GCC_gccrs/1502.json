{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1502", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1502/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1502/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1502/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1502", "id": 1349475461, "node_id": "I_kwDOANBUbM5Qb1yF", "number": 1502, "title": "Bad const error", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/10", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/10", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/10/labels", "id": 8145768, "node_id": "MI_kwDOANBUbM4AfEto", "number": 10, "title": "Basic const generics and missing features", "description": "", "creator": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 103, "state": "closed", "created_at": "2022-06-29T08:59:36Z", "updated_at": "2022-10-14T12:49:09Z", "due_on": "2022-10-17T07:00:00Z", "closed_at": "2022-10-14T12:49:09Z"}, "comments": 1, "created_at": "2022-08-24T13:44:34Z", "updated_at": "2022-08-24T13:49:38Z", "closed_at": "2022-08-24T13:49:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code: https://godbolt.org/z/79b8vf8Ks\r\n\r\n```rust\r\nmod intrinsics {\r\n    extern \"rust-intrinsic\" {\r\n        pub fn wrapping_add<T>(a: T, b: T) -> T;\r\n        pub fn rotate_left<T>(a: T, b: T) -> T;\r\n        pub fn rotate_right<T>(a: T, b: T) -> T;\r\n        pub fn offset<T>(ptr: *const T, count: isize) -> *const T;\r\n    }\r\n}\r\n\r\nmod mem {\r\n    extern \"rust-intrinsic\" {\r\n        fn transmute<T, U>(_: T) -> U;\r\n        fn size_of<T>() -> usize;\r\n    }\r\n}\r\n\r\nstruct FatPtr<T> {\r\n    data: *const T,\r\n    len: usize,\r\n}\r\n\r\nunion Repr<T> {\r\n    rust: *const [T],\r\n    rust_mut: *mut [T],\r\n    raw: FatPtr<T>,\r\n}\r\n\r\n#[lang = \"Range\"]\r\npub struct Range<Idx> {\r\n    pub start: Idx,\r\n    pub end: Idx,\r\n}\r\n\r\n#[lang = \"RangeTo\"]\r\npub struct RangeTo<Idx> {\r\n    pub end: Idx,\r\n}\r\n\r\npub enum Option<T> {\r\n    None,\r\n    Some(T),\r\n}\r\n\r\n#[lang = \"const_slice_ptr\"]\r\nimpl<T> *const [T] {\r\n    pub const fn len(self) -> usize {\r\n        unsafe { Repr { rust: self }.raw.len }\r\n    }\r\n\r\n    pub const fn as_ptr(self) -> *const T {\r\n        self as *const T\r\n    }\r\n}\r\n\r\n#[lang = \"const_ptr\"]\r\nimpl<T> *const T {\r\n    pub const unsafe fn offset(self, count: isize) -> *const T {\r\n        unsafe { offset(self, count) }\r\n    }\r\n\r\n    pub const unsafe fn add(self, count: usize) -> Self {\r\n        unsafe { self.offset(count as isize) }\r\n    }\r\n\r\n    pub const fn as_ptr(self) -> *const T {\r\n        self as *const T\r\n    }\r\n}\r\n\r\nconst fn slice_from_raw_parts<T>(data: *const T, len: usize) -> *const [T] {\r\n    unsafe {\r\n        Repr {\r\n            raw: FatPtr { data, len },\r\n        }\r\n        .rust\r\n    }\r\n}\r\n\r\npub unsafe trait SliceIndex<T> {\r\n    type Output;\r\n\r\n    fn get(self, slice: &T) -> Option<&Self::Output>;\r\n\r\n    unsafe fn get_unchecked(self, slice: *const T) -> *const Self::Output;\r\n\r\n    fn index(self, slice: &T) -> &Self::Output;\r\n}\r\n\r\nunsafe impl<T> SliceIndex<[T]> for Range<usize> {\r\n    type Output = [T];\r\n\r\n    fn get(self, slice: &[T]) -> Option<&[T]> {\r\n        (0..self.end).get(slice)\r\n    }\r\n\r\n    unsafe fn get_unchecked(self, slice: *const [T]) -> *const [T] {\r\n        // SAFETY: the caller has to uphold the safety contract for `get_unchecked`.\r\n        unsafe { (0..self.end).get_unchecked(slice) }\r\n    }\r\n\r\n    fn index(self, slice: &[T]) -> &[T] {\r\n        (0..self.end).index(slice)\r\n    }\r\n}\r\n\r\nunsafe impl<T> SliceIndex<[T]> for RangeTo<usize> {\r\n    type Output = [T];\r\n\r\n    fn get(self, slice: &[T]) -> Option<&[T]> {\r\n        (0..self.end).get(slice)\r\n    }\r\n\r\n    unsafe fn get_unchecked(self, slice: *const [T]) -> *const [T] {\r\n        // SAFETY: the caller has to uphold the safety contract for `get_unchecked`.\r\n        unsafe { (0..self.end).get_unchecked(slice) }\r\n    }\r\n\r\n    fn index(self, slice: &[T]) -> &[T] {\r\n        (0..self.end).index(slice)\r\n    }\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen: compile without error\r\n\r\nInstead, this happened: \r\n\r\n```\r\n<source>:58:18: error: only functions marked as 'const' are allowed to be called from constant contexts\r\n   58 |         unsafe { offset(self, count) }\r\n      |                  ^\r\n```\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. 4665766d3cc9854d1609b71f673e96e0a340805c\r\n\r\n\r\n", "closed_by": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1502/timeline", "performed_via_github_app": null, "state_reason": "completed"}