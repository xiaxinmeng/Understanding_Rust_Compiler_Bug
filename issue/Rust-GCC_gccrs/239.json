{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/239", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/239/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/239/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/239", "id": 809223525, "node_id": "MDU6SXNzdWU4MDkyMjM1MjU=", "number": 239, "title": "Memory leak from BaseType::unify", "user": {"login": "YizhePKU", "id": 42838469, "node_id": "MDQ6VXNlcjQyODM4NDY5", "avatar_url": "https://avatars.githubusercontent.com/u/42838469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YizhePKU", "html_url": "https://github.com/YizhePKU", "followers_url": "https://api.github.com/users/YizhePKU/followers", "following_url": "https://api.github.com/users/YizhePKU/following{/other_user}", "gists_url": "https://api.github.com/users/YizhePKU/gists{/gist_id}", "starred_url": "https://api.github.com/users/YizhePKU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YizhePKU/subscriptions", "organizations_url": "https://api.github.com/users/YizhePKU/orgs", "repos_url": "https://api.github.com/users/YizhePKU/repos", "events_url": "https://api.github.com/users/YizhePKU/events{/privacy}", "received_events_url": "https://api.github.com/users/YizhePKU/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 2642482874, "node_id": "MDU6TGFiZWwyNjQyNDgyODc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/cleanup", "name": "cleanup", "color": "E22959", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-02-16T11:18:32Z", "updated_at": "2022-01-17T12:09:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`BaseType::unify` returns a pointer to a newly-created `Ty` on the heap. The caller should be responsible for releasing the memory. As it is, many, many callers are not doing that.\r\n\r\nExample of a memory leak(rust-hir-type-check-item.h:58)\r\n```c++\r\n    auto result = TypeCheckExpr::Resolve (function.function_body.get (), false);\r\n    auto ret_resolved = expected_ret_tyty->unify (result);   // Memory is allocated here\r\n    if (ret_resolved == nullptr)\r\n      return;\r\n\r\n    context->peek_return_type ()->append_reference (ret_resolved->get_ref ());\r\n    context->pop_return_type ();\r\n\r\n}   // Pointer goes out of scope here\r\n```\r\n\r\n(Alas, we never worry about such issues in Rust)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/239/timeline", "performed_via_github_app": null, "state_reason": null}