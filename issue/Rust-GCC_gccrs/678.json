{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/678", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/678/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/678/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/678", "id": 996965028, "node_id": "I_kwDOANBUbM47bHqk", "number": 678, "title": "Crash in MethodCallExpr with Reference to TypeParameter", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/4", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/4", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/4/labels", "id": 6228199, "node_id": "MDk6TWlsZXN0b25lNjIyODE5OQ==", "number": 4, "title": "Data Structures 3 - Traits", "description": "This is a milestone target for preliminary support of traits which is going to depend on the work from generics. This is a complex task to get right. https://doc.rust-lang.org/rust-by-example/trait.html\r\n\r\nLifetime arguments may be ignored in this.", "creator": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 96, "state": "closed", "created_at": "2020-12-18T17:40:10Z", "updated_at": "2021-09-20T08:51:58Z", "due_on": "2021-08-27T07:00:00Z", "closed_at": "2021-09-20T08:51:58Z"}, "comments": 0, "created_at": "2021-09-15T11:21:24Z", "updated_at": "2021-09-15T15:56:07Z", "closed_at": "2021-09-15T15:56:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Code\r\n\r\n```rust\r\nextern \"C\" {\r\n    fn printf(s: *const i8, ...);\r\n}\r\n\r\nstruct Foo(i32);\r\ntrait Bar {\r\n    fn baz(&self);\r\n}\r\n\r\nimpl Bar for Foo {\r\n    fn baz(&self) {\r\n        unsafe {\r\n            let a = \"%i\\n\\0\";\r\n            let b = a as *const str;\r\n            let c = b as *const i8;\r\n\r\n            printf(c, self.0);\r\n        }\r\n    }\r\n}\r\n\r\nfn type_bound<T: Bar>(t: &T) {\r\n    t.baz();\r\n}\r\n\r\nfn main() {\r\n    let a = &Foo(123);\r\n\r\n    type_bound(a);\r\n}\r\n\r\n```\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. 4493f1c927c79e5b0933d26e9597044790c22f12\r\n\r\n### Error output\r\n\r\n```\r\nrust1: note: END POST-EXPANSION AST DUMP\r\ntest.rs:7:12: warning: unused name 'self'\r\n    7 |     fn baz(&self);\r\n      |            ^\r\ntest.rs:11:5: warning: unused name '<Foo as Bar>::baz'\r\n   11 |     fn baz(&self) {\r\n      |     ^\r\nrust1: internal compiler error: in visit, at rust/backend/rust-compile.cc:187\r\n```\r\n\r\n<!--\r\nInclude a backtrace if available.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n  <p>\r\n  \r\n  ```\r\nrust1: internal compiler error: in visit, at rust/backend/rust-compile.cc:187\r\n0x10181bd Rust::Compile::CompileExpr::visit(Rust::HIR::MethodCallExpr&)\r\n        ../../gccrs/gcc/rust/backend/rust-compile.cc:187\r\n0x10754fb Rust::HIR::MethodCallExpr::accept_vis(Rust::HIR::HIRVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:3927\r\n0x1021424 Rust::Compile::CompileExpr::Compile(Rust::HIR::Expr*, Rust::Compile::Context*)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.h:39\r\n0x10766d1 Rust::HIR::ExprStmtWithoutBlock::accept_vis(Rust::HIR::HIRVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:4425\r\n0x1019717 Rust::Compile::HIRCompileBase::compile_function_body(Bfunction*, std::unique_ptr<Rust::HIR::BlockExpr, std::default_delete<Rust::HIR::BlockExpr> >&, bool)\r\n        ../../gccrs/gcc/rust/backend/rust-compile.cc:493\r\n0x1075d83 Rust::HIR::Function::accept_vis(Rust::HIR::HIRVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:4173\r\n0x104c7a7 Rust::Compile::ResolvePathRef::query_compile(unsigned int, Rust::TyTy::BaseType*, Rust::HIR::PathIdentSegment const&, Rust::Analysis::NodeMapping const&, Location, bool)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-resolve-path.cc:122\r\n0x104c63c Rust::Compile::ResolvePathRef::resolve(Rust::HIR::PathIdentSegment const&, Rust::Analysis::NodeMapping const&, Location, bool)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-resolve-path.cc:103\r\n0x104c2d2 Rust::Compile::ResolvePathRef::visit(Rust::HIR::PathInExpression&)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-resolve-path.cc:39\r\n0x1074e39 Rust::HIR::PathInExpression::accept_vis(Rust::HIR::HIRVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:3741\r\n0x1074e39 Rust::HIR::PathInExpression::accept_vis(Rust::HIR::HIRVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:3741\r\n0x1021424 Rust::Compile::CompileExpr::Compile(Rust::HIR::Expr*, Rust::Compile::Context*)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.h:39\r\n0x1017a85 Rust::Compile::CompileExpr::visit(Rust::HIR::CallExpr&)\r\n        ../../gccrs/gcc/rust/backend/rust-compile.cc:89\r\n0x10754c3 Rust::HIR::CallExpr::accept_vis(Rust::HIR::HIRVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:3921\r\n0x1021424 Rust::Compile::CompileExpr::Compile(Rust::HIR::Expr*, Rust::Compile::Context*)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.h:39\r\n0x10766d1 Rust::HIR::ExprStmtWithoutBlock::accept_vis(Rust::HIR::HIRVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:4425\r\n0x1019717 Rust::Compile::HIRCompileBase::compile_function_body(Bfunction*, std::unique_ptr<Rust::HIR::BlockExpr, std::default_delete<Rust::HIR::BlockExpr> >&, bool)\r\n        ../../gccrs/gcc/rust/backend/rust-compile.cc:493\r\n0x1075d83 Rust::HIR::Function::accept_vis(Rust::HIR::HIRVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:4173\r\n0x1017751 Rust::Compile::CompileCrate::go()\r\n        ../../gccrs/gcc/rust/backend/rust-compile.cc:50\r\n0x10175d1 Rust::Compile::CompileCrate::Compile(Rust::HIR::Crate&, Rust::Compile::Context*)\r\n        ../../gccrs/gcc/rust/backend/rust-compile.cc:40\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nPlease include the complete backtrace with any bug report.\r\nSee <https://gcc.gnu.org/bugs/> for instructions.\r\n[Inferior 1 (process 300771) exited with code 04]\r\n  ```\r\n  \r\n  </p>\r\n</details>\r\n", "closed_by": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/678/timeline", "performed_via_github_app": null, "state_reason": "completed"}