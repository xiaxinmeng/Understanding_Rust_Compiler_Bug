{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1893", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1893/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1893/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1893/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1893", "id": 1593269810, "node_id": "I_kwDOANBUbM5e914y", "number": 1893, "title": "ICE Bad type error in iterator code", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/22", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/22", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/22/labels", "id": 9278274, "node_id": "MI_kwDOANBUbM4AjZNC", "number": 22, "title": "HIR Pipeline for libcore 1.49 Complete", "description": "Support all of the patterns and features used in libcore 1.49 at the HIR level: this includes, and isn't limited to, complex match patterns, inline assembly, some of the more complex type system features such as specialization, etc.", "creator": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "open_issues": 34, "closed_issues": 54, "state": "open", "created_at": "2023-04-13T08:17:13Z", "updated_at": "2023-06-20T19:14:22Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2023-02-21T11:00:48Z", "updated_at": "2023-06-14T11:12:35Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```rust\r\npub enum Option<T> {\r\n    None,\r\n    Some(T),\r\n}\r\n\r\npub enum Result<T, E> {\r\n    Ok(T),\r\n    Err(E),\r\n}\r\n\r\npub trait TryFrom<T> {\r\n    /// The type returned in the event of a conversion error.\r\n    type Error;\r\n\r\n    /// Performs the conversion.\r\n    fn try_from(value: T) -> Result<Self, Self::Error>;\r\n}\r\n\r\npub trait From<T> {\r\n    fn from(_: T) -> Self;\r\n}\r\n\r\nimpl<T> From<T> for T {\r\n    fn from(t: T) -> T {\r\n        t\r\n    }\r\n}\r\n\r\nimpl<T, U> TryFrom<U> for T\r\nwhere\r\n    T: From<U>,\r\n{\r\n    type Error = !;\r\n\r\n    fn try_from(value: U) -> Result<Self, Self::Error> {\r\n        Result::Ok(T::from(value))\r\n    }\r\n}\r\n\r\npub fn test(n: usize) {\r\n    let a = <usize>::try_from(n);\r\n}\r\n\r\n```\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. 87e7c9dedacd4d12636e6c626aab14bcecf686f2\r\n\r\n### Error output\r\n\r\n```\r\ntest.rs:44:45: note: fill_param_ty bounds_compatible: param T type usize\r\n   44 |     fn add_usize(&self, n: usize) -> Option<Self> {\r\n      |                                             ^~~~\r\nrust1: note: unify_site id={80} expected={usize} expr={T}\r\nrust1: note: unify::go ltype={usize} rtype={T}\r\ntest.rs:25:8: error: expected \u2018usize\u2019 got \u2018T\u2019\r\n   23 | impl<T, U> TryFrom<U> for T\r\n      |                           ~\r\n   24 | where\r\n   25 |     T: From<U>,\r\n      |        ^~~~\r\n......\r\n   45 |         match <usize>::try_from(n) {\r\n      |                ~~~~~\r\nrust1: internal compiler error: in setup_associated_types, at rust/typecheck/rust-hir-trait-resolve.cc:506\r\n```\r\n\r\n<!--\r\nInclude a backtrace if available.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n  <p>\r\n  \r\n  ```\r\nrust1: internal compiler error: in setup_associated_types, at rust/typecheck/rust-hir-trait-resolve.cc:506\r\n0x14b41f6 Rust::Resolver::AssociatedImplTrait::setup_associated_types(Rust::TyTy::BaseType const*, Rust::TyTy::TypeBoundPredicate const&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-trait-resolve.cc:506\r\n0x15034de Rust::Resolver::TypeCheckExpr::resolve_segments(unsigned int, std::vector<Rust::HIR::PathExprSegment, std::allocator<Rust::HIR::PathExprSegment> >&, unsigned long, Rust::TyTy::BaseType*, Rust::Analysis::NodeMapping const&, Location)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-path.cc:396\r\n0x1501c56 Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::QualifiedPathInExpression&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-path.cc:38\r\n0x137bc95 Rust::HIR::QualifiedPathInExpression::accept_vis(Rust::HIR::HIRExpressionVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:3787\r\n0x14d005b Rust::Resolver::TypeCheckExpr::Resolve(Rust::HIR::Expr*)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:42\r\n0x14d0a61 Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::CallExpr&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:179\r\n0x137e473 Rust::HIR::CallExpr::accept_vis(Rust::HIR::HIRExpressionVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:4891\r\n0x14d005b Rust::Resolver::TypeCheckExpr::Resolve(Rust::HIR::Expr*)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:42\r\n0x14d6471 Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::MatchExpr&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:1390\r\n0x137e2eb Rust::HIR::MatchExpr::accept_vis(Rust::HIR::HIRExpressionVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:4849\r\n0x14d005b Rust::Resolver::TypeCheckExpr::Resolve(Rust::HIR::Expr*)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:42\r\n0x14d2762 Rust::Resolver::TypeCheckExpr::visit(Rust::HIR::BlockExpr&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:561\r\n0x137eb79 Rust::HIR::BlockExpr::accept_vis(Rust::HIR::HIRExpressionVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:5083\r\n0x14d005b Rust::Resolver::TypeCheckExpr::Resolve(Rust::HIR::Expr*)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-expr.cc:42\r\n0x14decf9 Rust::Resolver::TypeCheckImplItem::visit(Rust::HIR::Function&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-implitem.cc:311\r\n0x137ec21 Rust::HIR::Function::accept_vis(Rust::HIR::HIRImplVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:5101\r\n0x14de12b Rust::Resolver::TypeCheckImplItem::Resolve(Rust::HIR::ImplBlock*, Rust::HIR::ImplItem*, Rust::TyTy::BaseType*, std::vector<Rust::TyTy::SubstitutionParamMapping, std::allocator<Rust::TyTy::SubstitutionParamMapping> >)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-implitem.cc:180\r\n0x14bec02 Rust::Resolver::TypeCheckItem::visit(Rust::HIR::ImplBlock&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-item.cc:341\r\n0x137eeb7 Rust::HIR::ImplBlock::accept_vis(Rust::HIR::HIRVisItemVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir.cc:5173\r\n0x14bc906 Rust::Resolver::TypeCheckItem::Resolve(Rust::HIR::Item&)\r\n        ../../gccrs/gcc/rust/typecheck/rust-hir-type-check-item.cc:49\r\n  ```\r\n  \r\n  </p>\r\n</details>\r\n", "closed_by": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1893/timeline", "performed_via_github_app": null, "state_reason": "reopened"}