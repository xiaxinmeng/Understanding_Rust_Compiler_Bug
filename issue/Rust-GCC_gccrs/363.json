{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/363", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/363/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/363/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/363", "id": 855170351, "node_id": "MDU6SXNzdWU4NTUxNzAzNTE=", "number": 363, "title": "Unexpected diagnostics with unused code pass (#330, #357)", "user": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-10T22:40:05Z", "updated_at": "2021-04-12T20:21:14Z", "closed_at": "2021-04-12T20:21:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The _unused code pass_ (#330, #357, @thomasyonug) seems to produce (a good number of?) unexpected diagnostics for our current testsuite.  Please correct me if I've misunderstood this, but for `rust.test/compile/block_expr2.rs`, for example, it prints:\r\n\r\n```\r\n[...]/gcc/testsuite/rust.test/compile/block_expr2.rs:1:1: warning: function is never used: `[test]`\r\n```\r\n\r\nThis doesn't seem correct as `test` is used in `let a = { test() };`.  Similar for other testcases; I haven't analyzed in detail.  Can we get this fixed easily, or should we otherwise temporarily disable these unexpected _function is never used_ diagnostics (possibly conditionally enabled by a default-off command-line flag)?\r\n\r\nThese diagnostics are \"conflicting\" with change that I'm working on: #362 \"[testsuite] Scan for warning diagnostics, too\".  (\"Conflicting\" in quotes as I might also match these with `dg-bogus`, XFAILed, but I'd like to avoid the overhead of adding all these directives.)", "closed_by": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/363/timeline", "performed_via_github_app": null, "state_reason": "completed"}