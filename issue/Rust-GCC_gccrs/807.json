{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/807", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/807/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/807/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/807/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/807", "id": 1054816015, "node_id": "I_kwDOANBUbM4-3zcP", "number": 807, "title": "Track mutability", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-11-16T12:22:06Z", "updated_at": "2022-02-07T11:14:19Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nuse std::ops::{Deref, DerefMut};\r\n\r\nstruct DerefMutExample<T> {\r\n    value: T\r\n}\r\n\r\nimpl<T> Deref for DerefMutExample<T> {\r\n    type Target = T;\r\n\r\n    fn deref(&self) -> &Self::Target {\r\n        println!(\"123\");\r\n        &self.value\r\n    }\r\n}\r\n\r\nimpl<T> DerefMut for DerefMutExample<T> {\r\n    fn deref_mut(&mut self) -> &mut Self::Target {\r\n        println!(\"456\");\r\n        &mut self.value\r\n    }\r\n}\r\n\r\npub fn main() {\r\n    let mut x = DerefMutExample { value: 'a' };\r\n    *x = 'b';\r\n    assert_eq!('b', *x);\r\n}\r\n```\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=5d497ace74bdccc069e01f8b9e8b3449\r\n\r\nThis shows that the deref assignment must take a mutable reference and currently even this simple example:\r\n\r\n```rust\r\npub fn main() {\r\n    let a = 123;\r\n    let b = &mut a;\r\n}\r\n```\r\nsee https://godbolt.org/z/4GYjoTxcT\r\n\r\nI expected to see this happen: error with:\r\n\r\n```\r\nerror[E0596]: cannot borrow `a` as mutable, as it is not declared as mutable\r\n --> <source>:3:13\r\n  |\r\n2 |     let a = 123;\r\n  |         - help: consider changing this to be mutable: `mut a`\r\n3 |     let b = &mut a;\r\n  |             ^^^^^^ cannot borrow as mutable\r\n```\r\n\r\nInstead, this happened: it compiled without error\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. This was in my operator overloading branch but we don't have any code to track mutability\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/807/timeline", "performed_via_github_app": null, "state_reason": null}