{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1420", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1420/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1420/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1420/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1420", "id": 1320082413, "node_id": "I_kwDOANBUbM5Ortvt", "number": 1420, "title": "Have error classes for simpler emission and more factoring", "user": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2029873897, "node_id": "MDU6TGFiZWwyMDI5ODczODk3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/plan", "name": "plan", "color": "42ed5c", "default": false, "description": ""}, {"id": 2551090364, "node_id": "MDU6TGFiZWwyNTUxMDkwMzY0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/GCC", "name": "GCC", "color": "d6d62c", "default": false, "description": ""}, {"id": 2628548177, "node_id": "MDU6TGFiZWwyNjI4NTQ4MTc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/diagnostic", "name": "diagnostic", "color": "9A6A99", "default": false, "description": "diagnostic static analysis"}, {"id": 2631474054, "node_id": "MDU6TGFiZWwyNjMxNDc0MDU0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/important", "name": "important", "color": "4C7A4D", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-07-27T20:21:18Z", "updated_at": "2022-08-03T09:11:06Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Something we might start to think about doing is for every error diagnostic have some kind of class for them all, so we can enforce good error messages so for example we might have:\r\n\r\nclass ErrorDiagnostics {\r\n  static void StaticMutableUnsafe(Location) { <standardized error message> }\r\n}\r\n\r\n_Originally posted by @philberty in https://github.com/Rust-GCC/gccrs/pull/1417#pullrequestreview-1052766761_\r\n\r\nI think a good interface would be the following:\r\n\r\n```c++\r\nclass Emittable {\r\n    Location locus;\r\n    std::string msg;\r\n    unsigned error_code;\r\n\r\n    void emit() {\r\n        rust_error_at(locus, msg); // or similar\r\n    }\r\n}\r\n\r\nclass ErrorStaticMutableUnsafe: public Emittable {\r\n    /* ... */\r\n}\r\n```\r\n\r\nI wonder if there is something we can do better with an `enum class` or similar", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1420/timeline", "performed_via_github_app": null, "state_reason": null}