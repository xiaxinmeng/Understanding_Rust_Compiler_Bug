{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1524", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1524/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1524/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1524/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1524", "id": 1361752912, "node_id": "I_kwDOANBUbM5RKrNQ", "number": 1524, "title": "ICE with Rustc testcase method-normalize-bounds-issue-20604.rs", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/12", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/12", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/12/labels", "id": 8516486, "node_id": "MI_kwDOANBUbM4AgfOG", "number": 12, "title": "Final upstream patches", "description": "", "creator": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 241, "state": "closed", "created_at": "2022-10-07T08:38:31Z", "updated_at": "2023-06-14T11:12:35Z", "due_on": "2023-04-30T07:00:00Z", "closed_at": "2023-05-10T08:27:18Z"}, "comments": 2, "created_at": "2022-09-05T10:52:02Z", "updated_at": "2023-03-03T20:22:20Z", "closed_at": "2023-03-03T20:22:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nTrying rustc test case https://github.com/rust-lang/rust/blob/673d0db5e393e9c64897005b470bfeb6d5aec61b/src/test/ui/methods/method-normalize-bounds-issue-20604.rs\r\n\r\n```rust\r\n// run-pass\r\n#![allow(dead_code)]\r\n#![allow(unused_variables)]\r\n#![allow(stable_features)]\r\n\r\n// Test that we handle projection types which wind up important for\r\n// resolving methods. This test was reduced from a larger example; the\r\n// call to `foo()` at the end was failing to resolve because the\r\n// winnowing stage of method resolution failed to handle an associated\r\n// type projection.\r\n\r\n// pretty-expanded FIXME #23616\r\n\r\n#![feature(associated_types)]\r\n\r\ntrait Hasher {\r\n    type Output;\r\n    fn finish(&self) -> Self::Output;\r\n}\r\n\r\ntrait Hash<H: Hasher> {\r\n    fn hash(&self, h: &mut H);\r\n}\r\n\r\ntrait HashState {\r\n    type Wut: Hasher;\r\n    fn hasher(&self) -> Self::Wut;\r\n}\r\n\r\nstruct SipHasher;\r\nimpl Hasher for SipHasher {\r\n    type Output = u64;\r\n    fn finish(&self) -> u64 { 4 }\r\n}\r\n\r\nimpl Hash<SipHasher> for isize {\r\n    fn hash(&self, h: &mut SipHasher) {}\r\n}\r\n\r\nstruct SipState;\r\nimpl HashState for SipState {\r\n    type Wut = SipHasher;\r\n    fn hasher(&self) -> SipHasher { SipHasher }\r\n}\r\n\r\nstruct Map<S> {\r\n    s: S,\r\n}\r\n\r\nimpl<S> Map<S>\r\n    where S: HashState,\r\n          <S as HashState>::Wut: Hasher<Output=u64>,\r\n{\r\n    fn foo<K>(&self, k: K) where K: Hash< <S as HashState>::Wut> {}\r\n}\r\n\r\nfn foo<K: Hash<SipHasher>>(map: &Map<SipState>) {\r\n    map.foo(22);\r\n}\r\n\r\nfn main() {}\r\n\r\n```\r\n\r\nsee: https://godbolt.org/z/Mx4MabzvT\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. 4f0a2729d78d77f14140531ca809d1c45311f0c9\r\n\r\n### Error output\r\n\r\n```\r\nrust1: internal compiler error: Segmentation fault\r\n```\r\n\r\n<!--\r\nInclude a backtrace if available.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n  <p>\r\n  \r\n  ```\r\n rust1: internal compiler error: Segmentation fault\r\n0x228353e internal_error(char const*, ...)\r\n\t???:0\r\n0xc6cd4c Rust::Resolver::ResolveRelativeQualTypePath::go(Rust::AST::QualifiedPathInType&)\r\n\t???:0\r\n0xc6cee1 Rust::Resolver::ResolveGenericArgs::resolve_disambiguated_generic(Rust::AST::GenericArg&)\r\n\t???:0\r\n0xc6d9ce Rust::Resolver::ResolveGenericArgs::go(Rust::AST::GenericArgs&, Rust::Resolver::CanonicalPath const&, Rust::Resolver::CanonicalPath const&)\r\n\t???:0\r\n0xc6da56 Rust::Resolver::ResolveGenericArgs::go(Rust::AST::GenericArgs&)\r\n\t???:0\r\n0xc6e2ce Rust::Resolver::ResolveRelativeTypePath::go(Rust::AST::TypePath&, unsigned int&)\r\n\t???:0\r\n0xc67f5e Rust::Resolver::ResolveTypeBound::visit(Rust::AST::TraitBound&)\r\n\t???:0\r\n0xc68047 Rust::Resolver::ResolveWhereClause::visit(Rust::AST::TypeBoundWhereClauseItem&)\r\n\t???:0\r\n0xc686df Rust::Resolver::ResolveWhereClause::Resolve(Rust::AST::WhereClause&)\r\n\t???:0\r\n0xc651ea Rust::Resolver::ResolveItem::visit(Rust::AST::Method&)\r\n\t???:0\r\n0xc5d651 Rust::Resolver::ResolveImplItems::go(Rust::AST::InherentImplItem*, Rust::Resolver::CanonicalPath const&, Rust::Resolver::CanonicalPath const&)\r\n\t???:0\r\n0xc660a8 Rust::Resolver::ResolveItem::visit(Rust::AST::InherentImpl&)\r\n\t???:0\r\n0xc5d567 Rust::Resolver::ResolveItem::go(Rust::AST::Item*, Rust::Resolver::CanonicalPath const&, Rust::Resolver::CanonicalPath const&)\r\n\t???:0\r\n0xc4d853 Rust::Resolver::NameResolution::go(Rust::AST::Crate&)\r\n\t???:0\r\n0xb5c8a1 Rust::Session::compile_crate(char const*)\r\n\t???:0\r\n0xb5d2ab Rust::Session::handle_input_files(int, char const**)\r\n\t???:0\r\nPlease submit a full bug report, with preprocessed source (by using -freport-bug).\r\nPlease include the complete backtrace with any bug report.\r\nSee <https://gcc.gnu.org/bugs/> for instructions.\r\nCompiler returned: 1\r\n  ```\r\n  \r\n  </p>\r\n</details>\r\n", "closed_by": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1524/timeline", "performed_via_github_app": null, "state_reason": "completed"}