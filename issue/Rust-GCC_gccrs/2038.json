{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2038", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2038/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2038/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2038/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/2038", "id": 1639741364, "node_id": "I_kwDOANBUbM5hvHe0", "number": 2038, "title": "Missing FFI type safety checks", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 2628548177, "node_id": "MDU6TGFiZWwyNjI4NTQ4MTc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/diagnostic", "name": "diagnostic", "color": "9A6A99", "default": false, "description": "diagnostic static analysis"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/22", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/22", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/22/labels", "id": 9278274, "node_id": "MI_kwDOANBUbM4AjZNC", "number": 22, "title": "HIR Pipeline for libcore 1.49 Complete", "description": "Support all of the patterns and features used in libcore 1.49 at the HIR level: this includes, and isn't limited to, complex match patterns, inline assembly, some of the more complex type system features such as specialization, etc.", "creator": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "open_issues": 34, "closed_issues": 54, "state": "open", "created_at": "2023-04-13T08:17:13Z", "updated_at": "2023-06-20T19:14:22Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2023-03-24T16:58:34Z", "updated_at": "2023-04-13T08:58:54Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code: https://github.com/rust-lang/rust/blob/aa3ca1994904f2e056679fce1f185db8c7ed2703/src/test/ui/issue-14309.rs\r\n\r\nhttps://godbolt.org/z/GjGG3jTh4\r\n\r\n```rust\r\nstruct A {\r\n    x: i32\r\n}\r\n\r\n#[repr(C, packed)]\r\nstruct B {\r\n    x: i32,\r\n    y: A\r\n}\r\n\r\n#[repr(C)]\r\nstruct C {\r\n    x: i32\r\n}\r\n\r\ntype A2 = A;\r\ntype B2 = B;\r\ntype C2 = C;\r\n\r\n#[repr(C)]\r\nstruct D {\r\n    x: C,\r\n    y: A\r\n}\r\n\r\nextern \"C\" {\r\n    fn foo(x: A); //~ ERROR type `A` which is not FFI-safe\r\n    fn bar(x: B); //~ ERROR type `A`\r\n    fn baz(x: C);\r\n    fn qux(x: A2); //~ ERROR type `A`\r\n    fn quux(x: B2); //~ ERROR type `A`\r\n    fn corge(x: C2);\r\n    fn fred(x: D); //~ ERROR type `A`\r\n}\r\n\r\nfn main() { }\r\n```\r\n\r\nI expected to see this happen: errors that type 'A' is not FFI-safe\r\n\r\nInstead, this happened: compile-without error\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. be27571c110d99fe55324a9c2b6622787b08fb52\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/2038/timeline", "performed_via_github_app": null, "state_reason": null}