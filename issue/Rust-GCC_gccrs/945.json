{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/945", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/945/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/945/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/945/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/945", "id": 1142623884, "node_id": "I_kwDOANBUbM5EGw6M", "number": 945, "title": "Store macro matchers properly", "user": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372777, "node_id": "MDU6TGFiZWw2MTM3Mjc3Nw==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-02-18T08:29:36Z", "updated_at": "2022-03-28T09:50:26Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "> When forwarding a matched fragment to another macro-by-example, matchers in the second macro will see an opaque AST of the fragment type. The second macro can't use literal tokens to match the fragments in the matcher, only a fragment specifier of the same type. The ident, lifetime, and tt fragment types are an exception, and can be matched by literal tokens. The following illustrates this restriction\r\n\r\n```rust\r\nmacro_rules! foo {\r\n    ($l:expr) => { bar!($l); }\r\n// ERROR:               ^^ no rules expected this token in macro call\r\n}\r\n\r\nmacro_rules! bar {\r\n    (3) => {}\r\n}\r\n\r\nfoo!(3);\r\n```\r\n\r\n> The following illustrates how tokens can be directly matched after matching a tt fragment:\r\n\r\n```rust\r\n// compiles OK\r\nmacro_rules! foo {\r\n    ($l:tt) => { bar!($l); }\r\n}\r\n\r\nmacro_rules! bar {\r\n    (3) => {}\r\n}\r\n\r\nfoo!(3);\r\n```\r\n\r\nFrom https://doc.rust-lang.org/reference/macros-by-example.html\r\n\r\n- [ ] We need to be able to store the macro matcher properly, either as an opaque `Expr` or equivalent or as a specific case\r\n- [ ] We need to be able to match recursively on `ident`, `lifetime` and `tt` fragments\r\n\r\n<details>\r\n<summary> Small resolver stress test </summary>\r\n\r\n```rust\r\nmacro_rules! foo0 {\r\n    ($a:tt) => {\r\n        foo1!($a)\r\n    }\r\n}\r\nmacro_rules! foo1 {\r\n    ($a:tt) => {\r\n        foo2!($a)\r\n    }\r\n}\r\nmacro_rules! foo2 {\r\n    ($a:tt) => {\r\n        foo3!($a)\r\n    }\r\n}\r\nmacro_rules! foo3 {\r\n    ($a:tt) => {\r\n        foo4!($a)\r\n    }\r\n}\r\nmacro_rules! foo4 {\r\n    ($a:tt) => {\r\n        foo5!($a)\r\n    }\r\n}\r\nmacro_rules! foo5 {\r\n    ($a:tt) => {\r\n        foo6!($a)\r\n    }\r\n}\r\nmacro_rules! foo6 {\r\n    ($a:tt) => {\r\n        foo7!($a)\r\n    }\r\n}\r\nmacro_rules! foo7 {\r\n    ($a:tt) => {\r\n        foo8!($a)\r\n    }\r\n}\r\nmacro_rules! foo8 {\r\n    ($a:tt) => {\r\n        foo9!($a)\r\n    }\r\n}\r\nmacro_rules! foo9 {\r\n    ($a:tt) => {\r\n        foo10!($a)\r\n    }\r\n}\r\nmacro_rules! foo10 {\r\n    ($a:tt) => {\r\n        foo11!($a)\r\n    }\r\n}\r\nmacro_rules! foo11 {\r\n    ($a:tt) => {\r\n        foo12!($a)\r\n    }\r\n}\r\nmacro_rules! foo12 {\r\n    ($a:tt) => {\r\n        foo13!($a)\r\n    }\r\n}\r\nmacro_rules! foo13 {\r\n    ($a:tt) => {\r\n        foo14!($a)\r\n    }\r\n}\r\nmacro_rules! foo14 {\r\n    ($a:tt) => {\r\n        foo15!($a)\r\n    }\r\n}\r\nmacro_rules! foo15 {\r\n    ($a:tt) => {\r\n        foo16!($a)\r\n    }\r\n}\r\nmacro_rules! foo16 {\r\n    ($a:tt) => {\r\n        foo17!($a)\r\n    }\r\n}\r\nmacro_rules! foo17 {\r\n    ($a:tt) => {\r\n        foo18!($a)\r\n    }\r\n}\r\nmacro_rules! foo18 {\r\n    ($a:tt) => {\r\n        foo19!($a)\r\n    }\r\n}\r\nmacro_rules! foo19 {\r\n    ($a:tt) => {\r\n        foo20!($a)\r\n    }\r\n}\r\nmacro_rules! foo20 {\r\n    ($a:tt) => {\r\n        foo21!($a)\r\n    }\r\n}\r\nmacro_rules! foo21 {\r\n    ($a:tt) => {\r\n        foo22!($a)\r\n    }\r\n}\r\nmacro_rules! foo22 {\r\n    ($a:tt) => {\r\n        foo23!($a)\r\n    }\r\n}\r\nmacro_rules! foo23 {\r\n    ($a:tt) => {\r\n        foo24!($a)\r\n    }\r\n}\r\nmacro_rules! foo24 {\r\n    ($a:tt) => {\r\n        foo25!($a)\r\n    }\r\n}\r\nmacro_rules! foo25 {\r\n    ($a:tt) => {\r\n        foo26!($a)\r\n    }\r\n}\r\nmacro_rules! foo26 {\r\n    ($a:tt) => {\r\n        foo27!($a)\r\n    }\r\n}\r\nmacro_rules! foo27 {\r\n    ($a:tt) => {\r\n        foo28!($a)\r\n    }\r\n}\r\nmacro_rules! foo28 {\r\n    ($a:tt) => {\r\n        foo29!($a)\r\n    }\r\n}\r\nmacro_rules! foo29 {\r\n    ($a:tt) => {\r\n        foo30!($a)\r\n    }\r\n}\r\nmacro_rules! foo30 {\r\n    ($a:tt) => {\r\n        foo31!($a)\r\n    }\r\n}\r\nmacro_rules! foo31 {\r\n    ($a:tt) => {\r\n        foo32!($a)\r\n    }\r\n}\r\nmacro_rules! foo32 {\r\n    ($a:tt) => {\r\n        foo33!($a)\r\n    }\r\n}\r\nmacro_rules! foo33 {\r\n    ($a:tt) => {\r\n        foo34!($a)\r\n    }\r\n}\r\nmacro_rules! foo34 {\r\n    ($a:tt) => {\r\n        foo35!($a)\r\n    }\r\n}\r\nmacro_rules! foo35 {\r\n    ($a:tt) => {\r\n        foo36!($a)\r\n    }\r\n}\r\nmacro_rules! foo36 {\r\n    ($a:tt) => {\r\n        foo37!($a)\r\n    }\r\n}\r\nmacro_rules! foo37 {\r\n    ($a:tt) => {\r\n        foo38!($a)\r\n    }\r\n}\r\nmacro_rules! foo38 {\r\n    ($a:tt) => {\r\n        foo39!($a)\r\n    }\r\n}\r\nmacro_rules! foo39 {\r\n    ($a:tt) => {\r\n        foo40!($a)\r\n    }\r\n}\r\nmacro_rules! foo40 {\r\n    ($a:tt) => {\r\n        foo41!($a)\r\n    }\r\n}\r\nmacro_rules! foo41 {\r\n    ($a:tt) => {\r\n        foo42!($a)\r\n    }\r\n}\r\nmacro_rules! foo42 {\r\n    ($a:tt) => {\r\n        foo43!($a)\r\n    }\r\n}\r\nmacro_rules! foo43 {\r\n    ($a:tt) => {\r\n        foo44!($a)\r\n    }\r\n}\r\nmacro_rules! foo44 {\r\n    ($a:tt) => {\r\n        foo45!($a)\r\n    }\r\n}\r\nmacro_rules! foo45 {\r\n    ($a:tt) => {\r\n        foo46!($a)\r\n    }\r\n}\r\nmacro_rules! foo46 {\r\n    ($a:tt) => {\r\n        foo47!($a)\r\n    }\r\n}\r\nmacro_rules! foo47 {\r\n    ($a:tt) => {\r\n        foo48!($a)\r\n    }\r\n}\r\nmacro_rules! foo48 {\r\n    ($a:tt) => {\r\n        foo49!($a)\r\n    }\r\n}\r\nmacro_rules! foo49 {\r\n    ($a:tt) => {\r\n        foo50!($a)\r\n    }\r\n}\r\nmacro_rules! foo50 {\r\n    ($a:tt) => {\r\n        foo51!($a)\r\n    }\r\n}\r\nmacro_rules! foo51 {\r\n    ($a:tt) => {\r\n        foo52!($a)\r\n    }\r\n}\r\nmacro_rules! foo52 {\r\n    ($a:tt) => {\r\n        foo53!($a)\r\n    }\r\n}\r\nmacro_rules! foo53 {\r\n    ($a:tt) => {\r\n        foo54!($a)\r\n    }\r\n}\r\nmacro_rules! foo54 {\r\n    ($a:tt) => {\r\n        foo55!($a)\r\n    }\r\n}\r\nmacro_rules! foo55 {\r\n    ($a:tt) => {\r\n        foo56!($a)\r\n    }\r\n}\r\nmacro_rules! foo56 {\r\n    ($a:tt) => {\r\n        foo57!($a)\r\n    }\r\n}\r\nmacro_rules! foo57 {\r\n    ($a:tt) => {\r\n        foo58!($a)\r\n    }\r\n}\r\nmacro_rules! foo58 {\r\n    ($a:tt) => {\r\n        foo59!($a)\r\n    }\r\n}\r\nmacro_rules! foo59 {\r\n    ($a:tt) => {\r\n        foo60!($a)\r\n    }\r\n}\r\nmacro_rules! foo60 {\r\n    ($a:tt) => {\r\n        foo61!($a)\r\n    }\r\n}\r\nmacro_rules! foo61 {\r\n    ($a:tt) => {\r\n        foo62!($a)\r\n    }\r\n}\r\nmacro_rules! foo62 {\r\n    ($a:tt) => {\r\n        foo63!($a)\r\n    }\r\n}\r\nmacro_rules! foo63 {\r\n    ($a:tt) => {\r\n        foo64!($a)\r\n    }\r\n}\r\nmacro_rules! foo64 {\r\n    ($a:tt) => {\r\n        foo65!($a)\r\n    }\r\n}\r\nmacro_rules! foo65 {\r\n    ($a:tt) => {\r\n        foo66!($a)\r\n    }\r\n}\r\nmacro_rules! foo66 {\r\n    ($a:tt) => {\r\n        foo67!($a)\r\n    }\r\n}\r\nmacro_rules! foo67 {\r\n    ($a:tt) => {\r\n        foo68!($a)\r\n    }\r\n}\r\nmacro_rules! foo68 {\r\n    ($a:tt) => {\r\n        foo69!($a)\r\n    }\r\n}\r\nmacro_rules! foo69 {\r\n    ($a:tt) => {\r\n        foo70!($a)\r\n    }\r\n}\r\nmacro_rules! foo70 {\r\n    ($a:tt) => {\r\n        foo71!($a)\r\n    }\r\n}\r\nmacro_rules! foo71 {\r\n    ($a:tt) => {\r\n        foo72!($a)\r\n    }\r\n}\r\nmacro_rules! foo72 {\r\n    ($a:tt) => {\r\n        foo73!($a)\r\n    }\r\n}\r\nmacro_rules! foo73 {\r\n    ($a:tt) => {\r\n        foo74!($a)\r\n    }\r\n}\r\nmacro_rules! foo74 {\r\n    ($a:tt) => {\r\n        foo75!($a)\r\n    }\r\n}\r\nmacro_rules! foo75 {\r\n    ($a:tt) => {\r\n        foo76!($a)\r\n    }\r\n}\r\nmacro_rules! foo76 {\r\n    ($a:tt) => {\r\n        foo77!($a)\r\n    }\r\n}\r\nmacro_rules! foo77 {\r\n    ($a:tt) => {\r\n        foo78!($a)\r\n    }\r\n}\r\nmacro_rules! foo78 {\r\n    ($a:tt) => {\r\n        foo79!($a)\r\n    }\r\n}\r\nmacro_rules! foo79 {\r\n    ($a:tt) => {\r\n        foo80!($a)\r\n    }\r\n}\r\nmacro_rules! foo80 {\r\n    ($a:tt) => {\r\n        foo81!($a)\r\n    }\r\n}\r\nmacro_rules! foo81 {\r\n    ($a:tt) => {\r\n        foo82!($a)\r\n    }\r\n}\r\nmacro_rules! foo82 {\r\n    ($a:tt) => {\r\n        foo83!($a)\r\n    }\r\n}\r\nmacro_rules! foo83 {\r\n    ($a:tt) => {\r\n        foo84!($a)\r\n    }\r\n}\r\nmacro_rules! foo84 {\r\n    ($a:tt) => {\r\n        foo85!($a)\r\n    }\r\n}\r\nmacro_rules! foo85 {\r\n    ($a:tt) => {\r\n        foo86!($a)\r\n    }\r\n}\r\nmacro_rules! foo86 {\r\n    ($a:tt) => {\r\n        foo87!($a)\r\n    }\r\n}\r\nmacro_rules! foo87 {\r\n    ($a:tt) => {\r\n        foo88!($a)\r\n    }\r\n}\r\nmacro_rules! foo88 {\r\n    ($a:tt) => {\r\n        foo89!($a)\r\n    }\r\n}\r\nmacro_rules! foo89 {\r\n    ($a:tt) => {\r\n        last!($a)\r\n    }\r\n}\r\n\r\nmacro_rules! last {\r\n    (3) => {\r\n        println!(\"fizz\")\r\n    };\r\n    (5) => {\r\n        println!(\"buzz\")\r\n    };\r\n    ($any:tt) => {\r\n        println!(\" :) \")\r\n    }\r\n}\r\n\r\nfn main() {\r\n    foo0!(3);\r\n    foo0!(5);\r\n    foo0!(6);\r\n}\r\n```\r\n</details>", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/945/timeline", "performed_via_github_app": null, "state_reason": null}