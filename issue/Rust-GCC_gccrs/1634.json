{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1634", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1634/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1634/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1634/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1634", "id": 1443937754, "node_id": "I_kwDOANBUbM5WEL3a", "number": 1634, "title": "Better distinguish between user-level errors and internal (consistency etc.) checks", "user": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2591793259, "node_id": "MDU6TGFiZWwyNTkxNzkzMjU5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/good-first-pr", "name": "good-first-pr", "color": "A9A76D", "default": false, "description": ""}, {"id": 4533708765, "node_id": "LA_kwDOANBUbM8AAAABDjrn3Q", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/upstream", "name": "upstream", "color": "25B46F", "default": false, "description": "Issue regarding upstreaming gccrs into GCC"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/19", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/19", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/19/labels", "id": 9278263, "node_id": "MI_kwDOANBUbM4AjZM3", "number": 19, "title": "GCC 13.2 release", "description": "This milestone concerns all of the issues we'd like to take care of before upstreaming code for the GCC 13.2 release. This milestone should be focused on compiling libcore in the hope to distribute it in GCC for the 13.2 release. Importantly, this is different from supporting libcore 1.49: libcore needs certain features to compile, such as for loops or inline assembly (as it uses some in a decimal to float algorithm), so to first compile libcore we must implement these features. A second milestone targets what libcore offers, such as all of the compiler intrinsic functions.", "creator": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "open_issues": 17, "closed_issues": 9, "state": "open", "created_at": "2023-04-13T08:14:54Z", "updated_at": "2023-06-19T08:31:03Z", "due_on": "2023-07-15T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2022-11-10T13:45:42Z", "updated_at": "2023-04-13T09:08:06Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I thought we had an issue open for that already, but I can't find any.\r\n\r\n---\r\n\r\nWe already discussed this a year ago, <https://hackmd.io/GhC6flQqQNOYzzz3Vq7ufg#Better-distinguish-between-user-level-errors-and-internal-consistency-etc-checks> \"GCC Rust Meeting 2021-11-05\":\r\n\r\n> Better distinguish between user-level errors and internal (consistency etc.) checks.\r\n> \r\n> Use `rust_error_at` etc. for the former (and test cases!), and `rust_assert`/`rust_internal_error` for the latter. This will help cleanup the code over time to distingush internal errors vs program errors.\r\n\r\n---\r\n\r\nThis has now come up again in review of <https://inbox.sourceware.org/gcc-patches/CAFiYyc0epcVg7B+xq_hac7TUgO8eBJAWM4d6+ZFo1QZrCYidEQ@mail.gmail.com> \"[PATCH Rust front-end v3 15/46] gccrs: Add expansion pass for the Rust front-end\" by @rguenth:\r\n\r\n> [...] I wondered whether rust_error_at are user-facing diagnostics or internal errors?\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1634/timeline", "performed_via_github_app": null, "state_reason": null}