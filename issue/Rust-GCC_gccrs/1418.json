{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1418", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1418/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1418/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1418/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1418", "id": 1319616495, "node_id": "I_kwDOANBUbM5Op7_v", "number": 1418, "title": "Add checks for constant evaluation", "user": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372777, "node_id": "MDU6TGFiZWw2MTM3Mjc3Nw==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/22", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/22", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/22/labels", "id": 9278274, "node_id": "MI_kwDOANBUbM4AjZNC", "number": 22, "title": "HIR Pipeline for libcore 1.49 Complete", "description": "Support all of the patterns and features used in libcore 1.49 at the HIR level: this includes, and isn't limited to, complex match patterns, inline assembly, some of the more complex type system features such as specialization, etc.", "creator": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "open_issues": 34, "closed_issues": 54, "state": "open", "created_at": "2023-04-13T08:17:13Z", "updated_at": "2023-06-20T19:14:22Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2022-07-27T14:03:44Z", "updated_at": "2023-04-13T08:58:40Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Handle all const contexts properly:\r\n\r\n- [x] [Array type length expressions](https://doc.rust-lang.org/reference/types/array.html)\r\n- [x] [Array repeat length expressions](https://doc.rust-lang.org/reference/expressions/array-expr.html)\r\n- [x] [constants](https://doc.rust-lang.org/reference/items/constant-items.html)\r\n- [x] [statics](https://doc.rust-lang.org/reference/items/static-items.html)\r\n- [x] [enum discriminants](https://doc.rust-lang.org/reference/items/enumerations.html#custom-discriminant-values-for-fieldless-enumerations)\r\n- [ ] [const generic arguments](https://doc.rust-lang.org/reference/items/generics.html#const-generics)\r\n\r\nHandle allowed subset properly in const contexts:\r\n- [x] [Literals](https://doc.rust-lang.org/reference/expressions/literal-expr.html).\r\n- [x] [Const parameters](https://doc.rust-lang.org/reference/items/generics.html).\r\n- [ ] [Paths](https://doc.rust-lang.org/reference/expressions/path-expr.html) to [functions](https://doc.rust-lang.org/reference/items/functions.html) and [constants](https://doc.rust-lang.org/reference/items/constant-items.html). Recursively defining constants is not allowed.\r\n- [ ] Paths to [statics](https://doc.rust-lang.org/reference/items/static-items.html). These are only allowed within the initializer of a static.\r\n- [x] [Tuple expressions](https://doc.rust-lang.org/reference/expressions/tuple-expr.html).\r\n- [x] [Array expressions](https://doc.rust-lang.org/reference/expressions/array-expr.html).\r\n- [x] [Struct](https://doc.rust-lang.org/reference/expressions/struct-expr.html) expressions.\r\n- [x] [Block expressions](https://doc.rust-lang.org/reference/expressions/block-expr.html), including unsafe blocks.\r\n- [x] [let statements](https://doc.rust-lang.org/reference/statements.html#let-statements) and thus irrefutable [patterns](https://doc.rust-lang.org/reference/patterns.html), including mutable bindings\r\n- [x] [assignment expressions](https://doc.rust-lang.org/reference/expressions/operator-expr.html#assignment-expressions)\r\n- [x] [compound assignment expressions](https://doc.rust-lang.org/reference/expressions/operator-expr.html#compound-assignment-expressions)\r\n- [x] [expression statements](https://doc.rust-lang.org/reference/statements.html#expression-statements)\r\n- [x] [Field](https://doc.rust-lang.org/reference/expressions/field-expr.html) expressions.\r\n- [ ] Index expressions, [array indexing](https://doc.rust-lang.org/reference/expressions/array-expr.html#array-and-slice-indexing-expressions) or [slice](https://doc.rust-lang.org/reference/types/slice.html) with a usize.\r\n- [x] [Range expressions](https://doc.rust-lang.org/reference/expressions/range-expr.html).\r\n- [ ] [Closure expressions](https://doc.rust-lang.org/reference/expressions/closure-expr.html) which don't capture variables from the environment.\r\n- [ ] Built-in [negation](https://doc.rust-lang.org/reference/expressions/operator-expr.html#negation-operators), [arithmetic](https://doc.rust-lang.org/reference/expressions/operator-expr.html#arithmetic-and-logical-binary-operators), [logical](https://doc.rust-lang.org/reference/expressions/operator-expr.html#arithmetic-and-logical-binary-operators), [comparison](https://doc.rust-lang.org/reference/expressions/operator-expr.html#comparison-operators) or [lazy boolean](https://doc.rust-lang.org/reference/expressions/operator-expr.html#lazy-boolean-operators) operators used on integer and floating point types, bool, and char.\r\n- [ ] Shared [borrow](https://doc.rust-lang.org/reference/expressions/operator-expr.html#borrow-operators)s, except if applied to a type with [interior mutability](https://doc.rust-lang.org/reference/interior-mutability.html).\r\n- [x] The [dereference operator](https://doc.rust-lang.org/reference/expressions/operator-expr.html#the-dereference-operator) except for raw pointers.\r\n- [x] [Grouped](https://doc.rust-lang.org/reference/expressions/grouped-expr.html) expressions.\r\n- [x] [Cast](https://doc.rust-lang.org/reference/expressions/operator-expr.html#type-cast-expressions) expressions, except\r\n- [ ] pointer to address casts,\r\n- [ ] function pointer to address casts, and\r\n- [ ] unsizing casts to trait objects.\r\n- [x] Calls of [const functions](https://doc.rust-lang.org/reference/items/functions.html#const-functions) and const methods.\r\n- [x] [loop](https://doc.rust-lang.org/reference/expressions/loop-expr.html#infinite-loops), [while](https://doc.rust-lang.org/reference/expressions/loop-expr.html#predicate-loops) and [while let](https://doc.rust-lang.org/reference/expressions/loop-expr.html#predicate-pattern-loops) expressions.\r\n- [x] [if](https://doc.rust-lang.org/reference/expressions/if-expr.html#if-expressions), [if let](https://doc.rust-lang.org/reference/expressions/if-expr.html#if-let-expressions) and [match](https://doc.rust-lang.org/reference/expressions/match-expr.html) expressions.\r\n- [x] #1552 ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1418/timeline", "performed_via_github_app": null, "state_reason": null}