{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/556", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/556/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/556/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/556", "id": 938684207, "node_id": "MDU6SXNzdWU5Mzg2ODQyMDc=", "number": 556, "title": "gccrs cannot generate ET_DYN executables", "user": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 2551090364, "node_id": "MDU6TGFiZWwyNTUxMDkwMzY0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/GCC", "name": "GCC", "color": "d6d62c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2021-07-07T09:26:07Z", "updated_at": "2021-07-09T12:57:11Z", "closed_at": "2021-07-09T12:57:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```c\r\nint main(void)\r\n{\r\n    return 0;\r\n}\r\n```\r\n\r\nCompiled with `-fPIC`\r\n\r\nI expected `gccrs` to produce an executable with an elf type value of `ET_DYN`.\r\n\r\nThis is what my system's `gcc` does, and this is necessary for compiling executables that are similar to what `rustc` produces.\r\n\r\nI have compiled `gccrs` with the C language enabled.\r\n\r\n```sh\r\n~/G/cargo-gccrs (check-correct-filetype|\u271a2\u2026) $ cc -fPIC main.c -o main # cc is a symlink to my system's gcc, /usr/bin/gcc\r\n~/G/cargo-gccrs (check-correct-filetype|\u271a2\u2026) $ readelf -h main\r\nELF Header:\r\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00\r\n  Class:                             ELF64\r\n  Data:                              2's complement, little endian\r\n  Version:                           1 (current)\r\n  OS/ABI:                            UNIX - System V\r\n  ABI Version:                       0\r\n  Type:                              DYN (Shared object file) # Note the e_type value here\r\n  Machine:                           Advanced Micro Devices X86-64\r\n  Version:                           0x1\r\n  Entry point address:               0x1020\r\n  Start of program headers:          64 (bytes into file)\r\n  Start of section headers:          14104 (bytes into file)\r\n  Flags:                             0x0\r\n  Size of this header:               64 (bytes)\r\n  Size of program headers:           56 (bytes)\r\n  Number of program headers:         13\r\n  Size of section headers:           64 (bytes)\r\n  Number of section headers:         28\r\n  Section header string table index: 27\r\n```\r\n\r\nInstead, this happened:\r\n\r\n```sh\r\n~/G/cargo-gccrs (check-correct-filetype|\u271a2\u2026) $ gccrs -fPIC main.c -o main\r\n~/G/cargo-gccrs (check-correct-filetype|\u271a2\u2026) $ readelf -h main\r\nELF Header:\r\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00\r\n  Class:                             ELF64\r\n  Data:                              2's complement, little endian\r\n  Version:                           1 (current)\r\n  OS/ABI:                            UNIX - System V\r\n  ABI Version:                       0\r\n  Type:                              EXEC (Executable file) # Note ET_EXEC instead of ET_DYN\r\n  Machine:                           Advanced Micro Devices X86-64\r\n  Version:                           0x1\r\n  Entry point address:               0x401140\r\n  Start of program headers:          64 (bytes into file)\r\n  Start of section headers:          47560 (bytes into file)\r\n  Flags:                             0x0\r\n  Size of this header:               64 (bytes)\r\n  Size of program headers:           56 (bytes)\r\n  Number of program headers:         14\r\n  Size of section headers:           64 (bytes)\r\n  Number of section headers:         41\r\n  Section header string table index: 40\r\n  ```\r\n  \r\nThe behavior is similar when trying to create a Position Independant Executable with `-fPIE`.\r\n  \r\nThe example provided is using C, but the behavior is similar in Rust. This is simply to get a more accurate comparison.\r\n`rustc` produces executables that are always position independant (Thanks @bjorn3 for [the information](https://github.com/Rust-GCC/cargo-gccrs/issues/35#issuecomment-875371170)), which is a behavior that we might want to reproduce with `gccrs`.\r\n\r\n### Meta\r\n\r\nAccording to @philberty's research when debugging me, this has been happening for a while.\r\nMy `gccrs` version is `gcc version 11.0.1 20210325 (experimental) (GCC)`\r\n\r\n\r\n", "closed_by": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/556/timeline", "performed_via_github_app": null, "state_reason": "completed"}