{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1523", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1523/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1523/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1523/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1523", "id": 1361619566, "node_id": "I_kwDOANBUbM5RKKpu", "number": 1523, "title": "backend: incorrect code optimization on while loops", "user": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-09-05T08:56:59Z", "updated_at": "2022-09-08T00:39:31Z", "closed_at": "2022-09-08T00:39:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code with `-O3`:\r\n\r\n```rust\r\n// adapted from https://github.com/rust-lang/rust/blob/master/src/test/ui/consts/const-eval/infinite_loop.rs\r\npub const fn test() -> u64 {\r\n    let mut n = 113383; // #20 in https://oeis.org/A006884\r\n    while n != 1 {\r\n        n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\r\n    }\r\n    n\r\n}\r\n\r\npub const fn test_1() -> u64 {\r\n    test()\r\n}\r\n```\r\n\r\nI expected to see this happen: The function `test_1` returns `1`.\r\n\r\nInstead, this happened: The function `test_1` returns `113383`.\r\n\r\n(tree dump from phase `ccp1-raw`):\r\n\r\n```c\r\n;; Function const_eval_oeis_a006884::test (_ZN23const_eval_oeis_a0068844test17h64d1733dc533ef5cE, funcdef_no=0, decl_uid=74, cgraph_uid=1, symbol_order=0)\r\n\r\nFolding predicate 1 != 0 to 1\r\nRemoving basic block 4\r\nRemoving basic block 5\r\nRemoving basic block 6\r\nRemoving basic block 7\r\nMerging blocks 2 and 3\r\nMerging blocks 2 and 8\r\n__attribute__((cdecl))\r\nu64 const_eval_oeis_a006884::test ()\r\n{\r\n  u64 n;\r\n\r\n  <bb 2> :\r\n  gimple_return <113383>\r\n\r\n}\r\n\r\n\r\n\r\n;; Function const_eval_oeis_a006884::test_1 (_ZN23const_eval_oeis_a0068846test_117h64d1733dc533ef5cE, funcdef_no=1, decl_uid=97, cgraph_uid=2, symbol_order=1)\r\n\r\n__attribute__((cdecl))\r\nu64 const_eval_oeis_a006884::test_1 ()\r\n{\r\n  u64 _1;\r\n\r\n  <bb 2> :\r\n  gimple_call <const_eval_oeis_a006884::test, _1>\r\n  gimple_return <_1>\r\n\r\n}\r\n```\r\n\r\nAs you can see, the constant evaluator, for some reason, believes the function should return `113383`, which is impossible in this case (it should return `1`, which is dictated by the end condition for that while loop).\r\n\r\nTo verify if this is caused by GCC's middle-end or backend, I made an equivalent code in C++:\r\n\r\n```cpp\r\nconstexpr int test() {\r\n  int n = 113383;\r\n  while (n != 1) {\r\n    if (n % 2 == 0) {\r\n      n /= 2;\r\n    } else {\r\n      n = n * 3 + 1;\r\n    }\r\n  }\r\n  return n;\r\n}\r\n\r\nint test_1() {\r\n  return test();\r\n}\r\n```\r\n\r\nWhen dumping the tree from the same pass:\r\n\r\n```c\r\n\r\n;; Function test (_Z4testv, funcdef_no=0, decl_uid=2368, cgraph_uid=1, symbol_order=0)\r\n\r\nint test ()\r\n{\r\n  int n;\r\n  unsigned int n.0_1;\r\n  unsigned int _2;\r\n  int _3;\r\n  int _6;\r\n\r\n  <bb 2> :\r\n  # DEBUG BEGIN_STMT\r\n  # DEBUG n => 113383\r\n  # DEBUG BEGIN_STMT\r\n  goto <bb 6>; [INV]\r\n\r\n  <bb 3> :\r\n  # DEBUG BEGIN_STMT\r\n  n.0_1 = (unsigned int) n_4;\r\n  _2 = n.0_1 & 1;\r\n  if (_2 == 0)\r\n    goto <bb 4>; [INV]\r\n  else\r\n    goto <bb 5>; [INV]\r\n\r\n  <bb 4> :\r\n  # DEBUG BEGIN_STMT\r\n  n_9 = n_4 / 2;\r\n  # DEBUG n => n_9\r\n  goto <bb 6>; [INV]\r\n\r\n  <bb 5> :\r\n  # DEBUG BEGIN_STMT\r\n  _3 = n_4 * 3;\r\n  n_8 = _3 + 1;\r\n  # DEBUG n => n_8\r\n\r\n  <bb 6> :\r\n  # n_4 = PHI <113383(2), n_9(4), n_8(5)>\r\n  # DEBUG n => n_4\r\n  # DEBUG BEGIN_STMT\r\n  if (n_4 != 1)\r\n    goto <bb 3>; [INV]\r\n  else\r\n    goto <bb 7>; [INV]\r\n\r\n  <bb 7> :\r\n  # DEBUG BEGIN_STMT\r\n  _6 = n_4;\r\n  return _6;\r\n\r\n}\r\n\r\n\r\n\r\n;; Function test_1 (_Z6test_1v, funcdef_no=1, decl_uid=2376, cgraph_uid=2, symbol_order=1)\r\n\r\nint test_1 ()\r\n{\r\n  int D.2391;\r\n\r\n  <bb 2> :\r\n  # DEBUG BEGIN_STMT\r\n  # DEBUG n => 113383\r\n  # DEBUG n => NULL\r\n  return 1;\r\n\r\n}\r\n```\r\n\r\nAs you can see, the result is correct. (so it's not a GCC internals' issue)\r\n\r\n### Meta\r\n\r\n- 4f0a2729d78d77f14140531ca809d1c45311f0c9\r\n", "closed_by": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1523/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1523/timeline", "performed_via_github_app": null, "state_reason": "completed"}