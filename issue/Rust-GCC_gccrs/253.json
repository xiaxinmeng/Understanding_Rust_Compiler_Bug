{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/253", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/253/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/253/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/253", "id": 816503685, "node_id": "MDU6SXNzdWU4MTY1MDM2ODU=", "number": 253, "title": "Lower WhileLoopExpr to LoopExpr", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2642482874, "node_id": "MDU6TGFiZWwyNjQyNDgyODc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/cleanup", "name": "cleanup", "color": "E22959", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-02-25T14:46:12Z", "updated_at": "2021-11-17T15:22:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "HIR lowers while loops to loop expr with a conditional break expression. We should do the same. There is logic to make sure breaks with value cannot occur inside while loop expressions which will need to be moved to a higher pass (possibly as part of lowering).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/253/timeline", "performed_via_github_app": null, "state_reason": null}