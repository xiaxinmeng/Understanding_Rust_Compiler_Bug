{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1725", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1725/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1725/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1725/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/1725", "id": 1524691490, "node_id": "I_kwDOANBUbM5a4PIi", "number": 1725, "title": "We are missing bounds checking in general", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/12", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/12", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/12/labels", "id": 8516486, "node_id": "MI_kwDOANBUbM4AgfOG", "number": 12, "title": "Final upstream patches", "description": "", "creator": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 241, "state": "closed", "created_at": "2022-10-07T08:38:31Z", "updated_at": "2023-06-14T11:12:35Z", "due_on": "2023-04-30T07:00:00Z", "closed_at": "2023-05-10T08:27:18Z"}, "comments": 0, "created_at": "2023-01-08T21:40:14Z", "updated_at": "2023-02-14T23:56:15Z", "closed_at": "2023-02-14T23:56:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nThis should have failed during type-checking as the bounds for `f32` are not fulfilled to be an argument for the function foo. We currently do not check bounds in general. We only have bounds checking during generic argument application which is not general enough.\r\n\r\n### Code\r\n\r\n```rust\r\nmod core {\r\n    mod ops {\r\n        #[lang = \"add\"]\r\n        pub trait Add<Rhs = Self> {\r\n            type Output;\r\n\r\n            fn add(self, rhs: Rhs) -> Self::Output;\r\n        }\r\n    }\r\n}\r\n\r\npub fn foo<T: core::ops::Add<Output = i32>>(a: T) -> i32 {\r\n    a + a\r\n}\r\n\r\npub fn main() {\r\n    foo(123f32);\r\n}\r\n\r\n```\r\n\r\n### Meta\r\n\r\n- What version of Rust GCC were you using, git sha if possible. 0bab8d932c985ba83be0ebe258da30b51c117be4\r\n\r\n### Error output\r\n\r\n```\r\nrust1: internal compiler error: in resolve_method_address, at rust/backend/rust-compile-expr.cc:2001\r\n```\r\n\r\n<!--\r\nInclude a backtrace if available.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n  <p>\r\n  \r\n  ```\r\nrust1: internal compiler error: in resolve_method_address, at rust/backend/rust-compile-expr.cc:2001\r\n0x146d136 Rust::Compile::CompileExpr::resolve_method_address(Rust::TyTy::FnType*, unsigned int, Rust::TyTy::BaseType*, Rust::HIR::PathIdentSegment&, Rust::Analysis::NodeMapping, Location)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.cc:2001\r\n0x146d627 Rust::Compile::CompileExpr::resolve_operator_overload(Rust::Analysis::RustLangItem::ItemType, Rust::HIR::OperatorExprMeta, tree_node*, tree_node*, Rust::HIR::Expr*, Rust::HIR::Expr*)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.cc:2077\r\n0x146545d Rust::Compile::CompileExpr::visit(Rust::HIR::ArithmeticOrLogicalExpr&)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.cc:145\r\n0x12df425 Rust::HIR::ArithmeticOrLogicalExpr::accept_vis(Rust::HIR::HIRExpressionVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:3870\r\n0x1464dae Rust::Compile::CompileExpr::Compile(Rust::HIR::Expr*, Rust::Compile::Context*)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.cc:47\r\n0x14a0ee8 Rust::Compile::HIRCompileBase::compile_function_body(Rust::Compile::Context*, tree_node*, Rust::HIR::BlockExpr&, bool)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-base.cc:487\r\n0x14a18a2 Rust::Compile::HIRCompileBase::compile_function(Rust::Compile::Context*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Rust::HIR::SelfParam&, std::vector<Rust::HIR::FunctionParam, std::allocator<Rust::HIR::FunctionParam> >&, Rust::HIR::FunctionQualifiers const&, Rust::HIR::Visibility&, std::vector<Rust::AST::Attribute, std::allocator<Rust::AST::Attribute> >&, Location, Rust::HIR::BlockExpr*, Rust::Resolver::CanonicalPath const*, Rust::TyTy::FnType*, bool)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-base.cc:625\r\n0x14631ce Rust::Compile::CompileItem::visit(Rust::HIR::Function&)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-item.cc:174\r\n0x12e20e5 Rust::HIR::Function::accept_vis(Rust::HIR::HIRStmtVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:5106\r\n0x1244c3c Rust::Compile::CompileItem::compile(Rust::HIR::Item*, Rust::Compile::Context*, Rust::TyTy::BaseType*, bool, Location)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-item.h:37\r\n0x124cff4 Rust::Compile::HIRCompileBase::query_compile(unsigned int, Rust::TyTy::BaseType*, Rust::HIR::PathIdentSegment const&, Rust::Analysis::NodeMapping const&, Location, bool)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-resolve-path.cc:195\r\n0x124ce32 Rust::Compile::ResolvePathRef::resolve(Rust::HIR::PathIdentSegment const&, Rust::Analysis::NodeMapping const&, Location, bool)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-resolve-path.cc:168\r\n0x124c6f6 Rust::Compile::ResolvePathRef::visit(Rust::HIR::PathInExpression&)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-resolve-path.cc:42\r\n0x12e1f53 Rust::HIR::PathInExpression::accept_vis(Rust::HIR::HIRPatternVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:5064\r\n0x14615a7 Rust::Compile::ResolvePathRef::Compile(Rust::HIR::PathInExpression&, Rust::Compile::Context*)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-resolve-path.h:40\r\n0x146757e Rust::Compile::CompileExpr::visit(Rust::HIR::PathInExpression&)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.cc:636\r\n0x12df005 Rust::HIR::PathInExpression::accept_vis(Rust::HIR::HIRExpressionVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:3757\r\n0x1464dae Rust::Compile::CompileExpr::Compile(Rust::HIR::Expr*, Rust::Compile::Context*)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.cc:47\r\n0x146bc79 Rust::Compile::CompileExpr::visit(Rust::HIR::CallExpr&)\r\n        ../../gccrs/gcc/rust/backend/rust-compile-expr.cc:1693\r\n0x12e19a9 Rust::HIR::CallExpr::accept_vis(Rust::HIR::HIRExpressionVisitor&)\r\n        ../../gccrs/gcc/rust/hir/tree/rust-hir-full-test.cc:4908\r\nPlease submit a full bug report, with preprocessed source (by using -freport-bug).\r\nPlease include the complete backtrace with any bug report.\r\nSee <https://gcc.gnu.org/bugs/> for instructions.\r\n[Inferior 1 (process 287742) exited with code 04]\r\n  ```\r\n  \r\n  </p>\r\n</details>\r\n", "closed_by": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/1725/timeline", "performed_via_github_app": null, "state_reason": "completed"}