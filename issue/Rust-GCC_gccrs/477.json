{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/477", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/477/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/477/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/477", "id": 910431380, "node_id": "MDU6SXNzdWU5MTA0MzEzODA=", "number": 477, "title": "Multi-arch CI", "user": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2557317321, "node_id": "MDU6TGFiZWwyNTU3MzE3MzIx", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/automation", "name": "automation", "color": "23679b", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2021-06-03T12:12:00Z", "updated_at": "2022-03-28T13:44:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "travis offers CI for multiple architectures, we should make an automation for things in master to do a non bootstrap build and run the test suite. Something like this could be the starting point:\r\n\r\n```\r\nlanguage: c\r\n\r\narch:\r\n  - amd64\r\n  - ppc64le\r\n  - s390x\r\n  - arm64\r\n  \r\nos: linux\r\n\r\nbefore_install:\r\n  - sudo apt-get install -y automake autoconf libtool autogen bison flex libgmp3-dev libmpfr-dev libmpc-dev build-essential gcc-multilib g++-multilib dejagnu\r\n\r\nscript:\r\n  - mkdir -p gccrs-build;\r\n  - cd gccrs-build; ../configure --enable-languages=rust --disable-bootstrap --enable-multilib; make -j $(nproc); make check-rust\r\n  - cd gccrs-build; \\\r\n           if grep \"# of unexpected\" gcc/testsuite/rust/rust.sum;\\\r\n           then \\\r\n              echo \"some tests are not correct\"; \\\r\n              exit 1; \\\r\n            else \\\r\n              exit 0; \\\r\n            fi\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/477/timeline", "performed_via_github_app": null, "state_reason": null}