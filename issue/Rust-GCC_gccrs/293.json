{"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/293", "repository_url": "https://api.github.com/repos/Rust-GCC/gccrs", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/293/comments", "events_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/293/events", "html_url": "https://github.com/Rust-GCC/gccrs/issues/293", "id": 833850691, "node_id": "MDU6SXNzdWU4MzM4NTA2OTE=", "number": 293, "title": "ICE caused by incorrect inference for unsuffixed int literal in final expression of function", "user": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 61372775, "node_id": "MDU6TGFiZWw2MTM3Mjc3NQ==", "url": "https://api.github.com/repos/Rust-GCC/gccrs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/3", "html_url": "https://github.com/Rust-GCC/gccrs/milestone/3", "labels_url": "https://api.github.com/repos/Rust-GCC/gccrs/milestones/3/labels", "id": 6228182, "node_id": "MDk6TWlsZXN0b25lNjIyODE4Mg==", "number": 3, "title": "Data Structures 2 - Generics", "description": "Generics in rust are complex this will need to expand on type resolution to match all references for the usage of generic parameters to determine the type of a structure/function that must be generated.", "creator": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 62, "state": "closed", "created_at": "2020-12-18T17:38:10Z", "updated_at": "2021-05-14T13:06:58Z", "due_on": "2021-05-28T07:00:00Z", "closed_at": "2021-05-14T13:06:58Z"}, "comments": 7, "created_at": "2021-03-17T14:44:38Z", "updated_at": "2021-03-19T08:44:25Z", "closed_at": "2021-03-19T08:44:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\nfn foo() -> isize {\r\n    0\r\n}\r\n```\r\n\r\nWill ICE : \r\n```\r\n.../gcc/testsuite/rust.test/execute/empty_main.rs:7:1: warning: unused name\r\n.../gcc/testsuite/rust.test/execute/empty_main.rs: In function \u2018foo\u2019:\r\n.../gcc/testsuite/rust.test/execute/empty_main.rs:7:1: error: non-trivial conversion in \u2018integer_cst\u2019\r\nisize\r\ni32\r\nD.198 = 0;\r\n/some/path//gccrs/gcc/testsuite/rust.test/execute/empty_main.rs:7:1: internal compiler error: \u2018verify_gimple\u2019 failed\r\n0x1a5d602 verify_gimple_in_seq(gimple*)\r\n        ../../gcc/tree-cfg.c:5119\r\n0x1488836 gimplify_body(tree_node*, bool)\r\n        ../../gcc/gimplify.c:15329\r\n0x1488abe gimplify_function_tree(tree_node*)\r\n        ../../gcc/gimplify.c:15400\r\n0x115e2aa cgraph_node::analyze()\r\n        ../../gcc/cgraphunit.c:670\r\n0x11602f3 analyze_functions\r\n        ../../gcc/cgraphunit.c:1235\r\n0x116353f symbol_table::finalize_compilation_unit()\r\n        ../../gcc/cgraphunit.c:2513\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nPlease include the complete backtrace with any bug report.\r\n```\r\n\r\nAfter a quick gdb session, it seems that conversion from the 0 literal (SI) to `isize` (DI) is needed  and makes the compiler crash.\r\n\r\nThe falling test is :\r\n```\r\n\u2502B+>4425          if (!useless_type_conversion_p (lhs_type, rhs1_type))   \r\n\u2502   4426            {                                                                                         \r\n\u2502   4427              error (\"non-trivial conversion in %qs\", code_name);        \r\n\u2502   4428              debug_generic_expr (lhs_type);                           \r\n\u2502   4429              debug_generic_expr (rhs1_type);  \r\n\u2502   4430              return true;        \r\n\u2502   4431            } \r\n```\r\nWith the following arguments:\r\n```\r\n <integer_type 0x7ffff7472738 isize sizes-gimplified DI\r\n    size <integer_cst 0x7ffff745dbb8 type <integer_type 0x7ffff74720a8 bitsizetype> constant 64>\r\n    unit-size <integer_cst 0x7ffff745dbd0 type <integer_type 0x7ffff7472000 sizetype> constant 8>\r\n    align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ffff7472738 precision:64 min <integer_cst 0x7ffff745de40 -9223372036854775808> max <integer_cst 0x7ffff745de58 9223372036854775807>>\r\n$2 = void\r\n\r\n <integer_type 0x7ffff74725e8 i32 public SI\r\n    size <integer_cst 0x7ffff745ddf8 type <integer_type 0x7ffff74720a8 bitsizetype> constant 32>\r\n    unit-size <integer_cst 0x7ffff745de10 type <integer_type 0x7ffff7472000 sizetype> constant 4>\r\n    align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ffff74725e8 precision:32 min <integer_cst 0x7ffff745ddb0 -2147483648> max <integer_cst 0x7ffff745ddc8 2147483647>\r\n    pointer_to_this <pointer_type 0x7ffff74799d8>>\r\n$3 = void\r\n```\r\nThis is rejected later on by :\r\n```\r\n\u2502  67          bool  \r\n\u2502   68          useless_type_conversion_p (tree outer_type, tree inner_type)   \r\n...\r\n\u2502   93            /* Changes in machine mode are never useless conversions because the RTL  \r\n\u2502   94               middle-end expects explicit conversions between modes.  */         \r\n\u2502  >95            if (TYPE_MODE (inner_type) != TYPE_MODE (outer_type))          \r\n\u2502   96              return false;\r\n```\r\n\r\nThe full tree for the function:\r\n```\r\n <function_decl 0x7ffff748f200 foo\r\n    type <function_type 0x7ffff748e738\r\n        type <integer_type 0x7ffff7472738 isize sizes-gimplified DI\r\n            size <integer_cst 0x7ffff745dbb8 constant 64>\r\n            unit-size <integer_cst 0x7ffff745dbd0 constant 8>\r\n            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ffff7472738 precision:64 min <integer_cst 0x7ffff745de40 -9223372036854775808> max <integer_cst 0x7ffff745de58 9223372036854775807>>\r\n        QI\r\n        size <integer_cst 0x7ffff745dca8 constant 8>\r\n        unit-size <integer_cst 0x7ffff745dcc0 constant 1>\r\n        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ffff748e738\r\n        arg-types <tree_list 0x7ffff7471b18 value <void_type 0x7ffff7472f18>>\r\n        pointer_to_this <pointer_type 0x7ffff748e7e0>>\r\n    public uninlinable QI /some/path//gccrs/gcc/testsuite/rust.test/execute/empty_main.rs:7:1 align:8 warn_if_not_align:0 initial <block 0x7ffff7493000>\r\n    result <result_decl 0x7ffff7467168 D.196 type <integer_type 0x7ffff7472738 isize>\r\n        ignored DI /some/path//gccrs/gcc/testsuite/rust.test/execute/empty_main.rs:7:1 size <integer_cst 0x7ffff745dbb8 64> unit-size <integer_cst 0x7ffff745dbd0 8>\r\n        align:64 warn_if_not_align:0 context <function_decl 0x7ffff748f200 foo>>\r\n    struct-function 0x7ffff7494000>\r\n```\r\n\r\nI'll continue and try to debug this on my own to better understand how this part works...\r\n", "closed_by": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Rust-GCC/gccrs/issues/293/timeline", "performed_via_github_app": null, "state_reason": "completed"}