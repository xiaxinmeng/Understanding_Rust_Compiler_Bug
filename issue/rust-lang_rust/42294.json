{"url": "https://api.github.com/repos/rust-lang/rust/issues/42294", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42294/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42294/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42294/events", "html_url": "https://github.com/rust-lang/rust/issues/42294", "id": 232034839, "node_id": "MDU6SXNzdWUyMzIwMzQ4Mzk=", "number": 42294, "title": "incr.comp.: Use ICH-based DepNodes in order to make them PODs", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-29T14:16:58Z", "updated_at": "2017-06-19T11:59:13Z", "closed_at": "2017-06-19T11:59:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The current implementation of `DepNode` has a `DefId` or something more complex as its identifier. This has a few downsides:\r\n- `DefId`s are bound to a specific compilation session. When the dependency graph of a previous session is loaded, all nodes in it have to be \"re-traced\", which means that their `DefPath` has to be mapped to a `DefId` in the current compilation session. The has some cost at runtime and complicates the implementation (because we have to generate and store the `DefPathDirectory`). \r\n- Re-tracing a `DepNode` can also fail because the item it refers to does not exist anymore in the current compilation session. This is not a conceptual problem but it is an annoyance that `DepNodes` from a previous dep-graph cannot easily be represented. At the moment this is solved by making `DepNode` generic over the type of identifier it uses (either `DefId` or `DefPath`) but that is a burden.\r\n- Independently of `DefId`, some `DepNode` variants are expensive to copy because they contain vectors.\r\n\r\nThis is a proposal to use a simplified design that uses a generic, globally unique fingerprint as the disambiguator for `DepNode`:\r\n```rust\r\nenum DepNodeKind {\r\n    Krate,\r\n    Hir,\r\n    HirBody,\r\n    MetaData,\r\n    ...\r\n}\r\n\r\nstruct DepNode {\r\n    kind: DepNodeKind,\r\n    // 128+ bit hash value identifying the DepNode\r\n    fingerprint: Fingerprint,\r\n}\r\n```\r\n\r\nSince this is using a stable hash (like the ICH), a `DepNode` like this is valid across compilation sessions and does not need any re-tracing. It's also \"plain old data\" in the sense that it contains no pointers or anything else that is context dependent. As a consequence, it can be easily copied, shared between threads, and memory mapped, something that is not possible with the current design.\r\n\r\nThe fingerprint-based approach has a few potential downsides but all of them can be addressed adequately, I think:\r\n1. A truly stable fingerprint/hash value is not trivial to compute.<br>**Solution:** We already have the whole ICH infrastructure available which can handle anything we throw at it.\r\n2. There's a runtime cost to turning a `DefId` or other identifiers into a fingerprint.<br>**Solution:** In the vast majority of cases, it is really just one `DefId` that needs to be hashed. In this case we already have the hash available (as the `DefPathHash`) and access it via a simple array-lookup. Additionally, all `DepNode` are cached in the dependency graph once they are created and can be looked up via a 32-bit `DepNodeIndex` if the need arises.\r\n3. Using a hash value introduces the risk of hash collisions.<br>**Solution:** This is already a risk for incremental compilation and is mitigated by using a high quality hash function with low enough collision probability. Risk can be adjusted by using fingerprints with more bits. \r\n4. A fingerprint is opaque while a `DefId` allows to reconstruct which item it points to. This is bad for debugging output.<br>**Solution:** This is can be mitigated by just constructing lookup tables for mapping a Fingerprint back to its ingredients if `-Zquery-dep-graph` is specified.\r\n\r\ncc @nikomatsakis and @eddyb \r\n", "closed_by": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42294/timeline", "performed_via_github_app": null, "state_reason": "completed"}