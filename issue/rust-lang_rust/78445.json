{"url": "https://api.github.com/repos/rust-lang/rust/issues/78445", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78445/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78445/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78445/events", "html_url": "https://github.com/rust-lang/rust/issues/78445", "id": 730564532, "node_id": "MDU6SXNzdWU3MzA1NjQ1MzI=", "number": 78445, "title": "Building in release mode with LTO breaks RPM build process for some code", "user": {"login": "gavrie", "id": 288652, "node_id": "MDQ6VXNlcjI4ODY1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/288652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gavrie", "html_url": "https://github.com/gavrie", "followers_url": "https://api.github.com/users/gavrie/followers", "following_url": "https://api.github.com/users/gavrie/following{/other_user}", "gists_url": "https://api.github.com/users/gavrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/gavrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gavrie/subscriptions", "organizations_url": "https://api.github.com/users/gavrie/orgs", "repos_url": "https://api.github.com/users/gavrie/repos", "events_url": "https://api.github.com/users/gavrie/events{/privacy}", "received_events_url": "https://api.github.com/users/gavrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2459791492, "node_id": "MDU6TGFiZWwyNDU5NzkxNDky", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lto", "name": "A-lto", "color": "f7e101", "default": false, "description": "Area: Link Time Optimization"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-10-27T15:35:20Z", "updated_at": "2020-10-27T19:09:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When building a dynamic library from my Rust code with LTO enabled, the resulting binary includes a seemingly invalid slash-terminated directory table entry, which in turn prevents building an RPM from the library on RHEL (details follow below).\r\n\r\nThe Rust code (reduced to the minimal code that reproduces the issue) in `src/lib.rs`:\r\n\r\n```rust\r\n#[no_mangle]\r\npub extern \"C\" fn on_load() {\r\n    let _ = std::panic::take_hook();\r\n}\r\n```\r\n\r\nThe `Cargo.toml`:\r\n```toml\r\n[package]\r\nname = \"lto-bug\"\r\nversion = \"0.1.0\"\r\nedition = \"2018\"\r\n\r\n[lib]\r\ncrate-type = [\"cdylib\"]\r\nname = \"lto_bug\"\r\n\r\n[profile.release]\r\nlto = true\r\n```\r\n\r\nThe build command:\r\n```\r\ncargo build --release\r\n```\r\n\r\nI expected to see this happen: Get a valid binary for the dynamic library.\r\n\r\nInstead, this happened: \r\n\r\nThe resulting binary includes a directory table entry that ends with a slash, which in turn breaks the RPM build process.\r\n\r\nThe output of `objdump -g target/release/liblto_bug.so` includes:\r\n```\r\n The Directory Table (offset 0x19d4c):\r\n  1     /cargo/registry/src/github.com-1ecc6299db9ec823/rustc-demangle-0.1.16/src\r\n  2     /rustc/18bf6b4f01a6feaf7259ba7cdae58031af1b7b39/library/core/src\r\n  3     /rustc/18bf6b4f01a6feaf7259ba7cdae58031af1b7b39/library/core/src/slice\r\n  4     /rustc/18bf6b4f01a6feaf7259ba7cdae58031af1b7b39/\r\n  5     /rustc/18bf6b4f01a6feaf7259ba7cdae58031af1b7b39/library/core/src/ops\r\n...\r\n```\r\n\r\nEntry 4 ends with a slash, which wreaks havoc with RPM's `debugedit` utility that is run while building an RPM.\r\n\r\nReproducing this:\r\n```\r\n$ /usr/lib/rpm/debugedit -b / -d / target/release/liblto_bug.so\r\n/usr/lib/rpm/debugedit: canonicalization unexpectedly shrank by one character\r\n```\r\n\r\nSee [this Red Hat bug report](https://bugzilla.redhat.com/show_bug.cgi?id=304121) that describes the problem.\r\nIt could be considered a bug in `debugedit`, but it's very longstanding and would be great if Rust didn't do this.\r\n\r\nIt seems to be some an unintentional side effect that the directory `/rustc/18bf6b4f01a6feaf7259ba7cdae58031af1b7b39/` is added to the directory table, certainly with the terminating slash.\r\n\r\nI tried to see if I could work around this by using `--remap-path-prefix`, but that seems to have no effect at all on this path.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.47.0 (18bf6b4f0 2020-10-07)\r\nbinary: rustc\r\ncommit-hash: 18bf6b4f01a6feaf7259ba7cdae58031af1b7b39\r\ncommit-date: 2020-10-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.47.0\r\nLLVM version: 11.0\r\n```\r\n\r\nAlso happens with nightly:\r\n```\r\nrustc 1.49.0-nightly (ffa2e7ae8 2020-10-24)\r\nbinary: rustc\r\ncommit-hash: ffa2e7ae8fbf9badc035740db949b9dae271c29f\r\ncommit-date: 2020-10-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78445/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78445/timeline", "performed_via_github_app": null, "state_reason": null}