{"url": "https://api.github.com/repos/rust-lang/rust/issues/88160", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88160/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88160/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88160/events", "html_url": "https://github.com/rust-lang/rust/issues/88160", "id": 974742820, "node_id": "MDU6SXNzdWU5NzQ3NDI4MjA=", "number": 88160, "title": "Suggest `#[repr({integer}]` for enums when using the wrong integer type", "user": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-19T14:45:33Z", "updated_at": "2021-08-20T02:41:16Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=ffe26b2bc45f08e1a3d8e39def953f4e\r\n\r\n```rust\r\nconst CONST: i32 = 0;\r\n\r\nenum Enum {\r\n  Variant = CONST,\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:4:13\r\n  |\r\n4 |   Variant = CONST,\r\n  |             ^^^^^ expected `isize`, found `i32`\r\n```\r\n\r\nI believe it would be helpful to suggest adding a `#[repr(i32)]` to the enum in this case.\r\nNot sure how that should be rendered.\r\n\r\n#### Another small diagnostic improvement for int-enums\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=580b8d3086d643767931565546c60654\r\n\r\n```rust\r\nconst CONST: i32 = 0;\r\n\r\n#[repr(u32)]\r\nenum Enum {\r\n  Variant = CONST,\r\n}\r\n```\r\n\r\nThe current output is:\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:5:13\r\n  |\r\n5 |   Variant = CONST,\r\n  |             ^^^^^ expected `u32`, found `i32`\r\n```\r\n\r\nHere we should point to the attribute in a help label like we do for type annotations in `let` statements.\r\n\r\nThat is something like this.\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:5:13\r\n  |\r\n2 |   #[repr(u32)]\r\n  |          --- expected due to this\r\n...\r\n5 |   Variant = CONST,\r\n  |             ^^^^^ expected `u32`, found `i32`\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88160/timeline", "performed_via_github_app": null, "state_reason": null}