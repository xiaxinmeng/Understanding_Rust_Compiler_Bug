{"url": "https://api.github.com/repos/rust-lang/rust/issues/17293", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17293/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17293/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17293/events", "html_url": "https://github.com/rust-lang/rust/issues/17293", "id": 42846301, "node_id": "MDU6SXNzdWU0Mjg0NjMwMQ==", "number": 17293, "title": "Should be able to take an immutable slice of a mutable array", "user": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-16T05:42:43Z", "updated_at": "2015-01-29T03:44:07Z", "closed_at": "2015-01-29T03:44:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "e.g., this should work:\n\n```\n    let x: &mut [int] = &mut [1, 2, 3, 4, 5];\n    let y = x[1..2];\n```\n\nCurrently, it does not find the `Slice` trait for `&mut [T]`. That is because both the `Slice` and `SliceMut` traits are implemented for `[T]`. `SliceMut` methods take self as `&mut self` whereas `Slice` methods are `& self`. We do no coercions when looking up methods for overloaded operators, so we don't do the `&mut [T]` -> `&[T]` coercion we would do when doing a normal trait method search.\n\nWe have three options:\n1 leave as is, this seems surprising and unergonomic;\n2 do a special `&mut` -> `&` coercion when searching for slice methods. I suspect we want something similar for Index etc. when we implement those in a DST-ish way;\n3 allow proper coercions when desugaring Index, Slice, etc. - this is potentially complicated.\n\nI prefer option 3, but I have not thought through the repercussions.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17293/timeline", "performed_via_github_app": null, "state_reason": "completed"}