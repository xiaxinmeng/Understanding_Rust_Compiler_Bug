{"url": "https://api.github.com/repos/rust-lang/rust/issues/74104", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74104/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74104/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74104/events", "html_url": "https://github.com/rust-lang/rust/issues/74104", "id": 651719019, "node_id": "MDU6SXNzdWU2NTE3MTkwMTk=", "number": 74104, "title": "ICE trying to link corrupt/bogus static library", "user": {"login": "jgallagher-cs", "id": 66333317, "node_id": "MDQ6VXNlcjY2MzMzMzE3", "avatar_url": "https://avatars.githubusercontent.com/u/66333317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgallagher-cs", "html_url": "https://github.com/jgallagher-cs", "followers_url": "https://api.github.com/users/jgallagher-cs/followers", "following_url": "https://api.github.com/users/jgallagher-cs/following{/other_user}", "gists_url": "https://api.github.com/users/jgallagher-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgallagher-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgallagher-cs/subscriptions", "organizations_url": "https://api.github.com/users/jgallagher-cs/orgs", "repos_url": "https://api.github.com/users/jgallagher-cs/repos", "events_url": "https://api.github.com/users/jgallagher-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/jgallagher-cs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-06T17:53:00Z", "updated_at": "2020-07-06T18:06:38Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nThis is a pretty weird one; we bumped into this due to a bad combination of Linux Docker containers running with mounted volumes on a Mac host and trying to build with stale artifacts. I made a repo that reproduces this ICE at https://github.com/jgallagher-cs/rustc-ice.\r\n\r\nWe have a C file (`foo.c` in the reproducer repo) that was compiled into a library on Linux (a CentOS 6 Docker container, although I suspect that doesn't matter too much):\r\n\r\n```\r\ngcc -c foo.c -o foo.o\r\nar cr libfoo.a foo.o\r\n```\r\n\r\nThe library file itself was then copied to a Mac (running Catalina), where `foo.c` was recompiled and `ar` was used again to update `libfoo.a`:\r\n\r\n```\r\nclang -c foo.c -o foo.o\r\nar cr libfoo.a foo.o # NOTE: updates the linux libfoo.a\r\n```\r\n\r\nI very much doubt this should work and don't know enough about the archive format (and the differences between Linux and Mac `ar` implementations) to know exactly what's going wrong, but if you then try to link this library on a Mac with rustc, I hit an ICE.\r\n\r\n### Code\r\n\r\nNo Rust code is involved here other than a build script instructing cargo to link a library; e.g.,\r\n\r\n```Rust\r\nfn main() {\r\n    println!(\"cargo:rustc-link-search=foo-mac\");\r\n    println!(\"cargo:rustc-link-lib=static=foo\");\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0 (49cae5576 2020-06-01)\r\nbinary: rustc\r\ncommit-hash: 49cae55760da0a43428eba73abcb659bb70cf2e4\r\ncommit-date: 2020-06-01\r\nhost: x86_64-apple-darwin\r\nrelease: 1.44.0\r\nLLVM version: 9.0\r\n```\r\n\r\nI believe a coworker confirmed the same ICE on 1.44.1.\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/librustc_codegen_llvm/back/archive.rs:274:33\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.44.0 (49cae5576 2020-06-01) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: could not compile `rustc-ice`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n   1: core::fmt::write\r\n   2: std::io::Write::write_fmt\r\n   3: std::panicking::default_hook::{{closure}}\r\n   4: std::panicking::default_hook\r\n   5: rustc_driver::report_ice\r\n   6: std::panicking::rust_panic_with_hook\r\n   7: rust_begin_unwind\r\n   8: core::panicking::panic_fmt\r\n   9: core::panicking::panic\r\n  10: <rustc_codegen_llvm::back::archive::LlvmArchiveBuilder as rustc_codegen_ssa::back::archive::ArchiveBuilder>::build\r\n  11: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  12: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::link\r\n  13: rustc_interface::queries::Linker::link\r\n  14: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  15: scoped_tls::ScopedKey<T>::set\r\n  16: rustc_ast::attr::with_globals\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74104/timeline", "performed_via_github_app": null, "state_reason": null}