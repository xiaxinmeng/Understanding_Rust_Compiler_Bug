{"url": "https://api.github.com/repos/rust-lang/rust/issues/46178", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46178/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46178/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46178/events", "html_url": "https://github.com/rust-lang/rust/issues/46178", "id": 275931957, "node_id": "MDU6SXNzdWUyNzU5MzE5NTc=", "number": 46178, "title": "Compiler panic when using `impl Iterator<Item = &PathBuf>`", "user": {"login": "linclelinkpart5", "id": 844735, "node_id": "MDQ6VXNlcjg0NDczNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/844735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linclelinkpart5", "html_url": "https://github.com/linclelinkpart5", "followers_url": "https://api.github.com/users/linclelinkpart5/followers", "following_url": "https://api.github.com/users/linclelinkpart5/following{/other_user}", "gists_url": "https://api.github.com/users/linclelinkpart5/gists{/gist_id}", "starred_url": "https://api.github.com/users/linclelinkpart5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linclelinkpart5/subscriptions", "organizations_url": "https://api.github.com/users/linclelinkpart5/orgs", "repos_url": "https://api.github.com/users/linclelinkpart5/repos", "events_url": "https://api.github.com/users/linclelinkpart5/events{/privacy}", "received_events_url": "https://api.github.com/users/linclelinkpart5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-22T03:16:45Z", "updated_at": "2017-11-22T18:09:04Z", "closed_at": "2017-11-22T18:09:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my `impl` for a struct I'm working on, I have this:\r\n\r\n```rust\r\n    pub fn get_contains_dir<P: AsRef<Path>>(&self, rel_item_path: P) -> Option<PathBuf> {\r\n        if let Ok((rel, abs)) = self.co_norm(rel_item_path) {\r\n            if abs.is_dir() {\r\n                return Some(rel)\r\n            }\r\n        }\r\n\r\n        None\r\n    }\r\n\r\n    pub fn iter_contains_dir<P: AsRef<Path>>(&self, rel_item_path: P) -> impl Iterator<Item = &PathBuf> {\r\n        self.get_contains_dir(rel_item_path).iter()\r\n    }\r\n```\r\n\r\nWhen attempting to compile, I get this error (backtrace also included):\r\n\r\n```\r\nerror: internal compiler error: /checkout/src/librustc_typeck/check/mod.rs:634: escaping regions in predicate Obligation(predicate=Binder(ProjectionPredicate(ProjectionTy { substs: Slice([_]), item_def_id: DefId { krate: CrateNum(2), index: DefIndex(0:1693) => core[373c]::iter[0]::iterator[0]::Iterator[0]::Item[0] } }, &std::path::PathBuf)),depth=0)\r\n   --> src/library.rs:191:74\r\n    |\r\n191 |     pub fn iter_contains_dir<P: AsRef<Path>>(&self, rel_item_path: P) -> impl Iterator<Item = &PathBuf> {\r\n    |                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.23.0-nightly (33374fa9d 2017-11-20) running on x86_64-unknown-linux-gnu\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc_errors/lib.rs:418:8\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:68\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:57\r\n             at /checkout/src/libstd/panicking.rs:381\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:391\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:577\r\n   5: std::panicking::begin_panic\r\n   6: rustc_errors::Handler::span_bug\r\n   7: <std::thread::local::LocalKey<T>>::with\r\n   8: rustc::ty::context::tls::with_opt\r\n   9: rustc::session::span_bug_fmt\r\n  10: rustc_typeck::check::Inherited::register_predicate\r\n  11: <rustc::ty::fold::BottomUpFolder<'a, 'gcx, 'tcx, F> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  12: rustc_typeck::check::check_fn\r\n  13: <std::thread::local::LocalKey<T>>::with\r\n  14: rustc::ty::context::GlobalCtxt::enter_local\r\n  15: _ZN12rustc_typeck5check16typeck_tables_of17h25d2aec5684f9308E.llvm.7E26391B\r\n  16: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::compute_result\r\n  17: _ZN5rustc9dep_graph5graph8DepGraph14with_task_impl17h47839a3014380fe2E.llvm.9C4F6362\r\n  18: rustc_errors::Handler::track_diagnostics\r\n  19: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  20: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::force\r\n  21: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  22: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  23: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::ensure\r\n  24: rustc::session::Session::track_errors\r\n  25: _ZN12rustc_typeck5check18typeck_item_bodies17hd21b7190cdf37897E.llvm.7E26391B\r\n  26: _ZN5rustc9dep_graph5graph8DepGraph14with_task_impl17hbd23d0600cb4f79bE.llvm.9C4F6362\r\n  27: rustc_errors::Handler::track_diagnostics\r\n  28: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  29: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::force\r\n  30: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get\r\n  31: rustc::ty::maps::TyCtxtAt::typeck_item_bodies\r\n  32: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies\r\n  33: rustc_typeck::check_crate\r\n  34: <std::thread::local::LocalKey<T>>::with\r\n  35: <std::thread::local::LocalKey<T>>::with\r\n  36: rustc::ty::context::TyCtxt::create_and_enter\r\n  37: rustc_driver::driver::compile_input\r\n  38: rustc_driver::run_compiler\r\n```\r\n\r\nOutput of rustc --version --verbose:\r\n\r\n```\r\nrustc 1.23.0-nightly (33374fa9d 2017-11-20)\r\nbinary: rustc\r\ncommit-hash: 33374fa9d09e2a790979b31e61100dfed4b44139\r\ncommit-date: 2017-11-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.23.0-nightly\r\nLLVM version: 4.0\r\n```", "closed_by": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46178/timeline", "performed_via_github_app": null, "state_reason": "completed"}