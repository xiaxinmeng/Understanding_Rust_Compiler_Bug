{"url": "https://api.github.com/repos/rust-lang/rust/issues/67844", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67844/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67844/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67844/events", "html_url": "https://github.com/rust-lang/rust/issues/67844", "id": 545193142, "node_id": "MDU6SXNzdWU1NDUxOTMxNDI=", "number": 67844, "title": "error: internal compiler error: src/librustc/ty/subst.rs:611: type parameter `B/#2` (B/2) out of range when substituting (root type=Some((B,))) substs=[ReEarlyBound(0, 'a)]", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-01-03T22:39:46Z", "updated_at": "2020-02-13T16:47:49Z", "closed_at": "2020-02-13T08:12:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Uncommenting the features and running in Nightly makes the complaints about unstable features go away while the panick stays.\r\n\r\n~I\u2019m not sure yet how to make a smaller example out of this.~ smaller examples in comments below\r\n\r\n_This code was a step of me trying out if I could turn [this working code (link)](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=50302b168a9d5db981c6d57da1634565) into a trait to get method syntax._\r\n\r\n```rust\r\n//#![feature(unboxed_closures)]\r\n//#![feature(type_alias_impl_trait)]\r\n\r\ntype Curried<'a, A: 'a, B, C, F: Fn(A, B) -> C>\r\n = impl Fn<(A,), Output = impl FnOnce(B) -> C + 'a> + 'a;\r\n\r\nfn curry<'a, A: 'a, B, C, F: Fn(A, B) -> C> (f: &'a F)\r\n    -> Curried<'a, A, B, C, F>\r\n{\r\n    move |a| move |b| f(a,b)\r\n}\r\n\r\nfn main() {}\r\n\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=496e6fce2f33c18c84109e0533354f10))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0658]: `impl Trait` in type aliases is unstable\r\n --> src/main.rs:4:1\r\n  |\r\n4 | / type Curried<'a, A: 'a, B, C, F: Fn(A, B) -> C>\r\n5 | |  = impl Fn<(A,), Output = impl FnOnce(B) -> C + 'a> + 'a;\r\n  | |_________________________________________________________^\r\n  |\r\n  = note: for more information, see https://github.com/rust-lang/rust/issues/63063\r\n\r\nerror[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\r\n --> src/main.rs:5:9\r\n  |\r\n5 |  = impl Fn<(A,), Output = impl FnOnce(B) -> C + 'a> + 'a;\r\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: for more information, see https://github.com/rust-lang/rust/issues/29625\r\n\r\nerror: internal compiler error: src/librustc/ty/subst.rs:611: type parameter `B/#2` (B/2) out of range when substituting (root type=Some((B,))) substs=[ReEarlyBound(0, 'a)]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:890:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:77\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:61\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1028\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:65\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:50\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:188\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:205\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:468\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::span_bug\r\n  14: rustc_errors::Handler::span_bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_context_opt\r\n  18: rustc::ty::context::tls::with_opt\r\n  19: rustc::util::bug::opt_span_bug_fmt\r\n  20: rustc::util::bug::span_bug_fmt\r\n  21: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_ty\r\n  22: rustc::ty::fold::TypeFoldable::fold_with\r\n  23: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable for &rustc::ty::TyS>::super_fold_with\r\n  24: <rustc::ty::subst::SubstFolder as rustc::ty::fold::TypeFolder>::fold_ty\r\n  25: rustc::ty::fold::TypeFoldable::fold_with\r\n  26: rustc::ty::subst::Subst::subst\r\n  27: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  28: rustc::ty::GenericPredicates::instantiate_into\r\n  29: rustc::infer::opaque_types::Instantiator::fold_opaque_ty\r\n  30: <rustc::ty::fold::BottomUpFolder<F,G,H> as rustc::ty::fold::TypeFolder>::fold_ty\r\n  31: rustc::infer::opaque_types::Instantiator::fold_opaque_ty\r\n  32: <rustc::ty::fold::BottomUpFolder<F,G,H> as rustc::ty::fold::TypeFolder>::fold_ty\r\n  33: rustc_typeck::check::FnCtxt::instantiate_opaque_types_from_value\r\n  34: rustc_typeck::check::check_fn\r\n  35: rustc::ty::context::tls::with_context::{{closure}}\r\n  36: rustc_typeck::check::typeck_tables_of\r\n  37: rustc::ty::query::__query_compute::typeck_tables_of\r\n  38: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  39: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  41: rustc_typeck::collect::find_opaque_ty_constraints::ConstraintLocator::check\r\n  42: rustc::hir::intravisit::Visitor::visit_nested_item\r\n  43: rustc_typeck::collect::find_opaque_ty_constraints\r\n  44: rustc_typeck::collect::checked_type_of\r\n  45: rustc_typeck::collect::type_of\r\n  46: rustc::ty::query::__query_compute::type_of\r\n  47: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::type_of>::compute\r\n  48: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  49: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  50: <rustc_typeck::collect::CollectItemTypesVisitor as rustc::hir::intravisit::Visitor>::visit_item\r\n  51: rustc::hir::map::Map::visit_item_likes_in_module\r\n  52: rustc_typeck::collect::collect_mod_item_types\r\n  53: rustc::ty::query::__query_compute::collect_mod_item_types\r\n  54: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_mod_item_types>::compute\r\n  55: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  56: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  57: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  58: rustc_typeck::check_crate::{{closure}}::{{closure}}\r\n  59: rustc::util::common::time\r\n  60: rustc_typeck::check_crate\r\n  61: rustc_interface::passes::analysis\r\n  62: rustc::ty::query::__query_compute::analysis\r\n  63: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  64: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  65: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  66: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  67: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  68: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  69: std::thread::local::LocalKey<T>::with\r\n  70: scoped_tls::ScopedKey<T>::set\r\n  71: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.40.0 (73528e339 2019-12-16) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `curry`\r\n#1 [type_of] processing `Curried`\r\n#2 [collect_mod_item_types] collecting item types in top-level module\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 3 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0658`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67844/timeline", "performed_via_github_app": null, "state_reason": "completed"}