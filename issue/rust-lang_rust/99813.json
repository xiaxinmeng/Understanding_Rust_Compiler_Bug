{"url": "https://api.github.com/repos/rust-lang/rust/issues/99813", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99813/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99813/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99813/events", "html_url": "https://github.com/rust-lang/rust/issues/99813", "id": 1319581432, "node_id": "I_kwDOAAsO6M5Opzb4", "number": 99813, "title": "libtest's junit formatter does not produce valid XML for doctests", "user": {"login": "therealfrauholle", "id": 46829630, "node_id": "MDQ6VXNlcjQ2ODI5NjMw", "avatar_url": "https://avatars.githubusercontent.com/u/46829630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therealfrauholle", "html_url": "https://github.com/therealfrauholle", "followers_url": "https://api.github.com/users/therealfrauholle/followers", "following_url": "https://api.github.com/users/therealfrauholle/following{/other_user}", "gists_url": "https://api.github.com/users/therealfrauholle/gists{/gist_id}", "starred_url": "https://api.github.com/users/therealfrauholle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therealfrauholle/subscriptions", "organizations_url": "https://api.github.com/users/therealfrauholle/orgs", "repos_url": "https://api.github.com/users/therealfrauholle/repos", "events_url": "https://api.github.com/users/therealfrauholle/events{/privacy}", "received_events_url": "https://api.github.com/users/therealfrauholle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-27T13:38:32Z", "updated_at": "2022-07-28T19:24:42Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nThis issue is related to #85563. The junit formatter of libtest does not produce correct XML for some doctests. Take the following as an example:\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\n\r\npub struct WithGeneric<A> {\r\n    marker: PhantomData<A>\r\n}\r\n\r\nimpl<A> WithGeneric<A> {\r\n    /// \r\n    /// This is a doctest:\r\n    /// \r\n    /// ```\r\n    /// let _ = hello_world::WithGeneric::<()>::new();\r\n    /// ```\r\n    /// \r\n    pub fn new() -> Self {\r\n        WithGeneric { marker: PhantomData }\r\n    }\r\n}\r\n```\r\n\r\nWhen running `cargo +nightly-2022-07-26 test --doc -- -Z unstable-options --format junit`, the following (invalid) XML is generated (formatted with an external tool):\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<testsuites>\r\n\t<testsuite name=\"test\" package=\"test\" id=\"0\" errors=\"0\" failures=\"0\" tests=\"1\" skipped=\"0\" >\r\n\t\t<testcase classname=\"src/lib.rs\" name=\"WithGeneric<A>::new (line 12)\" time=\"0\"/>\r\n\t\t<system-out/>\r\n\t\t<system-err/>\r\n\t</testsuite>\r\n</testsuites>\r\n```\r\nThe XML is invalid because of the `name` attribute of the `testcase` element. It contains the invalid characters `<` and `>`, which should be escaped to `&lt;` and `&gt;` as far as I understand.\r\n\r\n### Proposed solution\r\nIn a quick and dirty way I would implement something similar to what the [JSON formatter does](https://github.com/rust-lang/rust/blob/181d28bb6110dc974879db20d433f21aa142db3a/library/test/src/formatters/json.rs#L195) to escape the strings to valid XML attributes - I just did not have time to make a PR so far.\r\n\r\nApart from that I never contributed to this repository, nor am I specifically familiar with libtest. What would it take to implement the serialization based on serde and a crate like [serde_xml_rs](https://crates.io/crates/serde-xml-rs)? Could I just add these crates as a dependency? I feel like this would be much cleaner than just repeating what the json formatter does.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99813/timeline", "performed_via_github_app": null, "state_reason": null}