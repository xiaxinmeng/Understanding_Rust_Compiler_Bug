{"url": "https://api.github.com/repos/rust-lang/rust/issues/26578", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26578/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26578/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26578/events", "html_url": "https://github.com/rust-lang/rust/issues/26578", "id": 91094581, "node_id": "MDU6SXNzdWU5MTA5NDU4MQ==", "number": 26578, "title": "Optimize Int to String conversions [code inside]", "user": {"login": "arthurprs", "id": 715958, "node_id": "MDQ6VXNlcjcxNTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/715958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurprs", "html_url": "https://github.com/arthurprs", "followers_url": "https://api.github.com/users/arthurprs/followers", "following_url": "https://api.github.com/users/arthurprs/following{/other_user}", "gists_url": "https://api.github.com/users/arthurprs/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurprs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurprs/subscriptions", "organizations_url": "https://api.github.com/users/arthurprs/orgs", "repos_url": "https://api.github.com/users/arthurprs/repos", "events_url": "https://api.github.com/users/arthurprs/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurprs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-25T22:36:09Z", "updated_at": "2015-07-18T14:55:05Z", "closed_at": "2015-07-18T14:55:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of today rust uses a naive implementation for converting integers to decimal strings in Int Debug/Display methods.\n\nI spent some time crafting an optimized version for the most commonly used case, that is, printing as decimals. This should be non measurable in most programs but might give us a minor speedup on some cases like serde and rustc json serializers.\n\nI wrote a well optimized version [here](https://github.com/arthurprs/rust-optimized-inttostr). Further optimizations are possible but I tried to keep the code size small (which I think is important), it's a road of diminished gains.\n\nRunning with rustc 1.2.0-nightly (cffaf0e7a 2015-06-23) @ x64 Linux - Intel(R) Core(TM) i7-2670QM @ 2.20Ghz (My notebook CPU)\n\n```\ntest bench::skewed_h_new_u08    ... bench:      67,156 ns/iter (+/- 3,687)\ntest bench::skewed_h_new_u16    ... bench:     376,573 ns/iter (+/- 23,732)\ntest bench::skewed_h_new_u32    ... bench:   4,202,419 ns/iter (+/- 203,200)\ntest bench::skewed_h_new_u64    ... bench:   5,097,971 ns/iter (+/- 337,608)\ntest bench::skewed_h_stdlib_u08 ... bench:      69,270 ns/iter (+/- 3,321)\ntest bench::skewed_h_stdlib_u16 ... bench:     420,660 ns/iter (+/- 20,196)\ntest bench::skewed_h_stdlib_u32 ... bench:   5,451,519 ns/iter (+/- 417,856)\ntest bench::skewed_h_stdlib_u64 ... bench:   8,360,505 ns/iter (+/- 453,566)\ntest bench::skewed_l_new_u08    ... bench:      68,705 ns/iter (+/- 3,657)\ntest bench::skewed_l_new_u16    ... bench:     376,786 ns/iter (+/- 20,804)\ntest bench::skewed_l_new_u32    ... bench:   4,207,858 ns/iter (+/- 210,143)\ntest bench::skewed_l_new_u64    ... bench:   5,117,710 ns/iter (+/- 350,017)\ntest bench::skewed_l_stdlib_u08 ... bench:      68,252 ns/iter (+/- 4,251)\ntest bench::skewed_l_stdlib_u16 ... bench:     417,692 ns/iter (+/- 22,882)\ntest bench::skewed_l_stdlib_u32 ... bench:   5,383,473 ns/iter (+/- 322,479)\ntest bench::skewed_l_stdlib_u64 ... bench:   8,380,458 ns/iter (+/- 357,894)\ntest bench::skewed_m_new_u08    ... bench:      68,585 ns/iter (+/- 3,099)\ntest bench::skewed_m_new_u16    ... bench:     375,588 ns/iter (+/- 20,074)\ntest bench::skewed_m_new_u32    ... bench:   4,178,506 ns/iter (+/- 234,058)\ntest bench::skewed_m_new_u64    ... bench:   5,041,359 ns/iter (+/- 302,088)\ntest bench::skewed_m_stdlib_u08 ... bench:      67,975 ns/iter (+/- 3,570)\ntest bench::skewed_m_stdlib_u16 ... bench:     421,650 ns/iter (+/- 22,984)\ntest bench::skewed_m_stdlib_u32 ... bench:   5,422,042 ns/iter (+/- 330,263)\ntest bench::skewed_m_stdlib_u64 ... bench:   8,358,590 ns/iter (+/- 418,777)\n```\n\nRunning with rustc 1.3.0-nightly (e5a28bca7 2015-06-25) @ x86 Linux - Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz (EC2 c1.medium)\n\n```\ntest bench::skewed_h_new_u08    ... bench:     128,062 ns/iter (+/- 624)\ntest bench::skewed_h_new_u16    ... bench:     701,687 ns/iter (+/- 2,595)\ntest bench::skewed_h_new_u32    ... bench:   8,013,071 ns/iter (+/- 86,295)\ntest bench::skewed_h_new_u64    ... bench:  20,619,636 ns/iter (+/- 244,472)\ntest bench::skewed_h_stdlib_u08 ... bench:     139,061 ns/iter (+/- 4,208)\ntest bench::skewed_h_stdlib_u16 ... bench:     840,872 ns/iter (+/- 8,870)\ntest bench::skewed_h_stdlib_u32 ... bench:  10,934,092 ns/iter (+/- 86,377)\ntest bench::skewed_h_stdlib_u64 ... bench:  62,690,245 ns/iter (+/- 4,648,790)\ntest bench::skewed_l_new_u08    ... bench:     128,245 ns/iter (+/- 1,491)\ntest bench::skewed_l_new_u16    ... bench:     702,062 ns/iter (+/- 13,180)\ntest bench::skewed_l_new_u32    ... bench:   8,021,507 ns/iter (+/- 325,452)\ntest bench::skewed_l_new_u64    ... bench:  20,596,010 ns/iter (+/- 962,453)\ntest bench::skewed_l_stdlib_u08 ... bench:     139,014 ns/iter (+/- 7,428)\ntest bench::skewed_l_stdlib_u16 ... bench:     840,780 ns/iter (+/- 16,955)\ntest bench::skewed_l_stdlib_u32 ... bench:  10,926,288 ns/iter (+/- 309,821)\ntest bench::skewed_l_stdlib_u64 ... bench:  62,649,913 ns/iter (+/- 1,106,527)\ntest bench::skewed_m_new_u08    ... bench:     128,949 ns/iter (+/- 16,267)\ntest bench::skewed_m_new_u16    ... bench:     706,043 ns/iter (+/- 73,190)\ntest bench::skewed_m_new_u32    ... bench:   8,001,205 ns/iter (+/- 219,644)\ntest bench::skewed_m_new_u64    ... bench:  20,569,162 ns/iter (+/- 430,049)\ntest bench::skewed_m_stdlib_u08 ... bench:     138,840 ns/iter (+/- 5,948)\ntest bench::skewed_m_stdlib_u16 ... bench:     840,655 ns/iter (+/- 9,596)\ntest bench::skewed_m_stdlib_u32 ... bench:  10,949,664 ns/iter (+/- 191,620)\ntest bench::skewed_m_stdlib_u64 ... bench:  62,858,086 ns/iter (+/- 1,316,625)\n```\n\nOn modern x64 CPUs it's pretty much the same speed as the stdlib implementation for very small numbers, but pulls ahead as the length of the decimal increases.\n\nOn slight older CPUs (worse ALUs) or x86 it's pretty much always faster.\n\nIs this something we want into the stdlib?\n\n---\n\nFollow up of #26310 \nmarking @llogiq because of previous interest\nmarking @lifthrasiir because of the awesome work on similar stuff\n", "closed_by": {"login": "arthurprs", "id": 715958, "node_id": "MDQ6VXNlcjcxNTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/715958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurprs", "html_url": "https://github.com/arthurprs", "followers_url": "https://api.github.com/users/arthurprs/followers", "following_url": "https://api.github.com/users/arthurprs/following{/other_user}", "gists_url": "https://api.github.com/users/arthurprs/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurprs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurprs/subscriptions", "organizations_url": "https://api.github.com/users/arthurprs/orgs", "repos_url": "https://api.github.com/users/arthurprs/repos", "events_url": "https://api.github.com/users/arthurprs/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurprs/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26578/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26578/timeline", "performed_via_github_app": null, "state_reason": "completed"}