{"url": "https://api.github.com/repos/rust-lang/rust/issues/48055", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48055/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48055/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48055/events", "html_url": "https://github.com/rust-lang/rust/issues/48055", "id": 295232972, "node_id": "MDU6SXNzdWUyOTUyMzI5NzI=", "number": 48055, "title": "Tracking issue for RFC #1909: Unsized Rvalues ", "user": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 89436934, "node_id": "MDU6TGFiZWw4OTQzNjkzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved", "name": "B-RFC-approved", "color": "d304cb", "default": false, "description": "Approved by a merged RFC but not yet implemented."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 1472526996, "node_id": "MDU6TGFiZWwxNDcyNTI2OTk2", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unsized_locals", "name": "F-unsized_locals", "color": "f9c0cc", "default": false, "description": "`#![feature(unsized_locals)]`"}, {"id": 2464527098, "node_id": "MDU6TGFiZWwyNDY0NTI3MDk4", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unsized_fn_params", "name": "F-unsized_fn_params", "color": "f9c0cc", "default": false, "description": "`#![feature(unsized_fn_params)]`"}, {"id": 3537216018, "node_id": "LA_kwDOAAsO6M7S1aIS", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-design-concerns", "name": "S-tracking-design-concerns", "color": "4682b4", "default": false, "description": "Blocking design concerns"}, {"id": 3537250192, "node_id": "LA_kwDOAAsO6M7S1ieQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-needs-summary", "name": "S-tracking-needs-summary", "color": "4682b4", "default": false, "description": "It's hard to tell what's been done and what hasn't! Someone should do some investigation."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 58, "created_at": "2018-02-07T17:51:23Z", "updated_at": "2023-05-05T20:09:59Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a tracking issue for the RFC \"Unsized Rvalues \" (rust-lang/rfcs#1909).\r\n\r\n**Steps:**\r\n\r\n- [ ] Implement the RFC (cc @rust-lang/compiler -- can anyone write up mentoring instructions?)\r\n- [ ] Adjust documentation ([see instructions on forge][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on forge][stabilization-guide])\r\n\r\n[stabilization-guide]: https://forge.rust-lang.org/stabilization-guide.html\r\n[doc-guide]: https://forge.rust-lang.org/stabilization-guide.html#updating-documentation\r\n\r\n**Related bugs:**\r\n\r\n- [ ] https://github.com/rust-lang/rust/issues/61335 -- ICE when combined with async-await\r\n- [x] https://github.com/rust-lang/rust/issues/68304 -- \r\n`Box<dyn FnOnce>` doesn't respect self alignment\r\n\r\n**Unresolved questions:**\r\n\r\n- [ ] Can we carve out a path of \"guaranteed no alloca\" optimization? (See #68304 for some related discussion)\r\n- [ ] Given that LLVM doesn't seem to support alloca with alignment, how do we expect to respect alignment limitations? (See #68304 for one specific instance)\r\n- [ ] How can we mitigate the risk of unintended unsized or large allocas? Note that the problem already exists today with large structs/arrays. A MIR lint against large/variable stack sizes would probably help users avoid these stack overflows. Do we want it in Clippy? rustc?\r\n- [ ] How do we handle truely-unsized DSTs when we get them? They can theoretically be passed to functions, but they can never be put in temporaries.\r\n- [ ] Decide on a concrete syntax for VLAs.\r\n- [ ] What about the [interactions between async-await/generators and unsized locals](https://github.com/rust-lang/rust/issues/48055#issuecomment-583743014)?\r\n- [ ] We currently allow `extern type` arguments with `unsized_fn_params`, but that does not make *that* much sense.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48055/reactions", "total_count": 119, "+1": 28, "-1": 0, "laugh": 1, "hooray": 51, "confused": 0, "heart": 35, "rocket": 4, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48055/timeline", "performed_via_github_app": null, "state_reason": null}