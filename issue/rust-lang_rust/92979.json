{"url": "https://api.github.com/repos/rust-lang/rust/issues/92979", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92979/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92979/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92979/events", "html_url": "https://github.com/rust-lang/rust/issues/92979", "id": 1105139961, "node_id": "I_kwDOAAsO6M5B3xj5", "number": 92979, "title": "ICE: failed to get layout for `[type error]`", "user": {"login": "alvarozamora", "id": 38225029, "node_id": "MDQ6VXNlcjM4MjI1MDI5", "avatar_url": "https://avatars.githubusercontent.com/u/38225029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvarozamora", "html_url": "https://github.com/alvarozamora", "followers_url": "https://api.github.com/users/alvarozamora/followers", "following_url": "https://api.github.com/users/alvarozamora/following{/other_user}", "gists_url": "https://api.github.com/users/alvarozamora/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvarozamora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvarozamora/subscriptions", "organizations_url": "https://api.github.com/users/alvarozamora/orgs", "repos_url": "https://api.github.com/users/alvarozamora/repos", "events_url": "https://api.github.com/users/alvarozamora/events{/privacy}", "received_events_url": "https://api.github.com/users/alvarozamora/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-16T19:08:10Z", "updated_at": "2023-03-03T12:58:14Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::fs;\r\nuse std::fs::File;\r\nuse std::io::Read;\r\nuse std::convert::TryInto;\r\n\r\nfn get_file_as_byte_vec(filename: &String) -> Vec<u8> {\r\n    let mut f = File::open(&filename).expect(\"no file found\");\r\n    let metadata = fs::metadata(&filename).expect(\"unable to read metadata\");\r\n    let mut buffer = vec![0; metadata.len() as usize];\r\n    f.read(&mut buffer).expect(\"buffer overflow\");\r\n\r\n    buffer\r\n}\r\n\r\n\r\n\r\nfn demo<T, const N: usize>(v: Vec<T>) -> [T; N] {\r\n    v.try_into()\r\n        .unwrap_or_else(|v: Vec<T>| panic!(\"Expected a Vec of length {} but it was {}\", N, v.len()))\r\n}\r\n\r\n\r\nfn main() {\r\n\r\n    // Specify filepath\r\n    let file: &String = &String::from(\"SomeBinaryDataFileWith4ByteHeaders_f32s_and_u32s\");\r\n\r\n    // Read file into a vector of bytes\r\n    let file_data = get_file_as_byte_vec(file);\r\n    \r\n    // Print length of vector and first few values\r\n    let length = file_data.len();\r\n    println!(\"The read function read {} bytes\", length);\r\n    println!(\"The first few bytes:\");\r\n    for i in 0..20{\r\n        println!(\"{}\", file_data[i]);\r\n    }\r\n\r\n    // Manually count just to make sure\r\n    let mut n: u64 = 0;\r\n    for data in file_data{\r\n        n += 1;\r\n    }\r\n    println!(\"We counted {} bytes\", n);\r\n    assert!(n as usize == length, \"Manual counting does not equal len method\");\r\n\r\n    // Simulation parameters \r\n    const N: usize = 49627502;                // Number of Particles\r\n    const bs: f64 = 125.0;                  // Box Size\r\n    const HEADER_INCREMENT: u64 = 4*1;\r\n\r\n    // Initialize index and counter variables\r\n    let (mut j, mut pos, mut vel, mut id, mut mass): (u64, u64, u64, u64, u64) = (0, 0, 0, 0, 0);\r\n\r\n    // Unpack Position Data\r\n    j += HEADER_INCREMENT;\r\n    let mut position: Vec<f32> = Vec::new();\r\n    while position.len() < N*3 {\r\n\r\n        let p: Vec<u8> = Vec::new();\r\n        for item in 0i8..4 {\r\n            let item = item;\r\n            p.push(file_data[j as usize]);\r\n            j += 1;\r\n        }\r\n        &mut position[position.len()] = f32::from_be_bytes(demo(p));\r\n    }\r\n    \r\n    // Ensure position data is indeed position by checking values\r\n    for p in position {\r\n        assert!((p > 0.) & (p < 125.), \"Not in box\")\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0 (02072b482 2022-01-11)\r\nbinary: rustc\r\ncommit-hash: 02072b482a8b5357f7fb5e5637444ae30e423c40\r\ncommit-date: 2022-01-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: unused variable: `data`\r\n  --> fixbinary.rs:41:9\r\n   |\r\n41 |     for data in file_data{\r\n   |         ^^^^ help: if this is intentional, prefix it with an underscore: `_data`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused variable: `pos`\r\n  --> fixbinary.rs:53:21\r\n   |\r\n53 |     let (mut j, mut pos, mut vel, mut id, mut mass): (u64, u64, u64, u64, u64) = (0, 0, 0, 0, 0);\r\n   |                     ^^^ help: if this is intentional, prefix it with an underscore: `_pos`\r\n\r\nwarning: unused variable: `vel`\r\n  --> fixbinary.rs:53:30\r\n   |\r\n53 |     let (mut j, mut pos, mut vel, mut id, mut mass): (u64, u64, u64, u64, u64) = (0, 0, 0, 0, 0);\r\n   |                              ^^^ help: if this is intentional, prefix it with an underscore: `_vel`\r\n\r\nwarning: unused variable: `id`\r\n  --> fixbinary.rs:53:39\r\n   |\r\n53 |     let (mut j, mut pos, mut vel, mut id, mut mass): (u64, u64, u64, u64, u64) = (0, 0, 0, 0, 0);\r\n   |                                       ^^ help: if this is intentional, prefix it with an underscore: `_id`\r\n\r\nwarning: unused variable: `mass`\r\n  --> fixbinary.rs:53:47\r\n   |\r\n53 |     let (mut j, mut pos, mut vel, mut id, mut mass): (u64, u64, u64, u64, u64) = (0, 0, 0, 0, 0);\r\n   |                                               ^^^^ help: if this is intentional, prefix it with an underscore: `_mass`\r\n\r\nwarning: unused variable: `item`\r\n  --> fixbinary.rs:62:17\r\n   |\r\n62 |             let item = item;\r\n   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_item`\r\n\r\nwarning: constant is never used: `bs`\r\n  --> fixbinary.rs:49:5\r\n   |\r\n49 |     const bs: f64 = 125.0;                  // Box Size\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: constant `bs` should have an upper case name\r\n  --> fixbinary.rs:49:11\r\n   |\r\n49 |     const bs: f64 = 125.0;                  // Box Size\r\n   |           ^^ help: convert the identifier to upper case: `BS`\r\n   |\r\n   = note: `#[warn(non_upper_case_globals)]` on by default\r\n\r\nerror: internal compiler error: compiler/rustc_codegen_llvm/src/context.rs:867:13: failed to get layout for `[type error]`: the type `[type error]` has an unknown layout\r\n  --> fixbinary.rs:23:1\r\n   |\r\n23 | fn main() {\r\n   | ^^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/compiler/rustc_errors/src/lib.rs:1115:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.0 (02072b482 2022-01-11) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error; 8 warnings emitted\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/compiler/rustc_errors/src/lib.rs:1115:9\r\nstack backtrace:\r\n   0:     0x7f204083be5c - std::backtrace_rs::backtrace::libunwind::trace::h093d4af0eabdfc15\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7f204083be5c - std::backtrace_rs::backtrace::trace_unsynchronized::h2b90813d74c759ca\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f204083be5c - std::sys_common::backtrace::_print_fmt::hfaa8856bf3eca13f\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f204083be5c - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h0cbaef3adcb5a454\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f204089918c - core::fmt::write::h35a8eb836b847360\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/core/src/fmt/mod.rs:1149:17\r\n   5:     0x7f204082bf55 - std::io::Write::write_fmt::h45f2b8390f189782\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/io/mod.rs:1697:15\r\n   6:     0x7f204083f2b0 - std::sys_common::backtrace::_print::h56f62073b0e62985\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f204083f2b0 - std::sys_common::backtrace::print::h152fba05ec38941b\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f204083f2b0 - std::panicking::default_hook::{{closure}}::ha3121a0b8482251f\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/panicking.rs:211:50\r\n   9:     0x7f204083ee65 - std::panicking::default_hook::hde5d78c11ae3b8f6\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/panicking.rs:228:9\r\n  10:     0x7f2040fe8d71 - rustc_driver[b9de4364bfcde3cd]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7f204083fac9 - std::panicking::rust_panic_with_hook::he6f55c3e7ed1777c\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/panicking.rs:610:17\r\n  12:     0x7f2041130bfb - std[40fd643a72e9c5b]::panicking::begin_panic::<rustc_errors[2765bbf9a6752b72]::ExplicitBug>::{closure#0}\r\n  13:     0x7f2041130556 - std[40fd643a72e9c5b]::sys_common::backtrace::__rust_end_short_backtrace::<std[40fd643a72e9c5b]::panicking::begin_panic<rustc_errors[2765bbf9a6752b72]::ExplicitBug>::{closure#0}, !>\r\n  14:     0x7f204116718f - std[40fd643a72e9c5b]::panicking::begin_panic::<rustc_errors[2765bbf9a6752b72]::ExplicitBug>\r\n  15:     0x7f204115e52d - std[40fd643a72e9c5b]::panic::panic_any::<rustc_errors[2765bbf9a6752b72]::ExplicitBug>\r\n  16:     0x7f204115d338 - <rustc_errors[2765bbf9a6752b72]::HandlerInner>::span_bug::<rustc_span[87dd3c90247a33c7]::span_encoding::Span>\r\n  17:     0x7f204115d230 - <rustc_errors[2765bbf9a6752b72]::Handler>::span_bug::<rustc_span[87dd3c90247a33c7]::span_encoding::Span>\r\n  18:     0x7f2041154552 - rustc_middle[da375b81956c4f3d]::ty::context::tls::with_opt::<rustc_middle[da375b81956c4f3d]::util::bug::opt_span_bug_fmt<rustc_span[87dd3c90247a33c7]::span_encoding::Span>::{closure#0}, ()>\r\n  19:     0x7f20411543e0 - rustc_middle[da375b81956c4f3d]::util::bug::opt_span_bug_fmt::<rustc_span[87dd3c90247a33c7]::span_encoding::Span>\r\n  20:     0x7f20411543ac - rustc_middle[da375b81956c4f3d]::util::bug::span_bug_fmt::<rustc_span[87dd3c90247a33c7]::span_encoding::Span>\r\n  21:     0x7f204112b7b6 - <rustc_codegen_llvm[7e58ca7f3e3a6114]::context::CodegenCx as rustc_middle[da375b81956c4f3d]::ty::layout::LayoutOfHelpers>::handle_layout_err\r\n  22:     0x7f20411291fa - <rustc_codegen_llvm[7e58ca7f3e3a6114]::context::CodegenCx as rustc_middle[da375b81956c4f3d]::ty::layout::LayoutOf>::spanned_layout_of::{closure#0}\r\n  23:     0x7f2042247f2e - <rustc_codegen_llvm[7e58ca7f3e3a6114]::context::CodegenCx as rustc_middle[da375b81956c4f3d]::ty::layout::LayoutOf>::spanned_layout_of\r\n  24:     0x7f2042246f8e - <core[5959bd7a20bc512c]::iter::adapters::map::Map<core[5959bd7a20bc512c]::slice::iter::Iter<rustc_middle[da375b81956c4f3d]::mir::LocalDecl>, rustc_codegen_ssa[131e031ff59460c4]::mir::analyze::non_ssa_locals<rustc_codegen_llvm[7e58ca7f3e3a6114]::builder::Builder>::{closure#0}> as core[5959bd7a20bc512c]::iter::traits::iterator::Iterator>::fold::<(), core[5959bd7a20bc512c]::iter::traits::iterator::Iterator::for_each::call<rustc_codegen_ssa[131e031ff59460c4]::mir::analyze::LocalKind, <alloc[57a5c12a58f2352a]::vec::Vec<rustc_codegen_ssa[131e031ff59460c4]::mir::analyze::LocalKind> as alloc[57a5c12a58f2352a]::vec::spec_extend::SpecExtend<rustc_codegen_ssa[131e031ff59460c4]::mir::analyze::LocalKind, core[5959bd7a20bc512c]::iter::adapters::map::Map<core[5959bd7a20bc512c]::slice::iter::Iter<rustc_middle[da375b81956c4f3d]::mir::LocalDecl>, rustc_codegen_ssa[131e031ff59460c4]::mir::analyze::non_ssa_locals<rustc_codegen_llvm[7e58ca7f3e3a6114]::builder::Builder>::{closure#0}>>>::spec_extend::{closure#0}>::{closure#0}>\r\n  25:     0x7f2042274483 - rustc_codegen_ssa[131e031ff59460c4]::mir::analyze::non_ssa_locals::<rustc_codegen_llvm[7e58ca7f3e3a6114]::builder::Builder>\r\n  26:     0x7f204226063d - rustc_codegen_ssa[131e031ff59460c4]::mir::codegen_mir::<rustc_codegen_llvm[7e58ca7f3e3a6114]::builder::Builder>\r\n  27:     0x7f2042244cc4 - rustc_codegen_ssa[131e031ff59460c4]::base::codegen_instance::<rustc_codegen_llvm[7e58ca7f3e3a6114]::builder::Builder>\r\n  28:     0x7f2042254efe - <rustc_middle[da375b81956c4f3d]::mir::mono::MonoItem as rustc_codegen_ssa[131e031ff59460c4]::mono_item::MonoItemExt>::define::<rustc_codegen_llvm[7e58ca7f3e3a6114]::builder::Builder>\r\n  29:     0x7f2042258e50 - rustc_codegen_llvm[7e58ca7f3e3a6114]::base::compile_codegen_unit::module_codegen\r\n  30:     0x7f2042bfb176 - <rustc_query_system[54375e604b07d15e]::dep_graph::graph::DepGraph<rustc_middle[da375b81956c4f3d]::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle[da375b81956c4f3d]::ty::context::TyCtxt, rustc_span[87dd3c90247a33c7]::symbol::Symbol, rustc_codegen_ssa[131e031ff59460c4]::ModuleCodegen<rustc_codegen_llvm[7e58ca7f3e3a6114]::ModuleLlvm>>\r\n  31:     0x7f2042c57337 - rustc_codegen_llvm[7e58ca7f3e3a6114]::base::compile_codegen_unit\r\n  32:     0x7f2042c11499 - rustc_codegen_ssa[131e031ff59460c4]::base::codegen_crate::<rustc_codegen_llvm[7e58ca7f3e3a6114]::LlvmCodegenBackend>\r\n  33:     0x7f2042c3bb7a - <rustc_codegen_llvm[7e58ca7f3e3a6114]::LlvmCodegenBackend as rustc_codegen_ssa[131e031ff59460c4]::traits::backend::CodegenBackend>::codegen_crate\r\n  34:     0x7f2042bc761e - <rustc_interface[3fb879ef72273690]::queries::Queries>::ongoing_codegen\r\n  35:     0x7f2042b8baba - <rustc_interface[3fb879ef72273690]::interface::Compiler>::enter::<rustc_driver[b9de4364bfcde3cd]::run_compiler::{closure#1}::{closure#2}, core[5959bd7a20bc512c]::result::Result<core[5959bd7a20bc512c]::option::Option<rustc_interface[3fb879ef72273690]::queries::Linker>, rustc_errors[2765bbf9a6752b72]::ErrorReported>>\r\n  36:     0x7f2042b87984 - rustc_span[87dd3c90247a33c7]::with_source_map::<core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>, rustc_interface[3fb879ef72273690]::interface::create_compiler_and_run<core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>, rustc_driver[b9de4364bfcde3cd]::run_compiler::{closure#1}>::{closure#1}>\r\n  37:     0x7f2042b8c8df - <scoped_tls[2c65bc5c0a345aa9]::ScopedKey<rustc_span[87dd3c90247a33c7]::SessionGlobals>>::set::<rustc_interface[3fb879ef72273690]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[3fb879ef72273690]::interface::run_compiler<core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>, rustc_driver[b9de4364bfcde3cd]::run_compiler::{closure#1}>::{closure#0}, core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>>::{closure#0}::{closure#0}, core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>>\r\n  38:     0x7f2042b8aa15 - std[40fd643a72e9c5b]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[3fb879ef72273690]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[3fb879ef72273690]::interface::run_compiler<core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>, rustc_driver[b9de4364bfcde3cd]::run_compiler::{closure#1}>::{closure#0}, core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>>::{closure#0}, core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>>\r\n  39:     0x7f2042bb4baa - <<std[40fd643a72e9c5b]::thread::Builder>::spawn_unchecked<rustc_interface[3fb879ef72273690]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface[3fb879ef72273690]::interface::run_compiler<core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>, rustc_driver[b9de4364bfcde3cd]::run_compiler::{closure#1}>::{closure#0}, core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>>::{closure#0}, core[5959bd7a20bc512c]::result::Result<(), rustc_errors[2765bbf9a6752b72]::ErrorReported>>::{closure#1} as core[5959bd7a20bc512c]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  40:     0x7f204084abf3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h3604301cdaaa9dbf\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/alloc/src/boxed.rs:1694:9\r\n  41:     0x7f204084abf3 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h4cf736d2de892eff\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/alloc/src/boxed.rs:1694:9\r\n  42:     0x7f204084abf3 - std::sys::unix::thread::Thread::new::thread_start::h71a82d4ee5b02c9b\r\n                               at /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/library/std/src/sys/unix/thread.rs:106:17\r\n  43:     0x7f204058bea5 - start_thread\r\n  44:     0x7f203fea89fd - __clone\r\n  45:                0x0 - <unknown>\r\n\r\n```\r\n\r\n</p>\r\n\r\n\r\nI'm trying to read in a binary file (in a probably odd way). I'm just barely learning Rust; started <1 week ago. Sorry for breaking things.\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92979/timeline", "performed_via_github_app": null, "state_reason": null}