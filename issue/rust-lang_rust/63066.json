{"url": "https://api.github.com/repos/rust-lang/rust/issues/63066", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63066/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63066/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63066/events", "html_url": "https://github.com/rust-lang/rust/issues/63066", "id": 473711683, "node_id": "MDU6SXNzdWU0NzM3MTE2ODM=", "number": 63066, "title": "Meta tracking issue for `impl Trait`", "user": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37977651, "node_id": "MDU6TGFiZWwzNzk3NzY1MQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/metabug", "name": "metabug", "color": "5319e7", "default": false, "description": "Issues about issues themselves (\"bugs about bugs\")"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537211959, "node_id": "LA_kwDOAAsO6M7S1ZI3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-impl-incomplete", "name": "S-tracking-impl-incomplete", "color": "4682b4", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-07-28T06:38:44Z", "updated_at": "2022-06-22T17:04:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue tracks the progress of `impl Trait` in general.\r\n\r\nThis issue is not for discussion about specific extensions to `impl Trait` and only exists to provide links to other places that track the progress of specific issues. If you wish to discuss some subject related to `impl Trait`, please find an existing appropriate issue below or create an new issue and comment here with a link to the newly created issue.\r\n\r\n--------------------------\r\n\r\nThe `impl Trait` related issues currently on deck are as follows:\r\n\r\n* [ ] [Label `A-impl-trait`](https://github.com/rust-lang/rust/labels/A-impl-trait)\r\n* [ ] Permit `type Foo = impl Bar;`. https://github.com/rust-lang/rust/issues/63063\r\n   * [ ] Permit `type Foo = impl Bar;` in `trait` definitions. https://github.com/rust-lang/rust/issues/29661\r\n* [ ] In `const` and  `static` items and `let` bindings. https://github.com/rust-lang/rust/issues/63065\r\n* [x] Member constraints in region inference: https://github.com/rust-lang/rust/issues/61997\r\n* [ ] Existential lifetimes. https://github.com/rust-lang/rust/issues/60670\r\n* [ ] Support lifetime elision in argument position. https://github.com/rust-lang/rust/issues/49287\r\n* [ ] Should we allow `impl Trait` after `->` in `fn` types or parentheses sugar? https://github.com/rust-lang/rust/issues/45994\r\n* [ ] Do we have to impose a DAG across all functions to allow for auto-safe leakage, or can we use some kind of deferral.\r\n   - Discussion: https://github.com/rust-lang/rust/pull/35091#discussion_r73738398\r\n   - Present semantics: DAG.\r\n* [ ] Should we permit specifying types if some parameters are implicit and some are explicit? e.g., `fn foo<T>(x: impl Iterator<Item = T>>)`?\r\n    - Current behavior: An error to specify types\r\n    - Other alternatives: [treat `impl Trait` as arguments in the list, permitting migration]\r\n* [ ] [Some concerns about nested impl Trait usage](https://github.com/rust-lang/rust/issues/34511#issuecomment-350715858)\r\n\r\n--------------------------\r\n\r\nOpen RFCs:\r\n\r\nNone.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63066/reactions", "total_count": 81, "+1": 69, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 9, "rocket": 1, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63066/timeline", "performed_via_github_app": null, "state_reason": null}