{"url": "https://api.github.com/repos/rust-lang/rust/issues/91092", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91092/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91092/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91092/events", "html_url": "https://github.com/rust-lang/rust/issues/91092", "id": 1059222993, "node_id": "I_kwDOAAsO6M4_InXR", "number": 91092, "title": "Intermittent coverage failures (some test runs not counted) ", "user": {"login": "scole66", "id": 2530254, "node_id": "MDQ6VXNlcjI1MzAyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2530254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scole66", "html_url": "https://github.com/scole66", "followers_url": "https://api.github.com/users/scole66/followers", "following_url": "https://api.github.com/users/scole66/following{/other_user}", "gists_url": "https://api.github.com/users/scole66/gists{/gist_id}", "starred_url": "https://api.github.com/users/scole66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scole66/subscriptions", "organizations_url": "https://api.github.com/users/scole66/orgs", "repos_url": "https://api.github.com/users/scole66/repos", "events_url": "https://api.github.com/users/scole66/events{/privacy}", "received_events_url": "https://api.github.com/users/scole66/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2483744621, "node_id": "MDU6TGFiZWwyNDgzNzQ0NjIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-code-coverage", "name": "A-code-coverage", "color": "f7e101", "default": false, "description": "Area: Source-based code coverage (-Cinstrument-coverage)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2021-11-20T20:25:40Z", "updated_at": "2023-05-13T08:41:13Z", "closed_at": "2023-05-13T08:41:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI have a large-ish project with ~6000 testcases, and for a long time now, code coverage has been hit-or-miss. The issue is that some of the test cases don't seem to get their data included in the `profraw` files, and so don't show up as having an effect on coverage. The unrecorded tests seem to be essentially random, but with thousands of tests, single-digit-percentage failures are noticed on every test run.\r\n\r\nIt's been annoying. So I finally sat down to try and reduce to a simplest error, but it still takes multiple files, so is difficult to include inline in a GitHub issue.\r\n\r\nThe tree:\r\n```\r\n.\r\n\u251c\u2500\u2500 Cargo.lock\r\n\u251c\u2500\u2500 Cargo.toml\r\n\u251c\u2500\u2500 check_bug.sh\r\n\u2514\u2500\u2500 src\r\n    \u251c\u2500\u2500 main.rs\r\n    \u2514\u2500\u2500 statething.rs\r\n```\r\n\r\nWhen I run a test via:\r\n```\r\ntst ()\r\n{\r\n    rm -f res-*.profraw;\r\n    RUST_BACKTRACE=1 RUSTFLAGS=\"-Zinstrument-coverage\" LLVM_PROFILE_FILE=\"res-%m.profraw\" cargo test \"$@\";\r\n    cargo profdata -- merge res-*.profraw --output=res.profdata\r\n}\r\ntst statething\r\n```\r\nwhich shows 2 tests run:\r\n```\r\n    Finished test [unoptimized + debuginfo] target(s) in 0.00s\r\n     Running unittests (target/debug/deps/res-6177536c73daf6cd)\r\n\r\nrunning 2 tests\r\ntest statething::tests::state_has_false ... ok\r\ntest statething::tests::state_has_true ... ok\r\n\r\ntest result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n```\r\n\r\nThen report on that particular function via:\r\n```\r\nreport ()\r\n{\r\n    cargo cov -- show --use-color --ignore-filename-regex='/rustc/|/\\.cargo/|\\.rustup/toolchains' --instr-profile=res.profdata $(objects) --show-line-counts-or-regions -Xdemangler=rustfilt \"$@\"\r\n}\r\nreport --name 5State3has\r\n```\r\n\r\nMost of the time, I see the correct result:\r\n```\r\n<res::statething::State>::has:\r\n    8|      2|    pub fn has(&self, needle: &str) -> bool {\r\n    9|      2|        self.0 == needle\r\n   10|      2|    }\r\n```\r\n\r\nBut sometimes (about 1 in 170 times), I see this:\r\n```\r\n<res::statething::State>::has:\r\n    8|      1|    pub fn has(&self, needle: &str) -> bool {\r\n    9|      1|        self.0 == needle\r\n   10|      1|    }\r\n```\r\n\r\nIt seems to be related to having multiple source files; I could not get similar behavior with only a `main.rs`. I've seen the problem appear on both MacOS (Mohave) and on Windows (in Windows Subsystem for Linux 2)\r\n\r\nThe two-source-file tree mentioned up above (including the script I run to repeat the test until a failure happens), is on a bug-report branch here: https://github.com/scole66/rust-e262/tree/reduction-for-bugreport\r\n\r\nThis really feels like whichever thread is controlling writes to the `profraw` file is missing messages. Queue overrun maybe? (I haven't looked.)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0-nightly (a77da2d45 2021-11-19)\r\nbinary: rustc\r\ncommit-hash: a77da2d454e6caa227a85b16410b95f93495e7e0\r\ncommit-date: 2021-11-19\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91092/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91092/timeline", "performed_via_github_app": null, "state_reason": "completed"}