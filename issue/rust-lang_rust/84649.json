{"url": "https://api.github.com/repos/rust-lang/rust/issues/84649", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84649/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84649/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84649/events", "html_url": "https://github.com/rust-lang/rust/issues/84649", "id": 869834736, "node_id": "MDU6SXNzdWU4Njk4MzQ3MzY=", "number": 84649, "title": "Vec::push_in_capacity ?", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2021-04-28T11:20:59Z", "updated_at": "2022-10-10T00:22:23Z", "closed_at": "2022-10-10T00:22:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "This enhancement suggestion looks a bit silly to me, but I think it's worth asking for an opinion in this bug tracker.\r\n\r\nI think this is a reasonable usage pattern of `Vec::spare_capacity_mut` and `Vec::set_len`. I've used it with a larger SomeData to avoid both an useless initialization and the use of `Vec::push` that in those cases is slightly slower, the disadvantage is that this code contains `unsafe{}` and it's a bit fiddly:\r\n\r\n```rust\r\n#![feature(vec_spare_capacity, maybe_uninit_extra)]\r\nfn cond(i: usize) -> bool { i % 2 == 0 }\r\nstruct SomeData(usize); // Something larger.\r\nfn main() {\r\n    const N: usize = 1_000_000;\r\n    let mut data = Vec::with_capacity(N);\r\n    let mut data_len = 0;\r\n    let data_uninit = data.spare_capacity_mut();\r\n\r\n    for i in 0 .. N {\r\n        if cond(i) {\r\n            data_uninit[data_len].write(SomeData(i));\r\n            data_len += 1;\r\n        }\r\n    }\r\n    unsafe {\r\n        data.set_len(data_len);\r\n    }\r\n}\r\n```\r\n\r\nAn API that removes the unsafety could be:\r\n\r\n```rust\r\n#![feature(vec_push_in_capacity)]\r\nfn cond(i: usize) -> bool { i % 2 == 0 }\r\nstruct SomeData(usize); // Something larger.\r\nfn main() {\r\n    const N: usize = 1_000_000;\r\n    let mut data = Vec::with_capacity(N);\r\n\r\n    for i in 0 .. N {\r\n        if cond(i) {\r\n            data.push_in_capacity(SomeData(i));\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`Vec::push_in_capacity` is similar to `Vec::push`, but it doesn't include any growing strategy (and doesn't include such growing/realloc code in the binary), so it just uses the capacity. If the capacity isn't enough it panics (just like the first code panics if the capacity is finished at `data_uninit[data_len]`).", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84649/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84649/timeline", "performed_via_github_app": null, "state_reason": "completed"}