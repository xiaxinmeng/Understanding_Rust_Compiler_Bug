{"url": "https://api.github.com/repos/rust-lang/rust/issues/53244", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53244/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53244/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53244/events", "html_url": "https://github.com/rust-lang/rust/issues/53244", "id": 349447889, "node_id": "MDU6SXNzdWUzNDk0NDc4ODk=", "number": 53244, "title": "Indirect inference for closure arguments fails depending on the contents of the closure", "user": {"login": "elinorbgr", "id": 3009227, "node_id": "MDQ6VXNlcjMwMDkyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/3009227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elinorbgr", "html_url": "https://github.com/elinorbgr", "followers_url": "https://api.github.com/users/elinorbgr/followers", "following_url": "https://api.github.com/users/elinorbgr/following{/other_user}", "gists_url": "https://api.github.com/users/elinorbgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/elinorbgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elinorbgr/subscriptions", "organizations_url": "https://api.github.com/users/elinorbgr/orgs", "repos_url": "https://api.github.com/users/elinorbgr/repos", "events_url": "https://api.github.com/users/elinorbgr/events{/privacy}", "received_events_url": "https://api.github.com/users/elinorbgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-10T09:47:03Z", "updated_at": "2018-08-13T22:31:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Minimal example I could create:\r\n\r\n```rust\r\ntrait Callback<Args> {\r\n    fn call(&mut self, args: Args);\r\n}\r\n\r\nimpl<F, Args> Callback<Args> for F where F: FnMut(Args) {\r\n    fn call(&mut self, args: Args) {\r\n        self(args)\r\n    }\r\n}\r\n\r\n#[derive(Debug)]\r\nstruct Wrapper<T>(T);\r\n\r\n#[derive(Debug)]\r\nenum Foo {\r\n    Bar,\r\n    Baz,\r\n    Baq\r\n}\r\n\r\nfn use_cb<C: Callback<Wrapper<Foo>>>(mut c: C) {\r\n    c.call(Wrapper(Foo::Baz))\r\n}\r\n\r\nfn main() {\r\n    // this one works\r\n    use_cb(|variant| {\r\n        println!(\"the variant is: {:?}\", variant);\r\n    });\r\n    // this one fails to infer\r\n    use_cb(|variant| {\r\n        println!(\"the variant is: {:?}\", variant.0);\r\n    });\r\n    // with these annotations it works\r\n    use_cb(|variant: Wrapper<_>| {\r\n        println!(\"the variant is: {:?}\", variant.0);\r\n    });\r\n}\r\n```\r\n\r\nnote that the sole difference between the first and second closure is that the first prints `variant` while the other tries to access its inner field.\r\n\r\nIt reproduces on both stable and nightly.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53244/timeline", "performed_via_github_app": null, "state_reason": null}