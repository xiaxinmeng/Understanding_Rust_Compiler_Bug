{"url": "https://api.github.com/repos/rust-lang/rust/issues/84974", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84974/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84974/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84974/events", "html_url": "https://github.com/rust-lang/rust/issues/84974", "id": 877203793, "node_id": "MDU6SXNzdWU4NzcyMDM3OTM=", "number": 84974, "title": "`str::split_terminator` is never finished", "user": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-05-06T08:05:02Z", "updated_at": "2023-01-03T14:05:53Z", "closed_at": "2023-01-03T14:05:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nlet mut iter = \"A..B..\".split_terminator('.');\r\ndbg!(&iter); // finished: false (expected)\r\n    \r\niter.by_ref().for_each(drop);\r\ndbg!(&iter); // finished: false (unexpected)\r\n    \r\ndbg!(iter.next());\r\ndbg!(&iter); // finished: false (unexpected)\r\n```\r\n<details><summary>output</summary>\r\n<p>\r\n\r\n```\r\n[src/main.rs:3] &iter = SplitTerminator(\r\n    SplitInternal {\r\n        start: 0,\r\n        end: 6,\r\n        matcher: CharSearcher {\r\n            haystack: \"A..B..\",\r\n            finger: 0,\r\n            finger_back: 6,\r\n            needle: '.',\r\n            utf8_size: 1,\r\n            utf8_encoded: [\r\n                46,\r\n                0,\r\n                0,\r\n                0,\r\n            ],\r\n        },\r\n        allow_trailing_empty: false,\r\n        finished: false,\r\n    },\r\n)\r\n[src/main.rs:6] &iter = SplitTerminator(\r\n    SplitInternal {\r\n        start: 6,\r\n        end: 6,\r\n        matcher: CharSearcher {\r\n            haystack: \"A..B..\",\r\n            finger: 6,\r\n            finger_back: 6,\r\n            needle: '.',\r\n            utf8_size: 1,\r\n            utf8_encoded: [\r\n                46,\r\n                0,\r\n                0,\r\n                0,\r\n            ],\r\n        },\r\n        allow_trailing_empty: false,\r\n        finished: false,\r\n    },\r\n)\r\n[src/main.rs:8] iter.next() = None\r\n[src/main.rs:9] &iter = SplitTerminator(\r\n    SplitInternal {\r\n        start: 6,\r\n        end: 6,\r\n        matcher: CharSearcher {\r\n            haystack: \"A..B..\",\r\n            finger: 6,\r\n            finger_back: 6,\r\n            needle: '.',\r\n            utf8_size: 1,\r\n            utf8_encoded: [\r\n                46,\r\n                0,\r\n                0,\r\n                0,\r\n            ],\r\n        },\r\n        allow_trailing_empty: false,\r\n        finished: false,\r\n    },\r\n)\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\nI've expected the `finished` flag to be set when the iterator is exhausted, however it isn't.\r\n\r\n\r\n### Meta\r\n\r\nTested on playground's [stable](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=46a4708ce0c82c8d86e1d3d610e7730f) `1.51.0` and [nightly](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=46a4708ce0c82c8d86e1d3d610e7730f) `1.54.0-nightly (2021-05-05 bacf770f2983a52f31e3)`\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n\r\n### Likely cause\r\n\r\nIt seems this behaviour is caused by [`allow_trailing_empty: false`](https://github.com/rust-lang/rust/blob/d620ae10709ca3669cda89db8b29afcd9accc188/library/core/src/str/mod.rs#L1350): `SplitInternal` only sets the finished flag if [`allow_trailing_empty: true` or there is something to return](https://github.com/rust-lang/rust/blob/d620ae10709ca3669cda89db8b29afcd9accc188/library/core/src/str/iter.rs#L581-L582).\r\n\r\nShould the flag be set unconditionally? Maybe like this?\r\n\r\n```rust\r\nif !self.finished {\r\n    self.finished = true;\r\n\r\n    if self.allow_trailing_empty || self.end - self.start > 0 {\r\n        return unsafe { ... } \r\n    }\r\n}\r\n\r\nNone\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84974/timeline", "performed_via_github_app": null, "state_reason": "completed"}