{"url": "https://api.github.com/repos/rust-lang/rust/issues/70115", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70115/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70115/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70115/events", "html_url": "https://github.com/rust-lang/rust/issues/70115", "id": 583890587, "node_id": "MDU6SXNzdWU1ODM4OTA1ODc=", "number": 70115, "title": "Ugly error reporting on binary operation between two condition flows", "user": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-18T17:30:31Z", "updated_at": "2020-03-18T19:02:23Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code:\r\n\r\n```rust\r\nfn to_log_flags(fatal: bool, recursive: bool) -> u32 {\r\n    if fatal { 1 } else { 0 } |\r\n    if recursive { 2 } else { 0 }\r\n}\r\n```\r\n\r\ngives the following error:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: expected identifier, found keyword `if`\r\n --> src/main.rs:3:5\r\n  |\r\n3 |     if recursive { 2 } else { 0 }\r\n  |     ^^ expected identifier, found keyword\r\n\r\nerror: expected identifier, found `2`\r\n --> src/main.rs:3:20\r\n  |\r\n3 |     if recursive { 2 } else { 0 }\r\n  |                    ^ expected identifier\r\n\r\nerror: expected one of `,`, `:`, or `@`, found `recursive`\r\n --> src/main.rs:3:8\r\n  |\r\n3 |     if recursive { 2 } else { 0 }\r\n  |       -^^^^^^^^^ expected one of `,`, `:`, or `@`\r\n  |       |\r\n  |       help: missing `,`\r\n\r\nerror: expected identifier, found keyword `else`\r\n --> src/main.rs:3:24\r\n  |\r\n3 |     if recursive { 2 } else { 0 }\r\n  |                        ^^^^ expected identifier, found keyword\r\n  |\r\nhelp: you can escape reserved keywords to use them as identifiers\r\n  |\r\n3 |     if recursive { 2 } r#else { 0 }\r\n  |                        ^^^^^^\r\n\r\nerror: expected identifier, found `0`\r\n --> src/main.rs:3:31\r\n  |\r\n3 |     if recursive { 2 } else { 0 }\r\n  |                               ^ expected identifier\r\n\r\nerror: expected one of `,` or `:`, found keyword `else`\r\n --> src/main.rs:3:24\r\n  |\r\n3 |     if recursive { 2 } else { 0 }\r\n  |                       -^^^^ expected one of `,` or `:`\r\n  |                       |\r\n  |                       help: missing `,`\r\n\r\nerror: expected one of `:` or `|`, found `}`\r\n --> src/main.rs:4:1\r\n  |\r\n3 |     if recursive { 2 } else { 0 }\r\n  |                                  - expected one of `:` or `|`\r\n4 | }\r\n  | ^ unexpected token\r\n\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:2:16\r\n  |\r\n2 |     if fatal { 1 } else { 0 } |\r\n  |     -----------^-------------- help: consider using a semicolon here\r\n  |     |          |\r\n  |     |          expected `()`, found integer\r\n  |     expected this to be `()`\r\n\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:2:27\r\n  |\r\n2 |     if fatal { 1 } else { 0 } |\r\n  |     ----------------------^--- help: consider using a semicolon here\r\n  |     |                     |\r\n  |     |                     expected `()`, found integer\r\n  |     expected this to be `()`\r\n\r\nerror: aborting due to 9 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\n```\r\n\r\nThis is clearly sub-optimal. The code can be fixed by wrapping the first if condition in `()`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70115/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70115/timeline", "performed_via_github_app": null, "state_reason": null}