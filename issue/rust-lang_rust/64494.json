{"url": "https://api.github.com/repos/rust-lang/rust/issues/64494", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64494/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64494/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64494/events", "html_url": "https://github.com/rust-lang/rust/issues/64494", "id": 493772518, "node_id": "MDU6SXNzdWU0OTM3NzI1MTg=", "number": 64494, "title": "Unclear interaction between const generics and coherence checking", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-15T18:50:35Z", "updated_at": "2020-08-05T22:11:29Z", "closed_at": "2020-08-05T22:11:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the following code:\r\n\r\n```rust\r\ntrait Foo {\r\n    const VAL: usize;\r\n}\r\n\r\ntrait MyTrait {}\r\n\r\ntrait True {}\r\nstruct Is<const T: bool>;\r\nimpl True for Is<{true}> {}\r\n\r\nimpl<T: Foo> MyTrait for T where Is<{T::VAL == 5}>: True {}\r\nimpl<T: Foo> MyTrait for T where Is<{T::VAL == 6}>: True {}\r\n```\r\n\r\nCoherence checking needs to determine whether the two `MyTrait` impls can ever overlap. This requires determining (among other things) if `{T::VAL == 5}` and `{T::VAL == 6}` will ever have the same value - if they do, then the impls will overlap.\r\n\r\nIn this case, we can see that `T::VAL == 5` and `T::VAL == 6` can never both be true. However, in the general case, we could have an expression like `Is<{someConstFn(T::VAl)}`. Coherence checking would need to determine if two const functions will ever produce the same value for a given input. This seems impossible without radically extending the Rust language and/or the abilities of the compiler.\r\n\r\nOne solution would be to ban any const projections within `where` clauses. That is, `where Is<{2 + 2 == 5}>: True` would be allowed, but `where Is<{T::VAL == T::VAL}>: True` would not be. This would ensure that it's always possible to fully const-eval an expression during coherence checking,  which allows us to be certain about whether or not two impls overlap.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64494/timeline", "performed_via_github_app": null, "state_reason": "completed"}