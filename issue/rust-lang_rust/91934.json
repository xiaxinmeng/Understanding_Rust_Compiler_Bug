{"url": "https://api.github.com/repos/rust-lang/rust/issues/91934", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91934/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91934/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91934/events", "html_url": "https://github.com/rust-lang/rust/issues/91934", "id": 1080164498, "node_id": "I_kwDOAAsO6M5AYgCS", "number": 91934, "title": "'rustc' panicked at 'DefId::expect_local: `DefId(...)` isn't local'", "user": {"login": "xmyst", "id": 43476170, "node_id": "MDQ6VXNlcjQzNDc2MTcw", "avatar_url": "https://avatars.githubusercontent.com/u/43476170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xmyst", "html_url": "https://github.com/xmyst", "followers_url": "https://api.github.com/users/xmyst/followers", "following_url": "https://api.github.com/users/xmyst/following{/other_user}", "gists_url": "https://api.github.com/users/xmyst/gists{/gist_id}", "starred_url": "https://api.github.com/users/xmyst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xmyst/subscriptions", "organizations_url": "https://api.github.com/users/xmyst/orgs", "repos_url": "https://api.github.com/users/xmyst/repos", "events_url": "https://api.github.com/users/xmyst/events{/privacy}", "received_events_url": "https://api.github.com/users/xmyst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-14T20:04:11Z", "updated_at": "2021-12-14T20:50:53Z", "closed_at": "2021-12-14T20:49:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\n`main.rs`:\r\n```Rust\r\nuse rustc_panic::{Point, Segment};\r\n\r\nfn main() {\r\n    draw_segment(&Segment(Point(0)));\r\n}\r\n\r\nfn draw_segment(s: &Segment) {\r\n    for p in s.points() {\r\n        draw_point(p);\r\n    }\r\n}\r\n\r\nfn draw_point(_: &Point) {}\r\n```\r\n\r\n`lib.rs`\r\n```Rust\r\npub struct Point(pub i32);\r\n\r\npub struct Segment(pub Point);\r\n\r\nimpl Segment {\r\n    pub fn points(&self) -> impl std::iter::Iterator + '_ {\r\n        (0..1).map(|t| Point(self.0 .0 + t))\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-apple-darwin\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n% cargo build    \r\n   Compiling rustc_panic v0.1.0 (/Users/myst/Projects/rustc_panic)\r\nthread 'rustc' panicked at 'DefId::expect_local: `DefId(18:11 ~ rustc_panic[612c]::{impl#0}::points::{opaque#0})` isn't local', /rustc/f1edd0429582dd29cccacaf50fd134b05593bd9c/compiler/rustc_span/src/def_id.rs:234:43\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0 (f1edd0429 2021-11-29) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `draw_segment`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\nerror: internal compiler error: trimmed_def_paths constructed\r\n  |\r\n  = note: delayed at    0: std::backtrace::Backtrace::create\r\n             1: std::backtrace::Backtrace::force_capture\r\n             2: rustc_errors::Handler::delay_good_path_bug\r\n             3: rustc_middle::ty::print::pretty::trimmed_def_paths\r\n             4: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n             5: rustc_data_structures::stack::ensure_sufficient_stack\r\n             6: rustc_query_system::query::plumbing::try_execute_query\r\n             7: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::trimmed_def_paths\r\n             8: <rustc_middle::ty::print::pretty::FmtPrinter<F> as rustc_middle::ty::print::Printer>::print_def_path\r\n             9: rustc_middle::ty::print::pretty::PrettyPrinter::pretty_print_type\r\n            10: rustc_middle::ty::print::pretty::<impl rustc_middle::ty::print::Print<P> for rustc_middle::ty::sty::TypeAndMut>::print\r\n            11: rustc_middle::ty::print::pretty::PrettyPrinter::pretty_print_type\r\n            12: rustc_middle::ty::print::pretty::<impl core::fmt::Display for &rustc_middle::ty::TyS>::fmt\r\n            13: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::cmp\r\n            14: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::values_str\r\n            15: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::note_type_err\r\n            16: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::report_and_explain_type_error\r\n            17: rustc_infer::infer::InferCtxt::report_mismatched_types\r\n            18: rustc_typeck::check::demand::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::demand_coerce_diag\r\n            19: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n            20: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n            21: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n            22: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n            23: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            24: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n            25: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n            26: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            27: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n            28: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n            29: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_no_value\r\n            30: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n            31: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            32: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n            33: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n            34: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            35: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            36: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n            37: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n            38: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n            39: rustc_typeck::check::check::check_fn\r\n            40: rustc_infer::infer::InferCtxtBuilder::enter\r\n            41: rustc_typeck::check::typeck\r\n            42: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n            43: rustc_data_structures::stack::ensure_sufficient_stack\r\n            44: rustc_query_system::query::plumbing::try_execute_query\r\n            45: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n            46: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n            47: rustc_data_structures::sync::par_for_each_in\r\n            48: rustc_typeck::check::typeck_item_bodies\r\n            49: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n            50: rustc_data_structures::stack::ensure_sufficient_stack\r\n            51: rustc_query_system::query::plumbing::try_execute_query\r\n            52: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n            53: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n            54: rustc_typeck::check_crate\r\n            55: rustc_interface::passes::analysis\r\n            56: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n            57: rustc_data_structures::stack::ensure_sufficient_stack\r\n            58: rustc_query_system::query::plumbing::try_execute_query\r\n            59: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n            60: rustc_interface::passes::QueryContext::enter\r\n            61: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n            62: rustc_span::with_source_map\r\n            63: scoped_tls::ScopedKey<T>::set\r\n            64: std::sys_common::backtrace::__rust_begin_short_backtrace\r\n            65: core::ops::function::FnOnce::call_once{{vtable.shim}}\r\n            66: std::sys::unix::thread::Thread::new::thread_start\r\n            67: __pthread_start\r\n          \r\n\r\nthread 'rustc' panicked at 'no warnings or errors encountered even though `delayed_good_path_bugs` issued', compiler/rustc_errors/src/lib.rs:1165:13\r\nstack backtrace:\r\n   0:        0x1086f9321 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h4edbddd26fc45697\r\n   1:        0x10874a4bb - core::fmt::write::h266c957f12b1655a\r\n   2:        0x1086e9d3a - std::io::Write::write_fmt::h65d4ee621e8d810d\r\n   3:        0x1086fc585 - std::panicking::default_hook::{{closure}}::h5b4886cd9f93dfca\r\n   4:        0x1086fc16f - std::panicking::default_hook::h986d152c7bd7e732\r\n   5:        0x1102b57c8 - rustc_driver::DEFAULT_HOOK::{{closure}}::{{closure}}::h997411fe6ff6a285\r\n   6:        0x1086fcdc6 - std::panicking::rust_panic_with_hook::h151f3b3bf37b4f17\r\n   7:        0x1086fc83e - std::panicking::begin_panic_handler::{{closure}}::hf6660086d9ebd48c\r\n   8:        0x1086f9797 - std::sys_common::backtrace::__rust_end_short_backtrace::h34152178ea368a9a\r\n   9:        0x1086fc7aa - _rust_begin_unwind\r\n  10:        0x10877505f - core::panicking::panic_fmt::hb64a2db862b4aca0\r\n  11:        0x1149199d2 - core::panicking::panic_display::hf3cbb9a8f3ec50df\r\n  12:        0x11491e685 - rustc_errors::HandlerInner::flush_delayed::h293119edf764a79d\r\n  13:        0x11491a8a6 - <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop::h3f7218073ad25818\r\n  14:        0x11032045a - core::ptr::drop_in_place<rustc_session::parse::ParseSess>::h358cdf3f0cba848b\r\n  15:        0x1103286b7 - <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop::h51adef2b2544e01f\r\n  16:        0x1102c5812 - core::ptr::drop_in_place<rustc_interface::interface::Compiler>::h2c5e72eab1dedf3c\r\n  17:        0x1102c46c2 - rustc_span::with_source_map::h5222a0af0f8eb603\r\n  18:        0x1102f23ac - scoped_tls::ScopedKey<T>::set::h1d3d67352154478d\r\n  19:        0x1102c8c32 - std::sys_common::backtrace::__rust_begin_short_backtrace::hb945015c1b1cd51d\r\n  20:        0x11031a9a5 - core::ops::function::FnOnce::call_once{{vtable.shim}}::hc43c9a06b1d9c32a\r\n  21:        0x108706ba7 - std::sys::unix::thread::Thread::new::thread_start::h1ebadf8a3a1817e4\r\n  22:     0x7ff8084e3514 - __pthread_start\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0 (f1edd0429 2021-11-29) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nthread panicked while panicking. aborting.\r\nerror: could not compile `rustc_panic`\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name rustc_panic --edition=2021 src/main.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C metadata=46b7e562499556be -C extra-filename=-46b7e562499556be --out-dir /Users/myst/Projects/rustc_panic/target/debug/deps -C incremental=/Users/myst/Projects/rustc_panic/target/debug/incremental -L dependency=/Users/myst/Projects/rustc_panic/target/debug/deps --extern rustc_panic=/Users/myst/Projects/rustc_panic/target/debug/deps/librustc_panic-799842390127a3c5.rlib` (signal: 4, SIGILL: illegal instruction)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: rustc_span::def_id::DefId::expect_local::{{closure}}\r\n   3: rustc_middle::ty::error::<impl rustc_middle::ty::context::TyCtxt>::suggest_constraining_opaque_associated_type\r\n   4: rustc_middle::ty::error::<impl rustc_middle::ty::context::TyCtxt>::note_and_explain_type_err\r\n   5: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::note_type_err\r\n   6: rustc_infer::infer::error_reporting::<impl rustc_infer::infer::InferCtxt>::report_and_explain_type_error\r\n   7: rustc_infer::infer::InferCtxt::report_mismatched_types\r\n   8: rustc_typeck::check::demand::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::demand_coerce_diag\r\n   9: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  10: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  11: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  12: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  13: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  14: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  15: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  17: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  18: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  19: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_no_value\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  22: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  24: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  25: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  26: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  27: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  28: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  29: rustc_typeck::check::check::check_fn\r\n  30: rustc_infer::infer::InferCtxtBuilder::enter\r\n  31: rustc_typeck::check::typeck\r\n  32: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  33: rustc_data_structures::stack::ensure_sufficient_stack\r\n  34: rustc_query_system::query::plumbing::try_execute_query\r\n  35: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  36: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  37: rustc_data_structures::sync::par_for_each_in\r\n  38: rustc_typeck::check::typeck_item_bodies\r\n  39: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  40: rustc_data_structures::stack::ensure_sufficient_stack\r\n  41: rustc_query_system::query::plumbing::try_execute_query\r\n  42: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  43: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  44: rustc_typeck::check_crate\r\n  45: rustc_interface::passes::analysis\r\n  46: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  47: rustc_data_structures::stack::ensure_sufficient_stack\r\n  48: rustc_query_system::query::plumbing::try_execute_query\r\n  49: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  50: rustc_interface::passes::QueryContext::enter\r\n  51: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  52: rustc_span::with_source_map\r\n  53: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91934/timeline", "performed_via_github_app": null, "state_reason": "completed"}