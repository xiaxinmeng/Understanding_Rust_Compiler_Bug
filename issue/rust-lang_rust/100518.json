{"url": "https://api.github.com/repos/rust-lang/rust/issues/100518", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100518/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100518/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100518/events", "html_url": "https://github.com/rust-lang/rust/issues/100518", "id": 1338130619, "node_id": "I_kwDOAAsO6M5PwkC7", "number": 100518, "title": "`core::iter::Fuse` Does Not Fuse Iterators", "user": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2022-08-14T04:22:49Z", "updated_at": "2022-09-20T20:06:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is acknowledged in `Iterator::fuse` with\r\n> fuse() may therefore behave incorrectly if the [FusedIterator](https://doc.rust-lang.org/nightly/std/iter/trait.FusedIterator.html) trait is improperly implemented.\r\n\r\nBut I believe this should not be the case. `Fuse` still incurs a memory overhead for all iterators, whether or not it specializes, and it's useless because it currently doesn't actually do anything in the general case.\r\n\r\n\r\nExample code:\r\n```rust\r\nstruct UwU<'a>(&'a (), bool);\r\n\r\nimpl<'a> Iterator for UwU<'a> {\r\n    type Item = bool;\r\n    fn next(&mut self) -> Option<Self::Item> {\r\n        self.1 = !self.1;\r\n        match self.1 {\r\n            true => Some(true),\r\n            false => None,\r\n        }\r\n    }\r\n}\r\n\r\nimpl<'a> std::iter::FusedIterator for UwU<'a> { }\r\n\r\nfn main() {\r\n    let a = ();\r\n    let mut owo = UwU(&a, true).fuse();\r\n    assert_eq!(owo.next(), None);\r\n\r\n    // this should ideally hold because we called `fuse`, and \r\n    // the first call was `None` but it returns `Some`\r\n    assert_eq!(owo.next(), None);\r\n}\r\n```\r\nIt fails with\r\n```\r\nthread 'main' panicked at 'assertion failed: `(left == right)`\r\n  left: `Some(true)`,\r\n right: `None`', /app/example.rs:23:5\r\n ```\r\n Since rustc 1.26.0, when this type was added, through current nightly (2022-08-13).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100518/timeline", "performed_via_github_app": null, "state_reason": null}