{"url": "https://api.github.com/repos/rust-lang/rust/issues/38978", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38978/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38978/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38978/events", "html_url": "https://github.com/rust-lang/rust/issues/38978", "id": 199968046, "node_id": "MDU6SXNzdWUxOTk5NjgwNDY=", "number": 38978, "title": "rustc suggests std::os::ext::fs::FileExt then can't find it", "user": {"login": "willglynn", "id": 118362, "node_id": "MDQ6VXNlcjExODM2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/118362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willglynn", "html_url": "https://github.com/willglynn", "followers_url": "https://api.github.com/users/willglynn/followers", "following_url": "https://api.github.com/users/willglynn/following{/other_user}", "gists_url": "https://api.github.com/users/willglynn/gists{/gist_id}", "starred_url": "https://api.github.com/users/willglynn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willglynn/subscriptions", "organizations_url": "https://api.github.com/users/willglynn/orgs", "repos_url": "https://api.github.com/users/willglynn/repos", "events_url": "https://api.github.com/users/willglynn/events{/privacy}", "received_events_url": "https://api.github.com/users/willglynn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-11T00:00:25Z", "updated_at": "2017-05-31T22:33:25Z", "closed_at": "2017-05-31T22:33:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm new to Rust and this got me sidetracked a bit. I know `read_at()` needs a `FileExt` trait, but I didn't remember where it was, so I referenced it anyway expecting the compiler would direct me to the right place. It didn't. My experience was roughly:\r\n\r\n    error: no method named `read_at` found for type `std::fs::File` in the current scope\r\n      --> <anon>:9:11\r\n       |\r\n     9 |         f.read_at(&mut buf, 4000).unwrap();\r\n       |           ^^^^^^^\r\n       |\r\n       = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:\r\n       = help: candidate #1: `use std::os::ext::fs::FileExt;`\r\n\r\nAdding the suggested `use`, we get [this playground link](https://is.gd/xBRG2r), which fails with the contradictory error messages:\r\n\r\n    error[E0432]: unresolved import `std::os::ext::fs::FileExt`\r\n     --> <anon>:4:5\r\n      |\r\n    4 | use std::os::ext::fs::FileExt;\r\n      |     ^^^^^^^^^^^^^^^^^^^^^^^^^ Could not find `ext` in `os`\r\n\r\n    error: no method named `read_at` found for type `std::fs::File` in the current scope\r\n      --> <anon>:10:11\r\n       |\r\n    10 |         f.read_at(&mut buf, 4000).unwrap();\r\n       |           ^^^^^^^\r\n       |\r\n       = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:\r\n       = help: candidate #1: `use std::os::ext::fs::FileExt;`\r\n\r\nI asked `#rust-beginners` as a sanity check, and they said this is a known issue, namely #26454. I'm reporting it anyway because `FileExt` will be stable as of 1.15, and if I hit this bug that route, surely others will too.\r\n\r\nIt's not obvious from the error messages that my current target can be served by `use std::os::unix::fs::FileExt;`, and it's not obvious from the [online docs](https://doc.rust-lang.org/std/fs/struct.File.html#method.read_at) that there is a [Windows implementation](https://github.com/rust-lang/rust/blob/df26a5a9587c5fd922163d2b7625588fa97912cc/src/libstd/sys/windows/ext/fs.rs) of this trait either. For whatever it's worth, when I saw `rustc` suggest an OS-agnostic trait without mentioning the OS-specific ones, I was expecting to find an alias that worked on both platforms (and which wouldn't exist on others) rather than a compiler bug.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38978/timeline", "performed_via_github_app": null, "state_reason": "completed"}