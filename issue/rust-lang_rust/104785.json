{"url": "https://api.github.com/repos/rust-lang/rust/issues/104785", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104785/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104785/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104785/events", "html_url": "https://github.com/rust-lang/rust/issues/104785", "id": 1462153691, "node_id": "I_kwDOAAsO6M5XJrHb", "number": 104785, "title": "Upstream support for `--print=target-cpus` to LLVM", "user": {"login": "he32", "id": 1199501, "node_id": "MDQ6VXNlcjExOTk1MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1199501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/he32", "html_url": "https://github.com/he32", "followers_url": "https://api.github.com/users/he32/followers", "following_url": "https://api.github.com/users/he32/following{/other_user}", "gists_url": "https://api.github.com/users/he32/gists{/gist_id}", "starred_url": "https://api.github.com/users/he32/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/he32/subscriptions", "organizations_url": "https://api.github.com/users/he32/orgs", "repos_url": "https://api.github.com/users/he32/repos", "events_url": "https://api.github.com/users/he32/events{/privacy}", "received_events_url": "https://api.github.com/users/he32/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632453790, "node_id": "MDU6TGFiZWw2MzI0NTM3OTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-specs", "name": "A-target-specs", "color": "f7e101", "default": false, "description": "Area: compile-target specifications"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-11-23T17:34:28Z", "updated_at": "2023-04-08T18:04:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The target-cpus feature is only exposed when building llvm through `x.py` because it depends on a patch in our [fork of llvm](https://github.com/rust-lang/llvm-project/branches). As a result, linking to an upstream llvm build with `llvm.llvm-config = \"...\"` won't work with `--print=target-cpus`. The relevant patch on the current branch is https://github.com/rust-lang/llvm-project/commit/a8f170c5611585510033764926b0c40a6901d001; it would be nice if someone lobbied for that in upstream LLVM.\r\n\r\nThe last attempt to do that was https://reviews.llvm.org/D93789; the feedback there was to use fillValidCPUArchList() instead.\r\n\r\nSee below for the original issue description.\r\n\r\n---\r\n\r\nHi,\r\n\r\nis there a good reason release versions of rust do not support these options?\r\n\r\n```\r\n% rustc --print target-cpus\r\nTarget CPU help is not supported by this LLVM version.\r\n\r\n% rustc --print target-spec-json\r\nerror: the `-Z unstable-options` flag must also be passed to enable the target-spec-json print option\r\n```\r\nOK, so let's try adding that option, then:\r\n```\r\n% rustc -Z unstable-options --print target-spec-json\r\nerror: the option `Z` is only accepted on the nightly compiler\r\n```\r\nGah!\r\nGoogling a little gave a sliver of hope:\r\n```\r\n% rustc +nightly -Z unstable-options --print target-spec-json\r\nerror: the option `Z` is only accepted on the nightly compiler\r\n\r\n% \r\n```\r\nNope!\r\n```\r\n% rustc --version\r\nrustc 1.65.0\r\n% uname\r\nNetBSD\r\n% uname -m\r\namd64\r\n% uname -p\r\nx86_64\r\n% uname -r\r\n9.99.104\r\n% \r\n```\r\n\r\nIt does, though support `rustc --print target-list`, so this looks a little ... inconsistent?\r\n\r\nThe `rustc(1)` man page does mention both the above unsupported options without\r\nany qualification.\r\n\r\nI suspect this can relatively easily (and cheaply?) be improved?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104785/timeline", "performed_via_github_app": null, "state_reason": null}