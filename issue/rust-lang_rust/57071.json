{"url": "https://api.github.com/repos/rust-lang/rust/issues/57071", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57071/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57071/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57071/events", "html_url": "https://github.com/rust-lang/rust/issues/57071", "id": 393721234, "node_id": "MDU6SXNzdWUzOTM3MjEyMzQ=", "number": 57071, "title": "ICE when macro-generated code triggers \"defined multiple times\" error", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-23T04:04:32Z", "updated_at": "2019-01-26T20:59:00Z", "closed_at": "2019-01-26T20:59:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As of *rustc 1.33.0-nightly (2d3e909e4 2018-12-22)* the following macro invocation fails with an ICE. Mentioning @mockersf and @estebank because this may have to do with slicing introduced in #55113.\r\n\r\n#### repro/src/lib.rs\r\n\r\n```rust\r\nuse repro_macro::m;\r\n\r\n#[m]\r\nstruct S;\r\n```\r\n\r\n#### repro-macro/src/lib.rs\r\n\r\n```rust\r\nextern crate proc_macro;\r\n\r\nuse proc_macro::{Ident, Punct, Spacing, Span, TokenStream, TokenTree};\r\nuse std::iter::FromIterator;\r\n\r\n#[proc_macro_attribute]\r\npub fn m(_args: TokenStream, input: TokenStream) -> TokenStream {\r\n    let span = input.into_iter().next().unwrap().span();\r\n\r\n    // struct S;\r\n    // use self::S;\r\n    TokenStream::from_iter(vec![\r\n        TokenTree::Ident(Ident::new(\"struct\", Span::call_site())),\r\n        TokenTree::Ident(Ident::new(\"S\", span)),\r\n        TokenTree::Punct(Punct::new(';', Spacing::Alone)),\r\n        TokenTree::Ident(Ident::new(\"use\", Span::call_site())),\r\n        TokenTree::Ident(Ident::new(\"self\", Span::call_site())),\r\n        TokenTree::Punct(Punct::new(':', Spacing::Joint)),\r\n        TokenTree::Punct(Punct::new(':', Spacing::Alone)),\r\n        TokenTree::Ident(Ident::new(\"S\", span)),\r\n        TokenTree::Punct(Punct::new(';', Spacing::Alone)),\r\n    ])\r\n}\r\n```\r\n\r\n```console\r\nthread 'rustc' panicked at 'byte index 11 is out of bounds of `#[m]`', src/libcore/str/mod.rs:2091:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:72\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:60\r\n             at src/libstd/panicking.rs:210\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:225\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:492\r\n   6: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:395\r\n   7: rust_begin_unwind\r\n             at src/libstd/panicking.rs:322\r\n   8: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:95\r\n   9: core::str::slice_error_fail\r\n             at src/libcore/str/mod.rs:0\r\n  10: core::str::traits::<impl core::slice::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index::{{closure}}\r\n  11: rustc_resolve::Resolver::report_conflict\r\n  12: rustc_resolve::resolve_imports::ImportResolver::resolve_imports\r\n  13: rustc_resolve::macros::<impl syntax::ext::base::Resolver for rustc_resolve::Resolver<'a>>::resolve_imports\r\n  14: syntax::ext::expand::MacroExpander::expand_fragment\r\n  15: syntax::ext::expand::MacroExpander::expand_crate\r\n  16: rustc_driver::driver::phase_2_configure_and_expand_inner::{{closure}}\r\n  17: rustc::util::common::time\r\n  18: rustc_driver::driver::phase_2_configure_and_expand\r\n  19: rustc_driver::driver::compile_input\r\n  20: rustc_driver::run_compiler_with_pool\r\n  21: <scoped_tls::ScopedKey<T>>::set\r\n  22: rustc_driver::run_compiler\r\n  23: <scoped_tls::ScopedKey<T>>::set\r\n  24: syntax::with_globals\r\n  25: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  26: <F as alloc::boxed::FnBox<A>>::call_box\r\n  27: std::sys::unix::thread::Thread::new::thread_start\r\n             at /rustc/2d3e909e4e68259e15ca2908ff9e854f0a68bbec/src/liballoc/boxed.rs:688\r\n             at src/libstd/sys_common/thread.rs:24\r\n             at src/libstd/sys/unix/thread.rs:91\r\n  28: start_thread\r\n  29: clone\r\nquery stack during panic:\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n```\r\n\r\nSame repro in script form:\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\ncargo new --lib repro\r\ncargo new --lib repro-macro\r\n\r\necho >repro/src/lib.rs '\r\nuse repro_macro::m;\r\n\r\n#[m]\r\nstruct S;\r\n'\r\n\r\necho >>repro/Cargo.toml '\r\nrepro-macro = { path = \"../repro-macro\" }\r\n'\r\n\r\necho >repro-macro/src/lib.rs '\r\nextern crate proc_macro;\r\n\r\nuse proc_macro::{Ident, Punct, Spacing, Span, TokenStream, TokenTree};\r\nuse std::iter::FromIterator;\r\n\r\n#[proc_macro_attribute]\r\npub fn m(_args: TokenStream, input: TokenStream) -> TokenStream {\r\n    let span = input.into_iter().next().unwrap().span();\r\n\r\n    // struct S;\r\n    // use self::S;\r\n    TokenStream::from_iter(vec![\r\n        TokenTree::Ident(Ident::new(\"struct\", Span::call_site())),\r\n        TokenTree::Ident(Ident::new(\"S\", span)),\r\n        TokenTree::Punct(Punct::new(59 as char, Spacing::Alone)),\r\n        TokenTree::Ident(Ident::new(\"use\", Span::call_site())),\r\n        TokenTree::Ident(Ident::new(\"self\", Span::call_site())),\r\n        TokenTree::Punct(Punct::new(58 as char, Spacing::Joint)),\r\n        TokenTree::Punct(Punct::new(58 as char, Spacing::Alone)),\r\n        TokenTree::Ident(Ident::new(\"S\", span)),\r\n        TokenTree::Punct(Punct::new(59 as char, Spacing::Alone)),\r\n    ])\r\n}\r\n'\r\n\r\necho >>repro-macro/Cargo.toml '\r\n[lib]\r\nproc-macro = true\r\n'\r\n\r\ncargo check --manifest-path repro/Cargo.toml\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57071/timeline", "performed_via_github_app": null, "state_reason": "completed"}