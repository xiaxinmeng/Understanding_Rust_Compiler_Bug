{"url": "https://api.github.com/repos/rust-lang/rust/issues/23327", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23327/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23327/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23327/events", "html_url": "https://github.com/rust-lang/rust/issues/23327", "id": 60952161, "node_id": "MDU6SXNzdWU2MDk1MjE2MQ==", "number": 23327, "title": "Interior mutability can cause inconsistency in collections", "user": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-13T01:11:45Z", "updated_at": "2015-03-16T22:13:58Z", "closed_at": "2015-03-16T22:13:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Collections that perform lookups based on a given property (e.g. a hash or an ordering) can be put into an inconsistent state when the property changes while its corresponding item is in the collection. This is normally not a problem, because such collections (at least those in `std`) do not provide mutable access to the type from which the property is derived (keys in the case of maps, items in the case of sets), but types with interior mutability can induce this behavior in safe code:\n\n``` rust\n#[test]\nfn test() {\n    use std::cell::Cell;\n    use std::collections::HashSet;\n    use std::hash;\n\n    #[derive(PartialEq)]\n    struct Foo(Cell<u32>);\n\n    impl Eq for Foo {}\n\n    impl hash::Hash for Foo {\n        fn hash<H: hash::Hasher>(&self, h: &mut H) { self.0.get().hash(h); }\n    }\n\n    let mut set = HashSet::new();\n    set.insert(Foo(Cell::new(0)));\n    set.insert(Foo(Cell::new(1)));\n\n    for foo in &set {\n        foo.0.set(2);\n        break;\n    }\n\n    assert!(set.contains(&Foo(Cell::new(2))));\n}\n```\n\nOutput:\n\n```\nthread 'test' panicked at 'assertion failed: set.contains(&Foo(Cell::new(2)))'\n```\n\nThis is obvious from the definition of interior mutability, but it's definitely a footgun. If the use of such keys cannot be prevented with the type system, the collections should at least document that the property must remain constant for the duration of the item's presence in the collection.\n\nFor example, Java's [`Map` interface documentation](http://docs.oracle.com/javase/8/docs/api/java/util/Map.html) contains the following note:\n\n> great care must be exercised if mutable objects are used as map keys. The behavior of a map is not specified if the value of an object is changed in a manner that affects equals comparisons while the object is a key in the map.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23327/timeline", "performed_via_github_app": null, "state_reason": "completed"}