{"url": "https://api.github.com/repos/rust-lang/rust/issues/21400", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21400/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21400/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21400/events", "html_url": "https://github.com/rust-lang/rust/issues/21400", "id": 54800729, "node_id": "MDU6SXNzdWU1NDgwMDcyOQ==", "number": 21400, "title": "Lifetime elision works incorrectly with explicit `self` types in methods", "user": {"login": "netvl", "id": 280456, "node_id": "MDQ6VXNlcjI4MDQ1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/280456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/netvl", "html_url": "https://github.com/netvl", "followers_url": "https://api.github.com/users/netvl/followers", "following_url": "https://api.github.com/users/netvl/following{/other_user}", "gists_url": "https://api.github.com/users/netvl/gists{/gist_id}", "starred_url": "https://api.github.com/users/netvl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/netvl/subscriptions", "organizations_url": "https://api.github.com/users/netvl/orgs", "repos_url": "https://api.github.com/users/netvl/repos", "events_url": "https://api.github.com/users/netvl/events{/privacy}", "received_events_url": "https://api.github.com/users/netvl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/20", "html_url": "https://github.com/rust-lang/rust/milestone/20", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/20/labels", "id": 452034, "node_id": "MDk6TWlsZXN0b25lNDUyMDM0", "number": 20, "title": "1.0", "description": "This will be the first major release of Rust, where we offer some guaranteed level of support and backwards compatibility.\r\n\r\nThe significant criteria for this release are:\r\n\r\n* Language backwards compatibility - All major features are in, and in their final form. Generally, the only new language features added after this milestone must be backwards compatible, or to fix soundness holes, though we do expect to have some leeway to make small incompatible fixes that have low impact on existing code bases.\r\n\r\n* Library stability - We have a system of measuring and ensuring the stability of API's, and a significant portion of the standard library is declared stable. Stable API's will not change. Large portions of the standard library need to be stable for 1.0, including primitive types, vectors, strings, option, numerics, collections, some I/O and concurrency.\r\n\r\n* User experience - The system is polished and the presentation is complete and professional. New users have a clear path to using and learning the system. This encompasses the web site, documentation, installation, and tooling.\r\n", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 376, "state": "closed", "created_at": "2013-10-10T18:48:33Z", "updated_at": "2016-08-28T23:13:24Z", "due_on": "2015-05-15T07:00:00Z", "closed_at": "2015-05-21T20:59:13Z"}, "comments": 5, "created_at": "2015-01-19T19:06:54Z", "updated_at": "2015-04-11T13:47:06Z", "closed_at": "2015-04-11T13:47:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Found in [this](http://stackoverflow.com/questions/28031155/is-my-borrow-checker-drunk/28031580) SO question.\n\nThis code compiles:\n\n``` rust\nstruct Test;\n\nimpl Test {\n    fn method1(&mut self, arg: &str) -> Result<usize, &str> {\n        unreachable!()\n    }\n\n    fn method2(self: &mut Test, arg: &str) -> Result<usize, &str> {\n        unreachable!()\n    }\n\n    fn test(self: &mut Test) -> Result<usize, &str> {\n        let s = format!(\"abcde\");\n        let data = match self.method1(&*s) {\n            Ok(r) => r,\n            Err(e) => return Err(e)\n        };\n        unreachable!()\n    }\n}\n\nfn main() {\n}\n```\n\nBut if you change `self.method1(&*s)` to `self.method2(&*s)` it will stop compiling:\n\n```\ntest7.rs:14:41: 14:42 error: `s` does not live long enough\ntest7.rs:14         let data = match self.method2(&*s) {\n                                                    ^\ntest7.rs:12:53: 19:6 note: reference must be valid for the anonymous lifetime #1 defined on the block at 12:52...\ntest7.rs:12     fn test(self: &mut Test) -> Result<usize, &str> {\ntest7.rs:13         let s = format!(\"abcde\");\ntest7.rs:14         let data = match self.method2(&*s) {\ntest7.rs:15             Ok(r) => r,\ntest7.rs:16             Err(e) => return Err(e)\ntest7.rs:17         };\n            ...\ntest7.rs:12:53: 19:6 note: ...but borrowed value is only valid for the block at 12:52\ntest7.rs:12     fn test(self: &mut Test) -> Result<usize, &str> {\ntest7.rs:13         let s = format!(\"abcde\");\ntest7.rs:14         let data = match self.method2(&*s) {\ntest7.rs:15             Ok(r) => r,\ntest7.rs:16             Err(e) => return Err(e)\ntest7.rs:17         };\n            ...\n```\n\nAccording to the [lifetime elision rules](https://github.com/rust-lang/rfcs/blob/master/text/0141-lifetime-elision.md#the-rules) this signature:\n\n``` rust\nfn method2(self: &mut Test, arg: &str) -> Result<usize, &str>\n```\n\nshould be equivalent to this one:\n\n``` rust\nfn method2<'a, 'b>(self: &'a mut Test, arg: &'b str) -> Result<usize, &'a str>\n```\n\nHowever, it seems that currently it is equivalent to this one:\n\n``` rust\nfn method2<'a>(self: &'a mut Test, arg: &'a str) -> Result<usize, &'a str>\n```\n\nwhich gives exactly the same error as the elided version.\n\nAnother funny thing is that if I remove `match` and write just\n\n``` rust\nlet data = self.method2(&*s);\n```\n\nIt compiles again.\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21400/timeline", "performed_via_github_app": null, "state_reason": "completed"}