{"url": "https://api.github.com/repos/rust-lang/rust/issues/44281", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44281/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44281/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44281/events", "html_url": "https://github.com/rust-lang/rust/issues/44281", "id": 254848363, "node_id": "MDU6SXNzdWUyNTQ4NDgzNjM=", "number": 44281, "title": "mem::transmute() docs could use some additional detail", "user": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-03T02:33:31Z", "updated_at": "2019-08-06T13:34:57Z", "closed_at": "2019-08-06T13:34:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here's a few things I thought of while reading [the docs](https://doc.rust-lang.org/std/mem/fn.transmute.html):\r\n\r\n- The term `type punning` is used without being defined. Ordinarily, I wouldn't complain about this because it's very easy to Google search but most of the search results on the first page say that type punning is undefined behavior (in C\\C++). This doesn't appear to be true in Rust because the [Undefined Behaviors Page](https://doc.rust-lang.org/reference/behavior-considered-undefined.html) only references [LLVM's pointer aliasing rules](https://llvm.org/docs/LangRef.html#pointer-aliasing-rules) which seem to indicate that TBAA doesn't apply.\r\n  - It would probably be a good idea to give a short definition of the term and state that it is (or is not) undefined behavior in Rust.\r\n\r\n~~~- For the \"`Vec<&T>` to `Vec<Option<&T>>`\" example, it's not immediately clear to me why the use of `mem::transmute` is UB, but the preferred solution isn't. ~~~\r\n~~~  - Having an explicit reason stated as to why it's UB would help the reader figure out if the same rule applies to what they are trying to do.~~~\r\n\r\n- Another common use of type punning in C is to take a set of bytes (perhaps read off disk or the network) and then cast them into a `struct` of the same size. \r\n  - I think this is an allowed usage of `transmute()` provided the struct is `repr(C)`. Having an example that shows how to do this correctly and also discusses the potential issues such as relying on the endianness being the same would be helpful. If this isn't allowed, then stating that would also be useful.\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44281/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44281/timeline", "performed_via_github_app": null, "state_reason": "completed"}