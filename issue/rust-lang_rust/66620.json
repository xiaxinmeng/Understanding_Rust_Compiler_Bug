{"url": "https://api.github.com/repos/rust-lang/rust/issues/66620", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66620/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66620/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66620/events", "html_url": "https://github.com/rust-lang/rust/issues/66620", "id": 527047011, "node_id": "MDU6SXNzdWU1MjcwNDcwMTE=", "number": 66620, "title": "Missing braces in macro_rules rule cause unrelated parser error", "user": {"login": "oli-cosmian", "id": 52913081, "node_id": "MDQ6VXNlcjUyOTEzMDgx", "avatar_url": "https://avatars.githubusercontent.com/u/52913081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-cosmian", "html_url": "https://github.com/oli-cosmian", "followers_url": "https://api.github.com/users/oli-cosmian/followers", "following_url": "https://api.github.com/users/oli-cosmian/following{/other_user}", "gists_url": "https://api.github.com/users/oli-cosmian/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-cosmian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-cosmian/subscriptions", "organizations_url": "https://api.github.com/users/oli-cosmian/orgs", "repos_url": "https://api.github.com/users/oli-cosmian/repos", "events_url": "https://api.github.com/users/oli-cosmian/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-cosmian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-22T08:03:59Z", "updated_at": "2019-11-22T09:52:06Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The following piece of code errors with a parser error at the `!`, because it doesn't expect an expression. I wonder if we could improve the diagnostics here by rewinding to the `=>` and reparsing with an expression parser.\r\n\r\n```rust\r\nmacro_rules! foo {\r\n    () => panic!(),\r\n}\r\n\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=7baac6ef007d7a0269060160d8fe097d))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: no rules expected the token `!`\r\n --> src/lib.rs:2:16\r\n  |\r\n2 |     () => panic!(),\r\n  |                ^ no rules expected this token in macro call\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66620/timeline", "performed_via_github_app": null, "state_reason": null}