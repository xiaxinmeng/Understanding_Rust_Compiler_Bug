{"url": "https://api.github.com/repos/rust-lang/rust/issues/84327", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84327/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84327/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84327/events", "html_url": "https://github.com/rust-lang/rust/issues/84327", "id": 860808222, "node_id": "MDU6SXNzdWU4NjA4MDgyMjI=", "number": 84327, "title": "Provide const generics hints when a token is forgotten", "user": {"login": "teor2345", "id": 8951843, "node_id": "MDQ6VXNlcjg5NTE4NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/8951843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teor2345", "html_url": "https://github.com/teor2345", "followers_url": "https://api.github.com/users/teor2345/followers", "following_url": "https://api.github.com/users/teor2345/following{/other_user}", "gists_url": "https://api.github.com/users/teor2345/gists{/gist_id}", "starred_url": "https://api.github.com/users/teor2345/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teor2345/subscriptions", "organizations_url": "https://api.github.com/users/teor2345/orgs", "repos_url": "https://api.github.com/users/teor2345/repos", "events_url": "https://api.github.com/users/teor2345/events{/privacy}", "received_events_url": "https://api.github.com/users/teor2345/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 2345125724, "node_id": "MDU6TGFiZWwyMzQ1MTI1NzI0", "url": "https://api.github.com/repos/rust-lang/rust/labels/const-generics-bad-diagnostics", "name": "const-generics-bad-diagnostics", "color": "3f5dca", "default": false, "description": "An error is correctly emitted, but is confusing, for `min_const_generics`."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-19T00:38:38Z", "updated_at": "2022-06-28T16:35:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ideally, `rustc` should guide the user towards producing const generics code, even if they forget the `const`, the type, or both.\r\n\r\nGiven the following code:\r\n\r\n```rust\r\n// forgot type\r\nimpl<T, const N> From<[T; N]> for VecWrapper<T>\r\nwhere\r\n    T: Clone,\r\n{\r\n    fn from(slice: [T; N]) -> Self {\r\n        VecWrapper(slice.to_vec())\r\n    }\r\n}\r\n```\r\n\r\n(All examples are in https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4a11f9dad9f8069e70f2aea6cb4084ad )\r\n\r\nThe current output is:\r\n\r\n```\r\nerror: expected `:`, found `>`\r\n  --> src/lib.rs:25:16\r\n   |\r\n25 | impl<T, const N> From<[T; N]> for VecWrapper<T>\r\n   |                ^ expected `:`\r\n```\r\n\r\nIdeally the output should look like:\r\n- expected `: Type`\r\n- maybe a hint for the `usize` type, because that's the type of `N` in `[T; N]`\r\n\r\nSimilarly:\r\n```rust\r\n// Forgot const \r\nimpl<T, N: usize> From<[T; N]> for VecWrapper<T>\r\nwhere\r\n    T: Clone,\r\n{\r\n    fn from(slice: [T; N]) -> Self {\r\n        VecWrapper(slice.to_vec())\r\n    }\r\n}\r\n```\r\n\r\nProduces:\r\n```\r\nerror[E0423]: expected value, found type parameter `N`\r\n  --> src/lib.rs:15:28\r\n   |\r\n15 | impl<T, N: usize> From<[T; N]> for VecWrapper<T>\r\n   |                            ^ not a value\r\n\r\nerror[E0404]: expected trait, found builtin type `usize`\r\n  --> src/lib.rs:15:12\r\n   |\r\n15 | impl<T, N: usize> From<[T; N]> for VecWrapper<T>\r\n   |            ^^^^^ not a trait\r\n\r\nerror[E0423]: expected value, found type parameter `N`\r\n  --> src/lib.rs:19:24\r\n   |\r\n19 |     fn from(slice: [T; N]) -> Self {\r\n   |                        ^ not a value\r\n```\r\n\r\nIdeally the output should look like:\r\n- expected `const` with a hint\r\n\r\nAnd:\r\n```rust\r\n// forgot const and type\r\nimpl<T, N> From<[T; N]> for VecWrapper<T>\r\nwhere\r\n    T: Clone,\r\n{\r\n    fn from(slice: [T; N]) -> Self {\r\n        VecWrapper(slice.to_vec())\r\n    }\r\n}\r\n```\r\n\r\nProduces:\r\n```\r\nerror[E0423]: expected value, found type parameter `N`\r\n  --> src/lib.rs:25:21\r\n   |\r\n25 | impl<T, N> From<[T; N]> for VecWrapper<T>\r\n   |                     ^ not a value\r\n\r\nerror[E0423]: expected value, found type parameter `N`\r\n  --> src/lib.rs:29:24\r\n   |\r\n29 |     fn from(slice: [T; N]) -> Self {\r\n   |                        ^ not a value\r\n```\r\n\r\nIdeally the output should look like:\r\n- expected `const N: Type`\r\n- maybe a hint for the `usize` type, because that's the type of `N` in `[T; N]`\r\n\r\n```sh\r\n$ rustc --version\r\nrustc 1.53.0-nightly (392ba2ba1 2021-04-17)\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84327/timeline", "performed_via_github_app": null, "state_reason": null}