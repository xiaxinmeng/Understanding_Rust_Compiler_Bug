{"url": "https://api.github.com/repos/rust-lang/rust/issues/16491", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16491/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16491/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16491/events", "html_url": "https://github.com/rust-lang/rust/issues/16491", "id": 40227645, "node_id": "MDU6SXNzdWU0MDIyNzY0NQ==", "number": 16491, "title": "Drop impls ignore actual type parameters when running drop glue", "user": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-14T06:53:22Z", "updated_at": "2014-08-14T17:35:40Z", "closed_at": "2014-08-14T17:35:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When implementing `Drop` on a type that has type parameters (which requires `#[unsafe_destructor])`, if the `Drop` impl is specialized to some concrete type parameter, the specialization is ignored in the drop glue and the `Drop` impl is instead run on all values of the outer type regardless of type parameters.\n\nExample:\n\n``` rust\n#![feature(unsafe_destructor)]\n\nextern crate debug;\n\nstruct DropMe<T> {\n    _x: T\n}\n\nstruct ImplDrop;\n\n#[unsafe_destructor]\nimpl Drop for DropMe<ImplDrop> {\n    fn drop(&mut self) {\n        println!(\"DropMe<ImplDrop>.Drop: {:?}\", *self);\n    }\n}\n\nfn main() {\n    let x = DropMe::<ImplDrop> { _x: ImplDrop };\n    println!(\"Dropping DropMe<ImplDrop>\");\n    drop(x);\n\n    let y = DropMe::<int> { _x: 32 };\n    println!(\"Dropping DropMe<int>\");\n    drop(y);\n}\n```\n\nThis should print\n\n> ```\n> Dropping DropMe<int>\n> Dropping DropMe<ImplDrop>\n> DropMe<ImplDrop>.Drop: DropMe<ImplDrop>{_x: ImplDrop}\n> ```\n\nInstead it prints\n\n> ```\n> Dropping DropMe<int>\n> DropMe<ImplDrop>.Drop: DropMe<ImplDrop>{_x: ImplDrop}\n> Dropping DropMe<ImplDrop>\n> DropMe<ImplDrop>.Drop: DropMe<ImplDrop>{_x: ImplDrop}\n> ```\n\nNote that it's calling the `Drop` impl on `DropMe<int>`, even though the `Drop` impl itself believes that the receiver type is `DropMe<ImplDrop>`.\n\n---\n\nIt gets worse. If you add a second specialized `Drop` impl, that completely overrides the first:\n\n``` rust\n#![feature(unsafe_destructor)]\n\nextern crate debug;\n\nstruct DropMe<T> {\n    _x: T\n}\n\nstruct ImplDrop;\n\n#[unsafe_destructor]\nimpl Drop for DropMe<ImplDrop> {\n    fn drop(&mut self) {\n        println!(\"DropMe<ImplDrop>.Drop: {:?}\", *self);\n    }\n}\n\n#[unsafe_destructor]\nimpl Drop for DropMe<int> {\n    fn drop(&mut self) {\n        println!(\"DropMe<int>.Drop: {:?}\", *self);\n    }\n}\n\nfn main() {\n    let x = DropMe::<int> { _x: 32 };\n    println!(\"Dropping DropMe<int>\");\n    drop(x);\n\n    let y = DropMe::<ImplDrop> { _x: ImplDrop };\n    println!(\"Dropping DropMe<ImplDrop>\");\n    drop(y);\n}\n```\n\nThis prints:\n\n> ```\n> Dropping DropMe<int>\n> DropMe<int>.Drop: DropMe<int>{_x: 32}\n> Dropping DropMe<ImplDrop>\n> DropMe<int>.Drop: DropMe<int>{_x: 140734783283201}\n> ```\n\n---\n\nIt gets worse. If you use a type parameter with bounds, it incorrectly believes that it needs to call the `Drop` impl regardless of parameterization (as it did before), even though it knows that the type doesn't conform to the bounds. At least this time it's a compile-time error:\n\n``` rust\n#![feature(unsafe_destructor)]\n\nextern crate debug;\n\nstruct DropMe<T> {\n    _x: T\n}\n\nstruct ImplDrop;\ntrait Foo {}\nimpl Foo for ImplDrop {}\n\n#[unsafe_destructor]\nimpl<T: Foo> Drop for DropMe<T> {\n    fn drop(&mut self) {\n        println!(\"DropMe<T: Foo>.Drop: {:?}\", *self);\n    }\n}\n\nfn main() {\n    let x = DropMe::<int> { _x: 32 };\n    println!(\"Dropping DropMe<int>\");\n    drop(x);\n\n    let y = DropMe::<ImplDrop> { _x: ImplDrop };\n    println!(\"Dropping DropMe<ImplDrop>\");\n    drop(y);\n}\n```\n\n> ```\n> unnamed.rs:15:5: 17:6 error: failed to find an implementation of trait Foo for int\n> unnamed.rs:15     fn drop(&mut self) {\n> unnamed.rs:16         println!(\"DropMe<T: Foo>.Drop: {:?}\", *self);\n> unnamed.rs:17     }\n> ```\n\nAnd of course if you add an `impl Drop for DropMe<int>` then it complains about duplicate implementations.\n", "closed_by": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16491/timeline", "performed_via_github_app": null, "state_reason": "completed"}