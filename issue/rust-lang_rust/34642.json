{"url": "https://api.github.com/repos/rust-lang/rust/issues/34642", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34642/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34642/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34642/events", "html_url": "https://github.com/rust-lang/rust/issues/34642", "id": 163664357, "node_id": "MDU6SXNzdWUxNjM2NjQzNTc=", "number": 34642, "title": "problem in storing function (with generic arguments ) .", "user": {"login": "anil1596", "id": 10175367, "node_id": "MDQ6VXNlcjEwMTc1MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/10175367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anil1596", "html_url": "https://github.com/anil1596", "followers_url": "https://api.github.com/users/anil1596/followers", "following_url": "https://api.github.com/users/anil1596/following{/other_user}", "gists_url": "https://api.github.com/users/anil1596/gists{/gist_id}", "starred_url": "https://api.github.com/users/anil1596/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anil1596/subscriptions", "organizations_url": "https://api.github.com/users/anil1596/orgs", "repos_url": "https://api.github.com/users/anil1596/repos", "events_url": "https://api.github.com/users/anil1596/events{/privacy}", "received_events_url": "https://api.github.com/users/anil1596/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-04T12:12:26Z", "updated_at": "2016-07-05T03:52:59Z", "closed_at": "2016-07-05T03:52:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n struct New {num: i32 }\n struct ComplexThing <A>{   //( L1)\n calls:  Box<FnMut(&A)+Send+Sync>,\n }\n trait newstrait {\n  fn display(&self);\n} \nimpl newstrait for New {\nfn display(&self){println!(\"new's num value : {}\",self.num);}\n}\nimpl newstrait for i32{\nfn display(&self){println!(\"number  : {}\",self);}\n}\nfn  printline<A:newstrait>(p: &A){\n     p.display();\n}\n\nfn main(){    \nlet mut vec = Arc::new(Mutex::new(vec![ComplexThing{calls: Box::new(printline)}]));\nlet mut len; \n {\n let mut vec = vec.lock().unwrap();\n vec.push(ComplexThing{calls: Box::new(printline)}); //storing function in vector\n len = vec.len();\n }  \n for i in 0..len{\n thread::spawn(move||{\n let vec = vec.clone();\n let mut vec= vec.lock().unwrap();\n let ref mut elem =vec[i].calls;                \n if i!=1{\n elem(&New{num:1080}); //calling stored function with instance of structure New as argument ( L2 )     \n }else{\n let num = 434;\n elem(&num);   //calling stored function with i32  as an argument (L3)\n }  \n });           \n  } \n  }\n```\n\nIt is initialising generic type (A) at  L1 with  the type of arguments which are sent first and giving error on L3\n          function_structure2.rs:33:11: 33:15 error: mismatched types:\n          expected `&new`,\n          found `&_`\n          (expected struct `new`,\n                 found integral variable) [E0308]\n           function_structure2.rs:33      elem(&num); \n\nI read from https://gist.github.com/Kimundi/8391398  that rust makes copies of function which takes generic arguments for each type at compile time .\nIf a generic type is initialised with with  the type of arguments which are sent first ,then how to overcome this???\n", "closed_by": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34642/timeline", "performed_via_github_app": null, "state_reason": "completed"}