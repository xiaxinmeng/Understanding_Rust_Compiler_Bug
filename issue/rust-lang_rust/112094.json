{"url": "https://api.github.com/repos/rust-lang/rust/issues/112094", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112094/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112094/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112094/events", "html_url": "https://github.com/rust-lang/rust/issues/112094", "id": 1731684728, "node_id": "I_kwDOAAsO6M5nN2l4", "number": 112094, "title": "compiler/rustc_hir_analysis/src/check/wfcheck.rs:1582:26: unexpected region: ReStatic", "user": {"login": "NightEule5", "id": 24661563, "node_id": "MDQ6VXNlcjI0NjYxNTYz", "avatar_url": "https://avatars.githubusercontent.com/u/24661563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NightEule5", "html_url": "https://github.com/NightEule5", "followers_url": "https://api.github.com/users/NightEule5/followers", "following_url": "https://api.github.com/users/NightEule5/following{/other_user}", "gists_url": "https://api.github.com/users/NightEule5/gists{/gist_id}", "starred_url": "https://api.github.com/users/NightEule5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NightEule5/subscriptions", "organizations_url": "https://api.github.com/users/NightEule5/orgs", "repos_url": "https://api.github.com/users/NightEule5/repos", "events_url": "https://api.github.com/users/NightEule5/events{/privacy}", "received_events_url": "https://api.github.com/users/NightEule5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2023-05-30T07:30:48Z", "updated_at": "2023-05-30T07:50:12Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n-->\n\n### Code\n\n```Rust\n#![allow(incomplete_features)]\n#![feature(adt_const_params, return_position_impl_trait_in_trait)]\n\npub struct Element;\n\npub trait Node {\n    fn elements<const T: &'static str>(&self) -> impl Iterator<Item = Element>;\n}\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc 1.72.0-nightly (498553fc0 2023-05-29)\nbinary: rustc\ncommit-hash: 498553fc04f6a3fdc53412320f4e913bc53bc267\ncommit-date: 2023-05-29\nhost: x86_64-unknown-linux-gnu\nrelease: 1.72.0-nightly\nLLVM version: 16.0.4\n```\n\n### Error output\n\n```\nerror: internal compiler error: compiler/rustc_hir_analysis/src/check/wfcheck.rs:1582:26: unexpected region: ReStatic\n\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/498553fc04f6a3fdc53412320f4e913bc53bc267/compiler/rustc_errors/src/lib.rs:1651:9\nstack backtrace:\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\n   1: <rustc_errors::HandlerInner>::bug::<alloc::string::String>\n   2: <rustc_errors::Handler>::bug::<alloc::string::String>\n   3: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>::{closure#0}\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, !>::{closure#0}\n   5: rustc_middle::ty::context::tls::with_context_opt::<rustc_middle::ty::context::tls::with_opt<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>\n   6: rustc_middle::util::bug::bug_fmt\n   7: <rustc_hir_analysis::check::wfcheck::ImplTraitInTraitFinder as rustc_type_ir::visit::TypeVisitor<rustc_middle::ty::context::TyCtxt>>::visit_ty::{closure#0}\n   8: <rustc_middle::ty::Ty as rustc_type_ir::fold::TypeSuperFoldable<rustc_middle::ty::context::TyCtxt>>::super_fold_with::<rustc_middle::ty::fold::RegionFolder>\n   9: <rustc_middle::ty::consts::Const as rustc_type_ir::fold::TypeSuperFoldable<rustc_middle::ty::context::TyCtxt>>::super_fold_with::<rustc_middle::ty::fold::RegionFolder>\n  10: <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_type_ir::fold::TypeFoldable<rustc_middle::ty::context::TyCtxt>>::try_fold_with::<rustc_middle::ty::fold::RegionFolder>\n  11: <rustc_middle::ty::sty::AliasTy as rustc_type_ir::fold::TypeFoldable<rustc_middle::ty::context::TyCtxt>>::try_fold_with::<rustc_middle::ty::fold::RegionFolder>\n  12: <rustc_middle::ty::context::TyCtxt>::fold_regions::<rustc_middle::ty::sty::AliasTy, <rustc_hir_analysis::check::wfcheck::ImplTraitInTraitFinder as rustc_type_ir::visit::TypeVisitor<rustc_middle::ty::context::TyCtxt>>::visit_ty::{closure#0}>\n  13: <rustc_hir_analysis::check::wfcheck::ImplTraitInTraitFinder as rustc_type_ir::visit::TypeVisitor<rustc_middle::ty::context::TyCtxt>>::visit_ty\n  14: rustc_hir_analysis::check::wfcheck::check_fn_or_method\n  15: rustc_hir_analysis::check::wfcheck::check_associated_item\n  16: rustc_hir_analysis::check::wfcheck::check_well_formed\n  17: std::panicking::try::<(), core::panic::unwind_safe::AssertUnwindSafe<rustc_data_structures::sync::par_for_each_in<&[rustc_hir::hir_id::OwnerId], <rustc_middle::hir::map::Map>::par_for_each_module<rustc_hir_analysis::check_crate::{closure#5}::{closure#0}::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>\n  18: rustc_data_structures::sync::par_for_each_in::<&[rustc_hir::hir_id::OwnerId], <rustc_middle::hir::map::Map>::par_for_each_module<rustc_hir_analysis::check_crate::{closure#5}::{closure#0}::{closure#0}>::{closure#0}>\n  19: <rustc_session::session::Session>::track_errors::<rustc_hir_analysis::check_crate::{closure#5}, ()>\n  20: rustc_hir_analysis::check_crate\n  21: rustc_interface::passes::analysis\n  22: <rustc_interface::queries::QueryResult<&rustc_middle::ty::context::GlobalCtxt>>::enter::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}>\n  23: <rustc_interface::interface::Compiler>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_span::ErrorGuaranteed>>\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\nnote: rustc 1.72.0-nightly (498553fc0 2023-05-29) running on x86_64-unknown-linux-gnu\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\nnote: some of the compiler flags provided by cargo are hidden\nquery stack during panic:\n#0 [check_well_formed] checking that `Node::elements` is well-formed\n#1 [analysis] running analysis passes on this crate\nend of query stack\nthere was a panic while trying to force a dep node\ntry_mark_green dep node stack:\n#0 check_mod_type_wf(ice_test[2ea4])\nend of try_mark_green dep node stack\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nstack backtrace:\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\n   1: <rustc_errors::HandlerInner>::bug::<alloc::string::String>\n   2: <rustc_errors::Handler>::bug::<alloc::string::String>\n   3: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>::{closure#0}\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, !>::{closure#0}\n   5: rustc_middle::ty::context::tls::with_context_opt::<rustc_middle::ty::context::tls::with_opt<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, !>::{closure#0}, !>\n   6: rustc_middle::util::bug::bug_fmt\n   7: <rustc_hir_analysis::check::wfcheck::ImplTraitInTraitFinder as rustc_type_ir::visit::TypeVisitor<rustc_middle::ty::context::TyCtxt>>::visit_ty::{closure#0}\n   8: <rustc_middle::ty::Ty as rustc_type_ir::fold::TypeSuperFoldable<rustc_middle::ty::context::TyCtxt>>::super_fold_with::<rustc_middle::ty::fold::RegionFolder>\n   9: <rustc_middle::ty::consts::Const as rustc_type_ir::fold::TypeSuperFoldable<rustc_middle::ty::context::TyCtxt>>::super_fold_with::<rustc_middle::ty::fold::RegionFolder>\n  10: <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_type_ir::fold::TypeFoldable<rustc_middle::ty::context::TyCtxt>>::try_fold_with::<rustc_middle::ty::fold::RegionFolder>\n  11: <rustc_middle::ty::sty::AliasTy as rustc_type_ir::fold::TypeFoldable<rustc_middle::ty::context::TyCtxt>>::try_fold_with::<rustc_middle::ty::fold::RegionFolder>\n  12: <rustc_middle::ty::context::TyCtxt>::fold_regions::<rustc_middle::ty::sty::AliasTy, <rustc_hir_analysis::check::wfcheck::ImplTraitInTraitFinder as rustc_type_ir::visit::TypeVisitor<rustc_middle::ty::context::TyCtxt>>::visit_ty::{closure#0}>\n  13: <rustc_hir_analysis::check::wfcheck::ImplTraitInTraitFinder as rustc_type_ir::visit::TypeVisitor<rustc_middle::ty::context::TyCtxt>>::visit_ty\n  14: rustc_hir_analysis::check::wfcheck::check_fn_or_method\n  15: rustc_hir_analysis::check::wfcheck::check_associated_item\n  16: rustc_hir_analysis::check::wfcheck::check_well_formed\n  17: std::panicking::try::<(), core::panic::unwind_safe::AssertUnwindSafe<rustc_data_structures::sync::par_for_each_in<&[rustc_hir::hir::ForeignItemId], <rustc_middle::hir::ModuleItems>::par_foreign_items<rustc_hir_analysis::check::wfcheck::check_mod_type_wf::{closure#3}>::{closure#0}>::{closure#0}::{closure#0}>>\n  18: rustc_data_structures::sync::par_for_each_in::<&[rustc_hir::hir::TraitItemId], <rustc_middle::hir::ModuleItems>::par_trait_items<rustc_hir_analysis::check::wfcheck::check_mod_type_wf::{closure#2}>::{closure#0}>\n  19: rustc_hir_analysis::check::wfcheck::check_mod_type_wf\n  20: std::panicking::try::<(), core::panic::unwind_safe::AssertUnwindSafe<rustc_data_structures::sync::par_for_each_in<&[rustc_hir::hir_id::OwnerId], <rustc_middle::hir::map::Map>::par_for_each_module<rustc_hir_analysis::check_crate::{closure#5}::{closure#0}::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}>>\n  21: rustc_data_structures::sync::par_for_each_in::<&[rustc_hir::hir_id::OwnerId], <rustc_middle::hir::map::Map>::par_for_each_module<rustc_hir_analysis::check_crate::{closure#5}::{closure#0}::{closure#0}>::{closure#0}>\n  22: <rustc_session::session::Session>::track_errors::<rustc_hir_analysis::check_crate::{closure#5}, ()>\n  23: rustc_hir_analysis::check_crate\n  24: rustc_interface::passes::analysis\n  25: <rustc_interface::queries::QueryResult<&rustc_middle::ty::context::GlobalCtxt>>::enter::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}>\n  26: <rustc_interface::interface::Compiler>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_span::ErrorGuaranteed>>\n```\n\n</p>\n</details>\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"obeis\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112094/timeline", "performed_via_github_app": null, "state_reason": null}