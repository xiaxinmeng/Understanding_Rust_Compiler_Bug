{"url": "https://api.github.com/repos/rust-lang/rust/issues/52118", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52118/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52118/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52118/events", "html_url": "https://github.com/rust-lang/rust/issues/52118", "id": 339082383, "node_id": "MDU6SXNzdWUzMzkwODIzODM=", "number": 52118, "title": "Using variant on `self` type with path `Self::Variant` causes subpar diagnostic", "user": {"login": "andradei", "id": 2653546, "node_id": "MDQ6VXNlcjI2NTM1NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2653546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andradei", "html_url": "https://github.com/andradei", "followers_url": "https://api.github.com/users/andradei/followers", "following_url": "https://api.github.com/users/andradei/following{/other_user}", "gists_url": "https://api.github.com/users/andradei/gists{/gist_id}", "starred_url": "https://api.github.com/users/andradei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andradei/subscriptions", "organizations_url": "https://api.github.com/users/andradei/orgs", "repos_url": "https://api.github.com/users/andradei/repos", "events_url": "https://api.github.com/users/andradei/events{/privacy}", "received_events_url": "https://api.github.com/users/andradei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-06T21:57:44Z", "updated_at": "2019-07-01T06:42:11Z", "closed_at": "2019-07-01T06:42:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The snippet below fails to compile with the following messages of each `enum` variant:\r\n\r\n```rust\r\npub enum State {\r\n    Init,\r\n    NewProject,\r\n    NewTask,\r\n    NewEvent,\r\n}\r\n\r\nimpl State {\r\n    pub fn commands<'a>(&self) -> usize {\r\n        match self {\r\n            Self::Init => 1,\r\n            Self::NewProject | Self::NewTask | Self::NewEvent => 2,\r\n            _ => 0,\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n```\r\nerror[E0599]: no variant named `Init` found for type `State` in the current scope\r\n  --> src/main.rs:11:13\r\n   |\r\n1  | pub enum State {\r\n   | -------------- variant `Init` not found here\r\n...\r\n11 |             Self::Init => 1,\r\n   |             ^^^^^^^^^^ variant not found in `State`\r\n   |\r\n   = note: did you mean `variant::Init`?\r\n```\r\n\r\nThe solution is to replace `Self::Init` with explicit type `State::Init`. But the issues are:\r\n\r\n- Error E0599 doesn't explain the actual problem (Use of `Self` instead of the explicit type)\r\n- The message `no variant named \"Init\" found for type \"State\" in the current scope` is misleading\r\n- `note: did you mean \"variant::Init\"?` is also a little misleading. A phrase like `note: replace \"Self::Init\" with \"State::Init\"` is much clearer\r\n\r\nAnd finally:\r\n- Why isn't `Self::` allowed inside `impl MyEnum` blocks?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52118/timeline", "performed_via_github_app": null, "state_reason": "completed"}