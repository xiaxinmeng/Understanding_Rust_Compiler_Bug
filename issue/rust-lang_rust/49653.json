{"url": "https://api.github.com/repos/rust-lang/rust/issues/49653", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49653/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49653/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49653/events", "html_url": "https://github.com/rust-lang/rust/issues/49653", "id": 311261408, "node_id": "MDU6SXNzdWUzMTEyNjE0MDg=", "number": 49653, "title": "Should -Ctarget-feature go straight to LLVM?", "user": {"login": "hanna-kruppe", "id": 2311707, "node_id": "MDQ6VXNlcjIzMTE3MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2311707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanna-kruppe", "html_url": "https://github.com/hanna-kruppe", "followers_url": "https://api.github.com/users/hanna-kruppe/followers", "following_url": "https://api.github.com/users/hanna-kruppe/following{/other_user}", "gists_url": "https://api.github.com/users/hanna-kruppe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanna-kruppe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanna-kruppe/subscriptions", "organizations_url": "https://api.github.com/users/hanna-kruppe/orgs", "repos_url": "https://api.github.com/users/hanna-kruppe/repos", "events_url": "https://api.github.com/users/hanna-kruppe/events{/privacy}", "received_events_url": "https://api.github.com/users/hanna-kruppe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 201852178, "node_id": "MDU6TGFiZWwyMDE4NTIxNzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-stability", "name": "A-stability", "color": "f7e101", "default": false, "description": "Area: issues related to #[stable] and #[unstable] attributes themselves."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-04-04T14:45:16Z", "updated_at": "2021-04-08T18:51:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `--print target-features` and `-C target-feature` options list/accept all target features LLVM knows, under the names LLVM gives them (see discussion in #49428). This is in contrast to `#[target_feature]` and `cfg(target_feature)`, which accept only explicitly whitelisted features, and in some cases change the LLVM names (e.g., `bmi1` instead of `bmi`). This is inconsistent, and also makes the command line interface less stable than it could be.\r\n\r\nAs @gnzlbg noted in #49428, this difference has existed for a while. However, in effect the command line options don't have a real stability guarantee: `rustc`s not built with our LLVM fork don't currently recognize *any* target features, and the LLVM names can change under our feet (this was part of the rationale for having a whitelist in rustc). Note that `-C` flags \"without stability guarantee\" are not without precedent, e.g., consider `-C passes` (which also depends on LLVM internals).\r\n\r\nSo I believe we're within our rights to change this. Especially now that the whitelist is much more complete. And it has real advantages: consistency between command line and attributes/cfgs, more stability for the command line switch, and making it work on `rustc`s with system LLVMs, thanks to @cuviper's work in #49428.\r\n\r\ncc @japaric are you aware of uses of this option that aren't covered by [the current whitelists](https://github.com/rust-lang/rust/blob/e31addf7c358aba28ce0910e93d009397a72a05f/src/librustc_trans/llvm_util.rs#L85-L111)?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49653/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49653/timeline", "performed_via_github_app": null, "state_reason": null}