{"url": "https://api.github.com/repos/rust-lang/rust/issues/27448", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27448/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27448/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27448/events", "html_url": "https://github.com/rust-lang/rust/issues/27448", "id": 98500690, "node_id": "MDU6SXNzdWU5ODUwMDY5MA==", "number": 27448, "title": "Defining a public method on a private type alias causes linking failures", "user": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-01T02:46:57Z", "updated_at": "2015-08-01T21:42:49Z", "closed_at": "2015-08-01T21:42:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Suppose we have a crate named `c`.\n\n**src/lib.rs**:\n\n``` rust\npub struct A<T>(T);\n\ntype B = A<()>;\nimpl B {\n    pub fn new() -> Self {\n        A(())\n    }\n}\n```\n\n``` text\nsrc/lib.rs:5:5: 7:6 warning: method is never used: `new`, #[warn(dead_code)] on by default\nsrc/lib.rs:5     pub fn new() -> Self {\nsrc/lib.rs:6         A(())\nsrc/lib.rs:7     }\n```\n\nGiven that type aliases are supposed to be purely aliases, `new` should not be considered dead code. The fact that `B` is not public should be immaterial.\n\nThen we try to use it in **src/main.rs**:\n\n``` rust\nextern crate c;\n\nfn main() {\n    let _ = c::A::new();\n}\n```\n\n``` text\nerror: linking with `cc` failed: exit code: 1\nnote: \"cc\" \"-Wl,--as-needed\" \"-m64\" \"-L\" \"/home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"/tmp/c/target/debug/c.0.o\" \"-o\" \"/tmp/c/target/debug/c\" \"-Wl,--whole-archive\" \"-l\" \"morestack\" \"-Wl,--no-whole-archive\" \"-Wl,--gc-sections\" \"-pie\" \"-nodefaultlibs\" \"/tmp/c/target/debug/libc.rlib\" \"/home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-74fa456f.rlib\" \"/home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcollections-74fa456f.rlib\" \"/home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_unicode-74fa456f.rlib\" \"/home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib/librand-74fa456f.rlib\" \"/home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-74fa456f.rlib\" \"/home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-74fa456f.rlib\" \"/home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-74fa456f.rlib\" \"-L\" \"/tmp/c/target/debug\" \"-L\" \"/tmp/c/target/debug/deps\" \"-L\" \"/home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-L\" \"/tmp/c/.rust/lib/x86_64-unknown-linux-gnu\" \"-L\" \"/tmp/c/lib/x86_64-unknown-linux-gnu\" \"-Wl,-Bstatic\" \"-Wl,-Bdynamic\" \"-l\" \"dl\" \"-l\" \"pthread\" \"-l\" \"rt\" \"-l\" \"gcc_s\" \"-l\" \"pthread\" \"-l\" \"c\" \"-l\" \"m\" \"-Wl,-rpath,$ORIGIN/../../../../home/chris/.multirust/toolchains/nightly/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-rpath,/usr/local/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-l\" \"compiler-rt\"\nnote: /tmp/c/target/debug/c.0.o: In function `c::main':\n/tmp/c/src/main.rs:4: undefined reference to `B::new::h8f30536929b2bf42paa'\ncollect2: error: ld returned 1 exit status\n```\n\nSo the Rust compiler thinks it exists, but hasn\u2019t gone creating the symbol for it and so it fails in linking.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27448/timeline", "performed_via_github_app": null, "state_reason": "completed"}