{"url": "https://api.github.com/repos/rust-lang/rust/issues/37868", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37868/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37868/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37868/events", "html_url": "https://github.com/rust-lang/rust/issues/37868", "id": 190438168, "node_id": "MDU6SXNzdWUxOTA0MzgxNjg=", "number": 37868, "title": "std::process::Command's current_dir behaves differently on Unix and Windows, with respect to relative exe paths", "user": {"login": "oconnor663", "id": 860932, "node_id": "MDQ6VXNlcjg2MDkzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/860932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnor663", "html_url": "https://github.com/oconnor663", "followers_url": "https://api.github.com/users/oconnor663/followers", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "repos_url": "https://api.github.com/users/oconnor663/repos", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 3812066157, "node_id": "LA_kwDOAAsO6M7jN4Nt", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-process", "name": "A-process", "color": "f7e101", "default": false, "description": "Area: std::process and std::env"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-11-18T22:34:02Z", "updated_at": "2023-01-26T20:26:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On Unix, relative paths to the exe are interpreted after cd'ing to the `current_dir`, but on Windows they're interpreted before. Here's an example test (1 test file, and 1 little binary that the test needs to build) that demonstrates this if you run `cargo test` on the two different platforms:\r\n\r\n#### src/lib.rs\r\n\r\n```rust\r\n#[test]\r\nfn execute_binary_from_another_dir() {\r\n    // Run `cargo build` to make sure the associated `foo` binary gets built.\r\n    std::process::Command::new(\"cargo\").arg(\"build\").status().unwrap();\r\n\r\n    // Shell out to `foo`, just to confirm that this works fine.\r\n    std::process::Command::new(\"target/debug/foo\")\r\n        .status()\r\n        .unwrap();\r\n\r\n    // Now try to shell out to `foo` again while also setting the current_dir.\r\n    // This fails on Unix, because the path to the binary is resolved *after*\r\n    // changing directories, but it works on Windows.\r\n    std::process::Command::new(\"target/debug/foo\")\r\n        .current_dir(\"..\")\r\n        .status()\r\n        .unwrap();\r\n}\r\n```\r\n#### src/bin/foo.rs\r\n\r\n```rust\r\nfn main() {\r\n    println!(\"foo!\");\r\n}\r\n```\r\n\r\nI ran into a similar difference when I tried this with Python's `subprocess.run(..., cwd=...)`. It looks like it's an artifact of Windows supporting [an `lpCurrentDirectory` arg](https://msdn.microsoft.com/en-us/library/windows/desktop/ms682425(v=vs.85).aspx) natively, while Unix has to `fork` and then `chdir` in the child before it calls `exec`. I prefer the semantics that we're getting on Windows right now\\*, but this issue is mainly that they're not the same.\r\n\r\n\\* My main reason for preferring the current-Windows-style \"`current_dir` does not affect the exe location\" semantics: Emulating the current-Unix-style only requires a `Path::join`, which always works. But going the other way requires a `Path::canonicalize`, which can fail.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37868/timeline", "performed_via_github_app": null, "state_reason": null}