{"url": "https://api.github.com/repos/rust-lang/rust/issues/112169", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112169/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112169/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112169/events", "html_url": "https://github.com/rust-lang/rust/issues/112169", "id": 1735782062, "node_id": "I_kwDOAAsO6M5nde6u", "number": 112169, "title": "Weird codegen / constant folding with iterators of length > 101", "user": {"login": "SadiinsoSnowfall", "id": 32017313, "node_id": "MDQ6VXNlcjMyMDE3MzEz", "avatar_url": "https://avatars.githubusercontent.com/u/32017313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SadiinsoSnowfall", "html_url": "https://github.com/SadiinsoSnowfall", "followers_url": "https://api.github.com/users/SadiinsoSnowfall/followers", "following_url": "https://api.github.com/users/SadiinsoSnowfall/following{/other_user}", "gists_url": "https://api.github.com/users/SadiinsoSnowfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/SadiinsoSnowfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SadiinsoSnowfall/subscriptions", "organizations_url": "https://api.github.com/users/SadiinsoSnowfall/orgs", "repos_url": "https://api.github.com/users/SadiinsoSnowfall/repos", "events_url": "https://api.github.com/users/SadiinsoSnowfall/events{/privacy}", "received_events_url": "https://api.github.com/users/SadiinsoSnowfall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-06-01T08:37:25Z", "updated_at": "2023-06-01T09:21:48Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWhen playing with some of my code on compiler explorer, I found a case where rust would not compute the result of some functions at compile time. I managed to reduce the code to the following:\r\n```rust\r\npub fn test() -> i32 {\r\n    let mut s = 0;\r\n\r\n    for i in 0..102 {\r\n        if i == 0 {\r\n            s = i;\r\n        }\r\n\r\n        s += 1;\r\n    }\r\n\r\n    s\r\n}\r\n\r\npub fn test2() -> i32 {\r\n    let mut s = 0;\r\n\r\n    for i in 0..101 {\r\n        if i == 0 {\r\n            s = i;\r\n        }\r\n\r\n        s += 1;\r\n    }\r\n\r\n    s\r\n}\r\n\r\npub fn test3() -> i32 {\r\n    let mut s = 0;\r\n\r\n    for _ in 0..102 {\r\n        s += 1;\r\n    }\r\n\r\n    s\r\n}\r\n```\r\n[compiler explorer link](https://godbolt.org/z/d6YaYs1We)\r\n\r\nBoth `test2` and `test3` are completely optimized and are compiled down to a singled \"mov constant + ret\" combo. But the `test` function generates something quite convoluted: the compiler loads the result (`102`) and removes `6` from it until it reaches `0`, at which point it returns the value of another register to which `6`s have been added at each step.\r\n\r\nI tried a few versions of rustc but couldn't find any which completely optimized away the first function. Using `mir-opt-level` didn't help.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112169/timeline", "performed_via_github_app": null, "state_reason": null}