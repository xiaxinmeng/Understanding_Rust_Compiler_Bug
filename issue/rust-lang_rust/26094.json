{"url": "https://api.github.com/repos/rust-lang/rust/issues/26094", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26094/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26094/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26094/events", "html_url": "https://github.com/rust-lang/rust/issues/26094", "id": 86053330, "node_id": "MDU6SXNzdWU4NjA1MzMzMA==", "number": 26094, "title": "Capacity overflow or unprintable scan ICE when an error occurs when calling a function provided to a macro", "user": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-08T06:49:59Z", "updated_at": "2016-01-27T16:12:06Z", "closed_at": "2016-01-27T16:12:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's an example:\n\n``` rust\nmacro_rules! some_macro {\n    ($other: expr) => ({\n        $other(None)\n    })\n}\n\nfn some_function() {\n}\n\nfn main() {\n    some_macro!(some_function);\n}\n```\n\nThe panic occurs seemingly if there is any error at all inside the `()` after `$other`. I just had providing an extra argument as an example, though having any kind of code error inside those braces produces this.\n\nOutput from 1.0 stable:\n\n```\n$ RUST_BACKTRACE=1 rustc example.rs\nexample.rs:11:17: 3:21 error: this function takes 0 parameters but 1 parameter was supplied [E0061]\nerror: internal compiler error: unexpected panic\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: run with `RUST_BACKTRACE=1` for a backtrace\nthread 'rustc' panicked at 'capacity overflow', /home/rustbuild/src/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libcore/option.rs:330\n\nstack backtrace:\n   1:     0x7f50a6735449 - sys::backtrace::write::hbc46dc0cfb3b9537d4r\n   2:     0x7f50a673d156 - panicking::on_panic::h74d3c14d86c58ac8jrw\n   3:     0x7f50a6700462 - rt::unwind::begin_unwind_inner::h382cea404b11eb00t6v\n   4:     0x7f50a670110c - rt::unwind::begin_unwind_fmt::h5c14cfc30901d9d274v\n   5:     0x7f50a673cd36 - rust_begin_unwind\n   6:     0x7f50a6789064 - panicking::panic_fmt::h9ea3571c30b632b3wwy\n   7:     0x7f50a3c8967f - codemap::CodeMap::span_to_lines::hce1c500ecc8eee0doiA\n   8:     0x7f50a3cce5c7 - diagnostic::emit::h24e89ba7e5b01060mTB\n   9:     0x7f50a3ccc414 - diagnostic::EmitterWriter.Emitter::emit::hea68345bf5867ea44PB\n  10:     0x7f50a3cca96b - diagnostic::SpanHandler::span_err_with_code::h0ceccd6fc81b0a2eEmB\n  11:     0x7f50a456669a - session::Session::span_err_with_code::hcbfda103ccc8609aRxq\n  12:     0x7f50a55705d1 - check::check_argument_types::h9424757d84871b0c6Hp\n  13:     0x7f50a556e01b - check::callee::confirm_builtin_call::h513ef322dab07ec582l\n  14:     0x7f50a556c8b1 - check::callee::check_call::h9f7647a0d5b2299bQTl\n  15:     0x7f50a55c33b9 - check::check_expr_with_unifier::h7613982835395653666\n  16:     0x7f50a5587f4d - check::check_block_with_expected::h31a6d6204e48ff42nUr\n  17:     0x7f50a55cf66e - check::check_expr_with_unifier::h6071885822603894829\n  18:     0x7f50a5587bc4 - check::check_block_with_expected::h31a6d6204e48ff42nUr\n  19:     0x7f50a556a6c6 - check::check_fn::h1656833949835747UGn\n  20:     0x7f50a5583594 - check::check_bare_fn::h1ca89f422d965ecetwn\n  21:     0x7f50a55816f2 - check::CheckItemBodiesVisitor<'a, 'tcx>.Visitor<'tcx>::visit_item::h29ccc99d00d684a7wtn\n  22:     0x7f50a564569a - check_crate::closure.38028\n  23:     0x7f50a5640a30 - check_crate::h22dcd95e17a2d96dXcC\n  24:     0x7f50a6c79cc8 - driver::phase_3_run_analysis_passes::h43926ceca86caa9fnGa\n  25:     0x7f50a6c5adc5 - driver::compile_input::hb78754f2f33c01efQba\n  26:     0x7f50a6d1c4d1 - run_compiler::h258d36d5501c1cdfz4b\n  27:     0x7f50a6d1a122 - boxed::F.FnBox<A>::call_box::h7239693171334256553\n  28:     0x7f50a6d19659 - rt::unwind::try::try_fn::h14329119008520845439\n  29:     0x7f50a67afac8 - rust_try_inner\n  30:     0x7f50a67afab5 - rust_try\n  31:     0x7f50a6d19908 - boxed::F.FnBox<A>::call_box::h17332056298259451807\n  32:     0x7f50a673c041 - sys::thread::create::thread_start::h490278b5c3c0b49faqv\n  33:     0x7f50a0fbe181 - start_thread\n  34:     0x7f50a638647c - __clone\n  35:                0x0 - <unknown>\n```\n\nThere's a different error when running with either 1.1-beta or 1.2-nightly (`rustc 1.1.0-beta (cd7d89af9 2015-05-16) (built 2015-05-16)` and `rustc 1.2.0-nightly (613e57b44 2015-06-01) (built 2015-06-02)` have the exact same error output). It's nicer, explaining the issue, though still has an ICE. It doesn't seem to produce a backtrace even if run with RUST_BACKTRACE=1 (on both 1.1 beta and 1.2 nightly).\n\n```\n$ RUST_BACKTRACE=1 rustc example.rs \nexample.rs:11:17: 3:21 error: this function takes 0 parameters but 1 parameter was supplied [E0061]\n(internal compiler error: unprintable span)\nexample.rs:1:1: 5:2 note: in expansion of some_macro!\nexample.rs:11:5: 11:32 note: expansion site\nerror: aborting due to previous error\n```\n\nThis may be related to https://github.com/rust-lang/rust/issues/25793 and https://github.com/rust-lang/rust/issues/24761, though I think the code this is produced with is fairly different which is why I'm making a separate issue.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26094/timeline", "performed_via_github_app": null, "state_reason": "completed"}