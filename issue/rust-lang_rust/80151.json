{"url": "https://api.github.com/repos/rust-lang/rust/issues/80151", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80151/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80151/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80151/events", "html_url": "https://github.com/rust-lang/rust/issues/80151", "id": 770807466, "node_id": "MDU6SXNzdWU3NzA4MDc0NjY=", "number": 80151, "title": "thread 'rustc' panicked at 'index out of bounds: the len is 76 but the index is 76',", "user": {"login": "GopherJ", "id": 33961674, "node_id": "MDQ6VXNlcjMzOTYxNjc0", "avatar_url": "https://avatars.githubusercontent.com/u/33961674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GopherJ", "html_url": "https://github.com/GopherJ", "followers_url": "https://api.github.com/users/GopherJ/followers", "following_url": "https://api.github.com/users/GopherJ/following{/other_user}", "gists_url": "https://api.github.com/users/GopherJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/GopherJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GopherJ/subscriptions", "organizations_url": "https://api.github.com/users/GopherJ/orgs", "repos_url": "https://api.github.com/users/GopherJ/repos", "events_url": "https://api.github.com/users/GopherJ/events{/privacy}", "received_events_url": "https://api.github.com/users/GopherJ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-12-18T11:22:27Z", "updated_at": "2020-12-22T12:07:59Z", "closed_at": "2020-12-22T12:07:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Code\r\n\r\n```Rust\r\n/*\r\ncargo run -p async-ssh2-lite-demo-smol --bin proxy_jump intranet.com:22 intranet_user bastion.com:22 bastion_user\r\n*/\r\n\r\n#![recursion_limit = \"256\"]\r\n\r\nuse std::env;\r\nuse std::io;\r\nuse std::net::{TcpStream, ToSocketAddrs};\r\nuse std::sync::Arc;\r\n\r\nuse async_executor::{Executor, LocalExecutor, Task};\r\nuse async_io::Async;\r\nuse easy_parallel::Parallel;\r\nuse futures::executor::block_on;\r\nuse futures::future::FutureExt;\r\nuse futures::select;\r\nuse futures::{AsyncReadExt, AsyncWriteExt};\r\n\r\n#[cfg(not(unix))]\r\nuse std::net::TcpListener;\r\n#[cfg(unix)]\r\nuse std::os::unix::net::{UnixListener, UnixStream};\r\n#[cfg(unix)]\r\nuse tempfile::tempdir;\r\n\r\nuse async_ssh2_lite::AsyncSession;\r\n\r\nfn main() -> io::Result<()> {\r\n    let ex = Executor::new();\r\n    let ex = Arc::new(ex);\r\n    let local_ex = LocalExecutor::new();\r\n    let (trigger, shutdown) = async_channel::unbounded::<()>();\r\n\r\n    let ret_vec: (_, io::Result<()>) = Parallel::new()\r\n        .each(0..4, |_| {\r\n            block_on(ex.run(async {\r\n                shutdown\r\n                    .recv()\r\n                    .await\r\n                    .map_err(|err| io::Error::new(io::ErrorKind::Other, err))\r\n            }))\r\n        })\r\n        .finish(|| {\r\n            block_on(local_ex.run(async {\r\n                run(ex.clone()).await?;\r\n\r\n                drop(trigger);\r\n\r\n                Ok(())\r\n            }))\r\n        });\r\n\r\n    println!(\"ret_vec: {:?}\", ret_vec);\r\n\r\n    Ok(())\r\n}\r\n\r\nasync fn run(ex: Arc<Executor<'_>>) -> io::Result<()> {\r\n    let addr = env::args()\r\n        .nth(1)\r\n        .unwrap_or_else(|| env::var(\"ADDR\").unwrap_or(\"127.0.0.1:22\".to_owned()));\r\n    let username = env::args()\r\n        .nth(2)\r\n        .unwrap_or_else(|| env::var(\"USERNAME\").unwrap_or(\"root\".to_owned()));\r\n    let bastion_addr = env::args()\r\n        .nth(3)\r\n        .unwrap_or_else(|| env::var(\"BASTION_ADDR\").unwrap_or(\"127.0.0.1:22\".to_owned()));\r\n    let bastion_username = env::args()\r\n        .nth(4)\r\n        .unwrap_or_else(|| env::var(\"BASTION_USERNAME\").unwrap_or(\"root\".to_owned()));\r\n\r\n    let addr = addr.to_socket_addrs().unwrap().next().unwrap();\r\n    let bastion_addr = bastion_addr.to_socket_addrs().unwrap().next().unwrap();\r\n\r\n    //\r\n    let mut receivers = vec![];\r\n    let (sender_with_main, receiver) = async_channel::unbounded();\r\n    receivers.push(receiver);\r\n    let (sender_with_forward, receiver) = async_channel::unbounded();\r\n    receivers.push(receiver);\r\n\r\n    let task_with_main: Task<io::Result<()>> = ex.clone().spawn(async move {\r\n        let bastion_stream = Async::<TcpStream>::connect(bastion_addr).await?;\r\n\r\n        let mut bastion_session = AsyncSession::new(bastion_stream, None)?;\r\n\r\n        bastion_session.handshake().await?;\r\n\r\n        bastion_session\r\n            .userauth_agent(bastion_username.as_ref())\r\n            .await?;\r\n\r\n        if !bastion_session.authenticated() {\r\n            return Err(bastion_session\r\n                .last_error()\r\n                .and_then(|err| Some(io::Error::from(err)))\r\n                .unwrap_or(io::Error::new(\r\n                    io::ErrorKind::Other,\r\n                    \"bastion unknown userauth error\",\r\n                )));\r\n        }\r\n\r\n        let mut channel = bastion_session.channel_session().await?;\r\n        channel.exec(\"hostname\").await?;\r\n        let mut s = String::new();\r\n        channel.read_to_string(&mut s).await?;\r\n        println!(\"bastion hostname: {}\", s);\r\n        channel.close().await?;\r\n        println!(\"bastion channel exit_status: {}\", channel.exit_status()?);\r\n\r\n        let remote_port = 4444;\r\n        let (mut  bastion_channel, _) = bastion_session\r\n            .channel_forward_listen(remote_port, None, None)\r\n            .await?;\r\n\r\n        //\r\n        loop {\r\n            let mut channel =  bastion_channel.accept().await?;\r\n\r\n            let task_with_forward: Task<io::Result<()>> = ex.clone().spawn(async move {\r\n                let mut buf_bastion_channel = vec![0_u8; 2048];\r\n                let mut buf_forward_stream_r = vec![0_u8; 2048];\r\n\r\n\r\n            let (mut forward_stream_r, mut forward_stream_w) = {\r\n                // cfg_if::cfg_if! {\r\n                //     if #[cfg(unix)] {\r\n                //         let dir = tempdir()?;\r\n                //         let path = dir.path().join(\"ssh_channel_direct_tcpip\");\r\n                //         let listener = Async::<UnixListener>::bind(&path)?;\r\n                //         let stream_s = Async::<UnixStream>::connect(&path).await?;\r\n                //     } else {\r\n                //         let listen_addr = TcpListener::bind(\"localhost:0\")\r\n                //             .unwrap()\r\n                //             .local_addr()\r\n                //             .unwrap();\r\n                //         let listener = Async::<TcpListener>::bind(listen_addr)?;\r\n                        let stream_s = Async::<TcpStream>::connect(\"127.0.0.1:22\".to_socket_addrs().unwrap().next().unwrap()).await?;\r\n                    // }\r\n                // }\r\n\r\n                // let (stream_r,_) = listener.accept().await.unwrap();\r\n\r\n                stream_s.split()\r\n            };\r\n\r\n            loop {\r\n                select! {\r\n                    ret_forward_stream_r = forward_stream_r.read(&mut buf_forward_stream_r).fuse() => match ret_forward_stream_r {\r\n                        Ok(n) if n == 0 => {\r\n                            println!(\"forward_stream_r read 0\");\r\n                            break\r\n                        },\r\n                        Ok(n) => {\r\n                            println!(\"forward_stream_r read {}\", n);\r\n                            channel.write(&buf_forward_stream_r[..n]).await.map(|_| ()).map_err(|err| {\r\n                                eprintln!(\"bastion_channel write failed, err {:?}\", err);\r\n                                err\r\n                            })?\r\n                        },\r\n                        Err(err) =>  {\r\n                            eprintln!(\"forward_stream_r read failed, err {:?}\", err);\r\n\r\n                            return Err(err);\r\n                        }\r\n                    },\r\n                    ret_bastion_channel = channel.read(&mut buf_bastion_channel).fuse() => match ret_bastion_channel {\r\n                        Ok(n) if n == 0 => {\r\n                            println!(\"bastion_channel read 0\");\r\n                            break\r\n                        },\r\n                        Ok(n) => {\r\n                            println!(\"bastion_channel read {}\", n);\r\n                            forward_stream_w.write(&buf_bastion_channel[..n]).await.map(|_| ()).map_err(|err| {\r\n                                eprintln!(\"forward_stream_r write failed, err {:?}\", err);\r\n                                err\r\n                            })?\r\n                        },\r\n                        Err(err) => {\r\n                            eprintln!(\"bastion_channel read failed, err {:?}\", err);\r\n\r\n                            return Err(err);\r\n                        }\r\n                    },\r\n                }\r\n            }\r\n\r\n\r\n            Ok(())\r\n        });\r\n        task_with_forward.detach();\r\n        }\r\n\r\n            sender_with_forward.clone().send(\"done_with_forward\").await.unwrap();\r\n        //\r\n        // let mut session = AsyncSession::new(forward_stream_r, None)?;\r\n        // session.handshake().await?;\r\n        //\r\n        // session.userauth_agent(username.as_ref()).await?;\r\n        //\r\n        // if !session.authenticated() {\r\n        //     return Err(session\r\n        //         .last_error()\r\n        //         .and_then(|err| Some(io::Error::from(err)))\r\n        //         .unwrap_or(io::Error::new(\r\n        //             io::ErrorKind::Other,\r\n        //             \"unknown userauth error\",\r\n        //         )));\r\n        // }\r\n        //\r\n        // let mut channel = session.channel_session().await?;\r\n        // channel.exec(\"hostname\").await?;\r\n        // let mut s = String::new();\r\n        // channel.read_to_string(&mut s).await?;\r\n        // println!(\"hostname: {}\", s);\r\n        // channel.close().await?;\r\n        // println!(\"channel exit_status: {}\", channel.exit_status()?);\r\n        //\r\n        // session.disconnect(None, \"foo\", None).await?;\r\n        //\r\n        // sender_with_main.send(\"done_with_main\").await.unwrap();\r\n\r\n        Ok(())\r\n    });\r\n\r\n    //\r\n    task_with_main.await.map_err(|err| {\r\n        eprintln!(\"task_with_main run failed, err {:?}\", err);\r\n\r\n        err\r\n    })?;\r\n\r\n    for receiver in receivers {\r\n        let msg = receiver.recv().await.unwrap();\r\n        println!(\"{}\", msg);\r\n    }\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n<version>\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n<output>\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n\r\nthread 'rustc' panicked at 'index out of bounds: the len is 76 but the index is 76', compiler/rustc_middle/src/ty/query/on_disk_cache.rs:458:9\r\nthread 'rustc' panicked at 'index out of bounds: the len is 71 but the index is 71', compiler/rustc_middle/src/ty/query/on_disk_cache.rs:458:9\r\nstack backtrace:\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n   0: rust_begin_unwind\r\n             at /rustc/d32c320d7eee56706486fef6be778495303afe9e/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/d32c320d7eee56706486fef6be778495303afe9e/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/d32c320d7eee56706486fef6be778495303afe9e/library/core/src/panicking.rs:69:5\r\n   3: rustc_middle::ty::query::on_disk_cache::OnDiskCache::def_path_hash_to_def_id\r\n   4: rustc_middle::ty::query::force_from_dep_node\r\n   5: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n   6: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n   7: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_green_and_read\r\n   8: rustc_data_structures::stack::ensure_sufficient_stack\r\n   9: rustc_query_system::query::plumbing::get_query_impl\r\n  10: <rustc_infer::infer::at::At as rustc_trait_selection::traits::query::dropck_outlives::AtExt>::dropck_outlives\r\n             at /rustc/d32c320d7eee56706486fef6be778495303afe9e/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/d32c320d7eee56706486fef6be778495303afe9e/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/d32c320d7eee56706486fef6be778495303afe9e/library/core/src/panicking.rs:69:5\r\n   3: rustc_middle::ty::query::on_disk_cache::OnDiskCache::def_path_hash_to_def_id\r\n   4: rustc_middle::ty::query::force_from_dep_node\r\n   5: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n   6: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n   7: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_green_and_read\r\n   8: rustc_data_structures::stack::ensure_sufficient_stack\r\n   9: rustc_query_system::query::plumbing::get_query_impl\r\n  10: <rustc_infer::infer::at::At as rustc_trait_selection::traits::query::dropck_outlives::AtExt>::dropck_outlives\r\n  11: rustc_typeck::check::dropck::check_drop_obligations\r\n  12: rustc_hir::hir::Pat::walk_\r\n  13: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_local\r\n  14: rustc_hir::intravisit::walk_expr\r\n  15: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  16: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  17: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  18: rustc_typeck::check::regionck::RegionCtxt::visit_fn_body\r\n  19: rustc_hir::intravisit::walk_expr\r\n  20: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  21: rustc_hir::intravisit::walk_expr\r\n  22: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  23: rustc_typeck::check::regionck::RegionCtxt::visit_fn_body\r\n  24: rustc_typeck::check::regionck::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::regionck_fn\r\n  25: rustc_infer::infer::InferCtxtBuilder::enter\r\n  26: rustc_typeck::check::typeck\r\n  27: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  28: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  29: rustc_data_structures::stack::ensure_sufficient_stack\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: rustc_middle::ty::context::TyCtxt::typeck_opt_const_arg\r\n  32: rustc_mir_build::thir::cx::Cx::new\r\n  33: rustc_infer::infer::InferCtxtBuilder::enter\r\n  34: rustc_mir_build::build::mir_built\r\n  35: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_built>::compute\r\n  36: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  37: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  38: rustc_query_system::query::plumbing::get_query_impl\r\n  39: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  40: core::ops::function::FnOnce::call_once\r\n  41: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  42: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  43: rustc_data_structures::stack::ensure_sufficient_stack\r\n  44: rustc_query_system::query::plumbing::force_query_impl\r\n  45: rustc_middle::ty::query::force_from_dep_node\r\n  46: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  47: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  48: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  49: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  50: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_green_and_read\r\n  51: rustc_data_structures::stack::ensure_sufficient_stack\r\n  52: rustc_query_system::query::plumbing::get_query_impl\r\n  53: rustc_typeck::check::check::check_item_type\r\n  54: rustc_typeck::check::check::check_mod_item_types\r\n  55: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_mod_item_types>::compute\r\n  56: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  57: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  58: rustc_data_structures::stack::ensure_sufficient_stack\r\n  59: rustc_query_system::query::plumbing::get_query_impl\r\n  60: rustc_query_system::query::plumbing::ensure_query_impl\r\n  61: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  62: rustc_typeck::check_crate\r\n  63: rustc_interface::passes::analysis\r\n  11: rustc_typeck::check::dropck::check_drop_obligations\r\n  12: rustc_hir::hir::Pat::walk_\r\n  13: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_local\r\n  64: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  14: rustc_hir::intravisit::walk_expr\r\n  15: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  16: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  65: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  17: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  18: rustc_typeck::check::regionck::RegionCtxt::visit_fn_body\r\n  19: rustc_hir::intravisit::walk_expr\r\n  20: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  21: rustc_hir::intravisit::walk_expr\r\n  22: <rustc_typeck::check::regionck::RegionCtxt as rustc_hir::intravisit::Visitor>::visit_expr\r\n  66: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  23: rustc_typeck::check::regionck::RegionCtxt::visit_fn_body\r\n  24: rustc_typeck::check::regionck::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::regionck_fn\r\n  25: rustc_infer::infer::InferCtxtBuilder::enter\r\n  67: rustc_data_structures::stack::ensure_sufficient_stack\r\n  26: rustc_typeck::check::typeck\r\n  27: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  28: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  29: rustc_data_structures::stack::ensure_sufficient_stack\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: rustc_middle::ty::context::TyCtxt::typeck_opt_const_arg\r\n  32: rustc_mir_build::thir::cx::Cx::new\r\n  33: rustc_infer::infer::InferCtxtBuilder::enter\r\n  34: rustc_mir_build::build::mir_built\r\n  35: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_built>::compute\r\n  36: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  37: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  38: rustc_query_system::query::plumbing::get_query_impl\r\n  39: rustc_mir::transform::check_unsafety::unsafety_check_result\r\n  40: core::ops::function::FnOnce::call_once\r\n  41: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  68: rustc_query_system::query::plumbing::get_query_impl\r\n  42: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  43: rustc_data_structures::stack::ensure_sufficient_stack\r\n  44: rustc_query_system::query::plumbing::force_query_impl\r\n  69: rustc_interface::passes::QueryContext::enter\r\n  45: rustc_middle::ty::query::force_from_dep_node\r\n  70: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  46: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  71: rustc_span::with_source_map\r\n  47: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  72: rustc_interface::interface::create_compiler_and_run\r\n  48: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  49: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_previous_green\r\n  73: scoped_tls::ScopedKey<T>::set\r\n  50: rustc_query_system::dep_graph::graph::DepGraph<K>::try_mark_green_and_read\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n  51: rustc_data_structures::stack::ensure_sufficient_stack\r\n  52: rustc_query_system::query::plumbing::get_query_impl\r\n\r\n  53: rustc_typeck::check::check::check_item_type\r\n  54: rustc_typeck::check::check::check_mod_item_types\r\nerror: internal compiler error: unexpected panic\r\n  55: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_mod_item_types>::compute\r\n\r\n  56: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  57: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  58: rustc_data_structures::stack::ensure_sufficient_stack\r\n  59: rustc_query_system::query::plumbing::get_query_impl\r\n  60: rustc_query_system::query::plumbing::ensure_query_impl\r\n  61: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  62: rustc_typeck::check_crate\r\n  63: rustc_interface::passes::analysis\r\n  64: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  65: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  66: rustc_query_system::dep_graph::graph::DepGraph<K>::with_eval_always_task\r\n  67: rustc_data_structures::stack::ensure_sufficient_stack\r\n  68: rustc_query_system::query::plumbing::get_query_impl\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n  69: rustc_interface::passes::QueryContext::enter\r\n  70: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  71: rustc_span::with_source_map\r\n  72: rustc_interface::interface::create_compiler_and_run\r\n  73: scoped_tls::ScopedKey<T>::set\r\n\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (d32c320d7 2020-12-10) running on x86_64-unknown-linux-gnu\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\nnote: rustc 1.50.0-nightly (d32c320d7 2020-12-10) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [dropck_outlives] computing dropck types for `Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing }, value: std::vec::Vec<async_channel::Receiver<&str>> } }`\r\n#1 [typeck] type-checking `run`\r\n#2 [mir_built] building MIR for `run`\r\n#3 [unsafety_check_result] unsafety-checking `run`\r\n#4 [type_of] computing type of `run::{opaque#0}`\r\n#5 [check_mod_item_types] checking item types in top-level module\r\n#6 [analysis] running analysis passes on this crate\r\nend of query stack\r\n#0 [dropck_outlives] computing dropck types for `Canonical { max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing }, value: std::vec::Vec<async_channel::Receiver<&str>> } }`\r\n#1 [typeck] type-checking `run`\r\n#2 [mir_built] building MIR for `run`\r\n#3 [unsafety_check_result] unsafety-checking `run`\r\n#4 [type_of] computing type of `run::{opaque#0}`\r\n#5 [check_mod_item_types] checking item types in top-level module\r\n#6 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "GopherJ", "id": 33961674, "node_id": "MDQ6VXNlcjMzOTYxNjc0", "avatar_url": "https://avatars.githubusercontent.com/u/33961674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GopherJ", "html_url": "https://github.com/GopherJ", "followers_url": "https://api.github.com/users/GopherJ/followers", "following_url": "https://api.github.com/users/GopherJ/following{/other_user}", "gists_url": "https://api.github.com/users/GopherJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/GopherJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GopherJ/subscriptions", "organizations_url": "https://api.github.com/users/GopherJ/orgs", "repos_url": "https://api.github.com/users/GopherJ/repos", "events_url": "https://api.github.com/users/GopherJ/events{/privacy}", "received_events_url": "https://api.github.com/users/GopherJ/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80151/timeline", "performed_via_github_app": null, "state_reason": "completed"}