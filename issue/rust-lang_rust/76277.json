{"url": "https://api.github.com/repos/rust-lang/rust/issues/76277", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76277/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76277/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76277/events", "html_url": "https://github.com/rust-lang/rust/issues/76277", "id": 691748592, "node_id": "MDU6SXNzdWU2OTE3NDg1OTI=", "number": 76277, "title": "ICE: resolve_instance: AssocItem not found", "user": {"login": "jbakker-atmind", "id": 69954752, "node_id": "MDQ6VXNlcjY5OTU0NzUy", "avatar_url": "https://avatars.githubusercontent.com/u/69954752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbakker-atmind", "html_url": "https://github.com/jbakker-atmind", "followers_url": "https://api.github.com/users/jbakker-atmind/followers", "following_url": "https://api.github.com/users/jbakker-atmind/following{/other_user}", "gists_url": "https://api.github.com/users/jbakker-atmind/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbakker-atmind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbakker-atmind/subscriptions", "organizations_url": "https://api.github.com/users/jbakker-atmind/orgs", "repos_url": "https://api.github.com/users/jbakker-atmind/repos", "events_url": "https://api.github.com/users/jbakker-atmind/events{/privacy}", "received_events_url": "https://api.github.com/users/jbakker-atmind/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-09-03T08:12:27Z", "updated_at": "2020-09-03T18:13:45Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nthe last month I got a compiler error, what I wasn't able to work around. I tried to create a minimal verifiable example, but was not able to isolate it. It seems to fail in 'to_markup_when_not_zero' and sometimes 'to_estimated_string'. I can reliable reproduce this error on my code base. I can provide more details if needed.\r\n\r\nMy current fallback is to use `nightly-2020-07-01` If desired I can narrow it down.\r\n\r\nThank you for your effort!\r\n\r\n### Code\r\n\r\n\r\n```Rust\r\nuse maud::Markup;\r\nuse std::time::Duration;\r\nuse time::Timespec;\r\n\r\npub type Credit = i64;\r\npub const CREDITS_PER_SECOND: Credit = 100;\r\n\r\npub trait CreditTrait {\r\n    fn as_duration(&self) -> time::Duration;\r\n    fn to_markup_when_not_zero(&self) -> Markup {\r\n        let duration = self.as_duration();\r\n        let mut total_secs = duration.num_seconds();\r\n        if total_secs > 0 {\r\n            let num_hours = total_secs / 3600;\r\n            total_secs -= num_hours * 3600;\r\n            let num_minutes = total_secs / 60;\r\n            let num_seconds = total_secs - num_minutes * 60;\r\n            html! {\r\n                (format!(\"{:02}h:{:02}m:{:02}s\", num_hours, num_minutes, num_seconds))\r\n            }\r\n        } else {\r\n            html! {}\r\n        }\r\n    }\r\n    fn to_estimated_string(&self) -> String {\r\n        let duration = self.as_duration();\r\n        let mut total_secs = duration.num_seconds();\r\n        let mut result = String::default();\r\n        if total_secs > 0 {\r\n            let num_hours = total_secs / 3600;\r\n            total_secs -= num_hours * 3600;\r\n            let num_minutes = total_secs / 60;\r\n            if num_hours > 1 {\r\n                result = format!(\"Over {:} hours\", num_hours);\r\n            } else if num_hours == 1 {\r\n                result = format!(\"Over {:} hour\", num_hours);\r\n            } else if num_minutes > 0 {\r\n                result = format!(\"{:} minutes\", num_minutes + 1)\r\n            } else {\r\n                result = \"Less than a minute\".to_string();\r\n            }\r\n        }\r\n        result\r\n    }\r\n    fn to_markup_estimated(&self) -> Markup {\r\n        let result = self.to_estimated_string();\r\n        html! {(result)}\r\n    }\r\n    fn to_markup(&self) -> Markup {\r\n        let duration = self.as_duration();\r\n        let mut total_secs = duration.num_seconds();\r\n        let num_hours = total_secs / 3600;\r\n        total_secs -= num_hours * 3600;\r\n        let num_minutes = total_secs / 60;\r\n        let num_seconds = total_secs - num_minutes * 60;\r\n        html! {\r\n            (format!(\"{:02}h:{:02}m:{:02}s\", num_hours, num_minutes, num_seconds))\r\n        }\r\n    }\r\n    fn from_std_duration(duration: &Duration) -> Self;\r\n}\r\n\r\nimpl CreditTrait for Credit {\r\n    fn as_duration(&self) -> time::Duration {\r\n        let c_f32 = *self as f32;\r\n        let seconds_f32 = c_f32 / CREDITS_PER_SECOND as f32;\r\n        let m = (seconds_f32 * 1000.0) as i64;\r\n        time::Duration::milliseconds(m)\r\n    }\r\n    fn from_std_duration(duration: &Duration) -> Self {\r\n        let seconds = duration.as_secs() as i64;\r\n        // TODO: add subseconds...\r\n        seconds * CREDITS_PER_SECOND\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.48.0-nightly (d006f5734 2020-08-28)\r\nbinary: rustc\r\ncommit-hash: d006f5734f49625c34d6fc33bf6b9967243abca8\r\ncommit-date: 2020-08-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_ty/instance.rs:136:21: AssocItem { def_id: DefId(223:1904 ~ polargrid_server_shared[5de3]::models[0]::credit_change[0]::CreditTrait[0]::to_markup_estimated[0]::Render[0]::__maud_render_to[0]), ident: __maud_render_to#2959, kind: Fn, vis: Restricted(DefId(223:136 ~ polargrid_server_shared[5de3]::models[0]::credit_change[0])), defaultness: Default { has_value: true }, container: TraitContainer(DefId(223:1903 ~ polargrid_server_shared[5de3]::models[0]::credit_change[0]::CreditTrait[0]::to_markup_estimated[0]::Render[0])), fn_has_self_parameter: true } not found in DefId(223:1905 ~ polargrid_server_shared[5de3]::models[0]::credit_change[0]::CreditTrait[0]::to_markup_estimated[0]::{{impl}}[0])\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:918:9\r\nstack backtrace:\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.48.0-nightly (d006f5734 2020-08-28) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n0 [resolve_instance] resolving instance `<std::string::String as polargrid_server_shared::models::CreditTrait::to_markup_estimated::Render>::__maud_render_to`\r\n1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_ty::instance::resolve_associated_item::{{closure}}\r\n   9: rustc_ty::instance::inner_resolve_instance\r\n  10: rustc_ty::instance::resolve_instance\r\n  11: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::resolve_instance>::compute\r\n  12: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  13: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  14: rustc_data_structures::stack::ensure_sufficient_stack\r\n  15: rustc_query_system::query::plumbing::get_query_impl\r\n  16: rustc_middle::ty::instance::Instance::resolve_opt_const_arg\r\n  17: rustc_middle::ty::instance::Instance::resolve\r\n  18: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator\r\n  19: rustc_mir::monomorphize::collector::collect_neighbours\r\n  20: rustc_mir::monomorphize::collector::collect_items_rec\r\n  21: rustc_mir::monomorphize::collector::collect_items_rec\r\n  22: rustc_mir::monomorphize::collector::collect_items_rec\r\n  23: rustc_mir::monomorphize::collector::collect_items_rec\r\n  24: rustc_mir::monomorphize::collector::collect_items_rec\r\n  25: rustc_mir::monomorphize::collector::collect_items_rec\r\n  26: rustc_mir::monomorphize::collector::collect_items_rec\r\n  27: rustc_mir::monomorphize::collector::collect_items_rec\r\n  28: rustc_mir::monomorphize::collector::collect_items_rec\r\n  29: rustc_mir::monomorphize::collector::collect_items_rec\r\n  30: rustc_mir::monomorphize::collector::collect_items_rec\r\n  31: rustc_mir::monomorphize::collector::collect_items_rec\r\n  32: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  33: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  34: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  35: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  36: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  37: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  38: rustc_data_structures::stack::ensure_sufficient_stack\r\n  39: rustc_query_system::query::plumbing::get_query_impl\r\n  40: rustc_codegen_ssa::base::codegen_crate\r\n  41: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  42: rustc_interface::passes::QueryContext::enter\r\n  43: rustc_interface::queries::Queries::ongoing_codegen\r\n  44: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  45: rustc_span::with_source_map\r\n  46: rustc_interface::interface::create_compiler_and_run\r\n  47: scoped_tls::ScopedKey<T>::set\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76277/timeline", "performed_via_github_app": null, "state_reason": null}