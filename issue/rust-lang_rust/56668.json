{"url": "https://api.github.com/repos/rust-lang/rust/issues/56668", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56668/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56668/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56668/events", "html_url": "https://github.com/rust-lang/rust/issues/56668", "id": 389196697, "node_id": "MDU6SXNzdWUzODkxOTY2OTc=", "number": 56668, "title": "Extending `?` macro repetition to Rust 2015", "user": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-10T08:49:41Z", "updated_at": "2019-06-09T07:48:27Z", "closed_at": "2019-06-09T07:48:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We recently stabilized the `?` macro repeater \"operator\" proposed by @mark-i-m for Rust 2018 and it will be in Rust 1.32.\r\n\r\nThe original https://github.com/rust-lang/rfcs/pull/2298 did not say anything about using edition dependent behavior; this was instead decided upon with an FCP in https://github.com/rust-lang/rust/issues/51934. This was done after a crater run in https://github.com/rust-lang/rust/pull/49719#issuecomment-381364742 that was green and showed 0 regressions.\r\n\r\nAfter accepting the edition dependent change, @petrochenkov noted in https://github.com/rust-lang/rust/issues/51934#issuecomment-402537350 that:\r\n> As you can see in #51587 the edition-specific logic is much worse than previously implemented fallback.\r\n\r\nHowever, in https://github.com/rust-lang/rust/issues/53668, there was a similar situation of a syntactic change for non-soundness reasons that was theoretically breaking but in practice not. In that case, @rust-lang/lang decided to accept the change for Rust 2015 and 2018 in an effort to minimize technical debt.\r\n\r\nIn #53668 @petrochenkov noted that (https://github.com/rust-lang/rust/issues/53668#issuecomment-423144713):\r\n\r\n>  Changes with negligible effects on contrived code are done very regularly, it's just nobody notices them.\r\n\r\nIn https://github.com/rust-lang/rust/issues/53668#issuecomment-423319580, @nikomatsakis then expanded upon the practical way in which we interpret breaking changes.\r\n\r\nIf I recall correctly, in a language team meeting not too long ago, it was suggested that we might want to reverse our decision and extend `?` as a macro repetition \"operator\" in Rust 2015 as well. I think personally that it would be advisable; in particular, if we do so, we can avoid the technical debt in the compiler, the debt in the spec, but first and foremost, we can avoid the distinction that users must learn. Ultimately I think this is of greater practical benefit than the theoretical breakage that it would be according to crater.\r\n\r\nTherefore I'd like to use this issue to propose an extension of `?` as a macro repetition \"operator\" to Rust 2015.\r\n\r\n@mark-i-m  noted that they would rather not have to change the implementation again so I will not ask them to; but I'm sure someone else might want to tackle it (e.g. @petrochenkov since they were one of the first proponents of keeping it in Rust 2015 or @alexreg since they concurred with @petrochenkov).\r\n\r\nThoughts?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56668/reactions", "total_count": 3, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56668/timeline", "performed_via_github_app": null, "state_reason": "completed"}