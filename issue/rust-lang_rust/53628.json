{"url": "https://api.github.com/repos/rust-lang/rust/issues/53628", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53628/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53628/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53628/events", "html_url": "https://github.com/rust-lang/rust/issues/53628", "id": 353273662, "node_id": "MDU6SXNzdWUzNTMyNzM2NjI=", "number": 53628, "title": "Bad suggestion for overflowing hex literal in signed operation", "user": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-23T08:20:10Z", "updated_at": "2023-02-23T04:52:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Code:\r\n```rust\r\npub fn flip_msb(a: i32) -> i32 {\r\n    a ^ 0x8000_0000\r\n}\r\n```\r\nDiagnostic:\r\n```\r\nwarning: literal out of range for i32\r\n --> src/lib.rs:2:9\r\n  |\r\n2 |     a ^ 0x8000_0000\r\n  |         ^^^^^^^^^^^\r\n  |\r\n  = note: #[warn(overflowing_literals)] on by default\r\n  = note: the literal `0x8000_0000` (decimal `2147483648`) does not fit into an `i32` and will become `-2147483648i32`\r\n  = help: consider using `u32` instead\r\n```\r\nIn this case using `u32` is not an option (you could use a `u32` literal and cast to `i32`, but that's not ideal). A better suggestion in this case would be to use `-0x8000_0000` instead.\r\n\r\nThis issue is, I think, more relevant to hex (or other non-decimal) representations, as for example `format!(\"{:#x}\", i32::MIN)` would produce `0x80000000`, which could lead someone to think that that is a valid warning-free `i32` literal.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53628/timeline", "performed_via_github_app": null, "state_reason": null}