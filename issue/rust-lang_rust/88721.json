{"url": "https://api.github.com/repos/rust-lang/rust/issues/88721", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88721/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88721/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88721/events", "html_url": "https://github.com/rust-lang/rust/issues/88721", "id": 989996170, "node_id": "MDU6SXNzdWU5ODk5OTYxNzA=", "number": 88721, "title": "Compiler apparently generates incorrect PDB's", "user": {"login": "tim-weis", "id": 23303506, "node_id": "MDQ6VXNlcjIzMzAzNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/23303506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-weis", "html_url": "https://github.com/tim-weis", "followers_url": "https://api.github.com/users/tim-weis/followers", "following_url": "https://api.github.com/users/tim-weis/following{/other_user}", "gists_url": "https://api.github.com/users/tim-weis/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-weis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-weis/subscriptions", "organizations_url": "https://api.github.com/users/tim-weis/orgs", "repos_url": "https://api.github.com/users/tim-weis/repos", "events_url": "https://api.github.com/users/tim-weis/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-weis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 266005765, "node_id": "MDU6TGFiZWwyNjYwMDU3NjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows-msvc", "name": "O-windows-msvc", "color": "6e6ec0", "default": false, "description": "Toolchain: MSVC, Operating system: Windows"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2021-09-07T13:38:40Z", "updated_at": "2022-05-17T19:52:15Z", "closed_at": "2021-10-07T00:07:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to analyze the performance of a piece of Rust code on Windows. To do so I need to instrument the compiled binary using the [VSInstr](https://docs.microsoft.com/en-us/visualstudio/profiling/vsinstr) tool. However, that fails due to, as far as I understand, an incorrect PDB<sup>1</sup>.\r\n\r\nThe following code illustrates the issue (starting from a default generated `cargo new --bin sample` crate):\r\n\r\nmain.rs\r\n```rust\r\nfn main() {}\r\n```\r\n\r\nCargo.toml (add the following):\r\n```toml\r\n[profile.release]\r\ndebug = true\r\n```\r\n\r\n.config/cargo (required to pass linker flags):\r\n```toml\r\n[build]\r\nrustflags = [\"-C\", \"link-args=/PROFILE\"]\r\n```\r\n\r\nCompiling this using `cargo build --release` creates both *sample.exe* as well as *sample.pdb* in the output directory. Executing `vsinstr sample.exe` in the output directory should create an instrumented binary (*sample.exe*) as well as back up the original binary to *sample.exe.orig*.\r\n\r\nInstead, the *VSInstr* tool fails to execute with an error message (`Error VSP1033: The file '...\\sample.exe' does not contain a recognized executable image.`). The binary (*sample.exe*) doesn't get instrumented nor is a backup created.\r\n\r\nRunning the *vsinstr.legacy.exe* tool instead produces a fair bit more diagnostic output. All reported issues are of the shape `Warning VSP2005: Internal instrumentation warning: Block start at 140001519 is inside instruction at 140001518. Removed.` For every report, the first address is exactly one higher than the second.\r\n\r\nLoading the binary into a debugger (WinDbg) I confirmed that all instruction start addresses reported are correct. In case it matters, the actual instructions are either 2 or 4 bytes long.\r\n\r\nUnfortunately, I'm not aware of any tools that would allow me to inspect the PDB files, to gather additional information. From what I see it appears that the PDB's generated are (partially anyway) incorrect, although I neither know precisely how PDB's are generated, nor at which part things go wrong.\r\n\r\n### Meta\r\n\r\nThe issue can be reproduced using the `i686-pc-windows-msvc` and the `x86_64-pc-windows-msvc` toolchains. (I haven't verified the issue using the beta nor nightly channels, nor have I tried any other architectures).\r\n\r\nThe issue has been reproduced using the *VSInstr* tool that ships with VS 2017 as well as VS 2019.\r\n\r\n---\r\n\r\n<sup>1</sup> Since I don't know exactly what's causing the issue, I also [filed a bug report](https://developercommunity.visualstudio.com/t/vsinstrexe-fails-with-vsp1033-when-trying-to-instr/1521814) with the vendor of the *VSInstr* tool.", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88721/timeline", "performed_via_github_app": null, "state_reason": "completed"}