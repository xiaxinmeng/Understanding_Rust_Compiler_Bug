{"url": "https://api.github.com/repos/rust-lang/rust/issues/65330", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65330/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65330/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65330/events", "html_url": "https://github.com/rust-lang/rust/issues/65330", "id": 506169547, "node_id": "MDU6SXNzdWU1MDYxNjk1NDc=", "number": 65330, "title": "rustdoc: Prefixing parent modules to distinguish between items in cases where item names would otherwise be ambiguous", "user": {"login": "mitchmindtree", "id": 4587373, "node_id": "MDQ6VXNlcjQ1ODczNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4587373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitchmindtree", "html_url": "https://github.com/mitchmindtree", "followers_url": "https://api.github.com/users/mitchmindtree/followers", "following_url": "https://api.github.com/users/mitchmindtree/following{/other_user}", "gists_url": "https://api.github.com/users/mitchmindtree/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitchmindtree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitchmindtree/subscriptions", "organizations_url": "https://api.github.com/users/mitchmindtree/orgs", "repos_url": "https://api.github.com/users/mitchmindtree/repos", "events_url": "https://api.github.com/users/mitchmindtree/events{/privacy}", "received_events_url": "https://api.github.com/users/mitchmindtree/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-12T10:40:02Z", "updated_at": "2020-08-27T03:37:31Z", "closed_at": "2020-08-27T03:37:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Motivation\r\n\r\nI often run into an issue when reading through rendered documentation where many types exist with the same name and it is unclear which type is being referred to in a function signature or type declaration.\r\n\r\nTwo simple, common examples of this are the `Result` and `Error` types. When displayed within a type declaration or function signature, the reader is unable to tell at a glance what `Result` or `Error` type is being referred to, and is forced to either click to the type or hover over the type and examine the link, both of which can be a significant hindrance when reading through large amounts of documentation. Here's an example of an ambiguous error type within a type declaration:\r\n\r\n![Screenshot from 2019-10-12 12-10-28](https://user-images.githubusercontent.com/4587373/66699770-ccdbc200-ece9-11e9-88bc-d5554e228871.png)\r\n\r\nHere, unless you are already familiar with the crate, it is difficult to know exactly what `Error` type the type declaration refers to, as it is convention for crates (and often sub-modules) to define unique `Error` types. We can't know for sure without clicking on the `Error` type and checking exactly which one is being referred to. The same issue applies to ambiguous item names that appear in function signatures and struct fields.\r\n\r\n`Result` and `Error` are just two examples of many. For example, in math and gaming libraries, the same issues apply to types like `Point`, `Vector` and `Matrix`, and are especially confusing when using e.g. one physics library with one graphics library, or a tessellation library alongside another math library - it is impossible to know for sure exactly what type the documentation refers to without clicking through and interrupting the flow of doc perusal.\r\n\r\n## Potential Solution\r\n\r\nOne potential solution that comes to mind might be to prefix these potentially ambiugous types with their parent module in the rendered docs. E.g. in the error case above, the rendered doc might look more like this:\r\n```rust\r\ntype Fallible<T> = Result<T, failure::Error>;\r\n```\r\nIn this case, we know that there is at least one other type within this crate or its dependencies with the same name (`std::io::Error`) - in order to remove ambiguity, the `Error` type is prefixed with its parent module `failure`, so that it is clear which is being referred to.\r\n\r\nKeeping in mind I am unfamiliar with rustdoc internals, I wonder if this can be achieved by keeping a map from item names to whether or not they occur more than once during the documentation process. For all items that occur more than once in the crate or its dependency graph, their parent modules are prefixed to the item name until the ambiguity is resolved?\r\n\r\n---\r\n\r\nJust thought I'd share this while it's on my mind in case anyone else has come across a similar desire! I searched past issues briefly but was unable to find this raised elsewhere - feel free to close this in favour of an existing issue if one already exists!", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65330/timeline", "performed_via_github_app": null, "state_reason": "completed"}