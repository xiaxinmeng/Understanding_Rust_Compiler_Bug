{"url": "https://api.github.com/repos/rust-lang/rust/issues/104787", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104787/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104787/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104787/events", "html_url": "https://github.com/rust-lang/rust/issues/104787", "id": 1462194906, "node_id": "I_kwDOAAsO6M5XJ1La", "number": 104787, "title": "ICE `const variables should not be hashed: Var(_#0c)` inside async context on nightly", "user": {"login": "matheus-consoli", "id": 27595790, "node_id": "MDQ6VXNlcjI3NTk1Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/27595790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matheus-consoli", "html_url": "https://github.com/matheus-consoli", "followers_url": "https://api.github.com/users/matheus-consoli/followers", "following_url": "https://api.github.com/users/matheus-consoli/following{/other_user}", "gists_url": "https://api.github.com/users/matheus-consoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/matheus-consoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matheus-consoli/subscriptions", "organizations_url": "https://api.github.com/users/matheus-consoli/orgs", "repos_url": "https://api.github.com/users/matheus-consoli/repos", "events_url": "https://api.github.com/users/matheus-consoli/events{/privacy}", "received_events_url": "https://api.github.com/users/matheus-consoli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-11-23T18:09:37Z", "updated_at": "2022-11-26T21:10:46Z", "closed_at": "2022-11-26T21:10:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nI think the problem here is derived from rustc not knowing the array length. I'm using [`futures-concurrency`](https://github.com/yoshuawuyts/futures-concurrency/) crate to `.await` an array of streams, `merge()` returns a `Merge<S, const N: usize>` struct, but the `N` is not known at this point because we don't limit the `array::from_fn`.\r\n\r\n```Rust\r\nuse core::array;\r\n\r\nuse futures_concurrency::prelude::*;\r\nuse futures_lite::{future::block_on, stream, StreamExt};\r\n\r\nfn main() {\r\n    block_on(async {\r\n        // works, the array length is known\r\n        // let s = from_fn::<_, 5, _>(stream::once)\r\n        let s = array::from_fn(stream::once)\r\n            .merge()\r\n            .fold(0, |acc, n| acc + n)\r\n            .await;\r\n\r\n        assert_eq!(10, s);\r\n    });\r\n}\r\n```\r\n\r\nthis is much like\r\n\r\n```rust\r\narray::from_fn(identity).collect();\r\n```\r\nexcept that the latter doesn't panic, and gives a helpful error message.\r\n\r\nAlso, this seems to only occur within an async context.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n>> rustc --version --verbose\r\nrustc 1.67.0-nightly (ff8c8dfbe 2022-11-22)\r\nbinary: rustc\r\ncommit-hash: ff8c8dfbe66701531e3e5e335c28c544d0fbc945\r\ncommit-date: 2022-11-22\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.0-nightly\r\nLLVM version: 15.0.4\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n>> RUST_BACKTRACE=1 cargo r\r\n   Compiling f v0.1.0 (/home/consoli/projects/rust/contrib/f)\r\nerror[E0282]: type annotations needed\r\n  --> src/main.rs:11:14\r\n   |\r\n11 |             .merge()\r\n   |              ^^^^^\r\n   |\r\nhelp: try using a fully qualified path to specify the expected types\r\n   |\r\n10 |         let s = <[futures_lite::stream::Once<usize>; _] as futures_concurrency::stream::Merge>::merge(from_fn(stream::once))\r\n   |                 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++                     ~\r\n\r\nthread '<unnamed>' panicked at 'const variables should not be hashed: Var(_#0c)', /rustc/ff8c8dfbe66701531e3e5e335c28c544d0fbc945/compiler/rustc_middle/src/ty/consts/kind.rs:122:35\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread '<unnamed>' panicked at 'const variables should not be hashed: Var(_#0c)', /rustc/ff8c8dfbe66701531e3e5e335c28c544d0fbc945/compiler/rustc_middle/src/ty/consts/kind.rs:122:35\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/ff8c8dfbe66701531e3e5e335c28c544d0fbc945/library/std/src/panicking.rs:575:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/ff8c8dfbe66701531e3e5e335c28c544d0fbc945/library/core/src/panicking.rs:65:14\r\n   2: <rustc_middle::ty::consts::kind::InferConst as rustc_data_structures::stable_hasher::HashStable<rustc_query_system::ich::hcx::StableHashingContext>>::hash_stable\r\n   3: <rustc_data_structures::intern::Interned<rustc_data_structures::intern::WithStableHash<rustc_middle::ty::TyS>> as rustc_data_structures::stable_hasher::HashStable<rustc_query_system::ich::hcx::StableHashingContext>>::hash_stable\r\n   4: <[rustc_middle::ty::context::GeneratorInteriorTypeCause] as rustc_data_structures::stable_hasher::HashStable<rustc_query_system::ich::hcx::StableHashingContext>>::hash_stable\r\n   5: rustc_query_system::dep_graph::graph::hash_result::<&rustc_middle::ty::context::TypeckResults>\r\n   6: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n   7: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n   8: rustc_data_structures::sync::par_for_each_in::<&[rustc_span::def_id::LocalDefId], <rustc_middle::hir::map::Map>::par_body_owners<rustc_hir_typeck::typeck_item_bodies::{closure#0}>::{closure#0}>\r\n   9: rustc_hir_typeck::typeck_item_bodies\r\n  10: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), ()>\r\n  11: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), ()>>\r\n  12: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  13: <rustc_session::session::Session>::time::<(), rustc_hir_analysis::check_crate::{closure#7}>\r\n  14: rustc_hir_analysis::check_crate\r\n  15: rustc_interface::passes::analysis\r\n  16: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  17: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorGuaranteed>>>\r\n  18: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  19: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  20: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  21: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}::{closure#1}>\r\n  22: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\nSorry if this isn't a true ICE, the compiler panics, but the usual message \"this is an ICE\" is not shown", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104787/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104787/timeline", "performed_via_github_app": null, "state_reason": "completed"}