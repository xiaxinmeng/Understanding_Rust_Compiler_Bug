{"url": "https://api.github.com/repos/rust-lang/rust/issues/78426", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78426/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78426/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78426/events", "html_url": "https://github.com/rust-lang/rust/issues/78426", "id": 730025617, "node_id": "MDU6SXNzdWU3MzAwMjU2MTc=", "number": 78426, "title": "ICE related to `if let Some(_) = ...`", "user": {"login": "bmgxyz", "id": 9640451, "node_id": "MDQ6VXNlcjk2NDA0NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9640451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmgxyz", "html_url": "https://github.com/bmgxyz", "followers_url": "https://api.github.com/users/bmgxyz/followers", "following_url": "https://api.github.com/users/bmgxyz/following{/other_user}", "gists_url": "https://api.github.com/users/bmgxyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmgxyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmgxyz/subscriptions", "organizations_url": "https://api.github.com/users/bmgxyz/orgs", "repos_url": "https://api.github.com/users/bmgxyz/repos", "events_url": "https://api.github.com/users/bmgxyz/events{/privacy}", "received_events_url": "https://api.github.com/users/bmgxyz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-10-27T01:33:38Z", "updated_at": "2020-10-27T13:02:36Z", "closed_at": "2020-10-27T08:04:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nI encountered this bug while running tests for [this repo](https://github.com/fishinabarrel/linux-kernel-module-rust) under `clang-11`. To do that, I ran\r\n\r\n```\r\n.../linux-kernel-module-rust/tests$ CLANG=clang-11 ./run_tests.py\r\n```\r\n\r\nOn versions starting with `nightly-2020-09-22`, the compiler produces the three errors about `if let Some(_)` shown in the **Error output** section below. I applied the three compiler suggestions, resulting in this diff\r\n\r\n```diff\r\ndiff --git a/src/file_operations.rs b/src/file_operations.rs\r\nindex 1f7d85c..c2ba4b8 100644\r\n--- a/src/file_operations.rs\r\n+++ b/src/file_operations.rs\r\n@@ -144,17 +144,17 @@ impl<T: FileOperations> FileOperationsVtable<T> {\r\n     pub(crate) const VTABLE: bindings::file_operations = bindings::file_operations {\r\n         open: Some(open_callback::<T>),\r\n         release: Some(release_callback::<T>),\r\n-        read: if let Some(_) = T::READ {\r\n+        read: if T::READ.is_some() = T::READ {\r\n             Some(read_callback::<T>)\r\n         } else {\r\n             None\r\n         },\r\n-        write: if let Some(_) = T::WRITE {\r\n+        write: if T::WRITE.is_some() = T::WRITE {\r\n             Some(write_callback::<T>)\r\n         } else {\r\n             None\r\n         },\r\n-        llseek: if let Some(_) = T::SEEK {\r\n+        llseek: if T::SEEK.is_some() = T::SEEK {\r\n             Some(llseek_callback::<T>)\r\n         } else {\r\n             None\r\n```\r\n\r\nwhich upon re-running the tests produced the second error shown below.\r\n\r\nThe original code in part reads\r\n\r\n```Rust\r\n...\r\nimpl<T: FileOperations> FileOperationsVtable<T> {\r\n    pub(crate) const VTABLE: bindings::file_operations = bindings::file_operations {\r\n        open: Some(open_callback::<T>),\r\n        release: Some(release_callback::<T>),\r\n        read: if T::READ.is_some() = T::READ {\r\n            Some(read_callback::<T>)\r\n        } else {\r\n            None\r\n        },\r\n        write: if T::WRITE.is_some() = T::WRITE {\r\n            Some(write_callback::<T>)\r\n        } else {\r\n            None\r\n        },\r\n        llseek: if T::SEEK.is_some() = T::SEEK {\r\n            Some(llseek_callback::<T>)\r\n        } else {\r\n            None\r\n        },\r\n...\r\n```\r\n\r\nI realize that this isn't a minimal example, but I'm not sure what could be causing this bug, so I don't know how to minimize it.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nI'm using `nightly` because [the repo I'm working in requires it](https://github.com/fishinabarrel/linux-kernel-module-rust#system-requirements).\r\n\r\nI tested several different versions to try to isolate when the bug appeared. The earliest example I could find was:\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.48.0-nightly (0e2c1281e 2020-09-07)\r\nbinary: rustc\r\ncommit-hash: 0e2c1281e909ca38479b97962fc9248f75d66412\r\ncommit-date: 2020-09-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\nHowever, the unmodified code above only generates normal (\"external\") compiler errors in versions starting with `nightly-2020-09-22`, as far as I can tell. A different message also appears in versions before `nightly-2020-09-08`.\r\n\r\n### Error output\r\n\r\nThe first error message suggests a fix:\r\n\r\n```\r\nerror: redundant pattern matching, consider using `is_some()`\r\n   --> /home/<user>/<project>/linux-kernel-module-rust/src/file_operations.rs:147:22\r\n    |\r\n147 |         read: if let Some(_) = T::READ {\r\n    |               -------^^^^^^^---------- help: try this: `if T::READ.is_some()`\r\n    |\r\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\r\n\r\nerror: redundant pattern matching, consider using `is_some()`\r\n   --> /home/<user>/<project>/linux-kernel-module-rust/src/file_operations.rs:152:23\r\n    |\r\n152 |         write: if let Some(_) = T::WRITE {\r\n    |                -------^^^^^^^----------- help: try this: `if T::WRITE.is_some()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\r\n\r\nerror: redundant pattern matching, consider using `is_some()`\r\n   --> /home/<user>/<project>/linux-kernel-module-rust/src/file_operations.rs:157:24\r\n    |\r\n157 |         llseek: if let Some(_) = T::SEEK {\r\n    |                 -------^^^^^^^---------- help: try this: `if T::SEEK.is_some()`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\r\n\r\nerror: aborting due to 3 previous errors\r\n\r\nerror: could not compile `linux-kernel-module`\r\n```\r\n\r\nbut when I apply that fix, I get:\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_typeck/src/check/mod.rs:3394:25: while adjusting Expr { hir_id: HirId { owner: DefId(0:141 ~ linux_kernel_module[2b6b]::file_operations[0]::{{impl}}[1]::VTAB\r\nLE[0]), local_id: 42 }, kind: Path(TypeRelative(Ty { hir_id: HirId { owner: DefId(0:141 ~ linux_kernel_module[2b6b]::file_operations[0]::{{impl}}[1]::VTABLE[0]), local_id: 40 }, kind: Path(Resolved(None, \r\nPath { span: /home/<user>/<project>/linux-kernel-module-rust/src/file_operations.rs:147:18: 147:25 (#0), res: Def(TyParam, DefId(0:140 ~ linux_kernel_module[2b6b]::file_operations[0]::{{impl}}[1]::T[0])), s\r\negments: [PathSegment { ident: T#0, hir_id: Some(HirId { owner: DefId(0:141 ~ linux_kernel_module[2b6b]::file_operations[0]::{{impl}}[1]::VTABLE[0]), local_id: 39 }), res: Some(Def(TyParam, DefId(0:140 ~ \r\nlinux_kernel_module[2b6b]::file_operations[0]::{{impl}}[1]::T[0]))), args: None, infer_args: true }] })), span: /home/<user>/<project>/linux-kernel-module-rust/src/file_operations.rs:147:18: 147:25 (#0) }, \r\nPathSegment { ident: READ#0, hir_id: Some(HirId { owner: DefId(0:141 ~ linux_kernel_module[2b6b]::file_operations[0]::{{impl}}[1]::VTABLE[0]), local_id: 41 }), res: Some(Err), args: None, infer_args: true\r\n })), attrs: ThinVec(None), span: /home/<user>/<project>/linux-kernel-module-rust/src/file_operations.rs:147:18: 147:25 (#0) }, can't compose [Borrow(Ref('_#0r, Not)) -> &Option<for<'r, 's, 't0> fn(&'r T, &\r\n's File, &'t0 mut UserSlicePtrWriter, u64) -> core::result::Result<(), error::Error>>] and [Borrow(Ref('_#2r, Not)) -> &Option<for<'r, 's, 't0> fn(&'r T, &'s File, &'t0 mut UserSlicePtrWriter, u64) -> cor\r\ne::result::Result<(), error::Error>>]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:945:9\r\n```\r\n\r\nNote that I have redacted my local username and project name.\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:                                                                                                                                                                                   [39/1895]\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_typeck::check::FnCtxt::apply_adjustments\r\n   9: rustc_typeck::check::method::confirm::ConfirmContext::confirm\r\n  10: rustc_typeck::check::method::<impl rustc_typeck::check::FnCtxt>::lookup_method\r\n  11: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  12: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  13: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  14: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  17: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt>::check_match\r\n  18: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  19: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_coercable_to_type\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  22: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_coercable_to_type\r\n  24: rustc_infer::infer::InferCtxtBuilder::enter\r\n  25: rustc_typeck::check::typeck\r\n  26: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  27: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  28: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  29: rustc_middle::ty::query::plumbing::<impl rustc_query_system::query::QueryContext for rustc_middle::ty::context::TyCtxt>::start_query::{{closure}}::{{closure}}::{{closure}}\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: rustc_query_system::query::plumbing::ensure_query_impl\r\n  32: rustc_typeck::check::typeck_item_bodies\r\n  33: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_item_bodies>::compute\r\n  34: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  35: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  36: rustc_data_structures::stack::ensure_sufficient_stack\r\n  37: rustc_query_system::query::plumbing::get_query_impl\r\n  38: rustc_typeck::check_crate\r\n  39: rustc_interface::passes::analysis\r\n  40: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  41: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  42: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  43: rustc_data_structures::stack::ensure_sufficient_stack\r\n  44: rustc_query_system::query::plumbing::get_query_impl\r\n  45: rustc_interface::passes::QueryContext::enter\r\n  46: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  47: rustc_span::with_source_map\r\n  48: rustc_interface::interface::create_compiler_and_run\r\n  49: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n...\r\nquery stack during panic:\r\n#0 [typeck] type-checking `file_operations::FileOperationsVtable::<T>::VTABLE`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78426/timeline", "performed_via_github_app": null, "state_reason": "completed"}