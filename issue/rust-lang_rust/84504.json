{"url": "https://api.github.com/repos/rust-lang/rust/issues/84504", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84504/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84504/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84504/events", "html_url": "https://github.com/rust-lang/rust/issues/84504", "id": 866689184, "node_id": "MDU6SXNzdWU4NjY2ODkxODQ=", "number": 84504, "title": "When I run `cargo test`, I get an `unexpected panic` error.", "user": {"login": "reud", "id": 31179220, "node_id": "MDQ6VXNlcjMxMTc5MjIw", "avatar_url": "https://avatars.githubusercontent.com/u/31179220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reud", "html_url": "https://github.com/reud", "followers_url": "https://api.github.com/users/reud/followers", "following_url": "https://api.github.com/users/reud/following{/other_user}", "gists_url": "https://api.github.com/users/reud/gists{/gist_id}", "starred_url": "https://api.github.com/users/reud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reud/subscriptions", "organizations_url": "https://api.github.com/users/reud/orgs", "repos_url": "https://api.github.com/users/reud/repos", "events_url": "https://api.github.com/users/reud/events{/privacy}", "received_events_url": "https://api.github.com/users/reud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-24T08:06:09Z", "updated_at": "2021-05-02T00:58:22Z", "closed_at": "2021-05-02T00:58:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI'm a first time Rust user, so I think this code is not good. I apologize for that.\r\n\r\nWhile trying to implement an elliptic curve cryptography library in Rust, I tried to run the code for testing once with `cargo test` and got an `internal compiler error:` and was advised to share the bug report, so here I am sharing it.\r\n\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::fmt::{Display, Formatter};\r\nuse std::fmt;\r\nuse std::ops::{Sub, Add, Mul, Rem, Div};\r\nuse num_traits::{NumOps, Num, One, Zero};\r\n\r\n// Debug\u306e\u81ea\u52d5\u5b9f\u88c5\r\n#[derive(Debug, Copy, Clone)]\r\npub struct FieldElement {\r\n    pub num: u64,\r\n    pub prime: u64\r\n}\r\n\r\n// P.5 \u7df4\u7fd2\u554f\u984c1\r\nimpl PartialEq for FieldElement {\r\n    fn eq(&self, other: &Self) -> bool {\r\n        return self.num == other.num && self.prime == other.prime;\r\n    }\r\n}\r\n\r\nimpl Add for FieldElement {\r\n    type Output = FieldElement;\r\n\r\n    // \u5de6\u5074\u306eprime\u306b\u4f9d\u5b58\u3055\u305b\u308b\u3002\r\n    fn add(self, rhs: FieldElement) -> FieldElement {\r\n        Self::Output{\r\n            prime: self.prime,\r\n            num: (self.num+rhs.num).rem_euclid(self.prime)\r\n        }\r\n    }\r\n}\r\n\r\nimpl Sub for FieldElement {\r\n    type Output = FieldElement;\r\n\r\n    fn sub(self, rhs: FieldElement) -> FieldElement {\r\n        Self::Output{\r\n            prime: self.prime,\r\n            num: ((self.num as i128) - (rhs.num as i128)).rem_euclid(self.prime as i128) as u64\r\n        }\r\n    }\r\n}\r\n\r\nimpl Mul for FieldElement {\r\n    type Output = FieldElement;\r\n\r\n    fn mul(self, rhs: FieldElement) -> FieldElement {\r\n        Self::Output{\r\n            prime: self.prime,\r\n            num: ((self.num as i128) * (rhs.num as i128)).rem_euclid(self.prime as i128) as u64\r\n        }\r\n    }\r\n}\r\n\r\nimpl Rem for FieldElement {\r\n    type Output = FieldElement;\r\n\r\n    fn rem(self, rhs: FieldElement) -> FieldElement {\r\n        Self::Output{\r\n            prime: self.prime,\r\n            num: ((self.num as i128) % (rhs.num as i128)).rem_euclid(self.prime as i128) as u64\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// TODO: \u3069\u3046\u306b\u304b\u3057\u3066\u5b9f\u88c5\u3057\u305f\u3044\u3002\r\nimpl FieldElement {\r\n    fn inner_pow(self,f: FieldElement,exp: u64) -> FieldElement {\r\n        if exp == 0 {\r\n            return FieldElement{\r\n                num: 1,\r\n                prime: f.prime\r\n            }\r\n        }\r\n        if exp % 2 == 0 {\r\n            return self.inner_pow(FieldElement{\r\n                num: (f.num * f.num).rem_euclid(f.prime),\r\n                prime: f.prime,\r\n            },exp / 2);\r\n        }\r\n        f * f.inner_pow(FieldElement{\r\n            num: (f.num * f.num).rem_euclid(f.prime),\r\n            prime: f.prime,\r\n        },(exp-1)/2)\r\n    }\r\n    // rem_euclid\u3092\u4f7f\u3063\u3066\u8ca0\u6570\u3067\u3082\u3088\u3057\u306a\u306b\u6574\u6570\u5024\u306b\u5909\u66f4\u3059\u308b\u3002\r\n    pub fn pow(self, exp: i64) -> FieldElement {\r\n        self.inner_pow(self, exp.rem_euclid((self.prime - 1) as i64) as u64)\r\n    }\r\n\r\n    // \u30d5\u30a7\u30eb\u30de\u30fc\u306e\u5c0f\u5b9a\u7406\u304b\u3089\u30a4\u30f3\u30d0\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u3002 \u4f4d\u6570\u304c\u7d20\u6570\u3067\u7121\u3044\u5834\u5408\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\r\n    pub fn inv(self) -> FieldElement {\r\n        return self.pow((self.prime - 2) as i64)\r\n    }\r\n}\r\n\r\nimpl Div for FieldElement {\r\n    type Output = FieldElement;\r\n\r\n    fn div(self, rhs: Self) -> Self::Output {\r\n        return self * rhs.inv();\r\n    }\r\n}\r\n\r\nimpl Display for FieldElement {\r\n    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {\r\n        write!(f,\"{}\",self.num)\r\n    }\r\n}\r\n\r\npub fn new_field_element(num: i64, prime: u64) -> FieldElement {\r\n    FieldElement{\r\n        num: num.rem_euclid(prime as i64) as u64,\r\n        prime\r\n    }\r\n}\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n    extern crate test;\r\n    use super::*;\r\n\r\n    #[test]\r\n    fn test_field_element_all() {\r\n        {\r\n            let a = new_field_element(7,13);\r\n            let b = new_field_element(6,13);\r\n\r\n            println!(\"{}\",a == b);\r\n            println!(\"{}\",a != b);\r\n\r\n            println!(\"{}\",a == a);\r\n            println!(\"{}\",a != a);\r\n        }\r\n\r\n        // P.9 \u7df4\u7fd2\u554f\u984c2\r\n        {\r\n            println!(\"P.9 Q2\");\r\n            {\r\n                let a = new_field_element(44,57);\r\n                let b = new_field_element(33,57);\r\n                println!(\"{}\",a + b);\r\n            }\r\n            {\r\n                let a = new_field_element(9,57);\r\n                let b = new_field_element(-29,57);\r\n                println!(\"{}\", a + b);\r\n            }\r\n            {\r\n                let a = new_field_element(17,57);\r\n                let b = new_field_element(42,57);\r\n                let c = new_field_element(49,57);\r\n                println!(\"{}\", a + b + c);\r\n            }\r\n            {\r\n                let a = new_field_element(52,57);\r\n                let b = new_field_element(-30,57);\r\n                let c = new_field_element(-38,57);\r\n                println!(\"{}\", a + b + c);\r\n            }\r\n        }\r\n\r\n        // P.10 \u7df4\u7fd2\u554f\u984c3\r\n        {\r\n            println!(\"P.10 Q3\");\r\n            {\r\n                let a = new_field_element(44,57);\r\n                let b = new_field_element(33,57);\r\n                println!(\"{}\",a - b);\r\n            }\r\n            {\r\n                let a = new_field_element(9,57);\r\n                let b = new_field_element(-29,57);\r\n                println!(\"{}\", a - b);\r\n            }\r\n            {\r\n                let a = new_field_element(17,57);\r\n                let b = new_field_element(42,57);\r\n                let c = new_field_element(49,57);\r\n                println!(\"{}\", a + b - c);\r\n            }\r\n            {\r\n                let a = new_field_element(52,57);\r\n                let b = new_field_element(-30,57);\r\n                let c = new_field_element(-38,57);\r\n                println!(\"{}\", a + b - c);\r\n            }\r\n        }\r\n\r\n        // P.11 \u7df4\u7fd2\u554f\u984c4\r\n        {\r\n            println!(\"P.11 Q4\");\r\n            {\r\n                let a = new_field_element(95,97);\r\n                let b = new_field_element(45,97);\r\n                let c = new_field_element(31,97);\r\n                println!(\"{}\",a * b * c);\r\n            }\r\n            {\r\n                let a = new_field_element(17,97);\r\n                let b = new_field_element(13,97);\r\n                let c = new_field_element(19,97);\r\n                let d = new_field_element(44,97);\r\n                println!(\"{}\", a * b * c * d);\r\n            }\r\n            {\r\n                let a = new_field_element(12,97).pow(7);\r\n                let b = new_field_element(77,97).pow(49);\r\n                println!(\"{}\", a * b);\r\n            }\r\n        }\r\n\r\n        // P.11 \u7df4\u7fd2\u554f\u984c5\r\n        {\r\n            println!(\"P.11 Q5\");\r\n            let solver = |k: i32|{\r\n                print!(\"k = {{\");\r\n                for i in 0..19 {\r\n                    let f = new_field_element((i * k) as i64, 19);\r\n                    print!(\" {},\",f)\r\n                }\r\n                print!(\"}} \\n\");\r\n            };\r\n            solver(1);\r\n            solver(3);\r\n            solver(7);\r\n            solver(17);\r\n            solver(18);\r\n        }\r\n\r\n        // P.12 \u7df4\u7fd2\u554f\u984c6\r\n        {\r\n            println!(\"P.12 Q6\");\r\n            let f = new_field_element((7 * 7),31);\r\n            println!(\"F31 7 * 7 = {}\",f)\r\n        }\r\n\r\n        // P.13 \u7df4\u7fd2\u554f\u984c7\r\n        {\r\n            println!(\"P.13 Q7\");\r\n            let solver = |k: i32|{\r\n                print!(\"k = {} {{\",k);\r\n                for i in 0..k-1 {\r\n                    let f = new_field_element((i + 1) as i64, k as u64);\r\n                    print!(\" {},\",f.pow((k - 1) as i64))\r\n                }\r\n                print!(\"}} \\n\");\r\n            };\r\n\r\n            solver(7);\r\n            solver(11);\r\n            solver(17);\r\n            solver(31);\r\n        }\r\n\r\n        // P.16 \u7df4\u7fd2\u554f\u984c8\r\n        {\r\n            println!(\"P.16 \u7df4\u7fd2\u554f\u984c\");\r\n            {\r\n                let l = new_field_element(3,31);\r\n                let r = new_field_element(24,31);\r\n                println!(\"F31 3/24 = {}\",l/r);\r\n            }\r\n            {\r\n                let l = new_field_element(17,31);\r\n                println!(\"F31 17^(-3) = {}\",l.pow(-3));\r\n            }\r\n            {\r\n                let l = new_field_element(4,31);\r\n                println!(\"F31 4^(-4) * 11 = {}\",l.pow(-4) * new_field_element(11,31));\r\n            }\r\n        }\r\n\r\n        // P.16 \u7df4\u7fd2\u554f\u984c9\r\n        {\r\n            {\r\n                let l = new_field_element(3,31);\r\n                let r = new_field_element(24,31);\r\n                println!(\"F31 3/24 = {}\",l/r);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (bb491ed23 2021-04-23)\r\nbinary: rustc\r\ncommit-hash: bb491ed23937aef876622e4beb68ae95938b3bf9\r\ncommit-date: 2021-04-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Some(Fingerprint(8556428269209080887, 4269101851060977991))`,\r\n right: `Some(Fingerprint(14469595183014616750, 10866501170494209091))`: found unstable fingerprints for predicates_of(core[ec89]::cmp::PartialEq): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::cmp::PartialEq<Rhs>>), []), /home/reud/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/cmp.rs:202:1: 202:40 (#0))] }', /rustc/bb491ed23937aef876622e4beb68ae95938b3bf9/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (bb491ed23 2021-04-23) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::cmp::PartialEq`\r\n#1 [typeck] type-checking `ecc::field_element::tests::test_field_element_all`\r\nend of query stack\r\nwarning: 5 warnings emitted\r\n\r\nerror: could not compile `pg-bitcoin`\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Some(Fingerprint(8556428269209080887, 4269101851060977991))`,\r\n right: `Some(Fingerprint(14469595183014616750, 10866501170494209091))`: found unstable fingerprints for predicates_of(core[ec89]::cmp::PartialEq): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::cmp::PartialEq<Rhs>>), []), /home/reud/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/cmp.rs:202:1: 202:40 (#0))] }', /rustc/bb491ed23937aef876622e4beb68ae95938b3bf9/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/bb491ed23937aef876622e4beb68ae95938b3bf9/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/bb491ed23937aef876622e4beb68ae95938b3bf9/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::assert_failed_inner\r\n   3: core::panicking::assert_failed\r\n   4: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   5: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   6: rustc_query_system::query::plumbing::get_query_impl\r\n   7: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::predicates_of\r\n   8: rustc_middle::ty::generics::GenericPredicates::instantiate_into\r\n   9: rustc_middle::ty::generics::GenericPredicates::instantiate\r\n  10: rustc_typeck::check::method::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_method_in_trait\r\n  11: rustc_typeck::check::op::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_op_method\r\n  12: rustc_typeck::check::op::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_overloaded_binop\r\n  13: rustc_typeck::check::op::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_binop\r\n  14: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  17: <smallvec::SmallVec<A> as core::iter::traits::collect::Extend<<A as smallvec::Array>::Item>>::extend\r\n  18: <T as rustc_middle::ty::context::InternIteratorElement<T,R>>::intern_with\r\n  19: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  21: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::demand_scrutinee_type\r\n  22: rustc_typeck::check::_match::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_match\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  24: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  25: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  26: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  27: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  28: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  29: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  30: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  31: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  32: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_argument_types\r\n  33: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::confirm_builtin_call\r\n  34: rustc_typeck::check::callee::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_call\r\n  35: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  36: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  37: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  38: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  39: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  40: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  41: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  42: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  43: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  44: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  45: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  46: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  47: rustc_typeck::check::check::check_fn\r\n  48: rustc_infer::infer::InferCtxtBuilder::enter\r\n  49: rustc_typeck::check::typeck\r\n  50: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  51: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  52: rustc_data_structures::stack::ensure_sufficient_stack\r\n  53: rustc_query_system::query::plumbing::force_query_with_job\r\n  54: rustc_query_system::query::plumbing::get_query_impl\r\n  55: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  56: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  57: rustc_typeck::check::typeck_item_bodies\r\n  58: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  59: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  60: rustc_data_structures::stack::ensure_sufficient_stack\r\n  61: rustc_query_system::query::plumbing::force_query_with_job\r\n  62: rustc_query_system::query::plumbing::get_query_impl\r\n  63: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  64: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  65: rustc_typeck::check_crate\r\n  66: rustc_interface::passes::analysis\r\n  67: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  68: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  69: rustc_data_structures::stack::ensure_sufficient_stack\r\n  70: rustc_query_system::query::plumbing::force_query_with_job\r\n  71: rustc_query_system::query::plumbing::get_query_impl\r\n  72: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  73: rustc_interface::passes::QueryContext::enter\r\n  74: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  75: rustc_span::with_source_map\r\n  76: rustc_interface::interface::create_compiler_and_run\r\n  77: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (bb491ed23 2021-04-23) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::cmp::PartialEq`\r\n#1 [typeck] type-checking `ecc::field_element::tests::test_field_element_all`\r\n#2 [typeck_item_bodies] type-checking all item bodies\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nwarning: 5 warnings emitted\r\n\r\nerror: could not compile `pg-bitcoin`\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84504/timeline", "performed_via_github_app": null, "state_reason": "completed"}