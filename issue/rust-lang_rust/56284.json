{"url": "https://api.github.com/repos/rust-lang/rust/issues/56284", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56284/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56284/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56284/events", "html_url": "https://github.com/rust-lang/rust/issues/56284", "id": 384849334, "node_id": "MDU6SXNzdWUzODQ4NDkzMzQ=", "number": 56284, "title": "help, pass closure variable to Ref::map function failed ", "user": {"login": "code-brewer", "id": 9084210, "node_id": "MDQ6VXNlcjkwODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/9084210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/code-brewer", "html_url": "https://github.com/code-brewer", "followers_url": "https://api.github.com/users/code-brewer/followers", "following_url": "https://api.github.com/users/code-brewer/following{/other_user}", "gists_url": "https://api.github.com/users/code-brewer/gists{/gist_id}", "starred_url": "https://api.github.com/users/code-brewer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/code-brewer/subscriptions", "organizations_url": "https://api.github.com/users/code-brewer/orgs", "repos_url": "https://api.github.com/users/code-brewer/repos", "events_url": "https://api.github.com/users/code-brewer/events{/privacy}", "received_events_url": "https://api.github.com/users/code-brewer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-27T15:27:02Z", "updated_at": "2022-12-16T00:55:13Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The demo code is: \r\n```rust\r\n#![feature(refcell_map_split)]\r\nuse std::cell::{Ref, RefCell};    \r\n\r\nfn main() { \r\n    let cell = RefCell::new([1, 2, 3, 4,5]);\r\n    let borrow = cell.borrow(); \r\n     //    let (begin, end) = Ref::map_split(borrow, |s| s.split_at(3));   // OK\r\n\r\n    // extract closure as a variable then pass as argument, raise error.\r\n    let lambda = |s: &[i32;5]| s.split_at(3);\r\n    let (begin, end) = Ref::map_split(borrow, lambda);\r\n\r\n    assert_eq!(*begin, [1, 2, 3]);\r\n    assert_eq!(*end, [4, 5]);\r\n}\r\n```\r\n \r\n\r\n[It complains error when run](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=658e5261a8d79ef36cc18aa43359ff76):\r\n\r\n```\r\nerror[E0271]: type mismatch resolving `for<'r> <[closure@examples/dddd.rs:10:18: 10:45] as std::ops::FnOnce<(&'r [i32; 5],)>>::Output == (&'r _, &'r _)`\r\n  --> examples/dddd.rs:11:24\r\n   |\r\n11 |     let (begin, end) = Ref::map_split(borrow, lambda);\r\n   |                        ^^^^^^^^^^^^^^ expected bound lifetime parameter, found concrete lifetime\r\n   |\r\n   = note: required by `<std::cell::Ref<'b, T>>::map_split`\r\n```\r\n\r\nHow to fix this while keep passing closure as an argument to  Ref::map_split ?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56284/timeline", "performed_via_github_app": null, "state_reason": null}