{"url": "https://api.github.com/repos/rust-lang/rust/issues/54186", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54186/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54186/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54186/events", "html_url": "https://github.com/rust-lang/rust/issues/54186", "id": 359919343, "node_id": "MDU6SXNzdWUzNTk5MTkzNDM=", "number": 54186, "title": "Two consecutive if lets cannot be used as function result", "user": {"login": "hellow554", "id": 921462, "node_id": "MDQ6VXNlcjkyMTQ2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/921462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellow554", "html_url": "https://github.com/hellow554", "followers_url": "https://api.github.com/users/hellow554/followers", "following_url": "https://api.github.com/users/hellow554/following{/other_user}", "gists_url": "https://api.github.com/users/hellow554/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellow554/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellow554/subscriptions", "organizations_url": "https://api.github.com/users/hellow554/orgs", "repos_url": "https://api.github.com/users/hellow554/repos", "events_url": "https://api.github.com/users/hellow554/events{/privacy}", "received_events_url": "https://api.github.com/users/hellow554/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-13T14:23:53Z", "updated_at": "2020-08-14T05:18:22Z", "closed_at": "2020-08-14T05:18:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[MCVE](https://play.rust-lang.org/?gist=7a007ac374bd52313cfeaa58ef6c09e2&version=stable&mode=debug&edition=2015)\r\n\r\n    fn nowork(a: Option<u32>, b: Option<u32>) -> bool {\r\n        if let Some(x) = a { true } else { false }\r\n        &&\r\n        if let Some(y) = a { true } else { false }\r\n    }\r\n    \r\n    fn work(a: Option<u32>, b: Option<u32>) -> bool {\r\n        let z = if let Some(x) = a { true } else { false }\r\n        &&\r\n        if let Some(y) = a { true } else { false };\r\n        z\r\n    }\r\n\r\nError:\r\n\r\n    error[E0308]: mismatched types\r\n     --> src/main.rs:2:26\r\n      |\r\n    2 |     if let Some(x) = a { true } else { false }\r\n      |                          ^^^^ expected (), found bool\r\n      |\r\n      = note: expected type `()`\r\n                 found type `bool`\r\n\r\n    error[E0308]: mismatched types\r\n     --> src/main.rs:2:40\r\n      |\r\n    2 |     if let Some(x) = a { true } else { false }\r\n      |                                        ^^^^^ expected (), found bool\r\n      |\r\n      = note: expected type `()`\r\n                 found type `bool`\r\n\r\n    error[E0308]: mismatched types\r\n     --> src/main.rs:3:5\r\n      |\r\n    1 |   fn nowork(a: Option<u32>, b: Option<u32>) -> bool {\r\n      |                                                ---- expected `bool` because of return type\r\n    2 |       if let Some(x) = a { true } else { false }\r\n    3 | /     &&\r\n    4 | |     if let Some(y) = a { true } else { false }\r\n      | |______________________________________________^ expected bool, found &&bool\r\n      |\r\n      = note: expected type `bool`\r\n                 found type `&&bool`\r\n\r\nAm I missing something? Why is the first one not allowed, but the second one?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54186/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 3, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54186/timeline", "performed_via_github_app": null, "state_reason": "completed"}