{"url": "https://api.github.com/repos/rust-lang/rust/issues/62530", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62530/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62530/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62530/events", "html_url": "https://github.com/rust-lang/rust/issues/62530", "id": 465777552, "node_id": "MDU6SXNzdWU0NjU3Nzc1NTI=", "number": 62530, "title": "Account for coercions in trait resolution?", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 800802916, "node_id": "MDU6TGFiZWw4MDA4MDI5MTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coercions", "name": "A-coercions", "color": "f7e101", "default": false, "description": "Area: implicit and explicit `expr as Type` coercions"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-09T13:21:27Z", "updated_at": "2020-06-21T02:20:03Z", "closed_at": "2020-06-21T02:20:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This came up in https://github.com/rust-lang/rust/pull/62528, see \u201cJoining strings with `char`\u201d.\r\n\r\nReduced test case:\r\n\r\n```rust\r\nfn takes_str(_x: &str) {}\r\n\r\nfn takes_type_parameter<T>(_x: T) where T: SomeTrait {}\r\n\r\ntrait SomeTrait {}\r\nimpl SomeTrait for &'_ str {}\r\nimpl SomeTrait for char {}\r\n\r\nfn main() {\r\n    let string = String::new();\r\n    takes_str(&string);  // Ok\r\n    takes_type_parameter(&string);  // Error\r\n}\r\n```\r\n\r\nOutput: (Identical in rustc 1.36.0 (a53f9df32 2019-07-03) and rustc 1.38.0-nightly (78ca1bda3 2019-07-08).)\r\n\r\n```rust\r\nerror[E0277]: the trait bound `&std::string::String: SomeTrait` is not satisfied\r\n  --> a.rs:12:5\r\n   |\r\n12 |     takes_type_parameter(&string);  // Error\r\n   |     ^^^^^^^^^^^^^^^^^^^^ the trait `SomeTrait` is not implemented for `&std::string::String`\r\n   |\r\nnote: required by `takes_type_parameter`\r\n  --> a.rs:3:1\r\n   |\r\n3  | fn takes_type_parameter<T>(_: T) where T: SomeTrait {}\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nIn the `takes_str(&string)` call, the type of the `_x` parameter is known to be `&str`. `&String` can be coerced through auto-deref.\r\n\r\nIn the `takes_type_parameter(&string)` call, I imagine that trait resolution finds two solution (the `_x` parameter is either `&str` or `char`) but neither of them match with `&string` directly, so trait resolution emits an error. Presumably, coercion are only attempted in a later phase of compilation.\r\n\r\nIs there a language design reason it has to be this way, or could we make programs like the above valid? (It then \u201conly\u201d be a matter of compiler implementation.)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62530/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62530/timeline", "performed_via_github_app": null, "state_reason": "completed"}