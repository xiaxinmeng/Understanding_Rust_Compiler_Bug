{"url": "https://api.github.com/repos/rust-lang/rust/issues/57266", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57266/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57266/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57266/events", "html_url": "https://github.com/rust-lang/rust/issues/57266", "id": 395253591, "node_id": "MDU6SXNzdWUzOTUyNTM1OTE=", "number": 57266, "title": "Error message for type mismatch between impl Traits needs better explanation", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-02T13:49:01Z", "updated_at": "2020-01-10T05:52:27Z", "closed_at": "2020-01-10T05:52:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The message \"expected type `impl Trait` (opaque type), found type `impl Trait` (opaque type)\" sounds like a paradox: the compiler has found exactly what it expected, and yet it doesn't match.\r\n\r\nThe explanatory text of E0308 is the same as for all other banal type errors, so it's not addressing this problem specifically.\r\n\r\nFrom the questions I'm seeing in the user forum I have an impression that users think `impl Trait` is like `dyn Trait` and try to use it as an abstraction for mixing different types.\r\n\r\n```rust\r\nfn f1() -> impl Copy {\r\n    \"1\"\r\n}\r\nfn f2() -> impl Copy {\r\n    2\r\n}\r\n\r\nfn main() {\r\n    let mut x = f1();\r\n    x = f2();\r\n}\r\n```\r\n\r\n> 10 |     x = f2();\r\n   |         ^^^^ expected opaque type, found a different opaque type\r\n   |\r\n   = note: expected type `impl std::marker::Copy` (opaque type)\r\n              found type `impl std::marker::Copy` (opaque type)\r\n\r\n----\r\n\r\nSuggestions:\r\n\r\n* Make it a separate error, so that it'll get its own `rustc --explain` document.\r\n\r\n* If possible, instead of \"(opaque type)\" print more internal type information, e.g. like for closures:\r\n\r\n      = note: expected type `impl [std::marker::Copy@src/main.rs:2:10]`\r\n              found type `impl [std::marker::Copy@src/main.rs:5:10]`\r\n\r\n      = note: each `impl Trait`, even for the same trait, is a different type.\r\n      = help: consider using `Box<dyn Trait>` or separate generic parameters.\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57266/reactions", "total_count": 12, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57266/timeline", "performed_via_github_app": null, "state_reason": "completed"}