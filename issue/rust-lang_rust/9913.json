{"url": "https://api.github.com/repos/rust-lang/rust/issues/9913", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/9913/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/9913/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/9913/events", "html_url": "https://github.com/rust-lang/rust/issues/9913", "id": 21175881, "node_id": "MDU6SXNzdWUyMTE3NTg4MQ==", "number": 9913, "title": "Add a `TypeID` intrinsic", "user": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-10-17T18:52:20Z", "updated_at": "2013-11-05T04:57:02Z", "closed_at": "2013-11-05T04:57:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It's needed for things like an `Any` type, or safe dynamic loading.\n\nIt basically needs to be an generic intrinsic that returns some kind of data structure that uniquely identifies the generic type it has been instantiated with. Ideally it also includes information about the crate itself and it's meta data, so that two different named and/or versioned crates with the same type result in different `TypeID`s.\n\nCurrently, the static pointers to type descriptors can be kinda used for this, but there is no guarantee that a type descriptor can not be duplicated, so using them for this purpose is incorrect.\n\nPossible usage could look like this:\n\n```\nfn same_types<T, U>() -> bool {\n    let type_id_t = intrinsics::type_id::<T>();\n    let type_id_u = intrinsics::type_id::<U>();\n\n    type_id_t == type_id_u\n}\n\nfn main() {\n    assert!(same_types::<uint, uint>());\n\n    let type_id = intrinsics::type_id::<std::util::Void>();\n    assert!(type_id.path().to_str() == \"<6df45e453>::std::util::Void\");\n    assert!(type_id.crate().name() == \"std\");\n    assert!(type_id.crate().version() == \"1.0\");\n    assert!(type_id.crate().hash() == \"6df45e453\");\n\n}\n```\n\nSee also https://gist.github.com/Kimundi/6802198 for some prototype implementation of a `TypeID` using type descriptors.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/9913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/9913/timeline", "performed_via_github_app": null, "state_reason": "completed"}