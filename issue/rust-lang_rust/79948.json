{"url": "https://api.github.com/repos/rust-lang/rust/issues/79948", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79948/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79948/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79948/events", "html_url": "https://github.com/rust-lang/rust/issues/79948", "id": 762969091, "node_id": "MDU6SXNzdWU3NjI5NjkwOTE=", "number": 79948, "title": "compiler error on cargo test", "user": {"login": "gilesbradshaw", "id": 597115, "node_id": "MDQ6VXNlcjU5NzExNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/597115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilesbradshaw", "html_url": "https://github.com/gilesbradshaw", "followers_url": "https://api.github.com/users/gilesbradshaw/followers", "following_url": "https://api.github.com/users/gilesbradshaw/following{/other_user}", "gists_url": "https://api.github.com/users/gilesbradshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilesbradshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilesbradshaw/subscriptions", "organizations_url": "https://api.github.com/users/gilesbradshaw/orgs", "repos_url": "https://api.github.com/users/gilesbradshaw/repos", "events_url": "https://api.github.com/users/gilesbradshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/gilesbradshaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-12-11T22:05:13Z", "updated_at": "2020-12-11T22:26:19Z", "closed_at": "2020-12-11T22:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "It says you'd appreciate report ...\r\n\r\nI am 99% sure this code was compiling - but now\r\n<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n\r\n```Rust\r\nuse std::fs;\r\nuse std::error::Error;\r\n\r\npub fn run(config: Config) -> Result<(), Box<dyn Error>>{\r\n   \r\n  let contents = fs::read_to_string(config.filename)?;\r\n  \r\n  println!(\"With text:\\n{}\", contents);\r\n  Ok(())\r\n}\r\n\r\npub struct Config {\r\n  pub query: String,\r\n  pub filename: String\r\n}\r\n\r\nimpl Config {\r\n  pub fn new(args: &[String]) -> Result<Config, &'static str> {\r\n      if args.len() < 3 {\r\n          return Err(\"u need s args\");\r\n      }\r\n      let query = args[1].clone();\r\n      let filename = args[2].clone();\r\n      Ok(\r\n          Config {\r\n              query,\r\n              filename,\r\n          }\r\n      )\r\n  }   \r\n}\r\n\r\n#[cfg(test)]\r\nmod tests {\r\n    use super::*;\r\n\r\n    #[test]\r\n    fn test_config() {\r\n      if let Ok(config) = Config::new(&[String::from(\"\"), String::from(\"search\"), String::from(\"file\"),]) {\r\n        assert_eq!(config.query, \"search\", \"its search\");\r\n        \r\n      }\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (1700ca07c 2020-12-08)\r\nbinary: rustc\r\ncommit-hash: 1700ca07c6dd7becff85678409a5df6ad4cf4f47\r\ncommit-date: 2020-12-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n$ RUST_BACKTRACE=1 cargo test\r\n   Compiling minigrep v0.1.0 (/home/giles/rust/minigrep)\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_middle/src/ty/query/mod.rs:235:5\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/1700ca07c6dd7becff85678409a5df6ad4cf4f47/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/1700ca07c6dd7becff85678409a5df6ad4cf4f47/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic\r\n             at /rustc/1700ca07c6dd7becff85678409a5df6ad4cf4f47/library/core/src/panicking.rs:50:5\r\n   3: rustc_middle::ty::query::try_load_from_on_disk_cache\r\n   4: rustc_query_system::dep_graph::graph::DepGraph<K>::exec_cache_promotions\r\n   5: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n   6: rustc_incremental::persist::save::save_in\r\n   7: rustc_data_structures::sync::join\r\n   8: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n   9: rustc_incremental::persist::save::save_dep_graph\r\n  10: rustc_codegen_ssa::base::finalize_tcx\r\n  11: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  12: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  13: rustc_interface::passes::QueryContext::enter\r\n  14: rustc_interface::queries::Queries::ongoing_codegen\r\n  15: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  16: rustc_span::with_source_map\r\n  17: rustc_interface::interface::create_compiler_and_run\r\n  18: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (1700ca07c 2020-12-08) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `minigrep`\r\n\r\nTo learn more, run the command again with --verbose.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79948/timeline", "performed_via_github_app": null, "state_reason": "completed"}