{"url": "https://api.github.com/repos/rust-lang/rust/issues/12002", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12002/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12002/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12002/events", "html_url": "https://github.com/rust-lang/rust/issues/12002", "id": 26771977, "node_id": "MDU6SXNzdWUyNjc3MTk3Nw==", "number": 12002, "title": "use consistent terminology to describe moves", "user": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-02T21:30:39Z", "updated_at": "2015-01-12T20:03:27Z", "closed_at": "2015-01-12T20:03:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "All types in Rust can be passed, assigned and returned via a shallow copy. If the type is not `Pod`, then _ownership_ is moved to the destination of the copy. The source can be reinitialized and swaps are also possible. Bitwise copies of types to another location is also what vectors do via `realloc`.\n\nMany places in the documentation, such as the the `Pod` trait and `NoPod` type currently describe this in terms of _implicit copies_ This isn't a fully accurate way of describing the concept and implies that a move is performing something other than a shallow copy.\n\nThis is a continuous source of confusion on IRC, even for programmers familiar with C. It's trivial to give a C programmer the entire picture by explaining that Rust always does the same copy operation as C for passing/assigning/returning, but marks the source as moved from.\n\nMost Rust users _do_ have some concept about depth of copying and how memory works, so the explanation-by-analogy is unconvincing to them.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12002/timeline", "performed_via_github_app": null, "state_reason": "completed"}