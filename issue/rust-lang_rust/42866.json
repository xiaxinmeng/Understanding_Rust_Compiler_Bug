{"url": "https://api.github.com/repos/rust-lang/rust/issues/42866", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42866/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42866/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42866/events", "html_url": "https://github.com/rust-lang/rust/issues/42866", "id": 238237124, "node_id": "MDU6SXNzdWUyMzgyMzcxMjQ=", "number": 42866, "title": "Cannot compile compiler docs", "user": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 593503757, "node_id": "MDU6TGFiZWw1OTM1MDM3NTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-infra", "name": "T-infra", "color": "bfd4f2", "default": false, "description": "Relevant to the infrastructure team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-23T19:48:15Z", "updated_at": "2018-01-03T15:27:57Z", "closed_at": "2018-01-03T15:27:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This seems to be reported, and fixed and rebroken quite often \ud83d\ude05 \r\nThe current problem is:\r\n\r\n```rust\r\n Documenting rustc_trans v0.0.0 (file:///home/martin/programs/rust/src/librustc_trans)\r\nerror[E0308]: mismatched types\r\n   --> src/librustc_trans/back/write.rs:377:55\r\n    |\r\n377 |     llvm::LLVMRustSetInlineAsmDiagnosticHandler(llcx, inline_asm_handler, fv);\r\n    |                                                       ^^^^^^^^^^^^^^^^^^ expected enum `libc::c_void`, found a different enum `libc::c_void`\r\n    |\r\n    = note: expected type `unsafe extern \"C\" fn(*mut llvm::SMDiagnostic_opaque, *const libc::c_void, u32)`\r\n               found type `unsafe extern \"C\" fn(*mut llvm::SMDiagnostic_opaque, *const libc::c_void, u32) {back::write::inline_asm_handler}`\r\nnote: Perhaps two different versions of crate `libc` are being used?\r\n   --> src/librustc_trans/back/write.rs:377:55\r\n    |\r\n377 |     llvm::LLVMRustSetInlineAsmDiagnosticHandler(llcx, inline_asm_handler, fv);\r\n    |                                                       ^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0308]: mismatched types\r\n   --> src/librustc_trans/back/write.rs:377:75\r\n    |\r\n377 |     llvm::LLVMRustSetInlineAsmDiagnosticHandler(llcx, inline_asm_handler, fv);\r\n    |                                                                           ^^ expected enum `libc::c_void`, found a different enum `libc::c_void`\r\n    |\r\n    = note: expected type `*mut libc::c_void` (enum `libc::c_void`)\r\n               found type `*mut libc::c_void` (enum `libc::c_void`)\r\nnote: Perhaps two different versions of crate `libc` are being used?\r\n   --> src/librustc_trans/back/write.rs:377:75\r\n    |\r\n377 |     llvm::LLVMRustSetInlineAsmDiagnosticHandler(llcx, inline_asm_handler, fv);\r\n    |                                                                           ^^\r\n    = help: here are some functions which might fulfill your needs:\r\n            - .offset(...)\r\n            - .wrapping_offset(...)\r\n\r\nerror[E0308]: mismatched types\r\n   --> src/librustc_trans/back/write.rs:378:49\r\n    |\r\n378 |     llvm::LLVMContextSetDiagnosticHandler(llcx, diagnostic_handler, fv);\r\n    |                                                 ^^^^^^^^^^^^^^^^^^ expected enum `libc::c_void`, found a different enum `libc::c_void`\r\n    |\r\n    = note: expected type `unsafe extern \"C\" fn(*mut llvm::DiagnosticInfo_opaque, *mut libc::c_void)`\r\n               found type `unsafe extern \"C\" fn(*mut llvm::DiagnosticInfo_opaque, *mut libc::c_void) {back::write::diagnostic_handler}`\r\nnote: Perhaps two different versions of crate `libc` are being used?\r\n   --> src/librustc_trans/back/write.rs:378:49\r\n    |\r\n378 |     llvm::LLVMContextSetDiagnosticHandler(llcx, diagnostic_handler, fv);\r\n    |                                                 ^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0308]: mismatched types\r\n   --> src/librustc_trans/back/write.rs:378:69\r\n    |\r\n378 |     llvm::LLVMContextSetDiagnosticHandler(llcx, diagnostic_handler, fv);\r\n    |                                                                     ^^ expected enum `libc::c_void`, found a different enum `libc::c_void`\r\n    |\r\n    = note: expected type `*mut libc::c_void` (enum `libc::c_void`)\r\n               found type `*mut libc::c_void` (enum `libc::c_void`)\r\nnote: Perhaps two different versions of crate `libc` are being used?\r\n   --> src/librustc_trans/back/write.rs:378:69\r\n    |\r\n378 |     llvm::LLVMContextSetDiagnosticHandler(llcx, diagnostic_handler, fv);\r\n    |                                                                     ^^\r\n    = help: here are some functions which might fulfill your needs:\r\n            - .offset(...)\r\n            - .wrapping_offset(...)\r\n\r\nerror: Compilation failed, aborting rustdoc\r\n\r\nerror: Could not document `rustc_trans`.\r\n```", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42866/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42866/timeline", "performed_via_github_app": null, "state_reason": "completed"}