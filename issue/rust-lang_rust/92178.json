{"url": "https://api.github.com/repos/rust-lang/rust/issues/92178", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92178/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92178/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92178/events", "html_url": "https://github.com/rust-lang/rust/issues/92178", "id": 1086245268, "node_id": "I_kwDOAAsO6M5AvsmU", "number": 92178, "title": "Change in unrelated line causes compilation failure", "user": {"login": "phimuemue", "id": 157728, "node_id": "MDQ6VXNlcjE1NzcyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/157728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phimuemue", "html_url": "https://github.com/phimuemue", "followers_url": "https://api.github.com/users/phimuemue/followers", "following_url": "https://api.github.com/users/phimuemue/following{/other_user}", "gists_url": "https://api.github.com/users/phimuemue/gists{/gist_id}", "starred_url": "https://api.github.com/users/phimuemue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phimuemue/subscriptions", "organizations_url": "https://api.github.com/users/phimuemue/orgs", "repos_url": "https://api.github.com/users/phimuemue/repos", "events_url": "https://api.github.com/users/phimuemue/events{/privacy}", "received_events_url": "https://api.github.com/users/phimuemue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2021-12-21T21:30:00Z", "updated_at": "2022-05-31T21:39:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, when I tried to incorporate `rhai` into my project, compilation fails with a strange (incorrect?) compiler error.\r\n\r\n# Steps to reproduce\r\n\r\nI use Rust 1.57.0 (at the time of writing: stable):\r\n\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\nIdeally, I'd like to provide a minimal example, but I just do not have enough time, so I'd be glad if you could try this:\r\n\r\n```\r\ngit clone -b compiler_bug https://github.com/phimuemue/openschafkopf.git # check out a specific branch showcasing my problem\r\ncd openschafkopf\r\ncargo check -j16 # Fails to compile, but I do not see why.\r\n```\r\n\r\nThe last commit on the `compiler_bug` branch from my project introduces no significant changes, but Rust cannot compile it anymore.\r\n\r\n# Expected outcome\r\n\r\nI think my code is valid and should compile without errors, especially as the last commit on the specific branch should not introduce significant changes.\r\n\r\n# Observed outcome\r\n\r\nRust fails to compile the code:\r\n\r\n```\r\nwarning: unused import: `rhai::Engine`\r\n  --> main/src/subcommands/hand_stats.rs:31:17\r\n   |\r\n31 |             use rhai::Engine;\r\n   |                 ^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_imports)]` on by default\r\n\r\nerror[E0277]: cannot add `&std::string::String` to `std::string::String`\r\n   --> main/src/game_analysis/mod.rs:190:5\r\n    |\r\n190 |     + &crate::ai::suspicion::player_table(epi_self, |epi| {\r\n    |     ^ no implementation for `std::string::String + &std::string::String`\r\n    |\r\n    = help: the trait `Add<&std::string::String>` is not implemented for `std::string::String`\r\n\r\nerror[E0277]: cannot add `&std::string::String` to `std::string::String`\r\n   --> main/src/skui/mod.rs:196:9\r\n    |\r\n196 |         + &format!(\"Stock: {}\", n_stock)\r\n    |         ^ no implementation for `std::string::String + &std::string::String`\r\n    |\r\n    = help: the trait `Add<&std::string::String>` is not implemented for `std::string::String`\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nwarning: `openschafkopf` (bin \"openschafkopf\") generated 1 warning\r\nerror: could not compile `openschafkopf` due to 2 previous errors; 1 warning emitted\r\n```\r\n\r\nContrary to what the compiler says, the offending line appears to be `main/src/subcommands/hand_stats.rs:31` (it says `use rhai::Engine;`) - removing it allows the project to be compiled. \r\n\r\nI see that [`String` implements `Add<&str>`](https://doc.rust-lang.org/std/string/struct.String.html#impl-Add%3C%26%27_%20str%3E), and maybe Rust cannot do type coercion anymore (if I do `as &str` manually, it compiles), but I do not see why that should be affected by a change in an unrelated file.\r\n\r\n# Workaround\r\n\r\nAs said above, the problem can be worked-around by explicitly telling the compiler to borrow `as &str`.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"compiler-errors\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92178/timeline", "performed_via_github_app": null, "state_reason": null}