{"url": "https://api.github.com/repos/rust-lang/rust/issues/27717", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27717/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27717/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27717/events", "html_url": "https://github.com/rust-lang/rust/issues/27717", "id": 100598672, "node_id": "MDU6SXNzdWUxMDA1OTg2NzI=", "number": 27717, "title": "Tracking issue for static synchronization primitives", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 219670472, "node_id": "MDU6TGFiZWwyMTk2NzA0NzI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/final-comment-period", "name": "final-comment-period", "color": "1e76d9", "default": false, "description": "In the final comment period and will be merged soon unless new substantive objections are raised."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-08-12T17:55:18Z", "updated_at": "2018-12-10T05:43:48Z", "closed_at": "2016-05-26T06:49:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a tracking issue for the unstable `static_mutex`, `static_condvar`, and `static_rwlock` features in the standard library. Each of these represents a separate `StaticFoo` type (next to the type `Foo`) to provide a synchronization primitive that can be constructed in a static context. This unfortunately has a few drawbacks:\n- `StaticMutex` does not have a type parameter for the data that it protects (unlike `Mutex<T>`)\n- Having two types for almost the same purpose is quite unfortunate.\n\nIdeally all of these types would be removed in favor of being able to construct a `Mutex<T>` statically. This can almost be done with `const fn`, but the implementation of each of these primitives currently has an internal `Box` which can't be constructed in a static context. A solution should probably be devised along the lines of:\n- A \"stable address\" primitive could be created which is a `Box` at runtime and just a plain address when inlined into a static. It also wouldn't have a destructor for the purposes of checking whether statics have destructors.\n- The `box` operator could be allowed in a `const fn` context perhaps. Instead of allocating memory on the heap it could instead \"allocate\" memory in the data section of an executable at compile time. The destructor would end up being ignored and never run somehow, possibly.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27717/timeline", "performed_via_github_app": null, "state_reason": "completed"}