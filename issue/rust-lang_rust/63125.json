{"url": "https://api.github.com/repos/rust-lang/rust/issues/63125", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63125/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63125/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63125/events", "html_url": "https://github.com/rust-lang/rust/issues/63125", "id": 474372859, "node_id": "MDU6SXNzdWU0NzQzNzI4NTk=", "number": 63125, "title": "Re-exporting `extern \"C\"` and `#[no_mangle] symbols in cdylib doesn\u2019t work with gcc on Linux", "user": {"login": "ddeville", "id": 356759, "node_id": "MDQ6VXNlcjM1Njc1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/356759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddeville", "html_url": "https://github.com/ddeville", "followers_url": "https://api.github.com/users/ddeville/followers", "following_url": "https://api.github.com/users/ddeville/following{/other_user}", "gists_url": "https://api.github.com/users/ddeville/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddeville/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddeville/subscriptions", "organizations_url": "https://api.github.com/users/ddeville/orgs", "repos_url": "https://api.github.com/users/ddeville/repos", "events_url": "https://api.github.com/users/ddeville/events{/privacy}", "received_events_url": "https://api.github.com/users/ddeville/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-30T04:58:27Z", "updated_at": "2019-08-10T10:43:35Z", "closed_at": "2019-08-10T10:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Building a `cdylib` crate that has a dependency on a crate with `extern \"C\"` and `#[no_mangle]` symbols fails to export the symbols on Linux, even when the symbols are re-exported as public. Symbols are correctly exported on Mac and Windows.\r\n\r\nThe problem was somewhat discussed on #36342 but as far as I can tell, only `gcc` and Linux are behaving abnormally today.\r\n\r\nIn order to reproduce the issue, I used the following simple setup with two crates.\r\n\r\n`mycrate/Cargo.toml`\r\n```\r\n[package]\r\nname = \"mycrate\"\r\nversion = \"0.1.0\"\r\nedition = \"2018\"\r\n```\r\n\r\n`mycrate/src/lib.rs`\r\n```\r\n#[no_mangle]\r\npub extern \"C\" fn do_you_see_me() {\r\n    println!(\"hello\");\r\n}\r\n```\r\n\r\n`mylib/Cargo.toml`\r\n```\r\n[package]\r\nname = \"mylib\"\r\nversion = \"0.1.0\"\r\nedition = \"2018\"\r\n\r\n[lib]\r\nname = \"mylib\"\r\ncrate-type = [\"cdylib\"]\r\n\r\n[dependencies]\r\nmycrate = { path = \"../mycrate\" }\r\n```\r\n\r\n`mylib/src/lib.rs`\r\n```\r\npub use mycrate::*;\r\n```\r\n\r\nI then ran `cargo build` in `mylib` and inspected the resulting library under `mylib/target/debug`.\r\n\r\n### On Mac\r\n```\r\n$ nm -gnU mylib/target/debug/libmylib.dylib\r\n0000000000000fd0 T _do_you_see_me\r\n000000000000b000 T _rust_eh_personality\r\n```\r\n\r\n### On Windows\r\n```\r\n$ DUMPBIN /EXPORTS mylib\\target\\debug\\mylib.dll\r\n    ordinal hint RVA      name\r\n          1    0 00016A80 do_you_see_me = do_you_see_me\r\n          2    1 0000EC00 rust_eh_personality = rust_eh_personality\r\n```\r\n\r\n### On Linux\r\n```\r\n$ nm -g --defined-only target/debug/libmylib.so\r\n00000000000012a0 T rust_eh_personality\r\n```\r\n\r\nI expected `do_you_see_me` to be exported by the dynamic library on Linux too.\r\n\r\nThis makes it pretty hard to ship a `cdylib` built on top of crates that expose a C ABI. I realize that it\u2019s technically possible to \"wrap\" the symbols from `mycrate` in new `#[no_mangle]` and `extern \"C\"` functions in `mylib` but for a project with a substantial number of exported symbols it\u2019s simply not practical.\r\n\r\n## Meta\r\n\r\nVersions of `rustc` and various compilers I am using.\r\n\r\n### On Mac\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.36.0 (a53f9df32 2019-07-03)\r\nbinary: rustc\r\ncommit-hash: a53f9df32fbb0b5f4382caaad8f1a46f36ea887c\r\ncommit-date: 2019-07-03\r\nhost: x86_64-apple-darwin\r\nrelease: 1.36.0\r\nLLVM version: 8.0\r\n\r\n$ clang --version\r\nApple LLVM version 10.0.1 (clang-1001.0.46.4)\r\n```\r\n\r\n### On Linux\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.36.0 (a53f9df32 2019-07-03)\r\nbinary: rustc\r\ncommit-hash: a53f9df32fbb0b5f4382caaad8f1a46f36ea887c\r\ncommit-date: 2019-07-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.36.0\r\nLLVM version: 8.0\r\n\r\n$ gcc --version\r\ngcc (GCC) 9.1.0\r\n```\r\n\r\n### On Windows\r\n```\r\n$ >rustc --version --verbose\r\nrustc 1.36.0 (a53f9df32 2019-07-03)\r\nbinary: rustc\r\ncommit-hash: a53f9df32fbb0b5f4382caaad8f1a46f36ea887c\r\ncommit-date: 2019-07-03\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.36.0\r\nLLVM version: 8.0\r\n\r\n$ CL\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.22.27905 for x64\r\n```", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63125/timeline", "performed_via_github_app": null, "state_reason": "completed"}