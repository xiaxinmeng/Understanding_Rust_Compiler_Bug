{"url": "https://api.github.com/repos/rust-lang/rust/issues/1718", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1718/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1718/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1718/events", "html_url": "https://github.com/rust-lang/rust/issues/1718", "id": 3038132, "node_id": "MDU6SXNzdWUzMDM4MTMy", "number": 1718, "title": "RFC: Parameterizable self type in ifaces", "user": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2012-01-31T16:20:56Z", "updated_at": "2014-06-16T21:56:27Z", "closed_at": "2012-02-06T08:58:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, it is not possible to express, for example, that the `map` method of a `mappable` interface returns the same kind of container type as the input, but with its inner type changed to the output type of the mapping function.\n\nAt https://github.com/marijnh/rust/tree/self_tys , there's an implementation of an extension that allows the following:\n\n```\niface M: mappable<T> {\n    fn map<U>(fn(T) -> U) -> M<U>;\n}\n\nimpl <T> of mappable<T> for [T] {\n    fn map<U>(fn(T) -> U) -> [U] { ... }\n}\n```\n\nBy prefixing the `iface` name with an ident and a colon, you provide an explicit name for the self type. This acts as a parameterized type with the same amount of parameters as the iface has (1 in the above case, can also be zero or more), that may appear in the method signatures to refer to the self type of the impl. This allows basic forms of Haskellisms like Monad and Functor to be expressed (in fact, the `mappable` above is a functor), but also comes in handy with simpler things.\n\nAbstaction with bounded type parameters on such types currently only works when no new self types are introduced (you could map from a type to itself in a generic that has `<T, M: mappable<T>>` params) -- which tirivally holds for non-parameterized self types. We could, somewhere in the far future, consider adding parameterized parameters (`<T<U>: mappable<U>>` or similar) to allow more expressivity in this area.\n\nMethods with self types in them can't be called on boxed iface values, since those hide the self type, and the result wouldn't be sanely typable (we could insert magic to automatically box the result, but this seems too weird and not immediately useful).\n", "closed_by": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1718/timeline", "performed_via_github_app": null, "state_reason": "completed"}