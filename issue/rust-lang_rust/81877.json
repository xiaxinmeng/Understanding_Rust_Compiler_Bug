{"url": "https://api.github.com/repos/rust-lang/rust/issues/81877", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81877/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81877/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81877/events", "html_url": "https://github.com/rust-lang/rust/issues/81877", "id": 803391659, "node_id": "MDU6SXNzdWU4MDMzOTE2NTk=", "number": 81877, "title": "When a variable is incorrectly used in a closure, error points to the source of the borrow, not the variable", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-02-08T09:51:19Z", "updated_at": "2021-02-11T00:51:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Unhelpful diagnostic. It's technically correct, but points to a variable that isn't the direct cause of the problem, obscuring the actual issue.\r\n\r\n[playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=ad0cd1b3e4862593ae0c64b6650a0579)\r\n\r\n```rust\r\nfn indirect(source: &str) {\r\n    let actual_variable = &source[..];\r\n    \r\n    std::thread::spawn(move || {\r\n        drop(actual_variable);\r\n    });\r\n}\r\n```\r\n\r\n> error[E0621]: explicit lifetime required in the type of `source`\r\n> fn indirect(source: &str) {\r\n  |                     ---- help: add explicit lifetime `'static` to the type of `source`: `&'static \r\n\r\n\r\nThe problem here (apart from #69350) is that the `source` argument is not used directly in the closure.  Searching closure's code for the `source` variable won't find it. `let source = source.to_owned()` will not help. In non-trivial functions this diagnostic is very puzzling, because it appears to complain about an unused/unrelated variable.\r\n\r\nFixing this problem requires user to *manually* find and trace all places where the `source` arg has been borrowed, which could end up being in the closure. This may be difficult when borrowing is obscured by function calls or match ergonomics.\r\n\r\nThe error should point to `actual_variable`. Instead of tracing the lifetime all the way to its origin, it would be more helpful to trace it to the binding that ended up captured by the closure:\r\n\r\n```text\r\nfn indirect(source: &str) {\r\n    let actual_variable = &source[..];\r\n        ^^^^^^^^^^^^^^^\r\n...\r\n    std::thread::spawn(move || {\r\n        drop(actual_variable);\r\n             ^^^^^^^^^^^^^^^\r\n```\r\n\r\n\r\nAnother case:\r\n\r\n```rust\r\nfn indirect(source: i32) {\r\n    let foo = obscure(&source);\r\n    let actual_variable = foo;\r\n    \r\n    std::thread::spawn(move || {\r\n        drop(actual_variable);\r\n    });\r\n}\r\n\r\nfn obscure(x: &i32) -> &i32 { x }\r\n```\r\n\r\n```text\r\n2 |     let foo = obscure(&source);\r\n  |               --------^^^^^^^-\r\n  |               |       |\r\n  |               |       borrowed value does not live long enough\r\n  |               argument requires that `source` is borrowed for `'static`\r\n```\r\n\r\ncomplains about the `source` and the call to `obscure`, which is wrong on both fronts, because the problem is about `actual_variable` and the call to `spawn`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81877/timeline", "performed_via_github_app": null, "state_reason": null}