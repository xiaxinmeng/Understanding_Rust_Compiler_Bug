{"url": "https://api.github.com/repos/rust-lang/rust/issues/64926", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64926/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64926/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64926/events", "html_url": "https://github.com/rust-lang/rust/issues/64926", "id": 500454403, "node_id": "MDU6SXNzdWU1MDA0NTQ0MDM=", "number": 64926, "title": "Tracking issue for `const extern fn` and `const unsafe extern fn`", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1587705972, "node_id": "MDU6TGFiZWwxNTg3NzA1OTcy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_extern_fn", "name": "F-const_extern_fn", "color": "f9c0cc", "default": false, "description": "`#![feature(const_extern_fn)]`"}, {"id": 3537209768, "node_id": "LA_kwDOAAsO6M7S1Ymo", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-ready-to-stabilize", "name": "S-tracking-ready-to-stabilize", "color": "4682b4", "default": false, "description": "This is ready to stabilize; it may need a stabilization report and a PR"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-09-30T18:48:53Z", "updated_at": "2022-06-22T22:13:43Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a tracking issue for implementing and stabilizing defining a `const extern fn` and `const unsafe extern fn`\r\n\r\n- [X] Add a test according to https://github.com/rust-lang/rust/pull/64906#issuecomment-539902772 (added in https://github.com/rust-lang/rust/pull/68370)\r\n\r\n### Stabilizaton Report\r\n\r\n## Summary\r\n\r\nThis allows writing `const unsafe extern \"calling-convention\" fn` and `const extern \"calling-convention\" fn`:\r\n\r\nToday Rust and C calling conventions are stable (as of 1.62, see #95346). All other calling conventions are still unstable.\r\n\r\n```rust\r\nconst extern fn foo1(val: u8) -> u8 { val + 1 }\r\nconst extern \"C\" fn foo2(val: u8) -> u8 { val + 1}\r\nconst unsafe extern fn bar1(val: bool) -> bool { !val }\r\nconst unsafe extern \"C\" fn bar2(val: bool) -> bool { !val }\r\n```\r\n\r\nThis can be used to const-ify an `extern fn` (or equivalently, to make a `const fn` callable from external code).\r\n\r\n## Test cases\r\n\r\n1. Test for defining and calling in Rust code: https://github.com/rust-lang/rust/blob/master/src/test/ui/consts/const-extern-fn/const-extern-fn.rs\r\n2. Test that calling with the wrong calling convention (from a `const` context) leads to an error: https://github.com/rust-lang/rust/blob/master/src/test/ui/consts/miri_unleashed/abi-mismatch.rs", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64926/reactions", "total_count": 4, "+1": 2, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64926/timeline", "performed_via_github_app": null, "state_reason": null}