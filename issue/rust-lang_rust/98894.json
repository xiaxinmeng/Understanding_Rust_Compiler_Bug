{"url": "https://api.github.com/repos/rust-lang/rust/issues/98894", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98894/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98894/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98894/events", "html_url": "https://github.com/rust-lang/rust/issues/98894", "id": 1293285889, "node_id": "I_kwDOAAsO6M5NFfoB", "number": 98894, "title": "Calling a function with wrong number of arguments and a `while`  loop or its equivalence yields weird diagnostics ", "user": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "closed", "locked": false, "assignee": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-07-04T15:00:12Z", "updated_at": "2022-07-10T19:26:02Z", "closed_at": "2022-07-10T19:26:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Explanation / examples\n\nThis perfectly wrong statement causes compiler to mention `if`s, `!` and `()` even though nothing like this is written in the code:\n```rust\n(|_, ()| ())(while true {});\n```\n```text\nerror[E0308]: `if` and `else` have incompatible types\n --> ./t.rs:2:18\n  |\n2 |     (|_, ()| ())(while true {});\n  |                  ^^^^^^^^^^^--\n  |                  |          |\n  |                  |          expected because of this\n  |                  expected `()`, found `!`\n  |\n  = note: expected unit type `()`\n                  found type `!`\n```\n(here and after normal errors about argument number/type mismatch are not shown as they are not the problem)\n\nOriginally I've found this while editing some async code and passing `String` instead of `&str`. I was very confused and thought that it somehow relates to `async`/`impl Trait`/etc but after some minification I was left with the snippet above.\n\nThis error becomes less confusing after desugaring `while` loop by hand:\n```rust\n(|_, ()| ())(loop { if true {} else {break;} });\n```\n```\nerror[E0308]: `if` and `else` have incompatible types\n --> ./t.rs:2:42\n  |\n2 |     (|_, ()| ())(loop { if true {} else {break;} });\n  |                                 --       ^^^^^^ expected `()`, found `!`\n  |                                 |\n  |                                 expected because of this\n  |\n  = note: expected unit type `()`\n                  found type `!`\n```\nNote that using `break;` is _required_ to trigger this bug, using `break` doesn't trigger it for some reason.\n\nIn fact, you don't even need a `loop`:\n```rust\n(|_, ()| ())(if true {} else {return;});\n```\n```\nerror[E0308]: `if` and `else` have incompatible types\n --> ./t.rs:2:35\n  |\n2 |     (|_, ()| ())(if true {} else {return;});\n  |                          --       ^^^^^^^ expected `()`, found `!`\n  |                          |\n  |                          expected because of this\n  |\n  = note: expected unit type `()`\n                  found type `!`\n```\n\nSo in the end, this can be triggered with an `if`/`else` one of branches on which is diverging expression with `;` that is being passed to a function with wrong number of arguments.\n\n## Note about confusion / applicability to real programs\n\nAs I previously said, I've found this while working on async code and I think this is the main way how this error can be seen (let's be serious, nobody calls functions with `while` loop arguments). The reason why it's easier to find this error with async is that `async{}` blocks are commonly passed to functions (like `tokio::spawn`) and can contain `while` loops inside them.\n\nIn my case the code looked something like this:\n\n```rust\nspawn(arg_with_wrong_type, async {\n    while let Some(_) = rx.recv().await {\n        // ..\n\n        some_atomic.store(true, Ordering::Relaxed);\n    }\n})\n```\n\nWhich caused an error like this:\n\n![2022-07-04_11-28](https://user-images.githubusercontent.com/38225716/177177413-6a8b4197-2903-45b6-982e-01419290a429.png)\n\nNote that \"expected because of this\" points to the last statement in the `while{}` block even though it has nothing to do, really, with the error.\n\n## Bisection\n\nsearched nightlies: from nightly-2022-04-10 to nightly-2022-05-09\nregressed nightly: nightly-2022-04-17\nsearched commit range: https://github.com/rust-lang/rust/compare/3f391b84552f210adec7893b50c5da74f9362ae4...878c7833f6c1ff10e2fd89074e5bd4ef5ff15936\nregressed commit: https://github.com/rust-lang/rust/commit/07bb916d44a66d2caba427c7ee132bbeb245977b\n\n<details>\n<summary>bisected with <a href='https://github.com/rust-lang/cargo-bisect-rustc'>cargo-bisect-rustc</a> v0.6.3</summary>\n\n\nHost triple: x86_64-unknown-linux-gnu\nReproduce with:\n```bash\ncargo bisect-rustc --script=./test.sh --end=2022-05-09\n```\n\n`src/main.rs`:\n```rust\nfn main() {\n    (|_, ()| ())(async { while true {} });\n}\n```\n`test.sh`:\n```sh\n#!/bin/sh\n\n# Fail if we no longer get a single error (and instead get at least two)\ncargo check 2>&1 | grep \"due to previous error;\"\n```\n\n</details>\n\n## Cause\n\nBisection shows that this issue was introduced by #92364 which aligns with other observations. This is likely caused by the same underlying problem as #96335: diagnostic code calls `check_expr` a second time which confuses different parts of the compiler.\n\ncc @compiler-errors as they've worked on fixing issues caused by #92364 before\n\n## Meta\n\nThis is reproducible with `1.63.0-beta.3` (2022-07-02 59f577d6388060f65b5f) and with most nightly-es after `nightly-2022-04-17` (except for those that ICE).\n\n@rustbot label +A-diagnostics +D-confusing +D-incorrect\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"compiler-errors\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98894/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98894/timeline", "performed_via_github_app": null, "state_reason": "completed"}