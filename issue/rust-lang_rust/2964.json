{"url": "https://api.github.com/repos/rust-lang/rust/issues/2964", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2964/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2964/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2964/events", "html_url": "https://github.com/rust-lang/rust/issues/2964", "id": 5723964, "node_id": "MDU6SXNzdWU1NzIzOTY0", "number": 2964, "title": "Additional constructors/possible-classification for std::bitv", "user": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-07-19T20:32:59Z", "updated_at": "2012-07-20T03:22:05Z", "closed_at": "2012-07-20T03:22:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have written these functions for my own use, but I would like it better if they were inside std::bitv:\n\n```\n/**\n * Transform a byte-vector into a bitv. Each byte becomes 8 bits,\n * with the most significant bits of each byte coming first. Each\n * bit becomes true if equal to 1 or false if equal to 0.\n */\nfn from_bytes(bytes: [u8]) -> bitv;\n\n/**\n * Transform a [bool] into a bitv by converting each bool into a bit.\n */\nfn from_bools(bools: [bool]) -> bitv;\n\n/**\n * Create a bitv of the specified length where the value at each\n * index is f(index).\n */\nfn from_fn(len: uint, f: fn(index: uint) -> bool) -> bitv;\n```\n\n(there are also corresponding to_bytes/to_bools methods).\n\nAs a separate but related issue, I think it would be nice if the bitv type was turned into a class and its internal data marked as private members.\n\nAs either of these requests pleasing to you? I can provide pull requests (with tests/docs/etc) if they are.\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2964/timeline", "performed_via_github_app": null, "state_reason": "completed"}