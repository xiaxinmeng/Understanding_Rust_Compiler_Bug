{"url": "https://api.github.com/repos/rust-lang/rust/issues/107883", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107883/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107883/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107883/events", "html_url": "https://github.com/rust-lang/rust/issues/107883", "id": 1579411560, "node_id": "I_kwDOAAsO6M5eI-ho", "number": 107883, "title": "Returning `impl Fn(T) -> impl Trait` does not compile, unless you add an `identity` call", "user": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4360021736, "node_id": "LA_kwDOAAsO6M8AAAABA-Cm6A", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-impl_trait_in_fn_trait_return", "name": "F-impl_trait_in_fn_trait_return", "color": "f9c0cc", "default": false, "description": "`#![feature(impl_trait_in_fn_trait_return)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-02-10T10:19:00Z", "updated_at": "2023-02-10T10:19:00Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(impl_trait_in_fn_trait_return)]\r\n#![feature(unboxed_closures)] // only for `h`\r\n\r\nuse std::fmt::Debug;\r\n\r\n// Fails??\r\nfn f<T>() -> impl Fn(T) -> impl Debug {\r\n    |_x| 15\r\n}\r\n\r\n// Works?...\r\nfn g<T>() -> impl MyFn<(T,), Out = impl Debug> {\r\n    |_x| 15\r\n}\r\n\r\ntrait MyFn<T> { type Out; }\r\nimpl<T, U, F: Fn(T) -> U> MyFn<(T,)> for F { type Out = U; }\r\n\r\n// Also fails??\r\nfn h<T>() -> impl Fn<(T,), Output = impl Debug> {\r\n    |_x| 15\r\n}\r\n\r\n// Works??????\r\nfn f_<T>() -> impl Fn(T) -> impl Debug {\r\n    std::convert::identity(|_x| 15)\r\n}\r\n\r\n// Works?????\r\nfn f__<T>() -> impl Fn(T) -> impl Debug {\r\n    let r = |_x| 15;\r\n    r\r\n}\r\n```\r\n[[play]](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=23709b2eab5c6c9e82ab5619f64295af)\r\n\r\nI expected to see this happen: all of the above functions successfully compile.\r\n\r\nInstead, this happened: `f` and `h` do not compile for no clear reason, while `g`, `f_` and `f__` do compile, even though they are all almost identical.\r\n\r\n<details><summary>Compiler output</summary>\r\n<p>\r\n\r\n```\r\nerror: concrete type differs from previous defining opaque type use\r\n --> src/lib.rs:8:10\r\n  |\r\n8 |     |_x| 15\r\n  |          ^^ expected `impl Debug`, got `i32`\r\n  |\r\nnote: previous use here\r\n --> src/lib.rs:8:5\r\n  |\r\n8 |     |_x| 15\r\n  |     ^^^^^^^\r\n\r\nerror[[E0720]](https://doc.rust-lang.org/nightly/error-index.html#E0720): cannot resolve opaque type\r\n --> src/lib.rs:7:28\r\n  |\r\n7 | fn f<T>() -> impl Fn(T) -> impl Debug {\r\n  |                            ^^^^^^^^^^ cannot resolve opaque type\r\n\r\nerror: concrete type differs from previous defining opaque type use\r\n  --> src/lib.rs:21:10\r\n   |\r\n21 |     |_x| 15\r\n   |          ^^ expected `impl Debug`, got `i32`\r\n   |\r\nnote: previous use here\r\n  --> src/lib.rs:21:5\r\n   |\r\n21 |     |_x| 15\r\n   |     ^^^^^^^\r\n\r\nerror[[E0720]](https://doc.rust-lang.org/nightly/error-index.html#E0720): cannot resolve opaque type\r\n  --> src/lib.rs:20:37\r\n   |\r\n20 | fn h<T>() -> impl Fn<(T,), Output = impl Debug> {\r\n   |                                     ^^^^^^^^^^ cannot resolve opaque type\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nRustc version:\r\n```\r\n1.69.0-nightly (2023-02-09 8996ea93b6e554148c42)\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107883/reactions", "total_count": 3, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107883/timeline", "performed_via_github_app": null, "state_reason": null}