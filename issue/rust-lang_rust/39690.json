{"url": "https://api.github.com/repos/rust-lang/rust/issues/39690", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39690/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39690/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39690/events", "html_url": "https://github.com/rust-lang/rust/issues/39690", "id": 206528433, "node_id": "MDU6SXNzdWUyMDY1Mjg0MzM=", "number": 39690, "title": "compiletest: mir-opt tests don't warn about stale output relative to source timestamp", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-02-09T15:00:04Z", "updated_at": "2017-02-20T23:56:33Z", "closed_at": "2017-02-20T23:56:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now, if you work on a mir-opt test and iteratively change it without cleaning in between runs, your build directory can end up with content like this:\r\n\r\n```\r\n % ls -o *TypeckMir.before.mir )\r\n-rw-r--r-- 1 pnkfelix 5759 Feb  9 15:42 rustc.node13.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix 2773 Feb  9 14:42 rustc.node16.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix 4373 Feb  9 15:42 rustc.node20.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix 2817 Feb  9 14:54 rustc.node21.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix 2816 Feb  9 14:56 rustc.node22.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix  458 Feb  9 14:41 rustc.node29.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix  458 Feb  9 14:54 rustc.node36.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix  458 Feb  9 14:56 rustc.node37.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix 2800 Feb  9 15:14 rustc.node40.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix 2800 Feb  9 15:42 rustc.node43.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix 3228 Feb  9 14:56 rustc.node4.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix  844 Feb  9 15:14 rustc.node55.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix  844 Feb  9 15:42 rustc.node58.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix 2772 Feb  9 14:41 rustc.node7.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix  458 Feb  9 15:14 rustc.node86.TypeckMir.before.mir\r\n-rw-r--r-- 1 pnkfelix  458 Feb  9 15:42 rustc.node89.TypeckMir.before.mir\r\n```\r\n\r\nNote the wide variety of timestamps. As the node id's changed in response to source file modifications, some of the output stops getting overwritten and just stays in place.\r\n\r\nThis, combined with the mir-opt architecture where one embeds the *name* of the specific file that one wants to compare against, has a bad failure case during iterative development: if you are not paying attention and leave the header as e.g. `START rustc.node4.TypeckMir.before.mir`, you'll keep comparing your expected output against the same (stale) file, so you'll either get false negatives (the test passes because the embedded expected output is just as stale as the file you end up comparing against), or as you revise your concrete test input, you'll get false positives (the test fails because the now correct embedded expected output is still being compared against a stale file).\r\n\r\nThe user error here is of course that the `START rustc.node4.TypeckMir.before.mir` needs to be kept in sync with the actual node number to which the mir dump sends its output.\r\n\r\nBut it would be *much* better if `compiletest` did a sanity check on the time stamps: if the dumped mir output is older than the original source file, then chances are something has gone wrong, and compile test could either error in response, or at least issue a warning to the user.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39690/timeline", "performed_via_github_app": null, "state_reason": "completed"}