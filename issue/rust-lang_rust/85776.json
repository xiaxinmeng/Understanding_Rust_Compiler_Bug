{"url": "https://api.github.com/repos/rust-lang/rust/issues/85776", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85776/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85776/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85776/events", "html_url": "https://github.com/rust-lang/rust/issues/85776", "id": 905024479, "node_id": "MDU6SXNzdWU5MDUwMjQ0Nzk=", "number": 85776, "title": "Semantics of char comparison operations is not clear", "user": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-05-28T09:20:14Z", "updated_at": "2023-02-21T06:54:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is possibly me being silly.. I'm currently working on something where I have to convert `char`s to `u32`s for storage, and then convert back. My code is only correct if `\u2200 (c1 : char) (c2 : char) . c1.cmp(c2) == (c1 as u32).cmp(c2 as u32)`. In other words conversion from `char` to `u32` must preserve the ordering relation of values. (there is probably a name given to this notion of relation-preserving mapping, but I don't know what it is.. anyone know?)\r\n\r\nLooking at `char` documentation, it says `char` represents \"Unicode scalar value\"s, but other than that it doesn't say what does conversion to `u32` do, or whether they're represented as `u32` internally, and whether comparison is simple `u32` comparison (i.e. comparison of unicode scalar values) or something more complicated. It's also not easy to learn about this by looking at the source, becuase `PartialOrd` implementation of `char` relies on `>`, `<` etc. implementations ([1], [2]), which are I think hard-coded somewhere in the compiler.\r\n\r\nSimple `u32` comparison is probably the only sensible implementation, but that's not entirely clear to me. When I click on the \"unicode scalar value\" link in the documentation it doesn't say how the values must be compared. Without knowing more about unicode or \"unicode scalar value\" I'm not sure if e.g. a character can have multiple unicode scalar values but those need to be equal, or something like that.\r\n\r\n[1]: https://doc.rust-lang.org/src/core/cmp.rs.html#1307\r\n[2]: https://doc.rust-lang.org/src/core/cmp.rs.html#1207\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85776/reactions", "total_count": 4, "+1": 1, "-1": 0, "laugh": 2, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85776/timeline", "performed_via_github_app": null, "state_reason": null}