{"url": "https://api.github.com/repos/rust-lang/rust/issues/94971", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94971/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94971/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94971/events", "html_url": "https://github.com/rust-lang/rust/issues/94971", "id": 1170115585, "node_id": "I_kwDOAAsO6M5FvowB", "number": 94971, "title": "Tracking issues for unstable library features used by `std`", "user": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-15T19:39:00Z", "updated_at": "2022-03-17T10:07:15Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "`std` uses a lot of unstable library features. While `core` will most likely always have to use *language* features, we can strive for `std` to eventually be free of both unstable language and unstable library features.\r\n\r\nSome of these we'll need to stabilize, but some others we might be able to simply remove with some small changes to the code.\r\n\r\n(See also https://github.com/rust-lang/rust/issues/94970 for the language features.)\r\n\r\nThese are the library features we currently use in `std`:\r\n\r\n- Not yet stable core features:\r\n  - [ ] duration_constants\r\n  - [ ] exact_size_is_empty\r\n  - [ ] extend_one\r\n  - [ ] maybe_uninit_slice\r\n  - [ ] maybe_uninit_write_slice\r\n  - [ ] mixed_integer_ops\r\n  - [ ] nonnull_slice_from_raw_parts\r\n  - [ ] portable_simd\r\n  - [ ] ptr_as_uninit\r\n  - [ ] raw_os_nonzero\r\n  - [ ] slice_ptr_get\r\n- Not yet stable alloc features:\r\n  - [ ] alloc_layout_extra\r\n  - [ ] allocator_api\r\n  - [ ] get_mut_unchecked\r\n  - [ ] new_uninit\r\n  - [ ] toowned_clone_into\r\n  - [ ] try_reserve_kind\r\n  - [ ] vec_into_raw_parts\r\n- core::panic:\r\n  - [ ] panic_info_message\r\n  - [ ] panic_internals\r\n  - [ ] panic_can_unwind\r\n- Core's internals: (Should we make some of these public/stable?)\r\n  - [ ] char_internals\r\n  - [ ] core_intrinsics\r\n  - [ ] hashmap_internals\r\n  - [ ] std_internals\r\n  - [ ] str_internals\r\n- The unwind crate:\r\n  - [ ] panic_unwind\r\n- These become unnecessary if we move `trait Error` to core:\r\n  - [ ] array_error_internals\r\n  - [ ] char_error_internals\r\n  - [ ] int_error_internals\r\n  - [ ] duration_checked_float\r\n  - [ ] map_try_insert\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94971/timeline", "performed_via_github_app": null, "state_reason": null}