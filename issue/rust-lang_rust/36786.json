{"url": "https://api.github.com/repos/rust-lang/rust/issues/36786", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36786/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36786/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36786/events", "html_url": "https://github.com/rust-lang/rust/issues/36786", "id": 179601889, "node_id": "MDU6SXNzdWUxNzk2MDE4ODk=", "number": 36786, "title": "Cannot call a Vec<Box<Fn()>> without explicit dereferencing", "user": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-27T20:18:44Z", "updated_at": "2017-11-12T19:43:51Z", "closed_at": "2016-09-30T14:35:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This code works:\n\n``` rust\nfn main() {\n    let func: Box<Fn()> = Box::new(|| println!(\"called\"));\n    func();\n}\n```\n\nAs does placing it in an array:\n\n``` rust\nfn main() {\n    let func: [Box<Fn()>; 1] = [Box::new(|| println!(\"called\"))];\n    func[0]();\n}\n```\n\nHowever, using a `Vec` fails:\n\n``` rust\nfn main() {\n    let func: Vec<Box<Fn()>> = vec![Box::new(|| println!(\"called\"))];\n    func[0](); // error: expected function, found `Box<std::ops::Fn()>`\n}\n```\n\nInstead, it must be explicitly dereferenced:\n\n``` rust\nfn main() {\n    let func: Vec<Box<Fn()>> = vec![Box::new(|| println!(\"called\"))];\n    (*func[0])();\n}\n```\n\nIt's even more annoying for `Vec<Box<FnMut()>>`:\n\n``` rust\nfn main() {\n    let mut func: Vec<Box<FnMut()>> = vec![Box::new(|| println!(\"called\"))];\n    // func[0](); // expected function, found `Box<std::ops::FnMut()>`\n    // (*func[0])(); // cannot borrow immutable `Box` content as mutable\n    (*&mut func[0])();\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36786/timeline", "performed_via_github_app": null, "state_reason": "completed"}