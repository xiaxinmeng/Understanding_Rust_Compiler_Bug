{"url": "https://api.github.com/repos/rust-lang/rust/issues/2805", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2805/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2805/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2805/events", "html_url": "https://github.com/rust-lang/rust/issues/2805", "id": 5438617, "node_id": "MDU6SXNzdWU1NDM4NjE3", "number": 2805, "title": "Bindgen-based build tool that creates self-contained hybrid crates from foreign libraries", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-07-05T07:23:10Z", "updated_at": "2015-01-13T09:11:20Z", "closed_at": "2015-01-13T09:11:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I build bindings to foreign libraries now I prefer to build static native libraries and link them statically into the rust crate. This is a very convenient form for foreign libraries to be in because then you don't have to worry about native dynamic linking rules - everything is a rust crate and follows rust rules. Treating foreign libraries as crates is also potentially convenient for build tools like cargo, which currently has little or no support for them.\n\nThe process of constructing this type of hybrid crate is pretty straightforward but there isn't any language or tool support for it.\nWhat I want is a little library that, given the proper configuration, will\n- Run custom build logic to generate a static library archive file at a specific location\n- Run bindgen to generate the rust bindings\n- Output the proper set of attributes to make rust find and link to the static library\n\nThis could start out as a standalone build tool, but would need to end up compatible with cargo, and possibly even a rustc plugin that does the building, linking and bindgenating.\n", "closed_by": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2805/timeline", "performed_via_github_app": null, "state_reason": "completed"}