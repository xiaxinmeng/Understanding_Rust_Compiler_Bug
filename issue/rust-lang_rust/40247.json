{"url": "https://api.github.com/repos/rust-lang/rust/issues/40247", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40247/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40247/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40247/events", "html_url": "https://github.com/rust-lang/rust/issues/40247", "id": 211815313, "node_id": "MDU6SXNzdWUyMTE4MTUzMTM=", "number": 40247, "title": "Panic compiling futures code with impl trait in nightly", "user": {"login": "OneSadCookie", "id": 37714, "node_id": "MDQ6VXNlcjM3NzE0", "avatar_url": "https://avatars.githubusercontent.com/u/37714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OneSadCookie", "html_url": "https://github.com/OneSadCookie", "followers_url": "https://api.github.com/users/OneSadCookie/followers", "following_url": "https://api.github.com/users/OneSadCookie/following{/other_user}", "gists_url": "https://api.github.com/users/OneSadCookie/gists{/gist_id}", "starred_url": "https://api.github.com/users/OneSadCookie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OneSadCookie/subscriptions", "organizations_url": "https://api.github.com/users/OneSadCookie/orgs", "repos_url": "https://api.github.com/users/OneSadCookie/repos", "events_url": "https://api.github.com/users/OneSadCookie/events{/privacy}", "received_events_url": "https://api.github.com/users/OneSadCookie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-03T22:08:43Z", "updated_at": "2020-03-10T14:15:01Z", "closed_at": "2020-03-10T08:22:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some futures code that causes a compiler panic:\r\nhttps://github.com/OneSadCookie/padgrid\r\n(disclaimer: I have no idea if my code makes sense!)\r\n\r\nSnippet of the offending code:\r\n```rust\r\nfn cell_desc_to_cell(\r\n    cell_desc: String,\r\n    handle: tokio_core::reactor::Handle,\r\n) -> impl Future<Item=GridCell, Error=PadGridError> {\r\n    let fallback_cell = match cell_desc.len() {\r\n        0 => { GridCell::Empty }\r\n        1 => { GridCell::Annotation(cell_desc.chars().nth(0).unwrap()) },\r\n        _ => { GridCell::Annotation('?') }\r\n    };\r\n    future::result(cell_desc.parse::<usize>()).and_then(move |id| {\r\n        monster_icon(id, handle).map(move |image| {\r\n            GridCell::Icon(image)\r\n        }).or_else(move |_| {\r\n            Ok(GridCell::Annotation('?'))\r\n        })\r\n    }).or_else(move |_| -> Result<GridCell, PadGridError> {\r\n        Ok(fallback_cell)\r\n    })\r\n}\r\n\r\nfn row_desc_to_cells(\r\n    row_desc: Vec<String>,\r\n    handle: tokio_core::reactor::Handle\r\n) -> impl Future<Item=Vec<GridCell>, Error=PadGridError> {\r\n    let handles = std::iter::repeat(handle);\r\n    let cell_futures = row_desc.into_iter().zip(handles).map(move |(cell_desc, handle)| {\r\n        cell_desc_to_cell(cell_desc, handle)\r\n    });\r\n    future::join_all(cell_futures)\r\n}\r\n\r\nfn grid_desc_to_cells(\r\n    grid_desc: Vec<Vec<String>>,\r\n    handle: tokio_core::reactor::Handle\r\n) -> impl Future<Item=Vec<Vec<GridCell>>, Error=PadGridError> {\r\n    let handles = std::iter::repeat(handle);\r\n    let row_futures = grid_desc.into_iter().zip(handles).map(move |(row_desc, handle)| {\r\n        row_desc_to_cells(row_desc, handle)\r\n    });\r\n    future::join_all(row_futures)\r\n}\r\n```\r\n(full source in the repo above)\r\n\r\nThe panic log:\r\n```\r\nerror: internal compiler error: src/librustc_trans/common.rs:473: Encountered er\r\nror `Unimplemented` selecting `Binder(<std::vec::Vec<futures::future::join_all::\r\nElemState<futures::OrElse<futures::AndThen<futures::FutureResult<usize, std::num\r\n::ParseIntError>, futures::OrElse<futures::Map<futures::AndThen<futures::OrElse<\r\nfutures::FutureResult<std::fs::File, PadGridError>, futures::OrElse<futures::And\r\nThen<futures::AndThen<futures::AndThen<futures::future::FromErr<hyper::client::F\r\nutureResponse, PadGridError>, std::result::Result<hyper::client::Response, PadGr\r\nidError>, [closure@src/main.rs:79:41: 85:6 url_string:std::string::String]>, fut\r\nures::AndThen<futures::AndThen<futures::future::FromErr<futures::FutureResult<st\r\nd::fs::File, std::io::Error>, PadGridError>, futures::future::FromErr<futures::s\r\ntream::Fold<hyper::Body, [closure@src/main.rs:62:32: 67:10], std::result::Result\r\n<std::fs::File, std::io::Error>, std::fs::File>, PadGridError>, [closure@src/mai\r\nn.rs:61:86: 68:6 res:hyper::client::Response]>, std::result::Result<(), PadGridE\r\nrror>, [closure@src/main.rs:68:17: 68:28]>, [closure@src/main.rs:85:17: 87:6 id:\r\nusize]>, futures::FutureResult<std::fs::File, PadGridError>, [closure@src/main.r\r\ns:87:17: 90:6 id:usize]>, std::result::Result<std::fs::File, PadGridError>, [clo\r\nsure@src/main.rs:90:16: 94:6 id:usize]>, [closure@src/main.rs:101:33: 103:6 id:u\r\nsize, handle:tokio_core::reactor::Handle]>, std::result::Result<image::DynamicIm\r\nage, PadGridError>, [closure@src/main.rs:110:44: 112:6]>, [closure@src/main.rs:1\r\n50:38: 152:10]>, std::result::Result<GridCell, std::num::ParseIntError>, [closur\r\ne@src/main.rs:152:20: 154:10]>, [closure@src/main.rs:149:57: 155:6 handle:tokio_\r\ncore::reactor::Handle]>, std::result::Result<GridCell, PadGridError>, [closure@s\r\nrc/main.rs:155:16: 157:6 fallback_cell:GridCell]>>> as std::iter::IntoIterator>)\r\n` during trans\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:376\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   1: rustc::session::span_bug_fmt\r\n   2: rustc_trans::common::fulfill_obligation::{{closure}}::{{closure}}\r\n   3: rustc_trans::common::fulfill_obligation\r\n   4: rustc_trans::collector::do_static_dispatch\r\n   5: <rustc_trans::collector::MirNeighborCollector<'a, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_operand\r\n   6: <rustc_trans::collector::MirNeighborCollector<'a, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_terminator_kind\r\n   7: rustc::mir::visit::Visitor::visit_mir\r\n   8: rustc_trans::collector::collect_neighbours\r\n   9: rustc_trans::collector::collect_items_rec\r\n  10: rustc_trans::collector::collect_items_rec\r\n  11: rustc_trans::collector::collect_items_rec\r\n  12: rustc_trans::collector::collect_items_rec\r\n  13: rustc_trans::collector::collect_items_rec\r\n  14: rustc_trans::collector::collect_items_rec\r\n  15: rustc_trans::collector::collect_items_rec\r\n  16: rustc_trans::collector::collect_items_rec\r\n  17: rustc_trans::collector::collect_items_rec\r\n  18: rustc_trans::collector::collect_items_rec\r\n  19: rustc_trans::collector::collect_items_rec\r\n  20: rustc_trans::collector::collect_items_rec\r\n  21: rustc_trans::collector::collect_items_rec\r\n  22: rustc_trans::collector::collect_items_rec\r\n  23: rustc_trans::base::collect_and_partition_translation_items::{{closure}}\r\n  24: rustc_trans::base::collect_and_partition_translation_items\r\n  25: rustc_trans::base::trans_crate\r\n  26: rustc_driver::driver::phase_4_translate_to_llvm\r\n  27: rustc_driver::driver::compile_input::{{closure}}\r\n  28: rustc_driver::driver::phase_3_run_analysis_passes::{{closure}}\r\n  29: rustc_driver::driver::phase_3_run_analysis_passes\r\n  30: rustc_driver::driver::compile_input\r\n  31: rustc_driver::run_compiler\r\n  32: std::panicking::try::do_call\r\n  33: __rust_maybe_catch_panic\r\n  34: <F as alloc::boxed::FnBox<A>>::call_box\r\n  35: std::sys::imp::thread::Thread::new::thread_start\r\n  36: _pthread_body\r\n  37: _pthread_start\r\n\r\nerror: Could not compile `padgrid`.\r\n```\r\n\r\ncompiler version:\r\n```\r\nrustc --version --verbose\r\nrustc 1.17.0-nightly (c0b7112ba 2017-03-02)\r\nbinary: rustc\r\ncommit-hash: c0b7112ba246d96f253ba845d91f36c0b7398e42\r\ncommit-date: 2017-03-02\r\nhost: x86_64-apple-darwin\r\nrelease: 1.17.0-nightly\r\nLLVM version: 3.9\r\n```", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40247/timeline", "performed_via_github_app": null, "state_reason": "completed"}