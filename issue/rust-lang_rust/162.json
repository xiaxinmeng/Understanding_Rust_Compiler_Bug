{"url": "https://api.github.com/repos/rust-lang/rust/issues/162", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/162/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/162/events", "html_url": "https://github.com/rust-lang/rust/issues/162", "id": 318273, "node_id": "MDU6SXNzdWUzMTgyNzM=", "number": 162, "title": "Back-edge check (Semant.is_back_edge) is too strong", "user": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2010-09-16T00:13:28Z", "updated_at": "2010-09-22T01:31:46Z", "closed_at": "2010-09-22T01:31:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The back-edge check to prevent infinitely nested tag types rejects some valid programs, namely those that look like this:\n\n```\ntag a { ... }\ntag b { FOO(a); }\n```\n\nThe order of the tag declarations must be switched.\n\nInstead of comparing opaque IDs, we could instead do the following: In the Semant context, store a well-ordering on every tag type. Every time a type /a/ is contained in a type /b/ without boxing, we declare that /a/ < /b/. Then boxed back-pointers from /b/ to /a/ result in opaque types. Any contradiction (declaring that /b/ < /a/ when /a/ < /b/ is already established) results in an error, because a type would have infinite size.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/162/timeline", "performed_via_github_app": null, "state_reason": "completed"}