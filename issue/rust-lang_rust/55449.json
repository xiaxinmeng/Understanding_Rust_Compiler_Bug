{"url": "https://api.github.com/repos/rust-lang/rust/issues/55449", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55449/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55449/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55449/events", "html_url": "https://github.com/rust-lang/rust/issues/55449", "id": 374781329, "node_id": "MDU6SXNzdWUzNzQ3ODEzMjk=", "number": 55449, "title": "ICE with nightly when compiling hyper 0.12.13", "user": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-28T18:05:28Z", "updated_at": "2018-10-28T18:09:24Z", "closed_at": "2018-10-28T18:09:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This happens when it tries to compile hyper 0.12.13.\r\n\r\n```\r\nthread 'main' panicked at 'librustc/hir/map/hir_id_validator.rs:31:                  \r\nHirIdValidator: The recorded owner of path segment super (id=36924) is ::server[0]::conn[0]::{{?}}[34] instead of ::server[0]::conn[0]::{{?}}[34]::{{?}}[0]\r\nHirIdValidator: Same HirId ::server[0]::conn[0]::{{?}}[34]::{{?}}[0]/2 assigned for nodes path segment super (id=36924) and path segment spawn_all (id=89958)', librustc/util/bug.rs:47:26\r\nstack backtrace:                                                                     \r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace                      \r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49                        \r\n   1: std::sys_common::backtrace::_print                                             \r\n             at libstd/sys_common/backtrace.rs:71                                    \r\n   2: std::panicking::default_hook::{{closure}}                                      \r\n             at libstd/sys_common/backtrace.rs:59                                    \r\n             at libstd/panicking.rs:211                                              \r\n   3: std::panicking::default_hook                                                   \r\n             at libstd/panicking.rs:227                                              \r\n   4: rustc::util::common::panic_hook                                                \r\n   5: std::panicking::rust_panic_with_hook                                           \r\n             at libstd/panicking.rs:480                                              \r\n   6: std::panicking::begin_panic                                                    \r\n   7: rustc::util::bug::opt_span_bug_fmt::{{closure}}                                \r\n   8: rustc::ty::context::tls::with_opt::{{closure}}                                 \r\n   9: rustc::ty::context::tls::with_context_opt                                      \r\n  10: rustc::ty::context::tls::with_opt                                              \r\n  11: rustc::util::bug::opt_span_bug_fmt                                             \r\n  12: rustc::util::bug::bug_fmt                                                      \r\n  13: rustc::hir::map::hir_id_validator::check_crate                                 \r\n  14: rustc::hir::map::map_crate                                                     \r\n  15: rustc::util::common::time                                                      \r\n  16: rustc_driver::driver::compile_input                                            \r\n  17: rustc_driver::run_compiler_with_pool                                           \r\n  18: rustc_driver::driver::spawn_thread_pool                                        \r\n  19: rustc_driver::run_compiler                                                     \r\n  20: <scoped_tls::ScopedKey<T>>::set                                                \r\n  21: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  22: __rust_maybe_catch_panic                                                       \r\n             at libpanic_unwind/lib.rs:102                                           \r\n  23: rustc_driver::run                                                              \r\n  24: rustc_driver::main                                                             \r\n  25: std::rt::lang_start::{{closure}}                                               \r\n  26: std::panicking::try::do_call                                                   \r\n             at libstd/rt.rs:59                                                      \r\n             at libstd/panicking.rs:310                                              \r\n  27: __rust_maybe_catch_panic                                                       \r\n             at libpanic_unwind/lib.rs:102                                           \r\n  28: std::rt::lang_start_internal                                                   \r\n             at libstd/panicking.rs:289                                              \r\n             at libstd/panic.rs:392                                                  \r\n             at libstd/rt.rs:58                                                      \r\n  29: main                                                                           \r\n  30: __libc_start_main                                                              \r\n  31: <unknown>                                                                      \r\nquery stack during panic:                                                            \r\nend of query stack                                                                   \r\n                                                                                     \r\nerror: internal compiler error: unexpected panic                                     \r\n                                                                                     \r\nnote: the compiler unexpectedly panicked. this is a bug.                             \r\n                                                                                     \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n                                                                                     \r\nnote: rustc 1.31.0-nightly (cae6efc37 2018-10-27) running on x86_64-unknown-linux-gnu\r\n                                                                                     \r\nnote: compiler flags: -C debuginfo=2 --crate-type lib                                \r\n                                                                                     \r\nnote: some of the compiler flags provided by cargo are hidden                        \r\n                                                                                     \r\nerror: Could not compile `hyper`.                        \r\n```\r\n\r\n```\r\nrustc 1.31.0-nightly (cae6efc37 2018-10-27)\r\nbinary: rustc\r\ncommit-hash: cae6efc37d70ab7d353e6ab9ce229d59a65ed643\r\ncommit-date: 2018-10-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.31.0-nightly\r\nLLVM version: 8.0\r\n```", "closed_by": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55449/timeline", "performed_via_github_app": null, "state_reason": "completed"}