{"url": "https://api.github.com/repos/rust-lang/rust/issues/84877", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84877/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84877/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84877/events", "html_url": "https://github.com/rust-lang/rust/issues/84877", "id": 874822226, "node_id": "MDU6SXNzdWU4NzQ4MjIyMjY=", "number": 84877, "title": "Standard library documentation for alternatives to [T]::contains suggests Borrow is needed when it is not", "user": {"login": "jimblandy", "id": 751272, "node_id": "MDQ6VXNlcjc1MTI3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/751272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimblandy", "html_url": "https://github.com/jimblandy", "followers_url": "https://api.github.com/users/jimblandy/followers", "following_url": "https://api.github.com/users/jimblandy/following{/other_user}", "gists_url": "https://api.github.com/users/jimblandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimblandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimblandy/subscriptions", "organizations_url": "https://api.github.com/users/jimblandy/orgs", "repos_url": "https://api.github.com/users/jimblandy/repos", "events_url": "https://api.github.com/users/jimblandy/events{/privacy}", "received_events_url": "https://api.github.com/users/jimblandy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-05-03T18:55:52Z", "updated_at": "2021-05-05T20:07:26Z", "closed_at": "2021-05-05T20:07:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The documentation for `[T]::contains where T: PartialEq<T>` suggests that, if this method is not applicable because the type you need to compare with is not exactly `T`, you should use `.iter().any()`. This is good advice, but it goes on to suggest that somehow a `Borrow` implementation is a necessary part of the solution, when it is not.\r\n\r\nThe documentation should suggest the use of `iter().any` without mentioning `Borrow`.\r\n\r\nSpecifically, the documentation says:\r\n\r\n> If you do not have an &T, but just an &U such that T: Borrow<U> (e.g. String: Borrow<str>), you can use iter().any:\r\n\r\n```\r\nlet v = [String::from(\"hello\"), String::from(\"world\")]; // slice of `String`\r\nassert!(v.iter().any(|e| e == \"hello\")); // search with `&str`\r\nassert!(!v.iter().any(|e| e == \"hi\"));\r\n```\r\n\r\nThis code works because `String` has an explicit implementation of `PartialEq<str>` (note, no `&`), not because it implements `Borrow<str>`. As far as I know, `Borrow` is never invoked implicitly (it's not a lang item), and it doesn't help one use `==` in this way. For example:\r\n\r\n```\r\n#![allow(unused)]\r\nuse std::borrow::Borrow;\r\n\r\n#[derive(PartialEq)]\r\nstruct S(i32);\r\n\r\n#[derive(PartialEq)]\r\nstruct T(S);\r\n\r\nimpl Borrow<S> for T {\r\n    fn borrow(&self) -> &S {\r\n        &self.0\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let v = [T(S(10)), T(S(20))];\r\n    assert!(v.iter().any(|e| e == &S(10)));\r\n    assert!(!v.iter().any(|e| e == &S(15)));\r\n}\r\n```\r\n\r\nThis fails:\r\n\r\n```\r\nerror[E0277]: can't compare `T` with `S`\r\n  --> src/main.rs:18:32\r\n   |\r\n18 |     assert!(v.iter().any(|e| e == &S(10)));\r\n   |                                ^^ no implementation for `T == S`\r\n   |\r\n   = help: the trait `PartialEq<S>` is not implemented for `T`\r\n   = note: required because of the requirements on the impl of `PartialEq<&S>` for `&T`\r\n\r\nerror[E0277]: can't compare `T` with `S`\r\n  --> src/main.rs:19:33\r\n   |\r\n19 |     assert!(!v.iter().any(|e| e == &S(15)));\r\n   |                                 ^^ no implementation for `T == S`\r\n   |\r\n   = help: the trait `PartialEq<S>` is not implemented for `T`\r\n   = note: required because of the requirements on the impl of `PartialEq<&S>` for `&T`\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84877/timeline", "performed_via_github_app": null, "state_reason": "completed"}