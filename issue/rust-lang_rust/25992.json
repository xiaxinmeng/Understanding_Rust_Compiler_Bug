{"url": "https://api.github.com/repos/rust-lang/rust/issues/25992", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/25992/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/25992/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/25992/events", "html_url": "https://github.com/rust-lang/rust/issues/25992", "id": 84730618, "node_id": "MDU6SXNzdWU4NDczMDYxOA==", "number": 25992, "title": "Support channels with multiple receivers", "user": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-03T19:19:44Z", "updated_at": "2015-06-03T22:29:49Z", "closed_at": "2015-06-03T20:01:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be useful if rust provided a channel that supported a single sender and multiple receivers. Specifically, a channel where any item sent on the channel is received by exactly one receiver (i.e. not broadcast).\n\nOne example of where this might be used is to have a worker pool for a TCP server:\n\n``` rust\nuse std::net;\nuse std::thread;\nuse std::sync::mpsc;\n\nlet listener = net::TcpListener::bind(\"127.0.0.1:80\").unwrap();\n\nfn handle_clients(streams: mpsc::Receiver<net::TcpStream>) {\n    for s in streams.iter() {\n      // handle s\n    }\n}\n\nlet (tx, rx) = mpsc::channel();\nlet pool = (1..10).map(|_| {\n  let local_rx = rx.clone();\n  thread::spawn(move || {\n    handle_clients(local_rx);\n  });\n}).collect();\n\n// accept connections and process them, spawning a new thread for each one\nfor stream in listener.incoming() {\n    match stream {\n        Ok(stream) => {\n            tx.send(stream);\n        }\n        Err(e) => { /* connection failed */ }\n    }\n}\n\n// close the socket server\ndrop(listener);\n```\n\nSince `Receiver` is not `Sync` nor `Copy`, this obviously doesn't currently work. There has been some discussion in #2158 on a similar topic, though the objections there seem to be about full-duplex channels rather than single-writer-multi-reader channels.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/25992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/25992/timeline", "performed_via_github_app": null, "state_reason": "completed"}