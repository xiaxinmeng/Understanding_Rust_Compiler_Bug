{"url": "https://api.github.com/repos/rust-lang/rust/issues/19847", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19847/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19847/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19847/events", "html_url": "https://github.com/rust-lang/rust/issues/19847", "id": 51928261, "node_id": "MDU6SXNzdWU1MTkyODI2MQ==", "number": 19847, "title": " panicked at 'assertion failed: !substs.has_regions_escaping_depth(0)'", "user": {"login": "micmarsh", "id": 629330, "node_id": "MDQ6VXNlcjYyOTMzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/629330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micmarsh", "html_url": "https://github.com/micmarsh", "followers_url": "https://api.github.com/users/micmarsh/followers", "following_url": "https://api.github.com/users/micmarsh/following{/other_user}", "gists_url": "https://api.github.com/users/micmarsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/micmarsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micmarsh/subscriptions", "organizations_url": "https://api.github.com/users/micmarsh/orgs", "repos_url": "https://api.github.com/users/micmarsh/repos", "events_url": "https://api.github.com/users/micmarsh/events{/privacy}", "received_events_url": "https://api.github.com/users/micmarsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-14T19:07:35Z", "updated_at": "2015-01-16T18:25:32Z", "closed_at": "2015-01-16T18:25:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI'm encountering the above mentioned compiler error when I try to compile this code:\n\n``` rust\n    use std::io::fs;\n\n    pub fn all_entry_names(journal_dir: &str) -> Option<Vec<&str>> {\n        let dir = Path::new(\"/my/path/\");\n        if let Ok(files) = fs::readdir(&dir) {\n            let mut unsorted:Vec<&str> = paths_to_entries(files.iter());\n            Some (unsorted.sort_by(|x, y| y.cmp(x)));\n        }\n        None\n    }\n\n    fn paths_to_entries (paths:Iterator<&Path>) -> Vec<&str> {\n        paths.filter (|x| x.is_file())\n            .map (|x| x.filename_str())\n            .filter (|x| x.is_some())\n            .map (|x| x.unwrap())\n            .collect()\n    }\n\n    fn main() {\n\n    } \n```\n\nWith the following backtrace:\n\n```\nstack backtrace:\n   1:     0x7f4e34927540 - rt::backtrace::imp::write::heed5901f9756dd23BOx\n   2:     0x7f4e3492a780 - failure::on_fail::ha44d264deefff4481fy\n   3:     0x7f4e3457ba60 - unwind::begin_unwind_inner::hbf982fb3a6122da9CJc\n   4:     0x7f4e33961940 - unwind::begin_unwind::h15302485130000882677\n   5:     0x7f4e339e8080 - check::FnCtxt<'a, 'tcx>::add_trait_obligations_for_generics::hee19374e63476b59unm\n   6:     0x7f4e339e6330 - check::wf::BoundsChecker<'cx, 'tcx>.TypeFolder<'tcx>::fold_ty::h27a9f4d3e5ac27faK6i\n   7:     0x7f4e339e6330 - check::wf::BoundsChecker<'cx, 'tcx>.TypeFolder<'tcx>::fold_ty::h27a9f4d3e5ac27faK6i\n   8:     0x7f4e339e1df0 - check::wf::CheckTypeWellFormedVisitor<'ccx, 'tcx>::check_item_type::closure.29576\n   9:     0x7f4e339de760 - check::wf::CheckTypeWellFormedVisitor<'ccx, 'tcx>::with_fcx::h1f881cc9ec590bdcvSi\n  10:     0x7f4e339e4800 - check::wf::CheckTypeWellFormedVisitor<'ccx, 'tcx>.Visitor<'v>::visit_item::h783b9004994cf65012i\n  11:     0x7f4e33dfc930 - check_crate::closure.43673\n  12:     0x7f4e33df9200 - util::common::time::h16516841138721642264\n  13:     0x7f4e33df84d0 - check_crate::h601dd3cedc4d9d9bDUy\n  14:     0x7f4e34d5a3f0 - driver::phase_3_run_analysis_passes::h89150347d25ccb80Cta\n  15:     0x7f4e34d490b0 - driver::compile_input::hdc87225d47b03d10pba\n  16:     0x7f4e34de7e20 - run_compiler::hac4563508ec17f56EYb\n  17:     0x7f4e34de7d10 - run::closure.21548\n  18:     0x7f4e34df9750 - task::TaskBuilder::try_future::closure.23002\n  19:     0x7f4e348ff9c0 - task::TaskBuilder::spawn_internal::closure.30612\n  20:     0x7f4e34579700 - task::Task::spawn::closure.5729\n  21:     0x7f4e345d6f50 - rust_try_inner\n  22:     0x7f4e345d6f40 - rust_try\n  23:     0x7f4e345797e0 - unwind::try::hd503f9309b2b1ec2Tyc\n  24:     0x7f4e345795a0 - task::Task::run::h7ea5fe2114c20f68fKb\n  25:     0x7f4e34579190 - task::Task::spawn::closure.5705\n  26:     0x7f4e3457abe0 - thread::thread_start::h5e2446fe7cf0a4f1w1b\n  27:     0x7f4e2f3b90c0 - start_thread\n  28:     0x7f4e3423f2d9 - __clone\n  29:                0x0 - <unknown>\n```\n\nand version information:\n\n```\nrustc 0.13.0-nightly (ffc111889 2014-12-12 21:07:19 +0000)\nbinary: rustc\ncommit-hash: ffc111889e93bcd38222d9d74a70fdc26a78fcb5\ncommit-date: 2014-12-12 21:07:19 +0000\nhost: x86_64-unknown-linux-gnu\nrelease: 0.13.0-nightly\n```\n", "closed_by": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19847/timeline", "performed_via_github_app": null, "state_reason": "completed"}