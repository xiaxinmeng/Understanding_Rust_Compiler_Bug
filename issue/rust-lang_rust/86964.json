{"url": "https://api.github.com/repos/rust-lang/rust/issues/86964", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86964/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86964/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86964/events", "html_url": "https://github.com/rust-lang/rust/issues/86964", "id": 939333985, "node_id": "MDU6SXNzdWU5MzkzMzM5ODU=", "number": 86964, "title": "std::net::Ipv4Addr parsing violates the \"strict\" form in IETF RFC 6943 Section 3.1.1.", "user": {"login": "zacknewman", "id": 15947783, "node_id": "MDQ6VXNlcjE1OTQ3Nzgz", "avatar_url": "https://avatars.githubusercontent.com/u/15947783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacknewman", "html_url": "https://github.com/zacknewman", "followers_url": "https://api.github.com/users/zacknewman/followers", "following_url": "https://api.github.com/users/zacknewman/following{/other_user}", "gists_url": "https://api.github.com/users/zacknewman/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacknewman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacknewman/subscriptions", "organizations_url": "https://api.github.com/users/zacknewman/orgs", "repos_url": "https://api.github.com/users/zacknewman/repos", "events_url": "https://api.github.com/users/zacknewman/events{/privacy}", "received_events_url": "https://api.github.com/users/zacknewman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2021-07-07T23:21:56Z", "updated_at": "2021-07-09T17:43:58Z", "closed_at": "2021-07-09T17:43:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the `std::net::Ipv4Addr` [documentation](https://doc.rust-lang.org/std/net/struct.Ipv4Addr.html), \"The four octets are in decimal notation, divided by . (this is called 'dot-decimal notation'). Notably, octal numbers and hexadecimal numbers are not allowed per IETF RFC 6943\"; however the parsing of the `&str` `127.0000.0.1` violates the \"strict\" form mentioned in [Section 3.1.1.](https://datatracker.ietf.org/doc/html/rfc6943#section-3.1.1)\u2014this form is what prohibits octal and hexadecimal numbers\u2014meanwhile the `&str` `127.0.0.001` conforms to it. IETF RFC 6943 Section 3.1.1. states:\r\n\r\n   If the af argument of inet_pton() is AF_INET, the src string shall\r\n   be in the standard IPv4 dotted-decimal form:\r\n\r\n   ddd.ddd.ddd.ddd\r\n\r\n   where \"ddd\" is a one to three digit decimal number between 0 and\r\n   255.  The inet_pton() function does not accept other formats (such\r\n   as the octal numbers, hexadecimal numbers, and fewer than four\r\n   numbers that inet_addr() accepts).\r\n   As shown above, inet_pton() uses what we will refer to as the\r\n   \"strict\" form of an IPv4 address literal.  Some platforms also use\r\n   the strict form with getaddrinfo() when the AI_NUMERICHOST flag is\r\n   passed to it.\r\n\r\nI tried this code:\r\n\r\n```\r\nuse std::net::Ipv4Addr;\r\nfn main() {\r\n\r\n    // This causes a panic despite violating the \"strict\" form\r\n    // mentioned in RFC 6943 Section 3.1.1. specifically\r\n    // the fact the second octet is represented as a 4-digit base-10\r\n    // number.\r\n    assert!(\"127.0000.0.1\".parse::<Ipv4Addr>().is_err());\r\n    // This causes a panic despite conforming to the \"strict\" form\r\n    // mentioned in RFC 6943 Section 3.1.1. specifically\r\n    // it is a string of exactly 4 octets separated by '.'\r\n    // where each octet is represented as a one-to-three digit\r\n    // base-10 number.\r\n    assert!(\"127.0.0.001\".parse::<Ipv4Addr>().is_ok())\r\n}\r\n```\r\n\r\nI expected to see this happen: both `assert!`s not causing a panic since the first `&str` has an octet represented by more than three base-10 numbers despite the requirement per RFC 6943 stating each octet be a \"one to three digit decimal number\". The second `&str` is valid per RFC 6943 since it is a string of exactly 4 octets separated by `.` where each octet is a \"one to three digit decimal number\".\r\n\r\nInstead, this happened: Both lines cause a panic.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0 (53cb7b09b 2021-06-17)\r\nbinary: rustc\r\ncommit-hash: 53cb7b09b00cbea8754ffb78e7e3cb521cb8af4b\r\ncommit-date: 2021-06-17\r\nhost: x86_64-apple-darwin\r\nrelease: 1.53.0\r\nLLVM version: 12.0.1\r\n```\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.55.0-nightly (885399992 2021-07-06)\r\nbinary: rustc\r\ncommit-hash: 885399992c4c1dde37b506b8507a7d69415646b9\r\ncommit-date: 2021-07-06\r\nhost: x86_64-apple-darwin\r\nrelease: 1.55.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nthread 'main' panicked at 'assertion failed: \\\"127.0000.0.1\\\".parse::<Ipv4Addr>().is_err()', src/main.rs:8:5\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/885399992c4c1dde37b506b8507a7d69415646b9/library/std/src/panicking.rs:515:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/885399992c4c1dde37b506b8507a7d69415646b9/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::panic\r\n             at /rustc/885399992c4c1dde37b506b8507a7d69415646b9/library/core/src/panicking.rs:50:5\r\n   3: playground::main\r\n             at /Users/zack/Documents/rust/playground/src/main.rs:8:5\r\n   4: core::ops::function::FnOnce::call_once\r\n             at /rustc/885399992c4c1dde37b506b8507a7d69415646b9/library/core/src/ops/function.rs:227:5\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "zacknewman", "id": 15947783, "node_id": "MDQ6VXNlcjE1OTQ3Nzgz", "avatar_url": "https://avatars.githubusercontent.com/u/15947783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacknewman", "html_url": "https://github.com/zacknewman", "followers_url": "https://api.github.com/users/zacknewman/followers", "following_url": "https://api.github.com/users/zacknewman/following{/other_user}", "gists_url": "https://api.github.com/users/zacknewman/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacknewman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacknewman/subscriptions", "organizations_url": "https://api.github.com/users/zacknewman/orgs", "repos_url": "https://api.github.com/users/zacknewman/repos", "events_url": "https://api.github.com/users/zacknewman/events{/privacy}", "received_events_url": "https://api.github.com/users/zacknewman/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86964/timeline", "performed_via_github_app": null, "state_reason": "completed"}