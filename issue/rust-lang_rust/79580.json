{"url": "https://api.github.com/repos/rust-lang/rust/issues/79580", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79580/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79580/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79580/events", "html_url": "https://github.com/rust-lang/rust/issues/79580", "id": 753844102, "node_id": "MDU6SXNzdWU3NTM4NDQxMDI=", "number": 79580, "title": "Warn when using `[foo; 0]` where `foo` is a non-const expression that evaluates to a `Drop` type", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 2408329107, "node_id": "MDU6TGFiZWwyNDA4MzI5MTA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-zst", "name": "A-zst", "color": "f7e101", "default": false, "description": "Area: Zero-sized types"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-11-30T22:16:45Z", "updated_at": "2022-08-31T10:17:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In #74836 it was discovered that `[foo; 0]` will leak `foo`, causing observable effects if `foo` has a destructor. In response #74857 was opened in order to warn users against using `[foo; 0]` to construct a zero-length array in favor of `[]`, but this was deemed to be overkill.\r\n\r\nHowever, since then some new information has emerged that I believe calls for re-evaluating this decision. The problem comes from the use  of array-repeat expressions in constant contexts. Consider the following program, which works on stable Rust today:\r\n\r\n```rust\r\nstruct Foo;\r\n\r\nimpl Drop for Foo {\r\n    fn drop(&mut self) {\r\n        println!(\"dropped!\")\r\n    }\r\n}\r\n\r\nconst FOO: Foo = Foo;\r\n\r\nfn main() {\r\n    println!(\"0 drops follow this\");\r\n    [FOO; 0];\r\n    println!(\"1 drops follow this\");\r\n    [FOO; 1];\r\n    println!(\"2 drops follow this\");\r\n    [FOO; 2];\r\n}\r\n```\r\n\r\nWhile the stabilization of array-repeat expressions on constant values was accidental (#79270), people appear to be in agreement that this behavior is correct: https://github.com/rust-lang/rust/pull/79270#issuecomment-735253236 . Specifically, it is considered correct that a constant array repeat expression `[FOO; N]` will run `FOO`'s destructor N times.\r\n\r\nConsider how this compares to the use of array-repeat expressions in non-constant contexts. For some non-constant expression `[foo; N]` where foo impls `Drop`:\r\n\r\n* When N is greater than 2, this will produce an insurmountable compile-time error (the compiler requires `Copy`, which is incompatible with `Drop`).\r\n\r\n* When N is 1, this will have identical results to the const-context array-repeat expression, and is not a problem.\r\n\r\n* When N is 0, this will run the destructor exactly once, which differs from the behavior of const-context array-repeat expressions, which will not run any destructor. (Technically this is contingent on #74836 being fixed, but everybody agrees that the current leaking behavior is incorrect).\r\n\r\nIn light of this divergence of behavior between const and non-const array-repeat expressions, it's worth discussing whether #74857 should be revived, especially since the fix is as simple as *not* using `[foo; 0]` and simply using `[]` instead.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79580/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79580/timeline", "performed_via_github_app": null, "state_reason": null}