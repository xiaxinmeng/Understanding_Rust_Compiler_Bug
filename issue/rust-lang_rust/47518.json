{"url": "https://api.github.com/repos/rust-lang/rust/issues/47518", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47518/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47518/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47518/events", "html_url": "https://github.com/rust-lang/rust/issues/47518", "id": 289277092, "node_id": "MDU6SXNzdWUyODkyNzcwOTI=", "number": 47518, "title": "Parallelize rustc via multi-process approach", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 9695584, "node_id": "MDU6TGFiZWw5Njk1NTg0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-concurrency", "name": "A-concurrency", "color": "f7e101", "default": false, "description": "Area: Concurrency related issues."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630799571, "node_id": "MDU6TGFiZWw2MzA3OTk1NzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compilemem", "name": "I-compilemem", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to memory usage during compilation."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-01-17T14:04:17Z", "updated_at": "2019-12-17T21:45:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "For big crates, the Rust compiler can be stuck in single-threaded execution for quite some time because only the last phase of compilation is properly parallelized. This issue describes one particular approach for making most of compilation parallel.\r\n\r\n## Basic Concept: Spawn multiple `rustc` processes that compile \"vertical slices\" of a crate\r\n\r\nThe compiler's internal architecture has become rather flexible and demand-driven over the last couple of years and one could imagine implementing an option for the compiler that allows it to just compile *part* of a crate. Given a deterministic partitioning for a crate, one could then run multiple compilation processes for compiling disjunct parts of a crate in parallel and then stitch those parts together in a final step. This is very similar to a traditional compiler & linker setup. \r\n\r\n### Advantages\r\n\r\n- The compiler itself could keep its current architecture that is optimized for single-threaded execution. This sidesteps the problem of having to either find one architecture that works well for both single- and multi-threaded settings or maintaining two purpose built architectures at the same time.\r\n- There has to be almost no coordination between the parallel processes, removing lots and lots of complexity from maintenance and reasoning about performance. \r\n- Using multiple processes potentially scales to multi-machine setups, something that might become relevant for big projects with distributed build systems.\r\n- The implementation of this feature can be confined to a small number of special modules instead of touching almost every aspect of the compiler.\r\n- If low memory consumption instead of short compile times is the priority then compiling parts serially instead of in parallel would reduce peak memory usage (as @Zoxc pointed out below).\r\n\r\n### Disadvantages\r\n\r\n- Overall, more redundant work will be done for compiling a single crate. Parsing, macro expansion, and coherence checking (to name a few) will be re-done by every process. Things that heavily rely on caching, like trait selection, will have to start from an empty cache for each process. (Note though that each individual process can run in incremental mode.)\r\n- Doing redundant things in parallel is likely to increase peak memory consumption. \r\n- The stitching phase does not work very well with our existing crate metadata format.\r\n- Error messages would have to be handled specially in order to avoid interleaving and duplication.\r\n\r\n### Conclusion\r\n\r\nI am not particularly advocating for following this approach. This issue is meant to provide input for a wider discussion on how to bring more parallelism to the compilation process. This approach is kind of brute-force. However, I have to say, after thinking about it a little I am surprised to actually find it viable `:)`\r\n\r\ncc @rust-lang/compiler ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47518/reactions", "total_count": 7, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 7, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47518/timeline", "performed_via_github_app": null, "state_reason": null}