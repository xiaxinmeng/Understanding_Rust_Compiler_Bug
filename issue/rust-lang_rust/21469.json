{"url": "https://api.github.com/repos/rust-lang/rust/issues/21469", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21469/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21469/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21469/events", "html_url": "https://github.com/rust-lang/rust/issues/21469", "id": 55028678, "node_id": "MDU6SXNzdWU1NTAyODY3OA==", "number": 21469, "title": "Threads with Arc<RefCell<T>>", "user": {"login": "Munksgaard", "id": 230613, "node_id": "MDQ6VXNlcjIzMDYxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/230613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Munksgaard", "html_url": "https://github.com/Munksgaard", "followers_url": "https://api.github.com/users/Munksgaard/followers", "following_url": "https://api.github.com/users/Munksgaard/following{/other_user}", "gists_url": "https://api.github.com/users/Munksgaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/Munksgaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Munksgaard/subscriptions", "organizations_url": "https://api.github.com/users/Munksgaard/orgs", "repos_url": "https://api.github.com/users/Munksgaard/repos", "events_url": "https://api.github.com/users/Munksgaard/events{/privacy}", "received_events_url": "https://api.github.com/users/Munksgaard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-01-21T14:55:15Z", "updated_at": "2015-07-09T13:13:25Z", "closed_at": "2015-01-23T02:53:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried doing the following\n\n``` rust\nuse std::thread::Thread;\nuse std::sync::Arc;\nuse std::cell::RefCell;\n\n\nfn main() {\n    let r = Arc::new(RefCell::new(42u8));\n    let r1 = r.clone();\n    let t = Thread::scoped(move || {\n        loop {\n            match r1.try_borrow_mut() {\n                Some(n) => { *n += 1 ; break }\n                _ => { }\n            }\n        }\n    });\n\n    t.join();\n    println!(\"{}\", *r.borrow_mut());\n}\n```\n\nRust complains:\n\n```\n$ rustc foo.rs\nfoo.rs:9:13: 9:27 error: the trait `core::marker::Sync` is not implemented for the type `core::cell::UnsafeCell<u8>`\nfoo.rs:9     let t = Thread::scoped(move || {\n                     ^~~~~~~~~~~~~~\nfoo.rs:9:13: 9:27 error: the trait `core::marker::Sync` is not implemented for the type `core::cell::UnsafeCell<usize\n>`                                                                                                                  \nfoo.rs:9     let t = Thread::scoped(move || {\n                     ^~~~~~~~~~~~~~\nerror: aborting due to 2 previous errors\n```\n\n(Note that my code doesn't involve any `UnsafeCell`s at all)\n\nI was under the impression that, to get a shared mutable state, you wrapped a RefCell in an Arc. The [docs](http://doc.rust-lang.org/std/cell) even mention that \"It's very common then to put a RefCell inside shared pointer types to reintroduce mutability\", right after mentioning `Arc` as a smart shared pointer type. However, @eddyb mentioned on IRC that that might not be the case and suggested that it might be a documentation issue.\n\n```\n$ rustc --version\nrustc 1.0.0-dev (3bf41dafc 2015-01-20 06:45:02 +0000)\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21469/timeline", "performed_via_github_app": null, "state_reason": "completed"}