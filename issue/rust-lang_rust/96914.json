{"url": "https://api.github.com/repos/rust-lang/rust/issues/96914", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96914/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96914/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96914/events", "html_url": "https://github.com/rust-lang/rust/issues/96914", "id": 1231548757, "node_id": "I_kwDOAAsO6M5JZ_FV", "number": 96914, "title": "NetBSD: backtrace support broken", "user": {"login": "0-wiz-0", "id": 2221844, "node_id": "MDQ6VXNlcjIyMjE4NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2221844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0-wiz-0", "html_url": "https://github.com/0-wiz-0", "followers_url": "https://api.github.com/users/0-wiz-0/followers", "following_url": "https://api.github.com/users/0-wiz-0/following{/other_user}", "gists_url": "https://api.github.com/users/0-wiz-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/0-wiz-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0-wiz-0/subscriptions", "organizations_url": "https://api.github.com/users/0-wiz-0/orgs", "repos_url": "https://api.github.com/users/0-wiz-0/repos", "events_url": "https://api.github.com/users/0-wiz-0/events{/privacy}", "received_events_url": "https://api.github.com/users/0-wiz-0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 311417590, "node_id": "MDU6TGFiZWwzMTE0MTc1OTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-netbsd", "name": "O-netbsd", "color": "6e6ec0", "default": false, "description": "Operating system: NetBSD"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-05-10T18:37:52Z", "updated_at": "2022-05-19T07:11:55Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nfn main() { panic!(\"explode!\") }                                                                                                                \r\n```\r\n\r\nI expected to see this happen: \r\n```\r\n$ rustc t.rs\r\n$ ./t\r\nthread 'main' panicked at 'explode!', t.rs:1:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n$ RUST_BACKTRACE=1 ./t\r\nthread 'main' panicked at 'explode!', t.rs:1:13\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: t::main\r\n   2: core::ops::function::FnOnce::call_once\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n(provided by a friendly Linux user)\r\n\r\nInstead, this happened (on NetBSD)\r\n\r\nI see this instead:\r\n```\r\n$ ./t    \r\nthread 'main' panicked at 'explode!', t.rs:1:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n$ RUST_BACKTRACE=1 ./t\r\nthread 'main' panicked at 'explode!', t.rs:1:13\r\nstack backtrace:\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n$ RUST_BACKTRACE=full ./t\r\nthread 'main' panicked at 'explode!', t.rs:1:13\r\nstack backtrace:\r\n   0:         0x6dc13726 - <unknown>\r\n   1:         0x6dc3790c - <unknown>\r\n   2:         0x6dc25ea5 - <unknown>\r\n   3:         0x6dc0c981 - <unknown>\r\n   4:         0x6dc0c581 - <unknown>\r\n   5:         0x6dc0ced1 - <unknown>\r\n   6:         0x6dc07a9e - <unknown>\r\n   7:         0x6dc07d85 - <unknown>\r\n   8:         0x6dc07a22 - <unknown>\r\n   9:         0x6dc07e79 - <unknown>\r\n  10:         0x6dc07f63 - <unknown>\r\n  11:         0x6dc07d29 - <unknown>\r\n  12:         0x6dc08749 - <unknown>\r\n  13:         0x6dc209a1 - <unknown>\r\n  14:         0x6dc08731 - <unknown>\r\n  15:         0x6dc07f03 - <unknown>\r\n  16:         0x6dc05b7d - <unknown>\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-unknown-netbsd\r\nrelease: 1.59.0\r\nLLVM version: 13.0.1\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\nYes, exactly that's the problem.\r\n\r\n</p>\r\n</details>\r\n\r\nOn the C level, I know that Linux provides the backtrace() family of functions in libc.\r\nNetBSD provides all the functions too, but you need to link against libexecinfo, see\r\nhttps://man.netbsd.org/backtrace.3\r\n\r\nSo I guess it's probably not too hard to add, I hope someone can take this on.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96914/timeline", "performed_via_github_app": null, "state_reason": null}