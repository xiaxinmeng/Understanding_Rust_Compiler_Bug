{"url": "https://api.github.com/repos/rust-lang/rust/issues/16630", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16630/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16630/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16630/events", "html_url": "https://github.com/rust-lang/rust/issues/16630", "id": 40721814, "node_id": "MDU6SXNzdWU0MDcyMTgxNA==", "number": 16630, "title": "CString's `as_ptr` is easy to get very wrong", "user": {"login": "spaolacci", "id": 3320120, "node_id": "MDQ6VXNlcjMzMjAxMjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3320120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spaolacci", "html_url": "https://github.com/spaolacci", "followers_url": "https://api.github.com/users/spaolacci/followers", "following_url": "https://api.github.com/users/spaolacci/following{/other_user}", "gists_url": "https://api.github.com/users/spaolacci/gists{/gist_id}", "starred_url": "https://api.github.com/users/spaolacci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spaolacci/subscriptions", "organizations_url": "https://api.github.com/users/spaolacci/orgs", "repos_url": "https://api.github.com/users/spaolacci/repos", "events_url": "https://api.github.com/users/spaolacci/events{/privacy}", "received_events_url": "https://api.github.com/users/spaolacci/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-20T17:18:11Z", "updated_at": "2014-08-20T20:37:37Z", "closed_at": "2014-08-20T20:37:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Whilst the documentation explicitly mentions the situation, precise scope is easy to get wrong.\n\n```\n// .as_ptr returns an internal pointer into the CString, and may be invalidated when the                                                                                        \n// CString falls out of scope (the destructor will run, freeing the allocation if there is                                                                                      \n// one).                                                                                                                                                                        \nlet s = \"foo\";                                                                                                                                                                  \nlet s1 = s.to_c_str(); // Ok.                                                                                                                                          \nlet s2 = s.to_c_str().as_ptr(); // Oops.                                                                                                                                        \n//         ^~~~ tmp CString falls out of scope.                                                                                                                                 \n\nlet (c1, c2) = unsafe{ (*s1.as_ptr(), *s2) };                                                                                                                                   \nprintln!(\"{}, {}\", c1, c2); //  Prints `102, 0'\n```\n\nThe same pattern is even easier to overlook in e.g `libc::open(filename.to_c_str().as_ptr(), ...)`.\n\nString's `with_c_str` should probably be preferred (or documented as preferred).\n", "closed_by": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16630/timeline", "performed_via_github_app": null, "state_reason": "completed"}