{"url": "https://api.github.com/repos/rust-lang/rust/issues/107265", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107265/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107265/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107265/events", "html_url": "https://github.com/rust-lang/rust/issues/107265", "id": 1555362100, "node_id": "I_kwDOAAsO6M5ctPE0", "number": 107265, "title": "Generic Constants Nightly breaks with Rust 1.68", "user": {"login": "JacobGorman613", "id": 35609098, "node_id": "MDQ6VXNlcjM1NjA5MDk4", "avatar_url": "https://avatars.githubusercontent.com/u/35609098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JacobGorman613", "html_url": "https://github.com/JacobGorman613", "followers_url": "https://api.github.com/users/JacobGorman613/followers", "following_url": "https://api.github.com/users/JacobGorman613/following{/other_user}", "gists_url": "https://api.github.com/users/JacobGorman613/gists{/gist_id}", "starred_url": "https://api.github.com/users/JacobGorman613/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JacobGorman613/subscriptions", "organizations_url": "https://api.github.com/users/JacobGorman613/orgs", "repos_url": "https://api.github.com/users/JacobGorman613/repos", "events_url": "https://api.github.com/users/JacobGorman613/events{/privacy}", "received_events_url": "https://api.github.com/users/JacobGorman613/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}, {"id": 5226739262, "node_id": "LA_kwDOAAsO6M8AAAABN4m2Pg", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-incomplete-features", "name": "requires-incomplete-features", "color": "76dcde", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-01-24T17:15:07Z", "updated_at": "2023-04-17T20:48:09Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a regression report! \ud83d\udc1b A regression is something that changed between versions of Rust but was not supposed to.\r\n\r\nPlease provide a short summary of the regression, along with any information you feel is relevant to replicate it.\r\n--> \r\n\r\nThe following code compiles on Rust 1.67 (nightly) but not on Rust 1.68 (nightly)\r\n\r\n### Code\r\n\r\n```rust\r\n#![allow(incomplete_features)]\r\n#![feature(generic_const_exprs)]\r\n\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n\r\n// FUNCTION THAT IS NOW BROKEN\r\nfn do_something<T: SuperTrait>() where [(); T::MyType::LEN]:, [(); T::SUPER_SIZE]:  {\r\n    let _ = T::do_something_super().to_bytes();\r\n}\r\n\r\n// Trait I implement for a few subtypes of my main type \"SuperTrait\"\r\ntrait MySerde {\r\n    const LEN: usize;\r\n\r\n    fn to_bytes(&self) -> [u8; Self::LEN];\r\n    fn from_bytes(bytes: [u8; Self::LEN]) -> Self;\r\n}\r\n\r\n// each subtrait would have its own requirements\r\ntrait SubTrait: MySerde {\r\n    // stuff\r\n}\r\n\r\n// We need a subtrait for constants or we get a cycle when defining SUPER_ARR\r\ntrait ConstantsForSuper {\r\n    const SUPER_SIZE: usize;\r\n}\r\n\r\n// in my actual example SuperTrait has several types implementing differeent subtraits\r\n// (all of which require serde)\r\ntrait SuperTrait: ConstantsForSuper where [(); Self::SUPER_SIZE]: {\r\n    type MyType: SubTrait;\r\n\r\n    const SUPER_ARR: [Self::MyType; Self::SUPER_SIZE];\r\n\r\n    fn do_something_super() -> Self::MyType;\r\n}\r\n```\r\n\r\n### Version it worked on\r\n\r\n<!--\r\nProvide the most recent version this worked on, for example:\r\n\r\nIt most recently worked on: Rust 1.47\r\n-->\r\n\r\nIt most recently worked on: 1.67\r\n\r\n### Version with regression\r\n\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.68.0-nightly (4781233a7 2023-01-16)\r\nbinary: rustc\r\ncommit-hash: 4781233a77e879e49cb5ce3c98d2abba6a6ade7a\r\ncommit-date: 2023-01-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.68.0-nightly\r\nLLVM version: 15.0.6\r\n```\r\n\r\n<!--\r\nDid the compiler crash? If so, please provide a backtrace.\r\n-->\r\n\r\n### Backtrace\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n/~/project$ RUST_BACKTRACE=1 cargo build\r\n   Compiling minimal_breakage v0.1.0 (/~/project)\r\nerror[E0391]: cycle detected when building an abstract representation for `do_something::{constant#0}`\r\n --> src/main.rs:9:45\r\n  |\r\n9 | fn do_something<T: SuperTrait>() where [(); T::MyType::LEN]:, [(); T::SUPER_SIZE]:  {\r\n  |                                             ^^^^^^^^^^^^^^\r\n  |\r\nnote: ...which requires building THIR for `do_something::{constant#0}`...\r\n --> src/main.rs:9:45\r\n  |\r\n9 | fn do_something<T: SuperTrait>() where [(); T::MyType::LEN]:, [(); T::SUPER_SIZE]:  {\r\n  |                                             ^^^^^^^^^^^^^^\r\nnote: ...which requires type-checking `do_something::{constant#0}`...\r\n --> src/main.rs:9:45\r\n  |\r\n9 | fn do_something<T: SuperTrait>() where [(); T::MyType::LEN]:, [(); T::SUPER_SIZE]:  {\r\n  |                                             ^^^^^^^^^^^^^^\r\n  = note: ...which again requires building an abstract representation for `do_something::{constant#0}`, completing the cycle\r\nnote: cycle used when checking that `do_something` is well-formed\r\n --> src/main.rs:9:1\r\n  |\r\n9 | fn do_something<T: SuperTrait>() where [(); T::MyType::LEN]:, [(); T::SUPER_SIZE]:  {\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0391`.\r\nerror: could not compile `minimal_breakage` due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<!--\r\nIf you know when this regression occurred, please add a line like below, replacing `{channel}` with one of stable, beta, or nightly.\r\n\r\n@rustbot modify labels: +regression-from-stable-to-{channel} -regression-untriaged\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107265/timeline", "performed_via_github_app": null, "state_reason": null}