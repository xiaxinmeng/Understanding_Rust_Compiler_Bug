{"url": "https://api.github.com/repos/rust-lang/rust/issues/80795", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80795/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80795/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80795/events", "html_url": "https://github.com/rust-lang/rust/issues/80795", "id": 781549750, "node_id": "MDU6SXNzdWU3ODE1NDk3NTA=", "number": 80795, "title": "Add a compiler check that `std::mem::size_of` isn\u2019t called on unsized types?", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2021-01-07T19:22:21Z", "updated_at": "2021-01-23T18:11:20Z", "closed_at": "2021-01-23T17:39:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While re-discovering #57893 (in #80783) and in particular while poking around in the world of all the wonderful ICEs that you can get once you\u2019ve convinced the compiler that a trait object is actually `Sized`, I noticed that calling `size_of` does actually still compile without any error. It returns `0`, e.g. see this example:\r\n```rust\r\ntrait IsEqual {\r\n    type To: ?Sized;\r\n}\r\nimpl<A: ?Sized> IsEqual for A {\r\n    type To = A;\r\n}\r\n\r\nfn main() {\r\n    argument_equal_to_sized_type::<dyn IsEqual<To = u64>>();\r\n}\r\n\r\nfn argument_equal_to_sized_type<T: ?Sized>()\r\nwhere\r\n    <T as IsEqual>::To: Sized,\r\n{\r\n    argument_sized::<T>();\r\n}\r\n\r\nfn argument_sized<T>() {\r\n    println!(\"{}\", std::any::type_name::<T>());\r\n    println!(\"{}\", std::mem::size_of::<T>());\r\n}\r\n```\r\n```\r\ndyn playground::IsEqual+To = u64\r\n0\r\n```\r\n\r\nI wonder what that value of `0` is good for! Couldn\u2019t it raise an ICE instead?\r\n\r\n@rustbot modify labels: T-compiler, C-enhancement, A-dst", "closed_by": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80795/timeline", "performed_via_github_app": null, "state_reason": "completed"}