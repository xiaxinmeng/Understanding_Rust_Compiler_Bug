{"url": "https://api.github.com/repos/rust-lang/rust/issues/106304", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106304/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106304/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106304/events", "html_url": "https://github.com/rust-lang/rust/issues/106304", "id": 1514806405, "node_id": "I_kwDOAAsO6M5aShyF", "number": 106304, "title": "\"help: remove the extra argument\" prints too much of the function arguments", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "open", "locked": false, "assignee": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2022-12-30T20:33:01Z", "updated_at": "2023-04-19T01:32:00Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=d6dfe3d605639255444883813f8376db\n\n```rust\nenum CargoMessage {\n    CompilerArtifact {\n        filenames: Vec<String>,\n        target: CargoTarget,\n        extra: bool,\n    }\n}\n\nstruct CargoTarget {\n    crate_types: Vec<String>,\n}\n\npub fn run_cargo() {\n    let is_debug_info = |_| true;\n    let is_dylib = |_| true;\n    let is_check = true;\n    let ok = stream_cargo(vec![], &mut |msg| {\n        let (filenames, crate_types) = match msg {\n            CargoMessage::CompilerArtifact {\n                filenames,\n                target: CargoTarget { crate_types },\n                ..\n            } => (filenames, crate_types),\n            _ => return,\n        };\n        for filename in filenames {\n            // Skip files like executables\n            if !(filename.ends_with(\".rlib\")\n                || filename.ends_with(\".lib\")\n                || filename.ends_with(\".a\")\n                || is_debug_info(&filename)\n                || is_dylib(&filename)\n                || (is_check && filename.ends_with(\".rmeta\")))\n            {\n                continue;\n            }\n        }\n    });\n}\n\npub fn stream_cargo(\n    cb: &mut dyn FnMut(CargoMessage),\n) -> bool {\n  true\n}\n```\n\nThe current output is:\n\n```\nerror[[E0061]](https://doc.rust-lang.org/stable/error-index.html#E0061): this function takes 1 argument but 2 arguments were supplied\n  --> src/lib.rs:17:14\n   |\n17 |     let ok = stream_cargo(vec![], &mut |msg| {\n   |              ^^^^^^^^^^^^ ------ argument of type `Vec<_>` unexpected\n   |\nnote: function defined here\n  --> src/lib.rs:41:8\n   |\n41 | pub fn stream_cargo(\n   |        ^^^^^^^^^^^^\n42 |     cb: &mut dyn FnMut(CargoMessage),\n   |     --------------------------------\nhelp: remove the extra argument\n   |\n17 ~     let ok = stream_cargo(&mut |msg| {\n18 +         let (filenames, crate_types) = match msg {\n19 +             CargoMessage::CompilerArtifact {\n20 +                 filenames,\n21 +                 target: CargoTarget { crate_types },\n22 +                 ..\n23 +             } => (filenames, crate_types),\n24 +             _ => return,\n25 +         };\n26 +         for filename in filenames {\n27 +             // Skip files like executables\n28 +             if !(filename.ends_with(\".rlib\")\n29 +                 || filename.ends_with(\".lib\")\n30 +                 || filename.ends_with(\".a\")\n31 +                 || is_debug_info(&filename)\n32 +                 || is_dylib(&filename)\n33 +                 || (is_check && filename.ends_with(\".rmeta\")))\n34 +             {\n35 +                 continue;\n36 +             }\n37 +         }\n38 ~     });\n   |\n\nFor more information about this error, try `rustc --explain E0061`.\n```\n\n<!-- The following is not always necessary. -->\nIdeally the output should look like:\n\n```\nerror[E0061]: this function takes 1 argument but 2 arguments were supplied\n  --> src/lib.rs:17:14\n   |\n17 |     let ok = stream_cargo(vec![], &mut |msg| {\n   |              ^^^^^^^^^^^^ ------ argument of type `Vec<_>` unexpected\n   |\nnote: function defined here\n  --> src/lib.rs:41:8\n   |\n41 | pub fn stream_cargo(\n   |        ^^^^^^^^^^^^\n42 |     cb: &mut dyn FnMut(CargoMessage),\n   |     --------------------------------\nhelp: remove the extra argument\n   |\n17 ~     let ok = stream_cargo(&mut |msg| {\n```\n\nPrinting the entire body of the closure is ... a bit much :laughing:\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"Ezrashaw\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106304/timeline", "performed_via_github_app": null, "state_reason": null}