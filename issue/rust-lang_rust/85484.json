{"url": "https://api.github.com/repos/rust-lang/rust/issues/85484", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85484/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85484/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85484/events", "html_url": "https://github.com/rust-lang/rust/issues/85484", "id": 895855580, "node_id": "MDU6SXNzdWU4OTU4NTU1ODA=", "number": 85484, "title": "\"overzealous\" check seems to be restricting pointers stored statically in integer types", "user": {"login": "robbie01", "id": 5222372, "node_id": "MDQ6VXNlcjUyMjIzNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5222372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robbie01", "html_url": "https://github.com/robbie01", "followers_url": "https://api.github.com/users/robbie01/followers", "following_url": "https://api.github.com/users/robbie01/following{/other_user}", "gists_url": "https://api.github.com/users/robbie01/gists{/gist_id}", "starred_url": "https://api.github.com/users/robbie01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robbie01/subscriptions", "organizations_url": "https://api.github.com/users/robbie01/orgs", "repos_url": "https://api.github.com/users/robbie01/repos", "events_url": "https://api.github.com/users/robbie01/events{/privacy}", "received_events_url": "https://api.github.com/users/robbie01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-05-19T20:28:34Z", "updated_at": "2021-07-17T11:14:16Z", "closed_at": "2021-07-17T11:14:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur. \r\n-->\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=85567c56739cb79d7c529ff2fd8f1700\r\n\r\n```rust\r\n#![feature(const_fn_fn_ptr_basics)]\r\n#![feature(const_fn_transmute)]\r\n#![allow(dead_code)]\r\n\r\n#[repr(C, packed)]\r\nstruct Header {\r\n    entry_point: u64,\r\n    stack: u64,\r\n    flags: u64,\r\n    tags: u64,\r\n}\r\n\r\nimpl Header {\r\n    pub const fn new(\r\n        entry_point: Option<extern \"sysv64\" fn(structure: *const ()) -> !>,\r\n        stack: *const (),\r\n        flags: u64,\r\n        tags: *const (),\r\n    ) -> Header {\r\n        unsafe {\r\n            Header {\r\n                entry_point: match entry_point {\r\n                    Some(ep) => core::mem::transmute(ep),\r\n                    None => 0,\r\n                },\r\n                stack: core::mem::transmute(stack),\r\n                flags: flags,\r\n                tags: core::mem::transmute(tags),\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nstatic STACK: [u8; 4096] = [0; 4096];\r\n\r\nstatic HEADER: Header = Header::new(\r\n    Some(entry_point),\r\n    (&STACK[4095] as *const u8).cast(),\r\n    0,\r\n    core::ptr::null(),\r\n);\r\n\r\nextern \"sysv64\" fn entry_point(_structure: *const ()) -> ! {\r\n    loop {}\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0080]: it is undefined behavior to use this value\r\n  --> src/lib.rs:36:1\r\n   |\r\n36 | / static HEADER: Header = Header::new(\r\n37 | |     Some(entry_point),\r\n38 | |     (&STACK[4095] as *const u8).cast(),\r\n39 | |     0,\r\n40 | |     core::ptr::null(),\r\n41 | | );\r\n   | |__^ type validation failed: encountered pointer to alloc4 at .entry_point, but expected initialized plain (non-pointer) bytes\r\n   |\r\n   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\r\n   = note: the raw bytes of the constant (size: 32, align: 1) {\r\n               0x00 \u2502 \u257e\u2500\u2500\u2500\u2500\u2500\u2500\u2500alloc4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u257c \u257e\u2500\u2500\u2500\u2500alloc0+0xfff\u2500\u2500\u2500\u2500\u2500\u257c \u2502 \u257e\u2500\u2500\u2500\u2500\u2500\u2500\u257c\u257e\u2500\u2500\u2500\u2500\u2500\u2500\u257c\r\n               0x10 \u2502 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \u2502 ................\r\n           }\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0080`.\r\n```\r\n\r\nThis is a minimal example from a personal project of mine, [ko-o-ri](https://github.com/robbie01/ko-o-ri) and [stivale2](https://github.com/robbie01/stivale2), that appears to closely reproduce the error I currently encounter when trying to compile ko-o-ri.\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85484/timeline", "performed_via_github_app": null, "state_reason": "completed"}