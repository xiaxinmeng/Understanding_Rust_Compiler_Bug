{"url": "https://api.github.com/repos/rust-lang/rust/issues/96524", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96524/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96524/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96524/events", "html_url": "https://github.com/rust-lang/rust/issues/96524", "id": 1218953909, "node_id": "I_kwDOAAsO6M5Ip8K1", "number": 96524, "title": "Refactor the query system to reduce the amount of macro-expanded functions", "user": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 419557634, "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium", "name": "E-medium", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Medium / intermediate"}, {"id": 2420759390, "node_id": "MDU6TGFiZWwyNDIwNzU5Mzkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-query-system", "name": "A-query-system", "color": "f7e101", "default": false, "description": "Area: The rustc query system (https://rustc-dev-guide.rust-lang.org/query.html)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2022-04-28T16:07:45Z", "updated_at": "2023-04-08T10:16:36Z", "closed_at": "2023-04-08T10:16:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current implementation of the query system relies on a lot of macro-expanded functions.\nThis issue tracks perspectives to reduce this use of macros.\n\nThe objective of this issue is to have the macros expand to a self-contained description of the query, instead of breadcrumbs in several files.\n\n- [x] Remove `opt_remap_env_constness` from `rustc_query_impl` (https://github.com/rust-lang/rust/pull/100243)\n\nThe interface code in `rustc_middle::ty::query` can be made responsible for calling it, it already does.\n\n- [x] Simplify `QueryDescription` trait\n\n`TRY_LOAD_FROM_DISK`, `cache_on_disk` and `describe` are only used for\nthe `QueryVtable` and `make_query::$name`.  They can be made inherent\nassociated constant and functions on the `queries::$name` types.\n\n- [x] Move `Value` trait to `rustc_query_system` (https://github.com/rust-lang/rust/pull/101303)\n\nThis would allow to replace the function pointer for `handle_cycle_error` by a simple enum.\n\n- [ ] Refactor `make_query::$name` functions to a generic version instead of a macro (https://github.com/rust-lang/rust/pull/101178)\n\nThe call to `opt_remap_env_constness!` is unnecessary.  The `DepKind` can be passed as a parameter.  `describe` can be passed as a function pointer.  `key` can be made an `impl Key + HashStable`.\n\nWe should consider moving part of the code into `QueryState::try_collect_active_jobs` which is the only user of these functions.\n\n- [x] Move `DepKindStruct` to `rustc_query_system` (https://github.com/rust-lang/rust/pull/101710)\n\n`DepKindStruct` is defined in `rustc_middle::dep_graph::dep_node`. It depends on `TyCtxt` and `DepKind`, but that can be replaced by a generic parameter `CTX: DepContext` and `CTX::DepKind`.\n\n`rustc_query_system` would access it through a new `DepContext::dep_kind_info` providing `fingerprint_style`, `is_eval_always`, `try_force_from_dep_node` and `try_load_from_on_disk_cacke`, and replacing ` TyCtxt::query_kind`.\n\nIf specialization allows it, we should aim to make most of the code in `rustc_middle::dep_graph::dep_node` generic over `CTX: DepContext`, and move it to `rustc_query_system`.\n\n- [x] Introduce an array of `QueryStruct` with function pointers (https://github.com/rust-lang/rust/pull/101785)\n\nHaving macro-unrolled loops prevents extension of the infrastructure to non-statically known instances.  This struct is to be used in a similar way to `DepKindStruct`, but with types private to `rustc_query_impl`.\n\n```rust\nstruct QueryStruct {\n    try_collect_active_jobs: fn(QueryCtxt<'_>, &mut QueryMap) -> Option<()>,\n    alloc_self_profile_query_strings: fn(QueryCtxt<'tcx>, &mut QueryKeyStringCache),\n    encode_query_results: Option<fn(QueryCtxt<'_>, &mut CacheEncoder<...>, &mut EncodedDepNodeIndex)>\n}\n```\n\nThis will be used to:\n- replace the macro expansion in `try_collect_active_jobs` by a loop over function pointers;\n- replace the macro expansion in `alloc_self_profile_query_strings` by a loop over function pointers;\n- replace the macro expansion in `encode_query_results` by a loop over function pointers.\n\nThe array itself should be created using `make_dep_kind_array!` which handles the indices.\nPossible variant: put the `try_collect_active_jobs` and `alloc_self_profile_query_strings` function pointers in `DepKindStruct` instead.\n\nPlease contact me on Zulip for further information.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96524/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96524/timeline", "performed_via_github_app": null, "state_reason": "completed"}