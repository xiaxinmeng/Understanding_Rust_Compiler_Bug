{"url": "https://api.github.com/repos/rust-lang/rust/issues/103147", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103147/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103147/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103147/events", "html_url": "https://github.com/rust-lang/rust/issues/103147", "id": 1411450099, "node_id": "I_kwDOAAsO6M5UIQTz", "number": 103147, "title": "compilation stuck while resolving futures_async_stream", "user": {"login": "xxchan", "id": 37948597, "node_id": "MDQ6VXNlcjM3OTQ4NTk3", "avatar_url": "https://avatars.githubusercontent.com/u/37948597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xxchan", "html_url": "https://github.com/xxchan", "followers_url": "https://api.github.com/users/xxchan/followers", "following_url": "https://api.github.com/users/xxchan/following{/other_user}", "gists_url": "https://api.github.com/users/xxchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/xxchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xxchan/subscriptions", "organizations_url": "https://api.github.com/users/xxchan/orgs", "repos_url": "https://api.github.com/users/xxchan/repos", "events_url": "https://api.github.com/users/xxchan/events{/privacy}", "received_events_url": "https://api.github.com/users/xxchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2413861294, "node_id": "MDU6TGFiZWwyNDEzODYxMjk0", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-untriaged", "name": "regression-untriaged", "color": "e4008a", "default": false, "description": "Untriaged performance or correctness regression."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-10-17T12:01:52Z", "updated_at": "2022-10-18T14:02:10Z", "closed_at": "2022-10-18T13:41:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a regression report! \ud83d\udc1b A regression is something that changed between versions of Rust but was not supposed to.\r\n\r\nPlease provide a short summary of the regression, along with any information you feel is relevant to replicate it.\r\n-->\r\n\r\n### Code\r\n\r\n```\r\nINFO rustc_trait_selection::traits::query::normalize normalize::<rustc_middle::mir::ConstantKind>: result=Ok(Val(ZeroSized, for<'a, 'b, 'c> fn(std::pin::Pin<&'a mut futures_async_stream::try_stream::from_generator::GenTryStream<[static generator@src/stream/src/executor/hash_join.rs:760:5: 760:61]>>, &'b mut std::task::Context<'c>) -> std::task::Poll<std::option::Option<<futures_async_stream::try_stream::from_generator::GenTryStream<[static generator@src/stream/src/executor/hash_join.rs:760:5: 760:61]> as tokio_stream::Stream>::Item>> {<futures_async_stream::try_stream::from_generator::GenTryStream<[static generator@src/stream/src/executor/hash_join.rs:760:5: 760:61]> as tokio_stream::Stream>::poll_next})) with 4052 obligations\r\nINFO rustc_trait_selection::traits::query::normalize normalize::<rustc_middle::ty::subst::GenericArg>: result=Ok(unsafe fn(&mut futures_async_stream::try_stream::from_generator::GenTryStream<[static generator@src/stream/src/executor/hash_join.rs:760:5: 760:61]>) -> std::pin::Pin<&mut futures_async_stream::try_stream::from_generator::GenTryStream<[static generator@src/stream/src/executor/hash_join.rs:760:5: 760:61]>> {std::pin::Pin::<&mut futures_async_stream::try_stream::from_generator::GenTryStream<[static generator@src/stream/src/executor/hash_join.rs:760:5: 760:61]>>::new_unchecked}) with 4052 obligations\r\nINFO rustc_trait_selection::traits::query::normalize normalize::<rustc_middle::mir::ConstantKind>: result=Ok(Val(ZeroSized, unsafe fn(&mut futures_async_stream::try_stream::from_generator::GenTryStream<[static generator@src/stream/src/executor/hash_join.rs:760:5: 760:61]>) -> std::pin::Pin<&mut futures_async_stream::try_stream::from_generator::GenTryStream<[static generator@src/stream/src/executor/hash_join.rs:760:5: 760:61]>> {std::pin::Pin::<&mut futures_async_stream::try_stream::from_generator::GenTryStream<[static generator@src/stream/src/executor/hash_join.rs:760:5: 760:61]>>::new_unchecked})) with 4052 obligations\r\n```\r\n\r\nIt seems that Rust is very slow with resolving futures_async_stream. It took about 1sec for each resolving. As a comparison, previous builds only have 0 obligations for all these things.\r\n\r\n_Originally posted by @skyzh in https://github.com/risingwavelabs/risingwave/issues/5119#issuecomment-1280114090_\r\n      \r\nAnd we have located the problem occurs on this function: https://github.com/risingwavelabs/risingwave/blob/2c5bc306cb063376e3497bc27f14f80ed15a6a97/src/stream/src/executor/hash_join.rs#L604-L605\r\n\r\nAfter removing the `#[for_await]` in the function body, it will compiles quickly.\r\n\r\n\r\nI expected to see this happen: it compiles.\r\n\r\nInstead, this happened: it got stuck.\r\n\r\n### Version it worked on\r\n\r\n<!--\r\nProvide the most recent version this worked on, for example:\r\n\r\nIt most recently worked on: Rust 1.47\r\n-->\r\n\r\nIt most recently worked on: nightly-2022-07-29\r\n\r\n### Version with regression\r\n\r\n<!--\r\nProvide the version you are using that has the regression.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.0-nightly (b8c35ca26 2022-10-15)\r\nbinary: rustc\r\ncommit-hash: b8c35ca26b191bb9a9ac669a4b3f4d3d52d97fb1\r\ncommit-date: 2022-10-15\r\nhost: aarch64-apple-darwin\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.2\r\n```\r\n\r\n<!--\r\nDid the compiler crash? If so, please provide a backtrace.\r\n-->\r\n\r\n### Backtrace\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<!--\r\nIf you know when this regression occurred, please add a line like below, replacing `{channel}` with one of stable, beta, or nightly.\r\n\r\n@rustbot modify labels: +regression-from-stable-to-{channel} -regression-untriaged\r\n-->\r\n", "closed_by": {"login": "xxchan", "id": 37948597, "node_id": "MDQ6VXNlcjM3OTQ4NTk3", "avatar_url": "https://avatars.githubusercontent.com/u/37948597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xxchan", "html_url": "https://github.com/xxchan", "followers_url": "https://api.github.com/users/xxchan/followers", "following_url": "https://api.github.com/users/xxchan/following{/other_user}", "gists_url": "https://api.github.com/users/xxchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/xxchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xxchan/subscriptions", "organizations_url": "https://api.github.com/users/xxchan/orgs", "repos_url": "https://api.github.com/users/xxchan/repos", "events_url": "https://api.github.com/users/xxchan/events{/privacy}", "received_events_url": "https://api.github.com/users/xxchan/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103147/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}