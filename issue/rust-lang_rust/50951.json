{"url": "https://api.github.com/repos/rust-lang/rust/issues/50951", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50951/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50951/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50951/events", "html_url": "https://github.com/rust-lang/rust/issues/50951", "id": 325056418, "node_id": "MDU6SXNzdWUzMjUwNTY0MTg=", "number": 50951, "title": "Add `.cloned()` method to `Result`?", "user": {"login": "novacrazy", "id": 4708645, "node_id": "MDQ6VXNlcjQ3MDg2NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4708645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/novacrazy", "html_url": "https://github.com/novacrazy", "followers_url": "https://api.github.com/users/novacrazy/followers", "following_url": "https://api.github.com/users/novacrazy/following{/other_user}", "gists_url": "https://api.github.com/users/novacrazy/gists{/gist_id}", "starred_url": "https://api.github.com/users/novacrazy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/novacrazy/subscriptions", "organizations_url": "https://api.github.com/users/novacrazy/orgs", "repos_url": "https://api.github.com/users/novacrazy/repos", "events_url": "https://api.github.com/users/novacrazy/events{/privacy}", "received_events_url": "https://api.github.com/users/novacrazy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-21T20:55:33Z", "updated_at": "2019-09-11T20:02:35Z", "closed_at": "2019-09-11T20:02:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "It caught me off-guard that there isn't a `.cloned()` method for `Result<&T, E>`, yet there is one for `Option<&T>`.\r\n\r\nI don't think this is a big enough feature to have a whole RFC for, even though I can do that if necessary, but it would be nice to have a `.cloned()` method like this:\r\n\r\n```rust\r\nimpl<'a, T, E> Result<&'a T, E>\r\nwhere\r\n    T: Clone,\r\n{\r\n    #[inline]\r\n    pub fn cloned(self) -> Result<T, E> {\r\n        self.map(Clone::clone)\r\n    }\r\n}\r\n```\r\nand the equivalent mutable reference version.\r\n\r\nHowever, if there is a reason why this is not already in place, I can understand. It simply feels a little awkward having to manually map `Clone::clone` in otherwise idiomatic code.", "closed_by": {"login": "novacrazy", "id": 4708645, "node_id": "MDQ6VXNlcjQ3MDg2NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4708645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/novacrazy", "html_url": "https://github.com/novacrazy", "followers_url": "https://api.github.com/users/novacrazy/followers", "following_url": "https://api.github.com/users/novacrazy/following{/other_user}", "gists_url": "https://api.github.com/users/novacrazy/gists{/gist_id}", "starred_url": "https://api.github.com/users/novacrazy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/novacrazy/subscriptions", "organizations_url": "https://api.github.com/users/novacrazy/orgs", "repos_url": "https://api.github.com/users/novacrazy/repos", "events_url": "https://api.github.com/users/novacrazy/events{/privacy}", "received_events_url": "https://api.github.com/users/novacrazy/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50951/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50951/timeline", "performed_via_github_app": null, "state_reason": "completed"}