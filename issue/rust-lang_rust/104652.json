{"url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/9925", "repository_url": "https://api.github.com/repos/rust-lang/rust-clippy", "labels_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/9925/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/9925/comments", "events_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/9925/events", "html_url": "https://github.com/rust-lang/rust-clippy/issues/9925", "id": 1458607057, "node_id": "I_kwDOAZm0i85W8JPR", "number": 9925, "title": "Clippy fix for \"`contains_key` followed by `insert`\" produces \"borrow of moved value\" error", "user": {"login": "fishrockz", "id": 5312786, "node_id": "MDQ6VXNlcjUzMTI3ODY=", "avatar_url": "https://avatars.githubusercontent.com/u/5312786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fishrockz", "html_url": "https://github.com/fishrockz", "followers_url": "https://api.github.com/users/fishrockz/followers", "following_url": "https://api.github.com/users/fishrockz/following{/other_user}", "gists_url": "https://api.github.com/users/fishrockz/gists{/gist_id}", "starred_url": "https://api.github.com/users/fishrockz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fishrockz/subscriptions", "organizations_url": "https://api.github.com/users/fishrockz/orgs", "repos_url": "https://api.github.com/users/fishrockz/repos", "events_url": "https://api.github.com/users/fishrockz/events{/privacy}", "received_events_url": "https://api.github.com/users/fishrockz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149309557, "node_id": "MDU6TGFiZWwxNDkzMDk1NTc=", "url": "https://api.github.com/repos/rust-lang/rust-clippy/labels/C-bug", "name": "C-bug", "color": "F5F1FD", "default": false, "description": "Category: Clippy is not doing the correct thing"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-20T21:37:49Z", "updated_at": "2022-11-21T21:28:07Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When running `cargo clippy --fix`\r\n\r\n```\r\n[will@localhost girderstream]$ cargo clippy --fix\r\n   Compiling girderstream v0.1.0 (/home/will/projects/rust/buildsystems/girderstream)\r\nwarning: failed to automatically apply fixes suggested by rustc to crate `girderstream`\r\n\r\nafter fixes were automatically applied the compiler reported errors within these files:\r\n\r\n  * src/project/project.rs\r\n\r\nThis likely indicates a bug in either rustc or cargo itself,\r\nand we would appreciate a bug report! You're likely to see \r\na number of compiler warnings after this message which cargo\r\nattempted to fix but failed. If you could open an issue at\r\nhttps://github.com/rust-lang/rust/issues\r\nquoting the full output of this command we'd be very appreciative!\r\nNote that you may be able to make some more progress in the near-term\r\nfixing code with the `--broken-code` flag\r\n\r\nThe following errors were reported:\r\nerror[E0382]: borrow of moved value: `junctioned_provider`\r\n   --> src/project/project.rs:185:54\r\n    |\r\n163 |         for (junctioned_provider, junctioned_element) in junctioned_project.provides {\r\n    |              ------------------- move occurs because `junctioned_provider` has type `std::string::String`, which does not implement the `Copy` trait\r\n...\r\n182 |             if let std::collections::hash_map::Entry::Vacant(e) = self.provides.entry(junctioned_provider) {\r\n    |                                                                                       ------------------- value moved here\r\n...\r\n185 |                 panic!(\"Cant have two elements with {junctioned_provider} even through a junction\");\r\n    |                                                      ^^^^^^^^^^^^^^^^^^^ value borrowed here after move\r\n    |\r\n    = note: this error originates in the macro `$crate::const_format_args` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0382`.\r\nOriginal diagnostics will follow.\r\n\r\nwarning: usage of `contains_key` followed by `insert` on a `HashMap`\r\n   --> src/project/project.rs:182:13\r\n    |\r\n182 | /             if self.provides.contains_key(&junctioned_provider) {\r\n183 | |                 panic!(\"Cant have two elements with {junctioned_provider} even through a junction\");\r\n184 | |             } else {\r\n185 | |                 self.provides\r\n186 | |                     .insert(junctioned_provider, junctioned_element);\r\n187 | |             }\r\n    | |_____________^\r\n    |\r\n    = note: `#[warn(clippy::map_entry)]` on by default\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\r\nhelp: try this\r\n    |\r\n182 ~             if let std::collections::hash_map::Entry::Vacant(e) = self.provides.entry(junctioned_provider) {\r\n183 +                 e.insert(junctioned_element);\r\n184 +             } else {\r\n185 +                 panic!(\"Cant have two elements with {junctioned_provider} even through a junction\");\r\n186 +             }\r\n    |\r\n\r\nwarning: `girderstream` (lib test) generated 1 warning\r\nwarning: `girderstream` (lib) generated 1 warning (1 duplicate)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 21.37s\r\n```\r\n\r\nThe code fails because I use the thing I test for in the hash map in the else. This seems fairly sensible so I am surprised this wasn't picked up already. Maybe I'm missing something silly.\r\n\r\nEther way  the output suggested creating a issue so I have done\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.64.0 (a55dd71d5 2022-09-19)\r\nbinary: rustc\r\ncommit-hash: a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\r\ncommit-date: 2022-09-19\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.64.0\r\nLLVM version: 14.0.6\r\n```\r\n\r\nTo reproduce clone https://gitlab.com/girderstream/girderstream/-/commit/edc55aa923ad4fdb51e4494998c4b681b6fcb260 and run `cargo clippy --fix`\r\n\r\nThis is the diff clippy suggests with `cargo clippy --fix --broken-code` https://gitlab.com/girderstream/girderstream/-/commit/f7cbc3b097d859805d1f27b56b0973fb3004e963\r\n\r\nwhich can be fixed with https://gitlab.com/girderstream/girderstream/-/commit/83422f677efb4eba8eb7a54da5cecc6022992d38 but is not always a good idea to add a `clone`.\r\n\r\nIts a shame you cant pass in a borrow to HashMap.entry()", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/9925/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/9925/timeline", "performed_via_github_app": null, "state_reason": null}