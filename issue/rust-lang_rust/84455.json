{"url": "https://api.github.com/repos/rust-lang/rust/issues/84455", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84455/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84455/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84455/events", "html_url": "https://github.com/rust-lang/rust/issues/84455", "id": 865546324, "node_id": "MDU6SXNzdWU4NjU1NDYzMjQ=", "number": 84455, "title": "no MIR available for DefId", "user": {"login": "MabezDev", "id": 6977289, "node_id": "MDQ6VXNlcjY5NzcyODk=", "avatar_url": "https://avatars.githubusercontent.com/u/6977289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MabezDev", "html_url": "https://github.com/MabezDev", "followers_url": "https://api.github.com/users/MabezDev/followers", "following_url": "https://api.github.com/users/MabezDev/following{/other_user}", "gists_url": "https://api.github.com/users/MabezDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/MabezDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MabezDev/subscriptions", "organizations_url": "https://api.github.com/users/MabezDev/orgs", "repos_url": "https://api.github.com/users/MabezDev/repos", "events_url": "https://api.github.com/users/MabezDev/events{/privacy}", "received_events_url": "https://api.github.com/users/MabezDev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2021-04-22T22:43:58Z", "updated_at": "2021-06-21T03:27:20Z", "closed_at": "2021-06-21T03:27:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI couldn't I couldn't produce a single file example, as it seems the ICE is triggered when cross crate compilation is involved; i.e dumping the contents of lib.rs into test.rs does **not** trigger the ICE. This seems like a regression of the `const-fn` feature as this previously worked on nightly of the 1.50 stable release.\r\n\r\n### Code\r\n\r\n`lib.rs`:\r\n```Rust\r\n// ice_test\r\n#![no_std]\r\n\r\n#![feature(const_fn)]\r\n\r\nuse core::alloc::{GlobalAlloc, Layout};\r\n\r\npub static DEFAULT_ALLOCATOR: Allocator = Allocator::new(&DEFAULT_HEAP);\r\nstatic DEFAULT_HEAP: GeneralAllocator = GeneralAllocator::new();\r\n\r\n#[derive(Copy, Clone)]\r\npub struct Allocator {\r\n    allocator: &'static (dyn GlobalAlloc + 'static),\r\n}\r\n\r\nunsafe impl Sync for Allocator {}\r\n\r\nimpl Allocator {\r\n    const fn new(allocator: &'static dyn GlobalAlloc) -> Self {\r\n        Self { allocator }\r\n    }\r\n}\r\n\r\nunsafe impl GlobalAlloc for Allocator {\r\n    unsafe fn alloc(&self, layout: Layout) -> *mut u8 {\r\n        self.allocator.alloc(layout)\r\n    }\r\n    unsafe fn dealloc(&self, ptr: *mut u8, layout: Layout) {\r\n        self.allocator.dealloc(ptr, layout)\r\n    }\r\n}\r\n\r\npub struct GeneralAllocator;\r\n\r\nunsafe impl Sync for GeneralAllocator {}\r\n\r\nimpl GeneralAllocator {\r\n    pub const fn new() -> Self {\r\n        Self {}\r\n    }\r\n}\r\n\r\nunsafe impl GlobalAlloc for GeneralAllocator {\r\n    unsafe fn alloc(&self, _layout: Layout) -> *mut u8 {\r\n        todo!()\r\n    }\r\n\r\n    unsafe fn dealloc(&self, _ptr: *mut u8, _layout: Layout) {\r\n        todo!()\r\n    }\r\n}\r\n```\r\n`test.rs`:\r\n```rust\r\n\r\n#![feature(alloc_error_handler)]\r\n#![no_std]\r\n#![no_main]\r\n\r\nuse ice_test::{Allocator, DEFAULT_ALLOCATOR};\r\n\r\n\r\nextern crate alloc;\r\n\r\n#[global_allocator]\r\npub static GLOBAL_ALLOCATOR: Allocator = DEFAULT_ALLOCATOR;\r\n\r\n#[no_mangle]\r\nfn main() {\r\n\r\n}\r\n\r\n#[panic_handler]\r\nfn panic(_info: &core::panic::PanicInfo) -> ! {\r\n    loop {}\r\n}\r\n\r\n#[alloc_error_handler]\r\nfn alloc_error_handler(layout: core::alloc::Layout) -> ! {\r\n    panic!(\r\n        \"Error allocating  {} bytes of memory with alignment {}\",\r\n        layout.size(),\r\n        layout.align()\r\n    );\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (b84932674 2021-04-21)\r\nbinary: rustc\r\ncommit-hash: b849326744a8eec939e592f0ab13bff85cc865d3\r\ncommit-date: 2021-04-21\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_mir/src/monomorphize/collector.rs:865:9: no MIR available for DefId(5:12 ~ ice_test[1249]::DEFAULT_HEAP)\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/panic.rs:59:5\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_mir/src/monomorphize/collector.rs:865:9: no MIR available for DefId(5:12 ~ ice_test[1249]::DEFAULT_HEAP)\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/panic.rs:59:5\r\nstack backtrace:\r\n   0:     0x7f8741544320 - std::backtrace_rs::backtrace::libunwind::trace::hdcf4f90f85129e83\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7f8741544320 - std::backtrace_rs::backtrace::trace_unsynchronized::h2669e30cb82f6732\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f8741544320 - std::sys_common::backtrace::_print_fmt::hfbda19e17f6db318\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f8741544320 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h1a8751bf59281272\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f87415b56df - core::fmt::write::h7aa6cd0067dca82a\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/core/src/fmt/mod.rs:1094:17\r\n   5:     0x7f8741538be5 - std::io::Write::write_fmt::hd7dd3a1df9b6befb\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/io/mod.rs:1580:15\r\n   6:     0x7f87415480cb - std::sys_common::backtrace::_print::h551e9ec8a9fa8106\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f87415480cb - std::sys_common::backtrace::print::ha4b1c5e95fa040b3\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f87415480cb - std::panicking::default_hook::{{closure}}::h0b34c9ab7fb9f857\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/panicking.rs:208:50\r\n   9:     0x7f8741547bad - std::panicking::default_hook::h3067e8318decd17a\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/panicking.rs:225:9\r\n  10:     0x7f8741d0a3dd - rustc_driver::report_ice::h0582ed2432eb0d01\r\n  11:     0x7f87415487e0 - std::panicking::rust_panic_with_hook::h81b8facc50f34daa\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/panicking.rs:595:17\r\n  12:     0x7f8742ce53ce - std::panicking::begin_panic::{{closure}}::h85abbcbb712c1987\r\n  13:     0x7f8742ce51a9 - std::sys_common::backtrace::__rust_end_short_backtrace::he1610f0d7a0319c4\r\n  14:     0x7f8742ce5342 - std::panicking::begin_panic::h557498baf405e433\r\n  15:     0x7f8742cd9f00 - std::panic::panic_any::hf715777e4b1eaeed\r\n  16:     0x7f8742cdce4a - rustc_errors::HandlerInner::bug::h00435af82799a5b0\r\n  17:     0x7f8742cdc8f3 - rustc_errors::Handler::bug::hf91cd3a9dd078744\r\n  18:     0x7f8742c261cc - rustc_middle::ty::context::tls::with_opt::heaa8b0ae700b3982\r\n  19:     0x7f8742c2b330 - rustc_middle::util::bug::opt_span_bug_fmt::hda20553eb086ba50\r\n  20:     0x7f8742c2b2a6 - rustc_middle::util::bug::bug_fmt::hf350ebadeac0d8cd\r\n  21:     0x7f87432d0dfb - rustc_mir::monomorphize::collector::should_codegen_locally::h33a6b6ceb32bec5c\r\n  22:     0x7f87432d2a83 - rustc_mir::monomorphize::collector::collect_miri::h2d560ebdca978053\r\n  23:     0x7f87432cc3db - rustc_mir::monomorphize::collector::collect_items_rec::h1931b09524a878fe\r\n  24:     0x7f8743e5d953 - rustc_session::utils::<impl rustc_session::session::Session>::time::h6218e9d62a669ab9\r\n  25:     0x7f8743dc3930 - rustc_mir::monomorphize::collector::collect_crate_mono_items::h87c766f3aedca3f8\r\n  26:     0x7f874341e713 - rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items::h5d71c129de19c17c\r\n  27:     0x7f8743c237e9 - rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::collect_and_partition_mono_items>::compute::hb747675940babce4\r\n  28:     0x7f87423f06e2 - rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::hae7b015dd63d891e\r\n  29:     0x7f8743cd07b2 - rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl::hf8625a52e7db4eba\r\n  30:     0x7f8743c3ec41 - rustc_data_structures::stack::ensure_sufficient_stack::hb05a6df061fa60a4\r\n  31:     0x7f8743bf1e86 - rustc_query_system::query::plumbing::force_query_with_job::hf3efc5c5cbf0708f\r\n  32:     0x7f8743b865e9 - rustc_query_system::query::plumbing::get_query_impl::h015a728ff988d543\r\n  33:     0x7f8743ce31a8 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items::he82456e9dcaa8c50\r\n  34:     0x7f87438a6594 - rustc_codegen_ssa::base::codegen_crate::h1bb404e3e428c3d1\r\n  35:     0x7f87438a59a6 - <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate::h13bad5012bf8fc9b\r\n  36:     0x7f874383597b - rustc_interface::passes::QueryContext::enter::hbf1d1b59095cc5c2\r\n  37:     0x7f874383f556 - rustc_interface::queries::Queries::ongoing_codegen::h790fc9d1ff2c6880\r\n  38:     0x7f87437fa8d6 - rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter::hedca2acec6ab04da\r\n  39:     0x7f87437f9844 - rustc_span::with_source_map::h67cb68e15a9ffc39\r\n  40:     0x7f87437fb871 - rustc_interface::interface::create_compiler_and_run::he6a465670788f848\r\n  41:     0x7f8743814ff8 - scoped_tls::ScopedKey<T>::set::h8de4c07d6e313e7a\r\n  42:     0x7f8743815513 - std::sys_common::backtrace::__rust_begin_short_backtrace::h953d4096b984a1d5\r\n  43:     0x7f8743818e05 - core::ops::function::FnOnce::call_once{{vtable.shim}}::hf2d8af4e3cccbbb1\r\n  44:     0x7f87415585b7 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h3aa31cb6360b59d9\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/alloc/src/boxed.rs:1546:9\r\n  45:     0x7f87415585b7 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h7719d3c7c5841461\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/alloc/src/boxed.rs:1546:9\r\n  46:     0x7f87415585b7 - std::sys::unix::thread::Thread::new::thread_start::hfbe13ead469fd0bc\r\n                               at /rustc/b849326744a8eec939e592f0ab13bff85cc865d3/library/std/src/sys/unix/thread.rs:71:17\r\n  47:     0x7f874147bfde - start_thread\r\n  48:     0x7f87413a242f - clone\r\n  49:                0x0 - <unknown>\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (b84932674 2021-04-21) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C panic=abort -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `ice-test`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84455/timeline", "performed_via_github_app": null, "state_reason": "completed"}