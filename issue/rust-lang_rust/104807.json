{"url": "https://api.github.com/repos/rust-lang/rust/issues/104807", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104807/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104807/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104807/events", "html_url": "https://github.com/rust-lang/rust/issues/104807", "id": 1462838495, "node_id": "I_kwDOAAsO6M5XMSTf", "number": 104807, "title": "Niche placement heuristic: place at beginning or end of type", "user": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1944310735, "node_id": "MDU6TGFiZWwxOTQ0MzEwNzM1", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-layout", "name": "A-layout", "color": "f7e101", "default": false, "description": "Area: Memory layout of types"}], "state": "closed", "locked": false, "assignee": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-11-24T06:40:01Z", "updated_at": "2023-04-29T11:35:22Z", "closed_at": "2023-04-29T11:35:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I noticed that #102750 regressed the size of some types in the `syn` crate. I minimized the difference to the following:\r\n\r\n```rust\r\npub enum Enum {\r\n    A(A),\r\n    B(B),\r\n}\r\n\r\npub struct A {\r\n    pub x: Thing,\r\n    pub y: u16,\r\n    pub z: u16,\r\n}\r\n\r\npub struct B {\r\n    pub x: Thing,\r\n    pub y: u16,\r\n}\r\n\r\npub enum Thing {\r\n    C(u16, u16),\r\n    D(u16, u16),\r\n}\r\n\r\nfn main() {\r\n    println!(\"{}\", std::mem::size_of::<Enum>());\r\n}\r\n```\r\n\r\n```console\r\n$ cargo +nightly-2022-11-23 run --quiet && cargo +nightly-2022-11-24 run --quiet\r\n10\r\n12\r\n```\r\n\r\nThe type layout in nightly-2022-11-23 is:\r\n\r\n```console\r\nprint-type-size type: `Enum`: 10 bytes, alignment: 2 bytes\r\nprint-type-size     variant `A`: 10 bytes\r\nprint-type-size         field `.0`: 10 bytes\r\nprint-type-size     variant `B`: 10 bytes\r\nprint-type-size         padding: 2 bytes\r\nprint-type-size         field `.0`: 8 bytes, alignment: 2 bytes\r\nprint-type-size type: `A`: 10 bytes, alignment: 2 bytes\r\nprint-type-size     field `.x`: 6 bytes\r\nprint-type-size     field `.y`: 2 bytes\r\nprint-type-size     field `.z`: 2 bytes\r\nprint-type-size type: `B`: 8 bytes, alignment: 2 bytes\r\nprint-type-size     field `.x`: 6 bytes\r\nprint-type-size     field `.y`: 2 bytes\r\nprint-type-size type: `Thing`: 6 bytes, alignment: 2 bytes\r\nprint-type-size     discriminant: 2 bytes\r\nprint-type-size     variant `C`: 4 bytes\r\nprint-type-size         field `.0`: 2 bytes\r\nprint-type-size         field `.1`: 2 bytes\r\nprint-type-size     variant `D`: 4 bytes\r\nprint-type-size         field `.0`: 2 bytes\r\nprint-type-size         field `.1`: 2 bytes\r\n```\r\n\r\nand in nightly-2022-11-24:\r\n\r\n```console\r\nprint-type-size type: `Enum`: 12 bytes, alignment: 2 bytes\r\nprint-type-size     discriminant: 2 bytes\r\nprint-type-size     variant `A`: 10 bytes\r\nprint-type-size         field `.0`: 10 bytes\r\nprint-type-size     variant `B`: 8 bytes\r\nprint-type-size         field `.0`: 8 bytes\r\nprint-type-size type: `A`: 10 bytes, alignment: 2 bytes\r\nprint-type-size     field `.y`: 2 bytes\r\nprint-type-size     field `.z`: 2 bytes\r\nprint-type-size     field `.x`: 6 bytes\r\nprint-type-size type: `B`: 8 bytes, alignment: 2 bytes\r\nprint-type-size     field `.y`: 2 bytes\r\nprint-type-size     field `.x`: 6 bytes\r\nprint-type-size type: `Thing`: 6 bytes, alignment: 2 bytes\r\nprint-type-size     discriminant: 2 bytes\r\nprint-type-size     variant `C`: 4 bytes\r\nprint-type-size         field `.0`: 2 bytes\r\nprint-type-size         field `.1`: 2 bytes\r\nprint-type-size     variant `D`: 4 bytes\r\nprint-type-size         field `.0`: 2 bytes\r\nprint-type-size         field `.1`: 2 bytes\r\n```\r\n\r\nGraphically, the layout of Enum::A and Enum::B before and after are:\r\n\r\n<table>\r\n<tr><th></th><th>Before</th><th>After</th></tr>\r\n<tr><th>Enum::A</th><td><pre>\r\n+-----+-----+-----+-----+-----+\r\n| dsc | u16 | u16 | u16 | u16 |\r\n+-----+-----+-----+-----+-----+\r\n^~~Thing~~~~~~~~~~^\r\n^~~A~~~~~~~~~~~~~~~~~~~~~~~~~~^\r\n</pre></td><td><pre>\r\n+-----+-----+-----+-----+-----+-----+\r\n| dsc | u16 | u16 | dsc | u16 | u16 |\r\n+-----+-----+-----+-----+-----+-----+\r\n                  ^~~Thing~~~~~~~~~~^\r\n      ^~~A~~~~~~~~~~~~~~~~~~~~~~~~~~^\r\n</pre></td></tr>\r\n<tr><th>Enum::B</th><td><pre>\r\n      +-----+-----+-----+-----+\r\n..... | dsc | u16 | u16 | u16 |\r\n      +-----+-----+-----+-----+\r\n      ^~~Thing~~~~~~~~~~^      \r\n      ^~~B~~~~~~~~~~~~~~~~~~~~^\r\n</pre></td><td><pre>\r\n+-----+-----+-----+-----+-----+\r\n| dsc | u16 | dsc | u16 | u16 | .....\r\n+-----+-----+-----+-----+-----+\r\n            ^~~Thing~~~~~~~~~~^\r\n      ^~~B~~~~~~~~~~~~~~~~~~~~^\r\n</pre></td></tr>\r\n</table>\r\n\r\nNotice how the old layout is putting `Thing` at the beginning of `A` and `B`, while the new layout is putting `Thing` at the end of `A` and `B`. The reason the new layout is worse is that now, when building `Enum`, there is no way to line up `A`'s existing niche with the `B` case's padding. Instead a whole new discriminant needs to be added.\r\n\r\nFrom reading the description of #102750, I don't get the impression that the justification of that PR applies to the difference in this placement of `Thing` inside `A` and `B` in the code above. It seems like just a coincidence of the implementation that the PR affected this code.\r\n\r\nMy observation is that, other things being equal, we should prefer to locate niches ~~in the very beginning or very end of a type, not in the middle~~ near the beginning or end of a type, as far from the middle of the type as possible. This will allow them to get lined up with the padding of smaller enum variants. Placing a niche as far from the middle of the type as possible makes room for the largest possible other type to line up before or after the niche.\r\n\r\nMentioning @the8472 @wesleywiser since you were recently working on layout.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104807/timeline", "performed_via_github_app": null, "state_reason": "completed"}