{"url": "https://api.github.com/repos/rust-lang/rust/issues/102136", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102136/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102136/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102136/events", "html_url": "https://github.com/rust-lang/rust/issues/102136", "id": 1382357552, "node_id": "I_kwDOAAsO6M5SZRow", "number": 102136, "title": "Array bound test with two simple loops", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3425147156, "node_id": "LA_kwDOAAsO6M7MJ5kU", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-array", "name": "A-array", "color": "f7e101", "default": false, "description": "Area: [T; N]"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-22T12:19:45Z", "updated_at": "2023-03-07T05:26:55Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "LLVM seems unable to see the number of N*M items generated by the loops fits inside the slice (https://rust.godbolt.org/z/x1YMo93Pv):\r\n\r\n```rust\r\nconst N: usize = 50;\r\nconst M: usize = 60;\r\n\r\npub fn foo(arr: &mut [usize; N * M]) {\r\n    let mut pos = 0;\r\n    for _ in 0 .. N {\r\n        for _ in 0 .. M {\r\n            arr[pos] = pos;\r\n            pos += 1;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nGives the asm:\r\n\r\n```asm\r\n.LCPI0_0:\r\n        .quad   0\r\n        .quad   1\r\n        .quad   2\r\n        .quad   3\r\n.LCPI0_1:\r\n        .quad   4\r\n        .quad   5\r\n        .quad   6\r\n        .quad   7\r\n.LCPI0_2:\r\n        .quad   8\r\n        .quad   9\r\n        .quad   10\r\n        .quad   11\r\n.LCPI0_3:\r\n        .quad   12\r\n        .quad   13\r\n        .quad   14\r\n        .quad   15\r\n.LCPI0_4:\r\n        .quad   16\r\n        .quad   17\r\n        .quad   18\r\n        .quad   19\r\n.LCPI0_5:\r\n        .quad   20\r\n        .quad   21\r\n        .quad   22\r\n        .quad   23\r\n.LCPI0_6:\r\n        .quad   24\r\n        .quad   25\r\n        .quad   26\r\n        .quad   27\r\n.LCPI0_7:\r\n        .quad   28\r\n        .quad   29\r\n        .quad   30\r\n        .quad   31\r\n.LCPI0_8:\r\n        .quad   32\r\n        .quad   33\r\n        .quad   34\r\n        .quad   35\r\n.LCPI0_9:\r\n        .quad   36\r\n        .quad   37\r\n        .quad   38\r\n        .quad   39\r\n.LCPI0_10:\r\n        .quad   40\r\n        .quad   41\r\n        .quad   42\r\n        .quad   43\r\n.LCPI0_11:\r\n        .quad   44\r\n        .quad   45\r\n        .quad   46\r\n        .quad   47\r\n.LCPI0_12:\r\n        .quad   48\r\n        .quad   49\r\n        .quad   50\r\n        .quad   51\r\n.LCPI0_13:\r\n        .quad   52\r\n        .quad   53\r\n        .quad   54\r\n        .quad   55\r\nfoo:\r\n        push    rax\r\n        vmovdqa ymm14, ymmword ptr [rip + .LCPI0_0]\r\n        vmovdqa ymm1, ymmword ptr [rip + .LCPI0_1]\r\n        vmovdqa ymm2, ymmword ptr [rip + .LCPI0_2]\r\n        vmovdqa ymm3, ymmword ptr [rip + .LCPI0_3]\r\n        vmovdqa ymm4, ymmword ptr [rip + .LCPI0_4]\r\n        vmovdqa ymm5, ymmword ptr [rip + .LCPI0_5]\r\n        vmovdqa ymm6, ymmword ptr [rip + .LCPI0_6]\r\n        vmovdqa ymm7, ymmword ptr [rip + .LCPI0_7]\r\n        vmovdqa ymm8, ymmword ptr [rip + .LCPI0_8]\r\n        vmovdqa ymm9, ymmword ptr [rip + .LCPI0_9]\r\n        vmovdqa ymm10, ymmword ptr [rip + .LCPI0_10]\r\n        vmovdqa ymm11, ymmword ptr [rip + .LCPI0_11]\r\n        vmovdqa ymm12, ymmword ptr [rip + .LCPI0_12]\r\n        vmovdqa ymm13, ymmword ptr [rip + .LCPI0_13]\r\n        mov     ecx, 59\r\n.LBB0_1:\r\n        lea     rdx, [rcx - 59]\r\n        lea     rax, [rcx - 3]\r\n        vmovq   xmm0, rdx\r\n        vpbroadcastq    ymm0, xmm0\r\n        vpor    ymm15, ymm14, ymm0\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 472], ymm15\r\n        vpaddq  ymm15, ymm0, ymm1\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 440], ymm15\r\n        vpaddq  ymm15, ymm0, ymm2\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 408], ymm15\r\n        vpaddq  ymm15, ymm0, ymm3\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 376], ymm15\r\n        vpaddq  ymm15, ymm0, ymm4\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 344], ymm15\r\n        vpaddq  ymm15, ymm0, ymm5\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 312], ymm15\r\n        vpaddq  ymm15, ymm0, ymm6\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 280], ymm15\r\n        vpaddq  ymm15, ymm0, ymm7\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 248], ymm15\r\n        vpaddq  ymm15, ymm8, ymm0\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 216], ymm15\r\n        vpaddq  ymm15, ymm9, ymm0\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 184], ymm15\r\n        vpaddq  ymm15, ymm10, ymm0\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 152], ymm15\r\n        vpaddq  ymm15, ymm11, ymm0\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 120], ymm15\r\n        vpaddq  ymm15, ymm12, ymm0\r\n        vpaddq  ymm0, ymm13, ymm0\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 88], ymm15\r\n        vmovdqu ymmword ptr [rdi + 8*rcx - 56], ymm0\r\n        cmp     rax, 2999\r\n        ja      .LBB0_6\r\n        mov     qword ptr [rdi + 8*rcx - 24], rax\r\n        lea     rax, [rcx - 2]\r\n        cmp     rax, 2999\r\n        ja      .LBB0_6\r\n        mov     qword ptr [rdi + 8*rcx - 16], rax\r\n        lea     rax, [rcx - 1]\r\n        cmp     rax, 2999\r\n        ja      .LBB0_6\r\n        mov     qword ptr [rdi + 8*rcx - 8], rax\r\n        cmp     rcx, 2999\r\n        ja      .LBB0_5\r\n        mov     qword ptr [rdi + 8*rcx], rcx\r\n        add     rcx, 60\r\n        cmp     rcx, 3059\r\n        jne     .LBB0_1\r\n        pop     rax\r\n        vzeroupper\r\n        ret\r\n.LBB0_5:\r\n        mov     rax, rcx\r\n.LBB0_6:\r\n        lea     rdx, [rip + .Lanon.104192cc768634eeeb2fcfd019dd0f1b.1]\r\n        mov     esi, 3000\r\n        mov     rdi, rax\r\n        vzeroupper\r\n        call    qword ptr [rip + core::panicking::panic_bounds_check@GOTPCREL]\r\n        ud2\r\n```\r\n\r\nUsing:\r\n\r\n```\r\nrustc 1.66.0-nightly (432abd86f 2022-09-20)\r\nbinary: rustc\r\ncommit-hash: 432abd86f231c908f6df3cdd779e83f35084be90\r\ncommit-date: 2022-09-20\r\nhost: x86_64-pc-windows-gnu\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102136/timeline", "performed_via_github_app": null, "state_reason": null}