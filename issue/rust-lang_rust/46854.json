{"url": "https://api.github.com/repos/rust-lang/rust/issues/46854", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46854/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46854/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46854/events", "html_url": "https://github.com/rust-lang/rust/issues/46854", "id": 283391288, "node_id": "MDU6SXNzdWUyODMzOTEyODg=", "number": 46854, "title": "Immutable borrow seems to last too long - unclear compiler error", "user": {"login": "tonyfinn", "id": 1097073, "node_id": "MDQ6VXNlcjEwOTcwNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1097073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonyfinn", "html_url": "https://github.com/tonyfinn", "followers_url": "https://api.github.com/users/tonyfinn/followers", "following_url": "https://api.github.com/users/tonyfinn/following{/other_user}", "gists_url": "https://api.github.com/users/tonyfinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonyfinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonyfinn/subscriptions", "organizations_url": "https://api.github.com/users/tonyfinn/orgs", "repos_url": "https://api.github.com/users/tonyfinn/repos", "events_url": "https://api.github.com/users/tonyfinn/events{/privacy}", "received_events_url": "https://api.github.com/users/tonyfinn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-19T22:34:34Z", "updated_at": "2018-01-11T22:31:17Z", "closed_at": "2018-01-11T22:31:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to make a lazily loaded map of textures while learning Rust. I have the following struct:\r\n\r\n```rust\r\nuse std::collections::HashMap;\r\nuse std::path::Path;\r\nuse opengl_graphics::{ Texture, TextureSettings };\r\n\r\nstruct TextureCache {\r\n    textures: HashMap<String, Texture>\r\n}\r\n\r\nimpl TextureCache {\r\n    fn new() -> TextureCache {\r\n        TextureCache {\r\n            textures: HashMap::new()\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nMy first attempt at implementing lazy loading looked like this:\r\n\r\n```rust\r\n    fn get_texture_broken(&mut self, name: &str) -> &Texture {\r\n        let name = name.to_string();\r\n        {\r\n            // Immutable borrow here\r\n            if let Some(texture) = self.textures.get(&name) {\r\n                return texture\r\n            };\r\n            // Immutable borrow should end here?\r\n        }\r\n        // Prevents mutable borrow here\r\n        // But shouldn't it be out of scope?\r\n        let textures = &mut self.textures;\r\n        let tex = Texture::from_path(Path::new(&name), &TextureSettings::new()).unwrap();\r\n        textures.insert(name.clone(), tex);\r\n        textures.get(&name).unwrap()\r\n        // Actually ends here\r\n    }\r\n```\r\n\r\nFrom my understanding of Rust from [listing 4-1](https://doc.rust-lang.org/book/second-edition/ch04-01-what-is-ownership.html) and the example of [creating a new scope for mutable references](https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#mutable-references) in 4.2, the borrow should end after the inner scope, but in fact it lasts for the entire method.\r\n\r\nThe error message reported by the compiler is as follows:\r\n\r\n```\r\nerror[E0502]: cannot borrow `self.textures` as mutable because it is also borrowed as immutable\r\n  --> src\\render\\texture_cache.rs:34:29\r\n   |\r\n27 |             if let Some(texture) = self.textures.get(&name) {\r\n   |                                    ------------- immutable borrow occurs here\r\n...\r\n34 |         let textures = &mut self.textures;\r\n   |                             ^^^^^^^^^^^^^ mutable borrow occurs here\r\n...\r\n39 |     }\r\n   |     - immutable borrow ends here\r\n```\r\n\r\nWith help from #rust-beginners , an alternative implementation was found using std::collections::HashMap#entry but since this borrow seems to be breaking the normal rules as to how long it should live, it would be helpful if the compiler error would explain why it's outliving it's apparent scope. \r\n\r\n\r\nRust version:\r\n\r\nrustc 1.22.1 (05e2e1c41 2017-11-22)\r\nbinary: rustc\r\ncommit-hash: 05e2e1c41414e8fc73d0f267ea8dab1a3eeeaa99\r\ncommit-date: 2017-11-22\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.22.1\r\nLLVM version: 4.0", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46854/timeline", "performed_via_github_app": null, "state_reason": "completed"}