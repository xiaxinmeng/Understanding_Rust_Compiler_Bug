{"url": "https://api.github.com/repos/rust-lang/rust/issues/55413", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55413/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55413/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55413/events", "html_url": "https://github.com/rust-lang/rust/issues/55413", "id": 374642364, "node_id": "MDU6SXNzdWUzNzQ2NDIzNjQ=", "number": 55413, "title": "Performance regression in mixed f32/i32/u16 code in 1.30", "user": {"login": "pedrocr", "id": 246322, "node_id": "MDQ6VXNlcjI0NjMyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/246322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedrocr", "html_url": "https://github.com/pedrocr", "followers_url": "https://api.github.com/users/pedrocr/followers", "following_url": "https://api.github.com/users/pedrocr/following{/other_user}", "gists_url": "https://api.github.com/users/pedrocr/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedrocr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedrocr/subscriptions", "organizations_url": "https://api.github.com/users/pedrocr/orgs", "repos_url": "https://api.github.com/users/pedrocr/repos", "events_url": "https://api.github.com/users/pedrocr/events{/privacy}", "received_events_url": "https://api.github.com/users/pedrocr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-27T12:54:54Z", "updated_at": "2018-12-15T16:35:17Z", "closed_at": "2018-12-15T16:35:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried my rawloader performance regression tests with 1.30:\r\n\r\nhttp://chimper.org/rawloader-rustc-benchmarks/\r\nhttp://chimper.org/rawloader-rustc-benchmarks/version-1.30.0.html\r\n\r\nBesides the several formats that have been regressed since 1.25 because of #53340 there was a new regression of ~17% in a single file. That corresponded to a specific section of code that decodes YUV format to RGB. Here's a minimized version\r\n\r\n```rust\r\nfn clampbits(val: i32, bits: u32) -> i32 {\r\n  let temp = val >> bits;\r\n  if temp != 0 {\r\n    !temp >> (32-bits)\r\n  } else {\r\n    val\r\n  }\r\n}\r\n\r\nfn decode_snef_compressed(buf: &[u8], width: usize, height: usize, coeffs: [f32;3]) -> Vec<u16> {\r\n  let mut out: Vec<u16> = vec![0; width*height*3];\r\n\r\n  let inv_wb_r = (1024.0 / coeffs[0]) as i32;\r\n  let inv_wb_b = (1024.0 / coeffs[2]) as i32;\r\n\r\n  for (o, i) in out.chunks_mut(6).zip(buf.chunks(6)) {\r\n    let g1: u16 = i[0] as u16;\r\n    let g2: u16 = i[1] as u16;\r\n    let g3: u16 = i[2] as u16;\r\n    let g4: u16 = i[3] as u16;\r\n    let g5: u16 = i[4] as u16;\r\n    let g6: u16 = i[5] as u16;\r\n\r\n    let y1  = (g1 | ((g2 & 0x0f) << 8)) as f32;\r\n    let y2  = ((g2 >> 4) | (g3 << 4)) as f32;\r\n    let cb = (g4 | ((g5 & 0x0f) << 8)) as f32 - 2048.0;\r\n    let cr = ((g5 >> 4) | (g6 << 4)) as f32 - 2048.0;\r\n\r\n    let r = clampbits((y1 + 1.370705 * cr) as i32, 12) as u16;\r\n    let g = clampbits((y1 - 0.337633 * cb - 0.698001 * cr) as i32, 12) as u16;\r\n    let b = clampbits((y1 + 1.732446 * cb) as i32, 12) as u16;\r\n    // invert the white balance\r\n    o[0] = clampbits((inv_wb_r * r as i32 + (1<<9)) >> 10, 15) as u16;\r\n    o[1] = g;\r\n    o[2] = clampbits((inv_wb_b * b as i32 + (1<<9)) >> 10, 15) as u16;\r\n\r\n    let r = clampbits((y2 + 1.370705 * cr) as i32, 12) as u16;\r\n    let g = clampbits((y2 - 0.337633 * cb - 0.698001 * cr) as i32, 12) as u16;\r\n    let b = clampbits((y2 + 1.732446 * cb) as i32, 12) as u16;\r\n    // invert the white balance\r\n    o[3] = clampbits((inv_wb_r * r as i32 + (1<<9)) >> 10, 15) as u16;\r\n    o[4] = g;\r\n    o[5] = clampbits((inv_wb_b * b as i32 + (1<<9)) >> 10, 15) as u16;\r\n  }\r\n\r\n  out\r\n}\r\n\r\nfn main() {\r\n  let width = 5000;\r\n  let height = 4000;\r\n\r\n  let mut buffer: Vec<u8> = vec![0; width*height*3];\r\n  // Make sure we don't get optimized out by writing some data into the buffer\r\n  for (i, val) in buffer.chunks_mut(1).enumerate() {\r\n    val[0] = i as u8;\r\n  }\r\n  \r\n  for _ in 0..30 {\r\n    decode_snef_compressed(&buffer, width, height, [2.0, 1.0, 1.5]);\r\n  }\r\n}\r\n```\r\n\r\nI'm running this on my machine across versions with `opt-level=3` and taking the median of 5 runs:\r\n\r\n```sh\r\nsnef_compressed : 1.20.0  BASE 6.96\r\nsnef_compressed : 1.21.0  OK   6.95 (-0%)\r\nsnef_compressed : 1.22.1  OK   6.92 (-0%)\r\nsnef_compressed : 1.23.0  OK   6.93 (-0%)\r\nsnef_compressed : 1.24.1  OK   6.94 (-0%)\r\nsnef_compressed : 1.25.0  OK   7.14 (+2%)\r\nsnef_compressed : 1.26.2  OK   7.09 (+1%)\r\nsnef_compressed : 1.27.2  OK   7.07 (+1%)\r\nsnef_compressed : 1.28.0  OK   7.14 (+2%)\r\nsnef_compressed : 1.29.2  OK   7.01 (+0%)\r\nsnef_compressed : 1.30.0  FAIL 7.37 (+5%)\r\nsnef_compressed : beta    FAIL 7.32 (+5%)\r\nsnef_compressed : nightly FAIL 7.27 (+4%)\r\n```\r\n\r\nI'm not replicating the full 17% and there seems to have already been a smaller regression since 1.25. The difference in replication may be because the original code runs threaded with rayon across 4 threads but only 2 cores (hyperthreading) and that causes a higher penalty.", "closed_by": {"login": "pedrocr", "id": 246322, "node_id": "MDQ6VXNlcjI0NjMyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/246322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedrocr", "html_url": "https://github.com/pedrocr", "followers_url": "https://api.github.com/users/pedrocr/followers", "following_url": "https://api.github.com/users/pedrocr/following{/other_user}", "gists_url": "https://api.github.com/users/pedrocr/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedrocr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedrocr/subscriptions", "organizations_url": "https://api.github.com/users/pedrocr/orgs", "repos_url": "https://api.github.com/users/pedrocr/repos", "events_url": "https://api.github.com/users/pedrocr/events{/privacy}", "received_events_url": "https://api.github.com/users/pedrocr/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55413/timeline", "performed_via_github_app": null, "state_reason": "completed"}