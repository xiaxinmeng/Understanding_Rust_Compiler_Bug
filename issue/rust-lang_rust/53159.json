{"url": "https://api.github.com/repos/rust-lang/rust/issues/53159", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53159/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53159/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53159/events", "html_url": "https://github.com/rust-lang/rust/issues/53159", "id": 348350664, "node_id": "MDU6SXNzdWUzNDgzNTA2NjQ=", "number": 53159, "title": "[nll] hash borrows in scope for better performance", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 849077850, "node_id": "MDU6TGFiZWw4NDkwNzc4NTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-compiler-performance", "name": "WG-compiler-performance", "color": "c2e0c6", "default": false, "description": "Working group: Compiler Performance"}, {"id": 867466241, "node_id": "MDU6TGFiZWw4Njc0NjYyNDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-performant", "name": "NLL-performant", "color": "f799ea", "default": false, "description": "Working towards the \"performance is good\" goal"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-08-07T14:37:26Z", "updated_at": "2019-03-06T16:03:14Z", "closed_at": "2019-03-06T16:03:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So I have an idea for how to improve performance in cases like html5ever where there are tons of borrows in scope at certain points. Right now, we have a pretty naive algorithm that implements over all borrows in scope:\r\n\r\nhttps://github.com/rust-lang/rust/blob/18925dee25ce649562d203e72068e3a57b60b153/src/librustc_mir/borrow_check/path_utils.rs#L40-L52\r\n\r\nI think we would do better if we stored the \"borrows in scope\" organized by the \"root local\" of the borrow:\r\n\r\nhttps://github.com/rust-lang/rust/blob/18925dee25ce649562d203e72068e3a57b60b153/src/librustc_mir/borrow_check/place_ext.rs#L20-L23\r\n\r\nIn fact, I think we could do a \"quick hack\" to make this work. The `BorrowSet` already has an index of borrow indices based on their \"root locals\":\r\n\r\nhttps://github.com/rust-lang/rust/blob/18925dee25ce649562d203e72068e3a57b60b153/src/librustc_mir/borrow_check/borrow_set.rs#L44-L45\r\n\r\nSo what we can do is to modify `each_borrow_involving_path`. Instead of taking an iterator over borrows in scope, it would take some sort of `is_borrow_in_scope: impl Fn(BorrowIndex) -> bool` function. It would then find the root local (if any) of the access path, find all borrows that apply to that root local, and iterate over those, testing if each of them is in scope. \r\n\r\nWe could make this more efficient in many ways -- e.g., using bitsets and things -- but this basic change should already eliminate some of the horrible `O(n^2)` behavior.\r\n\r\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53159/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53159/timeline", "performed_via_github_app": null, "state_reason": "completed"}