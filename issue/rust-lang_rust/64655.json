{"url": "https://api.github.com/repos/rust-lang/rust/issues/64655", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64655/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64655/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64655/events", "html_url": "https://github.com/rust-lang/rust/issues/64655", "id": 496639876, "node_id": "MDU6SXNzdWU0OTY2Mzk4NzY=", "number": 64655, "title": "Drop implementations not being called on panic with Fat LTO.", "user": {"login": "cstorey", "id": 743059, "node_id": "MDQ6VXNlcjc0MzA1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/743059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cstorey", "html_url": "https://github.com/cstorey", "followers_url": "https://api.github.com/users/cstorey/followers", "following_url": "https://api.github.com/users/cstorey/following{/other_user}", "gists_url": "https://api.github.com/users/cstorey/gists{/gist_id}", "starred_url": "https://api.github.com/users/cstorey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cstorey/subscriptions", "organizations_url": "https://api.github.com/users/cstorey/orgs", "repos_url": "https://api.github.com/users/cstorey/repos", "events_url": "https://api.github.com/users/cstorey/events{/privacy}", "received_events_url": "https://api.github.com/users/cstorey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-09-21T10:13:41Z", "updated_at": "2019-10-12T06:25:03Z", "closed_at": "2019-10-12T06:25:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIt looks like calls to `Drop::drop()` are getting removed when using `lto = \"fat\"` for a release build. It doesn't seem to occur with `lto = \"thin\"` or `lto = \"no\"`.\r\n\r\nI've got a test case here: https://github.com/cstorey/fat-lto-drop-repro, which can be reproduced like this:\r\n\r\n```\r\n: cez@ceri-no-mini; cargo --version; rustc --version; cargo run; cargo run --release\r\ncargo 1.37.0 (9edd08916 2019-08-02)\r\nrustc 1.37.0 (eae3437df 2019-08-13)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.00s\r\n     Running `target/debug/lto-drop`\r\nAbout to panic\r\nthread 'main' panicked at '???', src/libcore/option.rs:1034:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\nDropping a Droppable\r\n    Finished release [optimized] target(s) in 0.00s\r\n     Running `target/release/lto-drop`\r\nAbout to panic\r\nthread 'main' panicked at '???', src/libcore/option.rs:1034:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n: cez@ceri-no-mini;\r\n```\r\n\r\n(more details in the [transcript](https://github.com/cstorey/fat-lto-drop-repro/blob/master/README.md))\r\n\r\n\r\n\r\nFor context, I first noticed this in a project where I am using an `mpsc::channel` to communciate between threads, where a producer thread reads messages from the network, and the main thread saves those to a database.\r\n\r\nI was relying on the fact that the `Drop` implementation for a channel will in effect close the channel, so the main thread can find out that the producer has failed, and so we should kill the process. What I saw instead was the producer thread panicing, but the main thread would never get woken up.\r\n\r\nI've seen this on macOS `Darwin 17.7.0 x86_64` and Linux `5.0.0-25-generic #26-Ubuntu SMP Thu Aug 1 12:04:58 UTC 2019 x86_64`.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64655/timeline", "performed_via_github_app": null, "state_reason": "completed"}