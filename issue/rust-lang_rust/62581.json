{"url": "https://api.github.com/repos/rust-lang/rust/issues/62581", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62581/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62581/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62581/events", "html_url": "https://github.com/rust-lang/rust/issues/62581", "id": 466628333, "node_id": "MDU6SXNzdWU0NjY2MjgzMzM=", "number": 62581, "title": "\"Cycle computing supertraits\" error could be more helpful", "user": {"login": "joshlf", "id": 1046063, "node_id": "MDQ6VXNlcjEwNDYwNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1046063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshlf", "html_url": "https://github.com/joshlf", "followers_url": "https://api.github.com/users/joshlf/followers", "following_url": "https://api.github.com/users/joshlf/following{/other_user}", "gists_url": "https://api.github.com/users/joshlf/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshlf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshlf/subscriptions", "organizations_url": "https://api.github.com/users/joshlf/orgs", "repos_url": "https://api.github.com/users/joshlf/repos", "events_url": "https://api.github.com/users/joshlf/events{/privacy}", "received_events_url": "https://api.github.com/users/joshlf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-11T02:43:33Z", "updated_at": "2022-10-23T22:57:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following code:\n\n```rust\ntrait Foo<F> {}\n\ntrait Bar: Foo<Self::F> {\n    type F;\n}\n```\n\nTrying to compile it, we get the following error:\n\n```text\nerror[E0391]: cycle detected when computing the supertraits of `Bar`\n --> src/lib.rs:3:1\n  |\n3 | trait Bar: Foo<Self::F> {\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: ...which again requires computing the supertraits of `Bar`, completing the cycle\nnote: cycle used when collecting item types in top-level module\n --> src/lib.rs:3:1\n  |\n3 | trait Bar: Foo<Self::F> {\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n\n```\n\nTo most programmers, this just looks like Rust won't let you have a trait bound which depends on an associated type in the trait being defined. That's what I thought for a long time. But that's not actually true - what's actually going on is that in order to figure out which `F` is being referred to in `Self::F`, the supertraits need to be computed. If we help the compiler out by disambiguating which `F` we mean, the error goes away:\n\n```rust\ntrait Foo<F> {}\n\ntrait Bar: Foo<<Self as Bar>::F> {\n    type F;\n}\n```\n\nI suggest that we improve the error message in this case to suggest disambiguating any associated types in trait bounds in order to steer users towards this solution.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"naiveai\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62581/reactions", "total_count": 8, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 8, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62581/timeline", "performed_via_github_app": null, "state_reason": null}