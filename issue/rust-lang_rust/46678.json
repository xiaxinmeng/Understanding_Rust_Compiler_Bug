{"url": "https://api.github.com/repos/rust-lang/rust/issues/46678", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46678/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46678/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46678/events", "html_url": "https://github.com/rust-lang/rust/issues/46678", "id": 281247967, "node_id": "MDU6SXNzdWUyODEyNDc5Njc=", "number": 46678, "title": "Better error reporting for Sync and type that impl !Sync", "user": {"login": "gbip", "id": 15819864, "node_id": "MDQ6VXNlcjE1ODE5ODY0", "avatar_url": "https://avatars.githubusercontent.com/u/15819864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbip", "html_url": "https://github.com/gbip", "followers_url": "https://api.github.com/users/gbip/followers", "following_url": "https://api.github.com/users/gbip/following{/other_user}", "gists_url": "https://api.github.com/users/gbip/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbip/subscriptions", "organizations_url": "https://api.github.com/users/gbip/orgs", "repos_url": "https://api.github.com/users/gbip/repos", "events_url": "https://api.github.com/users/gbip/events{/privacy}", "received_events_url": "https://api.github.com/users/gbip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-12T03:45:28Z", "updated_at": "2020-02-14T09:26:01Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "It would make a lot more sense if when a type `impl !Sync` the compiler could report an other error than the error that comes from [this impl block](https://doc.rust-lang.org/beta/src/core/marker.rs.html#557).\r\n\r\nFor example, take a look at this code :\r\n\r\n```rust\r\nuse std::sync::mpsc::channel;\r\nuse std::thread;\r\n\r\nstruct Foo {}\r\n\r\nimpl Foo {\r\n    fn do_something(&self) {\r\n        println!(\"hello\");\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let (tx, rx) = channel::<Foo>();\r\n    thread::spawn(move || rx.iter().map(|f| f.do_something()));\r\n}\r\n```\r\n\r\nWhich outputs : \r\n```\r\n17 |     thread::spawn(move || rx.iter().map(|f| f.do_something()));\r\n   |     ^^^^^^^^^^^^^ `std::sync::mpsc::Receiver<Foo>` cannot be shared between threads safely\r\n   |\r\n   = help: the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Receiver<Foo>`\r\n   = note: required because of the requirements on the impl of `std::marker::Send` for `&std::sync::mpsc::Receiver<Foo>`\r\n   = note: required because it appears within the type `std::sync::mpsc::Iter<'_, Foo>`\r\n   = note: required because it appears within the type `std::iter::Map<std::sync::mpsc::Iter<'_, Foo>, [closure@src/main.rs:17:41: 17:61]>`\r\n   = note: required by `std::thread::spawn`\r\n```\r\n\r\nIt would be way better if it could just say that `Receiver` is [explicitly](https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#339) not `Sync`.\r\n\r\nI know that this a bad example because the error is actually due to the fact that the compiler does not move `rx` because we are returning a value from the call to `map()`, but it was the only one that I had...", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46678/timeline", "performed_via_github_app": null, "state_reason": null}