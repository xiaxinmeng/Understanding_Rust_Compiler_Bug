{"url": "https://api.github.com/repos/rust-lang/rust/issues/49378", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49378/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49378/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49378/events", "html_url": "https://github.com/rust-lang/rust/issues/49378", "id": 308563533, "node_id": "MDU6SXNzdWUzMDg1NjM1MzM=", "number": 49378, "title": "Lifetime inference again", "user": {"login": "axos88", "id": 1281218, "node_id": "MDQ6VXNlcjEyODEyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1281218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axos88", "html_url": "https://github.com/axos88", "followers_url": "https://api.github.com/users/axos88/followers", "following_url": "https://api.github.com/users/axos88/following{/other_user}", "gists_url": "https://api.github.com/users/axos88/gists{/gist_id}", "starred_url": "https://api.github.com/users/axos88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axos88/subscriptions", "organizations_url": "https://api.github.com/users/axos88/orgs", "repos_url": "https://api.github.com/users/axos88/repos", "events_url": "https://api.github.com/users/axos88/events{/privacy}", "received_events_url": "https://api.github.com/users/axos88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867483626, "node_id": "MDU6TGFiZWw4Njc0ODM2MjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-fixed-by-NLL", "name": "NLL-fixed-by-NLL", "color": "f799ea", "default": false, "description": "Bugs fixed, but only when NLL is enabled."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-26T13:05:16Z", "updated_at": "2018-03-26T19:57:54Z", "closed_at": "2018-03-26T19:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I might be wrong here, but I would expect the following code to compile, and print  `Foo(6)`, as the value of `b`, owning the reference to a is moved into dropped after the match block. \r\nSeems like it isn't because it is complaining that \r\n\r\n```\r\nerror[E0502]: cannot borrow `a` as immutable because it is also borrowed as mutable\r\n  --> src/routes/config.rs:95:22\r\n   |\r\n86 |     let b = get_foo(&mut a);\r\n   |                          - mutable borrow occurs here\r\n...\r\n95 |     println!(\"{:?}\", a);\r\n   |                      ^ immutable borrow occurs here\r\n96 | }\r\n```\r\n\r\nBut dropping the value of `b` doesn't work either, because it is partially moved:\r\n\r\n```\r\nerror[E0382]: use of partially moved value: `b`\r\n  --> src/routes/config.rs:93:10\r\n   |\r\n89 |         Some(value) => *value = y,\r\n   |              ----- value moved here\r\n...\r\n93 |     drop(b);\r\n   |          ^ value used here after move\r\n   |\r\n   = note: move occurs because the value has type `&mut u32`, which does not implement the `Copy` trait\r\n```\r\n\r\nIs there a better way to fix this rather than putting lines `let b` and `match b` into an inner block, that just looks wierd and ugly?\r\nShouldn't the compile be able to compile that code?\r\n\r\n\r\n```\r\n#[derive(Debug)]\r\nstruct Foo(u32);\r\n\r\nfn get_foo(bar: &mut Foo) -> Option<&mut u32> {\r\n    Some(&mut bar.0)\r\n}\r\n\r\n\r\npub fn test() {\r\n    let mut x = 5;\r\n    let mut y = 6;\r\n    let mut a = Foo(x);\r\n\r\n    let b = get_foo(&mut a);\r\n\r\n//{\r\n    match b {\r\n        Some(value) => *value = y,\r\n        _ => ()\r\n    }\r\n//}\r\n\r\n//    drop(b);\r\n\r\n    println!(\"{:?}\", a);\r\n}\r\n```", "closed_by": {"login": "bobtwinkles", "id": 1514748, "node_id": "MDQ6VXNlcjE1MTQ3NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1514748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobtwinkles", "html_url": "https://github.com/bobtwinkles", "followers_url": "https://api.github.com/users/bobtwinkles/followers", "following_url": "https://api.github.com/users/bobtwinkles/following{/other_user}", "gists_url": "https://api.github.com/users/bobtwinkles/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobtwinkles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobtwinkles/subscriptions", "organizations_url": "https://api.github.com/users/bobtwinkles/orgs", "repos_url": "https://api.github.com/users/bobtwinkles/repos", "events_url": "https://api.github.com/users/bobtwinkles/events{/privacy}", "received_events_url": "https://api.github.com/users/bobtwinkles/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49378/timeline", "performed_via_github_app": null, "state_reason": "completed"}