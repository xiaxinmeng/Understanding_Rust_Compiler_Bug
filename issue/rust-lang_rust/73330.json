{"url": "https://api.github.com/repos/rust-lang/rust/issues/73330", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73330/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73330/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73330/events", "html_url": "https://github.com/rust-lang/rust/issues/73330", "id": 638238700, "node_id": "MDU6SXNzdWU2MzgyMzg3MDA=", "number": 73330, "title": "Majority of rust stack trace entries are of no interest to users", "user": {"login": "jgarvin", "id": 102322, "node_id": "MDQ6VXNlcjEwMjMyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/102322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgarvin", "html_url": "https://github.com/jgarvin", "followers_url": "https://api.github.com/users/jgarvin/followers", "following_url": "https://api.github.com/users/jgarvin/following{/other_user}", "gists_url": "https://api.github.com/users/jgarvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgarvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgarvin/subscriptions", "organizations_url": "https://api.github.com/users/jgarvin/orgs", "repos_url": "https://api.github.com/users/jgarvin/repos", "events_url": "https://api.github.com/users/jgarvin/events{/privacy}", "received_events_url": "https://api.github.com/users/jgarvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-13T21:47:04Z", "updated_at": "2020-06-13T21:52:17Z", "closed_at": "2020-06-13T21:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I made a program that just tries to access a value in a hash table that isn't there. This is using latest stable rust on Linux. Unless you're specifically debugging the backtrace mechanism itself, you don't need entries 0-12. and if you're not debugging the panic mechanism itself you don't need entries 17-26. Ironically a message is printed at the end saying that some entries have been omitted! All of these low-level internal entries are just going to be confusing for new users.\r\n\r\n```\r\nthread 'main' panicked at 'no entry found for key', game/src/main.rs:54:21\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1504\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:511\r\n  11: rust_begin_unwind\r\n             at src/libstd/panicking.rs:419\r\n  12: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:111\r\n  13: core::option::expect_failed\r\n             at src/libcore/option.rs:1260\r\n  14: core::option::Option<T>::expect\r\n             at /home/mmm/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/option.rs:347\r\n  15: <std::collections::hash::map::HashMap<K,V,S> as core::ops::index::Index<&Q>>::index\r\n             at /home/mmm/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/collections/hash/map.rs:1023\r\n  16: game::main\r\n             at game/src/main.rs:54\r\n  17: std::rt::lang_start::{{closure}}\r\n             at /home/mmm/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:67\r\n  18: std::rt::lang_start_internal::{{closure}}\r\n             at src/libstd/rt.rs:52\r\n  19: std::panicking::try::do_call\r\n             at src/libstd/panicking.rs:331\r\n  20: std::panicking::try\r\n             at src/libstd/panicking.rs:274\r\n  21: std::panic::catch_unwind\r\n             at src/libstd/panic.rs:394\r\n  22: std::rt::lang_start_internal\r\n             at src/libstd/rt.rs:51\r\n  23: std::rt::lang_start\r\n             at /home/mmm/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/rt.rs:67\r\n  24: main\r\n  25: __libc_start_main\r\n  26: _start\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73330/timeline", "performed_via_github_app": null, "state_reason": "completed"}