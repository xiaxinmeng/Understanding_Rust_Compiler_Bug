{"url": "https://api.github.com/repos/rust-lang/rust/issues/39699", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39699/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39699/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39699/events", "html_url": "https://github.com/rust-lang/rust/issues/39699", "id": 206594148, "node_id": "MDU6SXNzdWUyMDY1OTQxNDg=", "number": 39699, "title": "Tracking issue for sanitizer support", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}, {"id": 630870359, "node_id": "MDU6TGFiZWw2MzA4NzAzNTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-sanitizers", "name": "A-sanitizers", "color": "f7e101", "default": false, "description": "Area: Sanitizers for correctness and code quality."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537250192, "node_id": "LA_kwDOAAsO6M7S1ieQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-needs-summary", "name": "S-tracking-needs-summary", "color": "4682b4", "default": false, "description": "It's hard to tell what's been done and what hasn't! Someone should do some investigation."}, {"id": 5226909857, "node_id": "LA_kwDOAAsO6M8AAAABN4xQoQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-cli", "name": "A-cli", "color": "f7e101", "default": false, "description": "Area: Command line interface to the compiler."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2017-02-09T18:46:27Z", "updated_at": "2023-06-04T20:53:05Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently we have:\r\n\r\n- A rustc flag, `-Z sanitizer`, to sanitize rlibs (it adds an extra LLVM pass/attribute) and executables (it links to the sanitizer runtime). Added in #38699.\r\n\r\n- An attribute `#[no_sanitize]` to disable sanitization on specific functions. Also lints if those functions are marked as requesting inlining. Added in https://github.com/rust-lang/rust/pull/68164.\r\n  - `#[no_sanitize]` suppresses `#[inline]` hints. A lint is issued if combined with `#[inline(always)]`.\r\n\r\n- A few violations (false positives?) in the test runner\r\n  - [x] ThreadSanitizer detects a data race in the test runner (`rustc --test`) #39608\r\n  - [x] MemorySanitizer detects an use of unitialized value in the test runner (`rustc --test`) #39610\r\n\r\n- Known issues\r\n  - [x] Incremental compilation breaks sanitizers #39611\r\n\r\n- Unresolved questions:\r\n  - [ ] Should we call the attribute `#[no_sanitize]` or perhaps something like `#[sanitize(never)]` or some other variation? In particular, might we at some point want \"positive options\" like `#[sanitize(miri(aggressive))]`? There is much back and forth in #68164.\r\n  - [ ] What should the user experience be to enable sanitizers, particularly when using cargo? Should cargo have first-class support? Is that blocked on build-std stabilizing?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39699/reactions", "total_count": 37, "+1": 23, "-1": 0, "laugh": 0, "hooray": 7, "confused": 0, "heart": 5, "rocket": 2, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39699/timeline", "performed_via_github_app": null, "state_reason": null}