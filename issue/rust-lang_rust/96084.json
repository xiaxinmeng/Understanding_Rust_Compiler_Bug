{"url": "https://api.github.com/repos/rust-lang/rust/issues/96084", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96084/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96084/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96084/events", "html_url": "https://github.com/rust-lang/rust/issues/96084", "id": 1205714755, "node_id": "I_kwDOAAsO6M5H3b9D", "number": 96084, "title": "rebinding values in an async function can double the memory usage", "user": {"login": "jkarneges", "id": 521953, "node_id": "MDQ6VXNlcjUyMTk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/521953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkarneges", "html_url": "https://github.com/jkarneges", "followers_url": "https://api.github.com/users/jkarneges/followers", "following_url": "https://api.github.com/users/jkarneges/following{/other_user}", "gists_url": "https://api.github.com/users/jkarneges/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkarneges/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkarneges/subscriptions", "organizations_url": "https://api.github.com/users/jkarneges/orgs", "repos_url": "https://api.github.com/users/jkarneges/repos", "events_url": "https://api.github.com/users/jkarneges/events{/privacy}", "received_events_url": "https://api.github.com/users/jkarneges/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259720434, "node_id": "MDU6TGFiZWwxMjU5NzIwNDM0", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Polish", "name": "AsyncAwait-Polish", "color": "d4c5f9", "default": false, "description": "Async-await issues that are part of the \"polish\" area"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-04-15T16:44:26Z", "updated_at": "2022-04-25T16:14:04Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Rebinding a value within an async function can cause the generated future to require twice the memory for the value. This seems to only happen if the value was borrowed earlier:\r\n\r\n```rust\r\nuse std::mem;\r\n\r\nasync fn foo() {\r\n    let x = [0u8; 100];\r\n    async {}.await;\r\n    println!(\"{}\", x.len());\r\n}\r\n\r\nasync fn a() {\r\n    let fut = foo();\r\n    let fut = fut;\r\n    fut.await;\r\n}\r\n\r\nasync fn b() {\r\n    let fut = foo();\r\n    println!(\"{}\", mem::size_of_val(&fut));\r\n    let fut = fut;\r\n    fut.await;\r\n}\r\n\r\nfn main() {\r\n    assert_eq!(mem::size_of_val(&foo()), 102);\r\n\r\n    // 1 + sizeof(foo)\r\n    assert_eq!(mem::size_of_val(&a()), 103);\r\n\r\n    // 1 + (sizeof(foo) * 2)\r\n    assert_eq!(mem::size_of_val(&b()), 205);\r\n}\r\n```\r\n\r\n[Playground link](https://play.rust-lang.org/?version=stable&mode=release&edition=2021&gist=d4f0c621befd754b4a52fe3cf8e1ce13).\r\n\r\nI don't know if this counts as a bug but the behavior is a bit surprising.\r\n\r\nThe effect is present in both debug and release modes with rustc 1.60.0.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96084/timeline", "performed_via_github_app": null, "state_reason": null}