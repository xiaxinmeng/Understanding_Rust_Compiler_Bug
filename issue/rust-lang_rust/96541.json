{"url": "https://api.github.com/repos/rust-lang/rust/issues/96541", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96541/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96541/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96541/events", "html_url": "https://github.com/rust-lang/rust/issues/96541", "id": 1219915022, "node_id": "I_kwDOAAsO6M5Itm0O", "number": 96541, "title": "Suggest updating type alias in this case where it causes a compile error", "user": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-04-29T05:42:49Z", "updated_at": "2022-05-10T02:03:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=dc49c7cda737c71feb919490edfa4578)\r\n\r\n```rust\r\nfn main() {\r\n    let non_copy = String::new();\r\n\r\n    type F = dyn Fn();\r\n    let f: &F = &|| { &non_copy; };\r\n\r\n    fn takes_dyn_ref(_: &dyn Fn()) {}\r\n\r\n    takes_dyn_ref(f);\r\n\r\n    drop(non_copy);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0597]](https://doc.rust-lang.org/stable/error-index.html#E0597): `non_copy` does not live long enough\r\n  [--> src/main.rs:5:24\r\n](https://play.rust-lang.org/#)   |\r\n5  |     let f: &F = &|| { &non_copy; };\r\n   |            --    --    ^^^^^^^^ borrowed value does not live long enough\r\n   |            |     |\r\n   |            |     value captured here\r\n   |            type annotation requires that `non_copy` is borrowed for `'static`\r\n...\r\n12 | }\r\n   | - `non_copy` dropped here while still borrowed\r\n\r\nerror[[E0505]](https://doc.rust-lang.org/stable/error-index.html#E0505): cannot move out of `non_copy` because it is borrowed\r\n  [--> src/main.rs:11:10\r\n](https://play.rust-lang.org/#)   |\r\n5  |     let f: &F = &|| { &non_copy; };\r\n   |            --    --    -------- borrow occurs due to use in closure\r\n   |            |     |\r\n   |            |     borrow of `non_copy` occurs here\r\n   |            type annotation requires that `non_copy` is borrowed for `'static`\r\n...\r\n11 |     drop(non_copy);\r\n   |          ^^^^^^^^ move out of `non_copy` occurs here\r\n\r\nSome errors have detailed explanations: E0505, E0597.\r\nFor more information about an error, try `rustc --explain E0505`.\r\nerror: could not compile `playground` due to 2 previous errors\r\n```\r\n\r\nThe following code compiles: [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=4c30922ee1d652a8df907b24616a0b8d)\r\n\r\n```rust\r\nfn main() {\r\n    let non_copy = String::new();\r\n\r\n    type F<'a> = dyn Fn() + 'a;\r\n    let f: &F<'_> = &|| { &non_copy; };\r\n\r\n    fn takes_dyn_ref(_: &dyn Fn()) {}\r\n\r\n    takes_dyn_ref(f);\r\n\r\n    drop(non_copy);\r\n}\r\n```\r\n\r\nAs does entirely removing the type alias: [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=2dbd102aa9f6b6b9e359588b3c63eec4)\r\n\r\n```rust\r\nfn main() {\r\n    let non_copy = String::new();\r\n\r\n    let f: &dyn Fn() = &|| { &non_copy; };\r\n\r\n    fn takes_dyn_ref(_: &dyn Fn()) {}\r\n\r\n    takes_dyn_ref(f);\r\n\r\n    drop(non_copy);\r\n}\r\n```\r\n\r\nIt took me more time than I would have liked to figure out that was the way to address the compile error, when I encountered a simlar in a real project. The parts that were reduced to `takes_dyn_ref` and `drop` in this example were from two different dependencies. Also, the part that was reduced to `non_copy` was also from one of those dependencies, and cannot be meaningfully copied, while preserving the intended semantics. The type alias was one that I had written.\r\n\r\nSo, I think in this case the the above two options would have been more or less the only options to make the code compile, while preserving the intended semantics.\r\n\r\nI think that ideally the output should recommend one or both of those options. For instance, it could contain something like:\r\n```\r\nhelp: Add a lifetime parameter to the type alias and specify the lifetime\r\n  |\r\n4 |     type F<'a> = dyn Fn() + 'a;\r\n5 |     let f: &F<'_> = &|| { &non_copy; };\r\n  |              \r\n```\r\nOr maybe it could suggest inlining the aliased type, and removing the type alias.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96541/timeline", "performed_via_github_app": null, "state_reason": null}