{"url": "https://api.github.com/repos/rust-lang/rust/issues/46639", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46639/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46639/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46639/events", "html_url": "https://github.com/rust-lang/rust/issues/46639", "id": 280838799, "node_id": "MDU6SXNzdWUyODA4Mzg3OTk=", "number": 46639, "title": "FutureResult inner type mismatch error points to wrong line", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-10T19:50:55Z", "updated_at": "2021-02-13T00:50:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Quite apart from https://github.com/rust-lang/rust/issues/46606 but involving [the same test code](https://git.neosmart.net/mqudsi/futuretest/src/rust-46606), an inner type mismatch in `FutureResult` chaining generates an error for one of mismatched types (perf #46606, *which* type is a matter of some contention), but aside from which type triggers the error, the error ultimately points to the wrong location.\r\n\r\nFor example, in the code below:\r\n\r\n```rust\r\n    let f = future::result(Ok(()))\r\n        .map_err(|()| \"&'static str error\")\r\n        .map(|_| future::result(Err(\"another &'static str error\")))\r\n        .and_then(|_|\r\n             future::result(Ok(())\r\n                .map_err(|()| \"String error\".to_owned())\r\n            )\r\n        )\r\n    ;\r\n```\r\n\r\nThe error \r\n\r\n```\r\n13 |         .and_then(|_|\r\n   |          ^^^^^^^^ expected struct `std::string::String`, found &str\r\n```\r\n\r\npoints to the combinator resolving to a `String`, which:\r\n\r\n* According to the compiler, `String` was the _right_ result and the `&'static str` result was the wrong one, so if anything, the error should be on the `map_err` or `map` lines and not the `and_then` line, however,\r\n* The error should *actually* point to the line of code that returned the `&'str` the compiler is complaining about, and not the function accepting the closure returning the wrong type.\r\n\r\n(I imagine what is happening here is that `and_then` is an impl function being passed a `FutureMap` structure, and the compiler is finding a mismatch between the expected type passed to the the `and_then` function vs the actual inner type of `FutureMap`, and complaining at that juncture. Additionally, I no longer have any clue whether I should be posting criticism of compiler errors/hints while compiling against futures-rs here or in the rust-lang repo. Forgive me.)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46639/timeline", "performed_via_github_app": null, "state_reason": null}