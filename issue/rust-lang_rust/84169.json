{"url": "https://api.github.com/repos/rust-lang/rust/issues/84169", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84169/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84169/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84169/events", "html_url": "https://github.com/rust-lang/rust/issues/84169", "id": 857250716, "node_id": "MDU6SXNzdWU4NTcyNTA3MTY=", "number": 84169, "title": "Internal compiler error when testing derive-macro", "user": {"login": "CloseChoice", "id": 31857876, "node_id": "MDQ6VXNlcjMxODU3ODc2", "avatar_url": "https://avatars.githubusercontent.com/u/31857876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CloseChoice", "html_url": "https://github.com/CloseChoice", "followers_url": "https://api.github.com/users/CloseChoice/followers", "following_url": "https://api.github.com/users/CloseChoice/following{/other_user}", "gists_url": "https://api.github.com/users/CloseChoice/gists{/gist_id}", "starred_url": "https://api.github.com/users/CloseChoice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CloseChoice/subscriptions", "organizations_url": "https://api.github.com/users/CloseChoice/orgs", "repos_url": "https://api.github.com/users/CloseChoice/repos", "events_url": "https://api.github.com/users/CloseChoice/events{/privacy}", "received_events_url": "https://api.github.com/users/CloseChoice/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-04-13T19:17:31Z", "updated_at": "2021-05-02T02:40:07Z", "closed_at": "2021-05-02T02:40:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n//lib.rs\r\nuse proc_macro::{TokenStream};\r\nuse proc_macro2::{Span};\r\nuse syn::{parse_macro_input, DeriveInput, Ident};\r\nuse quote::quote;\r\n\r\n#[proc_macro_derive(Builder)]\r\npub fn derive(input: TokenStream) -> TokenStream {\r\n    let input = parse_macro_input!(input as DeriveInput);\r\n\r\n    let command = Ident::new(input.ident.to_string().as_str(), Span::call_site());\r\n    let cbuilder_name = format!(\"{}Builder\", input.ident.to_string());\r\n    let command_builder = Ident::new(cbuilder_name.as_str(), Span::call_site());\r\n    let type_definition = quote! {\r\n        pub struct #command_builder {\r\n            executable: Option<String>,\r\n            args: Option<Vec<String>>,\r\n            env: Option<Vec<String>>,\r\n            current_dir: Option<String>,\r\n        }\r\n    };\r\n    let methods = quote! {\r\n        impl #command {\r\n            pub fn builder() -> #command_builder {\r\n                #command_builder {\r\n                    executable: None,\r\n                    args: None,\r\n                    env: None,\r\n                    current_dir: None,\r\n                }\r\n            }\r\n        }\r\n\r\n        impl #command_builder {\r\n            // use std::error::Error;\r\n            // type Error: Error;\r\n            fn executable(&mut self, executable: String) -> &mut Self {\r\n                self.executable = Some(executable);\r\n                self\r\n            }\r\n\r\n            fn args(&mut self, args: Vec<String>) -> &mut Self {\r\n                self.args = Some(args);\r\n                self\r\n            }\r\n\r\n            fn env(&mut self, env: Vec<String>) -> &mut Self  {\r\n                self.env = Some(env);\r\n                self\r\n            }\r\n\r\n            fn current_dir(&mut self, current_dir: String) -> &mut Self {\r\n                self.current_dir = Some(current_dir);\r\n                self\r\n            }\r\n\r\n            fn build(&mut self) -> Result<#command, Box<dyn Error>> {\r\n                let c = #command {\r\n                    executable: self.executable.unwrap().into(),\r\n                    args: self.args.unwrap().into(),\r\n                    env: self.env.unwrap().into(),\r\n                    current_dir: self.current_dir.unwrap().into()\r\n                };\r\n                Ok(c)\r\n            }\r\n        }\r\n    };\r\n\r\n    let tokens = quote! {\r\n        #type_definition\r\n        #methods\r\n    };\r\n    \r\n    tokens.into()\r\n}\r\n\r\n// tests/progress.rs\r\n#[test]\r\nfn tests() {\r\n    let t = trybuild::TestCases::new();\r\n    t.pass(\"tests/01-parse.rs\");\r\n    t.pass(\"tests/02-create-builder.rs\");\r\n    t.pass(\"tests/03-call-setters.rs\");\r\n    // t.pass(\"tests/04-call-build.rs\");\r\n    //t.pass(\"tests/05-method-chaining.rs\");\r\n    //t.pass(\"tests/06-optional-field.rs\");\r\n    //t.pass(\"tests/07-repeated-field.rs\");\r\n    //t.compile_fail(\"tests/08-unrecognized-attribute.rs\");\r\n    //t.pass(\"tests/09-redefined-prelude-types.rs\");\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (07e0e2ec2 2021-03-24)\r\nbinary: rustc\r\ncommit-hash: 07e0e2ec268c140e607e1ac7f49f145612d0f597\r\ncommit-date: 2021-03-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'found unstable fingerprints for predicates_of(core[3998]::convert::From): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::marker::Sized>)), /home/tobias/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:365:20: 365:25 (#0)), (Binder(TraitPredicate(<T as std::marker::Sized>)), /home/tobias/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:365:16: 365:17 (#0)), (Binder(TraitPredicate(<Self as std::convert::From<T>>)), /home/tobias/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:365:1: 365:25 (#0))] }', /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C prefer-dynamic -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nquery stack during panic:\r\n#0 [predicates_of] computing predicates of `std::convert::From`\r\n#1 [typeck] type-checking `derive`\r\nend of query stack\r\nerror: build failed\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nI am using \r\n```\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 18.04.5 LTS\r\nRelease:\t18.04\r\nCodename:\tbionic\r\n```\r\n\r\nThe error originated when run with ```cargo test```", "closed_by": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84169/timeline", "performed_via_github_app": null, "state_reason": "completed"}