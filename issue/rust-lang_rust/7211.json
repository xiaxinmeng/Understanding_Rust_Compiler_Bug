{"url": "https://api.github.com/repos/rust-lang/rust/issues/7211", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7211/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7211/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7211/events", "html_url": "https://github.com/rust-lang/rust/issues/7211", "id": 15673213, "node_id": "MDU6SXNzdWUxNTY3MzIxMw==", "number": 7211, "title": "incorrect borrow conflict with temporary borrow", "user": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}], "state": "closed", "locked": false, "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2013-06-18T07:35:02Z", "updated_at": "2015-02-02T17:18:15Z", "closed_at": "2015-02-02T17:18:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\n    pub fn sub_free_region(&self, sub: FreeRegion, sup: FreeRegion) -> bool {\n        /*!\n         * Determines whether two free regions have a subregion relationship\n         * by walking the graph encoded in `free_region_map`.  Note that\n         * it is possible that `sub != sup` and `sub <= sup` and `sup <= sub`\n         * (that is, the user can give two different names to the same lifetime).\n         */\n\n        if sub == sup {\n            return true;\n        }\n\n        // Do a little breadth-first-search here.  The `queue` list\n        // doubles as a way to detect if we've seen a particular FR\n        // before.  Note that we expect this graph to be an *extremely\n        // shallow* tree.\n        let mut queue = ~[sub];\n        let mut i = 0;\n        while i < queue.len() {\n            match self.free_region_map.find(&queue[i]) {\n                Some(parents) => {\n                    for parents.each |parent| {\n                        if *parent == sup {\n                            return true;\n                        }\n\n                        if !queue.iter().contains_(&parent) {\n                            queue.push(*parent);\n                        }\n                    }\n                }\n                None => {}\n            }\n            i += 1;\n        }\n        return false;\n    }\n\n```\n\n```\n/home/strcat/projects/rust/src/librustc/middle/region.rs:206:28: 206:33 error: cannot borrow `queue` as mutable because it is also borrowed as immutable\n/home/strcat/projects/rust/src/librustc/middle/region.rs:206                             queue.push(*parent);\n                                                                                         ^~~~~\n/home/strcat/projects/rust/src/librustc/middle/region.rs:205:28: 205:33 note: second borrow of `queue` occurs here\n/home/strcat/projects/rust/src/librustc/middle/region.rs:205                         if !queue.iter().contains_(&parent) {\n                                                                                         ^~~~~\n\n```\n\nThis happens with the expression done in a block by itself with the `bool` result stored in a variable too. It's not related to it being in the `if` statement's conditional.\n\nI'm finding it hard to reproduce a simple example, I'll get one here when I have time.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7211/timeline", "performed_via_github_app": null, "state_reason": "completed"}