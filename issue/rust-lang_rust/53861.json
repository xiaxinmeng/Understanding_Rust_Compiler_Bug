{"url": "https://api.github.com/repos/rust-lang/rust/issues/53861", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53861/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53861/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53861/events", "html_url": "https://github.com/rust-lang/rust/issues/53861", "id": 356041292, "node_id": "MDU6SXNzdWUzNTYwNDEyOTI=", "number": 53861, "title": "Function missing PartialEq when type not explicitly annotated", "user": {"login": "TheDan64", "id": 3749239, "node_id": "MDQ6VXNlcjM3NDkyMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3749239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheDan64", "html_url": "https://github.com/TheDan64", "followers_url": "https://api.github.com/users/TheDan64/followers", "following_url": "https://api.github.com/users/TheDan64/following{/other_user}", "gists_url": "https://api.github.com/users/TheDan64/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheDan64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheDan64/subscriptions", "organizations_url": "https://api.github.com/users/TheDan64/orgs", "repos_url": "https://api.github.com/users/TheDan64/repos", "events_url": "https://api.github.com/users/TheDan64/events{/privacy}", "received_events_url": "https://api.github.com/users/TheDan64/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-31T16:10:24Z", "updated_at": "2023-04-05T17:35:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Suppose we have an extern function foo for use in FFI. For some reason an explicit type annotation allows use of the PartialEq trait, but no type annotation does not (even though the error message states the type is identical: `unsafe extern \"C\" fn() -> i32 {foo}`):\r\n\r\n```rust\r\n#[no_mangle]\r\npub unsafe extern \"C\" fn foo() -> i32 { return 1; }\r\nfn main() {\r\n    let mut fn_ptr: unsafe extern \"C\" fn() -> i32 = foo;\r\n    let mut fn_ptr2 = foo;\r\n    \r\n    fn_ptr == fn_ptr; // Ok\r\n    fn_ptr2 == fn_ptr2; // Err\r\n}\r\n```\r\n\r\nWhich errors with:\r\n```shell\r\nerror[E0369]: binary operation `==` cannot be applied to type `unsafe extern \"C\" fn() -> i32 {foo}`\r\n --> src/main.rs:8:5\r\n  |\r\n8 |     fn_ptr2 == fn_ptr2; // Err\r\n  |     ^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: an implementation of `std::cmp::PartialEq` might be missing for `unsafe extern \"C\" fn() -> i32 {foo}`\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53861/timeline", "performed_via_github_app": null, "state_reason": null}