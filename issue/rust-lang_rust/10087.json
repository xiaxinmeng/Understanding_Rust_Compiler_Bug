{"url": "https://api.github.com/repos/rust-lang/rust/issues/10087", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10087/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10087/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10087/events", "html_url": "https://github.com/rust-lang/rust/issues/10087", "id": 21631798, "node_id": "MDU6SXNzdWUyMTYzMTc5OA==", "number": 10087, "title": "Audit for binary IEEE 754-2008 compliance on relevant platforms", "user": {"login": "auroranockert", "id": 49616, "node_id": "MDQ6VXNlcjQ5NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/49616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auroranockert", "html_url": "https://github.com/auroranockert", "followers_url": "https://api.github.com/users/auroranockert/followers", "following_url": "https://api.github.com/users/auroranockert/following{/other_user}", "gists_url": "https://api.github.com/users/auroranockert/gists{/gist_id}", "starred_url": "https://api.github.com/users/auroranockert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auroranockert/subscriptions", "organizations_url": "https://api.github.com/users/auroranockert/orgs", "repos_url": "https://api.github.com/users/auroranockert/repos", "events_url": "https://api.github.com/users/auroranockert/events{/privacy}", "received_events_url": "https://api.github.com/users/auroranockert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 2139259423, "node_id": "MDU6TGFiZWwyMTM5MjU5NDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-floating-point", "name": "A-floating-point", "color": "f7e101", "default": false, "description": "Area: Floating point numbers and arithmetic"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-10-26T10:47:05Z", "updated_at": "2021-10-05T17:30:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@thestinger filed https://github.com/mozilla/rust/issues/9987, and I thought we should get the ball rolling on documenting and testing IEEE 754-2008 compliance for Rust on non-embedded platforms.\n\nI don't think that there isn't any formal decision that we should implement IEEE 754-2008 but it would _really_ make sense for many applications of Rust.\n- Scientific applications\n- Games with synchronized or reproducible simulations (multiplayer, recordings)\n- JS interpreters\n- Anything that needs to be portable\n\nThe (binary part of the) standard covers\n- Floating-point data format (for interchange and for computation)\n- Basic operations (add, sub, mul, div, fma, sqrt, compare, &c.)\n- Integer to floating-point conversion\n- Floating-point to floating-point conversion\n- Floating-point to string conversion\n- Floating-point exceptions and handling (NaNs, exceptions, flags, &c.)\n\nSo all of this would need tests, and documentation. And my plan is to compile a suite of tests by slowly going through the standard page-by-page and write the basic conformance tests, then do another (even slower pass) that compiles another list of accuracy tests.\n\n@bjz, @thestinger, @pcwalton, @catamorphism, @graydon and anyone interested:  Any inputs on this? Is it a good idea at this point in time?\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10087/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10087/timeline", "performed_via_github_app": null, "state_reason": null}