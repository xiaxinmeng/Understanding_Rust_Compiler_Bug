{"url": "https://api.github.com/repos/rust-lang/rust/issues/68589", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68589/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68589/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68589/events", "html_url": "https://github.com/rust-lang/rust/issues/68589", "id": 555964661, "node_id": "MDU6SXNzdWU1NTU5NjQ2NjE=", "number": 68589, "title": "casting trait methods to FnOnce(&mut dyn Trait) is not ergonomic", "user": {"login": "programmerjake", "id": 4584340, "node_id": "MDQ6VXNlcjQ1ODQzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4584340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/programmerjake", "html_url": "https://github.com/programmerjake", "followers_url": "https://api.github.com/users/programmerjake/followers", "following_url": "https://api.github.com/users/programmerjake/following{/other_user}", "gists_url": "https://api.github.com/users/programmerjake/gists{/gist_id}", "starred_url": "https://api.github.com/users/programmerjake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/programmerjake/subscriptions", "organizations_url": "https://api.github.com/users/programmerjake/orgs", "repos_url": "https://api.github.com/users/programmerjake/repos", "events_url": "https://api.github.com/users/programmerjake/events{/privacy}", "received_events_url": "https://api.github.com/users/programmerjake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-28T03:43:17Z", "updated_at": "2020-01-28T19:17:55Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "In the following code, I'm trying to cast `Trait::f` to `FnOnce(&mut dyn Trait)` which should be possible, but the obvious method doesn't work. None of the combinations I tried got it to work (I could just use a lambda that called `f`, but that defeats the purpose).\r\n\r\n```rust\r\ntrait Trait {\r\n    fn f(&mut self);\r\n}\r\n\r\nfn g<F: FnOnce(&mut dyn Trait)>(f: F) {}\r\n\r\nfn f() {\r\n    g(Trait::f)\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=def622e8ed38388cb543e450467bdc00))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0631]: type mismatch in function arguments\r\n --> src/lib.rs:8:7\r\n  |\r\n2 |     fn f(&mut self);\r\n  |     ---------------- found signature of `for<'r> fn(&'r mut _) -> _`\r\n...\r\n5 | fn g<F: FnOnce(&mut dyn Trait)>(f: F) {}\r\n  |    -    ---------------------- required by this bound in `g`\r\n...\r\n8 |     g(Trait::f)\r\n  |       ^^^^^^^^ expected signature of `for<'r> fn(&'r mut (dyn Trait + 'r)) -> _`\r\n\r\nerror[E0271]: type mismatch resolving `for<'r> <for<'s> fn(&'s mut _) {<_ as Trait>::f} as std::ops::FnOnce<(&'r mut (dyn Trait + 'r),)>>::Output == ()`\r\n --> src/lib.rs:8:5\r\n  |\r\n5 | fn g<F: FnOnce(&mut dyn Trait)>(f: F) {}\r\n  |    -    ---------------------- required by this bound in `g`\r\n...\r\n8 |     g(Trait::f)\r\n  |     ^ expected bound lifetime parameter, found concrete lifetime\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0271`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68589/timeline", "performed_via_github_app": null, "state_reason": null}