{"url": "https://api.github.com/repos/rust-lang/rust/issues/55273", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55273/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55273/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55273/events", "html_url": "https://github.com/rust-lang/rust/issues/55273", "id": 372651355, "node_id": "MDU6SXNzdWUzNzI2NTEzNTU=", "number": 55273, "title": "ICE when compiling noise-rs on nightly (rustc 1.31.0-nightly (424a749a0 2018-10-21))", "user": {"login": "nstoddard", "id": 5508622, "node_id": "MDQ6VXNlcjU1MDg2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5508622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nstoddard", "html_url": "https://github.com/nstoddard", "followers_url": "https://api.github.com/users/nstoddard/followers", "following_url": "https://api.github.com/users/nstoddard/following{/other_user}", "gists_url": "https://api.github.com/users/nstoddard/gists{/gist_id}", "starred_url": "https://api.github.com/users/nstoddard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nstoddard/subscriptions", "organizations_url": "https://api.github.com/users/nstoddard/orgs", "repos_url": "https://api.github.com/users/nstoddard/repos", "events_url": "https://api.github.com/users/nstoddard/events{/privacy}", "received_events_url": "https://api.github.com/users/nstoddard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-22T18:55:19Z", "updated_at": "2018-10-23T01:26:28Z", "closed_at": "2018-10-23T01:26:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "To repro:\r\n```\r\ngit clone https://github.com/Razaekel/noise-rs\r\n    (Also reproducible with the version on crates.io)\r\ncd noise-rs/\r\ncargo build\r\n```\r\n\r\n```\r\nthread 'main' panicked at 'assertion failed: !impl_self_ty.has_infer_types()', librustc_mir/borrow_check/nll/type_check/mod.rs:1033:21\r\nstack backtrace:                                                                                         \r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace                                          \r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49                                            \r\n   1: std::sys_common::backtrace::print                                                                  \r\n             at libstd/sys_common/backtrace.rs:71                                                        \r\n             at libstd/sys_common/backtrace.rs:59                                                        \r\n   2: std::panicking::default_hook::{{closure}}                                                          \r\n             at libstd/panicking.rs:211                                                                  \r\n   3: std::panicking::default_hook                                                                       \r\n             at libstd/panicking.rs:227                                                                  \r\n   4: rustc::util::common::panic_hook                                                                    \r\n   5: std::panicking::rust_panic_with_hook                                                               \r\n             at libstd/panicking.rs:480                                                                  \r\n   6: std::panicking::begin_panic                                                                        \r\n   7: rustc_mir::borrow_check::nll::type_check::TypeChecker::relate_type_and_user_type                   \r\n   8: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_constant\r\n   9: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_mir\r\n  10: rustc_mir::borrow_check::nll::type_check::type_check_internal                                      \r\n  11: rustc::ty::context::tls::with_related_context                                                      \r\n  12: rustc::infer::InferCtxtBuilder::enter                                                              \r\n  13: <rustc_mir::borrow_check::nll::type_check::TypeckMir as rustc_mir::transform::MirPass>::run_pass   \r\n  14: rustc_mir::transform::mir_const::{{closure}}                                                       \r\n  15: rustc_mir::transform::mir_const                                                                    \r\n  16: rustc::ty::query::__query_compute::mir_const                                                       \r\n  17: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_const<'tcx>>::compute\r\n  18: rustc::ty::context::tls::with_context                                                              \r\n  19: rustc::dep_graph::graph::DepGraph::with_task_impl                                                  \r\n  20: rustc::ty::context::tls::with_related_context                                                      \r\n  21: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query           \r\n  23: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_const                     \r\n  24: rustc_mir::transform::mir_validated                                                                \r\n  25: rustc::ty::query::__query_compute::mir_validated                                                   \r\n  26: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::mir_validated<'tcx>>::compute\r\n  27: rustc::ty::context::tls::with_context                                                              \r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl                                                  \r\n  29: rustc::ty::context::tls::with_related_context                                                      \r\n  30: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query           \r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query        \r\n  33: rustc_borrowck::borrowck::borrowck                                                                 \r\n  34: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::borrowck<'tcx>>::compute\r\n  35: rustc::ty::context::tls::with_context                                                              \r\n  36: rustc::dep_graph::graph::DepGraph::with_task_impl                                                  \r\n  37: rustc::ty::context::tls::with_related_context                                                      \r\n  38: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query           \r\n  40: rustc::ty::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::par_body_owners                      \r\n  41: rustc_borrowck::borrowck::check_crate                                                              \r\n  42: rustc::util::common::time                                                                          \r\n  43: rustc::ty::context::tls::enter_context                                                             \r\n  44: <std::thread::local::LocalKey<T>>::with                                                            \r\n  45: rustc::ty::context::TyCtxt::create_and_enter                                                       \r\n  46: rustc_driver::driver::compile_input                                                                \r\n  47: rustc_driver::run_compiler_with_pool                                                               \r\n  48: rustc_driver::driver::spawn_thread_pool                                                            \r\n  49: rustc_driver::run_compiler                                                                         \r\n  50: <scoped_tls::ScopedKey<T>>::set                                                                    \r\n  51: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once                    \r\n  52: __rust_maybe_catch_panic                                                                           \r\n             at libpanic_unwind/lib.rs:102                                                               \r\n  53: rustc_driver::run                                                                                  \r\n  54: rustc_driver::main                                                                                 \r\n  55: std::rt::lang_start::{{closure}}                                                                   \r\n  56: std::panicking::try::do_call                                                                       \r\n             at libstd/rt.rs:59                                                                          \r\n             at libstd/panicking.rs:310                                                                  \r\n  57: __rust_maybe_catch_panic                                                                           \r\n             at libpanic_unwind/lib.rs:102                                                               \r\n  58: std::rt::lang_start_internal                                                                       \r\n             at libstd/panicking.rs:289                                                                  \r\n             at libstd/panic.rs:392                                                                      \r\n             at libstd/rt.rs:58                                                                          \r\n  59: main                                                                                               \r\n  60: __libc_start_main                                                                                  \r\n  61: <unknown>                                                                                          \r\nquery stack during panic:                                                                                \r\n#0 [mir_const] processing `<noise_fns::transformers::turbulence::Turbulence<'a, Source>>::new`           \r\n#1 [mir_validated] processing `<noise_fns::transformers::turbulence::Turbulence<'a, Source>>::new`       \r\n#2 [borrowck] processing `<noise_fns::transformers::turbulence::Turbulence<'a, Source>>::new`            \r\nend of query stack                                                                                       \r\n                                                                                                         \r\nerror: internal compiler error: unexpected panic                                                         \r\n                                                                                                         \r\nnote: the compiler unexpectedly panicked. this is a bug.                                                 \r\n                                                                                                         \r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n                                                                                                         \r\nnote: rustc 1.31.0-nightly (424a749a0 2018-10-21) running on x86_64-unknown-linux-gnu                    \r\n                                                                                                         \r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib                                     \r\n                                                                                                         \r\nnote: some of the compiler flags provided by cargo are hidden\r\n```\r\n\r\nThis worked properly when using a nightly build from a couple of weeks ago, and also works fine with the stable version of Rust.", "closed_by": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55273/timeline", "performed_via_github_app": null, "state_reason": "completed"}