{"url": "https://api.github.com/repos/rust-lang/rust/issues/76861", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76861/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76861/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76861/events", "html_url": "https://github.com/rust-lang/rust/issues/76861", "id": 704050641, "node_id": "MDU6SXNzdWU3MDQwNTA2NDE=", "number": 76861, "title": "dyld: Library not loaded: @rpath/libLLVM.dylib", "user": {"login": "takkuumi", "id": 9606668, "node_id": "MDQ6VXNlcjk2MDY2Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/9606668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takkuumi", "html_url": "https://github.com/takkuumi", "followers_url": "https://api.github.com/users/takkuumi/followers", "following_url": "https://api.github.com/users/takkuumi/following{/other_user}", "gists_url": "https://api.github.com/users/takkuumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/takkuumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takkuumi/subscriptions", "organizations_url": "https://api.github.com/users/takkuumi/orgs", "repos_url": "https://api.github.com/users/takkuumi/repos", "events_url": "https://api.github.com/users/takkuumi/events{/privacy}", "received_events_url": "https://api.github.com/users/takkuumi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-09-18T03:26:06Z", "updated_at": "2020-09-18T13:43:29Z", "closed_at": "2020-09-18T13:43:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(vec_into_raw_parts)]\r\npub mod rs_aes;\r\npub mod rs_rsa;\r\nmod utils;\r\n\r\nuse std::{borrow::Cow, error::Error};\r\nuse utils::set_panic_hook;\r\nuse wasm_bindgen::{prelude::*, JsCast};\r\n\r\n// When the `wee_alloc` feature is enabled, use `wee_alloc` as the global\r\n// allocator.\r\n#[cfg(feature = \"wee_alloc\")]\r\n#[global_allocator]\r\nstatic ALLOC: wee_alloc::WeeAlloc = wee_alloc::WeeAlloc::INIT;\r\n\r\n#[wasm_bindgen]\r\nextern \"C\" {\r\n  #[wasm_bindgen(js_namespace = WebAssembly,  typescript_type = \"WebAssembly.Memory\")]\r\n  pub type Memory;\r\n\r\n  #[wasm_bindgen(js_namespace = console)]\r\n  pub fn log(s: &str);\r\n}\r\n\r\n#[wasm_bindgen]\r\npub fn shared_memory() -> Memory {\r\n  JsValue::from(wasm_bindgen::memory()).unchecked_into::<Memory>()\r\n}\r\n\r\n#[wasm_bindgen]\r\npub enum Encode {\r\n  BASE64,\r\n  HEX,\r\n}\r\n\r\n#[wasm_bindgen]\r\npub struct SharedPtr {\r\n  pub at_ptr: *mut u8,\r\n  pub len: usize,\r\n  pub cap: usize,\r\n}\r\n\r\nimpl Drop for SharedPtr {\r\n  fn drop(&mut self) {\r\n    std::mem::drop(self);\r\n  }\r\n}\r\n\r\nimpl SharedPtr {\r\n  fn new(view: Vec<u8>) -> SharedPtr {\r\n    let (at_ptr, len, cap): (*mut u8, usize, usize) = view.into_raw_parts();\r\n    SharedPtr { at_ptr, len, cap }\r\n  }\r\n}\r\n\r\n#[wasm_bindgen]\r\nimpl SharedPtr {\r\n  #[wasm_bindgen(catch)]\r\n  pub fn with_capacity(capacity: usize) -> SharedPtr {\r\n    set_panic_hook();\r\n    let mut view: Vec<u8> = Vec::<u8>::with_capacity(capacity);\r\n    unsafe {\r\n      view.set_len(capacity);\r\n    }\r\n    SharedPtr::new(view)\r\n  }\r\n\r\n  #[wasm_bindgen(catch)]\r\n  pub fn from_text(text: &str) -> SharedPtr {\r\n    set_panic_hook();\r\n    let view: Vec<u8> = text.as_bytes().to_vec();\r\n    SharedPtr::new(view)\r\n  }\r\n\r\n  #[wasm_bindgen(catch)]\r\n  pub fn encode(&self, encode: Encode) -> String {\r\n    set_panic_hook();\r\n    let view: Vec<u8> = utils::raw_from_sharedptr(self);\r\n\r\n    match encode {\r\n      Encode::BASE64 => utils::base64_encode(view),\r\n      Encode::HEX => utils::hex_encode(view),\r\n    }\r\n  }\r\n\r\n  #[wasm_bindgen(catch)]\r\n  pub fn binary_to_str(&self) -> Result<String, JsValue> {\r\n    set_panic_hook();\r\n    let view: Vec<u8> = utils::raw_from_sharedptr(self);\r\n\r\n    match String::from_utf8(view) {\r\n      Ok(res) => Ok(res),\r\n      Err(_) => Err(JsValue::NULL),\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen: *explanation*\r\n\r\nInstead, this happened: *explanation*\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.48.0-nightly (f3c923a13 2020-09-17)\r\nbinary: rustc\r\ncommit-hash: f3c923a13a458c35ee26b3513533fce8a15c9c05\r\ncommit-date: 2020-09-17\r\nhost: x86_64-apple-darwin\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nerror: linking with `rust-lld` failed: signal: 6\r\n  |\r\n  = note: \"rust-lld\" \"-flavor\" \"wasm\" \"-z\" \"stack-size=1048576\" \"--stack-first\" \"--allow-undefined\" \"--fatal-warnings\" \"--no-demangle\" \"--export-dynamic\" \"--no-entry\" \"-L\" \"/user path/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/wasm32-unknown-unknown/lib\" \"-L\" \"/user path/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/wasm32-unknown-unknown/lib/self-contained\" \"/user path/Workspace/TSWASM/built/rust/target/wasm32-unknown-unknown/release/deps/wasm_security.wasm_security.2iyg1b5p-cgu.15.rcgu.o\" \"-o\" \"/user path/Workspace/TSWASM/built/rust/target/wasm32-unknown-unknown/release/deps/wasm_security.wasm\" \"--export\" \"__wbg_cbc_free\" \"--export\" \"__wbg_ecb_free\" \"--export\" \"__wbg_get_sharedptr_at_ptr\" \"--export\" \"__wbg_get_sharedptr_cap\" \"--export\" \"__wbg_get_sharedptr_len\" \"--export\" \"__wbg_rsaprivate_free\" \"--export\" \"__wbg_rsapublic_free\" \"--export\" \"__wbg_set_sharedptr_at_ptr\" \"--export\" \"__wbg_set_sharedptr_cap\" \"--export\" \"__wbg_set_sharedptr_len\" \"--export\" \"__wbg_sharedptr_free\" \"--export\" \"__wbindgen_describe___wbg_get_sharedptr_at_ptr\" \"--export\" \"__wbindgen_describe___wbg_get_sharedptr_cap\" \"--export\" \"__wbindgen_describe___wbg_get_sharedptr_len\" \"--export\" \"__wbindgen_describe___wbg_log_2cc37b6086724e15\" \"--export\" \"__wbindgen_describe_cbc_decrypt\" \"--export\" \"__wbindgen_describe_cbc_encrypt\" \"--export\" \"__wbindgen_describe_cbc_from\" \"--export\" \"__wbindgen_describe_ecb_decrypt\" \"--export\" \"__wbindgen_describe_ecb_encrypt\" \"--export\" \"__wbindgen_describe_ecb_from\" \"--export\" \"__wbindgen_describe_rsaprivate_decrypt\" \"--export\" \"__wbindgen_describe_rsaprivate_encrypt\" \"--export\" \"__wbindgen_describe_rsaprivate_from_pkcs1\" \"--export\" \"__wbindgen_describe_rsaprivate_from_pkcs8\" \"--export\" \"__wbindgen_describe_rsaprivate_pub_encrypt\" \"--export\" \"__wbindgen_describe_rsapublic_encrypt\" \"--export\" \"__wbindgen_describe_rsapublic_from_pkcs1\" \"--export\" \"__wbindgen_describe_rsapublic_from_pkcs8\" \"--export\" \"__wbindgen_describe_shared_memory\" \"--export\" \"__wbindgen_describe_sharedptr_binary_to_str\" \"--export\" \"__wbindgen_describe_sharedptr_encode\" \"--export\" \"__wbindgen_describe_sharedptr_from_text\" \"--export\" \"__wbindgen_describe_sharedptr_with_capacity\" \"--export\" \"cbc_decrypt\" \"--export\" \"cbc_encrypt\" \"--export\" \"cbc_from\" \"--export\" \"ecb_decrypt\" \"--export\" \"ecb_encrypt\" \"--export\" \"ecb_from\" \"--export\" \"rsaprivate_decrypt\" \"--export\" \"rsaprivate_encrypt\" \"--export\" \"rsaprivate_from_pkcs1\" \"--export\" \"rsaprivate_from_pkcs8\" \"--export\" \"rsaprivate_pub_encrypt\" \"--export\" \"rsapublic_encrypt\" \"--export\" \"rsapublic_from_pkcs1\" \"--export\" \"rsapublic_from_pkcs8\" \"--export\" \"shared_memory\" \"--export\" \"sharedptr_binary_to_str\" \"--export\" \"sharedptr_encode\" \"--export\" \"sharedptr_from_text\" \"--export\" \"sharedptr_with_capacity\" \"--export\" \"__externref_drop_slice\" \"--export\" \"__externref_heap_live_count\" \"--export\" \"__externref_table_alloc\" \"--export\" \"__externref_table_dealloc\" \"--export\" \"__wbindgen_exn_store\" \"--export\" \"__wbindgen_free\" \"--export\" \"__wbindgen_malloc\" \"--export\" \"__wbindgen_realloc\" \"--export\" \"__wbindgen_describe___wbg_error_4bb6c2a97407129a\" \"--export\" \"__wbindgen_describe___wbg_new_59cb74e423758ede\" \"--export\" \"__wbindgen_describe___wbg_stack_558ba5917b466edd\" \"--export=__heap_base\" \"--export=__data_end\" \"--gc-sections\" \"--no-entry\" \"-O2\" \"-L\" \"/user path/Workspace/TSWASM/built/rust/target/wasm32-unknown-unknown/release/deps\" \"-L\" \"/user path/Workspace/TSWASM/built/rust/target/release/deps\" \"-L\" \"/user path/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/wasm32-unknown-unknown/lib\" \"/user path/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/wasm32-unknown-unknown/lib/libcompiler_builtins-e1980b88fd1d13d6.rlib\"\r\n  = note: dyld: Library not loaded: @rpath/libLLVM.dylib\r\n            Referenced from: /user path/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/bin/rust-lld\r\n            Reason: image not found\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76861/timeline", "performed_via_github_app": null, "state_reason": "completed"}