{"url": "https://api.github.com/repos/rust-lang/rust/issues/60978", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60978/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60978/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60978/events", "html_url": "https://github.com/rust-lang/rust/issues/60978", "id": 446161931, "node_id": "MDU6SXNzdWU0NDYxNjE5MzE=", "number": 60978, "title": "Implement IzZero for zeroable default types", "user": {"login": "Pzixel", "id": 11201122, "node_id": "MDQ6VXNlcjExMjAxMTIy", "avatar_url": "https://avatars.githubusercontent.com/u/11201122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pzixel", "html_url": "https://github.com/Pzixel", "followers_url": "https://api.github.com/users/Pzixel/followers", "following_url": "https://api.github.com/users/Pzixel/following{/other_user}", "gists_url": "https://api.github.com/users/Pzixel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pzixel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pzixel/subscriptions", "organizations_url": "https://api.github.com/users/Pzixel/orgs", "repos_url": "https://api.github.com/users/Pzixel/repos", "events_url": "https://api.github.com/users/Pzixel/events{/privacy}", "received_events_url": "https://api.github.com/users/Pzixel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-20T14:53:32Z", "updated_at": "2019-06-21T14:43:39Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "As discussed in #54628 there are some critical optimizations based on fact that type default value can be represented with `mem::zeroed()`, such as [this vec allocation code](https://github.com/rust-lang/rust/blob/372be4f360ce42b1a10126a711189796f8440ab4/src/liballoc/vec.rs#L1579).\r\n\r\n[There is a trait](https://github.com/rust-lang/rust/blob/372be4f360ce42b1a10126a711189796f8440ab4/src/liballoc/vec.rs#L1594) describing this behavior. I propose implementing it for some standard types, such as `std::num::Wrapping` or `Option`, or even making it public.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60978/timeline", "performed_via_github_app": null, "state_reason": null}