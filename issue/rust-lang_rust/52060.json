{"url": "https://api.github.com/repos/rust-lang/rust/issues/52060", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52060/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52060/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52060/events", "html_url": "https://github.com/rust-lang/rust/issues/52060", "id": 338365909, "node_id": "MDU6SXNzdWUzMzgzNjU5MDk=", "number": 52060, "title": "Cargo check panics when attempting to declare static arrays with the .len() of a static slice", "user": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-04T19:58:58Z", "updated_at": "2018-09-01T18:08:55Z", "closed_at": "2018-09-01T18:08:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This isn't valid code but it causes a panic none the less. It doesn't cause a panic on stable.\r\n\r\n`rustc 1.28.0-nightly (e3bf634e0 2018-06-28)` and `rustc 1.28.0-beta.6 (915ac6602 2018-06-30)` are affected\r\n\r\nExample:\r\n\r\nhttps://play.rust-lang.org/?gist=a08602110a92f1601ccb30e90032bfc8&version=nightly&mode=debug&edition=2015\r\n\r\n```rust\r\nstatic A: &'static [u32] = &[1];\r\nstatic B: [u32; 1] = [0; A.len()];\r\n```\r\n\r\nIt affects slices but not arrays on their own, the following does not panic:\r\n\r\n```rust\r\nstatic A: [u32; 1] = [1];\r\nstatic B: [u32; 1] = [0; A.len()];\r\n``` \r\n\r\nAnd here's a backtrace\r\n\r\n```\r\n       Fresh ucd-raw v0.2.0\r\n    Checking general-suffix v0.1.0 (file:///W:/Rust/general-suffix)\r\n     Running `rustc --crate-name general_suffix src\\lib.rs --crate-type lib --emit=dep-info,metadata -C debuginfo=2 -C metadata=167d6e50645cc7bb -C extra-filename=-167d6e50645cc7bb --out-dir W:\\Rust\\general-suffix\\target\\debug\\deps -C incremental=W:\\Rust\\general-suffix\\target\\debug\\incremental -L dependency=W:\\Rust\\general-suffix\\target\\debug\\deps --extern ucd_raw=W:\\Rust\\general-suffix\\target\\debug\\deps\\libucd_raw-42a16cbe8e690df3.rmeta`\r\nerror[E0013]: constants cannot refer to statics, use a constant instead\r\n --> src\\lib.rs:2:26\r\n  |\r\n2 | static B: [u32; 1] = [0; A.len()];\r\n  |                          ^\r\n\r\nerror[E0394]: cannot refer to statics by value, use a constant instead\r\n --> src\\lib.rs:2:26\r\n  |\r\n2 | static B: [u32; 1] = [0; A.len()];\r\n  |                          ^ referring to another static by value\r\n  |\r\n  = note: use the address-of operator or a constant instead\r\n\r\nerror: `core::slice::<impl [T]>::len` is not yet stable as a const fn\r\n --> src\\lib.rs:2:26\r\n  |\r\n2 | static B: [u32; 1] = [0; A.len()];\r\n  |                          ^^^^^^^\r\n  |\r\n  = help: in Nightly builds, add `#![feature(const_slice_len)]` to the crate attributes to enable\r\n\r\nthread 'main' panicked at 'already borrowed: BorrowMutError', libcore\\result.rs:945:5\r\nstack backtrace:\r\n   0: <std::collections::hash::map::DefaultHasher as core::fmt::Debug>::fmt\r\n   1: <std::sys::windows::dynamic_lib::DynamicLibrary as core::ops::drop::Drop>::drop\r\n   2: std::panicking::take_hook\r\n   3: std::panicking::take_hook\r\n   4: <rustc::ty::SymbolName as core::fmt::Debug>::fmt\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::begin_panic_fmt\r\n   7: rust_begin_unwind\r\n   8: core::panicking::panic_fmt\r\n   9: <rustc_mir::transform::uniform_array_move_out::LocalUse as core::fmt::Debug>::fmt\r\n  10: rustc_mir::interpret::eval_context::Frame::storage_dead\r\n  11: rustc_mir::interpret::eval_context::Frame::storage_dead\r\n  12: rustc_mir::interpret::const_eval::value_to_const_value\r\n  13: rustc_mir::interpret::const_eval::const_eval_provider\r\n  14: rustc::ty::query::on_disk_cache::__ty_decoder_impl::<impl serialize::serialize::Decoder for rustc::ty::query::on_disk_cache::CacheDecoder<'a, 'tcx, 'x>>::read_str\r\n  15: rustc::ty::context::tls::track_diagnostic\r\n  16: rustc::ty::context::tls::track_diagnostic\r\n  17: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  18: rustc::ty::context::tls::track_diagnostic\r\n  19: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  20: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  21: rustc::ty::query::TyCtxtAt::const_eval\r\n  22: rustc_mir::interpret::eval_context::Frame::storage_dead\r\n  23: rustc_mir::interpret::eval_context::Frame::storage_dead\r\n  24: rustc_mir::dataflow::dataflow_path\r\n  25: rustc_mir::dataflow::dataflow_path\r\n  26: rustc_mir::dataflow::dataflow_path\r\n  27: rustc_mir::interpret::eval_context::Frame::storage_dead\r\n  28: rustc_mir::interpret::const_eval::value_to_const_value\r\n  29: rustc_mir::interpret::const_eval::const_eval_provider\r\n  30: rustc::ty::query::on_disk_cache::__ty_decoder_impl::<impl serialize::serialize::Decoder for rustc::ty::query::on_disk_cache::CacheDecoder<'a, 'tcx, 'x>>::read_str\r\n  31: rustc::ty::context::tls::track_diagnostic\r\n  32: rustc::ty::context::tls::track_diagnostic\r\n  33: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  34: rustc::ty::context::tls::track_diagnostic\r\n  35: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  36: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  37: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::const_eval\r\n  38: <rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx> as rustc_typeck::astconv::AstConv<'gcx, 'tcx>>::record_ty\r\n  39: <rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx> as rustc_typeck::astconv::AstConv<'gcx, 'tcx>>::record_ty\r\n  40: <rustc_typeck::collect::has_late_bound_regions::LateBoundRegionsDetector<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_lifetime\r\n  41: <rustc_typeck::check_unused::CollectExternCrateVisitor<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_item\r\n  42: <rustc_typeck::check::CheckItemTypesVisitor<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_item\r\n  43: rustc::ty::query::on_disk_cache::__ty_decoder_impl::<impl serialize::serialize::Decoder for rustc::ty::query::on_disk_cache::CacheDecoder<'a, 'tcx, 'x>>::read_str\r\n  44: rustc::ty::context::tls::track_diagnostic\r\n  45: rustc::ty::context::tls::track_diagnostic\r\n  46: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  47: rustc::ty::context::tls::track_diagnostic\r\n  48: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  49: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  50: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of\r\n  51: <rustc_typeck::check::GatherLocalsVisitor<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_pat\r\n  52: <rustc_typeck::variance::test::VarianceTest<'a, 'tcx> as rustc::hir::itemlikevisit::ItemLikeVisitor<'tcx>>::visit_item\r\n  53: <rustc_typeck::check::GatherLocalsVisitor<'a, 'gcx, 'tcx> as rustc::hir::intravisit::Visitor<'gcx>>::visit_fn\r\n  54: rustc_typeck::check_crate\r\n  55: <humantime::date::Error as std::error::Error>::cause\r\n  56: <rustc_driver::pretty::IdentifiedAnnotation<'hir> as rustc_driver::pretty::PrinterSupport>::sess\r\n  57: <unknown>\r\n  58: rustc_driver::driver::compile_input\r\n  59: rustc_driver::run_compiler\r\n  60: <env_logger::filter::inner::Filter as core::fmt::Display>::fmt\r\n  61: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_item\r\n  62: _rust_maybe_catch_panic\r\n  63: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_item\r\n  64: rustc_driver::main\r\n  65: <unknown>\r\n  66: std::panicking::update_panic_count\r\n  67: _rust_maybe_catch_panic\r\n  68: std::rt::lang_start_internal\r\n  69: <unknown>\r\n  70: <unknown>\r\n  71: BaseThreadInitThunk\r\n  72: RtlUserThreadStart\r\nquery stack during panic:\r\n#0 [const_eval] const-evaluating `A`\r\n --> src\\lib.rs:2:26\r\n  |\r\n2 | static B: [u32; 1] = [0; A.len()];\r\n  |                          ^\r\n#1 [const_eval] const-evaluating `B::{{constant}}`\r\n#2 [typeck_tables_of] processing `B`\r\nend of query stack\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors occurred: E0013, E0394.\r\nFor more information about an error, try `rustc --explain E0013`.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.28.0-nightly (e3bf634e0 2018-06-28) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `general-suffix`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name general_suffix src\\lib.rs --crate-type lib --emit=dep-info,metadata -C debuginfo=2 -C metadata=167d6e50645cc7bb -C extra-filename=-167d6e50645cc7bb --out-dir W:\\Rust\\general-suffix\\target\\debug\\deps -C incremental=W:\\Rust\\general-suffix\\target\\debug\\incremental -L dependency=W:\\Rust\\general-suffix\\target\\debug\\deps --extern ucd_raw=W:\\Rust\\general-suffix\\target\\debug\\deps\\libucd_raw-42a16cbe8e690df3.rmeta` (exit code: 101)\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52060/timeline", "performed_via_github_app": null, "state_reason": "completed"}