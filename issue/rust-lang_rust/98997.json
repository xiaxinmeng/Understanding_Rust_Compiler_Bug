{"url": "https://api.github.com/repos/rust-lang/rust/issues/98997", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98997/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98997/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98997/events", "html_url": "https://github.com/rust-lang/rust/issues/98997", "id": 1296745650, "node_id": "I_kwDOAAsO6M5NSsSy", "number": 98997, "title": "False-positive \"temporary dropped while borrowed\" involving return-position impl Trait", "user": {"login": "abonander", "id": 3198595, "node_id": "MDQ6VXNlcjMxOTg1OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3198595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonander", "html_url": "https://github.com/abonander", "followers_url": "https://api.github.com/users/abonander/followers", "following_url": "https://api.github.com/users/abonander/following{/other_user}", "gists_url": "https://api.github.com/users/abonander/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonander/subscriptions", "organizations_url": "https://api.github.com/users/abonander/orgs", "repos_url": "https://api.github.com/users/abonander/repos", "events_url": "https://api.github.com/users/abonander/events{/privacy}", "received_events_url": "https://api.github.com/users/abonander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-07-07T03:23:28Z", "updated_at": "2022-07-09T08:33:56Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI'm getting a \"temporary value dropped while borrowed\" error from code that I otherwise would expect to compile:\r\n```rust\r\nuse std::fmt::Display;\r\nuse std::future::Future;\r\n\r\nfn takes_display(d: impl Display) -> impl Future<Output = ()> + 'static {\r\n    let s = format!(\"{}\", d);\r\n\r\n    async move {\r\n        ()\r\n    }\r\n}\r\n\r\nasync fn calls_takes_display() {\r\n    let bar = 0i32;\r\n    let fut = takes_display(format_args!(\"{bar}\"));\r\n    // fut.await;\r\n}\r\n```\r\n\r\n```\r\nerror[[E0716]](https://doc.rust-lang.org/stable/error-index.html#E0716): temporary value dropped while borrowed\r\n  --> src/lib.rs:14:29\r\n   |\r\n14 |     let fut = takes_display(format_args!(\"{bar}\"));\r\n   |                             ^^^^^^^^^^^^^^^^^^^^^ - temporary value is freed at the end of this statement\r\n   |                             |\r\n   |                             creates a temporary which is freed while still in use\r\n15 |     // fut.await;\r\n16 | }\r\n   | - borrow might be used here, when `fut` is dropped and runs the destructor for type `impl Future<Output = ()>`\r\n   |\r\n   = note: consider using a `let` binding to create a longer lived value\r\n   = note: this error originates in the macro `format_args` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nFor more information about this error, try `rustc --explain E0716`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nThis is a revised version of my original attempt, which fails due to https://github.com/rust-lang/rust/issues/64477#issuecomment-531920026 ([Playground link](https://play.rust-lang.org/?version=beta&mode=debug&edition=2021&gist=59a34a8a7329210fc30fcd78fa94f98c)). After reading through the discussions, I understand why that version doesn't work.\r\n\r\nHowever, I expected the revised version above to work because `takes_display()` _should be_ eagerly evaluated, and thus not hold any temporaries longer than necessary. It may be an overly eager application of the deferred drop rules as `.await` is not even involved here, the future returned from `takes_display()` is explicitly not lifetime-bound to the input, and the return value is bound in a `let` statement and is not in return position.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0 (a8314ef7d 2022-06-27)\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98997/timeline", "performed_via_github_app": null, "state_reason": null}