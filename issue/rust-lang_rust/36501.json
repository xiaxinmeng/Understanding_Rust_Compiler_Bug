{"url": "https://api.github.com/repos/rust-lang/rust/issues/36501", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36501/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36501/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36501/events", "html_url": "https://github.com/rust-lang/rust/issues/36501", "id": 177273092, "node_id": "MDU6SXNzdWUxNzcyNzMwOTI=", "number": 36501, "title": "Error `cargo build`ing `std` as a dylib", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-09-15T19:56:19Z", "updated_at": "2018-11-03T15:12:12Z", "closed_at": "2018-11-03T15:12:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Or should `cargo build`ing `std` only produce a .rlib?\n\nNow that #35021 landed and compiler-rt intrinsics are built as part of the std crate dependencies,\none can (cross) compile binaries if the `alloc_system` (or `alloc_jemalloc`), `panic_unwind` and\n`std` crates are listed under the crate Cargo.toml:\n\n```\n$ cargo new --bin hello\n\n$ cd hello\n\n$ edit src/main.rs && cat src/main.rs\n#![feature(alloc_system)]\n\nextern crate alloc_system;\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n\n$ edit Cargo.toml && cat Cargo.toml\n[package]\nname = \"hello\"\n\n[dependencies]\nalloc_syste = { path = \"$(rustc --print sysroot)/lib/rustlib/src/rust/src/liballoc_system\" }\npanic_unwind = { path = \"$(rustc --print sysroot)/lib/rustlib/src/rust/src/libpanic_unwind\" }\nstd = { path = \"$(rustc --print sysroot)/lib/rustlib/src/rust/src/libstd\" }\n\n# if alloc_jemalloc is used\n# [features]\n# default = [\"std/jemalloc\"]\n\n$ cargo build --target $CROSS\n```\n\n**if and only if** the Cargo.toml of the std crate is modified as follows\n\n``` diff\n [lib]\n name = \"std\"\n path = \"lib.rs\"\n-crate-type = [\"dylib\", \"rlib\"]\n\n [dependencies]\n alloc = { path = \"../liballoc\" }\n```\n\nto not build a dylib. Without this change `cargo build`ing `hello` fails with:\n\n```\n$ cargo build --target $CROSS\n     Running `rustc $sysroot/lib/rustlib/src/rust/src/libstd/lib.rs --crate-name std --crate-type dylib --crate-type rlib -C prefer-dynamic -g -C metadata=7a8ef155232f363e --out-dir $PWD/target/$CROSS/debug/deps --emit=dep-info,link --target $CROSS -L dependency=$PWD/target/$CROSS/debug/deps --extern core=$PWD/target/$CROSS/debug/deps/libcore.rlib --extern compiler_builtins=$PWD/target/$CROSS/debug/deps/libcompiler_builtins.rlib --extern rand=$PWD/target/$CROSS/debug/deps/librand.rlib --extern panic_abort=$PWD/target/$CROSS/debug/deps/libpanic_abort.rlib --extern libc=$PWD/target/$CROSS/debug/deps/liblibc.rlib --extern rustc_unicode=$PWD/target/$CROSS/debug/deps/librustc_unicode.rlib --extern alloc=$PWD/target/$CROSS/debug/deps/liballoc.rlib --extern alloc_system=$PWD/target/$CROSS/debug/deps/liballoc_system.rlib --extern collections=$PWD/target/$CROSS/debug/deps/libcollections.rlib --extern panic_unwind=$PWD/target/$CROSS/debug/deps/libpanic_unwind.rlib --extern unwind=$PWD/target/$CROSS/debug/deps/libunwind.rlib --cfg cargobuild -l dl -l rt -l pthread -L native=$PWD/target/$CROSS/debug/build/compiler_builtins-31a1189c65ac3d55/out`\nwarning: ar: `u' modifier ignored since `D' is the default (see `U')\n   Compiling std v0.0.0 (file://$sysroot/lib/rustlib/src/rust/src/libstd)\nerror[E0463]: can't find crate for `alloc_jemalloc`\n\nerror: aborting due to previous error\n\nerror: Could not compile `std`.\n```\n\nduring the compilation of the `std` crate. (On that note, I'm sure why building `std` as a dylib\nfails? Is it because rustc injects a `extern crate alloc_jemalloc` into `std` source when compiling\na dylib but alloc_jemalloc is an optional dependency of `std` that's not build (the feature is\ndisabled) in this example?)\n\nI discussed this with @alexcrichton and we were wondering if we should modify the std crate to only\ncompile the rlib to make this case work out of the box. And then hack `bootstrap` to force it to build\n`std` as dylib because it is needed to link rustc.\n\ncc @Ericson2314 I don't how/if this change would affect your Cargo+std RFC. (Probably not?)\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36501/timeline", "performed_via_github_app": null, "state_reason": "completed"}