{"url": "https://api.github.com/repos/rust-lang/rust/issues/42475", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42475/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42475/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42475/events", "html_url": "https://github.com/rust-lang/rust/issues/42475", "id": 233855875, "node_id": "MDU6SXNzdWUyMzM4NTU4NzU=", "number": 42475, "title": "Selection ambiguity with specialization, closures and associated types", "user": {"login": "dylanede", "id": 10339269, "node_id": "MDQ6VXNlcjEwMzM5MjY5", "avatar_url": "https://avatars.githubusercontent.com/u/10339269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanede", "html_url": "https://github.com/dylanede", "followers_url": "https://api.github.com/users/dylanede/followers", "following_url": "https://api.github.com/users/dylanede/following{/other_user}", "gists_url": "https://api.github.com/users/dylanede/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanede/subscriptions", "organizations_url": "https://api.github.com/users/dylanede/orgs", "repos_url": "https://api.github.com/users/dylanede/repos", "events_url": "https://api.github.com/users/dylanede/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanede/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 347795552, "node_id": "MDU6TGFiZWwzNDc3OTU1NTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-specialization", "name": "A-specialization", "color": "f7e101", "default": false, "description": "Area: Trait impl specialization"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-06T11:05:33Z", "updated_at": "2018-08-13T07:33:46Z", "closed_at": "2018-08-13T07:33:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This code:\r\n\r\n```rust\r\n#![feature(specialization)]\r\n\r\nuse std::marker::PhantomData;\r\n\r\nstruct Foo<A, B> {\r\n    marker: PhantomData<(A, B)>\r\n}\r\n\r\ntrait Trait1 {\r\n    type Out;\r\n}\r\n\r\nimpl Trait1 for () {\r\n    type Out = ();\r\n}\r\n\r\nimpl<B, F, V> Trait1 for Foo<F, B> where B : Trait1, F : Fn() -> V {\r\n    type Out = V;\r\n}\r\n\r\ntrait Trait2<T> {}\r\n\r\nimpl<T> Trait2<T> for () {}\r\n\r\ntrait Trait3 {\r\n    type Out;\r\n}\r\n\r\nimpl<S, B> Trait3 for Foo<S, B> where B : Trait1, S : Trait2<B::Out> {\r\n    type Out = ();\r\n}\r\n\r\ntrait Special<T> {\r\n    fn special_stuff();\r\n}\r\nimpl<I, T> Special<T> for I {\r\n    default fn special_stuff() {}\r\n}\r\nimpl<T> Special<T> for () where T : Trait3, T::Out : Send {\r\n    fn special_stuff() {}\r\n}\r\n\r\nfn f<F>(_: F) -> Foo<(), Foo<F, ()>> {\r\n    Foo { marker: PhantomData }\r\n}\r\n\r\nfn bar<T : 'static>(_: T) {\r\n    <() as Special<T>>::special_stuff();\r\n}\r\n\r\nfn main() {\r\n    bar(f(|| ()));\r\n}\r\n```\r\n\r\ntriggers\r\n\r\n```text\r\nerror: reached the recursion limit during monomorphization (selection ambiguity)\r\n```\r\n\r\nIt seems to depend on the use of specialization, constraints involving `Fn`, and the use of constraints on associated types. Rustc debug output gives me this at the end of the log, which suggests that it is not actually a recursion limit problem:\r\n\r\n```text\r\nDEBUG:rustc::traits::select: evaluate_predicate_recursively(Obligation(predicate=Binder(TraitPredicate(<() as std::marker::Send>)),depth=2)) = EvaluatedToOk\r\nDEBUG:rustc::infer: rollback_to(cause=probe)\r\nDEBUG:rustc::infer::type_variable: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(24)\r\nDEBUG:rustc_data_structures::unify: TyVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(18)\r\nDEBUG:rustc_data_structures::unify: TyVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(18)\r\nDEBUG:rustc_data_structures::unify: IntVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(12)\r\nDEBUG:rustc_data_structures::unify: FloatVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(12)\r\nDEBUG:rustc::infer::region_inference: RegionVarBindings: rollback_to(RegionSnapshot(length=12,skolemization=0))\r\nDEBUG:rustc_data_structures::unify: RegionVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(12)\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(1)\r\nDEBUG:rustc::traits::select: evaluate_candidate: depth=1 result=EvaluatedToOk\r\nDEBUG:rustc_metadata::decoder: def_path(id=DefIndex(735))\r\nDEBUG:rustc::traits::select: CACHE MISS: EVAL(Binder(<() as std::marker::Send>))=EvaluatedToOk\r\nDEBUG:rustc::ty::fold: HasTypeFlagsVisitor: t=() t.flags=0 self.flags=200\r\nDEBUG:rustc_metadata::decoder: def_path(id=DefIndex(735))\r\nDEBUG:rustc::traits::select: evaluate_predicate_recursively(Obligation(predicate=Binder(TraitPredicate(<() as std::marker::Send>)),depth=1)) = EvaluatedToOk\r\nDEBUG:rustc::infer: rollback_to(cause=probe)\r\nDEBUG:rustc::infer::type_variable: inference variable _#0t popped\r\nDEBUG:rustc::infer::type_variable: inference variable _#1t popped\r\nDEBUG:rustc::infer::type_variable: inference variable _#2t popped\r\nDEBUG:rustc::infer::type_variable: inference variable _#3t popped\r\nDEBUG:rustc::infer::type_variable: inference variable _#4t popped\r\nDEBUG:rustc::infer::type_variable: inference variable _#5t popped\r\nDEBUG:rustc::infer::type_variable: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(0)\r\nDEBUG:rustc_data_structures::unify: TyVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(0)\r\nDEBUG:rustc_data_structures::unify: TyVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(0)\r\nDEBUG:rustc_data_structures::unify: IntVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(0)\r\nDEBUG:rustc_data_structures::unify: FloatVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(0)\r\nDEBUG:rustc::infer::region_inference: RegionVarBindings: rollback_to(RegionSnapshot(length=0,skolemization=0))\r\nDEBUG:rustc_data_structures::unify: RegionVid: rollback_to()\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(0)\r\nDEBUG:rustc_data_structures::snapshot_vec: rollback_to(0)\r\nDEBUG:rustc::traits::select: evaluate_candidate: depth=0 result=EvaluatedToAmbig\r\nDEBUG:rustc::traits::select: Retaining candidate #0/2: EvaluatedCandidate { candidate: ImplCandidate(DefId { krate: CrateNum(0), node: DefIndex(19) => desktop/b0ae575::{{impl}}[4] }), evaluation: EvaluatedToOk }\r\nDEBUG:rustc::traits::specialize: specializes(DefId { krate: CrateNum(0), node: DefIndex(19) => desktop/b0ae575::{{impl}}[4] }, DefId { krate: CrateNum(0), node: DefIndex(21) => desktop/b0ae575::{{impl}}[5] })\r\nDEBUG:rustc::traits::select: Retaining candidate #1/2: EvaluatedCandidate { candidate: ImplCandidate(DefId { krate: CrateNum(0), node: DefIndex(21) => desktop/b0ae575::{{impl}}[5] }), evaluation: EvaluatedToAmbig }\r\nDEBUG:rustc::traits::select: multiple matches, ambig\r\nDEBUG:rustc::ty::fold: HasTypeFlagsVisitor: t=() t.flags=0 self.flags=4\r\nDEBUG:rustc::ty::fold: HasTypeFlagsVisitor: t=Foo<(), Foo<[closure@src\\bin\\desktop.rs:52:11: 52:16], ()>> t.flags=600 self.flags=4\r\nDEBUG:rustc::traits::trans: Encountered ambiguity selecting `Binder(<() as Special<Foo<(), Foo<[closure@src\\bin\\desktop.rs:52:11: 52:16], ()>>>>)` during trans, presuming due to overflow\r\nerror: reached the recursion limit during monomorphization (selection ambiguity)\r\n```\r\n\r\nThe two `impl`s it is finding and being unable to pick between are the two `impl`s of `Special` in the source, even though one specializes the other.", "closed_by": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42475/timeline", "performed_via_github_app": null, "state_reason": "completed"}