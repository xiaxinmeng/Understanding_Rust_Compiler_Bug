{"url": "https://api.github.com/repos/rust-lang/rust/issues/84769", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84769/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84769/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84769/events", "html_url": "https://github.com/rust-lang/rust/issues/84769", "id": 873474042, "node_id": "MDU6SXNzdWU4NzM0NzQwNDI=", "number": 84769, "title": "On nightly rustc, E0599 emits a massive diagnostic to suggest wrapping the receiver in every combination of `{Box,Pin,Rc,Arc}::new({,&,&mut} expr)`", "user": {"login": "PatchMixolydic", "id": 8634700, "node_id": "MDQ6VXNlcjg2MzQ3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8634700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatchMixolydic", "html_url": "https://github.com/PatchMixolydic", "followers_url": "https://api.github.com/users/PatchMixolydic/followers", "following_url": "https://api.github.com/users/PatchMixolydic/following{/other_user}", "gists_url": "https://api.github.com/users/PatchMixolydic/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatchMixolydic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatchMixolydic/subscriptions", "organizations_url": "https://api.github.com/users/PatchMixolydic/orgs", "repos_url": "https://api.github.com/users/PatchMixolydic/repos", "events_url": "https://api.github.com/users/PatchMixolydic/events{/privacy}", "received_events_url": "https://api.github.com/users/PatchMixolydic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/81", "html_url": "https://github.com/rust-lang/rust/milestone/81", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/81/labels", "id": 6573982, "node_id": "MDk6TWlsZXN0b25lNjU3Mzk4Mg==", "number": 81, "title": "1.53.0", "description": "", "creator": {"login": "rustbot", "id": 47979223, "node_id": "MDQ6VXNlcjQ3OTc5MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47979223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustbot", "html_url": "https://github.com/rustbot", "followers_url": "https://api.github.com/users/rustbot/followers", "following_url": "https://api.github.com/users/rustbot/following{/other_user}", "gists_url": "https://api.github.com/users/rustbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustbot/subscriptions", "organizations_url": "https://api.github.com/users/rustbot/orgs", "repos_url": "https://api.github.com/users/rustbot/repos", "events_url": "https://api.github.com/users/rustbot/events{/privacy}", "received_events_url": "https://api.github.com/users/rustbot/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 645, "state": "closed", "created_at": "2021-03-21T03:36:23Z", "updated_at": "2022-03-22T12:24:38Z", "due_on": null, "closed_at": "2021-06-17T19:18:31Z"}, "comments": 14, "created_at": "2021-05-01T00:11:29Z", "updated_at": "2021-05-13T18:07:18Z", "closed_at": "2021-05-13T18:07:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code ([playground](https://play.rust-lang.org/?version=beta&mode=debug&edition=2018&gist=d129ca6f7559fe24438efcefc14eec4c)):\r\n\r\n```rust\r\ntrait Bar {}\r\nimpl Bar for String {}\r\n\r\nfn main() {\r\n  let s = String::from(\"hey\");\r\n  let x: &dyn Bar = &s;\r\n  x.as_ref();\r\n}\r\n```\r\n\r\nThe output on `1.53.0-nightly (2021-04-29 478a07df05e3fe8df964)` is:\r\n\r\n<details>\r\n<summary>Long diagnostic</summary>\r\n\r\n```\r\nerror[E0599]: the method `as_ref` exists for reference `&dyn Bar`, but its trait bounds were not satisfied\r\n   --> src/main.rs:7:5\r\n    |\r\n1   | trait Bar {}\r\n    | --------- doesn't satisfy `dyn Bar: AsRef<_>`\r\n...\r\n7   |   x.as_ref();\r\n    |     ^^^^^^ method cannot be called on `&dyn Bar` due to unsatisfied trait bounds\r\n    |\r\n    = note: the following trait bounds were not satisfied:\r\n            `dyn Bar: AsRef<_>`\r\n            which is required by `&dyn Bar: AsRef<_>`\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Box::new(x).as_ref();\r\n    |   ^^^^^^^^^ ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Pin::new(x).as_ref();\r\n    |   ^^^^^^^^^ ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Arc::new(x).as_ref();\r\n    |   ^^^^^^^^^ ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Rc::new(x).as_ref();\r\n    |   ^^^^^^^^ ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Box::new(&mut x).as_ref();\r\n    |   ^^^^^^^^^^^^^  ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Pin::new(&mut x).as_ref();\r\n    |   ^^^^^^^^^^^^^  ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Arc::new(&mut x).as_ref();\r\n    |   ^^^^^^^^^^^^^  ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Rc::new(&mut x).as_ref();\r\n    |   ^^^^^^^^^^^^  ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Box::new(&x).as_ref();\r\n    |   ^^^^^^^^^^ ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Pin::new(&x).as_ref();\r\n    |   ^^^^^^^^^^ ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Arc::new(&x).as_ref();\r\n    |   ^^^^^^^^^^ ^\r\nhelp: consider wrapping the receiver expression with the appropriate type\r\n    |\r\n7   |   Rc::new(&x).as_ref();\r\n    |   ^^^^^^^^^ ^\r\n```\r\n</details>\r\n\r\n`Box`, `Pin`, `Arc`, and `Rc` are suggested three times each: once for `x`, once for `&x`, and once for `&mut x`. I'm not sure if this is a problem, but this seems incredibly verbose to me.\r\n\r\nNote that the output on stable 1.51 and beta 1.52 is different:\r\n```\r\nerror[E0599]: the method `as_ref` exists for reference `&dyn Bar`, but its trait bounds were not satisfied\r\n --> src/main.rs:7:5\r\n  |\r\n1 | trait Bar {}\r\n  | --------- doesn't satisfy `dyn Bar: AsRef<_>`\r\n...\r\n7 |   x.as_ref();\r\n  |     ^^^^^^ method cannot be called on `&dyn Bar` due to unsatisfied trait bounds\r\n  |\r\n  = note: the following trait bounds were not satisfied:\r\n          `dyn Bar: AsRef<_>`\r\n          which is required by `&dyn Bar: AsRef<_>`\r\n  = help: items from traits can only be used if the trait is implemented and in scope\r\n  = note: the following trait defines an item `as_ref`, perhaps you need to implement it:\r\n          candidate #1: `AsRef`\r\n```", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84769/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 3, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84769/timeline", "performed_via_github_app": null, "state_reason": "completed"}