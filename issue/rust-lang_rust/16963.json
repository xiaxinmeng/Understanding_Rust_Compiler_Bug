{"url": "https://api.github.com/repos/rust-lang/rust/issues/16963", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16963/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16963/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16963/events", "html_url": "https://github.com/rust-lang/rust/issues/16963", "id": 41809798, "node_id": "MDU6SXNzdWU0MTgwOTc5OA==", "number": 16963, "title": "Clarify the semantics of type cast", "user": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-03T12:18:39Z", "updated_at": "2015-02-16T23:25:26Z", "closed_at": "2015-02-16T23:25:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current spec is not clear about such expressions as `-1i32 as uint as i32 == -1i32` hold or not.\n\nhttp://doc.rust-lang.org/rust.html#type-cast-expressions\n\n> 7.2.11.5 Type cast expressions\n> \n> A type cast expression is denoted with the binary operator `as`.\n> \n> Executing an `as` expression casts the value on the left-hand side to the type on the right-hand side.\n> \n> A numeric value can be cast to any numeric type. A raw pointer value can be cast to or from any integral type or raw pointer type. Any other cast is unsupported and will fail to compile.\n> \n> An example of an `as` expression:\n> \n> ``` rs\n> fn avg(v: &[f64]) -> f64 {\n>   let sum: f64 = sum(v);\n>   let sz: f64 = len(v) as f64;\n>   return sum / sz;\n> }\n> ```\n\nCf: Java8 spec http://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.5\n\nBackground: I began to worry about this when I noticed some codes in `libnative` cast `os::errno()` into `uint` though POSIX defines `errno` to be a C `int` variable (on Linux, none of `E***` actually have a negative value.)\n\n http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/errno.h.html\n\n> The symbol _errno_ shall expand to a modifiable lvalue of type `int`.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16963/timeline", "performed_via_github_app": null, "state_reason": "completed"}