{"url": "https://api.github.com/repos/rust-lang/rust/issues/65253", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65253/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65253/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65253/events", "html_url": "https://github.com/rust-lang/rust/issues/65253", "id": 504950107, "node_id": "MDU6SXNzdWU1MDQ5NTAxMDc=", "number": 65253, "title": "Internal compiler error: can't buffer lints after HIR lowering", "user": {"login": "dingelish", "id": 1870436, "node_id": "MDQ6VXNlcjE4NzA0MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1870436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingelish", "html_url": "https://github.com/dingelish", "followers_url": "https://api.github.com/users/dingelish/followers", "following_url": "https://api.github.com/users/dingelish/following{/other_user}", "gists_url": "https://api.github.com/users/dingelish/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingelish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingelish/subscriptions", "organizations_url": "https://api.github.com/users/dingelish/orgs", "repos_url": "https://api.github.com/users/dingelish/repos", "events_url": "https://api.github.com/users/dingelish/events{/privacy}", "received_events_url": "https://api.github.com/users/dingelish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-10-09T23:39:51Z", "updated_at": "2019-10-12T10:05:33Z", "closed_at": "2019-10-12T10:05:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm updating rust-sgx-sdk (solving rust-sgx-sdk [#161](https://github.com/baidu/rust-sgx-sdk/issues/161)) to use latest rust nightly compiler to help the error info more ergonomic by the help of #60561. However, the compiler always panics. Your help would be very much helpful.\r\n\r\nThe current code is at https://github.com/baidu/rust-sgx-sdk/tree/librustc-bug-report . To reproduce this bug, please checkout branch `librustc-bug-report` and build sgx_tstd as follows:\r\n\r\n```\r\ngit clone https://github.com/baidu/rust-sgx-sdk.git --branch librustc-bug-report\r\ncd sgx_tstd\r\ncargo build\r\n```\r\n\r\nAnd the reproducible failure info is:\r\n\r\n```\r\nerror: internal compiler error: src/librustc/session/mod.rs:379: can't buffer lints after HIR lowering\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:915:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.40.0-nightly (032a53a06 2019-10-03) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type rlib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `sgx_tstd`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\nrustc 1.40.0-nightly (032a53a06 2019-10-03)\r\nbinary: rustc\r\ncommit-hash: 032a53a06ce293571e51bbe621a5c480e8a28e95\r\ncommit-date: 2019-10-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.40.0-nightly\r\nLLVM version: 9.0\r\n\r\nBacktrace:\r\n\r\n```\r\n     Running `rustc --edition=2018 --crate-name sgx_tstd src/lib.rs --color always --crate-type rlib --emit=dep-info,metadata,link -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"stdio\"' -C metadata=efa82b20f3ba8732 -C extra-filename=-efa82b20f3ba8732 --out-dir /home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps -C incremental=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/incremental -L dependency=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps --extern sgx_alloc=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_alloc-ad20d7e0fe6e7e8f.rmeta --extern sgx_backtrace_sys=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_backtrace_sys-fb71f2a27217c86f.rmeta --extern sgx_demangle=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_demangle-7efcf1000ae681fd.rmeta --extern sgx_libc=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_libc-c007d9004d6eb876.rmeta --extern sgx_tprotected_fs=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_tprotected_fs-1993701cdf0742cc.rmeta --extern sgx_trts=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_trts-4601b4cac7f4f271.rmeta --extern sgx_types=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_types-e6e7a9a7cef74d06.rmeta --extern sgx_unwind=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_unwind-f3194af852ce8a4e.rmeta -L native=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/build/sgx_backtrace_sys-d202fe026b4e22c7/out/libbacktrace/ -L native=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/build/sgx_backtrace_sys-d202fe026b4e22c7/out/libbacktrace -L native=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/build/sgx_unwind-cde3a2cab833ed9c/out/libunwind/src/.libs`\r\nerror: internal compiler error: src/librustc/session/mod.rs:379: can't buffer lints after HIR lowering\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:915:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:76\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:60\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1028\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:64\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:196\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:210\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:477\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_context_opt\r\n  18: rustc::ty::context::tls::with_opt\r\n  19: rustc::util::bug::opt_span_bug_fmt\r\n  20: rustc::util::bug::bug_fmt\r\n  21: rustc::session::Session::buffer_lint\r\n  22: rustc::middle::stability::report_unstable\r\n  23: rustc::middle::stability::<impl rustc::ty::context::TyCtxt>::check_stability\r\n  24: rustc::hir::intravisit::walk_item\r\n  25: <rustc::middle::stability::Checker as rustc::hir::intravisit::Visitor>::visit_item\r\n  26: rustc::middle::stability::check_mod_unstable_api_usage\r\n  27: rustc::ty::query::__query_compute::check_mod_unstable_api_usage\r\n  28: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_mod_unstable_api_usage>::compute\r\n  29: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  30: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  32: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  33: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:80\r\n  34: rustc_interface::passes::analysis::{{closure}}\r\n  35: rustc::util::common::time\r\n  36: rustc_interface::passes::analysis\r\n  37: rustc::ty::query::__query_compute::analysis\r\n  38: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  40: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  41: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  42: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  43: std::thread::local::LocalKey<T>::with\r\n  44: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.40.0-nightly (032a53a06 2019-10-03) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type rlib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_mod_unstable_api_usage] checking for unstable API usage in module `prelude::v1`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `sgx_tstd`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --edition=2018 --crate-name sgx_tstd src/lib.rs --color always --crate-type rlib --emit=dep-info,metadata,link -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"stdio\"' -C metadata=efa82b20f3ba8732 -C extra-filename=-efa82b20f3ba8732 --out-dir /home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps -C incremental=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/incremental -L dependency=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps --extern sgx_alloc=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_alloc-ad20d7e0fe6e7e8f.rmeta --extern sgx_backtrace_sys=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_backtrace_sys-fb71f2a27217c86f.rmeta --extern sgx_demangle=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_demangle-7efcf1000ae681fd.rmeta --extern sgx_libc=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_libc-c007d9004d6eb876.rmeta --extern sgx_tprotected_fs=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_tprotected_fs-1993701cdf0742cc.rmeta --extern sgx_trts=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_trts-4601b4cac7f4f271.rmeta --extern sgx_types=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_types-e6e7a9a7cef74d06.rmeta --extern sgx_unwind=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/deps/libsgx_unwind-f3194af852ce8a4e.rmeta -L native=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/build/sgx_backtrace_sys-d202fe026b4e22c7/out/libbacktrace/ -L native=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/build/sgx_backtrace_sys-d202fe026b4e22c7/out/libbacktrace -L native=/home/ding/rust-sgx-sdk/sgx_tstd/target/debug/build/sgx_unwind-cde3a2cab833ed9c/out/libunwind/src/.libs` (exit code: 101)\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65253/timeline", "performed_via_github_app": null, "state_reason": "completed"}