{"url": "https://api.github.com/repos/rust-lang/rust/issues/110553", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110553/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110553/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110553/events", "html_url": "https://github.com/rust-lang/rust/issues/110553", "id": 1675368286, "node_id": "I_kwDOAAsO6M5j3Bde", "number": 110553, "title": "ICE: DefId does not have a def_span", "user": {"login": "alexshagiev", "id": 24636886, "node_id": "MDQ6VXNlcjI0NjM2ODg2", "avatar_url": "https://avatars.githubusercontent.com/u/24636886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexshagiev", "html_url": "https://github.com/alexshagiev", "followers_url": "https://api.github.com/users/alexshagiev/followers", "following_url": "https://api.github.com/users/alexshagiev/following{/other_user}", "gists_url": "https://api.github.com/users/alexshagiev/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexshagiev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexshagiev/subscriptions", "organizations_url": "https://api.github.com/users/alexshagiev/orgs", "repos_url": "https://api.github.com/users/alexshagiev/repos", "events_url": "https://api.github.com/users/alexshagiev/events{/privacy}", "received_events_url": "https://api.github.com/users/alexshagiev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 13242248, "node_id": "MDU6TGFiZWwxMzI0MjI0OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-metadata", "name": "A-metadata", "color": "f7e101", "default": false, "description": "Area: crate metadata"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2023-04-19T17:59:43Z", "updated_at": "2023-04-25T14:16:32Z", "closed_at": "2023-04-24T16:04:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n# src/ser/stack/mod.rs\r\npub fn blah<const CAP: usize, T>(v: &T) -> Result<[u8; CAP]>\r\nwhere\r\n    T: Debug,\r\n{\r\n    Result::Ok([0; CAP])\r\n}\r\n\r\n# src/test/ser/stack/mod.rs\r\n#[test]\r\nfn run() {\r\n\r\n    struct Integers {\r\n        a: u8,\r\n        b: u16,\r\n    }\r\n    let _x = Integers { a: 1, b: 2 };\r\n    let _y = blah::<20>(&_x);\r\n   /////     let _y = blah::<20, Integers >(&_x); -> I think it wants a second parameter in the generics to make it work\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.71.0-nightly (d0f204e4d 2023-04-16)\r\nbinary: rustc\r\ncommit-hash: d0f204e4d750b62f9d6c2593405e828757126832\r\ncommit-date: 2023-04-16\r\nhost: x86_64-apple-darwin\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n *  Executing task: cargo test --package binserde --test mod -- ser::stack::run --exact --nocapture \r\n\r\nwarning: unused variable: `v`\r\n   --> src/ser/stack/mod.rs:100:34\r\n    |\r\n100 | pub fn blah<const CAP: usize, T>(v: &T) -> Result<[u8; CAP]>\r\n    |                                  ^ help: if this is intentional, prefix it with an underscore: `_v`\r\n    |\r\n    = note: `#[warn(unused_variables)]` on by default\r\n\r\n\r\nthread 'rustc' panicked at 'DefId(20:89 ~ binserde[d018]::ser::stack::blah::CAP) does not have a \"def_span\"', compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs:205:1\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::def_span::{closure#2}\r\n   3: rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::def_span\r\n   4: <std::thread::local::LocalKey<core::cell::Cell<*const ()>>>::with::<rustc_middle::ty::context::tls::enter_context<rustc_query_system::query::plumbing::execute_job_incr<rustc_query_impl::queries::def_span, rustc_query_impl::plumbing::QueryCtxt>::{closure#2}, (rustc_middle::query::erase::Erased<[u8; 8]>, rustc_query_system::dep_graph::graph::DepNodeIndex)>::{closure#0}, (rustc_middle::query::erase::Erased<[u8; 8]>, rustc_query_system::dep_graph::graph::DepNodeIndex)>\r\n   5: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::def_span, rustc_query_impl::plumbing::QueryCtxt>\r\n   6: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::def_span\r\n   7: <&mut <rustc_hir_analysis::structured_errors::wrong_number_of_generic_args::WrongNumberOfGenericArgs>::show_definition::{closure#0} as core::ops::function::FnOnce<(&rustc_middle::ty::generics::GenericParamDef,)>>::call_once\r\n   8: <alloc::vec::Vec<alloc::string::String> as alloc::vec::spec_from_iter::SpecFromIter<alloc::string::String, core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::iter::adapters::take::Take<core::iter::adapters::skip::Skip<core::slice::iter::Iter<rustc_middle::ty::generics::GenericParamDef>>>, <rustc_hir_analysis::structured_errors::wrong_number_of_generic_args::WrongNumberOfGenericArgs>::show_definition::{closure#0}>, <rustc_hir_analysis::structured_errors::wrong_number_of_generic_args::WrongNumberOfGenericArgs>::show_definition::{closure#1}>>>::from_iter\r\n   9: <rustc_hir_analysis::structured_errors::wrong_number_of_generic_args::WrongNumberOfGenericArgs as rustc_hir_analysis::structured_errors::StructuredDiagnostic>::diagnostic_common\r\n  10: <rustc_hir_analysis::structured_errors::wrong_number_of_generic_args::WrongNumberOfGenericArgs as rustc_hir_analysis::structured_errors::StructuredDiagnostic>::diagnostic\r\n  11: rustc_hir_analysis::astconv::generics::check_generic_arg_count\r\n  12: <rustc_hir_typeck::fn_ctxt::FnCtxt>::instantiate_value_path\r\n  13: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_path\r\n  14: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  15: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_call\r\n  16: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_kind\r\n  17: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  18: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_decl\r\n  19: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_stmt\r\n  20: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  21: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_kind\r\n  22: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  23: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_return_expr\r\n  24: rustc_hir_typeck::check::check_fn\r\n  25: rustc_hir_typeck::typeck\r\n  26: <std::thread::local::LocalKey<core::cell::Cell<*const ()>>>::with::<rustc_middle::ty::context::tls::enter_context<rustc_query_system::query::plumbing::execute_job_incr<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>::{closure#2}, (rustc_middle::query::erase::Erased<[u8; 8]>, rustc_query_system::dep_graph::graph::DepNodeIndex)>::{closure#0}, (rustc_middle::query::erase::Erased<[u8; 8]>, rustc_query_system::dep_graph::graph::DepNodeIndex)>\r\n  27: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck, rustc_query_impl::plumbing::QueryCtxt>\r\n  28: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  29: <core::panic::unwind_safe::AssertUnwindSafe<rustc_data_structures::sync::par_for_each_in<&[rustc_span::def_id::LocalDefId], <rustc_middle::hir::map::Map>::par_body_owners<rustc_hir_typeck::typeck_item_bodies::{closure#0}>::{closure#0}>::{closure#0}::{closure#0}> as core::ops::function::FnOnce<()>>::call_once\r\n  30: rustc_data_structures::sync::par_for_each_in::<&[rustc_span::def_id::LocalDefId], <rustc_middle::hir::map::Map>::par_body_owners<rustc_hir_typeck::typeck_item_bodies::{closure#0}>::{closure#0}>\r\n  31: rustc_hir_typeck::typeck_item_bodies\r\n  32: <std::thread::local::LocalKey<core::cell::Cell<*const ()>>>::with::<rustc_middle::ty::context::tls::enter_context<rustc_query_system::query::plumbing::execute_job_incr<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>::{closure#2}, (rustc_middle::query::erase::Erased<[u8; 0]>, rustc_query_system::dep_graph::graph::DepNodeIndex)>::{closure#0}, (rustc_middle::query::erase::Erased<[u8; 0]>, rustc_query_system::dep_graph::graph::DepNodeIndex)>\r\n  33: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  34: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  35: <rustc_session::session::Session>::time::<(), rustc_hir_analysis::check_crate::{closure#7}>\r\n  36: rustc_hir_analysis::check_crate\r\n  37: rustc_interface::passes::analysis\r\n  38: <std::thread::local::LocalKey<core::cell::Cell<*const ()>>>::with::<rustc_middle::ty::context::tls::enter_context<rustc_query_system::query::plumbing::execute_job_incr<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>::{closure#2}, (rustc_middle::query::erase::Erased<[u8; 1]>, rustc_query_system::dep_graph::graph::DepNodeIndex)>::{closure#0}, (rustc_middle::query::erase::Erased<[u8; 1]>, rustc_query_system::dep_graph::graph::DepNodeIndex)>\r\n  39: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  40: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  41: <std::thread::local::LocalKey<core::cell::Cell<*const ()>>>::with::<rustc_middle::ty::context::tls::enter_context<<rustc_middle::ty::context::GlobalCtxt>::enter<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n  42: <rustc_interface::queries::QueryResult<&rustc_middle::ty::context::GlobalCtxt>>::enter::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}>\r\n  43: <rustc_interface::interface::Compiler>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_span::ErrorGuaranteed>>\r\n  44: rustc_span::set_source_map::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  45: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.71.0-nightly (d0f204e4d 2023-04-16) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [def_span] looking up span for `binserde::ser::stack::blah::CAP`\r\n#1 [typeck] type-checking `ser::stack::run`\r\n#2 [typeck_item_bodies] type-checking all item bodies\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\nwarning: `binserde` (test \"mod\") generated 1 warning (run `cargo fix --test \"mod\"` to apply 1 suggestion)\r\nerror: could not compile `binserde` (test \"mod\"); 1 warning emitted\r\n\r\n *  The terminal process \"cargo 'test', '--package', 'binserde', '--test', 'mod', '--', 'ser::stack::run', '--exact', '--nocapture'\" terminated with exit code: 101. \r\n *  Terminal will be reused by tasks, press any key to close it. \r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110553/timeline", "performed_via_github_app": null, "state_reason": "completed"}