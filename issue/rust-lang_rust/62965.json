{"url": "https://api.github.com/repos/rust-lang/rust/issues/62965", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62965/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62965/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62965/events", "html_url": "https://github.com/rust-lang/rust/issues/62965", "id": 472597794, "node_id": "MDU6SXNzdWU0NzI1OTc3OTQ=", "number": 62965, "title": "Initializing struct fields with `MaybeUninit`", "user": {"login": "Osspial", "id": 16296823, "node_id": "MDQ6VXNlcjE2Mjk2ODIz", "avatar_url": "https://avatars.githubusercontent.com/u/16296823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Osspial", "html_url": "https://github.com/Osspial", "followers_url": "https://api.github.com/users/Osspial/followers", "following_url": "https://api.github.com/users/Osspial/following{/other_user}", "gists_url": "https://api.github.com/users/Osspial/gists{/gist_id}", "starred_url": "https://api.github.com/users/Osspial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Osspial/subscriptions", "organizations_url": "https://api.github.com/users/Osspial/orgs", "repos_url": "https://api.github.com/users/Osspial/repos", "events_url": "https://api.github.com/users/Osspial/events{/privacy}", "received_events_url": "https://api.github.com/users/Osspial/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 1557340186, "node_id": "MDU6TGFiZWwxNTU3MzQwMTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-raw_ref_op", "name": "F-raw_ref_op", "color": "f9c0cc", "default": false, "description": "`#![feature(raw_ref_op)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-07-24T23:35:19Z", "updated_at": "2021-08-23T19:00:17Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The `MaybeUninit` docs have one weird, concerning section: \r\n\r\n> [There is currently no supported way to create a raw pointer or reference to a field of a struct inside `MaybeUninit<Struct>`. That means it is not possible to create a struct by calling `MaybeUninit::uninit::<Struct>()` and then writing to its fields.](https://doc.rust-lang.org/beta/std/mem/union.MaybeUninit.html#initializing-a-struct-field-by-field)\r\n\r\nHowever, there seems to be a pretty clear, simple way to do that:\r\n\r\n```rust\r\nuse std::mem::MaybeUninit;\r\n\r\nfn main() {\r\n    struct Foo {a: u32, b: bool}\r\n    let mut idk: MaybeUninit<Foo> = MaybeUninit::uninit();\r\n    unsafe{ (*idk.as_mut_ptr()).b = true; }\r\n}\r\n```\r\n\r\nIf you run that through MIRI, it doesn't complain, which strongly implies that the documentation is incorrect: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=1862e046da3dbd485f83fd8ffa1ce4fd\r\n\r\nSo, is the documentation incorrect, or is MIRI incorrectly accepting the above code as defined behavior?\r\n\r\n(It's worth noting that MIRI correctly rejects using `mem::uninitialized()` in that context: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=02e33fd2582dcaeaf2b97e9e0db7e0d1)\r\n\r\ncc #53491 @RalfJung", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62965/timeline", "performed_via_github_app": null, "state_reason": null}