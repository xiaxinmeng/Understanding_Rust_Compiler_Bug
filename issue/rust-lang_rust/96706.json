{"url": "https://api.github.com/repos/rust-lang/rust/issues/96706", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96706/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96706/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96706/events", "html_url": "https://github.com/rust-lang/rust/issues/96706", "id": 1225407572, "node_id": "I_kwDOAAsO6M5JCjxU", "number": 96706, "title": "Scoped thread panic messages unexpectedly interleaving in stderr output", "user": {"login": "AronParker", "id": 2510861, "node_id": "MDQ6VXNlcjI1MTA4NjE=", "avatar_url": "https://avatars.githubusercontent.com/u/2510861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AronParker", "html_url": "https://github.com/AronParker", "followers_url": "https://api.github.com/users/AronParker/followers", "following_url": "https://api.github.com/users/AronParker/following{/other_user}", "gists_url": "https://api.github.com/users/AronParker/gists{/gist_id}", "starred_url": "https://api.github.com/users/AronParker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AronParker/subscriptions", "organizations_url": "https://api.github.com/users/AronParker/orgs", "repos_url": "https://api.github.com/users/AronParker/repos", "events_url": "https://api.github.com/users/AronParker/events{/privacy}", "received_events_url": "https://api.github.com/users/AronParker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-05-04T13:54:33Z", "updated_at": "2022-05-04T16:53:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(scoped_threads)]\r\n\r\nuse std::{panic, thread};\r\n\r\nfn main() {\r\n    thread::scope(|s| {\r\n        s.spawn(|| {\r\n            panic!(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");\r\n        });\r\n\r\n        s.spawn(|| {\r\n            panic!(\"BBBBBBBBBBBBBBBBBBBBBBBBBBBBB\");\r\n        });\r\n    });\r\n}\r\n```\r\n\r\nI expected to see the following output:\r\n```\r\nthread '<unnamed>' panicked at 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', src\\main.rs:8:13\r\nthread '<unnamed>' panicked at 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBB', src\\main.rs:12:13\r\n```\r\n\r\nAs it runs concurrently, of course the order could be reversed.\r\n\r\nInstead, the panic messages were interleaved. Here are some examples:\r\n\r\n```thread 'thread '<unnamed>' panicked at 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBB<unnamed>', ' panicked at 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', src\\main.rs:13:13src\\main.rs:8:13```\r\n\r\n```thread '<unnamed>' panicked at 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', src\\main.rs:thread '<unnamed>' panicked at '8:13BBBBBBBBBBBBBBBBBBBBBBBBBBBBB```\r\n\r\n```thread '<unnamed>' panicked at 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', thread '<unnamed>src\\main.rs:8' panicked at 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBB:13```\r\n\r\n```thread '<unnamed>' panicked at 'thread '<unnamed>' panicked at 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBB', AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', src\\main.rs:8:13```\r\n\r\n```thread 'thread '<unnamed><unnamed>' panicked at '' panicked at 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBB', ', src\\main.rssrc\\main.rs::812::1313```\r\n\r\nAs scoped threads panic directly to `stderr`, I see no measure to prevent this and provide more readable output.\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0-nightly (7c4b47696 2022-04-30)\r\nbinary: rustc\r\ncommit-hash: 7c4b47696907d64eff5621a64eb3c6e795a9ec77\r\ncommit-date: 2022-04-30\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.62.0-nightly\r\nLLVM version: 14.0.1\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nthread '<unnamed>' panicked at 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', src\\main.rs:8:13\r\nstack backtrace:\r\n   0: std::panicking::begin_panic_handler\r\n             at /rustc/7c4b47696907d64eff5621a64eb3c6e795a9ec77/library\\std\\src\\panicking.rs:584\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/7c4b47696907d64eff5621a64eb3c6e795a9ec77/library\\core\\src\\panicking.rs:142\r\n   2: hello_world::main::closure$0::closure$0\r\n             at .\\src\\main.rs:8\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nthread 'main' panicked at 'a scoped thread panicked', src\\main.rs:6:5\r\nstack backtrace:\r\n   0: std::panicking::begin_panic_handler\r\n             at /rustc/7c4b47696907d64eff5621a64eb3c6e795a9ec77/library\\std\\src\\panicking.rs:584\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/7c4b47696907d64eff5621a64eb3c6e795a9ec77/library\\core\\src\\panicking.rs:142\r\n   2: std::thread::scoped::scope<hello_world::main::closure_env$0,tuple$<> >\r\n             at /rustc/7c4b47696907d64eff5621a64eb3c6e795a9ec77\\library\\std\\src\\thread\\scoped.rs:155\r\n   3: hello_world::main\r\n             at .\\src\\main.rs:6\r\n   4: core::ops::function::FnOnce::call_once<void (*)(),tuple$<> >\r\n             at /rustc/7c4b47696907d64eff5621a64eb3c6e795a9ec77\\library\\core\\src\\ops\\function.rs:248\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nerror: process didn't exit successfully: `target\\debug\\hello_world.exe` (exit code: 101)\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96706/timeline", "performed_via_github_app": null, "state_reason": null}