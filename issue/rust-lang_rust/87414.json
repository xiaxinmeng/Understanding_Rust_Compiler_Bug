{"url": "https://api.github.com/repos/rust-lang/rust/issues/87414", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87414/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87414/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87414/events", "html_url": "https://github.com/rust-lang/rust/issues/87414", "id": 951891495, "node_id": "MDU6SXNzdWU5NTE4OTE0OTU=", "number": 87414, "title": "thir-unsafeck query loops on closures in const-generics", "user": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 3202880947, "node_id": "MDU6TGFiZWwzMjAyODgwOTQ3", "url": "https://api.github.com/repos/rust-lang/rust/labels/thir-unsafeck", "name": "thir-unsafeck", "color": "f9c0cc", "default": false, "description": "-Z thir-unsafeck"}], "state": "closed", "locked": false, "assignee": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2021-07-23T20:56:25Z", "updated_at": "2021-08-03T13:23:28Z", "closed_at": "2021-08-03T13:23:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code with `-Z thir-unsafeck=on`:\r\n\r\n```rust\r\nfn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\nfn main() {}\r\n```\r\n\r\nI expected to see this happen: It compiles, as it does under the MIR checker\r\n\r\nInstead, this happened:\r\n```\r\nerror[E0391]: cycle detected when simplifying constant for the type system `bad::{constant#0}`\r\n --> y.rs:1:45\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  |                                             ^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\nnote: ...which requires simplifying constant for the type system `bad::{constant#0}`...\r\n --> y.rs:1:45\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  |                                             ^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires const-evaluating + checking `bad::{constant#0}`...\r\n --> y.rs:1:45\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  |                                             ^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires const checking `bad::{constant#0}`...\r\n --> y.rs:1:45\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  |                                             ^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires processing MIR for `bad::{constant#0}`...\r\n --> y.rs:1:45\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  |                                             ^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires unsafety-checking `bad::{constant#0}`...\r\n --> y.rs:1:45\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  |                                             ^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires unsafety-checking `bad::{constant#0}::{closure#0}`...\r\n --> y.rs:1:47\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  |                                               ^^^^^^^^\r\nnote: ...which requires building MIR for `bad::{constant#0}::{closure#0}`...\r\n --> y.rs:1:47\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  |                                               ^^^^^^^^\r\nnote: ...which requires unsafety-checking `bad::{constant#0}::{closure#0}`...\r\n --> y.rs:1:47\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  |                                               ^^^^^^^^\r\nnote: ...which requires unsafety-checking `bad`...\r\n --> y.rs:1:1\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires building THIR for `bad`...\r\n --> y.rs:1:1\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which requires type-checking `bad`...\r\n --> y.rs:1:1\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  = note: ...which again requires simplifying constant for the type system `bad::{constant#0}`, completing the cycle\r\nnote: cycle used when checking that `bad` is well-formed\r\n --> y.rs:1:1\r\n  |\r\n1 | fn bad<T>() -> Box<dyn Iterator<Item = [(); { |x: u32| { x }; 4 }]>> { todo!() }\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n$ rustc +local --version --verbose\r\nrustc 1.55.0-dev\r\nbinary: rustc\r\ncommit-hash: unknown\r\ncommit-date: unknown\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.55.0-dev\r\nLLVM version: 12.0.1\r\n```\r\n\r\n\r\n</p>\r\n</details>\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"FabianWolff\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87414/timeline", "performed_via_github_app": null, "state_reason": "completed"}