{"url": "https://api.github.com/repos/rust-lang/rust/issues/44179", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44179/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44179/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44179/events", "html_url": "https://github.com/rust-lang/rust/issues/44179", "id": 253936329, "node_id": "MDU6SXNzdWUyNTM5MzYzMjk=", "number": 44179, "title": "StorageLive and StorageDead annotations in generators are wrong", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 679846574, "node_id": "MDU6TGFiZWw2Nzk4NDY1NzQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-generators", "name": "A-generators", "color": "f7e101", "default": false, "description": "Area: Generators"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-30T09:35:09Z", "updated_at": "2017-09-14T16:46:00Z", "closed_at": "2017-09-14T16:46:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The generator\r\n\r\n```rust\r\n|| {\r\n        if { yield; false } {\r\n            yield;\r\n            loop {}\r\n        }\r\n        yield\r\n    }\r\n```\r\n\r\nproduces the following MIR:\r\n\r\n```\r\nfn main::{{closure}}(_1: &mut [generator@src/main.rs:20:15: 26:6 ((), bool)]) -> std::ops::GeneratorState<(), ()> {\r\n    let mut _0: std::ops::GeneratorState<(), ()>; // return pointer\r\n    let mut _2: ();\r\n    let mut _3: bool;\r\n    let mut _4: ();\r\n    let mut _5: ();\r\n    let mut _6: ();\r\n    let mut _7: ();\r\n    let mut _8: ();\r\n    let mut _9: ();\r\n    let mut _10: ();\r\n\r\n    bb0: {\r\n        switchInt(((*_1).0: u32)) -> [2u32: bb2, 0u32: bb1, 3u32: bb5, 4u32: bb7, 1u32: bb11, 5u32: bb9, otherwise: bb9]; // scope 0 at src/main.rs:20:15: 26:6\r\n    }\r\n\r\n    bb1: {\r\n        StorageLive(_3);                 // scope 0 at src/main.rs:21:12: 21:28\r\n        StorageLive(_5);                 // scope 0 at src/main.rs:21:14: 21:19\r\n        _5 = ();                         // scope 0 at src/main.rs:21:14: 21:19\r\n        ((*_1).0: u32) = const 2u32;     // scope 0 at src/main.rs:21:14: 21:19\r\n        _0 = std::ops::GeneratorState<(), ()>::Yielded(_5,); // scope 0 at src/main.rs:21:14: 21:19\r\n        return;                          // scope 0 at src/main.rs:21:14: 21:19\r\n    }\r\n\r\n    bb2: {\r\n        _4 = ();                         // scope 0 at src/main.rs:21:14: 21:19\r\n        StorageDead(_5);                 // scope 0 at src/main.rs:21:19: 21:19\r\n        _3 = const false;                // scope 0 at src/main.rs:21:21: 21:26\r\n        switchInt(_3) -> [0u8: bb4, otherwise: bb3]; // scope 0 at src/main.rs:21:9: 24:10\r\n    }\r\n\r\n    bb3: {\r\n        StorageLive(_7);                 // scope 0 at src/main.rs:22:13: 22:18\r\n        _7 = ();                         // scope 0 at src/main.rs:22:13: 22:18\r\n        ((*_1).0: u32) = const 3u32;     // scope 0 at src/main.rs:22:13: 22:18\r\n        _0 = std::ops::GeneratorState<(), ()>::Yielded(_7,); // scope 0 at src/main.rs:22:13: 22:18\r\n        return;                          // scope 0 at src/main.rs:22:13: 22:18\r\n    }\r\n\r\n    bb4: {\r\n        _2 = ();                         // scope 0 at src/main.rs:21:9: 24:10\r\n        StorageDead(_3);                 // scope 0 at src/main.rs:24:10: 24:10\r\n        StorageLive(_9);                 // scope 0 at src/main.rs:25:9: 25:14\r\n        _9 = ();                         // scope 0 at src/main.rs:25:9: 25:14\r\n        ((*_1).0: u32) = const 4u32;     // scope 0 at src/main.rs:25:9: 25:14\r\n        _0 = std::ops::GeneratorState<(), ()>::Yielded(_9,); // scope 0 at src/main.rs:25:9: 25:14\r\n        return;                          // scope 0 at src/main.rs:25:9: 25:14\r\n    }\r\n\r\n    bb5: {\r\n        _6 = ();                         // scope 0 at src/main.rs:22:13: 22:18\r\n        StorageDead(_7);                 // scope 0 at src/main.rs:22:18: 22:18\r\n        goto -> bb6;                     // scope 0 at src/main.rs:23:13: 23:20\r\n    }\r\n\r\n    bb6: {\r\n        _8 = ();                         // scope 0 at src/main.rs:23:18: 23:20\r\n        goto -> bb6;                     // scope 0 at src/main.rs:23:13: 23:20\r\n    }\r\n\r\n    bb7: {\r\n        _10 = ();                        // scope 0 at src/main.rs:25:9: 25:14\r\n        StorageDead(_9);                 // scope 0 at src/main.rs:25:14: 25:14\r\n        goto -> bb10;                    // scope 0 at src/main.rs:26:6: 26:6\r\n    }\r\n\r\n    bb8: {\r\n        ((*_1).0: u32) = const 5u32;     // scope 0 at src/main.rs:26:6: 26:6\r\n        _0 = std::ops::GeneratorState<(), ()>::Complete(_10,); // scope 0 at src/main.rs:26:6: 26:6\r\n        return;                          // scope 0 at src/main.rs:26:6: 26:6\r\n    }\r\n\r\n    bb9: {\r\n        assert(const false, \"generator resumed after completion\") -> bb9; // scope 0 at src/main.rs:20:15: 26:6\r\n    }\r\n\r\n    bb10: {\r\n        goto -> bb8;                     // scope 0 at src/main.rs:26:6: 26:6\r\n    }\r\n\r\n    bb11: {\r\n        assert(const false, \"generator resumed after panicking\") -> bb9; // scope 0 at src/main.rs:20:15: 26:6\r\n    }\r\n}\r\n```\r\n\r\nNote the assignment to `_3` in `bb2`, which is not preceded by a `StorageLive` in this invocation of the generator.\r\n\r\nFull example in the playground: https://play.rust-lang.org/?gist=680d18fb9f9bdc91ab969fdbd8bb72a2&version=nightly\r\n\r\ncc @Zoxc ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44179/timeline", "performed_via_github_app": null, "state_reason": "completed"}