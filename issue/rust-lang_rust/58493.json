{"url": "https://api.github.com/repos/rust-lang/rust/issues/58493", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58493/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58493/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58493/events", "html_url": "https://github.com/rust-lang/rust/issues/58493", "id": 410803788, "node_id": "MDU6SXNzdWU0MTA4MDM3ODg=", "number": 58493, "title": "support for implementing \"extern\" functions required by C code when it's declared in a C header/rust-binding", "user": {"login": "M1cha", "id": 878458, "node_id": "MDQ6VXNlcjg3ODQ1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/878458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1cha", "html_url": "https://github.com/M1cha", "followers_url": "https://api.github.com/users/M1cha/followers", "following_url": "https://api.github.com/users/M1cha/following{/other_user}", "gists_url": "https://api.github.com/users/M1cha/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1cha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1cha/subscriptions", "organizations_url": "https://api.github.com/users/M1cha/orgs", "repos_url": "https://api.github.com/users/M1cha/repos", "events_url": "https://api.github.com/users/M1cha/events{/privacy}", "received_events_url": "https://api.github.com/users/M1cha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-15T14:52:35Z", "updated_at": "2019-12-12T07:06:56Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Some C libraries require the user of the lib to implement (platform/sys) functions which are then used by the lib.\r\n\r\nThe library header usually declares the function so you can implement it wherever you want and get a compiler error if the signature has changed and your implementation is thus wrong now.\r\n\r\nIf I use bindgen to generate rust bindings for such a library I'm unable to implement such functions using rust, because they already are declared as extern to rust and the compiler treats this as duplicate/mismatching implementations.\r\n\r\nIf I would just blacklist these functions in bindgen so they'd not be part of the generated bindings there'd be no check if my rust function's signature actually matches the one declared in the C header which is installed on the system.\r\n\r\nI think the solution to this would be adding a new function-attribute which lets you explicitly implement an extern function in rust. ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58493/timeline", "performed_via_github_app": null, "state_reason": null}