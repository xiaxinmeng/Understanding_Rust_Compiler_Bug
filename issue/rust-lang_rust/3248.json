{"url": "https://api.github.com/repos/rust-lang/rust/issues/3248", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3248/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3248/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3248/events", "html_url": "https://github.com/rust-lang/rust/issues/3248", "id": 6369600, "node_id": "MDU6SXNzdWU2MzY5NjAw", "number": 3248, "title": "Macro expansion is inconsistent.", "user": {"login": "nejucomo", "id": 480497, "node_id": "MDQ6VXNlcjQ4MDQ5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/480497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nejucomo", "html_url": "https://github.com/nejucomo", "followers_url": "https://api.github.com/users/nejucomo/followers", "following_url": "https://api.github.com/users/nejucomo/following{/other_user}", "gists_url": "https://api.github.com/users/nejucomo/gists{/gist_id}", "starred_url": "https://api.github.com/users/nejucomo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nejucomo/subscriptions", "organizations_url": "https://api.github.com/users/nejucomo/orgs", "repos_url": "https://api.github.com/users/nejucomo/repos", "events_url": "https://api.github.com/users/nejucomo/events{/privacy}", "received_events_url": "https://api.github.com/users/nejucomo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235146, "node_id": "MDU6TGFiZWwyMzUxNDY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-syntaxext", "name": "A-syntaxext", "color": "f7e101", "default": false, "description": "Area: Syntax extensions"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-08-22T05:23:31Z", "updated_at": "2013-09-30T18:54:40Z", "closed_at": "2013-09-30T18:54:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "A rust crate with a macro definition/use tests differently than running expansion by hand and then compiling that with --test as this log shows:\n\nHere's the original source:\n\n```\n$ cat ./macro_expansion_test.rs\nuse std;\n\nmacro_rules! futz_with_scope(\n  ($input:expr : $result:expr) => (\n    match ($input) {\n      some(x) => ($result),\n      none => ($result),\n    }\n  )\n)\n\nfn futzed_func(candidate: option<int>, x: int) -> int {\n  return futz_with_scope! (candidate : x + 2);\n}\n\n#[test]\nfn test_futzed_func() {\n  assert (futzed_func(some(23), 3) == 5);\n  assert (futzed_func(none, 3) == 5);\n}\n```\n\nIt compiles without warning/error:\n\n```\n$ rustc --test ./macro_expansion_test.rs\n\n```\n\nThe tests pass (which may become a separate bug...):\n\n```\n$ ./macro_expansion_test\n\nrunning 1 test\ntest test_futzed_func ... ok\n\nresult: ok. 1 passed; 0 failed; 0 ignored\n\n```\n\nNow we expand the source into a new source file:\n\n```\n$ rustc --pretty expanded ./macro_expansion_test.rs > macro_expansion_test_expanded.rs\n\n```\n\nThe expansion drops the test function, so we add it back in:\n\n```\n$ cat >> ./macro_expansion_test_expanded.rs\n\n#[test]\nfn test_futzed_func() {\n  assert (futzed_func(some(23), 3) == 5);\n  assert (futzed_func(none, 3) == 5);\n}\n```\n\nHere's the expanded, then doctored result:\n\n```\n$ cat ./macro_expansion_test_expanded.rs\nuse std;\n\n\nfn futzed_func(candidate: option<int>, x: int) -> int {\n    return match candidate { some(x) => x + 2, none => x + 2 };\n}\n\n\n#[test]\nfn test_futzed_func() {\n  assert (futzed_func(some(23), 3) == 5);\n  assert (futzed_func(none, 3) == 5);\n}\n```\n\nNow that expanded/doctored result compiles without warning:\n\n```\n$ rustc --test ./macro_expansion_test_expanded.rs\n\n```\n\nBut the behavior of the tests is different!\n\n```\n$ ./macro_expansion_test_expanded\n\nrunning 1 test\nrust: task failed at 'Assertion futzed_func(some(23), 3) == 5 failed', ./macro_expansion_test_expanded.rs:11\ntest test_futzed_func ... FAILED\n\nfailures:\n    test_futzed_func\n\nresult: FAILED. 0 passed; 1 failed; 0 ignored\n\nrust: task failed at 'Some tests failed', /home/n/sandbox/3p/rust/src/libstd/test.rs:60\nrust: domain main @0x1414b80 root task failed\nrust: task failed at 'killed', /home/n/sandbox/3p/rust/src/libcore/task.rs:549\n```\n\nNote: This could be due to the fact that the macro body introduces a binding \"x\" in the expansion, and the macro caller has its own \"x\" binding and passes an expression with \"x\" in it.\n\nIf macros are \"hygienic\" that may explain the difference because the \"x\" reference in the binding and the \"x\" reference in the caller would be renamed or logically separated by the macro expander.  However, I was lead to believe that's not the case on IRC.\n\nIf macros are not hygienic, then compiling all at once versus expanding and then compiling the result by hand should be identical.\n\nTherefore, if someone can authoritatively demonstrate macros are hygienic (by design and implementation) then this is _not_ a bug, but if that is not true, then this _is_ a bug.\n\nIf macros are hygienic, bonus points for linking to the implementation of the reference sanitization and bonus points for linking to documentation to that effect.\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3248/timeline", "performed_via_github_app": null, "state_reason": "completed"}