{"url": "https://api.github.com/repos/rust-lang/rust/issues/27614", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/27614/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/27614/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/27614/events", "html_url": "https://github.com/rust-lang/rust/issues/27614", "id": 99903865, "node_id": "MDU6SXNzdWU5OTkwMzg2NQ==", "number": 27614, "title": "Borrow checker overly conservative when assigning to a parent reference", "user": {"login": "silene", "id": 1674458, "node_id": "MDQ6VXNlcjE2NzQ0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1674458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silene", "html_url": "https://github.com/silene", "followers_url": "https://api.github.com/users/silene/followers", "following_url": "https://api.github.com/users/silene/following{/other_user}", "gists_url": "https://api.github.com/users/silene/gists{/gist_id}", "starred_url": "https://api.github.com/users/silene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silene/subscriptions", "organizations_url": "https://api.github.com/users/silene/orgs", "repos_url": "https://api.github.com/users/silene/repos", "events_url": "https://api.github.com/users/silene/events{/privacy}", "received_events_url": "https://api.github.com/users/silene/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-09T15:02:23Z", "updated_at": "2015-08-11T07:13:18Z", "closed_at": "2015-08-10T17:21:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following simplified testcase. This is some Rust translation of the C idiom `while ((p = p->next))`.\n\n```\nstruct List { next: Option<Box<List>> }\n\nfn bar(p: &mut List) {\n  let n =\n    match (*p).next {\n      Some (ref mut q) => &mut **q,\n      None => p\n    };\n  bar(n);\n}\n```\n\nThe code compiles fine. Unfortunately, it relies on a recursive call. Since Rust does not perform any tail call optimization, let us transform the code by hand. So, instead of calling the function recursively, we just update its argument inside a loop:\n\n```\nfn baz(mut p: &mut List) {\n  loop {\n    let n =\n      match (*p).next {\n        Some (ref mut q) => &mut **q,\n        None => p\n      };\n    p = n;\n  }\n}\n```\n\nThe code no longer compiles, since Rust detects 3 errors with it. Actually, only one matters (as can be seen by removing the loop), \"cannot assign to p because it is borrowed\". Given the borrowing rules as I understand them, the compiler is right to complain. Indeed, we have live references to values accessible by paths going through p, so accessing p is forbidden.\n\nThe rules seem overly conservative though, since no alias is being created when assigning a parent reference. Indeed, the only path to access the content pointed by p goes through p (since p is &mut); modifying p cannot break that invariant by adding a new path. At worst, modifying p could remove the only known path to the content previously pointed to. (Note that p is just a reference, so the assignment is atomic and without any side-effect.)\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/27614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/27614/timeline", "performed_via_github_app": null, "state_reason": "completed"}