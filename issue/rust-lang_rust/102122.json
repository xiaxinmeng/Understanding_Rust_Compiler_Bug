{"url": "https://api.github.com/repos/rust-lang/rust/issues/102122", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102122/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102122/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102122/events", "html_url": "https://github.com/rust-lang/rust/issues/102122", "id": 1381647236, "node_id": "I_kwDOAAsO6M5SWkOE", "number": 102122, "title": "Tidy check for io::ErrorKind::Other in std code", "user": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 593503757, "node_id": "MDU6TGFiZWw1OTM1MDM3NTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-infra", "name": "T-infra", "color": "bfd4f2", "default": false, "description": "Relevant to the infrastructure team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-09-22T00:08:52Z", "updated_at": "2022-09-22T00:09:05Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "We have a note in the ErrorKind [documentation](https://doc.rust-lang.org/nightly/std/io/enum.ErrorKind.html#variant.Other):\r\n\r\n> This [ErrorKind](https://doc.rust-lang.org/nightly/std/io/enum.ErrorKind.html) is not used by the standard library.\r\n\r\nbut in practice, there are cases were we do make use of it, whether in tests or by accident. We should add a check in tidy that the ErrorKind::Other string doesn't show up in std code, with an ability to opt-out similar to style checks (probably on the same line only would be best).\r\n\r\nThe ideal of course is a compiler check but I don't think there's much we can do there without a custom lint, which seems like way too much effort. The tidy check can miss things (e.g., glob imports), but that's OK.\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102122/timeline", "performed_via_github_app": null, "state_reason": null}