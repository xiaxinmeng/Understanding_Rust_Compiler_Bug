{"url": "https://api.github.com/repos/rust-lang/rust/issues/48043", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48043/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48043/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48043/events", "html_url": "https://github.com/rust-lang/rust/issues/48043", "id": 294997666, "node_id": "MDU6SXNzdWUyOTQ5OTc2NjY=", "number": 48043, "title": "Tracking issue for `try_reserve`: RFC 2116 fallible collection allocation", "user": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 166999014, "node_id": "MDU6TGFiZWwxNjY5OTkwMTQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-collections", "name": "A-collections", "color": "f7e101", "default": false, "description": "Area: std::collections."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 433146169, "node_id": "MDU6TGFiZWw0MzMxNDYxNjk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-implemented", "name": "B-RFC-implemented", "color": "d304cb", "default": false, "description": "Approved by a merged RFC and implemented."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 103, "created_at": "2018-02-07T03:48:29Z", "updated_at": "2022-08-25T14:03:42Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a tracking issue for the `try_reserve` part of the RFC \"fallible collection allocation\" (rust-lang/rfcs#2116).\r\n\r\n**Steps:**\r\n\r\n- [x] Implement the RFC #48648\r\n  - [x] Add `HashSet::try_reserve`: https://github.com/rust-lang/rust/pull/58623\r\n- [x] Finalize the error type\r\n- [ ] Adjust documentation ([see instructions on forge][doc-guide])\r\n- [ ] Stabilization PR ([see instructions on forge][stabilization-guide])\r\n\r\n[stabilization-guide]: https://forge.rust-lang.org/stabilization-guide.html\r\n[doc-guide]: https://forge.rust-lang.org/stabilization-guide.html#updating-documentation\r\n\r\n\r\n**API:**\r\n\r\n```rust\r\nimpl /* each of String, Vec<T>, VecDeque<T> */ {\r\n    pub fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {\u2026}\r\n    pub fn try_reserve_exact(&mut self, additional: usize) -> Result<(), TryReserveError> {\u2026}\r\n}\r\n\r\nimpl /* each of HashMap<K, V> and HashSet<T> */ {\r\n    pub fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {\u2026}\r\n}\r\n\r\n/// The error type for `try_reserve` methods.\r\n#[derive(Clone, PartialEq, Eq, Debug)]\r\npub enum TryReserveError { // in std::collections\r\n    /// Error due to the computed capacity exceeding the collection's maximum\r\n    /// (usually `isize::MAX` bytes).\r\n    CapacityOverflow,\r\n\r\n    /// The memory allocator returned an error\r\n    AllocError {\r\n        /// The layout of allocation request that failed\r\n        layout: Layout,\r\n\r\n        #[doc(hidden)]\r\n        #[unstable(feature = \"container_error_extra\", issue = \"0\", reason = \"\\\r\n            Enable exposing the allocator\u2019s custom error value \\\r\n            if an associated type is added in the future: \\\r\n            https://github.com/rust-lang/wg-allocators/issues/23\")]\r\n        non_exhaustive: (),\r\n    },\r\n}\r\n\r\nimpl From<LayoutErr> for TryReserveError {\r\n    fn from(_: LayoutErr) -> Self {\r\n        TryReserveError::CapacityOverflow\r\n    }\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48043/reactions", "total_count": 18, "+1": 15, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 3, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48043/timeline", "performed_via_github_app": null, "state_reason": null}