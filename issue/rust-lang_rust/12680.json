{"url": "https://api.github.com/repos/rust-lang/rust/issues/12680", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/12680/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/12680/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/12680/events", "html_url": "https://github.com/rust-lang/rust/issues/12680", "id": 28686349, "node_id": "MDU6SXNzdWUyODY4NjM0OQ==", "number": 12680, "title": "More flexible initialization for vectors", "user": {"login": "kvanbere", "id": 1356959, "node_id": "MDQ6VXNlcjEzNTY5NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1356959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvanbere", "html_url": "https://github.com/kvanbere", "followers_url": "https://api.github.com/users/kvanbere/followers", "following_url": "https://api.github.com/users/kvanbere/following{/other_user}", "gists_url": "https://api.github.com/users/kvanbere/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvanbere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvanbere/subscriptions", "organizations_url": "https://api.github.com/users/kvanbere/orgs", "repos_url": "https://api.github.com/users/kvanbere/repos", "events_url": "https://api.github.com/users/kvanbere/events{/privacy}", "received_events_url": "https://api.github.com/users/kvanbere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-04T08:03:53Z", "updated_at": "2014-03-06T20:14:39Z", "closed_at": "2014-03-06T20:14:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "In one of my projects which I'd like to port to rust in the long term, there is some C99 compliant array initializer like so;\n\n```\n  static const void *dispatch[255] = {\n    [opcode_addk] = &&opc_addk,\n    [opcode_addr] = &&opc_addr,\n    [opcode_addvk] = &&opc_addvk,\n    [opcode_addvr] = &&opc_addvr,\n    [opcode_inc] = &&opc_inc,\n    [opcode_subk] = &&opc_subk,\n    [opcode_subr] = &&opc_subr,\n    [opcode_subvk] = &&opc_subvk,\n    [opcode_subvr] = &&opc_subvr,\n    [opcode_dec] = &&opc_dec,\n    &&opc_unident,\n  };\n```\n\nHere `opc_unident` fills the parts of the array not specified, and each `[index] = val` pair puts `val` at the respective `index`. This cuts down the boilerplate for some tasks a LOT (In rust, I would have to write out all 255 entries for it to be quickly \"maintainable\").\n\nI propose some syntax is added for complex initialization of vectors in a similar way.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/12680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/12680/timeline", "performed_via_github_app": null, "state_reason": "completed"}