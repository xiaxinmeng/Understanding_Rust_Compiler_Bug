{"url": "https://api.github.com/repos/rust-lang/rust/issues/41169", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41169/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41169/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41169/events", "html_url": "https://github.com/rust-lang/rust/issues/41169", "id": 220430253, "node_id": "MDU6SXNzdWUyMjA0MzAyNTM=", "number": 41169, "title": "ICE on pattern matching while compiling rust compiler", "user": {"login": "nikhilshagri", "id": 11256206, "node_id": "MDQ6VXNlcjExMjU2MjA2", "avatar_url": "https://avatars.githubusercontent.com/u/11256206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilshagri", "html_url": "https://github.com/nikhilshagri", "followers_url": "https://api.github.com/users/nikhilshagri/followers", "following_url": "https://api.github.com/users/nikhilshagri/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilshagri/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilshagri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilshagri/subscriptions", "organizations_url": "https://api.github.com/users/nikhilshagri/orgs", "repos_url": "https://api.github.com/users/nikhilshagri/repos", "events_url": "https://api.github.com/users/nikhilshagri/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilshagri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-08T21:57:30Z", "updated_at": "2017-04-13T19:17:03Z", "closed_at": "2017-04-13T19:17:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The rust compiler unexpectedly crashed while I was trying to fix a bug (#40402):\r\n```\r\n $ RUST_BACKTRACE=1 ./x.py build src/libtest --stage 1\r\nthread 'rustc' panicked at 'assertion failed: match e.node { ExprMatch(..) => true, _ => false, }', src/librustc/hir/map/mod.rs:856\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: rustc::hir::map::Map::get_pattern_source\r\n   1: <rustc_borrowck::borrowck::gather_loans::GatherLoanCtxt<'a, 'tcx> as rustc::middle::expr_use_visitor::Delegate<'tcx>>::consume_pat\r\n   2: rustc::middle::mem_categorization::MemCategorizationContext::cat_pattern_\r\n   3: rustc::middle::expr_use_visitor::ExprUseVisitor::walk_pat\r\n   4: rustc::middle::expr_use_visitor::ExprUseVisitor::consume_body\r\n   5: rustc_borrowck::borrowck::build_borrowck_dataflow_data\r\n   6: rustc_borrowck::borrowck::check_crate\r\n   7: rustc_driver::driver::phase_3_run_analysis_passes::{{closure}}\r\n   8: rustc_driver::driver::phase_3_run_analysis_passes\r\n   9: rustc_driver::driver::compile_input\r\n  10: rustc_driver::run_compiler\r\n  11: std::panicking::try::do_call\r\n  12: __rust_maybe_catch_panic\r\n  13: <F as alloc::boxed::FnBox<A>>::call_box\r\n  14: std::sys::imp::thread::Thread::new::thread_start\r\n  15: start_thread\r\n  16: clone\r\n\r\nerror: Could not compile `core`.\r\n```\r\nFor context, I was trying to add a method in `hir/map/mod.rs` while this happened. Here is the diff I have now:\r\n```diff\r\ndiff --git a/src/librustc/hir/map/mod.rs b/src/librustc/hir/map/mod.rs\r\nindex d7aa36b24f..7a9d0e0e3e 100644\r\n--- a/src/librustc/hir/map/mod.rs\r\n+++ b/src/librustc/hir/map/mod.rs\r\n@@ -240,6 +240,12 @@ impl Forest {\r\n     }\r\n }\r\n \r\n+#[derive(Debug)]\r\n+pub enum PatternSource<'hir> {\r\n+    MatchExpr(&'hir Expr),\r\n+    LetDecl(&'hir Local),\r\n+}\r\n+\r\n /// Represents a mapping from Node IDs to AST elements and their parent\r\n /// Node IDs\r\n #[derive(Clone)]\r\n@@ -837,6 +843,46 @@ impl<'hir> Map<'hir> {\r\n     pub fn node_to_pretty_string(&self, id: NodeId) -> String {\r\n         print::to_string(self, |s| s.print_node(self.get(id)))\r\n     }\r\n+\r\n+    pub fn get_pattern_source(&self, pat: &Pat) -> Option<PatternSource<'hir>> {\r\n+        let result = self.walk_parent_nodes(pat.id, |node| match *node {\r\n+            NodePat(_) => false,\r\n+            _ => true,\r\n+        }).expect(\"never found a parent for the pattern\");\r\n+\r\n+        match self.find(result) {\r\n+            Some(NodeExpr(e)) => {\r\n+                // the enclosing expression must be a `match`\r\n+                assert!(match e.node { ExprMatch(..) => true, _ => false });\r\n+                Some(PatternSource::MatchExpr(e))\r\n+            }\r\n+            Some(NodeStmt(_)) => {\r\n+                return None;\r\n+            }\r\n+            _ => {\r\n+                warn!(\"No Node found for Nodeid: {:?}\", result);\r\n+                return None;\r\n+            }\r\n+        }\r\n+    }\r\n }\r\n \r\n pub struct NodesMatchingSuffix<'a, 'hir:'a> {\r\ndiff --git a/src/librustc_borrowck/borrowck/gather_loans/gather_moves.rs b/src/librustc_borrowck/borrowck/gather_loans/gather_moves.rs\r\nindex 0577ba7f45..64bea0c544 100644\r\n--- a/src/librustc_borrowck/borrowck/gather_loans/gather_moves.rs\r\n+++ b/src/librustc_borrowck/borrowck/gather_loans/gather_moves.rs\r\n@@ -108,6 +108,10 @@ pub fn gather_move_from_pat<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\r\n         cmt: cmt,\r\n         span_path_opt: pat_span_path_opt,\r\n     };\r\n+\r\n+    let source = bccx.tcx.hir.get_pattern_source(move_pat);\r\n+    debug!(\"gather_move_from_pat: move_pat={:?} source={:?}\", move_pat, source);\r\n+\r\n     gather_move(bccx, move_data, move_error_collector, move_info);\r\n }\r\n```", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41169/timeline", "performed_via_github_app": null, "state_reason": "completed"}