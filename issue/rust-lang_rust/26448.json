{"url": "https://api.github.com/repos/rust-lang/rust/issues/26448", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26448/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26448/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26448/events", "html_url": "https://github.com/rust-lang/rust/issues/26448", "id": 89721725, "node_id": "MDU6SXNzdWU4OTcyMTcyNQ==", "number": 26448, "title": "Rustc confuses lifetimes of different unrelated variables of type &'static str when implementing a trait for &'a str", "user": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-06-20T05:37:48Z", "updated_at": "2019-03-13T01:29:23Z", "closed_at": "2019-03-13T01:29:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example 1:\n\n``` rust\npub trait Foo<T> {\n    fn foo(self) -> T;\n}\n\nimpl<'a, T> Foo<T> for &'a str where &'a str: Into<T> {\n    fn foo(self) -> T {\n        panic!();\n    }\n}\n```\n\nResults in:\n\n``` text\n<std macros>:1:23: 1:39 error: cannot infer an appropriate lifetime due to conflicting requirements\n<std macros>:1 (  ) => ( { panic ! ( \"explicit panic\" ) } ) ; ( $ msg : expr ) => (\n                                     ^~~~~~~~~~~~~~~~\n...\n```\n\nPlayground: https://play.rust-lang.org/?gist=22052e30a6d8e19c053e&version=stable.\n\n---\n\nExample 2:\n\n``` rust\npub struct Bar<T> {\n    items: Vec<&'static str>,\n    inner: T,\n}\n\npub trait IntoBar<T> {\n    fn into_bar(self) -> Bar<T>;\n}\n\nimpl<'a, T> IntoBar<T> for &'a str where &'a str: Into<T> {\n    fn into_bar(self) -> Bar<T> {\n        Bar {\n            items: Vec::new(),\n            inner: self.into(),\n        }\n    }\n}\n```\n\nResults in:\n\n``` text\n<anon>:16:20: 16:30 error: cannot infer an appropriate lifetime due to conflicting requirements\n<anon>:16             items: Vec::new(),\n...\n```\n\nPlayground: https://play.rust-lang.org/?gist=1bffa565c5fd39f942d1&version=nightly\n\n---\n\nExample 3:\n\n``` rust\npub struct Item {\n    _inner: &'static str,\n}\n\npub struct Bar<T> {\n    items: Vec<Item>,\n    inner: T,\n}\n\npub trait IntoBar<T> {\n    fn into_bar(self) -> Bar<T>;\n}\n\nimpl<'a, T> IntoBar<T> for &'a str where &'a str: Into<T> {\n    fn into_bar(self) -> Bar<T> {\n        Bar {\n            items: Vec::new(),\n            inner: self.into(),\n        }\n    }\n}\n```\n\nResults in:\n\n``` text\n<anon>:17:20: 17:28 error: mismatched types:\n expected `core::marker::Sized`,\n    found `core::marker::Sized`\n(lifetime mismatch) [E0308]\n<anon>:17             items: Vec::new(),\n                             ^~~~~~~~\n...\n```\n\nPlayground: https://play.rust-lang.org/?gist=fd54c0069ab0f38079b7&version=stable\n\n---\n\nThe first two examples occur on `rustc 1.0.0 (a59de37e9 2015-05-13) (built 2015-05-14)`, `rustc 1.1.0-beta.3 (6aa2d5078 2015-06-12)` and `rustc 1.2.0-nightly (2f5683913 2015-06-18)`.\n\nThe third example occurs only on `rustc 1.0.0 (a59de37e9 2015-05-13) (built 2015-05-14)` and `rustc 1.1.0-beta.3 (6aa2d5078 2015-06-12)`, and appears to be fixed in nightly. I've included it to contrast with the first and second examples, which are still broken in the nightly.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26448/timeline", "performed_via_github_app": null, "state_reason": "completed"}