{"url": "https://api.github.com/repos/rust-lang/rust/issues/16036", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16036/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16036/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16036/events", "html_url": "https://github.com/rust-lang/rust/issues/16036", "id": 38857930, "node_id": "MDU6SXNzdWUzODg1NzkzMA==", "number": 16036, "title": "macros: it is possible to downcast a `tt` to most anything using nested macros", "user": {"login": "apoelstra", "id": 1351933, "node_id": "MDQ6VXNlcjEzNTE5MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoelstra", "html_url": "https://github.com/apoelstra", "followers_url": "https://api.github.com/users/apoelstra/followers", "following_url": "https://api.github.com/users/apoelstra/following{/other_user}", "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions", "organizations_url": "https://api.github.com/users/apoelstra/orgs", "repos_url": "https://api.github.com/users/apoelstra/repos", "events_url": "https://api.github.com/users/apoelstra/events{/privacy}", "received_events_url": "https://api.github.com/users/apoelstra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-07-28T02:44:24Z", "updated_at": "2017-07-24T19:15:16Z", "closed_at": "2017-07-21T22:56:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code compiles:\n\n``` rust\n#![feature(macro_rules)]\n\nmacro_rules! print_doccomment(\n  (\n    $doc:tt\n    fn $name:ident()\n  ) => (\n    macro_rules! dummy( () => (\n      $doc\n      fn $name() {\n        println!(\"The doc for this function is `{}`\", stringify!($doc));\n      }\n    ))\n    dummy!()\n  )\n)\n\nprint_doccomment!(\n  /// This is a doc comment\n  fn function_to_doc()\n)\n\nfn main() {\n  function_to_doc();\n}\n```\n\nAnd prints \"/// This is a doc comment\". However, the token `/// This is a doc comment` is not an item, which is the only thing that should parse for the first `$doc` when `dummy!` is expanded (according to @chris-morgan on IRC).\n\nNote that I am using (a variation on) this in some code to transmit the doc comments on RPC-handling functions in response to the RPC \"help\". It would be great if there were a sanctioned way to parse or construct doccomments in macros.\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16036/timeline", "performed_via_github_app": null, "state_reason": "completed"}