{"url": "https://api.github.com/repos/rust-lang/rust/issues/18991", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18991/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18991/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18991/events", "html_url": "https://github.com/rust-lang/rust/issues/18991", "id": 48936848, "node_id": "MDU6SXNzdWU0ODkzNjg0OA==", "number": 18991, "title": "`Result::and()` and `Result::and_then()` could be generic over `FromError` implementors", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-11-15T23:42:57Z", "updated_at": "2015-02-16T20:12:10Z", "closed_at": "2015-02-16T20:12:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error interoperation RFC (https://github.com/rust-lang/rfcs/pull/201) did not cover adapting the current APIs such as Result to be more general purpose with regards to the new `FromError` trait.\n\nIt seems to me that the current signatures of `and` and `and_then`:\n\n``` rust\nfn and<U>(self, res: Result<U, E>) -> Result<U, E>\nfn and_then<U>(self, op: |T| -> Result<U, E>) -> Result<U, E>\n```\n\ncould now be:\n\n``` rust\nfn and<U, F: FromError<E>>(self, res: Result<U, F>) -> Result<U, F>\nfn and_then<U, F: FromError<E>>(self, op: |T| -> Result<U, F>) -> Result<U, F>\n```\n\nto allow using these combinators in the same cross-boundary fashion as the `try!` macro.\n\nThis would also require a blanket implementation of `FromError<E>` for any E.\n", "closed_by": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18991/timeline", "performed_via_github_app": null, "state_reason": "completed"}