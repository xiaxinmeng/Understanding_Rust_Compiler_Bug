{"url": "https://api.github.com/repos/rust-lang/rust/issues/104601", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104601/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104601/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104601/events", "html_url": "https://github.com/rust-lang/rust/issues/104601", "id": 1456264582, "node_id": "I_kwDOAAsO6M5WzNWG", "number": 104601, "title": "Rust does not normalize opaque types with escaping bound vars", "user": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-19T06:37:29Z", "updated_at": "2022-11-19T13:24:08Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Opening this issue to record the fact that we don't normalize opaques with escaping bound vars in `Reveal::All` mode after #103509. \r\n\r\nI am not aware of any impacts of this on regular `rustc` compilation sessions, at least not without using TAIT in some strange ways. However, this causes rust-lang/miri#2433 to reoccur, and makes me sad theoretically, since we should be revealing all opaques during monomorphization, for example.\r\n\r\nFixing this is not hard (43119d643857efc366bfca527ac2dadfc3f2e906, #100980), but doing it without incurring major performance penalties (#103423) is difficult.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104601/timeline", "performed_via_github_app": null, "state_reason": null}