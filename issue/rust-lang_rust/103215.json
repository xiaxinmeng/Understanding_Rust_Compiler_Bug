{"url": "https://api.github.com/repos/rust-lang/rust/issues/103215", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103215/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103215/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103215/events", "html_url": "https://github.com/rust-lang/rust/issues/103215", "id": 1413794663, "node_id": "I_kwDOAAsO6M5URMtn", "number": 103215, "title": "tuple struct expressions with non-visible (private) fields should bias towards suggesting methods", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-18T20:18:48Z", "updated_at": "2022-10-31T15:08:46Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following code ([play](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=bda7f897fd748b52731a1f3dd0e61d2e)): \r\n\r\n```rust\r\nfn main() {\r\n    let f = std::fs::File::open(\"/proc/meminfo\").unwrap();\r\n    let b = std::io::BufReader(f);\r\n    for line in b.lines() { dbg!(line); }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0423]](https://doc.rust-lang.org/nightly/error-index.html#E0423): expected function, tuple struct or tuple variant, found struct `std::io::BufReader`\r\n --> src/main.rs:3:13\r\n  |\r\n3 |     let b = std::io::BufReader(f);\r\n  |             ^^^^^^^^^^^^^^^^^^^^^ help: use struct literal syntax instead: `std::io::BufReader { inner: val, buf: val }`\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\n3 |     let b = std::io::BufReader(f);\r\n  |             ^^^^^^^^^^^^^^^^^^^^^ help: use constructor method instead: `std::io::BufReader::new(f)`\r\n```\r\n\r\n----\r\n\r\nIn other words: If a type from an external crate has non-public fields, we should not be suggesting the user attempt to use them for constructing an instance of the type. *Especially* in the case of tuple struct expressions, which can be a sign of an omitted constructor method name. (I'm thinking specifically of people who are coming from Java, and thus may be used to writing something like `new BufReader(f)` where we would write `BufReader::new(f)`.)\r\n\r\nA simple heuristic here could be to look for methods on the type that 1. do not take `self` parameter, and 2. (optional) have a matching number of arguments\r\n\r\n----\r\n\r\nThis issue is similar to #66067 and #52144, except worse, because (if I understand them correctly) those two are both talking about improving the UX for incorrect tuple struct expressions that at least are also referring to tuple struct definitions.\r\n\r\nIn the scenario described here, we have a *record struct* definition being used as a tuple struct, which, in the presence of private fields, we should interpret as a strong hint that someone probably meant to use a method.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103215/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103215/timeline", "performed_via_github_app": null, "state_reason": null}