{"url": "https://api.github.com/repos/rust-lang/rust/issues/95237", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95237/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95237/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95237/events", "html_url": "https://github.com/rust-lang/rust/issues/95237", "id": 1178043713, "node_id": "I_kwDOAAsO6M5GN4VB", "number": 95237, "title": "Hygiene of `use`d macro item is weird.", "user": {"login": "chorman0773", "id": 5026283, "node_id": "MDQ6VXNlcjUwMjYyODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5026283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chorman0773", "html_url": "https://github.com/chorman0773", "followers_url": "https://api.github.com/users/chorman0773/followers", "following_url": "https://api.github.com/users/chorman0773/following{/other_user}", "gists_url": "https://api.github.com/users/chorman0773/gists{/gist_id}", "starred_url": "https://api.github.com/users/chorman0773/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chorman0773/subscriptions", "organizations_url": "https://api.github.com/users/chorman0773/orgs", "repos_url": "https://api.github.com/users/chorman0773/repos", "events_url": "https://api.github.com/users/chorman0773/events{/privacy}", "received_events_url": "https://api.github.com/users/chorman0773/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-03-23T12:19:30Z", "updated_at": "2023-04-10T10:43:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks to Yandros (@danielhenrymantilla) and Kestrer on the Rust community server for finding this.\r\n\r\nI tried this code:\r\n\r\n```rust\r\nfn main () {\r\n    fn f() -> i32 { 27 }\r\n    let _x = 0;\r\n    let f = || -> i32 { 42 };\r\n    let a = m!();\r\n    macro_rules! m {() => ( f() )} use m;\r\n    let b = m!();\r\n    assert_eq!(a, b);\r\n}\r\n```\r\n\r\nI expected to see this happen: Compliation succeeds, no runtime output, runtime terminates successfully. Alternative, Compilation fails.\r\n\r\nInstead, this happened: Compilation succeeds, assertion failure.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\nTested on playground (https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=657f705b289bcd927a2f8a6407ae3dad) using stable (1.59), beta (1.60-beta.5), and nightly (1.61 (8d860b 2022-03-19)). \r\n\r\n~~I have been unsuccessful in replicating this locally, including with the same stable, and another nightly from the same day (though not the same nightly: 3b348d932).~~ Update, it reproduces locally in stable, beta, 8d860b nightly, and latest nightly, with `--edition=2021`. Would probably help if I didn't use edition 2018 features w/o a `--edition` flag.\r\n\r\nHygiene information was extracted using the playground nightly:\r\n```rust\r\n#![feature /* 602#0 */(prelude_import)]\r\n#[prelude_import /* 990#1 */]\r\nuse std /* 1276#1 */::prelude /* 989#1 */::rust_2021 /* 1088#1 */::*;\r\n#[macro_use /* 791#1 */]\r\nextern crate std /* 1276#1 */;\r\nfn main /* 794#0 */() {\r\n    fn f /* 592#0 */() -> i32 /* 688#0 */ { 27 }\r\n    let _x /* 1495#0 */ = 0;\r\n    let f /* 592#0 */ = || -> i32 /* 688#0 */ { 42 };\r\n    let a /* 1497#0 */ = f /* 592#4 */();\r\n    macro_rules! m /* 1498#0 */ { () => (f()) }\r\n    use m\r\n    /*\r\n    1498#0\r\n    */;\r\n    let b /* 1499#0 */ = f /* 592#5 */();\r\n}\r\n\r\n/*\r\nExpansions:\r\ncrate0::{{expn0}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Root\r\ncrate0::{{expn1}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: AstPass(StdImports)\r\ncrate0::{{expn2}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"m\")\r\ncrate0::{{expn3}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"m\")\r\ncrate1::{{expn1}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: AstPass(StdImports)\r\ncrate1::{{expn450}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"include\")\r\ncrate1::{{expn451}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"include\")\r\ncrate2::{{expn579}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Attr, \"derive\")\r\ncrate2::{{expn603}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Attr, \"derive\")\r\n\r\nSyntaxContexts:\r\n#0: parent: #0, outer_mark: (crate0::{{expn0}}, Opaque)\r\n#1: parent: #0, outer_mark: (crate0::{{expn1}}, Opaque)\r\n#2: parent: #0, outer_mark: (crate0::{{expn1}}, Transparent)\r\n#3: parent: #0, outer_mark: (crate1::{{expn1}}, Opaque)\r\n#4: parent: #0, outer_mark: (crate0::{{expn2}}, SemiTransparent)\r\n#5: parent: #0, outer_mark: (crate0::{{expn3}}, SemiTransparent)\r\n*/\r\n```\r\n\r\nAs instructed by the clean hygiene thread on the rust community discord, I attach the following meme to illustrate the bug:\r\n![prescribed_meme](https://user-images.githubusercontent.com/5026283/159697624-41435948-d52e-43c0-bff4-1e9e25ea3ebc.png)\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95237/reactions", "total_count": 9, "+1": 0, "-1": 0, "laugh": 9, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95237/timeline", "performed_via_github_app": null, "state_reason": null}