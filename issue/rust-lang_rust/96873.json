{"url": "https://api.github.com/repos/rust-lang/rust/issues/96873", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96873/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96873/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96873/events", "html_url": "https://github.com/rust-lang/rust/issues/96873", "id": 1229949712, "node_id": "I_kwDOAAsO6M5JT4sQ", "number": 96873, "title": "Iterate over `maybe_unused_trait_imports` when checking dead trait imports", "user": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}], "state": "closed", "locked": false, "assignee": {"login": "Elliot-Roberts", "id": 32186556, "node_id": "MDQ6VXNlcjMyMTg2NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/32186556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elliot-Roberts", "html_url": "https://github.com/Elliot-Roberts", "followers_url": "https://api.github.com/users/Elliot-Roberts/followers", "following_url": "https://api.github.com/users/Elliot-Roberts/following{/other_user}", "gists_url": "https://api.github.com/users/Elliot-Roberts/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elliot-Roberts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elliot-Roberts/subscriptions", "organizations_url": "https://api.github.com/users/Elliot-Roberts/orgs", "repos_url": "https://api.github.com/users/Elliot-Roberts/repos", "events_url": "https://api.github.com/users/Elliot-Roberts/events{/privacy}", "received_events_url": "https://api.github.com/users/Elliot-Roberts/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Elliot-Roberts", "id": 32186556, "node_id": "MDQ6VXNlcjMyMTg2NTU2", "avatar_url": "https://avatars.githubusercontent.com/u/32186556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elliot-Roberts", "html_url": "https://github.com/Elliot-Roberts", "followers_url": "https://api.github.com/users/Elliot-Roberts/followers", "following_url": "https://api.github.com/users/Elliot-Roberts/following{/other_user}", "gists_url": "https://api.github.com/users/Elliot-Roberts/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elliot-Roberts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elliot-Roberts/subscriptions", "organizations_url": "https://api.github.com/users/Elliot-Roberts/orgs", "repos_url": "https://api.github.com/users/Elliot-Roberts/repos", "events_url": "https://api.github.com/users/Elliot-Roberts/events{/privacy}", "received_events_url": "https://api.github.com/users/Elliot-Roberts/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2022-05-09T16:10:17Z", "updated_at": "2022-06-05T01:34:58Z", "closed_at": "2022-06-05T01:34:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The resolver gathers a list of possibly unused trait imports in `maybe_unused_trait_imports`.  This list is passed to resolver outputs, into the `maybe_unused_trait_import` query. This query takes a `LocalDefId` and returns whether the import is possibly unused.\n\nThis is used by the post-typeck unused import check in `rustc_typeck::check_unused`.  This query iterates over all the `use` statements in the crate, checks whether they may be unused trait imports, and warns if they are indeed unused.\n\nAs there are typically very few unused trait imports compared to the number of items in a crate, it would make sense to directly iterate on `maybe_unused_trait_imports`.\n\nSteps:\n- make `maybe_unused_trait_imports` an `FxIndexSet` both in `Resolver` and `ResolverOutputs`, this will ensure a deterministic iteration order;\n- rename `maybe_unused_trait_import` query and give it the signature `maybe_unused_trait_imports: () -> FxIndexSet<LocalDefId>`, and adapt the call site; we do *not* want to access `tcx.resolutions(())` directly, as this would prevent the query system from detecting that the set has not changed;\n- in `rustc_typeck::check_unused::check_crate`, inline `check_import` and replace the loop over `tcx.hir().items` by a loop over `tcx.maybe_unused_trait_imports(())`;\n- the filter over `tcx.def_kind` there can be removed too (or replaced by a debug-assertion): the set may only point to use statements.\n\nExtra:\n- investigate why we check for `item.span.is_empty()`, and the consequences of removing that check;\n- investigate the impact on perf of converting the `FxIndexSet` to a simple `Vec` when producing `ResolverOutputs` from `Resolver`.\n\nI am available on Zulip for any question.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"Elliot-Roberts\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96873/timeline", "performed_via_github_app": null, "state_reason": "completed"}