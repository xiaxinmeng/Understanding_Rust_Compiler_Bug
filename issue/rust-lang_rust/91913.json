{"url": "https://api.github.com/repos/rust-lang/rust/issues/91913", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91913/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91913/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91913/events", "html_url": "https://github.com/rust-lang/rust/issues/91913", "id": 1079894009, "node_id": "I_kwDOAAsO6M5AXd_5", "number": 91913, "title": "Consider adding `Vec::try_with_capacity(_in)` and friends", "user": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-12-14T15:25:05Z", "updated_at": "2022-07-20T21:07:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With `try_reserve(_exact)` stabilized, the following pattern is going to start cropping up (it already does in our internal code base):\r\n\r\n```rust\r\nlet mut buf = Vec::new();\r\nbuf.try_reserve_exact(cap)?;\r\n```\r\n\r\nWould adding one or two extra methods per container; `try_with_capacity(capacity: usize) -> Result<.., TryReserveError>` and `try_with_capacity_in(capacity: usize, alloc: A) -> Result<.., TryReserveError>` be appropriate ?\r\n\r\nNote that the two-liner above works perfectly to the best of my knowledge, it is just a question of conciseness. I also find it makes intent clearer from the start, but other may have diverging opinions on this.\r\n\r\nAffected types would be:\r\n\r\n- `try_with_capacity_in(capacity: usize, alloc: A) -> Result<.., TryReserveError>` ([see all types](https://doc.rust-lang.org/std/index.html?search=std%3A%3Awith_capacity_in())):\r\n    - `std::collections::VecDeque`\r\n    - `std::vec::Vec`\r\n- `try_with_capacity(capacity: usize) -> Result<.., TryReserveError>` ([see all types](https://doc.rust-lang.org/std/index.html?search=std%3A%3Awith_capacity())):\r\n    - `std::collections::BinaryHeap`\r\n    - `std::collections::VecDeque`\r\n    - `std::collections::hash_map::HashMap`\r\n    - `std::collections::hash_set::HashSet`\r\n    - `std::ffi::OsString`\r\n    - `std::io::BufReader`\r\n    - `std::io::BufWriter`\r\n    - `std::io::LineWriter`\r\n    - `std::path::PathBuf`\r\n    - `std::string::String`\r\n    - `std::vec::Vec`\r\n\r\n@rustbot label T-libs C-feature-request T-libs-api\r\n\r\nAside: I'm not sure if this falls under `A-allocators`\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"poliorcetics\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91913/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91913/timeline", "performed_via_github_app": null, "state_reason": null}