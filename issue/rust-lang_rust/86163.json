{"url": "https://api.github.com/repos/rust-lang/rust/issues/86163", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86163/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86163/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86163/events", "html_url": "https://github.com/rust-lang/rust/issues/86163", "id": 915913515, "node_id": "MDU6SXNzdWU5MTU5MTM1MTU=", "number": 86163, "title": "SPARC - passing argument from C++ to Rust issue", "user": {"login": "psumbera", "id": 4249116, "node_id": "MDQ6VXNlcjQyNDkxMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4249116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psumbera", "html_url": "https://github.com/psumbera", "followers_url": "https://api.github.com/users/psumbera/followers", "following_url": "https://api.github.com/users/psumbera/following{/other_user}", "gists_url": "https://api.github.com/users/psumbera/gists{/gist_id}", "starred_url": "https://api.github.com/users/psumbera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psumbera/subscriptions", "organizations_url": "https://api.github.com/users/psumbera/orgs", "repos_url": "https://api.github.com/users/psumbera/repos", "events_url": "https://api.github.com/users/psumbera/events{/privacy}", "received_events_url": "https://api.github.com/users/psumbera/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 632899563, "node_id": "MDU6TGFiZWw2MzI4OTk1NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-SPARC", "name": "O-SPARC", "color": "6e6ec0", "default": false, "description": "Target: SPARC processors"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2021-06-09T08:02:50Z", "updated_at": "2021-12-02T06:11:03Z", "closed_at": "2021-12-02T06:11:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This was originally reported as Firefox issue: https://bugzilla.mozilla.org/show_bug.cgi?id=1714064\r\n\r\nBut now it seems to be rather Rust issue.\r\n\r\nUnfortunately I wasn't able to reproduce it outside of Firefox yet:\r\n\r\nC++ code calls ```wr_dp_push_stacking_context()``` with parameter ```aParams.mFilterDatas.Length()``` which is zero (0):\r\n \r\nhttps://searchfox.org/mozilla-central/rev/79d73b4aff88dd4a0f06dd3789e1148c49b0de60/gfx/webrender_bindings/WebRenderAPI.cpp#1028\r\n\r\nBut Rust code gets instead of ```0``` some nonsense number (e.g. 133081200598864):\r\n\r\nhttps://searchfox.org/mozilla-central/rev/79d73b4aff88dd4a0f06dd3789e1148c49b0de60/gfx/webrender_bindings/src/bindings.rs#2455\r\n\r\nI was able to limit the  ```wr_dp_push_stacking_context()``` to just:\r\n\r\n```\r\n#[no_mangle]\r\npub extern \"C\" fn wr_dp_push_stacking_context(\r\n    bounds: LayoutRect,\r\n    filter_count: usize,\r\n    glyph_raster_space: RasterSpace,\r\n    params: &WrStackingContextParams,\r\n)  {\r\n    debug_assert!(unsafe { !is_in_render_thread() });\r\n    println!(\"XXX start {}\", filter_count);\r\n}\r\n```\r\nAnd the problem is still there. **But when I swap ```bounds: LayoutRect``` with ```filter_count: usize``` then ```filter_count``` is passed correctly!**\r\n\r\n```LayoutRect``` is quite complicated (to me):\r\nhttps://searchfox.org/mozilla-central/rev/79d73b4aff88dd4a0f06dd3789e1148c49b0de60/gfx/wr/webrender_api/src/units.rs#86\r\nImportant might be that it uses **floating numbers**!\r\n\r\nFollowing is disassembled ```wr_dp_push_stacking_context``` function as defined above:\r\n\r\n```\r\nwr_dp_push_stacking_context:    save      %sp, -0x160, %sp\r\nwr_dp_push_stacking_context+4:  call      +0x8          <wr_dp_push_stacking_context+0xc>\r\nwr_dp_push_stacking_context+8:  sethi     %hi(0x3b05800), %i0\r\nwr_dp_push_stacking_context+0xc:or        %i0, 0x3f8, %i0\r\nwr_dp_push_stacking_context+0x10:       add       %i0, %o7, %i0\r\nwr_dp_push_stacking_context+0x14:       stx       %i0, [%fp + 0x767]\r\nwr_dp_push_stacking_context+0x18:       ldx       [%fp + 0x8af], %i0\r\nwr_dp_push_stacking_context+0x1c:       st        %f1, [%fp + 0x787]\r\nwr_dp_push_stacking_context+0x20:       st        %f3, [%fp + 0x78b]\r\nwr_dp_push_stacking_context+0x24:       st        %f5, [%fp + 0x78f]\r\nwr_dp_push_stacking_context+0x28:       st        %f7, [%fp + 0x793]\r\nwr_dp_push_stacking_context+0x2c:       ld        [%fp + 0x787], %i0\r\nwr_dp_push_stacking_context+0x30:       sllx      %i0, 0x20, %i0\r\nwr_dp_push_stacking_context+0x34:       ld        [%fp + 0x78b], %i1\r\nwr_dp_push_stacking_context+0x38:       or        %i0, %i1, %i0\r\nwr_dp_push_stacking_context+0x3c:       stx       %i0, [%fp + 0x777]\r\nwr_dp_push_stacking_context+0x40:       ld        [%fp + 0x78f], %i0\r\nwr_dp_push_stacking_context+0x44:       sllx      %i0, 0x20, %i0\r\nwr_dp_push_stacking_context+0x48:       ld        [%fp + 0x793], %i1\r\nwr_dp_push_stacking_context+0x4c:       or        %i0, %i1, %i0\r\nwr_dp_push_stacking_context+0x50:       stx       %i0, [%fp + 0x77f]\r\nwr_dp_push_stacking_context+0x54:       stx       %i4, [%fp + 0x797]\r\nwr_dp_push_stacking_context+0x58:       stx       %i5, [%fp + 0x7a7]\r\nwr_dp_push_stacking_context+0x5c:       call      -0xae63cb0    <is_in_render_thread>\r\nwr_dp_push_stacking_context+0x60:       stx       %i5, [%fp + 0x79f]\r\nwr_dp_push_stacking_context+0x64:       ba        +0x8          <wr_dp_push_stacking_context+0x6c>\r\nwr_dp_push_stacking_context+0x68:       st        %o0, [%fp + 0x773]\r\nwr_dp_push_stacking_context+0x6c:       ld        [%fp + 0x773], %i0\r\nwr_dp_push_stacking_context+0x70:       cmp       %i0, 0x0\r\nwr_dp_push_stacking_context+0x74:       be        +0x38         <wr_dp_push_stacking_context+0xac>\r\nwr_dp_push_stacking_context+0x78:       nop\r\nwr_dp_push_stacking_context+0x7c:       ba        +0x8          <wr_dp_push_stacking_context+0x84>\r\nwr_dp_push_stacking_context+0x80:       nop\r\nwr_dp_push_stacking_context+0x84:       ldx       [%fp + 0x767], %i0\r\nwr_dp_push_stacking_context+0x88:       sethi     %hi(0x35c00), %i1\r\nwr_dp_push_stacking_context+0x8c:       add       %i1, 0x3b8, %i1\r\nwr_dp_push_stacking_context+0x90:       ldx       [%i0 + %i1], %o0\r\nwr_dp_push_stacking_context+0x94:       sethi     %hi(0x36000), %i1\r\nwr_dp_push_stacking_context+0x98:       add       %i1, 0x50, %i1\r\nwr_dp_push_stacking_context+0x9c:       ldx       [%i0 + %i1], %o2\r\nwr_dp_push_stacking_context+0xa0:       call      +0x3c7726c    <PLT:_ZN4core9panicking5panic17he6543f3ddbf0355fE>\r\nwr_dp_push_stacking_context+0xa4:       mov       0x33, %o1\r\nwr_dp_push_stacking_context+0xa8:       ta        %icc, 0x5\r\nwr_dp_push_stacking_context+0xac:       ldx       [%fp + 0x767], %i0\r\nwr_dp_push_stacking_context+0xb0:       add       %fp, 0x797, %o0\r\nwr_dp_push_stacking_context+0xb4:       stx       %o0, [%fp + 0x7ef]\r\nwr_dp_push_stacking_context+0xb8:       stx       %o0, [%fp + 0x7f7]\r\nwr_dp_push_stacking_context+0xbc:       sethi     %hi(0x1400), %i1\r\nwr_dp_push_stacking_context+0xc0:       add       %i1, 0x190, %i1\r\nwr_dp_push_stacking_context+0xc4:       call      +0x3c81028    <PLT:_ZN4core3fmt10ArgumentV13new17ha9bc9565de3aadf7E>\r\nwr_dp_push_stacking_context+0xc8:       ldx       [%i0 + %i1], %o1\r\nwr_dp_push_stacking_context+0xcc:       stx       %o0, [%fp + 0x757]\r\nwr_dp_push_stacking_context+0xd0:       ba        +0x8          <wr_dp_push_stacking_context+0xd8>\r\nwr_dp_push_stacking_context+0xd4:       stx       %o1, [%fp + 0x75f]\r\nwr_dp_push_stacking_context+0xd8:       ldx       [%fp + 0x767], %i0\r\nwr_dp_push_stacking_context+0xdc:       ldx       [%fp + 0x75f], %i1\r\nwr_dp_push_stacking_context+0xe0:       ldx       [%fp + 0x757], %i2\r\nwr_dp_push_stacking_context+0xe4:       stx       %i2, [%fp + 0x7df]\r\nwr_dp_push_stacking_context+0xe8:       stx       %i1, [%fp + 0x7e7]\r\nwr_dp_push_stacking_context+0xec:       sethi     %hi(0x36000), %i1\r\nwr_dp_push_stacking_context+0xf0:       add       %i1, 0x58, %i1\r\nwr_dp_push_stacking_context+0xf4:       ldx       [%i0 + %i1], %o1\r\nwr_dp_push_stacking_context+0xf8:       add       %fp, 0x7af, %o0\r\nwr_dp_push_stacking_context+0xfc:       mov       0x2, %o2\r\nwr_dp_push_stacking_context+0x100:      add       %fp, 0x7df, %o3\r\nwr_dp_push_stacking_context+0x104:      call      +0xe2a0c      <core::fmt::Arguments::new_v1::h337fca81b2e584b1>\r\nwr_dp_push_stacking_context+0x108:      mov       0x1, %o4\r\nwr_dp_push_stacking_context+0x10c:      ba        +0x8          <wr_dp_push_stacking_context+0x114>\r\nwr_dp_push_stacking_context+0x110:      nop\r\nwr_dp_push_stacking_context+0x114:      call      +0x3df5ab0    <PLT:_ZN3std2io5stdio6_print17h02792fbd1097b851E>\r\nwr_dp_push_stacking_context+0x118:      add       %fp, 0x7af, %o0\r\nwr_dp_push_stacking_context+0x11c:      ba        +0x8          <wr_dp_push_stacking_context+0x124>\r\nwr_dp_push_stacking_context+0x120:      nop\r\nwr_dp_push_stacking_context+0x124:      ret\r\nwr_dp_push_stacking_context+0x128:      restore\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86163/timeline", "performed_via_github_app": null, "state_reason": "completed"}