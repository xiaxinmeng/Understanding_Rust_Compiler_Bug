{"url": "https://api.github.com/repos/rust-lang/rust/issues/85898", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85898/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85898/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85898/events", "html_url": "https://github.com/rust-lang/rust/issues/85898", "id": 908504609, "node_id": "MDU6SXNzdWU5MDg1MDQ2MDk=", "number": 85898, "title": "Associated types from foreign trait impls are considered as conflicting with every other type", "user": {"login": "elinorbgr", "id": 3009227, "node_id": "MDQ6VXNlcjMwMDkyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/3009227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elinorbgr", "html_url": "https://github.com/elinorbgr", "followers_url": "https://api.github.com/users/elinorbgr/followers", "following_url": "https://api.github.com/users/elinorbgr/following{/other_user}", "gists_url": "https://api.github.com/users/elinorbgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/elinorbgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elinorbgr/subscriptions", "organizations_url": "https://api.github.com/users/elinorbgr/orgs", "repos_url": "https://api.github.com/users/elinorbgr/repos", "events_url": "https://api.github.com/users/elinorbgr/events{/privacy}", "received_events_url": "https://api.github.com/users/elinorbgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-06-01T16:56:35Z", "updated_at": "2023-04-05T17:39:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code fails to compile\r\n```rust\r\nuse std::ops::Range;\r\n\r\nstruct Foo;\r\n\r\nimpl From<<Range<usize> as Iterator>::Item> for Foo {\r\n    fn from(_: <Range<usize> as Iterator>::Item) -> Foo {\r\n        Foo\r\n    }\r\n}\r\n```\r\nThe error message is:\r\n```\r\nerror[E0119]: conflicting implementations of trait `std::convert::From<Foo>` for type `Foo`:\r\n --> src/main.rs:5:1\r\n  |\r\n5 | impl From<<Range<usize> as Iterator>::Item> for Foo {\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: conflicting implementation in crate `core`:\r\n          - impl<T> From<T> for T;\r\n```\r\n\r\nIt looks like the compiler thinks that somehow `<Range<usize> as Iterator>::Item` might be equal to `Foo`, even though `Foo` is a local type that the foreign impl or `Iterator` for `Range<usize>` cannot possibly refer to.\r\n\r\nFurthermore, it looks like the compiler does not even try to evaluate `<Range<usize> as Iterator>::Item` to decide if the impl is conflicting or not. All associated types from foreign trait implementations (the code compiles fine if a local trait is used instead of `Iterator`) seem to always be considered to be in conflict with every possible other type.\r\n\r\nFor example `impl From<(u32, <Range<usize> as Iterator>::Item)> for Foo` and `impl From<(u32, String)> for Foo` are also treated as conflicting with each other, even though `<Range<usize> as Iterator>::Item` is not `String`.\r\n\r\nI'm not sure if this last example is a bug (it seems to depend on whether changing an associated type is considered a breaking change or not), but I believe at least the first example should compile, as there is nothing the foreign crate could do to make this impl conflicting.\r\n\r\n### Meta\r\n\r\nThis reproduces easily on the playpen, on both stable (1.52.1), beta (1.53.0) and nightly.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85898/timeline", "performed_via_github_app": null, "state_reason": null}