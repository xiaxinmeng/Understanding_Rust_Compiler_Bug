{"url": "https://api.github.com/repos/rust-lang/rust/issues/70972", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70972/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70972/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70972/events", "html_url": "https://github.com/rust-lang/rust/issues/70972", "id": 597662673, "node_id": "MDU6SXNzdWU1OTc2NjI2NzM=", "number": 70972, "title": "error: internal compiler error: src/librustc_mir_build/hair/pattern/_match.rs:318: cannot deref ByRef", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}, {"id": 1976249438, "node_id": "MDU6TGFiZWwxOTc2MjQ5NDM4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-exhaustiveness-checking", "name": "A-exhaustiveness-checking", "color": "f7e101", "default": false, "description": "Relating to exhaustiveness / usefulness checking of patterns"}, {"id": 1976250596, "node_id": "MDU6TGFiZWwxOTc2MjUwNTk2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-HAIR", "name": "A-HAIR", "color": "f7e101", "default": false, "description": "Relating to the HAIR IR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-10T02:45:17Z", "updated_at": "2020-05-04T20:43:55Z", "closed_at": "2020-05-04T20:43:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::sync::atomic::{AtomicPtr, Ordering};\r\n\r\nconst P: &dyn T = &S as &dyn T;\r\nstatic mut LOGGER: AtomicPtr<&dyn T> = AtomicPtr::new(&mut P);\r\n\r\npub trait T {}\r\nstruct S;\r\nimpl T for S {}\r\n\r\npub fn f() {\r\n    match *LOGGER.load(Ordering::SeqCst) {\r\n        P | _ => {}\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0-nightly (77621317d 2020-03-28)\r\nbinary: rustc\r\ncommit-hash: 77621317d643cc5d13da60b26ab68b057668e688\r\ncommit-date: 2020-03-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\nNote that the error is also present on stable (1.42.0).\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_mir_build/hair/pattern/_match.rs:318: cannot deref ByRef {\r\n    alloc: Allocation {\r\n        bytes: [\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n        ],\r\n        relocations: Relocations(\r\n            SortedMap {\r\n                data: [\r\n                    (\r\n                        Size {\r\n                            raw: 0,\r\n                        },\r\n                        (\r\n                            (),\r\n                            alloc2,\r\n                        ),\r\n                    ),\r\n                    (\r\n                        Size {\r\n                            raw: 8,\r\n                        },\r\n                        (\r\n                            (),\r\n                            alloc4,\r\n                        ),\r\n                    ),\r\n                ],\r\n            },\r\n        ),\r\n        undef_mask: UndefMask {\r\n            blocks: [\r\n                65535,\r\n            ],\r\n            len: Size {\r\n                raw: 16,\r\n            },\r\n        },\r\n        size: Size {\r\n            raw: 16,\r\n        },\r\n        align: Align {\r\n            pow2: 3,\r\n        },\r\n        mutability: Not,\r\n        extra: (),\r\n    },\r\n    offset: Size {\r\n        raw: 0,\r\n    },\r\n}, dyn T -> dyn T\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:880:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:880:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1439\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:515\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: <rustc_mir_build::hair::pattern::_match::LiteralExpander as rustc_mir_build::hair::pattern::PatternFolder>::fold_pattern\r\n  21: rustc_mir_build::hair::pattern::PatternFoldable::fold_with\r\n  22: <rustc_mir_build::hair::pattern::PatKind as rustc_mir_build::hair::pattern::PatternFoldable>::super_fold_with\r\n  23: <rustc_mir_build::hair::pattern::_match::LiteralExpander as rustc_mir_build::hair::pattern::PatternFolder>::fold_pattern\r\n  24: rustc_mir_build::hair::pattern::check_match::MatchVisitor::lower_pattern\r\n  25: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\r\n  26: rustc_mir_build::hair::pattern::_match::MatchCheckCtxt::create_and_enter\r\n  27: <rustc_mir_build::hair::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  28: <rustc_mir_build::hair::pattern::check_match::MatchVisitor as rustc_hir::intravisit::Visitor>::visit_expr\r\n  29: rustc_mir_build::hair::pattern::check_match::check_match\r\n  30: rustc::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc::ty::context::TyCtxt> for rustc::ty::query::queries::check_match>::compute\r\n  31: rustc::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc::dep_graph::dep_node::DepKind>::with_deps\r\n  32: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  33: rustc_query_system::query::plumbing::get_query\r\n  34: rustc_query_system::query::plumbing::ensure_query\r\n  35: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  36: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  37: rustc_interface::passes::analysis\r\n  38: rustc::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc::ty::context::TyCtxt> for rustc::ty::query::queries::analysis>::compute\r\n  39: rustc::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc::dep_graph::dep_node::DepKind>::with_deps\r\n  40: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  41: rustc_query_system::query::plumbing::get_query\r\n  42: rustc::ty::context::tls::enter_global\r\n  43: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  44: scoped_tls::ScopedKey<T>::set\r\n  45: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.44.0-nightly (77621317d 2020-03-28) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_match] processing `f`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70972/timeline", "performed_via_github_app": null, "state_reason": "completed"}