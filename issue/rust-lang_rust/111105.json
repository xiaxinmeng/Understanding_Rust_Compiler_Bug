{"url": "https://api.github.com/repos/rust-lang/rust/issues/111105", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111105/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111105/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111105/events", "html_url": "https://github.com/rust-lang/rust/issues/111105", "id": 1692860759, "node_id": "I_kwDOAAsO6M5k5wFX", "number": 111105, "title": "RPITIT with Send trait marker breaks borrow checker", "user": {"login": "nandesu-utils", "id": 70854931, "node_id": "MDQ6VXNlcjcwODU0OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/70854931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nandesu-utils", "html_url": "https://github.com/nandesu-utils", "followers_url": "https://api.github.com/users/nandesu-utils/followers", "following_url": "https://api.github.com/users/nandesu-utils/following{/other_user}", "gists_url": "https://api.github.com/users/nandesu-utils/gists{/gist_id}", "starred_url": "https://api.github.com/users/nandesu-utils/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nandesu-utils/subscriptions", "organizations_url": "https://api.github.com/users/nandesu-utils/orgs", "repos_url": "https://api.github.com/users/nandesu-utils/repos", "events_url": "https://api.github.com/users/nandesu-utils/events{/privacy}", "received_events_url": "https://api.github.com/users/nandesu-utils/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4515945540, "node_id": "LA_kwDOAAsO6M8AAAABDSvcRA", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-return_position_impl_trait_in_trait", "name": "F-return_position_impl_trait_in_trait", "color": "f9c0cc", "default": false, "description": "`#![feature(return_position_impl_trait_in_trait)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-05-02T18:03:21Z", "updated_at": "2023-05-03T04:34:55Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(return_position_impl_trait_in_trait)]\r\nuse std::future::Future;\r\n\r\npub trait Foo: Sync {\r\n    fn run<'a, 'b: 'a, T: Sync>(&'a self, _: &'b T) -> impl Future<Output = ()> + 'a + Send; // doesn't compile\r\n    // fn run<'a, 'b, T: Sync>(&'a self, _: &'b T) -> impl Future<Output = ()> + 'a + Send; // compiles\r\n}\r\n\r\npub trait FooExt: Foo {\r\n    fn run_via<'a, 'b: 'a, T: Sync>(&'a self, t: &'b T) -> impl Future<Output = ()> + 'a + Send {\r\n        async move {\r\n            // asks for an unspecified lifetime to outlive itself? weird diagnostics\r\n            self.run(t).await;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: successful compilation\r\n\r\nInstead, this happened: an outlives lifetime error with very bad diagnostics\r\n\r\n```\r\nerror: lifetime bound not satisfied\r\n  --> src/lib.rs:12:9\r\n   |\r\n12 | /         async move {\r\n13 | |             // asks for an unspecified lifetime to outlive itself? weird diagnostics\r\n14 | |             self.run(t).await;\r\n15 | |         }\r\n   | |_________^\r\n   |\r\nnote: the lifetime defined here...\r\n  --> src/lib.rs:14:18\r\n   |\r\n14 |             self.run(t).await;\r\n   |                  ^^^\r\nnote: ...must outlive the lifetime defined here\r\n  --> src/lib.rs:14:18\r\n   |\r\n14 |             self.run(t).await;\r\n   |                  ^^^\r\n   = note: this is a known limitation that will be removed in the future ([see issue #100013 <https://github.com/rust-lang/rust/issues/100013>](https://github.com/rust-lang/rust/issues/100013) for more information)\r\n```\r\n\r\nThen I tried this code:\r\n```rust\r\npub trait Foo: Sync {\r\n    fn run<'a, 'b: 'a, T: Sync>(&'a self, _: &'b T) -> impl Future<Output = ()> + 'a;\r\n}\r\n\r\npub trait FooExt: Foo {\r\n    fn run_via<'a, 'b: 'a, T: Sync>(&'a self, t: &'b T) -> impl Future<Output = ()> + 'a {\r\n        async move {\r\n            self.run(t).await; // compiles now!\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd the code compiled! Seems like `Send` bound on the return impl trait type in `run` function breaks borrow checker in some way, or possibly breaks inner definition of the anonymous impl type since the following code with a trait object *works*.\r\n\r\n```rust\r\n#![feature(return_position_impl_trait_in_trait)]\r\nuse std::{pin::Pin, future::Future};\r\n\r\npub trait Foo: Sync {\r\n    fn run<'a, 'b: 'a, T: Sync>(&'a self, _: &'b T) -> Pin<Box<dyn Future<Output = ()> + 'a + Send>>;\r\n}\r\n\r\npub trait FooExt: Foo {\r\n    // this function still has a RPITIT\r\n    fn run_via<'a, 'b: 'a, T: Sync>(&'a self, t: &'b T) -> impl Future<Output = ()> + 'a + Send {\r\n        async move {\r\n            // works!\r\n            self.run(t).await;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### `-Ztrait-solver=next` and polonius\r\n\r\nFirst code snippet leads to an ICE when using `-Ztrait-solver=next`, I am not sure whether it's worth filing an ICE report right now because this is a bug in the default solver. As for polonius, it doesn't change anything.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.71.0-nightly (dbba59457 2023-05-01)\r\nbinary: rustc\r\ncommit-hash: dbba594575ce75b1b57ccb1e4223b9909a28b1b8\r\ncommit-date: 2023-05-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111105/timeline", "performed_via_github_app": null, "state_reason": null}