{"url": "https://api.github.com/repos/rust-lang/rust/issues/97510", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97510/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97510/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97510/events", "html_url": "https://github.com/rust-lang/rust/issues/97510", "id": 1251796168, "node_id": "I_kwDOAAsO6M5KnOTI", "number": 97510, "title": "`x build src/tools/cargo` builds the compiler", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 2345380158, "node_id": "MDU6TGFiZWwyMzQ1MzgwMTU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-contributor-roadblock", "name": "A-contributor-roadblock", "color": "f7e101", "default": false, "description": "Area: Makes things more difficult for new contributors to rust itself"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-05-29T05:52:58Z", "updated_at": "2022-05-29T15:50:14Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Cargo builds on stable. Building the compiler seems wrong.\r\n\r\nChanging `ToolRustc` to `ToolBootstrap` avoids building the compiler, but gives an error when using `--stage 1` or `--stage 2` with cargo. I think in some sense that's right? Cargo should be the same regardless of the stage you use to build it.\r\n\r\n<details><summary>ToolRustc -> ToolBootstrap</summary>\r\n\r\n```diff\r\ndiff --git a/src/bootstrap/test.rs b/src/bootstrap/test.rs\r\nindex bc851568f89..a5cd6315b1a 100644\r\n--- a/src/bootstrap/test.rs\r\n+++ b/src/bootstrap/test.rs\r\n@@ -273,7 +273,7 @@ fn run(self, builder: &Builder<'_>) {\r\n         let mut cargo = tool::prepare_tool_cargo(\r\n             builder,\r\n             compiler,\r\n-            Mode::ToolRustc,\r\n+            Mode::ToolBootstrap,\r\n             self.host,\r\n             \"test\",\r\n             \"src/tools/cargo\",\r\ndiff --git a/src/bootstrap/tool.rs b/src/bootstrap/tool.rs\r\nindex 3b30e6de12a..d775e3b4e55 100644\r\n--- a/src/bootstrap/tool.rs\r\n+++ b/src/bootstrap/tool.rs\r\n@@ -609,7 +609,7 @@ fn run(self, builder: &Builder<'_>) -> PathBuf {\r\n                 compiler: self.compiler,\r\n                 target: self.target,\r\n                 tool: \"cargo\",\r\n-                mode: Mode::ToolRustc,\r\n+                mode: Mode::ToolBootstrap,\r\n                 path: \"src/tools/cargo\",\r\n                 is_optional_tool: false,\r\n                 source_type: SourceType::Submodule,\r\n@@ -624,7 +624,7 @@ fn run(self, builder: &Builder<'_>) -> PathBuf {\r\n                 compiler: self.compiler,\r\n                 target: self.target,\r\n                 tool: name,\r\n-                mode: Mode::ToolRustc,\r\n+                mode: Mode::ToolBootstrap,\r\n                 path,\r\n                 is_optional_tool: true,\r\n                 source_type: SourceType::Submodule,\r\n```\r\n\r\n</details>\r\n\r\ncc @Mark-Simulacrum: I wonder if we should make this change and give a warning when using `--stage` with cargo.\r\n\r\nI found this in https://github.com/rust-lang/rust/pull/97268.\r\n\r\n@rustbot label +A-rustbuild +A-contributor-roadblock", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97510/timeline", "performed_via_github_app": null, "state_reason": null}