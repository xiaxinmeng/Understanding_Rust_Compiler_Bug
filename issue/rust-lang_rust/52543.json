{"url": "https://api.github.com/repos/rust-lang/rust/issues/52543", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52543/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52543/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52543/events", "html_url": "https://github.com/rust-lang/rust/issues/52543", "id": 342808803, "node_id": "MDU6SXNzdWUzNDI4MDg4MDM=", "number": 52543, "title": "Sub-optimal performance of Iterator::max_by_key in some cases", "user": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-19T16:50:02Z", "updated_at": "2022-12-29T10:48:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@pftbest noted that this test case:\r\n\r\n```rust\r\n    #[bench]\r\n    fn bench_max_by_key(b: &mut Bencher) {\r\n        struct Data { k: i32, z: i8 }\r\n        let v: Vec<Data> = (0..10000).map(|i| Data { k: i, z: 48 }).collect();\r\n        b.iter(|| v.iter().max_by_key(|x| x.k));\r\n    }\r\n```\r\n\r\nis about 2\u20133 times slower than the same test run with this alternate implementation of `Iterator::max_by_key`:\r\n\r\n```rust\r\n    fn max_by_key2<B: Ord, F>(mut self, mut f: F) -> Option<Self::Item>\r\n    where F: FnMut(&Self::Item) -> B {\r\n        let mut max_el = self.next()?;\r\n        let mut max_val = f(&max_el);\r\n        for el in self {\r\n            let val = f(&el);\r\n            if val >= max_val {\r\n                max_val = val;\r\n                max_el = el;\r\n            }\r\n        }\r\n        Some(max_el)\r\n    }\r\n```\r\n\r\nHowever, if the field `z` is removed from `struct Data`, the libstd test case runs as fast as the alternate one.\r\n\r\n[Complete example on playground](https://play.rust-lang.org/?gist=72627da67b11c06cc57fbffb3631f028&version=nightly&mode=debug&edition=2018)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52543/timeline", "performed_via_github_app": null, "state_reason": null}