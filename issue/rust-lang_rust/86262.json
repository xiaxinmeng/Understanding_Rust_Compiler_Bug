{"url": "https://api.github.com/repos/rust-lang/rust/issues/86262", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86262/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86262/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86262/events", "html_url": "https://github.com/rust-lang/rust/issues/86262", "id": 919747903, "node_id": "MDU6SXNzdWU5MTk3NDc5MDM=", "number": 86262, "title": "`as *mut _` does not cause by-`mut` place evaluation, causing an error stating `DerefMut` is not implemented, but it is", "user": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-06-13T08:33:53Z", "updated_at": "2023-01-09T05:47:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur. \r\n-->\r\n\r\nGiven [the code](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=a5e32e0957c73d9a498615341161291a):\r\n\r\n```rust\r\n#![allow(unused_mut)]\r\n\r\nuse core::mem::ManuallyDrop;\r\n\r\npub struct RefWrapper<'a, T: ?Sized> {\r\n    slot: &'a mut T,\r\n}\r\n\r\nimpl<'a, T: ?Sized> RefWrapper<'a, T> {\r\n    pub fn into_raw(this: Self) -> *mut T {\r\n        let mut this = ManuallyDrop::new(this);\r\n        // let this = &mut *this;\r\n        this.slot as *mut T\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0596]: cannot borrow data in a dereference of `ManuallyDrop<RefWrapper<'_, T>>` as mutable\r\n  --> src/lib.rs:13:9\r\n   |\r\n13 |         this.slot as *mut T\r\n   |         ^^^^^^^^^ cannot borrow as mutable\r\n   |\r\n   = help: trait `DerefMut` is required to modify through a dereference, but it is not implemented for `ManuallyDrop<RefWrapper<'_, T>>`\r\n```\r\n\r\nIdeally, this should just work[^1]. Uncommenting the commented line to add an explicit mutable reborrow allows the code to work as intended. But even if it can't work, the error is clearly very unhelpful, as the issue isn't the lack of `DerefMut`, but that the compiler selected a shared `Deref` evaluation of the place.\r\n\r\n@rustbot modify labels +C-bug +D-incorrect\n\n[^1]: Importantly, just work *and produce a pointer with valid `mut` provenance*. It would be technically correct but misleading to allow `&mut T as *mut T` behind a shared reference to behave like `&mut T as *const T as *mut T`. The actually useful behavior is for the fact that `as *mut` is a by-`mut` use of the `this.slot` place to flow back into the selection of whether to evaluate the `this.slot` place by-ref (via `Deref`) or by-mut (via `DerefMut`) the same way other by-`mut` place usage does.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86262/timeline", "performed_via_github_app": null, "state_reason": null}