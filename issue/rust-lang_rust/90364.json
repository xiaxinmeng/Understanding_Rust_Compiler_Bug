{"url": "https://api.github.com/repos/rust-lang/rust/issues/90364", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90364/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90364/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90364/events", "html_url": "https://github.com/rust-lang/rust/issues/90364", "id": 1038053597, "node_id": "I_kwDOAAsO6M4933Dd", "number": 90364, "title": "generic_const_exprs ICE with `const N: T`", "user": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-28T03:52:16Z", "updated_at": "2021-10-30T16:22:50Z", "closed_at": "2021-10-30T16:22:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n ! [ feature ( generic_const_exprs ) ]\r\npub struct Grid < T , const W : usize , const H :\r\nT > where [ ( ) ; W * H ] : Sized , { array : [ T ; W * H ] , } impl < T , const W : usize , const H : usize > Default for Grid < T , W , H > where [ ( ) ; W * H ] : Sized , T : Default + Copy , { fn default ( ) -> Self { Self { array : [ T :: default ( ) ; W * H ] ,\r\n}\r\n}\r\n}\r\nfn main ( ) {\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0-nightly (91b931926 2021-10-23)\r\nbinary: rustc\r\ncommit-hash: 91b931926fd49fc97d1e39f2b8206abf1d77ce7d\r\ncommit-date: 2021-10-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n$ rustc --crate-type staticlib -C debuginfo=2 -C opt-level=3 -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes mutant.rs\r\nerror[E0770]: the type of const parameters must not depend on other generic parameters\r\n --> mutant.rs:3:1\r\n  |\r\n3 | T > where [ ( ) ; W * H ] : Sized , { array : [ T ; W * H ] , } impl < T , const W : usize , const H : usize > Default for Grid < T , W , H > where [ ( ) ; W * H ] : Sized , T : Defaul...\r\n  | ^ the type must not depend on the parameter `T`\r\n\r\nwarning: the feature `generic_const_exprs` is incomplete and may not be safe to use and/or cause compiler crashes\r\n --> mutant.rs:1:17\r\n  |\r\n1 | # ! [ feature ( generic_const_exprs ) ]\r\n  |                 ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(incomplete_features)]` on by default\r\n  = note: see issue #76560 <https://github.com/rust-lang/rust/issues/76560> for more information\r\n\r\nthread 'rustc' panicked at 'assertion failed: !arg.has_type_flags(!allowed_flags)', compiler/rustc_typeck/src/collect/type_of.rs:296:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.0-nightly (91b931926 2021-10-23) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z mir-opt-level=3 -Z new-llvm-pass-manager=yes -Z unsound-mir-opts=yes -Z polonius=yes -Z polymorphize=yes -C debuginfo=2 -C opt-level=3 --crate-type staticlib\r\n\r\nquery stack during panic:\r\n#0 [default_anon_const_substs] computing the default generic arguments for `Grid::{constant#0}`\r\n#1 [param_env] computing normalized predicates of `Grid`\r\nend of query stack\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\nFor more information about this error, try `rustc --explain E0770`.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: !arg.has_type_flags(!allowed_flags)', compiler/rustc_typeck/src/collect/type_of.rs:296:9\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/91b931926fd49fc97d1e39f2b8206abf1d77ce7d/library/std/src/panicking.rs:495:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/91b931926fd49fc97d1e39f2b8206abf1d77ce7d/library/core/src/panicking.rs:107:14\r\n   2: core::panicking::panic\r\n             at /rustc/91b931926fd49fc97d1e39f2b8206abf1d77ce7d/library/core/src/panicking.rs:50:5\r\n   3: rustc_typeck::collect::type_of::default_anon_const_substs\r\n   4: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>>\r\n   5: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::default_anon_const_substs, rustc_query_impl::plumbing::QueryCtxt>\r\n   6: <rustc_middle::ty::consts::kind::Unevaluated<()>>::substs\r\n   7: <rustc_middle::ty::Predicate as rustc_middle::ty::fold::TypeFoldable>::super_fold_with::<rustc_trait_selection::traits::project::AssocTypeNormalizer>\r\n   8: <rustc_infer::infer::InferCtxtBuilder>::enter::<core::result::Result<alloc::vec::Vec<rustc_middle::ty::Predicate>, rustc_errors::ErrorReported>, rustc_trait_selection::traits::do_normalize_predicates::{closure#0}>\r\n   9: rustc_trait_selection::traits::normalize_param_env_or_error\r\n  10: rustc_ty_utils::ty::param_env\r\n  11: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::param_env\r\n  12: rustc_typeck::check::wfcheck::for_id\r\n  13: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  14: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, ()>>\r\n  15: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_item_well_formed\r\n  16: rustc_data_structures::sync::par_for_each_in::<&alloc::vec::Vec<core::option::Option<rustc_hir::hir::OwnerInfo>>, <rustc_middle::hir::map::Map>::par_visit_all_item_likes<rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor>::{closure#0}>\r\n  17: <rustc_session::session::Session>::track_errors::<rustc_typeck::check_crate::{closure#5}, ()>\r\n  18: rustc_typeck::check_crate\r\n  19: rustc_interface::passes::analysis\r\n  20: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  21: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  22: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorReported>>\r\n  23: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  24: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}>\r\n  25: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90364/timeline", "performed_via_github_app": null, "state_reason": "completed"}