{"url": "https://api.github.com/repos/rust-lang/rust/issues/81092", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81092/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81092/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81092/events", "html_url": "https://github.com/rust-lang/rust/issues/81092", "id": 787526446, "node_id": "MDU6SXNzdWU3ODc1MjY0NDY=", "number": 81092, "title": "asm! needs a better way of specifying clobbers", "user": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 2046313052, "node_id": "MDU6TGFiZWwyMDQ2MzEzMDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-asm", "name": "F-asm", "color": "f9c0cc", "default": false, "description": "`#![feature(asm)]` (not `llvm_asm`)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2021-01-16T18:32:05Z", "updated_at": "2021-08-15T01:24:50Z", "closed_at": "2021-08-15T01:24:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Clobbered registers are currently represented as [an output to `_`](https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#clobbered-registers). However there are several limitations to this approach:\r\n- It is impossible for registers that are not supported as inputs/outputs (e.g. x87 float registers, MMX registers, RISC-V vector registers, etc) to be marked as clobbered.\r\n- ~~The set of registers available for clobbering is limited by the currently enabled target features. For example, it is desirable to mark SSE registers as clobbered even if SSE instructions are disabled (e.g. for a kernel). Having to wrap everything in `#[cfg(target_feature = \"sse\")]` is very inconvenient.~~ Fixed by #83841\r\n- Lack of forwards compatibility with new registers that could be introduced with future ISA extensions. Consider the AVX-512 mark registers (`k0`-`k7`): if an `asm!` block calls a Rust function, that function may write to the mask registers. However the mask registers may not have been clobbered if the author of the `asm!` was not aware of AVX-512 when it was written.\r\n\r\nSome potential solutions include:\r\n- ~~Adding a separate `clobber(\"reg\")` operand which is similar to the existing ones but doesn't require that the target feature for the register be enabled.~~ Fixed by #83841\r\n- Adding some sort of wildcard clobber. For example `clobber(\"all\")` would clobber all registers known to the compiler. This would be incompatible with register class specifiers: you would need to explicitly specify registers for all input/output operands.\r\n- Adding ABI-based clobbers such as `clobber(\"C\")` which clobbers all registers that would be clobbered by a call to an `extern \"C\" fn`.\r\n\r\nIt is not yet clear what the best solution is here. Discussion is welcome.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81092/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81092/timeline", "performed_via_github_app": null, "state_reason": "completed"}