{"url": "https://api.github.com/repos/rust-lang/rust/issues/46644", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46644/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46644/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46644/events", "html_url": "https://github.com/rust-lang/rust/issues/46644", "id": 280848631, "node_id": "MDU6SXNzdWUyODA4NDg2MzE=", "number": 46644, "title": "Compiler incorrectly reports function return type declaration as source of inner type mismatch with conservative_impl_trait", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-10T21:51:16Z", "updated_at": "2019-10-15T18:43:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given a function specified as returning a composite type that incorrectly returns an object with an inner type mismatch, the compiler reports the error as being in the function return type declaration rather than at the point the incorrect item is returned.\r\n\r\nA sample git repo can be found here: https://git.neosmart.net/mqudsi/futuretest/src/rust-46644\r\n\r\nThe code in question:\r\n\r\n```rust\r\nfn create_future() -> impl Future<Item=(), Error=()> {\r\n    return future::ok(Ok(()));\r\n}\r\n```\r\n\r\nThe compiler returns the following;\r\n\r\n```rust\r\n   Compiling futuretest v0.1.0 (file:///mnt/d/GIT/futuretest)\r\nerror[E0271]: type mismatch resolving `<futures::FutureResult<std::result::Result<(), _>, ()> as futures::Future>::Item == ()`\r\n  --> src/main.rs:17:23\r\n   |\r\n17 | fn create_future() -> impl Future<Item=(), Error=()> {\r\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::result::Result`, found ()\r\n   |\r\n   = note: expected type `std::result::Result<(), _>`\r\n              found type `()`\r\n   = note: the return type of a function must have a statically known size\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `futuretest`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46644/timeline", "performed_via_github_app": null, "state_reason": null}