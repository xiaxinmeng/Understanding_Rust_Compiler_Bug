{"url": "https://api.github.com/repos/rust-lang/rust/issues/70564", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70564/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70564/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70564/events", "html_url": "https://github.com/rust-lang/rust/issues/70564", "id": 590250994, "node_id": "MDU6SXNzdWU1OTAyNTA5OTQ=", "number": 70564, "title": "Functional record update: private fields should not throw errors if not explicitly used in literals", "user": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-03-30T12:28:21Z", "updated_at": "2023-02-18T20:15:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nmod module {\r\n    #[derive(Default)]\r\n    pub struct S {\r\n        pub public_field: u32,\r\n        _private_field: u32,\r\n    }\r\n}\r\n\r\nuse module::S;\r\n\r\npub fn f() -> S {\r\n    S {\r\n        public_field: 42,\r\n        ..S::default()\r\n    }\r\n}\r\n```\r\n\r\nI expected to see this happen: code compiles successfully.\r\n\r\nInstead, this happened: rustc throws an error\r\n```\r\nerror[E0451]: field `_private_field` of struct `module::S` is private\r\n\r\n  --> <source>:14:11\r\n\r\n   |\r\n\r\n14 |         ..S::default()\r\n\r\n   |           ^^^^^^^^^^^^ field `_private_field` is private\r\n```\r\n\r\nAs a user, I field this confusing, because I'm not trying to access or set the private field explicitly anywhere in the literal.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nApplies to all known rustc versions.\r\n\r\nI understand why this happens in principle, if the literal is desugared literally (no pun intended) to:\r\n\r\n```rust\r\nlet s_rest = S::default();\r\nlet s = S {\r\n  public_field: 42,\r\n  _private_field: s_rest.private_field,\r\n};\r\n```\r\n\r\nHowever, it seems that this code could be equally expanded to:\r\n\r\n```rust\r\nlet mut s = S::default();\r\ns.public_field = 42;\r\nlet s = s;\r\n```\r\n\r\nThis way an immutable literal could be used with many more kinds of structures without users manually resorting to the temporarily-mutable variable as in the 2nd example.\r\n\r\nDo I miss some other difference between the two that would break some existing usecases if the implementation is changed?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70564/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70564/timeline", "performed_via_github_app": null, "state_reason": null}