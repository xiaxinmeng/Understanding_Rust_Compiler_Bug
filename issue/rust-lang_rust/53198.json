{"url": "https://api.github.com/repos/rust-lang/rust/issues/53198", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53198/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53198/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53198/events", "html_url": "https://github.com/rust-lang/rust/issues/53198", "id": 348798045, "node_id": "MDU6SXNzdWUzNDg3OTgwNDU=", "number": 53198, "title": "[nll] move 2-phase borrows into MIR lowering", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}], "state": "closed", "locked": false, "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2018-08-08T16:21:28Z", "updated_at": "2019-01-04T20:34:13Z", "closed_at": "2019-01-04T20:34:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@RalfJung and I were talking and we realized that -- with a bit of work -- we could make 2-phase borrows be something fully handled during MIR lowering. This is nice because it means that the rest of the model (e.g., the Unsafe Code Guidelines aliasing model) doesn't have to be aware of it.\r\n\r\nThere are basically two places we use 2PB today. Let me break down at a high-level how to handle each of them.\r\n\r\n### Method calls, operators, etc\r\n\r\nThe first place is for a case like `self.push(self.len())`. Today, we lower to the `push` call to:\r\n\r\n```\r\nTMP0 = &mut2 self\r\nTMP1 = lower<self.len()>\r\npush(TMP0, TMP1)\r\n```\r\n\r\nThe borrow checker finds the use of TMP0 on the last line and considers that the *activation point*. In particular, for each 2PB, there must be an exactly one use which is dominated by the borrow and which postdominates the borrow. This use is the *activation point*.\r\n\r\nThe idea would be to change to instead lower as:\r\n\r\n```\r\nTMP0 = &mut self\r\nTMP1 = &*TMP0;\r\nTMP2 = lower<self.len() where self=*TMP1>\r\npush(TMP0, TMP2)\r\n```\r\n\r\nHere, we borrow `self` mutably as normal but then *reborrow* it to create a shared reference `TMP1`. Then, when we lower the arguments, any reference to `self` is rewritten so that it does not refer to `self` but rather `*TMP1` (which has the same type as `self`). Then the normal NLL mechanisms come into play.\r\n\r\nWe'd obviously have to tweak our error messages here so that `*TMP1` is displayed as \"self\" to the end-user.\r\n\r\n**The key observation here is that we can statically see all references to `self` while lowering the arguments and rewrite them to reference `*TMP1` instead.** (In fact, we already use a mechanism like this when lowering match guards, see below.)\r\n\r\n### Matches\r\n\r\nWe also rely on 2PB to handle variables in match pattern guards. The basic idea of how we lower something like this:\r\n\r\n```rust\r\nmatch foo {\r\n  Some(ref mut x) if G => ... \r\n}\r\n```\r\n\r\nis that we introduce various artificial borrows. The first is a borrow of the place being matched (`foo`) -- that borrow begins when the match begins and ends upon entering some arm. The second is for bindings that are accessed during match arms. These are each implicitly mapped to a dereference of a shared borrow. So (today!) you wind up with something like:\r\n\r\n```\r\n// Start of match\r\nB0 {\r\n  TMP0 = &foo // the match borrow\r\n  TMP1 = DISCRIMINANT(foo)\r\n  if TMP1 == Some { goto B1 } else { B3 }\r\n}\r\n\r\n// We found `foo` is a `Some`\r\nB1 {\r\n  TMP2 = &mut2 foo.as<Some>.0\r\n  TMP3 = &TMP2\r\n  TMP4 = <lower G where x=*TMP3>\r\n  if TMP4 is true { goto B2 }\r\n}\r\n\r\n// Corresponds to the `Some` arm:\r\nB2 {\r\n  DROP(TMP0) // borrow of `foo` ends as we enter the arm\r\n  <lower arm body>\r\n}\r\n\r\nB3 { ... }\r\n```\r\n\r\nAgain, this is what we do today. For this to work, we rely on `TMP2 = &mut2 foo.as<Some>.0` being a 2-phase borrow that never gets activated, since otherwise it would overlap with the `TMP0` borrow that is definitely still in scope.\r\n\r\nInstead of that, we will create a **shared** borrow and then use some kind of case from `&&T` to `&&mut T`:\r\n\r\n```\r\nB1 {\r\n  TMP2 = &foo.as<Some>.0\r\n  TMP3 = &TMP2\r\n  TMP4 = TMP3 as &&mut T\r\n  TMP5 = <lower G where x=*TMP4>\r\n  if TMP5 is true { goto B2 }\r\n}\r\n```\r\n\r\nThis cast is provably safe (@RalfJung has done it!), so there is no unsafe code or anything else involved here.\r\n\r\ncc @pnkfelix @arielb1 \r\n\r\nUPDATE: Lightly edited for clarity.", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53198/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 2, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53198/timeline", "performed_via_github_app": null, "state_reason": "completed"}