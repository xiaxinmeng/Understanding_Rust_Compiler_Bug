{"url": "https://api.github.com/repos/rust-lang/rust/issues/90289", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90289/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90289/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90289/events", "html_url": "https://github.com/rust-lang/rust/issues/90289", "id": 1035717355, "node_id": "I_kwDOAAsO6M49u8rr", "number": 90289, "title": "Detect heterogeneous generic recursion usage pre-monomorphization", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "yanok", "id": 468850, "node_id": "MDQ6VXNlcjQ2ODg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/468850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanok", "html_url": "https://github.com/yanok", "followers_url": "https://api.github.com/users/yanok/followers", "following_url": "https://api.github.com/users/yanok/following{/other_user}", "gists_url": "https://api.github.com/users/yanok/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanok/subscriptions", "organizations_url": "https://api.github.com/users/yanok/orgs", "repos_url": "https://api.github.com/users/yanok/repos", "events_url": "https://api.github.com/users/yanok/events{/privacy}", "received_events_url": "https://api.github.com/users/yanok/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yanok", "id": 468850, "node_id": "MDQ6VXNlcjQ2ODg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/468850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanok", "html_url": "https://github.com/yanok", "followers_url": "https://api.github.com/users/yanok/followers", "following_url": "https://api.github.com/users/yanok/following{/other_user}", "gists_url": "https://api.github.com/users/yanok/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanok/subscriptions", "organizations_url": "https://api.github.com/users/yanok/orgs", "repos_url": "https://api.github.com/users/yanok/repos", "events_url": "https://api.github.com/users/yanok/events{/privacy}", "received_events_url": "https://api.github.com/users/yanok/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2021-10-26T01:14:07Z", "updated_at": "2021-10-26T14:14:24Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\n(Request inspired by https://github.com/rust-lang/rust/issues/90063#issuecomment-950127053, after I wrote compiles-but-never-works code in https://rust-lang.github.io/rfcs/3058-try-trait-v2.html#the-opscontrolflow-type )\r\n\r\nGiven the following (minimal example) code: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=584d7b447db0f7890d2f94c3b945640e\r\n\r\n```rust\r\npub fn foo<T>(x: T) {\r\n    if rand() {\r\n        foo(&x);\r\n    }\r\n}\r\n```\r\n \r\nThe current output is: *no errors nor warnings*\r\n\r\nHowever, if it's ever called, it'll give an error like\r\n```\r\nerror: reached the recursion limit while instantiating `foo::<&&&&&&&&&&&&&&&&&&&&&&&&&&...&&&&&&&&&&&&&&&&&&&&&&&&&&&&i32>`\r\n```\r\n\r\nIt would be nice for the compiler to detect, pre-monomorphization, that this will never actually work because any possible monomorphization will end up requiring instantiating another additional monomorphization.\r\n\r\n(Not catching all cases would be fine -- I suspect indirect recursion would be particularly annoying to detect well.  Maybe a deny-by-default lint for this?  It'd technically be a breaking change to make it a hard error, and I don't think it really *needs* to be hard error.  The lint is enough.)\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"yanok\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90289/timeline", "performed_via_github_app": null, "state_reason": null}