{"url": "https://api.github.com/repos/rust-lang/rust/issues/13721", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13721/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13721/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13721/events", "html_url": "https://github.com/rust-lang/rust/issues/13721", "id": 32115902, "node_id": "MDU6SXNzdWUzMjExNTkwMg==", "number": 13721, "title": "Crates should allow private impl of external traits for external structs ", "user": {"login": "alanfalloon", "id": 53138, "node_id": "MDQ6VXNlcjUzMTM4", "avatar_url": "https://avatars.githubusercontent.com/u/53138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanfalloon", "html_url": "https://github.com/alanfalloon", "followers_url": "https://api.github.com/users/alanfalloon/followers", "following_url": "https://api.github.com/users/alanfalloon/following{/other_user}", "gists_url": "https://api.github.com/users/alanfalloon/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanfalloon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanfalloon/subscriptions", "organizations_url": "https://api.github.com/users/alanfalloon/orgs", "repos_url": "https://api.github.com/users/alanfalloon/repos", "events_url": "https://api.github.com/users/alanfalloon/events{/privacy}", "received_events_url": "https://api.github.com/users/alanfalloon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-04-24T02:31:46Z", "updated_at": "2014-11-30T01:59:13Z", "closed_at": "2014-11-30T01:59:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "As you know, you can't provide an impl for a trait if neither the type nor the trait are defined in the current crate, you get:\n\n```\nerror: cannot provide an extension implementation where both trait and type are not defined in this crate\n```\n\nFor public implementations, this makes perfect sense, there are issues with collisions between implementations and sheer surprise. However, for a private implementation of the trait, this is a real hindrance.\n\nConsider the case of `std::path::Path` not implementing `std::fmt::Show`. The rationale for closing #13009 is perfectly valid: we don't want people treating paths as strings. However, by refusing to add an implementation of `Show`, you have made that decision for all programs everywhere. In my case, I had a large struct with numerous `Path` elements that I wanted to print for debugging, but `#[deriving(Show)]` won't work because `Path` has no `Show` impl, and now I'm stuck either implementing it tediously from scratch, or switching to `str` for my path names.\n\nThe perfect compromise would have been to allow my crate to define a private `Show` impl for `Path`. There is precedent for this in other languages, [go allows interfaces to implemented anywhere](http://golang.org/doc/effective_go.html#interface_methods), for example.\n", "closed_by": {"login": "rust-highfive", "id": 7378925, "node_id": "MDQ6VXNlcjczNzg5MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7378925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-highfive", "html_url": "https://github.com/rust-highfive", "followers_url": "https://api.github.com/users/rust-highfive/followers", "following_url": "https://api.github.com/users/rust-highfive/following{/other_user}", "gists_url": "https://api.github.com/users/rust-highfive/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-highfive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-highfive/subscriptions", "organizations_url": "https://api.github.com/users/rust-highfive/orgs", "repos_url": "https://api.github.com/users/rust-highfive/repos", "events_url": "https://api.github.com/users/rust-highfive/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-highfive/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13721/timeline", "performed_via_github_app": null, "state_reason": "completed"}