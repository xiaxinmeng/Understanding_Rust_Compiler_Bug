{"url": "https://api.github.com/repos/rust-lang/rust/issues/45599", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45599/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45599/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45599/events", "html_url": "https://github.com/rust-lang/rust/issues/45599", "id": 269350604, "node_id": "MDU6SXNzdWUyNjkzNTA2MDQ=", "number": 45599, "title": "cfg(test) is not set during doctests", "user": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1118559391, "node_id": "MDU6TGFiZWwxMTE4NTU5Mzkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-doctests", "name": "A-doctests", "color": "f7e101", "default": false, "description": "Area: Documentation tests, run by rustdoc"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-10-28T21:15:22Z", "updated_at": "2021-07-02T10:28:01Z", "closed_at": "2021-07-02T10:28:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "_From @sunjay on October 27, 2017 21:23_ (Moved from rust-lang/cargo)\r\n\r\nIt might be that I'm just not understanding how something works, so please let me know if that is the case!\r\n\r\nSince doctests are tests, I expect that `#[cfg(test)]` would work and `cfg!(test)` would return true. This works during unit tests, but during doctests, both assumptions are wrong.\r\n\r\nThe reason I need this is because I have some code (not in doctests) that manages windows (like GUI windows) that I need to **not** run during any tests. I think this is a cargo problem because the attributes work consistently, I believe it's just cargo that doesn't set the attribute. If there is a workaround I can use, I would really appreciate it. :) (EDIT: My workaround is at the bottom.)\r\n\r\nHere's some code that reproduces the problem: (Run with `cargo test`)\r\n\r\n```\r\n#[test]\r\nfn cfg_test() {\r\n    // This will pass, as it should\r\n    assert!(cfg!(test))\r\n}\r\n\r\n/// ```rust\r\n/// # fn main() {\r\n/// // This will fail, even though we *are* in a test\r\n/// assert!(cfg!(test), \"cfg!(test) was false\");\r\n/// # }\r\n/// ```\r\npub fn cfg_test2() {}\r\n\r\n/// ```rust\r\n/// # fn main() {\r\n/// #[cfg(test)]\r\n/// fn foo() {}\r\n/// #[cfg(not(test))]\r\n/// fn foo() {panic!(\"cfg(test) was not set\")}\r\n/// foo();\r\n/// # }\r\n/// ```\r\npub fn cfg_test3() {}\r\n```\r\n\r\nThis produces the following output:\r\n\r\n```\r\n$ cargo test\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.0 secs\r\n     Running target/debug/deps/foo-3890a4e1c4133892\r\n\r\nrunning 1 test\r\ntest cfg_test ... ok\r\n\r\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\r\n\r\n   Doc-tests foo\r\n\r\nrunning 2 tests\r\ntest src/lib.rs - cfg_test3 (line 15) ... FAILED\r\ntest src/lib.rs - cfg_test2 (line 7) ... FAILED\r\n\r\nfailures:\r\n\r\n---- src/lib.rs - cfg_test3 (line 15) stdout ----\r\n\tthread 'rustc' panicked at 'test executable failed:\r\n\r\nthread 'main' panicked at 'cfg(test) was not set', src/lib.rs:6:10\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\n', /checkout/src/librustdoc/test.rs:315:16\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\n---- src/lib.rs - cfg_test2 (line 7) stdout ----\r\n\tthread 'rustc' panicked at 'test executable failed:\r\n\r\nthread 'main' panicked at 'cfg!(test) was false', src/lib.rs:3:0\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n\r\n', /checkout/src/librustdoc/test.rs:315:16\r\n\r\n\r\nfailures:\r\n    src/lib.rs - cfg_test2 (line 7)\r\n    src/lib.rs - cfg_test3 (line 15)\r\n\r\ntest result: FAILED. 0 passed; 2 failed; 0 ignored; 0 measured; 0 filtered out\r\n\r\nerror: test failed, to rerun pass '--doc'\r\n```\r\n\r\nIn both cases, since `cfg(test)` is not set, the test fails.\r\n\r\n----\r\n\r\nThis is a temporary workaround you can use if you are in need of this functionality:\r\n\r\nIn Cargo.toml, add the following:\r\n```\r\n[features]\r\n# The reason we do this is because doctests don't get cfg(test)\r\n# See: https://github.com/rust-lang/cargo/issues/4669\r\ntest = []\r\n```\r\n\r\nThen run with `cargo test --features \"test\"`.\r\n\r\nThis adds a feature called \"test\" to tests when they run. This works for both unit tests **and** doctests.\r\n\r\nThen, to test for it, use the following:\r\n```rust\r\n#[cfg(any(feature = \"test\", test))]\r\n```\r\nYou could also just go with the following, since the feature is set for all kinds of tests.\r\n```rust\r\n#[cfg(feature = \"test\")]\r\n```\r\n\r\n_Copied from original issue: rust-lang/cargo#4669_", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45599/reactions", "total_count": 11, "+1": 11, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45599/timeline", "performed_via_github_app": null, "state_reason": "completed"}