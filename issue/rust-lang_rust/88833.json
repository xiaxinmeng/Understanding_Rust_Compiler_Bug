{"url": "https://api.github.com/repos/rust-lang/rust/issues/88833", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88833/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88833/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88833/events", "html_url": "https://github.com/rust-lang/rust/issues/88833", "id": 993561689, "node_id": "MDU6SXNzdWU5OTM1NjE2ODk=", "number": 88833, "title": "Suggest a deref when calling `<T as From<&X>::from` when `impl From<X> for T` exists", "user": {"login": "glittershark", "id": 1481027, "node_id": "MDQ6VXNlcjE0ODEwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1481027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glittershark", "html_url": "https://github.com/glittershark", "followers_url": "https://api.github.com/users/glittershark/followers", "following_url": "https://api.github.com/users/glittershark/following{/other_user}", "gists_url": "https://api.github.com/users/glittershark/gists{/gist_id}", "starred_url": "https://api.github.com/users/glittershark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glittershark/subscriptions", "organizations_url": "https://api.github.com/users/glittershark/orgs", "repos_url": "https://api.github.com/users/glittershark/repos", "events_url": "https://api.github.com/users/glittershark/events{/privacy}", "received_events_url": "https://api.github.com/users/glittershark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-10T20:10:34Z", "updated_at": "2021-09-10T20:10:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nstruct T(bool);\r\nimpl From<bool> for T {\r\n    fn from(val: bool) -> Self {\r\n        Self(val)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let x = true;\r\n    let y = &x;\r\n    let x = T::from(y);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0277]: the trait bound `T: From<&bool>` is not satisfied\r\n   --> src/main.rs:11:13\r\n    |\r\n11  |     let x = T::from(y);\r\n    |             ^^^^^^^ the trait `From<&bool>` is not implemented for `T`\r\n    |\r\n    = help: the following implementations were found:\r\n              <T as From<bool>>\r\nnote: required by `from`\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nI was thinking we could do the thing we do for [function calls](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=8318d2dfe1ca544341645181baeb3364) and suggest a deref:\r\n\r\n```\r\nerror[E0277]: the trait bound `T: From<&bool>` is not satisfied\r\n   --> src/main.rs:11:13\r\n    |\r\n11  |     let x = T::from(y);\r\n    |             ^^^^^^^ the trait `From<&bool>` is not implemented for `T`\r\n    |\r\n    = help: there is an implementation of `From<bool>` for `T`\r\n    = help: consider dereferencing the borrow: `*y`\r\n\r\n```\r\n\r\nor, in the case of a direct call (`T::from(&true)`) suggest removing the borrow:\r\n\r\n```\r\nerror[E0277]: the trait bound `T: From<&bool>` is not satisfied\r\n   --> src/main.rs:11:13\r\n    |\r\n11  |     let x = T::from(&true);\r\n    |             ^^^^^^^ the trait `From<&bool>` is not implemented for `T`\r\n    |\r\n    = help: there is an implementation of `From<bool>` for `T`\r\n    = help: consider removing the borrow: `true`\r\n```\r\n\r\n\r\nThis is especially helpful when, like in the real-world case where I ran into this, `T` has a *lot* of `From` impls - enough that it'd turn into the \"and <x> others\" and not necessarily even show the relevant impl for the deref'ed version of the argument.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88833/timeline", "performed_via_github_app": null, "state_reason": null}