{"url": "https://api.github.com/repos/rust-lang/rust/issues/94182", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94182/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94182/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94182/events", "html_url": "https://github.com/rust-lang/rust/issues/94182", "id": 1145014384, "node_id": "I_kwDOAAsO6M5EP4hw", "number": 94182, "title": "crash when crate is not `used` but referred inside a module", "user": {"login": "bunnie", "id": 1168375, "node_id": "MDQ6VXNlcjExNjgzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1168375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bunnie", "html_url": "https://github.com/bunnie", "followers_url": "https://api.github.com/users/bunnie/followers", "following_url": "https://api.github.com/users/bunnie/following{/other_user}", "gists_url": "https://api.github.com/users/bunnie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bunnie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bunnie/subscriptions", "organizations_url": "https://api.github.com/users/bunnie/orgs", "repos_url": "https://api.github.com/users/bunnie/repos", "events_url": "https://api.github.com/users/bunnie/events{/privacy}", "received_events_url": "https://api.github.com/users/bunnie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-02-20T13:04:53Z", "updated_at": "2023-02-26T12:45:23Z", "closed_at": "2023-02-26T10:57:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nThe setup to this is a bit complicated, but I will try to describe it as compactly as possible. We have a multi-crate workspace. In this example, the crate in question is called `dns`.  It has a dual `lib`/`bin` construction, e.g. it has interfaces callable by other crates, but also its own `main`. There is a module called `api` that defines common structures between the lib/bin halves.\r\n\r\nThe bug happened only when inside the `lib` half of the crate, we split the  the `lib` into two conditionally compiled sub-modules. This is the full `lib.rs` that causes the problem:\r\n\r\n```Rust\r\npub mod api;\r\nuse api::*;\r\n\r\n#[cfg(any(target_os = \"none\", target_os = \"xous\"))]\r\nmod hw;\r\n#[cfg(any(target_os = \"none\", target_os = \"xous\"))]\r\npub use hw::*;\r\n\r\n#[cfg(not(any(target_os = \"none\", target_os = \"xous\")))]\r\nmod hosted;\r\n#[cfg(not(any(target_os = \"none\", target_os = \"xous\")))]\r\npub use hosted::*;\r\n```\r\nIt was originally just one file, with the `api` file included, plus the contents of `mod hw` directly inside the `lib.rs` (so basically, the goal was to make the library interface different based upon the target machine we were going for; thus, the common `api` crate, but either a `hw` or a `hosted` file for the contents of `lib`).\r\n\r\nThe compiler crash happens inside `shellchat`, which is another crate in the workspace that pulls in the `dns` crate. \r\n\r\nThe thing that triggers the crash is that we don't do this:\r\n\r\n```Rust\r\nuse dns::Dns;\r\n```\r\nOr have any `use` statement. We were referring to all the `dns` structures by their full path name (e.g., `dns::Dns::new()`, `dns::Dns::lookup()`, etc.). We didn't `use` it because it's just a couple of lines where we use the DNS crate and `dns` is a short enough name that we never got around to `use` the `dns` crate into the name space.\r\n\r\n*only after we moved the `lib` into subfiles* did the crash happen.\r\n\r\nAnd, the fix to the crash is to simply add `use dns::Dns` to the top of the `shellchat` file where we were calling DNS.\r\n\r\nAnyways, it's not a big deal -- the workaround is painless and probably most people in practice will `use` a module when they start calling functions in it, we just preferred to use fully-specified names in this one case. From the looks of the bug it looks like the compiler basically expected that `use` statement and was looking for a path that didn't exist because it wasn't there.\r\n\r\nNot a show stopper -- mainly just reporting it because the error message requested the bug report. Thanks for all the hard work!\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.1 (db9d1b20b 2022-01-20)\r\nbinary: rustc\r\ncommit-hash: db9d1b20bba1968c1ec1fc49616d4742c1725b4b\r\ncommit-date: 2022-01-20\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.58.1\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\nBacktrace inside the click-expand below:\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n  Compiling shellchat v0.1.0 (F:\\largework\\rust-win\\code\\xous-core\\services\\shellchat)\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler\\rustc_metadata\\src\\rmeta\\def_path_hash_map.rs:18:85\r\nstack backtrace:\r\n   0:     0x7ffed11d9e1f - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h157fa6bf1896703a\r\n   1:     0x7ffed120561a - core::fmt::write::hd933995fa5a3c525\r\n   2:     0x7ffed11cb718 - <std::io::IoSlice as core::fmt::Debug>::fmt::hb22a6129461aed2d\r\n   3:     0x7ffed11dd736 - std::panicking::take_hook::he9e5ebb516ae9e93\r\n   4:     0x7ffed11dd115 - std::panicking::take_hook::he9e5ebb516ae9e93\r\n   5:     0x7ffe6432d99e - <rustc_lint[7617183523d96aea]::BuiltinCombinedPreExpansionLintPass as rustc_lint[7617183523d96aea]::passes::EarlyLintPass>::check_impl_item\r\n   6:     0x7ffed11de049 - std::panicking::rust_panic_with_hook::hdfb9f2b0857b79cb\r\n   7:     0x7ffed11ddabf - rust_begin_unwind\r\n   8:     0x7ffed11da747 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h157fa6bf1896703a\r\n   9:     0x7ffed11dda49 - rust_begin_unwind\r\n  10:     0x7ffed1239a40 - core::panicking::panic_fmt::h0e1c9b751cd7872a\r\n  11:     0x7ffed123998c - core::panicking::panic::hc887acba2270eb88\r\n  12:     0x7ffe67ef933f - <rustc_metadata[a553eabe4933b390]::creader::CStore as rustc_session[7e55dc9839d3606e]::cstore::CrateStore>::def_path_hash_to_def_id\r\n  13:     0x7ffe68782dd7 - <rustc_middle[ff7e0ef075a5e190]::ty::context::TyCtxt>::def_path_hash_to_def_id\r\n  14:     0x7ffe6887662e - <rustc_query_system[ea294a3d7add80ba]::dep_graph::dep_node::DepNode<rustc_middle[ff7e0ef075a5e190]::dep_graph::dep_node::DepKind> as rustc_middle[ff7e0ef075a5e190]::dep_graph::dep_node::DepNodeExt>::extract_def_id\r\n  15:     0x7ffe67af0d53 - rustc_query_impl[45896b7db3cc92f1]::query_callbacks::adt_def\r\n  16:     0x7ffe68767af3 - <rustc_middle[ff7e0ef075a5e190]::ty::context::TyCtxt as rustc_query_system[ea294a3d7add80ba]::dep_graph::DepContext>::try_force_from_dep_node\r\n  17:     0x7ffe67b235ab - rustc_query_impl[45896b7db3cc92f1]::query_callbacks::diagnostic_hir_wf_check\r\n  18:     0x7ffe67b23587 - rustc_query_impl[45896b7db3cc92f1]::query_callbacks::diagnostic_hir_wf_check\r\n  19:     0x7ffe67b23587 - rustc_query_impl[45896b7db3cc92f1]::query_callbacks::diagnostic_hir_wf_check\r\n  20:     0x7ffe67b23587 - rustc_query_impl[45896b7db3cc92f1]::query_callbacks::diagnostic_hir_wf_check\r\n  21:     0x7ffe67b23587 - rustc_query_impl[45896b7db3cc92f1]::query_callbacks::diagnostic_hir_wf_check\r\n  22:     0x7ffe67afb8bd - rustc_query_impl[45896b7db3cc92f1]::query_callbacks::diagnostic_hir_wf_check\r\n  23:     0x7ffe67827dec - <rustc_mir_dataflow[204209cfb57e373]::framework::engine::RustcMirAttrs>::output_path\r\n  24:     0x7ffe6797aba2 - <rustc_mir_dataflow[204209cfb57e373]::framework::engine::RustcMirAttrs>::output_path\r\n  25:     0x7ffe64521ac1 - <rustc_interface[d7ab38303f68c91e]::passes::boxed_resolver::BoxedResolver>::to_resolver_outputs\r\n  26:     0x7ffe64477d26 - rustc_interface[d7ab38303f68c91e]::passes::analysis\r\n  27:     0x7ffe67a81cdb - <rustc_span[2d757f059925335b]::def_id::DefIndex as rustc_query_impl[45896b7db3cc92f1]::profiling_support::SpecIntoSelfProfilingString>::spec_to_self_profile_string\r\n  28:     0x7ffe67b56f1e - rustc_query_impl[45896b7db3cc92f1]::query_callbacks::diagnostic_hir_wf_check\r\n  29:     0x7ffe67a25ab1 - <rustc_query_impl[45896b7db3cc92f1]::queries::diagnostic_hir_wf_check as rustc_query_system[ea294a3d7add80ba]::query::config::QueryDescription<rustc_query_impl[45896b7db3cc92f1]::plumbing::QueryCtxt>>::describe\r\n  30:     0x7ffe6791fbe1 - <rustc_mir_dataflow[204209cfb57e373]::framework::engine::RustcMirAttrs>::output_path\r\n  31:     0x7ffe67a560d2 - <rustc_query_impl[45896b7db3cc92f1]::Queries as rustc_middle[ff7e0ef075a5e190]::ty::query::QueryEngine>::try_mark_green\r\n  32:     0x7ffe6439d7ca - <rustc_driver[ac5015f618b0d469]::args::Error as core[a1a53ba5778ea5ee]::fmt::Debug>::fmt\r\n  33:     0x7ffe643539ec - <rustc_middle[ff7e0ef075a5e190]::ty::SymbolName as core[a1a53ba5778ea5ee]::fmt::Display>::fmt\r\n  34:     0x7ffe643451db - <chalk_engine[160540b4fe62f842]::TableIndex>::increment\r\n  35:     0x7ffe643713f1 - <rustc_middle[ff7e0ef075a5e190]::ty::SymbolName as core[a1a53ba5778ea5ee]::fmt::Display>::fmt\r\n  36:     0x7ffe64350a03 - rustc_driver[ac5015f618b0d469]::pretty::print_after_hir_lowering\r\n  37:     0x7ffe643b8748 - <rustc_driver[ac5015f618b0d469]::args::Error as core[a1a53ba5778ea5ee]::fmt::Debug>::fmt\r\n  38:     0x7ffed11ec39c - std::sys::windows::thread::Thread::new::h5e9e6e3c717bd931\r\n  39:     0x7fff5d1f7034 - BaseThreadInitThunk\r\n  40:     0x7fff5d722651 - RtlUserThreadStart\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.58.1 (db9d1b20b 2022-01-20) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C opt-level=3 -C lto=fat -C codegen-units=1 -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `shellchat`\r\n```\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94182/timeline", "performed_via_github_app": null, "state_reason": "completed"}