{"url": "https://api.github.com/repos/rust-lang/rust/issues/61042", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61042/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61042/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61042/events", "html_url": "https://github.com/rust-lang/rust/issues/61042", "id": 447173513, "node_id": "MDU6SXNzdWU0NDcxNzM1MTM=", "number": 61042, "title": "Unnecessary on-stack copy when calling Box<FnOnce()> closure", "user": {"login": "pftbest", "id": 1573340, "node_id": "MDQ6VXNlcjE1NzMzNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1573340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pftbest", "html_url": "https://github.com/pftbest", "followers_url": "https://api.github.com/users/pftbest/followers", "following_url": "https://api.github.com/users/pftbest/following{/other_user}", "gists_url": "https://api.github.com/users/pftbest/gists{/gist_id}", "starred_url": "https://api.github.com/users/pftbest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pftbest/subscriptions", "organizations_url": "https://api.github.com/users/pftbest/orgs", "repos_url": "https://api.github.com/users/pftbest/repos", "events_url": "https://api.github.com/users/pftbest/events{/privacy}", "received_events_url": "https://api.github.com/users/pftbest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1472526996, "node_id": "MDU6TGFiZWwxNDcyNTI2OTk2", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unsized_locals", "name": "F-unsized_locals", "color": "f9c0cc", "default": false, "description": "`#![feature(unsized_locals)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-22T14:33:34Z", "updated_at": "2021-03-12T21:04:21Z", "closed_at": "2021-03-12T21:04:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When calling a boxed closure the captured data is copied from heap to the stack before the call. It happens both with trait object and a concrete type inside the box. \r\n\r\n```Rust\r\n#[inline(never)]\r\npub fn do_call<F>(b: Box<F>) where F: FnOnce() {\r\n//pub fn do_call(b: Box<dyn FnOnce()>) {\r\n    b();\r\n}\r\n\r\npub unsafe fn foo(large: [u32; 1000]) {\r\n    do_call(\r\n        Box::new(move || {\r\n            dummy(&large);\r\n        })\r\n    );\r\n}\r\n\r\nextern \"C\" {\r\n    fn dummy(data: &[u32; 1000]);\r\n}\r\n```\r\n\r\n```asm\r\nexample::do_call:\r\n        push    r14\r\n        push    rbx\r\n        sub     rsp, 4008\r\n        mov     rbx, rdi\r\n        lea     r14, [rsp + 8]\r\n        mov     edx, 4000\r\n        mov     rdi, r14\r\n        mov     rsi, rbx\r\n        call    qword ptr [rip + memcpy@GOTPCREL]\r\n        mov     rdi, r14\r\n        call    qword ptr [rip + dummy@GOTPCREL]\r\n        mov     esi, 4000\r\n        mov     edx, 4\r\n        mov     rdi, rbx\r\n        call    qword ptr [rip + __rust_dealloc@GOTPCREL]\r\n        add     rsp, 4008\r\n        pop     rbx\r\n        pop     r14\r\n        ret\r\n```\r\n\r\nGodbolt link: https://godbolt.org/z/srCEBf\r\n\r\nI think this extra memcpy is unnecessary, and it should be possible to call boxed closures without moving it out from the heap.\r\n\r\nSimilar C++ code doesn't do any extra copies in do_call (even when compiled without optimizations -O0), godbolt link: https://godbolt.org/z/VY8OLn", "closed_by": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61042/timeline", "performed_via_github_app": null, "state_reason": "completed"}