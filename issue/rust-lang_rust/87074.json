{"url": "https://api.github.com/repos/rust-lang/rust/issues/87074", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87074/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87074/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87074/events", "html_url": "https://github.com/rust-lang/rust/issues/87074", "id": 941623744, "node_id": "MDU6SXNzdWU5NDE2MjM3NDQ=", "number": 87074, "title": "Tracking Issue for RFC 3128: I/O Safety", "user": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}, {"id": 1404942788, "node_id": "MDU6TGFiZWwxNDA0OTQyNzg4", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-waiting-on-fcp", "name": "S-waiting-on-fcp", "color": "d3dddd", "default": false, "description": "Status: PR is in FCP and is awaiting for FCP to complete."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 88, "created_at": "2021-07-12T03:08:11Z", "updated_at": "2022-06-22T00:05:21Z", "closed_at": "2022-06-15T13:45:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Feature gate: `#![feature(io_safety)]`\r\n\r\nThis is a tracking issue for [RFC 3128: I/O Safety](https://github.com/rust-lang/rfcs/pull/3128).\r\n\r\nRaw OS handles such as `RawFd` and `RawHandle` have hazards similar to raw pointers; they may be bogus or may dangle, leading to broken encapsulation boundaries and code whose behavior is impossible to bound in general.\r\n\r\nIntroduce a concept of *I/O safety*, and introduce a new set of types and traits, led by `OwnedFd` and `BorrowedFd`, to support it.\r\n\r\n### Public API\r\n\r\nThe public API on UNIX platforms consists of the types `OwnedFd` and `BorrowedFd`, the trait `AsFd`, and implementations of `AsFd`, `Into<OwnedFd>`, and `From<OwnedFd>` for various types (such as files and sockets).\r\n\r\nThe public API on Windows platforms consists of two sets of parallel types and traits and impls for `OwnedHandle`, `OwnedSocket`, `BorrowedHandle`, `BorrowedSocket`, etc.\r\n\r\n### Steps / History\r\n\r\n- [x] Implementation (based on @sunfishcode's existing work outside of std)\r\n- [ ] Final comment period (FCP)\r\n  - Because these include a new stable layout guarantee (#96947), this should include T-lang (https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/rustc_nonnull_optimization_guaranteed.20oversight.3F)\r\n- [ ] Stabilization PR\r\n\r\n### Unresolved Questions\r\n\r\n- [ ] This RFC doesn't define a formal model for raw handle ownership and lifetimes. The rules for raw handles in this RFC are vague about their identity. What does it mean for a resource lifetime to be associated with a handle if the handle is just an integer type? Do all integer types with the same value share that association?\r\n- [ ] The Rust [reference](https://doc.rust-lang.org/reference/behavior-considered-undefined.html) defines undefined behavior for memory in terms of [LLVM's pointer aliasing rules](http://llvm.org/docs/LangRef.html#pointer-aliasing-rules); I/O could conceivably need a similar concept of handle aliasing rules. This doesn't seem necessary for present practical needs, but it could be explored in the future.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87074/reactions", "total_count": 33, "+1": 4, "-1": 0, "laugh": 0, "hooray": 3, "confused": 0, "heart": 22, "rocket": 4, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87074/timeline", "performed_via_github_app": null, "state_reason": "completed"}