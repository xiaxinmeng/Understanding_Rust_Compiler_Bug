{"url": "https://api.github.com/repos/rust-lang/rust/issues/22889", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22889/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22889/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22889/events", "html_url": "https://github.com/rust-lang/rust/issues/22889", "id": 59328490, "node_id": "MDU6SXNzdWU1OTMyODQ5MA==", "number": 22889, "title": "Duplicate inherent static methods can be defined in separate `impl` blocks", "user": {"login": "Byron", "id": 63622, "node_id": "MDQ6VXNlcjYzNjIy", "avatar_url": "https://avatars.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2015-02-28T06:28:08Z", "updated_at": "2016-03-12T07:49:32Z", "closed_at": "2016-03-12T07:49:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This code I used to compile fine with a version of Rust that was about 9 days old. All the comments in the code have been there before, now the code fails to compile at the lines `assert_eq!(Foo::id(), \"FOO\");` and `assert_eq!(Bar::id(), \"BAR\");`:\n\n``` Rust\n#[test]\nfn type_aliases() {\n    struct Foo {\n        a: u32,\n    };\n    impl Foo {\n        fn bark(&self) {\n            println!(\"Wuff {}\", self.a);\n        }\n\n        fn id() -> &'static str {\n            \"FOO\"\n        }\n    }\n    assert_eq!(Foo::id(), \"FOO\");\n    let f = Foo { a: 1 };\n    f.bark();\n\n    type Bar = Foo;\n    // assert_eq!(!Bar::id(), \"FOO\");\n    // error: unresolved name `Bar::id`\n    // tests/lang.rs:628     assert_eq!(!Bar::id(), \"FOO\");\n    let b = Bar { a: 2 };\n    b.bark(); // this works though\n\n    impl Bar {\n        // This would add a similarly named implementation, that is difficult to call\n        // due to ambiguity.\n        // Interestingly, it also affects Foo, as well as Bar !!\n        // fn bark(&self) {\n        //     println!(\"Grrrr {}\", self.a);\n        // }\n\n        fn id() -> &'static str {\n            \"BAR\"\n        }   \n    }\n    // b.bark(); // or f.bark();\n    // error: multiple applicable methods in scope [E0034]\n    // tests/lang.rs:625     f.bark();\n    //                         ^~~~~~\n    // tests/lang.rs:615:9: 617:10 note: candidate #1 is defined in an impl for the type `type_aliases::Foo`\n    // tests/lang.rs:615         fn bark(&self) {\n    // tests/lang.rs:616             println!(\"Wuff {}\", self.a);\n    // tests/lang.rs:617         }\n    // tests/lang.rs:637:9: 639:10 note: candidate #2 is defined in an impl for the type `type_aliases::Foo`\n    // tests/lang.rs:637         fn bark(&self) {\n    // tests/lang.rs:638             println!(\"Grrrr {}\", self.a);\n    assert_eq!(Bar::id(), \"BAR\");\n}\n```\n\nWhen compiling this now, I get this error, which seems wrong as `Bar` affects `Foo`:\n\n```\ntests/lang.rs:636:16: 636:23 error: multiple applicable methods in scope [E0034]\ntests/lang.rs:636     assert_eq!(Foo::id(), \"FOO\");\n                                 ^~~~~~~\n<std macros>:1:1: 9:39 note: in expansion of assert_eq!\ntests/lang.rs:636:5: 636:34 note: expansion site\ntests/lang.rs:632:9: 634:10 note: candidate #1 is defined in an impl for the type `type_aliases::Foo`\ntests/lang.rs:632         fn id() -> &'static str {\ntests/lang.rs:633             \"FOO\"\ntests/lang.rs:634         }\ntests/lang.rs:655:9: 657:10 note: candidate #2 is defined in an impl for the type `type_aliases::Foo`\ntests/lang.rs:655         fn id() -> &'static str {\ntests/lang.rs:656             \"BAR\"\ntests/lang.rs:657         }\n<std macros>:5:10: 5:20 error: the type of this value must be known in this context\n<std macros>:5 if ! ( ( * left_val == * right_val ) && ( * right_val == * left_val ) ) {\n                        ^~~~~~~~~~\n<std macros>:1:1: 9:39 note: in expansion of assert_eq!\ntests/lang.rs:636:5: 636:34 note: expansion site\n<std macros>:5:24: 5:35 error: the type of this value must be known in this context\n<std macros>:5 if ! ( ( * left_val == * right_val ) && ( * right_val == * left_val ) ) {\n                                      ^~~~~~~~~~~\n<std macros>:1:1: 9:39 note: in expansion of assert_eq!\ntests/lang.rs:636:5: 636:34 note: expansion site\ntests/lang.rs:670:16: 670:23 error: multiple applicable methods in scope [E0034]\ntests/lang.rs:670     assert_eq!(Bar::id(), \"BAR\");\n                                 ^~~~~~~\n<std macros>:1:1: 9:39 note: in expansion of assert_eq!\ntests/lang.rs:670:5: 670:34 note: expansion site\ntests/lang.rs:632:9: 634:10 note: candidate #1 is defined in an impl for the type `type_aliases::Foo`\ntests/lang.rs:632         fn id() -> &'static str {\ntests/lang.rs:633             \"FOO\"\ntests/lang.rs:634         }\ntests/lang.rs:655:9: 657:10 note: candidate #2 is defined in an impl for the type `type_aliases::Foo`\ntests/lang.rs:655         fn id() -> &'static str {\ntests/lang.rs:656             \"BAR\"\ntests/lang.rs:657         }\n<std macros>:5:10: 5:20 error: the type of this value must be known in this context\n<std macros>:5 if ! ( ( * left_val == * right_val ) && ( * right_val == * left_val ) ) {\n                        ^~~~~~~~~~\n<std macros>:1:1: 9:39 note: in expansion of assert_eq!\ntests/lang.rs:670:5: 670:34 note: expansion site\n<std macros>:5:24: 5:35 error: the type of this value must be known in this context\n<std macros>:5 if ! ( ( * left_val == * right_val ) && ( * right_val == * left_val ) ) {\n                                      ^~~~~~~~~~~\n<std macros>:1:1: 9:39 note: in expansion of assert_eq!\ntests/lang.rs:670:5: 670:34 note: expansion site\n```\n\nEven if this is now desired, I think the compiler message could be improved - it looks similar for the two candidates, and if it wasn't for the code shown below it, I would look like it means the same thing.\n### Meta\n\n``` bash\n$ rustc --verbose --version\nrustc 1.0.0-nightly (4db0b3246 2015-02-25) (built 2015-02-25)\nbinary: rustc\ncommit-hash: 4db0b32467535d718d6474de7ae8d1007d900818\ncommit-date: 2015-02-25\nbuild-date: 2015-02-25\nhost: x86_64-apple-darwin\nrelease: 1.0.0-nightly\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22889/timeline", "performed_via_github_app": null, "state_reason": "completed"}