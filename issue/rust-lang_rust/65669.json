{"url": "https://api.github.com/repos/rust-lang/rust/issues/65669", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65669/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65669/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65669/events", "html_url": "https://github.com/rust-lang/rust/issues/65669", "id": 510218440, "node_id": "MDU6SXNzdWU1MTAyMTg0NDA=", "number": 65669, "title": "Proposal: add `reject` function to std::iter::Iterator", "user": {"login": "olegnn", "id": 6822848, "node_id": "MDQ6VXNlcjY4MjI4NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6822848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegnn", "html_url": "https://github.com/olegnn", "followers_url": "https://api.github.com/users/olegnn/followers", "following_url": "https://api.github.com/users/olegnn/following{/other_user}", "gists_url": "https://api.github.com/users/olegnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegnn/subscriptions", "organizations_url": "https://api.github.com/users/olegnn/orgs", "repos_url": "https://api.github.com/users/olegnn/repos", "events_url": "https://api.github.com/users/olegnn/events{/privacy}", "received_events_url": "https://api.github.com/users/olegnn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-21T19:10:08Z", "updated_at": "2022-02-06T16:38:21Z", "closed_at": "2021-01-14T17:55:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This method will act as a `filter` with a complement of the provided predicate. \r\n\r\nIf function defined as `is_something(&value) -> bool {...}` (which is a common way) and we'd like to pick opposite values, now ther's a must to create unnecessary closure `.filter(|value| !is_something(value))`, but instead we could simply write `.reject(is_something)`.\r\n\r\nIt's also very useful when a condition is a complex bool expression\r\n```rust\r\n\r\nstruct Letter {\r\n    date: DateTime<Utc>,\r\n    text: String,\r\n    sender: String,\r\n    receiver: String,\r\n}\r\n\r\n.filter(|letter| {\r\n    letter.sender != letter.receiver\r\n        && letter.date >= date\r\n        && !sender_blacklist\r\n            .into_iter()\r\n            .any(|sender| letter.sender == *sender)\r\n        && !is_spam(letter)\r\n})\r\n\r\n.reject(|letter| {\r\n    letter.sender == letter.receiver\r\n        || letter.date < date\r\n        || sender_blacklist\r\n            .into_iter()\r\n            .any(|sender| letter.sender == *sender)\r\n        || is_spam(letter)\r\n})\r\n```\r\n\r\nThe first function reads as \r\n`take if is not and if (greater or equal to) and is not and is not` \r\nwhich is much less clear than\r\n`drop if is or less than or is or is`\r\n\r\nMoreover, there's a [partition function](https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.partition) which acts as a combination of `filter` and `reject` but we don't actually have `reject`.", "closed_by": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65669/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65669/timeline", "performed_via_github_app": null, "state_reason": "completed"}