{"url": "https://api.github.com/repos/rust-lang/rust/issues/89066", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89066/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89066/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89066/events", "html_url": "https://github.com/rust-lang/rust/issues/89066", "id": 999953415, "node_id": "I_kwDOAAsO6M47mhQH", "number": 89066, "title": "ICE: ./src/test/ui/inference/infer-arg-test.rs: not yet impemented with -Zsave-analysis", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-18T07:13:15Z", "updated_at": "2022-01-29T16:08:33Z", "closed_at": "2022-01-29T16:08:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n`./src/test/ui/inference/infer-arg-test.rs`\r\n```Rust\r\n#![feature(generic_arg_infer)]\r\n\r\nstruct All<'a, T, const N: usize> {\r\n  v: &'a T,\r\n}\r\n\r\nstruct BadInfer<_>;\r\n//~^ ERROR expected identifier\r\n//~| ERROR parameter `_` is never used\r\n\r\nfn all_fn<'a, T, const N: usize>() {}\r\n\r\nfn bad_infer_fn<_>() {}\r\n//~^ ERROR expected identifier\r\n\r\n\r\nfn main() {\r\n  let a: All<_, _, _>;\r\n  all_fn();\r\n  let v: [u8; _];\r\n  //~^ ERROR in expressions\r\n  let v: [u8; 10] = [0; _];\r\n  //~^ ERROR in expressions\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.57.0-nightly (6c33a0a2e 2021-09-18)\r\nbinary: rustc\r\ncommit-hash: 6c33a0a2ec8a32016fcb35342ae9d08087e38d5c\r\ncommit-date: 2021-09-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: expected identifier, found reserved identifier `_`\r\n --> ./src/test/ui/inference/infer-arg-test.rs:7:17\r\n  |\r\n7 | struct BadInfer<_>;\r\n  |                 ^ expected identifier, found reserved identifier\r\n\r\nerror: expected identifier, found reserved identifier `_`\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:13:17\r\n   |\r\n13 | fn bad_infer_fn<_>() {}\r\n   |                 ^ expected identifier, found reserved identifier\r\n\r\nerror: in expressions, `_` can only be used on the left-hand side of an assignment\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:20:15\r\n   |\r\n20 |   let v: [u8; _];\r\n   |               ^ `_` not allowed here\r\n\r\nerror: in expressions, `_` can only be used on the left-hand side of an assignment\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:22:25\r\n   |\r\n22 |   let v: [u8; 10] = [0; _];\r\n   |                         ^ `_` not allowed here\r\n\r\nerror[E0392]: parameter `_` is never used\r\n --> ./src/test/ui/inference/infer-arg-test.rs:7:17\r\n  |\r\n7 | struct BadInfer<_>;\r\n  |                 ^ unused parameter\r\n  |\r\n  = help: consider removing `_`, referring to it in a field, or using a marker such as `PhantomData`\r\n  = help: if you intended `_` to be a const parameter, use `const _: usize` instead\r\n\r\nerror[E0107]: this struct takes 2 generic arguments but 3 generic arguments were supplied\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:18:10\r\n   |\r\n18 |   let a: All<_, _, _>;\r\n   |          ^^^       - help: remove this generic argument\r\n   |          |\r\n   |          expected 2 generic arguments\r\n   |\r\nnote: struct defined here, with 2 generic parameters: `T`, `N`\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:3:8\r\n   |\r\n3  | struct All<'a, T, const N: usize> {\r\n   |        ^^^     -        -\r\n\r\nthread 'rustc' panicked at 'not yet implemented', compiler/rustc_typeck/src/astconv/mod.rs:462:29\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (6c33a0a2e 2021-09-18) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z save-analysis\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `main`\r\nend of query stack\r\nerror: aborting due to 6 previous errors\r\n\r\nSome errors have detailed explanations: E0107, E0392.\r\nFor more information about an error, try `rustc --explain E0107`.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: expected identifier, found reserved identifier `_`\r\n --> ./src/test/ui/inference/infer-arg-test.rs:7:17\r\n  |\r\n7 | struct BadInfer<_>;\r\n  |                 ^ expected identifier, found reserved identifier\r\n\r\nerror: expected identifier, found reserved identifier `_`\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:13:17\r\n   |\r\n13 | fn bad_infer_fn<_>() {}\r\n   |                 ^ expected identifier, found reserved identifier\r\n\r\nerror: in expressions, `_` can only be used on the left-hand side of an assignment\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:20:15\r\n   |\r\n20 |   let v: [u8; _];\r\n   |               ^ `_` not allowed here\r\n\r\nerror: in expressions, `_` can only be used on the left-hand side of an assignment\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:22:25\r\n   |\r\n22 |   let v: [u8; 10] = [0; _];\r\n   |                         ^ `_` not allowed here\r\n\r\nerror[E0392]: parameter `_` is never used\r\n --> ./src/test/ui/inference/infer-arg-test.rs:7:17\r\n  |\r\n7 | struct BadInfer<_>;\r\n  |                 ^ unused parameter\r\n  |\r\n  = help: consider removing `_`, referring to it in a field, or using a marker such as `PhantomData`\r\n  = help: if you intended `_` to be a const parameter, use `const _: usize` instead\r\n\r\nerror[E0107]: this struct takes 2 generic arguments but 3 generic arguments were supplied\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:18:10\r\n   |\r\n18 |   let a: All<_, _, _>;\r\n   |          ^^^       - help: remove this generic argument\r\n   |          |\r\n   |          expected 2 generic arguments\r\n   |\r\nnote: struct defined here, with 2 generic parameters: `T`, `N`\r\n  --> ./src/test/ui/inference/infer-arg-test.rs:3:8\r\n   |\r\n3  | struct All<'a, T, const N: usize> {\r\n   |        ^^^     -        -\r\n\r\nthread 'rustc' panicked at 'not yet implemented', compiler/rustc_typeck/src/astconv/mod.rs:462:29\r\nstack backtrace:\r\n   0:     0x7f4f60a6251c - std::backtrace_rs::backtrace::libunwind::trace::h2ab374bc2a3b7023\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7f4f60a6251c - std::backtrace_rs::backtrace::trace_unsynchronized::h128cb5178b04dc46\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f4f60a6251c - std::sys_common::backtrace::_print_fmt::h5344f9eefca2041f\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f4f60a6251c - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h213003bc5c7acf04\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f4f60ac07dc - core::fmt::write::h78bf85fc3e93663f\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/core/src/fmt/mod.rs:1126:17\r\n   5:     0x7f4f60a53405 - std::io::Write::write_fmt::he619515c888f21a5\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/io/mod.rs:1667:15\r\n   6:     0x7f4f60a65a80 - std::sys_common::backtrace::_print::hf706674f77848203\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f4f60a65a80 - std::sys_common::backtrace::print::hf0b6c7a88804ec56\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f4f60a65a80 - std::panicking::default_hook::{{closure}}::h2dde766cd83a333a\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/panicking.rs:210:50\r\n   9:     0x7f4f60a65637 - std::panicking::default_hook::h501e3b2e134eb149\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/panicking.rs:227:9\r\n  10:     0x7f4f61245f51 - rustc_driver::DEFAULT_HOOK::{{closure}}::{{closure}}::he756f1e8c1181d3b\r\n  11:     0x7f4f60a66299 - std::panicking::rust_panic_with_hook::hc09e869c4cf00885\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/panicking.rs:628:17\r\n  12:     0x7f4f60a65d22 - std::panicking::begin_panic_handler::{{closure}}::hc2c6d70142458fc8\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/panicking.rs:519:13\r\n  13:     0x7f4f60a629c4 - std::sys_common::backtrace::__rust_end_short_backtrace::had58f7c459a1cd6e\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/sys_common/backtrace.rs:141:18\r\n  14:     0x7f4f60a65cb9 - rust_begin_unwind\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/panicking.rs:517:5\r\n  15:     0x7f4f60a2b861 - core::panicking::panic_fmt::hf443e5eeb6cc9eab\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/core/src/panicking.rs:103:14\r\n  16:     0x7f4f60a2b7ad - core::panicking::panic::h50b51d19800453c0\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/core/src/panicking.rs:50:5\r\n  17:     0x7f4f625f0360 - <<dyn rustc_typeck::astconv::AstConv>::create_substs_for_ast_path::SubstsForAstPathCtxt as rustc_typeck::astconv::CreateSubstsForGenericArgsCtxt>::provided_kind::hd27533ba044dfdb1\r\n  18:     0x7f4f625ed8a1 - <dyn rustc_typeck::astconv::AstConv>::create_substs_for_ast_path::hdc70fffec5683393\r\n  19:     0x7f4f625e7a24 - <dyn rustc_typeck::astconv::AstConv>::ast_path_substs_for_ty::h475721814acfe140\r\n  20:     0x7f4f625e8387 - <dyn rustc_typeck::astconv::AstConv>::ast_path_to_ty::h7d884b8259ee57d2\r\n  21:     0x7f4f625f0889 - <dyn rustc_typeck::astconv::AstConv>::ast_ty_to_ty_inner::h3bd2d155d3a92192\r\n  22:     0x7f4f62620e9a - <rustc_typeck::check::gather_locals::GatherLocalsVisitor as rustc_hir::intravisit::Visitor>::visit_local::h49b7cf8e3b7265c2\r\n  23:     0x7f4f62597e76 - rustc_hir::intravisit::walk_expr::h2aa3efa9f6724d3f\r\n  24:     0x7f4f62648153 - rustc_typeck::check::check::check_fn::h22859037fe91ae06\r\n  25:     0x7f4f625ff58d - rustc_infer::infer::InferCtxtBuilder::enter::h6497f632ea603058\r\n  26:     0x7f4f625a66ba - rustc_typeck::check::typeck::h30e85507fb0c045e\r\n  27:     0x7f4f6298589f - rustc_query_system::query::plumbing::try_execute_query::h962ee77e1a4e17d7\r\n  28:     0x7f4f62a0078c - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck::h2edc91f1d8d9a428\r\n  29:     0x7f4f61296fd3 - rustc_save_analysis::dump_visitor::DumpVisitor::nest_typeck_results::hc61e603166c7031b\r\n  30:     0x7f4f6129dfa2 - <rustc_save_analysis::dump_visitor::DumpVisitor as rustc_hir::intravisit::Visitor>::visit_item::h3c1542be36f664dd\r\n  31:     0x7f4f61295fb6 - rustc_hir::intravisit::Visitor::visit_nested_item::hed32e44f3e7a9e0d\r\n  32:     0x7f4f612845e7 - rustc_hir::intravisit::walk_mod::hda2665ecb6d5bb12\r\n  33:     0x7f4f612925a3 - rustc_middle::hir::map::Map::walk_toplevel_module::h5e3c39f11bf1c883\r\n  34:     0x7f4f6129b965 - rustc_save_analysis::dump_visitor::DumpVisitor::process_crate::he52095d5868ac37c\r\n  35:     0x7f4f61276262 - rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps::h5135873aa9381dc0\r\n  36:     0x7f4f61278257 - std::thread::local::LocalKey<T>::with::hedc911502788cc56\r\n  37:     0x7f4f6124b287 - rustc_save_analysis::process_crate::h6bb0baa6752a5ec0\r\n  38:     0x7f4f61254967 - rustc_session::utils::<impl rustc_session::session::Session>::time::h88db1609c8457239\r\n  39:     0x7f4f62e13637 - rustc_interface::passes::QueryContext::enter::hcdbb877939d5b3f6\r\n  40:     0x7f4f62dfa901 - rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter::h5e6d4aaebb0cf9be\r\n  41:     0x7f4f62de7f9c - rustc_span::with_source_map::h599a6f9fdaefef48\r\n  42:     0x7f4f62dfa22c - scoped_tls::ScopedKey<T>::set::he21a81a9bfc3d569\r\n  43:     0x7f4f62de96ba - std::sys_common::backtrace::__rust_begin_short_backtrace::h81ba4b768f16a523\r\n  44:     0x7f4f62de6865 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h83206074d599cea9\r\n  45:     0x7f4f60a72e33 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h59eef3b9c8a82350\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/alloc/src/boxed.rs:1636:9\r\n  46:     0x7f4f60a72e33 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hb5bbe017c347469c\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/alloc/src/boxed.rs:1636:9\r\n  47:     0x7f4f60a72e33 - std::sys::unix::thread::Thread::new::thread_start::h62931528f61e35f5\r\n                               at /rustc/6c33a0a2ec8a32016fcb35342ae9d08087e38d5c/library/std/src/sys/unix/thread.rs:106:17\r\n  48:     0x7f4f6097f259 - start_thread\r\n  49:     0x7f4f608945e3 - __GI___clone\r\n  50:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (6c33a0a2e 2021-09-18) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z save-analysis\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `main`\r\nend of query stack\r\nerror: aborting due to 6 previous errors\r\n\r\nSome errors have detailed explanations: E0107, E0392.\r\nFor more information about an error, try `rustc --explain E0107`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89066/timeline", "performed_via_github_app": null, "state_reason": "completed"}