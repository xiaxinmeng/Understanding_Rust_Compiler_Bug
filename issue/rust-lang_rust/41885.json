{"url": "https://api.github.com/repos/rust-lang/rust/issues/41885", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41885/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41885/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41885/events", "html_url": "https://github.com/rust-lang/rust/issues/41885", "id": 227705924, "node_id": "MDU6SXNzdWUyMjc3MDU5MjQ=", "number": 41885, "title": "Rewrite platform intrinsic generation as a build script", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 593503757, "node_id": "MDU6TGFiZWw1OTM1MDM3NTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-infra", "name": "T-infra", "color": "bfd4f2", "default": false, "description": "Relevant to the infrastructure team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-05-10T14:48:08Z", "updated_at": "2019-05-17T13:40:23Z", "closed_at": "2019-05-17T13:40:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now the compiler has a [`rustc_platform_intrinsics` crate](https://github.com/rust-lang/rust/tree/master/src/librustc_platform_intrinsics) which is basically a database of all platform intrinsics with their inputs/outputs and LLVM names, etc. This is the information the compiler uses to typecheck all intrinsics and also generate code for them with LLVM. An example generated file looks like [`aarch64.rs`](https://github.com/rust-lang/rust/blob/25a161765fb90f2bfc78bda8fef944048e72bd26/src/librustc_platform_intrinsics/aarch64.rs).\r\n\r\nThese files are all generated by a [`generator.py`](https://github.com/rust-lang/rust/blob/25a161765fb90f2bfc78bda8fef944048e72bd26/src/etc/platform-intrinsics/generator.py) script in the `src/etc` dir. This generator slurps up a ton of JSON definitions, for example all the files in [`src/etc/platform-intrinsics/x86`](https://github.com/rust-lang/rust/tree/25a161765fb90f2bfc78bda8fef944048e72bd26/src/etc/platform-intrinsics/x86) and then generates these Rust files.\r\n\r\nNow that we're using Cargo as a build system we can avoid checking in these generated source files. Instead we can translate `generator.py` into Rust as a build script and use build-time code generation to generate all of these files.\r\n\r\nThis isn't necessarily an easy task because `generator.py` is not exactly a trivial script, but I'm more than willing to help out if anyone's got any questions!", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41885/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41885/timeline", "performed_via_github_app": null, "state_reason": "completed"}