{"url": "https://api.github.com/repos/rust-lang/rust/issues/105215", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105215/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105215/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105215/events", "html_url": "https://github.com/rust-lang/rust/issues/105215", "id": 1474147722, "node_id": "I_kwDOAAsO6M5X3bWK", "number": 105215, "title": "Need to run `x.py setup` multiple times for it to create a `config.toml`", "user": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-03T16:31:58Z", "updated_at": "2022-12-04T02:56:39Z", "closed_at": "2022-12-04T02:56:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On a fresh install on MacOS Ventura on a 2020 M1 MacBook Air, I had to run `x.py setup` multiple times before it creating a `config.toml`\r\n\r\n```shell\r\n$ x.py setup\r\n...\r\nWelcome to the Rust project! What do you want to do with x.py?\r\na) library: Contribute to the standard library\r\nb) compiler: Contribute to the compiler itself\r\nc) codegen: Contribute to the compiler, and also modify LLVM or codegen\r\nd) tools: Contribute to tools which depend on the compiler, but do not modify it directly (e.g. rustdoc, clippy, miri)\r\ne) user: Install Rust from source\r\nPlease choose one (a/b/c/d/e): a\r\nUpdating submodule src/tools/rust-installer\r\nSubmodule 'src/rust-installer' (https://github.com/rust-lang/rust-installer.git) registered for path 'src/tools/rust-installer'\r\nCloning into '/Users/kraktus/Github/rust/src/tools/rust-installer'...\r\nremote: Enumerating objects: 53, done.        \r\nremote: Counting objects: 100% (53/53), done.        \r\nremote: Compressing objects: 100% (31/31), done.        \r\nremote: Total 53 (delta 3), reused 38 (delta 0), pack-reused 0        \r\nReceiving objects: 100% (53/53), 39.23 KiB | 146.00 KiB/s, done.\r\nResolving deltas: 100% (3/3), done.\r\nremote: Total 0 (delta 0), reused 0 (delta 0), pack-reused 0\r\nremote: Enumerating objects: 5, done.\r\nremote: Counting objects: 100% (5/5), done.\r\nremote: Compressing objects: 100% (2/2), done.\r\nremote: Total 3 (delta 1), reused 1 (delta 0), pack-reused 0\r\nUnpacking objects: 100% (3/3), 712 bytes | 178.00 KiB/s, done.\r\nFrom https://github.com/rust-lang/rust-installer\r\n * branch            300b5ec61ef38855a07e6bb4955a37aa1c414c00 -> FETCH_HEAD\r\nSubmodule path 'src/tools/rust-installer': checked out '300b5ec61ef38855a07e6bb4955a37aa1c414c00'\r\nNo local changes to save\r\nNo stash entries found.\r\nBuild completed unsuccessfully in 0:27:00\r\n```\r\n\r\n```\r\n$ x.py setup\r\n...\r\nWelcome to the Rust project! What do you want to do with x.py?\r\na) library: Contribute to the standard library\r\nb) compiler: Contribute to the compiler itself\r\nc) codegen: Contribute to the compiler, and also modify LLVM or codegen\r\nd) tools: Contribute to tools which depend on the compiler, but do not modify it directly (e.g. rustdoc, clippy, miri)\r\ne) user: Install Rust from source\r\nPlease choose one (a/b/c/d/e): a\r\nUpdating submodule src/tools/cargo\r\nSubmodule 'src/tools/cargo' (https://github.com/rust-lang/cargo.git) registered for path 'src/tools/cargo'\r\nCloning into '/Users/kraktus/Github/rust/src/tools/cargo'...\r\nremote: Enumerating objects: 1738, done.        \r\nremote: Counting objects: 100% (1738/1738), done.        \r\nremote: Compressing objects: 100% (1201/1201), done.        \r\nremote: Total 1738 (delta 453), reused 1057 (delta 362), pack-reused 0        \r\nReceiving objects: 100% (1738/1738), 2.41 MiB | 4.54 MiB/s, done.\r\nResolving deltas: 100% (453/453), done.\r\nSubmodule path 'src/tools/cargo': checked out 'f6e737b1e3386adb89333bf06a01f68a91ac5306'\r\nNo local changes to save\r\nNo stash entries found.\r\nBuild completed unsuccessfully in 0:00:03\r\n```\r\n\r\n```\r\n$ x.py setup\r\n...\r\nWelcome to the Rust project! What do you want to do with x.py?\r\na) library: Contribute to the standard library\r\nb) compiler: Contribute to the compiler itself\r\nc) codegen: Contribute to the compiler, and also modify LLVM or codegen\r\nd) tools: Contribute to tools which depend on the compiler, but do not modify it directly (e.g. rustdoc, clippy, miri)\r\ne) user: Install Rust from source\r\nPlease choose one (a/b/c/d/e): b\r\nUpdating submodule library/backtrace\r\nSubmodule 'library/backtrace' (https://github.com/rust-lang/backtrace-rs.git) registered for path 'library/backtrace'\r\nCloning into '/Users/kraktus/Github/rust/library/backtrace'...\r\nremote: Enumerating objects: 140, done.        \r\nremote: Counting objects: 100% (140/140), done.        \r\nremote: Compressing objects: 100% (105/105), done.        \r\nremote: Total 140 (delta 9), reused 77 (delta 4), pack-reused 0        \r\nReceiving objects: 100% (140/140), 99.24 KiB | 4.31 MiB/s, done.\r\nResolving deltas: 100% (9/9), done.\r\nremote: Total 0 (delta 0), reused 0 (delta 0), pack-reused 0\r\nremote: Enumerating objects: 29, done.\r\nremote: Counting objects: 100% (29/29), done.\r\nremote: Compressing objects: 100% (15/15), done.\r\nremote: Total 15 (delta 13), reused 2 (delta 0), pack-reused 0\r\nUnpacking objects: 100% (15/15), 2.07 KiB | 132.00 KiB/s, done.\r\nFrom https://github.com/rust-lang/backtrace-rs\r\n * branch            07872f28cd8a65c3c7428811548dc85f1f2fb05b -> FETCH_HEAD\r\nSubmodule path 'library/backtrace': checked out '07872f28cd8a65c3c7428811548dc85f1f2fb05b'\r\nNo local changes to save\r\nNo stash entries found.\r\nBuild completed unsuccessfully in 0:00:05\r\n```\r\n\r\n```\r\n$ x.py setup\r\n...\r\nWelcome to the Rust project! What do you want to do with x.py?\r\na) library: Contribute to the standard library\r\nb) compiler: Contribute to the compiler itself\r\nc) codegen: Contribute to the compiler, and also modify LLVM or codegen\r\nd) tools: Contribute to tools which depend on the compiler, but do not modify it directly (e.g. rustdoc, clippy, miri)\r\ne) user: Install Rust from source\r\nPlease choose one (a/b/c/d/e): b\r\nUpdating submodule library/stdarch\r\nSubmodule 'library/stdarch' (https://github.com/rust-lang/stdarch.git) registered for path 'library/stdarch'\r\nCloning into '/Users/kraktus/Github/rust/library/stdarch'...\r\nremote: Enumerating objects: 311, done.        \r\nremote: Counting objects: 100% (311/311), done.        \r\nremote: Compressing objects: 100% (259/259), done.        \r\nremote: Total 311 (delta 53), reused 147 (delta 19), pack-reused 0        \r\nReceiving objects: 100% (311/311), 1.39 MiB | 4.80 MiB/s, done.\r\nResolving deltas: 100% (53/53), done.\r\nremote: Total 0 (delta 0), reused 0 (delta 0), pack-reused 0\r\nremote: Enumerating objects: 189, done.\r\nremote: Counting objects: 100% (189/189), done.\r\nremote: Compressing objects: 100% (92/92), done.\r\nremote: Total 104 (delta 64), reused 27 (delta 1), pack-reused 0\r\nReceiving objects: 100% (104/104), 41.34 KiB | 10.33 MiB/s, done.\r\nResolving deltas: 100% (64/64), completed with 61 local objects.\r\nFrom https://github.com/rust-lang/stdarch\r\n * branch            790411f93c4b5eada3c23abb4c9a063fb0b24d99 -> FETCH_HEAD\r\nSubmodule path 'library/stdarch': checked out '790411f93c4b5eada3c23abb4c9a063fb0b24d99'\r\nSubmodule 'crates/intrinsic-test/acle' (https://github.com/ARM-software/acle.git) registered for path 'library/stdarch/crates/intrinsic-test/acle'\r\nCloning into '/Users/kraktus/Github/rust/library/stdarch/crates/intrinsic-test/acle'...\r\nremote: Enumerating objects: 87, done.        \r\nremote: Counting objects: 100% (87/87), done.        \r\nremote: Compressing objects: 100% (83/83), done.        \r\nremote: Total 87 (delta 18), reused 33 (delta 1), pack-reused 0        \r\nReceiving objects: 100% (87/87), 617.96 KiB | 1.03 MiB/s, done.\r\nResolving deltas: 100% (18/18), done.\r\nremote: Total 0 (delta 0), reused 0 (delta 0), pack-reused 0\r\nremote: Enumerating objects: 67, done.\r\nremote: Counting objects: 100% (67/67), done.\r\nremote: Compressing objects: 100% (38/38), done.\r\nremote: Total 40 (delta 25), reused 4 (delta 0), pack-reused 0\r\nUnpacking objects: 100% (40/40), 254.67 KiB | 1.09 MiB/s, done.\r\nFrom https://github.com/ARM-software/acle\r\n * branch            5626f85f469f419db16f20b1614863aeb377c22b -> FETCH_HEAD\r\nSubmodule path 'library/stdarch/crates/intrinsic-test/acle': checked out '5626f85f469f419db16f20b1614863aeb377c22b'\r\nNo local changes to save\r\nNo stash entries found.\r\nBuild completed unsuccessfully in 0:00:09\r\n```\r\n\r\nThe last one, with `-v` setup\r\n```\r\n$ x.py setup -v\r\n...\r\nWelcome to the Rust project! What do you want to do with x.py?\r\na) library: Contribute to the standard library\r\nb) compiler: Contribute to the compiler itself\r\nc) codegen: Contribute to the compiler, and also modify LLVM or codegen\r\nd) tools: Contribute to tools which depend on the compiler, but do not modify it directly (e.g. rustdoc, clippy, miri)\r\ne) user: Install Rust from source\r\nPlease choose one (a/b/c/d/e): a\r\nfinding compilers\r\nCC_aarch64-apple-darwin = \"cc\"\r\nCFLAGS_aarch64-apple-darwin = [\"-ffunction-sections\", \"-fdata-sections\", \"-fPIC\", \"-arch\", \"arm64\", \"-stdlib=libc++\"]\r\nCXX_aarch64-apple-darwin = \"c++\"\r\nCXXFLAGS_aarch64-apple-darwin = [\"-ffunction-sections\", \"-fdata-sections\", \"-fPIC\", \"-arch\", \"arm64\", \"-stdlib=libc++\"]\r\nAR_aarch64-apple-darwin = \"ar\"\r\nlearning about cargo\r\n`x.py` will now use the configuration at /Users/kraktus/Github/rust/src/bootstrap/defaults/config.library.toml\r\n\r\n`stage1` toolchain already linked; not attempting to link `stage1` toolchain\r\n\r\nRust's CI will automatically fail if it doesn't pass `tidy`, the internal tool for ensuring code quality.\r\nIf you'd like, x.py can install a git hook for you that will automatically run `tidy --bless` before\r\npushing your code to ensure your code is up to par. If you decide later that this behavior is\r\nundesirable, simply delete the `pre-push` file from .git/hooks.\r\nWould you like to install the git hook?: [y/N] y\r\nLinked `src/etc/pre-push.sh` to `.git/hooks/pre-push`\r\n\r\nTo get started, try one of the following commands:\r\n- `x.py check`\r\n- `x.py build`\r\n- `x.py test library/std`\r\n- `x.py doc`\r\nFor more suggestions, see https://rustc-dev-guide.rust-lang.org/building/suggested.html\r\nBuild completed successfully in 0:00:36\r\n```\r\n\r\nNote that the output is different every time, and that a different submodule is updated\r\n\r\n[Relevant zulip thread](https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/.E2.9C.94.20no.20config.20found.20despite.20running.20x.2Epy.20setup)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105215/timeline", "performed_via_github_app": null, "state_reason": "completed"}