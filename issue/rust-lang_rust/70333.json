{"url": "https://api.github.com/repos/rust-lang/rust/issues/70333", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70333/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70333/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70333/events", "html_url": "https://github.com/rust-lang/rust/issues/70333", "id": 586484728, "node_id": "MDU6SXNzdWU1ODY0ODQ3Mjg=", "number": 70333, "title": "rustc compiles function that is never used", "user": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-23T20:04:29Z", "updated_at": "2020-03-24T13:07:25Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\n`rustc` seems to compile never used functions in traits:\r\n```rust\r\n// Note: both trait and fn are private and never used\r\ntrait NeverUsed {\r\n    fn never_used();\r\n}\r\n\r\nimpl NeverUsed for () {\r\n    fn never_used() {\r\n        size_expectation_failed()\r\n    }\r\n}\r\n\r\nfn size_expectation_failed() -> ! {\r\n    panic!(\"size of `slice` must not be less than size of `Self` to ref cast to success\")\r\n}\r\n```\r\nGenerates a lot of \"panic\" asm ([godbolt](https://godbolt.org/z/8ksG7P)).\r\n\r\nI expected not to see unused functions in asm, but they are there.\r\n\r\nThis also happens when using lib with a similar (never used) trait.\r\n\r\n## Steps to reproduce\r\n1. create `lib` and `bin` crates:\r\n   `cargo new --bin neverbin && cargo new --lib neverlib`\r\n2. fill `./neverlib/src/lib.rs` with: \r\n   ```rust\r\n   trait NeverUsed { \r\n       fn never_used(); \r\n   } \r\n\r\n   impl NeverUsed for () { \r\n       fn never_used() { \r\n           call_panic() \r\n       } \r\n   } \r\n   \r\n   fn call_panic() { panic!(\\\"ooops\\\") }\r\n   ```\r\n3. add dependency to bin crate:\r\n   ```toml\r\n    # Cargo.toml\r\n   [dependencies]\r\n   neverlib = { path = \"../neverlib\" }\r\n   ```\r\n4. [install](https://github.com/gnzlbg/cargo-asm#install) & run `cargo asm` for bin crate, you'll see something like that:\r\n   ```console\r\n   $ cargo asm\r\n   <() as neverlib::NeverUsed>::never_used\r\n   <T as core::any::Any>::type_id\r\n   <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::get\r\n   <std::panicking::begin_panic::PanicPayload<A> as core::panic::BoxMeUp>::take_box\r\n   core::ops::function::FnOnce::call_once{{vtable.shim}}\r\n   core::ptr::drop_in_place\r\n   neverbin::main\r\n   neverlib::call_panic\r\n   std::panicking::begin_panic\r\n   std::rt::lang_start\r\n   std::rt::lang_start::{{closure}}\r\n   ```\r\n5. Note `never_used` and `call_panic` functions, all the `panic!` stuff\r\n6. this behaviour also holds with lto\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0-nightly (564758c4c 2020-03-08)\r\nbinary: rustc\r\ncommit-hash: 564758c4c329e89722454dd2fbb35f1ac0b8b47c\r\ncommit-date: 2020-03-08\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n### P.S.\r\n\r\nI may misunderstand something, and maybe I've forgot to turn on some optimizations, so correct me if I'm wrong. But this behaviour seems _strange_.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70333/timeline", "performed_via_github_app": null, "state_reason": null}