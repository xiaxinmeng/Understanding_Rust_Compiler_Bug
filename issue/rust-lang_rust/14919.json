{"url": "https://api.github.com/repos/rust-lang/rust/issues/14919", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/14919/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/14919/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/14919/events", "html_url": "https://github.com/rust-lang/rust/issues/14919", "id": 35755937, "node_id": "MDU6SXNzdWUzNTc1NTkzNw==", "number": 14919, "title": "Close inference failure", "user": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-15T19:17:34Z", "updated_at": "2014-10-03T07:27:53Z", "closed_at": "2014-10-03T07:27:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Error:\n\n```\n<anon>:51:16: 51:83 error: cannot determine a type for this bounded type parameter: unconstrained type\n<anon>:51     assert_eq!(match_indices(s, |c: char| c == 'b').collect::<Vec<(uint, uint)>>(),\n                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<std macros>:1:1: 14:2 note: in expansion of assert_eq!\n<anon>:51:5: 52:40 note: expansion site\nplaypen: application terminated with error code 101\n```\n\nCode:\n\n``` rust\ntrait Matcher {\n    fn next_match(&mut self) -> Option<(uint, uint)>;\n}\nstruct CharPredMatcher<'a, 'b> {\n    str: &'a str,\n    pred: |char|:'b -> bool\n}\nimpl<'a, 'b> Matcher for CharPredMatcher<'a, 'b> {\n    fn next_match(&mut self) -> Option<(uint, uint)> {\n        None\n    }\n}\n\n/////////////////////////\n\ntrait IntoMatcher<'a, T> {\n    fn into_matcher(self, &'a str) -> T;\n}\nimpl<'a, 'b> IntoMatcher<'a, CharPredMatcher<'a, 'b>> for |char|:'b -> bool {\n    fn into_matcher(self, s: &'a str) -> CharPredMatcher<'a, 'b> {\n        CharPredMatcher {\n            str: s,\n            pred: self\n        }\n    }\n}\n\n/////////////////////////\n\nstruct MatchIndices<M> {\n    matcher: M\n}\n\nimpl<M: Matcher> Iterator<(uint, uint)> for MatchIndices<M> {\n    fn next(&mut self) -> Option<(uint, uint)> {\n        self.matcher.next_match()\n    }\n}\n\nfn match_indices<'a, M, T: IntoMatcher<'a, M>>(s: &'a str, from: T) -> MatchIndices<M> {\n    let string_matcher = from.into_matcher(s);\n    MatchIndices { matcher: string_matcher }\n}\n\n/////////////////////////\n\nfn main() {\n    let s = \"abcbdef\";\n    assert_eq!(match_indices(s, |c: char| c == 'b').collect::<Vec<(uint, uint)>>(),\n               vec![(1u, 2u), (3, 4)]);\n}\n```\n\nIt works if the closure gets rooted in its own variable like this:\n\n``` rust\nfn main() {\n    let s = \"abcbdef\";\n    let f = |c: char| c == 'b';\n    assert_eq!(match_indices(s, f).collect::<Vec<(uint, uint)>>(),\n               vec![(1u, 2u), (3, 4)]);\n}\n```\n\ncc @nikomatsakis \n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/14919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/14919/timeline", "performed_via_github_app": null, "state_reason": "completed"}