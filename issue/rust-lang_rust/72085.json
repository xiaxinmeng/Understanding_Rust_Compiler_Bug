{"url": "https://api.github.com/repos/rust-lang/rust/issues/72085", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72085/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72085/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72085/events", "html_url": "https://github.com/rust-lang/rust/issues/72085", "id": 615419897, "node_id": "MDU6SXNzdWU2MTU0MTk4OTc=", "number": 72085, "title": "`Iterator::unzip` not zero cost", "user": {"login": "ThouCheese", "id": 20339680, "node_id": "MDQ6VXNlcjIwMzM5Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/20339680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThouCheese", "html_url": "https://github.com/ThouCheese", "followers_url": "https://api.github.com/users/ThouCheese/followers", "following_url": "https://api.github.com/users/ThouCheese/following{/other_user}", "gists_url": "https://api.github.com/users/ThouCheese/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThouCheese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThouCheese/subscriptions", "organizations_url": "https://api.github.com/users/ThouCheese/orgs", "repos_url": "https://api.github.com/users/ThouCheese/repos", "events_url": "https://api.github.com/users/ThouCheese/events{/privacy}", "received_events_url": "https://api.github.com/users/ThouCheese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-05-10T15:50:35Z", "updated_at": "2020-06-23T11:51:57Z", "closed_at": "2020-06-23T11:51:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my attempt to move some code to a more functional style I found that the performance regressed significantly. I have narrowed this regression down to the `Iterator::unzip` function.\r\n\r\nI tried this code:\r\n```rust\r\nextern crate test;\r\nuse test::{Bencher, black_box};\r\n\r\nfn run_functional(l: &Vec<(usize, usize)>) -> (Vec<usize>, Vec<usize>) {\r\n    l.iter().copied().unzip()\r\n}\r\n\r\nfn run_imperative(l: &Vec<(usize, usize)>) -> (Vec<usize>, Vec<usize>) {\r\n    let len = l.len();\r\n    let (mut result1, mut result2) = (Vec::with_capacity(len), Vec::with_capacity(len));\r\n    for item in l.iter().copied() {\r\n        result1.push(item.0);\r\n        result2.push(item.1);\r\n    }\r\n    (result1, result2)\r\n}\r\n\r\n#[bench]\r\nfn bench_functional(b: &mut Bencher) {\r\n    let list = black_box(vec![(1, 2); 256]);\r\n    b.iter(|| run_functional(&list));\r\n}\r\n\r\n#[bench]\r\nfn bench_imperative(b: &mut Bencher) {\r\n    let list = black_box(vec![(1, 2); 256]);\r\n    b.iter(|| run_imperative(&list));\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\nI expect these benchmarks to yield the same results, since they both attempt to do the same thing.\r\n\r\nInstead, this happened:\r\nThe benchmark results are:\r\n```\r\ntest bench_functional ... bench:       1,440 ns/iter (+/- 66)\r\ntest bench_imperative ... bench:         443 ns/iter (+/- 43)\r\n```\r\nFrom what I can tell from reading the code in the standard library, there are two reasons why the imperative style loop is so much faster. The imperative version uses `Vec::push` instead of `Extend::extend`. Here push is significantly faster. The rest of the difference comes from the fact that the vectors are initialized using `with_capacity`, whereas the functional variant seems to reallocate. I get the same performance when I change my imperative code to this:\r\n```rust\r\nfn run_imperative(l: &Vec<(usize, usize)>) -> (Vec<usize>, Vec<usize>) {\r\n    let (mut result1, mut result2) = (Vec::new(), Vec::new());\r\n    for item in l.iter().copied() {\r\n        result1.extend(Some(item.0));\r\n        result2.extend(Some(item.1));\r\n    }\r\n    (result1, result2)\r\n}\r\n```\r\n[Link](https://www.reddit.com/r/rust/comments/ggy0fa/unzip_function_slow/) to the Reddit thread, with a faster but hacky implementation from u/SkiFire13\r\n### Meta\r\nI have reproduced this issue on the latest nightly compiler (as of writing):\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.45.0-nightly (bad3bf622 2020-05-09)\r\nbinary: rustc\r\ncommit-hash: bad3bf622bded50a97c0a54e29350eada2a3a169\r\ncommit-date: 2020-05-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.45.0-nightly\r\nLLVM version: 9.0\r\n```", "closed_by": {"login": "ThouCheese", "id": 20339680, "node_id": "MDQ6VXNlcjIwMzM5Njgw", "avatar_url": "https://avatars.githubusercontent.com/u/20339680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThouCheese", "html_url": "https://github.com/ThouCheese", "followers_url": "https://api.github.com/users/ThouCheese/followers", "following_url": "https://api.github.com/users/ThouCheese/following{/other_user}", "gists_url": "https://api.github.com/users/ThouCheese/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThouCheese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThouCheese/subscriptions", "organizations_url": "https://api.github.com/users/ThouCheese/orgs", "repos_url": "https://api.github.com/users/ThouCheese/repos", "events_url": "https://api.github.com/users/ThouCheese/events{/privacy}", "received_events_url": "https://api.github.com/users/ThouCheese/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72085/timeline", "performed_via_github_app": null, "state_reason": "completed"}