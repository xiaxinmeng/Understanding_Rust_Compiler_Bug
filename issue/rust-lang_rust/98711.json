{"url": "https://api.github.com/repos/rust-lang/rust/issues/98711", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98711/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98711/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98711/events", "html_url": "https://github.com/rust-lang/rust/issues/98711", "id": 1290172256, "node_id": "I_kwDOAAsO6M5M5ndg", "number": 98711, "title": "incorrect resolutions for type dependent paths in struct expression", "user": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-30T13:52:26Z", "updated_at": "2022-11-14T09:37:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\ntrait Foo: Sized {\r\n    type Output;\r\n\r\n    fn func() -> Self;\r\n}\r\n\r\nstruct Type<T> { value: T }\r\n\r\nimpl<T: Default> Foo for Type<T> {\r\n    type Output = Self;\r\n\r\n    fn func() -> Self {\r\n        Self::Output { value: Default::default() }\r\n    }\r\n}\r\n```\r\nstores the following resolution for `Self::Output` via `fn write_resolution`:\r\n\r\n```rust\r\nOk((AssocTy, DefId(0:4 ~ test1[f74d]::Foo::Output)))\r\n```\r\n\r\nthe `node_substs` for `Self::Output` are however empty. This makes the stored resolution completely useless as there isn't really a way to go from `Foo::Output` to `Type<T>::Output` which is what we actually need.\r\n\r\nWe should probably store `<Foo as Type<T>>::Output` instead. This happens here https://github.com/rust-lang/rust/blob/7425fb293f510a6f138e82a963a3bc599a5b9e1c/compiler/rustc_typeck/src/check/fn_ctxt/checks.rs#L1592-L1605", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98711/timeline", "performed_via_github_app": null, "state_reason": null}