{"url": "https://api.github.com/repos/rust-lang/rust/issues/112337", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112337/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112337/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112337/events", "html_url": "https://github.com/rust-lang/rust/issues/112337", "id": 1743166946, "node_id": "I_kwDOAAsO6M5n5p3i", "number": 112337, "title": "The ref to *const implicit conversion has become a footgun with e.g. Rc::from_raw", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2352122097, "node_id": "MDU6TGFiZWwyMzUyMTIyMDk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-discussion", "name": "C-discussion", "color": "f5f1fd", "default": false, "description": "Category: Discussion or questions that doesn't represent real issues."}, {"id": 5226679137, "node_id": "LA_kwDOAAsO6M8AAAABN4jLYQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-opsem", "name": "T-opsem", "color": "bfd4f2", "default": false, "description": "Relevant to the opsem team"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2023-06-06T06:22:52Z", "updated_at": "2023-06-06T10:43:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code does nothing in practice (no strong reference added to the Rc) with 1.70 or earlier versions compiled against LLVM 16.\r\n\r\n```rust\r\nuse std::rc::Rc;\r\nuse std::mem;\r\n\r\npub struct Foo;\r\n\r\npub unsafe extern \"C\" fn addref(f: &Foo) {\r\n    let raw = Rc::from_raw(f);\r\n    mem::forget(Rc::clone(&raw));\r\n    mem::forget(raw);\r\n}\r\n```\r\n\r\nThe corresponding (release) IR, per the playground:\r\n```\r\ndefine void @_ZN10playground6addref17h4ebcfc6cc7bb1438E(ptr noalias noundef nonnull readonly align 1 %f) unnamed_addr #0 personality ptr @rust_eh_personality {\r\nstart:\r\n  %0 = getelementptr inbounds i8, ptr %f, i64 -16\r\n  %self.val.i = load i64, ptr %0, align 8, !noundef !2\r\n  %_3.i = icmp ne i64 %self.val.i, 0\r\n  tail call void @llvm.assume(i1 %_3.i)\r\n  %_10.i = icmp eq i64 %self.val.i, -1\r\n  br i1 %_10.i, label %bb4.i, label %bb6\r\n\r\nbb4.i:                                            ; preds = %start\r\n  tail call void @llvm.trap()\r\n  unreachable\r\n\r\nbb6:                                              ; preds = %start\r\n  ret void\r\n}\r\n```\r\n\r\nChanging the ref to a *const \"fixes\" the problem.\r\n\r\n```rust\r\nuse std::rc::Rc;\r\nuse std::mem;\r\n\r\npub struct Foo;\r\n\r\npub unsafe extern \"C\" fn addref(f: *const Foo) {\r\n    let raw = Rc::from_raw(f);\r\n    mem::forget(Rc::clone(&raw));\r\n    mem::forget(raw);\r\n}\r\n```\r\n\r\nIR looks like this:\r\n```\r\ndefine void @_ZN10playground6addref17h3157527175b7319bE(ptr noundef %f) unnamed_addr #0 personality ptr @rust_eh_personality {\r\nstart:\r\n  %0 = getelementptr inbounds i8, ptr %f, i64 -16\r\n  %self.val.i = load i64, ptr %0, align 8, !noundef !2\r\n  %_3.i = icmp ne i64 %self.val.i, 0\r\n  tail call void @llvm.assume(i1 %_3.i)\r\n  %strong1.i = add i64 %self.val.i, 1\r\n  store i64 %strong1.i, ptr %0, align 8\r\n  %_10.i = icmp eq i64 %strong1.i, 0\r\n  br i1 %_10.i, label %bb4.i, label %bb6\r\n\r\nbb4.i:                                            ; preds = %start\r\n  tail call void @llvm.trap()\r\n  unreachable\r\n\r\nbb6:                                              ; preds = %start\r\n  ret void\r\n}\r\n```\r\n\r\nHere, the Rc is updated with a new strong reference.\r\n\r\nThis is another footgun that comes from https://github.com/llvm/llvm-project/commit/01859da84bad95fd51d6a03b08b60c660e642a4f, along with #111229.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112337/timeline", "performed_via_github_app": null, "state_reason": null}