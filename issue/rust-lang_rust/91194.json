{"url": "https://api.github.com/repos/rust-lang/rust/issues/91194", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91194/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91194/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91194/events", "html_url": "https://github.com/rust-lang/rust/issues/91194", "id": 1062847479, "node_id": "I_kwDOAAsO6M4_WcP3", "number": 91194, "title": "Compiler cannot remove unneccessary loop in case of unwrap_unchecked and Vec collect() optimization", "user": {"login": "AngelicosPhosphoros", "id": 13154246, "node_id": "MDQ6VXNlcjEzMTU0MjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/13154246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngelicosPhosphoros", "html_url": "https://github.com/AngelicosPhosphoros", "followers_url": "https://api.github.com/users/AngelicosPhosphoros/followers", "following_url": "https://api.github.com/users/AngelicosPhosphoros/following{/other_user}", "gists_url": "https://api.github.com/users/AngelicosPhosphoros/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngelicosPhosphoros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngelicosPhosphoros/subscriptions", "organizations_url": "https://api.github.com/users/AngelicosPhosphoros/orgs", "repos_url": "https://api.github.com/users/AngelicosPhosphoros/repos", "events_url": "https://api.github.com/users/AngelicosPhosphoros/events{/privacy}", "received_events_url": "https://api.github.com/users/AngelicosPhosphoros/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-11-24T20:01:24Z", "updated_at": "2021-11-24T23:35:15Z", "closed_at": "2021-11-24T23:35:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\npub fn unwrap_all(vv: Vec<Option<Box<i32>>>)->Vec<Box<i32>>{\r\n    vv\r\n        .into_iter()\r\n        .map(|x| unsafe{\r\n            x.unwrap_unchecked()\r\n        })\r\n        .collect()\r\n}\r\n```\r\n\r\nI expected to see this happen: code compiles into noop essentially, like transmute.\r\n<details><summary>Expected code</summary>\r\n\r\n```asm\r\nexample::unwrap_all_transmute:\r\n        mov     rax, rdi\r\n        mov     rcx, qword ptr [rsi + 16]\r\n        mov     qword ptr [rdi + 16], rcx\r\n        movups  xmm0, xmmword ptr [rsi]\r\n        movups  xmmword ptr [rdi], xmm0\r\n        ret\r\n```\r\n\r\n</details>\r\n\r\n\r\n\r\nInstead, this happened: code iterates over the vec without toching real backing buffer. This is a loop without side effects so it should be removed by LLVM.\r\n\r\n<details><summary>Generated code</summary>\r\n\r\n```asm\r\n\r\nexample::unwrap_all:\r\n        mov     rax, rdi\r\n        mov     rcx, qword ptr [rsi]\r\n        mov     r8, qword ptr [rsi + 8]\r\n        mov     rdi, qword ptr [rsi + 16]\r\n        mov     rsi, rcx\r\n        test    rdi, rdi\r\n        je      .LBB0_8\r\n        lea     r9, [8*rdi - 8]\r\n        mov     edx, r9d\r\n        shr     edx, 3\r\n        add     edx, 1\r\n        and     rdx, 7\r\n        je      .LBB0_2\r\n        neg     rdx\r\n        mov     rsi, rcx\r\n.LBB0_4:\r\n        add     rsi, 8\r\n        inc     rdx\r\n        jne     .LBB0_4\r\n        cmp     r9, 56\r\n        jae     .LBB0_6\r\n        jmp     .LBB0_8\r\n.LBB0_2:\r\n        mov     rsi, rcx\r\n        cmp     r9, 56\r\n        jb      .LBB0_8\r\n.LBB0_6:\r\n        lea     rdx, [rcx + 8*rdi]\r\n.LBB0_7:\r\n        add     rsi, 64\r\n        cmp     rsi, rdx\r\n        jne     .LBB0_7\r\n.LBB0_8:\r\n        sub     rsi, rcx\r\n        sar     rsi, 3\r\n        mov     qword ptr [rax], rcx\r\n        mov     qword ptr [rax + 8], r8\r\n        mov     qword ptr [rax + 16], rsi\r\n        ret\r\n\r\n```\r\n</details>\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0-nightly (936f2600b 2021-11-22)\r\n```\r\n\r\n[Godbolt link with code](https://godbolt.org/#g:!((g:!((g:!((h:codeEditor,i:(filename:'1',fontScale:14,fontUsePx:'0',j:2,lang:rust,selection:(endColumn:28,endLineNumber:10,positionColumn:28,positionLineNumber:10,selectionStartColumn:28,selectionStartLineNumber:10,startColumn:28,startLineNumber:10),source:'pub+fn+unwrap_all(vv:+Vec%3COption%3CBox%3Ci32%3E%3E%3E)-%3EVec%3CBox%3Ci32%3E%3E%7B%0A++++vv%0A++++++++.into_iter()%0A++++++++.map(%7Cx%7C+unsafe%7B%0A++++++++++++x.unwrap_unchecked()%0A++++++++%7D)%0A++++++++.collect()%0A%7D%0A%0Apub+fn+unwrap_all_transmute(vv:+Vec%3COption%3CBox%3Ci32%3E%3E%3E)-%3EVec%3CBox%3Ci32%3E%3E%7B%0A++++unsafe%7Bstd::mem::transmute(vv)%7D%0A%7D%0A'),l:'5',n:'0',o:'Rust+source+%232',t:'0')),header:(),k:49.22784727934294,l:'4',m:100,n:'0',o:'',s:0,t:'0'),(g:!((h:compiler,i:(compiler:nightly,filters:(b:'0',binary:'1',commentOnly:'0',demangle:'0',directives:'0',execute:'1',intel:'0',libraryCode:'0',trim:'1'),flagsViewOpen:'1',fontScale:14,fontUsePx:'0',j:1,lang:rust,libs:!(),options:'-Copt-level%3D3',selection:(endColumn:1,endLineNumber:1,positionColumn:1,positionLineNumber:1,selectionStartColumn:1,selectionStartLineNumber:1,startColumn:1,startLineNumber:1),source:2,tree:'1'),l:'5',n:'0',o:'rustc+nightly+(Rust,+Editor+%232,+Compiler+%231)',t:'0')),header:(),k:50.772152720657076,l:'4',m:100,n:'0',o:'',s:0,t:'0')),l:'2',n:'0',o:'',t:'0')),version:4)\r\n", "closed_by": {"login": "AngelicosPhosphoros", "id": 13154246, "node_id": "MDQ6VXNlcjEzMTU0MjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/13154246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngelicosPhosphoros", "html_url": "https://github.com/AngelicosPhosphoros", "followers_url": "https://api.github.com/users/AngelicosPhosphoros/followers", "following_url": "https://api.github.com/users/AngelicosPhosphoros/following{/other_user}", "gists_url": "https://api.github.com/users/AngelicosPhosphoros/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngelicosPhosphoros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngelicosPhosphoros/subscriptions", "organizations_url": "https://api.github.com/users/AngelicosPhosphoros/orgs", "repos_url": "https://api.github.com/users/AngelicosPhosphoros/repos", "events_url": "https://api.github.com/users/AngelicosPhosphoros/events{/privacy}", "received_events_url": "https://api.github.com/users/AngelicosPhosphoros/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91194/timeline", "performed_via_github_app": null, "state_reason": "completed"}