{"url": "https://api.github.com/repos/rust-lang/rust/issues/93726", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93726/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93726/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93726/events", "html_url": "https://github.com/rust-lang/rust/issues/93726", "id": 1125464073, "node_id": "I_kwDOAAsO6M5DFTgJ", "number": 93726, "title": "Error Message for Trait Use Declaration with Rc<RefCell>", "user": {"login": "yusuphisms", "id": 13903071, "node_id": "MDQ6VXNlcjEzOTAzMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/13903071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yusuphisms", "html_url": "https://github.com/yusuphisms", "followers_url": "https://api.github.com/users/yusuphisms/followers", "following_url": "https://api.github.com/users/yusuphisms/following{/other_user}", "gists_url": "https://api.github.com/users/yusuphisms/gists{/gist_id}", "starred_url": "https://api.github.com/users/yusuphisms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yusuphisms/subscriptions", "organizations_url": "https://api.github.com/users/yusuphisms/orgs", "repos_url": "https://api.github.com/users/yusuphisms/repos", "events_url": "https://api.github.com/users/yusuphisms/events{/privacy}", "received_events_url": "https://api.github.com/users/yusuphisms/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-02-07T03:32:41Z", "updated_at": "2022-02-07T03:32:41Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nuse std::cell::RefCell;\r\nuse std::rc::Rc;\r\nuse std::borrow::BorrowMut;\r\n\r\ntype NodeAlias = Option<Rc<RefCell<Node>>>;\r\n\r\n#[derive(Clone, Debug, PartialEq)]\r\nstruct Node {\r\n    value: String,\r\n    next: NodeAlias,\r\n}\r\n\r\n#[derive(Clone, Debug, PartialEq)]\r\nstruct TransactionLog {\r\n    head: NodeAlias,\r\n    tail: NodeAlias,\r\n    length: i32,\r\n}\r\n\r\nimpl Node {\r\n    fn new(value: String) -> Rc<RefCell<Node>> {\r\n        Rc::new(RefCell::new(Node { value, next: None }))\r\n    }\r\n}\r\n\r\nimpl TransactionLog {\r\n    pub fn empty_list() -> TransactionLog {\r\n        TransactionLog {\r\n            head: None,\r\n            tail: None,\r\n            length: 0,\r\n        }\r\n    }\r\n\r\n    pub fn append(&mut self, value: String) {\r\n        let node = Node::new(value);\r\n        match self.tail.take() {\r\n            Some(old_tail) => old_tail.borrow_mut().next = Some(node.clone()),\r\n            None => self.head = Some(node.clone()),\r\n        }\r\n        self.length += 1;\r\n        self.tail = Some(node);\r\n    }\r\n}\r\n\r\n```\r\n\r\nThe current build output is:\r\n\r\n```\r\nerror[[E0609]](https://doc.rust-lang.org/stable/error-index.html#E0609): no field `next` on type `&mut Rc<RefCell<Node>>`\r\n  --> src/lib.rs:38:53\r\n   |\r\n38 |             Some(old_tail) => old_tail.borrow_mut().next = Some(node.clone()),\r\n   |                                                     ^^^^ unknown field\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\n\r\nI received this output because I somehow got my IDE to include the `use std::borrow::BorrowMut;` statement. When that statement is _removed_, the code is able to compile without errors. I'm working off of the book, [Data Structures with Rust from Packt.](https://github.com/PacktPublishing/Hands-On-Data-Structures-and-Algorithms-with-Rust/blob/master/Chapter04/src/singly_linked_list.rs) \r\n\r\nI'm still learning Rust so I don't know if this is necessarily not clear and that a more experienced Rustacean wouldn't recognize what the compiler is trying to tell them here. I was confused because I know the field `next` exists. And I did some manual tests so I knew the compiler also knew the field existed. I use VS Code, and one thing I noticed is that when I hover over `borrow_mut` when the trait is _not_ active,  the type suggests that it's using RefCell's implementation. When the trait is active, it's unclear. I _think_ there's something going on with [how the dot operator works](https://users.rust-lang.org/t/how-to-properly-use-dereferencing-mechanism/55033/2) as well, but since I'm just learning Rc and RefCell usage, it's a bit of a guessing game right now.\r\n\r\nAll in all, I guessed something was wrong when it seemed like it wasn't using RefCell's implementation, but I would not have thought it was due to a misplaced `use` declaration.\r\n\r\n![image](https://user-images.githubusercontent.com/13903071/152717001-50f732b8-b993-4615-bb36-3d32c1cf813d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/13903071/152717171-5b2aa21f-c493-4acf-86c5-87a16a02f3b9.png)\r\n\r\nThis seems to persist between editions and stable/nightly toolchains.\r\n\r\nFirst time submitting these, so open to feedback on how to do better next time as well! Thanks for your hard work -- the error messages have been a joy to work with as I solo learn my way through Rust!\r\n\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93726/timeline", "performed_via_github_app": null, "state_reason": null}