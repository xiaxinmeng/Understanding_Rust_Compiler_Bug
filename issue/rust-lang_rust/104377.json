{"url": "https://api.github.com/repos/rust-lang/rust/issues/104377", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104377/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104377/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104377/events", "html_url": "https://github.com/rust-lang/rust/issues/104377", "id": 1447057014, "node_id": "I_kwDOAAsO6M5WQFZ2", "number": 104377, "title": "Possible Undefined Behavior due to Thin LTO imports", "user": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-11-13T19:46:26Z", "updated_at": "2023-02-21T17:45:01Z", "closed_at": "2023-02-21T17:45:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As part of Thin LTO, functions from one module (or codegen unit, in Rust terms) get imported into other modules. I've observed _**incompatible**_ definitions/declarations get imported:\r\n\r\nAssume we start with (in pseudo-LL) in some module **`X`**:\r\n\r\n```ll\r\ndefine void @outer(ptr noundef %0) {\r\n  call void @inner(ptr noundef %0)\r\n}\r\n\r\ndefine void @inner(ptr noundef %0) { ... }\r\n```\r\n\r\nDead argument elimination comes along and does:\r\n\r\n```ll\r\ndefine void @outer(ptr noundef %0) {\r\n  call void @inner(ptr poison)  ; `noundef` is gone.\r\n}\r\n\r\ndefine void @inner(ptr %0) { ... }  ; `noundef` is gone.\r\n```\r\n\r\nSo far so good. But now Thin LTO comes along and runs on a module **`Y`** that doesn't contain or reference `@outer` at all. Maybe it already contains a\r\n\r\n```ll\r\ndeclare void @inner(ptr noundef %0)\r\n```\r\n\r\nor maybe that gets (transitively) imported from some module **`Z`**. Now suppose that `@outer` also gets (transitively) imported. Suddenly we have in **`Y`**:\r\n\r\n```ll\r\ndefine void @outer(ptr noundef %0) {\r\n  call void @inner(ptr poison)  ; Passing `poison` to `noundef` parameter!\r\n}\r\n\r\ndeclare void @inner(ptr noundef %0)\r\n```\r\n\r\nI have no idea of whether this is a (fundamental) problem with LLVM or with how Rust implements (Thin) LTO.\r\n\r\n---\r\n\r\n_**Note:**_ I've so far only reproduced this with `rustc` compiled against LLVM HEAD, but wanted a tracking issue for further investigations.\r\n\r\n_**Background:**_ https://reviews.llvm.org/D133036 causes `proc_macro` to get miscompiled, leading to `rustc` segfaults. The patch got submitted once a few weeks ago and then rolled back. I noticed at the time, and wanted to preemptively figure out what's going on.\r\n\r\nThat patch eliminates function calls where `undef` (or `poison`) is passed to a parameter when that parameter is marked `noundef`. In the example above, it would eliminate the call to `@inner`.\r\n\r\ncc @nikic", "closed_by": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104377/timeline", "performed_via_github_app": null, "state_reason": "completed"}