{"url": "https://api.github.com/repos/rust-lang/rust/issues/43069", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43069/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43069/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43069/events", "html_url": "https://github.com/rust-lang/rust/issues/43069", "id": 240687064, "node_id": "MDU6SXNzdWUyNDA2ODcwNjQ=", "number": 43069, "title": "Fall back to MSVC link.exe detection if env looks \"misconfigured\"", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 266005765, "node_id": "MDU6TGFiZWwyNjYwMDU3NjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows-msvc", "name": "O-windows-msvc", "color": "6e6ec0", "default": false, "description": "Toolchain: MSVC, Operating system: Windows"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-05T15:21:47Z", "updated_at": "2017-07-28T00:26:40Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Build systems like Firefox tend to want to configure MSVC ahead of time to ensure that compiles use the right compiler/linker. This means that the various env vars corresponding to the `link.exe` invocation will be set *before* rustc is invoked. This in turn currently means that rustc will blindly use this configuration for all invocations of the linker, even if it's actually wrong.\r\n\r\nOne situation where this becomes a problem is when you're cross compiling. For example you may have an `x86_64-pc-windows-msvc` host compiler and then you're compiling to `i686-pc-windows-msvc`. This means that the environment specifies a linker that knows how to create 32-bit executables, but you may need to create 64-bit shared libraries as part of the build process (procedural macros).\r\n\r\nThe compiler should detect this situation and help out. If the environment looks *clearly invalid* for the given target, we should assume that this situation is happening and basically scrub the environment. The compiler would fall back to its own internal detection which should correctly locate a linker. ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43069/timeline", "performed_via_github_app": null, "state_reason": null}