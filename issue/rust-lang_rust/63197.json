{"url": "https://api.github.com/repos/rust-lang/rust/issues/63197", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63197/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63197/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63197/events", "html_url": "https://github.com/rust-lang/rust/issues/63197", "id": 475843794, "node_id": "MDU6SXNzdWU0NzU4NDM3OTQ=", "number": 63197, "title": "Const validation rejects references that might be dangling (but could actually be valid at run-time)", "user": {"login": "axos88", "id": 1281218, "node_id": "MDQ6VXNlcjEyODEyMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1281218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axos88", "html_url": "https://github.com/axos88", "followers_url": "https://api.github.com/users/axos88/followers", "following_url": "https://api.github.com/users/axos88/following{/other_user}", "gists_url": "https://api.github.com/users/axos88/gists{/gist_id}", "starred_url": "https://api.github.com/users/axos88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axos88/subscriptions", "organizations_url": "https://api.github.com/users/axos88/orgs", "repos_url": "https://api.github.com/users/axos88/repos", "events_url": "https://api.github.com/users/axos88/events{/privacy}", "received_events_url": "https://api.github.com/users/axos88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1089771154, "node_id": "MDU6TGFiZWwxMDg5NzcxMTU0", "url": "https://api.github.com/repos/rust-lang/rust/labels/needs-rfc", "name": "needs-rfc", "color": "fceb9f", "default": false, "description": "This change is large or controversial enough that it should have an (e-)RFC accepted before doing it"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 53, "created_at": "2019-08-01T19:11:20Z", "updated_at": "2020-09-15T15:41:41Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Apparently it's undefined behaviour to use:\r\n```\r\nconst gpio: &RegisterBlock = unsafe { (& (*lpc176x5x::GPIO::ptr())) };\r\n```\r\n\r\nbut not undefined to use: \r\n```\r\nfn x() {\r\n  let gpio: &RegisterBlock = unsafe { (& (*lpc176x5x::GPIO::ptr())) };\r\n  (...)\r\n}\r\n```\r\n\r\nwith:\r\n```\r\n    pub const fn ptr() -> *const gpio::RegisterBlock {\r\n        0x2009_c000 as *const _\r\n    }\r\n```\r\n\r\nError message is:\r\n```\r\nerror[E0080]: it is undefined behavior to use this value\r\n  --> src/rtos.rs:27:1\r\n   |\r\n27 | const gpio: &RegisterBlock = unsafe { (& (*lpc176x5x::GPIO::ptr())) };\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered dangling reference (created from integer)\r\n   |\r\n   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\r\n```\r\n\r\nThis is happening on in an embedded envrionment, where there is no MMU, and access to that address is correct.\r\nI'm not sure why it would be undefined to use it as a const, but not undefined to use it as a variable value?\r\nPerpahs it has something to do with the borrow checker not being able to track mutable and unmutable references to that value, but this is an immutable access, so it *should* be fine?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63197/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63197/timeline", "performed_via_github_app": null, "state_reason": null}