{"url": "https://api.github.com/repos/rust-lang/rust/issues/89674", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89674/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89674/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89674/events", "html_url": "https://github.com/rust-lang/rust/issues/89674", "id": 1021329249, "node_id": "I_kwDOAAsO6M484D9h", "number": 89674, "title": "`cargo init`'s boilerplate doesn't work with `?`", "user": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 609101895, "node_id": "MDU6TGFiZWw2MDkxMDE4OTU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-cargo", "name": "T-cargo", "color": "bfd4f2", "default": false, "description": "Relevant to the cargo team, which will review and decide on the PR/issue."}, {"id": 2352122097, "node_id": "MDU6TGFiZWwyMzUyMTIyMDk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-discussion", "name": "C-discussion", "color": "f5f1fd", "default": false, "description": "Category: Discussion or questions that doesn't represent real issues."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-10-08T17:36:44Z", "updated_at": "2023-06-08T08:11:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`cargo init` currently produces boilerplate that looks like this:\r\n\r\n```\r\nfn main() {\r\n    println!(\"Hello, world!\");\r\n}\r\n```\r\n\r\nHowever, if someone starts from this boilerplate and pastes in examples from documentation that use `?`, they'll get an error. main doesn't return Result, so `?` can't be used. [The API guidelines recommend that examples use `?` rather than unwrap](https://rust-lang.github.io/api-guidelines/documentation.html#examples-use--not-try-not-unwrap-c-question-mark).\r\n\r\nAs an example, if someone [tries to paste in this small File example](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=f9533a33c897989ee4c063351ad1839e):\r\n\r\n```\r\nuse std::fs::File;\r\nuse std::io::prelude::*;\r\n\r\nfn main() {\r\n    let mut file = File::create(\"foo.txt\")?;\r\n    file.write_all(b\"Hello, world!\")?;\r\n}\r\n```\r\n\r\nThey get some rather confusing errors (what's FromResidual?):\r\n\r\n```\r\nerror[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\r\n   --> src/main.rs:5:43\r\n    |\r\n4   | / fn main() {\r\n5   | |     let mut file = File::create(\"foo.txt\")?;\r\n    | |                                           ^ cannot use the `?` operator in a function that returns `()`\r\n6   | |     file.write_all(b\"Hello, world!\")?;\r\n7   | | }\r\n    | |_- this function should return `Result` or `Option` to accept `?`\r\n    |\r\n    = help: the trait `FromResidual<Result<Infallible, std::io::Error>>` is not implemented for `()`\r\nnote: required by `from_residual`\r\n   --> /home/jsha/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/try_trait.rs:339:5\r\n    |\r\n339 |     fn from_residual(residual: R) -> Self;\r\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\r\n   --> src/main.rs:6:37\r\n    |\r\n4   | / fn main() {\r\n5   | |     let mut file = File::create(\"foo.txt\")?;\r\n6   | |     file.write_all(b\"Hello, world!\")?;\r\n    | |                                     ^ cannot use the `?` operator in a function that returns `()`\r\n7   | | }\r\n    | |_- this function should return `Result` or `Option` to accept `?`\r\n    |\r\n    = help: the trait `FromResidual<Result<Infallible, std::io::Error>>` is not implemented for `()`\r\nnote: required by `from_residual`\r\n   --> /home/jsha/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/try_trait.rs:339:5\r\n    |\r\n339 |     fn from_residual(residual: R) -> Self;\r\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n\r\nThis is a problem I remember running into when I was first learning the language. I suspect it may be an issue for other language learners too.\r\n\r\nI propose changing the boilerplate to:\r\n\r\n```\r\nuse std::error::Error;\r\n\r\nfn main() -> Result<(), Box<dyn Error>> {\r\n    println!(\"Hello, world!\");\r\n    Ok(())\r\n}\r\n```\r\n\r\nThis compiles cleanly and passes clippy.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89674/timeline", "performed_via_github_app": null, "state_reason": null}