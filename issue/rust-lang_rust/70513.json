{"url": "https://api.github.com/repos/rust-lang/rust/issues/70513", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70513/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70513/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70513/events", "html_url": "https://github.com/rust-lang/rust/issues/70513", "id": 589668086, "node_id": "MDU6SXNzdWU1ODk2NjgwODY=", "number": 70513, "title": "Severe compilation time blowup in typeck_tables_of", "user": {"login": "syntacticsugarglider", "id": 25019299, "node_id": "MDQ6VXNlcjI1MDE5Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/25019299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syntacticsugarglider", "html_url": "https://github.com/syntacticsugarglider", "followers_url": "https://api.github.com/users/syntacticsugarglider/followers", "following_url": "https://api.github.com/users/syntacticsugarglider/following{/other_user}", "gists_url": "https://api.github.com/users/syntacticsugarglider/gists{/gist_id}", "starred_url": "https://api.github.com/users/syntacticsugarglider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syntacticsugarglider/subscriptions", "organizations_url": "https://api.github.com/users/syntacticsugarglider/orgs", "repos_url": "https://api.github.com/users/syntacticsugarglider/repos", "events_url": "https://api.github.com/users/syntacticsugarglider/events{/privacy}", "received_events_url": "https://api.github.com/users/syntacticsugarglider/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-28T22:00:23Z", "updated_at": "2021-03-09T05:19:27Z", "closed_at": "2021-03-09T05:19:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This simple test of a codegen macro from [protocol](https://github.com/noocene/protocol) using a transport from [protocol-mve-transport](https://github.com/noocene/protocol-mve-transport) takes an unreasonable amount of time to compile. `protocol` itself takes 4 to 5 minutes to compile on my laptop but compiling this simple example takes up to 20 minutes on the same hardware, and that's with a lot of the macro expansion in `protocol` disabled to reduce the time spent. `-Z self-profile` indicates that time is overwhelmingly (> 90%) spent as self time in `typeck_tables_of` for this main function under `collect_mod_item_types` etc.\r\n\r\n```rust\r\nuse core::fmt::{self, Display, Formatter};\r\nuse core_error::Error;\r\nuse futures::{channel::mpsc::unbounded, executor::LocalPool, task::LocalSpawnExt, StreamExt};\r\nuse protocol::protocol;\r\nuse protocol_mve_transport::{Coalesce, Unravel};\r\nuse void::Void;\r\n\r\n#[protocol]\r\n#[derive(Debug)]\r\npub struct Unit;\r\n\r\n#[protocol]\r\n#[derive(Debug)]\r\npub struct Newtype(u16);\r\n\r\n#[protocol]\r\n#[derive(Debug)]\r\npub struct Tuple(Vec<String>, u8, Newtype);\r\n\r\n#[protocol]\r\n#[derive(Debug)]\r\npub struct Test {\r\n    data: u8,\r\n    other: String,\r\n    unit: Unit,\r\n    tuple: Tuple,\r\n}\r\n\r\nfn main() {\r\n    let mut pool = LocalPool::new();\r\n\r\n    let s = pool.spawner();\r\n    let spawner = s.clone();\r\n\r\n    let (a_sender, a_receiver) = unbounded();\r\n    let (b_sender, b_receiver) = unbounded();\r\n\r\n    s.spawn_local(async move {\r\n        Unravel::<Void, _, _, _, Test>::new(\r\n            a_receiver.map(Ok::<Vec<u8>, Void>),\r\n            b_sender,\r\n            spawner,\r\n            Test {\r\n                data: 10,\r\n                other: \"hello\".to_owned(),\r\n                unit: Unit,\r\n                tuple: Tuple(\r\n                    [\"there\", \"general\", \"kenoi\"]\r\n                        .iter()\r\n                        .cloned()\r\n                        .map(String::from)\r\n                        .collect(),\r\n                    5,\r\n                    Newtype(20),\r\n                ),\r\n            },\r\n        )\r\n        .await\r\n        .unwrap();\r\n    })\r\n    .unwrap();\r\n\r\n    let spawner = s.clone();\r\n\r\n    s.spawn_local(async move {\r\n        let data = Coalesce::<_, _, _, _, Test>::new(\r\n            b_receiver.map(Ok::<Vec<u8>, Void>),\r\n            a_sender,\r\n            spawner,\r\n        );\r\n        println!(\"{:?}\", data.await.unwrap())\r\n    })\r\n    .unwrap();\r\n\r\n    pool.run();\r\n}\r\n```\r\n\r\nUnfortunately, there isn't a lot that I can do to reduce this as I have no idea what the underlying factors are that would lead to this occurring. I have a very limited understanding of incremental compilation or what individual queries are responsible for. If any logs, profile traces, etc. would be helpful please let me know and I will provide them.", "closed_by": {"login": "syntacticsugarglider", "id": 25019299, "node_id": "MDQ6VXNlcjI1MDE5Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/25019299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syntacticsugarglider", "html_url": "https://github.com/syntacticsugarglider", "followers_url": "https://api.github.com/users/syntacticsugarglider/followers", "following_url": "https://api.github.com/users/syntacticsugarglider/following{/other_user}", "gists_url": "https://api.github.com/users/syntacticsugarglider/gists{/gist_id}", "starred_url": "https://api.github.com/users/syntacticsugarglider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syntacticsugarglider/subscriptions", "organizations_url": "https://api.github.com/users/syntacticsugarglider/orgs", "repos_url": "https://api.github.com/users/syntacticsugarglider/repos", "events_url": "https://api.github.com/users/syntacticsugarglider/events{/privacy}", "received_events_url": "https://api.github.com/users/syntacticsugarglider/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70513/timeline", "performed_via_github_app": null, "state_reason": "completed"}