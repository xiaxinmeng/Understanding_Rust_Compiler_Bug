{"url": "https://api.github.com/repos/rust-lang/rust/issues/87755", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87755/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87755/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87755/events", "html_url": "https://github.com/rust-lang/rust/issues/87755", "id": 960116388, "node_id": "MDU6SXNzdWU5NjAxMTYzODg=", "number": 87755, "title": "Overflow evaluating the requirement with a where clause on associated type", "user": {"login": "bugaevc", "id": 10091584, "node_id": "MDQ6VXNlcjEwMDkxNTg0", "avatar_url": "https://avatars.githubusercontent.com/u/10091584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugaevc", "html_url": "https://github.com/bugaevc", "followers_url": "https://api.github.com/users/bugaevc/followers", "following_url": "https://api.github.com/users/bugaevc/following{/other_user}", "gists_url": "https://api.github.com/users/bugaevc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugaevc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugaevc/subscriptions", "organizations_url": "https://api.github.com/users/bugaevc/orgs", "repos_url": "https://api.github.com/users/bugaevc/repos", "events_url": "https://api.github.com/users/bugaevc/events{/privacy}", "received_events_url": "https://api.github.com/users/bugaevc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 3307663436, "node_id": "MDU6TGFiZWwzMzA3NjYzNDM2", "url": "https://api.github.com/repos/rust-lang/rust/labels/GATs-triaged", "name": "GATs-triaged", "color": "e88000", "default": false, "description": "Issues using the `generic_associated_types` feature that have been triaged"}, {"id": 3921861239, "node_id": "LA_kwDOAAsO6M7pwtp3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-bug-has-test", "name": "S-bug-has-test", "color": "862eff", "default": false, "description": "A `known-bug` test has been added for this bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-04T09:10:56Z", "updated_at": "2022-03-12T19:03:45Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=f807d82c1774e0e747237c3815b45542)):\r\n\r\n```rust\r\n#![feature(generic_associated_types)]\r\n\r\nuse std::fmt::Debug;\r\n\r\ntrait Foo {\r\n    type Ass where Self::Ass: Debug;\r\n}\r\n\r\n#[derive(Debug)]\r\nstruct Bar;\r\n\r\nimpl Foo for Bar {\r\n    type Ass = Bar;\r\n}\r\n```\r\n\r\nNote that while it doesn't use GATs, it requires `feature(generic_associated_types)` for the `where` clause on the associated type to be allowed.\r\n\r\nI expected to see this happen: this should build without errors.\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror[E0275]: overflow evaluating the requirement `<Bar as Foo>::Ass == _`\r\n  --> src/lib.rs:12:5\r\n   |\r\n12 |     type Ass = Bar;\r\n   |     ^^^^^^^^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\n```\r\n\r\n[Error E0275 explanation](https://doc.rust-lang.org/nightly/error-index.html#E0275) uses this example:\r\n\r\n```rust\r\ntrait Foo {}\r\n\r\nstruct Bar<T>(T);\r\n\r\nimpl<T> Foo for T where Bar<T>: Foo {}\r\n```\r\n\r\nwhere indeed there's a recursive requirement that can't be checked in a small number of steps. Not so in my example: there's no recursion; `Bar` clearly implements `Debug` (and `Foo`).\r\n\r\n@rustbot modify labels: +A-associated-items +F-generic_associated_types", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87755/timeline", "performed_via_github_app": null, "state_reason": null}