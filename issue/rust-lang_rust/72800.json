{"url": "https://api.github.com/repos/rust-lang/rust/issues/72800", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72800/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72800/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72800/events", "html_url": "https://github.com/rust-lang/rust/issues/72800", "id": 627855325, "node_id": "MDU6SXNzdWU2Mjc4NTUzMjU=", "number": 72800, "title": "`SimplifyArmIdentity` can cause use-after-moves in MIR", "user": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-31T00:20:24Z", "updated_at": "2023-01-26T03:10:35Z", "closed_at": "2023-01-26T03:10:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reduced example diff from `<core::slice::Iter<'a, T> as Iterator>::find_map`:\r\n\r\n```diff\r\n-// MIR for `slice::<impl at src/libcore/slice/mod.rs:3293:9: 3475:10>::find_map` before SimplifyArmIdentity\r\n+// MIR for `slice::<impl at src/libcore/slice/mod.rs:3293:9: 3475:10>::find_map` after SimplifyArmIdentity\r\n \r\n fn slice::<impl at src/libcore/slice/mod.rs:3293:9: 3475:10>::find_map(_1: &mut slice::Iter<T>, _2: F) -> option::Option<B> {\r\n     debug self => _1;                    // in scope 0 at src/libcore/slice/mod.rs:3420:31: 3420:40\r\n     debug f => _2;                       // in scope 0 at src/libcore/slice/mod.rs:3420:42: 3420:47\r\n     let mut _0: option::Option<B>;       // return place in scope 0 at src/libcore/slice/mod.rs:3420:55: 3420:64\r\n     let _3: ();                          // in scope 0 at src/libcore/slice/mod.rs:3425:17: 3429:18\r\n     let mut _4: ();                      // in scope 0 at src/libcore/slice/mod.rs:3420:13: 3431:14\r\n     let mut _5: option::Option<&T>;      // in scope 0 at src/libcore/slice/mod.rs:3425:37: 3425:48\r\n     let mut _6: &mut slice::Iter<T>;     // in scope 0 at src/libcore/slice/mod.rs:3425:37: 3425:41\r\n     let mut _7: isize;                   // in scope 0 at src/libcore/slice/mod.rs:3425:27: 3425:34\r\n     let _8: &T;                          // in scope 0 at src/libcore/slice/mod.rs:3425:32: 3425:33\r\n     let mut _9: option::Option<B>;       // in scope 0 at src/libcore/slice/mod.rs:3426:38: 3426:42\r\n     let mut _10: &mut F;                 // in scope 0 at src/libcore/slice/mod.rs:3426:38: 3426:39\r\n     let mut _11: (&T,);                  // in scope 0 at src/libcore/slice/mod.rs:3426:38: 3426:42\r\n     let mut _12: &T;                     // in scope 0 at src/libcore/slice/mod.rs:3426:40: 3426:41\r\n     let mut _13: isize;                  // in scope 0 at src/libcore/slice/mod.rs:3426:28: 3426:35\r\n     let mut _15: !;                      // in scope 0 at src/libcore/slice/mod.rs:3426:43: 3428:22\r\n     let mut _16: B;                      // in scope 0 at src/libcore/slice/mod.rs:3427:37: 3427:38\r\n     let mut _17: !;                      // in scope 0 at src/libcore/slice/mod.rs:3425:17: 3429:18\r\n     let mut _18: isize;                  // in scope 0 at src/libcore/slice/mod.rs:3429:17: 3429:18\r\n     let mut _19: isize;                  // in scope 0 at src/libcore/slice/mod.rs:3429:17: 3429:18\r\n     scope 1 {\r\n         debug x => _8;                   // in scope 1 at src/libcore/slice/mod.rs:3425:32: 3425:33\r\n         let _14: B;                      // in scope 1 at src/libcore/slice/mod.rs:3426:33: 3426:34\r\n         scope 2 {\r\n             debug y => _14;              // in scope 2 at src/libcore/slice/mod.rs:3426:33: 3426:34\r\n         }\r\n     }\r\n \r\n     bb0: {\r\n         StorageLive(_3);                 // scope 0 at src/libcore/slice/mod.rs:3425:17: 3429:18\r\n         goto -> bb1;                     // scope 0 at src/libcore/slice/mod.rs:3425:17: 3429:18\r\n     }\r\n\r\n     // <...>\r\n \r\n     bb7: {\r\n-        StorageLive(_14);                // scope 1 at src/libcore/slice/mod.rs:3426:33: 3426:34\r\n-        _14 = move ((_9 as Some).0: B);  // scope 1 at src/libcore/slice/mod.rs:3426:33: 3426:34\r\n-        StorageLive(_16);                // scope 2 at src/libcore/slice/mod.rs:3427:37: 3427:38\r\n-        _16 = move _14;                  // scope 2 at src/libcore/slice/mod.rs:3427:37: 3427:38\r\n-        ((_0 as Some).0: B) = move _16;  // scope 2 at src/libcore/slice/mod.rs:3427:32: 3427:39\r\n-        discriminant(_0) = 1;            // scope 2 at src/libcore/slice/mod.rs:3427:32: 3427:39\r\n-        StorageDead(_16);                // scope 2 at src/libcore/slice/mod.rs:3427:38: 3427:39\r\n-        StorageDead(_14);                // scope 1 at src/libcore/slice/mod.rs:3428:21: 3428:22\r\n+        _0 = move _9;                    // scope 2 at src/libcore/slice/mod.rs:3427:32: 3427:39\r\n         _18 = discriminant(_9);          // scope 1 at src/libcore/slice/mod.rs:3429:17: 3429:18\r\n         StorageDead(_9);                 // scope 1 at src/libcore/slice/mod.rs:3429:17: 3429:18\r\n         StorageDead(_8);                 // scope 0 at src/libcore/slice/mod.rs:3429:17: 3429:18\r\n         StorageDead(_5);                 // scope 0 at src/libcore/slice/mod.rs:3429:17: 3429:18\r\n         StorageDead(_3);                 // scope 0 at src/libcore/slice/mod.rs:3429:17: 3429:18\r\n         goto -> bb9;                     // scope 0 at src/libcore/slice/mod.rs:3431:13: 3431:14\r\n     }\r\n \r\n     bb9: {\r\n         return;                          // scope 0 at src/libcore/slice/mod.rs:3431:14: 3431:14\r\n     }\r\n }\r\n```\r\n\r\nHere, the `move _9` makes `_9` uninitialized (in `MaybeInitializedLocals`), but the next statement immediately uses it again via `discriminant(_9)`.\r\n\r\nI do not believe that this is currently a soundness issue, as no analyses other than the generator transform (which runs earlier) should rely on this data. It *is* a problem for https://github.com/rust-lang/rust/pull/72632 though, since that runs after `SimplifyArmIdentity`. Granted, the example above is unlikely to be problematic even for that, but other cases might be.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72800/timeline", "performed_via_github_app": null, "state_reason": "completed"}