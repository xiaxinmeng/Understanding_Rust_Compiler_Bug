{"url": "https://api.github.com/repos/rust-lang/rust/issues/65931", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65931/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65931/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65931/events", "html_url": "https://github.com/rust-lang/rust/issues/65931", "id": 513904944, "node_id": "MDU6SXNzdWU1MTM5MDQ5NDQ=", "number": 65931, "title": "LLVM is unable to eliminate bounds checks with widening multiply", "user": {"login": "dhardy", "id": 134893, "node_id": "MDQ6VXNlcjEzNDg5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhardy", "html_url": "https://github.com/dhardy", "followers_url": "https://api.github.com/users/dhardy/followers", "following_url": "https://api.github.com/users/dhardy/following{/other_user}", "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions", "organizations_url": "https://api.github.com/users/dhardy/orgs", "repos_url": "https://api.github.com/users/dhardy/repos", "events_url": "https://api.github.com/users/dhardy/events{/privacy}", "received_events_url": "https://api.github.com/users/dhardy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-29T13:08:55Z", "updated_at": "2021-08-24T20:19:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Demonstration:\r\n```rust\r\npub fn bar(rand: u32, arr: &[u8]) -> u8 {\r\n    let mul = rand as u64 * arr.len() as u64;\r\n    let hi = (mul >> 32) as u32;\r\n    arr[hi as usize]\r\n}\r\n```\r\nNote that `hi` *must* be less than `arr.len()`. LLVM is unable to prove this, and inserts a bounds check on array access. Extract from the [compiled assembly](https://play.rust-lang.org/?version=nightly&mode=release&edition=2015&gist=dbcdcfad186ca1b2fce019397931e007):\r\n```\r\n\timulq\t%rdx, %rsi\r\n\tshrq\t$32, %rsi\r\n\tcmpq\t%rdx, %rsi\r\n\tjae\t.LBB0_2\r\n```\r\n\r\nApplication: https://github.com/rust-random/rand/issues/592\r\n\r\n(Note: we have multiple implementations of widening multiply [here](https://github.com/rust-random/rand/blob/master/src/distributions/utils.rs#L19).)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65931/timeline", "performed_via_github_app": null, "state_reason": null}