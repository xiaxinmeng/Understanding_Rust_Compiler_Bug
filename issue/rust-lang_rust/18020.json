{"url": "https://api.github.com/repos/rust-lang/rust/issues/18020", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18020/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18020/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18020/events", "html_url": "https://github.com/rust-lang/rust/issues/18020", "id": 45698424, "node_id": "MDU6SXNzdWU0NTY5ODQyNA==", "number": 18020, "title": "Pattern matching: both Some(..) and Some(_) work?", "user": {"login": "scribu", "id": 225715, "node_id": "MDQ6VXNlcjIyNTcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/225715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scribu", "html_url": "https://github.com/scribu", "followers_url": "https://api.github.com/users/scribu/followers", "following_url": "https://api.github.com/users/scribu/following{/other_user}", "gists_url": "https://api.github.com/users/scribu/gists{/gist_id}", "starred_url": "https://api.github.com/users/scribu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scribu/subscriptions", "organizations_url": "https://api.github.com/users/scribu/orgs", "repos_url": "https://api.github.com/users/scribu/repos", "events_url": "https://api.github.com/users/scribu/events{/privacy}", "received_events_url": "https://api.github.com/users/scribu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-13T23:54:49Z", "updated_at": "2014-10-14T00:07:01Z", "closed_at": "2014-10-14T00:07:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "In The Rust Guide, in the [Patterns section](http://doc.rust-lang.org/guide.html#patterns), it says:\n\n> If you're matching on an enum which has variants, you can use `..` to ignore the value in the variant:\n\n``` rust\nmatch x {\n    Value(..) => println!(\"Got an int!\"),\n    Missing   => println!(\"No such luck.\"),\n}\n```\n\nbut then in the [Consumers section](http://doc.rust-lang.org/guide.html#consumers), `Some(_)` is used:\n\n``` rust\nmatch greater_than_forty_two {\n    Some(_) => println!(\"We got some numbers!\"),\n    None    => println!(\"No numbers found :(\"),\n}\n```\n\nWhy are both wildcard variants &mdash; `..` and `_` &mdash; allowed? `Some(_)` seems less surprising to me.\n", "closed_by": {"login": "scribu", "id": 225715, "node_id": "MDQ6VXNlcjIyNTcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/225715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scribu", "html_url": "https://github.com/scribu", "followers_url": "https://api.github.com/users/scribu/followers", "following_url": "https://api.github.com/users/scribu/following{/other_user}", "gists_url": "https://api.github.com/users/scribu/gists{/gist_id}", "starred_url": "https://api.github.com/users/scribu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scribu/subscriptions", "organizations_url": "https://api.github.com/users/scribu/orgs", "repos_url": "https://api.github.com/users/scribu/repos", "events_url": "https://api.github.com/users/scribu/events{/privacy}", "received_events_url": "https://api.github.com/users/scribu/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18020/timeline", "performed_via_github_app": null, "state_reason": "completed"}