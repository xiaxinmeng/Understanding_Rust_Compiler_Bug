{"url": "https://api.github.com/repos/rust-lang/rust/issues/39435", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39435/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39435/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39435/events", "html_url": "https://github.com/rust-lang/rust/issues/39435", "id": 204458247, "node_id": "MDU6SXNzdWUyMDQ0NTgyNDc=", "number": 39435, "title": "Incorrect destruction of temporary borrow from `Rc`", "user": {"login": "botev", "id": 1889878, "node_id": "MDQ6VXNlcjE4ODk4Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1889878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/botev", "html_url": "https://github.com/botev", "followers_url": "https://api.github.com/users/botev/followers", "following_url": "https://api.github.com/users/botev/following{/other_user}", "gists_url": "https://api.github.com/users/botev/gists{/gist_id}", "starred_url": "https://api.github.com/users/botev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/botev/subscriptions", "organizations_url": "https://api.github.com/users/botev/orgs", "repos_url": "https://api.github.com/users/botev/repos", "events_url": "https://api.github.com/users/botev/events{/privacy}", "received_events_url": "https://api.github.com/users/botev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-31T23:47:21Z", "updated_at": "2017-02-01T14:16:58Z", "closed_at": "2017-02-01T14:16:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "One problem arising from this issue have been described with code [here](https://users.rust-lang.org/t/double-borrows-drops-temporary-too-early/8991) where temporary variables are dropped too early.\r\n\r\nAnother example, of what I think is the same issue, appears at runtime in the following code:\r\n```\r\nself.to_expr(self.get_mut().parameter(data_type, shape, name)?)\r\n```\r\nWith error:\r\n```\r\nthread 'main' panicked at 'already mutably borrowed: BorrowError', /buildslave/rust-buildbot/slave/nightly-dist-rustc-linux/build/src/libcore/result.rs:870\r\n```\r\nWhile the following code works:\r\n```\r\nlet x = self.get_mut().parameter(data_type, shape, name)?;\r\nself.to_expr(x)\r\n```\r\nIn this example `get_mut` and `to_expr` both borrow the same `Rc`. However, it is unclear why at runtime of the first example does the borrow occur simultaneously? ", "closed_by": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39435/timeline", "performed_via_github_app": null, "state_reason": "completed"}