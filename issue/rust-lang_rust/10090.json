{"url": "https://api.github.com/repos/rust-lang/rust/issues/10090", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10090/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10090/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10090/events", "html_url": "https://github.com/rust-lang/rust/issues/10090", "id": 21639361, "node_id": "MDU6SXNzdWUyMTYzOTM2MQ==", "number": 10090, "title": "Add support for enum variants scoped under their type (`enum mod`)", "user": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2013-10-26T19:17:16Z", "updated_at": "2014-11-17T23:08:41Z", "closed_at": "2013-12-10T19:07:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "# Current situation\n\nRight now, enum types and their variants are scoped at the same level, which means this:\n\n``` rust\nmod foo {\n    enum Speed {\n        Fast,\n        Slow\n    }\n}\n```\n\nleads to these paths:\n\n``` rust\nfoo::Speed;\nfoo::Fast;\nfoo::Slow;\n```\n\nWe will likely not change this, because it often makes working with enums easier, and because many languages with similar enum types work that way.\n# The problem\n\nHowever, the restriction to a flat hierarchy currently leads to a lot of variants getting their type name embedded in the variant name to avoid collisions and/or ambiguity. For example, a random enum picked out of libsyntax reads like this:\n\n``` rust\npub enum Sigil {\n    BorrowedSigil,\n    OwnedSigil,\n    ManagedSigil\n}\n```\n# The possible solution\n\nTo improve this situation, it would be convenient to have a enum declaration syntax for scoping the variants under their type instead, like this:\n\n``` rust\nmod foo {\n    enum mod Speed {\n        Fast,\n        Slow\n    }\n}\n```\n\n``` rust\nfoo::Speed;\nfoo::Speed::Fast;\nfoo::Speed::Slow;\n```\n\nThe above example could then get rewritten to\n\n``` rust\npub enum mod Sigil {\n    Borrowed,\n    Owned,\n    Managed\n}\n```\n\nand get used as `Sigil::Borrowed`, `Sigil::Owned` etc, or directly imported in the local scope if there is no collision.\n# Emulating it\n\nYou can currently kinda emulate it with \n\n``` rust\nmod foo {\n    pub type Speed = self::Speed::Speed;\n    pub mod Speed {\n        pub enum Speed {\n            Fast,\n            Slow\n        }\n    }\n}\n```\n\nbut this is very verbose,  complicated, and creates more definitions and moving parts than necessary.\n# Working example\n\nThis uses the workaround above to show how using such a scoped enum would look like in practice.\n\n``` rust\n#[feature(globs)];\n\nuse foo::Speed;\n\nmod foo {\n    pub type Speed = self::Speed::Speed;\n    pub mod Speed {\n        pub enum Speed {\n            Fast,\n            Slow\n        }\n    }\n}\n\nfn main() {\n    let a: Speed = Speed::Fast;\n    let b: Speed = Speed::Slow;\n\n    match a {\n        Speed::Fast => {}\n        Speed::Slow => {}\n    }\n\n    {\n        use foo::Speed::*;\n        match b {\n            Fast => {}\n            Slow => {}\n        }\n    }\n}\n```\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10090/timeline", "performed_via_github_app": null, "state_reason": "completed"}