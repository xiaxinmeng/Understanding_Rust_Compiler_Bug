{"url": "https://api.github.com/repos/rust-lang/rust/issues/90474", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90474/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90474/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90474/events", "html_url": "https://github.com/rust-lang/rust/issues/90474", "id": 1041324426, "node_id": "I_kwDOAAsO6M4-EVmK", "number": 90474, "title": "\"untyped pointers are not allowed in constant\" diagnostic is unhelpful", "user": {"login": "PatchMixolydic", "id": 8634700, "node_id": "MDQ6VXNlcjg2MzQ3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8634700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatchMixolydic", "html_url": "https://github.com/PatchMixolydic", "followers_url": "https://api.github.com/users/PatchMixolydic/followers", "following_url": "https://api.github.com/users/PatchMixolydic/following{/other_user}", "gists_url": "https://api.github.com/users/PatchMixolydic/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatchMixolydic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatchMixolydic/subscriptions", "organizations_url": "https://api.github.com/users/PatchMixolydic/orgs", "repos_url": "https://api.github.com/users/PatchMixolydic/repos", "events_url": "https://api.github.com/users/PatchMixolydic/events{/privacy}", "received_events_url": "https://api.github.com/users/PatchMixolydic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}, {"id": 2242906716, "node_id": "MDU6TGFiZWwyMjQyOTA2NzE2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-raw-pointers", "name": "A-raw-pointers", "color": "f7e101", "default": false, "description": "Area: raw pointers, MaybeUninit, NonNull"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-01T15:53:07Z", "updated_at": "2021-11-02T12:14:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=5c525f2baa852c78e8fd6d8d1d1f2918)):\r\n```rust\r\nconst FOO: *const Vec<usize> = &Vec::new();\r\n```\r\n\r\nThe current output is:\r\n```\r\nerror: untyped pointers are not allowed in constant\r\n --> src/lib.rs:1:1\r\n  |\r\n1 | const FOO: *const Vec<usize> = &Vec::new();\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nThis diagnostic is fairly opaque (what is an \"untyped pointer\"?) and doesn't provide much help for how to correct the situation. Unfortunately, I'm not certain how the diagnostic could be improved since I'm not entirely sure why it was emitted in the first place (it seems like it has something to do with leaking allocations in consts?).\r\n\r\nHowever, I am aware of a suggestion that can (sometimes) be emitted. Consider the following code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=22c2220374935c566f78c933d04a8b15)):\r\n\r\n```rust\r\n#![feature(\r\n    const_heap,\r\n    const_ptr_is_null,\r\n    const_ptr_read,\r\n    core_intrinsics,\r\n    ptr_internals\r\n)]\r\n\r\nuse std::{alloc::Layout, intrinsics::const_allocate, mem::MaybeUninit, ptr::Unique};\r\n\r\nconst fn _const_alloc_with_layout(layout: Layout) -> *mut u8 {\r\n    unsafe { const_allocate(layout.size(), layout.align()) }\r\n}\r\n\r\nconst _VEC: Unique<MaybeUninit<Vec<usize>>> = unsafe {\r\n    Unique::new_unchecked(\r\n        _const_alloc_with_layout(Layout::new::<Vec<usize>>()) as *mut MaybeUninit<Vec<usize>>\r\n    )\r\n};\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror: untyped pointers are not allowed in constant\r\n  --> src/lib.rs:15:1\r\n   |\r\n15 | / const _VEC: Unique<MaybeUninit<Vec<usize>>> = unsafe {\r\n16 | |     Unique::new_unchecked(\r\n17 | |         _const_alloc_with_layout(Layout::new::<Vec<usize>>()) as *mut MaybeUninit<Vec<usize>>\r\n18 | |     )\r\n19 | | };\r\n   | |__^\r\n```\r\n\r\nSince the pointer is `Send`, there is actually a way to fix this: use a `static` item instead (which might actually be necessary for correctness here). A suggestion could be emitted to this effect:\r\n\r\n```\r\nerror: untyped pointers are not allowed in constant\r\n  --> src/lib.rs:15:1\r\n   |\r\n15 | / const _VEC: Unique<MaybeUninit<Vec<usize>>> = unsafe {\r\n16 | |     Unique::new_unchecked(\r\n17 | |         _const_alloc_with_layout(Layout::new::<Vec<usize>>()) as *mut MaybeUninit<Vec<usize>>\r\n18 | |     )\r\n19 | | };\r\n   | |__^\r\n   |\r\nhelp: you might have meant to use a static\r\n   |\r\n15 ~  static _VEC: Unique<MaybeUninit<Vec<usize>>> = unsafe {\r\n   |\r\n```\r\n\r\n@rustbot modify labels: +A-const-eval +A-raw-pointers +D-confusing +D-terse", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90474/timeline", "performed_via_github_app": null, "state_reason": null}