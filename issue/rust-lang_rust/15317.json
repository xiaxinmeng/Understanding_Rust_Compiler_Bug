{"url": "https://api.github.com/repos/rust-lang/rust/issues/15317", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15317/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15317/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15317/events", "html_url": "https://github.com/rust-lang/rust/issues/15317", "id": 36941607, "node_id": "MDU6SXNzdWUzNjk0MTYwNw==", "number": 15317, "title": "serialize::json is encouraging allocating intermediate buffers", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-01T23:58:15Z", "updated_at": "2015-02-15T18:56:18Z", "closed_at": "2015-02-15T18:55:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `Encodable`/`Decodable` interface is designed to avoid having to allocate everything to intermediate buffers, but `json` is encouraging going via `String`. `serialize::json` has the top level `encode` function returning a `String`, and _all_ the examples use `encode` directly, there's no demonstration of the good direct-to-`Writer` API.\n\nThat is, something like\n\n``` rust\nprintln!(\"{}\", json::encode(&x))\n```\n\ncan be written a little like\n\n``` rust\nencodable.encode(&mut json::Encoder::new(&mut io::stdout()))\n```\n\nIf that is deemed too ugly, I think we should work on fixing the ergonomics of the good version, rather than just leaping straight to the `-> String`  ones (e.g. `json::encode(&mut io::stdout(), &x)` would be nice, and work with `json::encode(&mut some_file, &x)`, `json::encode(&mut some_tcp_stream, &x)`, etc.).\n\ncc @aturon \n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15317/timeline", "performed_via_github_app": null, "state_reason": "completed"}