{"url": "https://api.github.com/repos/rust-lang/rust/issues/101751", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101751/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101751/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101751/events", "html_url": "https://github.com/rust-lang/rust/issues/101751", "id": 1371049522, "node_id": "I_kwDOAAsO6M5RuI4y", "number": 101751, "title": "Can we add a new `StableLintExpectationId` type so we can remove unstable Hash impls", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 3900765862, "node_id": "LA_kwDOAAsO6M7ogPam", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-lint_reasons", "name": "F-lint_reasons", "color": "f9c0cc", "default": false, "description": "`#![feature(lint_reasons)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-09-13T08:18:30Z", "updated_at": "2022-09-13T08:19:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "> Can we add a new `StableLintExpectationId` type so we can statically prevent the `Unstable` case? Then we'd have `enum LintExpectationId { Unstable { attr_id, lint_index }, Stable(StableLintExpectationId) }`, would be a slight pain to rewrite but mostly mechanical.\r\n\r\n> Might make sense to do it for the return type of `normalize()` too so we don't accidentally hash the `attr_id`; that seems worse since it will only invalidate the incremental cache but not be obvious that it's a bug.\r\n\r\n_Originally posted by @jyn514 in https://github.com/rust-lang/rust/pull/101620#discussion_r967552010_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101751/timeline", "performed_via_github_app": null, "state_reason": null}