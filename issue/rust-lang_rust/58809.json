{"url": "https://api.github.com/repos/rust-lang/rust/issues/58809", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58809/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58809/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58809/events", "html_url": "https://github.com/rust-lang/rust/issues/58809", "id": 415648638, "node_id": "MDU6SXNzdWU0MTU2NDg2Mzg=", "number": 58809, "title": "Specialized `FnOnce` impl compiles failed with a lengthy error message", "user": {"login": "mzji", "id": 23279426, "node_id": "MDQ6VXNlcjIzMjc5NDI2", "avatar_url": "https://avatars.githubusercontent.com/u/23279426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzji", "html_url": "https://github.com/mzji", "followers_url": "https://api.github.com/users/mzji/followers", "following_url": "https://api.github.com/users/mzji/following{/other_user}", "gists_url": "https://api.github.com/users/mzji/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzji/subscriptions", "organizations_url": "https://api.github.com/users/mzji/orgs", "repos_url": "https://api.github.com/users/mzji/repos", "events_url": "https://api.github.com/users/mzji/events{/privacy}", "received_events_url": "https://api.github.com/users/mzji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 347795552, "node_id": "MDU6TGFiZWwzNDc3OTU1NTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-specialization", "name": "A-specialization", "color": "f7e101", "default": false, "description": "Area: Trait impl specialization"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1472579062, "node_id": "MDU6TGFiZWwxNDcyNTc5MDYy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-specialization", "name": "F-specialization", "color": "f9c0cc", "default": false, "description": "`#![feature(specialization)]`"}, {"id": 1657845351, "node_id": "MDU6TGFiZWwxNjU3ODQ1MzUx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unboxed_closures", "name": "F-unboxed_closures", "color": "f9c0cc", "default": false, "description": "`#![feature(unboxed_closures)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-28T14:24:58Z", "updated_at": "2020-06-11T17:32:05Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Playground Rustc version:\r\n```\r\n1.34.0-nightly 2019-02-27 7e001e5c6c7c090b4141\r\n```\r\nCode:\r\n```rust\r\n#![feature(unboxed_closures, fn_traits, specialization)]\r\n\r\nuse std::ops::{Deref, FnOnce};\r\n\r\nstruct Foo<T> {\r\n    val: T,\r\n}\r\n\r\ndefault impl<'a, T> FnOnce<()> for &'a Foo<T> {\r\n    type Output = &'a T;\r\n    \r\n    extern \"rust-call\" fn call_once(self, _args: ()) -> Self::Output {\r\n        &self.val\r\n    }\r\n}\r\n\r\nimpl<'a, T: 'a, U: 'a> FnOnce<()> for &'a Foo<T> where T: Deref<Target = U> {\r\n    type Output = &'a U;\r\n    \r\n    extern \"rust-call\" fn call_once(self, _args: ()) -> Self::Output {\r\n        self.val.deref()\r\n    }\r\n}\r\n\r\nfn main() {}\r\n```\r\nError message:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0275]: overflow evaluating the requirement `&Foo<_>: std::ops::FnOnce<()>`\r\n  |\r\n  = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n  = note: required because of the requirements on the impl of `std::ops::FnOnce<()>` for `&Foo<_>`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0275`.\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58809/timeline", "performed_via_github_app": null, "state_reason": null}