{"url": "https://api.github.com/repos/rust-lang/rust/issues/102770", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/102770/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/102770/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/102770/events", "html_url": "https://github.com/rust-lang/rust/issues/102770", "id": 1400828262, "node_id": "I_kwDOAAsO6M5TfvFm", "number": 102770, "title": "Lint: `unused_assignments` lint not triggered when assigning through `Option` on a `Copy` type", "user": {"login": "epbuennig", "id": 103939966, "node_id": "U_kgDOBjH_fg", "avatar_url": "https://avatars.githubusercontent.com/u/103939966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epbuennig", "html_url": "https://github.com/epbuennig", "followers_url": "https://api.github.com/users/epbuennig/followers", "following_url": "https://api.github.com/users/epbuennig/following{/other_user}", "gists_url": "https://api.github.com/users/epbuennig/gists{/gist_id}", "starred_url": "https://api.github.com/users/epbuennig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epbuennig/subscriptions", "organizations_url": "https://api.github.com/users/epbuennig/orgs", "repos_url": "https://api.github.com/users/epbuennig/repos", "events_url": "https://api.github.com/users/epbuennig/events{/privacy}", "received_events_url": "https://api.github.com/users/epbuennig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-10-07T08:40:42Z", "updated_at": "2022-10-09T14:01:29Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When matching over a `&mut Option` and binding the result to a `mut PATTERN` instead of a `ref mut PATTTERN` or `PATTERN`, the resulting pattern is moved out, for copy types this will usually result in an `unused_assignments` lint.\r\n\r\nGiven the following code ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=1a5bc95859328b95d21023136c0c743f)), this doesn't happen, despite the local copy never being read after being assigned.\r\nChanging the Type `A` to not being `Copy` correctly gives an error that the pattern is attempting to move out the value.\r\n\r\n```rust\r\n#[derive(Debug, PartialEq)]\r\nstruct Container(Option<A>);\r\n\r\n#[derive(Debug, Clone, Copy, PartialEq)]\r\nstruct A(Option<i32>);\r\n\r\nimpl Container {\r\n    fn f(&mut self, int: i32) {\r\n        if let Some(mut inner) = &mut self.0 {\r\n            // inner: &mut A\r\n            // mut inner: mut A\r\n            // ref mut inner: &mut A\r\n            // this should trigger a unused_assignments lint as inner is copied out and written but never read\r\n            inner.0 = Some(int);\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut container = Container(Some(A(None)));\r\n    container.f(42);\r\n\r\n    // this fails as the actual variable was not set as expected\r\n    assert_eq!(container, Container(Some(A(Some(42)))));\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.03s\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nwarning: variable `inner` is assigned to, but never used\r\n  --> src/main.rs:9:25\r\n   |\r\n22 |         if let Some(mut inner) = &mut self.0 {\r\n   |                         ^^^^^\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n   = note: consider using `_inner` instead\r\n\r\nwarning: value assigned to `inner.0` is never read\r\n  --> src/main.rs:13:13\r\n   |\r\n23 |            inner.0 = Some(int);\r\n   |            ^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_assignments)]` on by default\r\n   = help: maybe it is overwritten before being read?\r\n\r\nwarning: `playground` (bin \"playground\") generated 2 warnings\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.13s\r\n```\r\nThis was tested on:\r\n```\r\nrustc 1.66.0-nightly (f5193a9fc 2022-09-25)\r\nbinary: rustc\r\ncommit-hash: f5193a9fcc73dc09e41a90c5a2c97fc9acc16032\r\ncommit-date: 2022-09-25\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.0\r\n```\r\nand on:\r\n```\r\nrustc 1.64.0 (a55dd71d5 2022-09-19)\r\nbinary: rustc\r\ncommit-hash: a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\r\ncommit-date: 2022-09-19\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.64.0\r\nLLVM version: 14.0.6\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/102770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/102770/timeline", "performed_via_github_app": null, "state_reason": null}