{"url": "https://api.github.com/repos/rust-lang/rust/issues/88001", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88001/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88001/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88001/events", "html_url": "https://github.com/rust-lang/rust/issues/88001", "id": 970284873, "node_id": "MDU6SXNzdWU5NzAyODQ4NzM=", "number": 88001, "title": "Conversion of `Box<dyn Error + Send + Sync>` to `Box<dyn Error>` confusingly complains about Sized", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-08-13T10:44:42Z", "updated_at": "2021-08-13T11:58:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Playground](https://play.rust-lang.org?gist=69298161b9f89a74838ce718945ff27c)\r\n\r\n```rust\r\nuse std::error::Error;\r\n\r\nfn test() -> Result<(), Box<dyn Error>> {\r\n    err()?;\r\n    Ok(())\r\n}\r\n\r\nfn err() -> Result<(), Box<dyn Error + Send + Sync>> {\r\n    Err(\"\".into())\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0277]: the size for values of type `dyn std::error::Error + Send + Sync` cannot be known at compilation time\r\n --> src/lib.rs:4:10\r\n  |\r\n4 |     err()?;\r\n  |          ^ doesn't have a size known at compile-time\r\n  |\r\n  = help: the trait `Sized` is not implemented for `dyn std::error::Error + Send + Sync`\r\n  = note: required because of the requirements on the impl of `std::error::Error` for `Box<dyn std::error::Error + Send + Sync>`\r\n  = note: required because of the requirements on the impl of `From<Box<dyn std::error::Error + Send + Sync>>` for `Box<dyn std::error::Error>`\r\n  = note: required because of the requirements on the impl of `FromResidual<Result<Infallible, Box<dyn std::error::Error + Send + Sync>>>` for `Result<(), Box<dyn std::error::Error>>`\r\n  = note: required by `from_residual`\r\n```\r\n\r\nNote that the type coercion of these types is allowed, because it's going from `Send` to non-`Send` type.\r\n\r\nThe error also happens if you use `err.into()` directly, but the in practice problem typically appears when using the `?` operator.\r\n\r\nThe error is confusing, because `From` is an internal detail of `?`, and blanket `impl` of `From` for `Box<T>` to `Box<U>` is another internal detail, and then inability of calling `from(dyn T) -> dyn U` is three internal details deep.\r\n\r\nFor usage with `?` the output should look like:\r\n\r\n```\r\n`Box<dyn Error + Send + Sync>` cannot be converted to `Box<dyn Error>` using the `From` trait used by the `?` operator.\r\n  = help: use `match` instead or change the `dyn` types to be the same.\r\n```\r\n\r\nAlternatively, it could focus only on usage with `From`/`.into()` and be like:\r\n\r\n```\r\n`Box<dyn Error + Send + Sync>` cannot be converted to `Box<dyn Error>` using the `From` trait\r\n  = help: use type coercion to convert between these types\r\n```\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88001/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88001/timeline", "performed_via_github_app": null, "state_reason": null}