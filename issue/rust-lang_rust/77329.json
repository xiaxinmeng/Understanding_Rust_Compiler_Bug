{"url": "https://api.github.com/repos/rust-lang/rust/issues/77329", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77329/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77329/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77329/events", "html_url": "https://github.com/rust-lang/rust/issues/77329", "id": 710847830, "node_id": "MDU6SXNzdWU3MTA4NDc4MzA=", "number": 77329, "title": "Stable ICE: assertion failed: `(left == right)`", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133344, "node_id": "MDU6TGFiZWwyNTYxMzMzNDQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-hir", "name": "A-hir", "color": "f7e101", "default": false, "description": "Area: the High level Intermediate Representation (HIR)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2345042521, "node_id": "MDU6TGFiZWwyMzQ1MDQyNTIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/const-generics-blocking", "name": "const-generics-blocking", "color": "3f5dca", "default": false, "description": "An issue blocking the stabilisation of `min_const_generics`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-09-29T07:40:10Z", "updated_at": "2020-10-25T09:23:39Z", "closed_at": "2020-10-25T09:23:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nfn bug<T>() -> impl Iterator<Item = [(); { |x: [u8]| { x } }]> {\r\n    std::iter::empty()\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nrustc 1.47.0-beta.5 (9f0e6fa94 2020-09-29)\r\nrustc 1.48.0-nightly (fc2daaae6 2020-09-28)\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `DefId(0:5 ~ playground[6bea]::bug[0]::{{opaque}}[0])`,\r\n right: `DefId(0:3 ~ playground[6bea]::bug[0])`', src/librustc_middle/hir/map/collector.rs:226:13\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n  Compiling playground v0.0.1 (/playground)\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:530\r\n  12: rust_begin_unwind\r\n             at src/libstd/panicking.rs:437\r\n  13: std::panicking::begin_panic_fmt\r\n             at src/libstd/panicking.rs:391\r\n  14: rustc_middle::hir::map::collector::NodeCollector::insert_entry\r\n  15: <rustc_middle::hir::map::collector::NodeCollector as rustc_hir::intravisit::Visitor>::visit_param\r\n  16: rustc_hir::intravisit::walk_body\r\n  17: rustc_hir::intravisit::walk_expr\r\n  18: rustc_hir::intravisit::walk_block\r\n  19: rustc_hir::intravisit::walk_expr\r\n  20: rustc_hir::intravisit::walk_body\r\n  21: rustc_hir::intravisit::walk_ty\r\n  22: rustc_hir::intravisit::walk_assoc_type_binding\r\n  23: rustc_hir::intravisit::walk_path\r\n  24: rustc_hir::intravisit::Visitor::visit_param_bound\r\n  25: rustc_hir::intravisit::walk_item\r\n  26: <rustc_middle::hir::map::collector::NodeCollector as rustc_hir::intravisit::Visitor>::visit_item\r\n  27: rustc_hir::intravisit::walk_ty\r\n  28: rustc_hir::intravisit::walk_fn\r\n  29: <rustc_middle::hir::map::collector::NodeCollector as rustc_hir::intravisit::Visitor>::visit_fn\r\n  30: rustc_hir::intravisit::walk_item\r\n  31: <rustc_middle::hir::map::collector::NodeCollector as rustc_hir::intravisit::Visitor>::visit_item\r\n  32: rustc_middle::hir::map::index_hir\r\n  33: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  34: rustc_data_structures::stack::ensure_sufficient_stack\r\n  35: rustc_query_system::query::plumbing::get_query_impl\r\n  36: core::ops::function::FnOnce::call_once\r\n  37: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  38: rustc_data_structures::stack::ensure_sufficient_stack\r\n  39: rustc_query_system::query::plumbing::get_query_impl\r\n  40: rustc_middle::hir::map::Map::expect_item\r\n  41: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  42: rustc_passes::hir_id_validator::check_crate\r\n  43: rustc_interface::passes::analysis\r\n  44: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  45: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  46: rustc_query_system::query::plumbing::get_query_impl\r\n  47: rustc_middle::ty::context::tls::enter_global\r\n  48: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  49: rustc_span::with_source_map\r\n  50: rustc_interface::interface::create_compiler_and_run\r\n  51: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0 (04488afe3 2020-08-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [index_hir] index HIR\r\n#1 [hir_owner] HIR owner of `{{misc}}#0`\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `playground`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"lcnr\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77329/timeline", "performed_via_github_app": null, "state_reason": "completed"}