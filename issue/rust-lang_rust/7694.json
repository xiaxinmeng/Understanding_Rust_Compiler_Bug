{"url": "https://api.github.com/repos/rust-lang/rust/issues/7694", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/7694/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/7694/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/7694/events", "html_url": "https://github.com/rust-lang/rust/issues/7694", "id": 16585098, "node_id": "MDU6SXNzdWUxNjU4NTA5OA==", "number": 7694, "title": "Auto-coercing from &T to *T is unsafe", "user": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2013-07-10T15:54:21Z", "updated_at": "2014-09-16T03:56:00Z", "closed_at": "2014-09-16T03:47:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm working on a `*libc::c_char` wrapper library, and I wanted to make sure that people didn't accidentally grab the inner pointer, deallocate the `CStr`, then pass the pointer to a function. I thought this would be a great place to use regions, so instead of returning `*libc::c_char` I returned `&'self libc::c_char`. This works in all cases except for when we auto-coerce from a `&T` to a `*T`.\n\nYou can find a demonstration of this problem in this [gist](https://gist.github.com/erickt/5967320). While `CStr` is full of unsafe code, I believe the interface is safe. The error is demonstrated in the `bar`/`baz` functions. `bar` properly reports that the lifetime of the `&'self libc::c_char` does not live long enough, but `baz` doesn't mention a problem at all.\n\nI can think of a couple options to fixing this:\n- Force users to cast a `&T` to a `*T`. This at least adds a small roadblock force the end user to think about this cast, but it won't save you from shooting yourself in the foot if you so choose.\n- Allow raw pointers to live in a region. I don't really care about the coercion, it's just that I want to use rust's borrow checker to prevent me from holding a reference to a dead pointer. If I want to shoot myself in the foot, I can always use `cast::transmute()` to forget the region.\n- Change all the libc functions to take `&libc::c_char` instead of `*libc::c_char`. This is a nice short term bandaid for the stdlib, but doesn't really help out end users writing C bindings that don't know about this behavior.\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/7694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/7694/timeline", "performed_via_github_app": null, "state_reason": "completed"}