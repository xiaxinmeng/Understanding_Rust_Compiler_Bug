{"url": "https://api.github.com/repos/rust-lang/rust/issues/86711", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86711/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86711/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86711/events", "html_url": "https://github.com/rust-lang/rust/issues/86711", "id": 932457789, "node_id": "MDU6SXNzdWU5MzI0NTc3ODk=", "number": 86711, "title": "ABI: Ownership transfer through pointer involves unnecessary copies", "user": {"login": "CryZe", "id": 1451630, "node_id": "MDQ6VXNlcjE0NTE2MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1451630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CryZe", "html_url": "https://github.com/CryZe", "followers_url": "https://api.github.com/users/CryZe/followers", "following_url": "https://api.github.com/users/CryZe/following{/other_user}", "gists_url": "https://api.github.com/users/CryZe/gists{/gist_id}", "starred_url": "https://api.github.com/users/CryZe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CryZe/subscriptions", "organizations_url": "https://api.github.com/users/CryZe/orgs", "repos_url": "https://api.github.com/users/CryZe/repos", "events_url": "https://api.github.com/users/CryZe/events{/privacy}", "received_events_url": "https://api.github.com/users/CryZe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-06-29T10:15:20Z", "updated_at": "2021-07-23T12:56:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Let's say we have a reasonably large struct that doesn't get passed through registers:\r\n```rust\r\npub struct Color {\r\n    red: f64,\r\n    green: f64,\r\n    blue: f64,\r\n    alpha: f64,\r\n}\r\n```\r\nThen we have some method on it that requires ownership transfer:\r\n```rust\r\nimpl Color {\r\n    #[inline(never)]\r\n    fn to_rgba8(self) -> [u8; 4] {\r\n        [\r\n            (255.0 * self.red) as u8,\r\n            (255.0 * self.green) as u8,\r\n            (255.0 * self.blue) as u8,\r\n            (255.0 * self.alpha) as u8,\r\n        ]\r\n    }\r\n}\r\n```\r\nAnd then we have some sort of function that just passes ownership through to that method:\r\n```rust\r\npub fn convert(color: Color) -> [u8; 4] {\r\n    color.to_rgba8()\r\n}\r\n```\r\nIn C you would expect a \"copy\" of the struct to get passed into the function, as we pass the struct by value. And that's exactly what Rust does here as well. It copies the entire struct onto the stack and then passes a pointer to the copy into the function:\r\n```asm\r\nexample::convert:\r\n        sub     rsp, 40\r\n        movups  xmm0, xmmword ptr [rdi]\r\n        movups  xmm1, xmmword ptr [rdi + 16]\r\n        movaps  xmmword ptr [rsp + 16], xmm1\r\n        movaps  xmmword ptr [rsp], xmm0\r\n        mov     rdi, rsp\r\n        call    example::Color::to_rgba8\r\n        add     rsp, 40\r\n        ret\r\n```\r\nHowever Rust has a unique notion of ownership, where we know that `color` can't be used anymore after calling the method. So no actual copy should ever be necessary for a non-`Copy` type. Though technically even on a `Copy` type no such additional copy should be necessary if it's the last use.\r\n\r\nhttps://rust.godbolt.org/z/135z7aK3K", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86711/reactions", "total_count": 7, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 6}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86711/timeline", "performed_via_github_app": null, "state_reason": null}