{"url": "https://api.github.com/repos/rust-lang/rust/issues/11133", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11133/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11133/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11133/events", "html_url": "https://github.com/rust-lang/rust/issues/11133", "id": 24749025, "node_id": "MDU6SXNzdWUyNDc0OTAyNQ==", "number": 11133, "title": "auto-unwrap: make `foo()!` the same as `foo().unwrap()`", "user": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-12-24T15:07:21Z", "updated_at": "2014-06-03T12:44:16Z", "closed_at": "2014-06-03T12:44:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Someone want to remove one of `.foo()` and `.foo_opt()`, but that will let us write more `foo().unwrap()`, which is a bit nasty. I'd like to see introducing a new syntax sugar: `foo()!`, which means the same as `foo().unwrap()`. The `!` here means: 1) ensure it's not None, 2) it maybe fail!.\n\nWe can define a trait `Unwrapable<T>` that has an fn `unwrap() -> T`, and impl it for Option<T>, Result<T,E> and others. When `!` operated on an Unwrapable value, rustc call  its `unwrap()` automatically. (I do not know whether or not it will be ambiguous with macro!.)\n\nAfter it is accepted, we may safely remove one of .foo() and .foo_opt().\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11133/timeline", "performed_via_github_app": null, "state_reason": "completed"}