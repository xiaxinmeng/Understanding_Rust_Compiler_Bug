{"url": "https://api.github.com/repos/rust-lang/rust/issues/63226", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63226/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63226/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63226/events", "html_url": "https://github.com/rust-lang/rust/issues/63226", "id": 476338823, "node_id": "MDU6SXNzdWU0NzYzMzg4MjM=", "number": 63226, "title": "ICE when constructing monomorphic vtable in a static in dependent crate.", "user": {"login": "rodrimati1992", "id": 18036327, "node_id": "MDQ6VXNlcjE4MDM2MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/18036327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrimati1992", "html_url": "https://github.com/rodrimati1992", "followers_url": "https://api.github.com/users/rodrimati1992/followers", "following_url": "https://api.github.com/users/rodrimati1992/following{/other_user}", "gists_url": "https://api.github.com/users/rodrimati1992/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrimati1992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrimati1992/subscriptions", "organizations_url": "https://api.github.com/users/rodrimati1992/orgs", "repos_url": "https://api.github.com/users/rodrimati1992/repos", "events_url": "https://api.github.com/users/rodrimati1992/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrimati1992/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2019-08-02T20:12:21Z", "updated_at": "2019-08-16T08:10:00Z", "closed_at": "2019-08-15T16:31:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is ICE happens when I call `ROnce::new` from the abi_stable crate in const contexts in dependent crates/doctests,\r\nbut not when using the `ROnce::NEW` associated constant.\r\n\r\n\r\n# Reproducing\r\n\r\nIt can be reproduced using a doctest in the playground:\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=27b35d06267adeacb7334388600c96be\r\n\r\nIt can also be reproduced by cloning [this repository](https://github.com/rodrimati1992/const_fn_ice_0),and then build lib_1.\r\n\r\n# Code\r\n\r\nThe code for the linked repositories is :\r\n\r\nlib_0:\r\n\r\n```rust\r\n\r\npub struct VTable{\r\n    state:extern fn(),\r\n}\r\n\r\n\r\nimpl VTable{\r\n    pub const fn vtable()->&'static VTable{\r\n        Self::VTABLE\r\n    }\r\n\r\n    const VTABLE: &'static VTable = \r\n        &VTable{state};\r\n}\r\n\r\nextern fn state(){  }\r\n\r\n\r\n```\r\n\r\nlib_1:\r\n\r\n```rust\r\n\r\nuse lib_0::VTable;\r\n\r\nstatic ICE_ICE:&'static VTable=VTable::vtable();\r\n\r\n```\r\n\r\n# Error\r\n\r\nThis is the error message:\r\n\r\n```\r\n\r\n   Compiling lib_1 v0.1.0 (/home/matias/Documents/eclipse_workspace/tmp/const_fn_ice/lib_1)\r\nwarning: static item is never used: `ICE_ICE`\r\n --> src/lib.rs:3:1\r\n  |\r\n3 | static ICE_ICE:&'static VTable=VTable::vtable();\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nerror: internal compiler error: src/librustc_mir/monomorphize/collector.rs:778: Cannot create local mono-item for DefId(15:17 ~ lib_0[ce77]::state[0])\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:644:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.34/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.34/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:200\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:214\r\n   6: rustc::util::common::panic_hook\r\n   7: core::ops::function::Fn::call\r\n   8: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:481\r\n   9: std::panicking::begin_panic\r\n  10: rustc_errors::Handler::bug\r\n  11: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  12: rustc::ty::context::tls::with_opt::{{closure}}\r\n  13: rustc::ty::context::tls::with_context_opt\r\n  14: rustc::ty::context::tls::with_opt\r\n  15: rustc::util::bug::opt_span_bug_fmt\r\n  16: rustc::util::bug::bug_fmt\r\n  17: rustc_mir::monomorphize::collector::should_monomorphize_locally\r\n  18: rustc_mir::monomorphize::collector::collect_miri\r\n  19: rustc_mir::monomorphize::collector::collect_miri\r\n  20: rustc_mir::monomorphize::collector::collect_const\r\n  21: rustc_mir::monomorphize::collector::collect_items_rec\r\n  22: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  23: rustc::util::common::time\r\n  24: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  25: rustc::util::common::time\r\n  26: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  27: rustc::ty::query::__query_compute::collect_and_partition_mono_items\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  30: rustc_codegen_ssa::back::symbol_export::exported_symbols_provider_local\r\n  31: rustc::ty::query::__query_compute::exported_symbols\r\n  32: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  34: rustc_metadata::encoder::EncodeContext::encode_crate_root\r\n  35: rustc::dep_graph::graph::DepGraph::with_ignore\r\n  36: rustc_metadata::encoder::encode_metadata\r\n  37: rustc_metadata::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::cstore::CStore>::encode_metadata\r\n  38: rustc::ty::context::TyCtxt::encode_metadata\r\n  39: rustc_interface::passes::encode_and_write_metadata\r\n  40: rustc::util::common::time\r\n  41: rustc_interface::passes::start_codegen\r\n  42: rustc::ty::context::tls::enter_global\r\n  43: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  44: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  45: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  46: rustc_interface::queries::Query<T>::compute\r\n  47: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::ongoing_codegen\r\n  48: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  49: std::thread::local::LocalKey<T>::with\r\n  50: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\n#1 [exported_symbols] exported_symbols\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.38.0-nightly (435236b88 2019-08-01) running on i686-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `lib_1`.\r\n\r\n\r\n```\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63226/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63226/timeline", "performed_via_github_app": null, "state_reason": "completed"}