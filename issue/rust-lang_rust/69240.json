{"url": "https://api.github.com/repos/rust-lang/rust/issues/69240", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69240/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69240/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69240/events", "html_url": "https://github.com/rust-lang/rust/issues/69240", "id": 566423201, "node_id": "MDU6SXNzdWU1NjY0MjMyMDE=", "number": 69240, "title": "RwLock: support upgrades and downgrades", "user": {"login": "d-e-s-o", "id": 6610056, "node_id": "MDQ6VXNlcjY2MTAwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6610056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-e-s-o", "html_url": "https://github.com/d-e-s-o", "followers_url": "https://api.github.com/users/d-e-s-o/followers", "following_url": "https://api.github.com/users/d-e-s-o/following{/other_user}", "gists_url": "https://api.github.com/users/d-e-s-o/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-e-s-o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-e-s-o/subscriptions", "organizations_url": "https://api.github.com/users/d-e-s-o/orgs", "repos_url": "https://api.github.com/users/d-e-s-o/repos", "events_url": "https://api.github.com/users/d-e-s-o/events{/privacy}", "received_events_url": "https://api.github.com/users/d-e-s-o/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-17T17:00:25Z", "updated_at": "2020-02-17T18:39:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think it would be great (certainly useful for me) if `RwLock` were to support read-write upgrades and write-read downgrades. Currently I don't see a way to accomplish the same and I always have to get write access over the entire operation.\r\n\r\n`parking_lot` currently supports both cases ([here](https://docs.rs/lock_api/0.3.3/lock_api/struct.RwLockUpgradableReadGuard.html#method.upgrade) & [here](https://docs.rs/lock_api/0.3.3/lock_api/struct.RwLockUpgradableReadGuard.html#method.downgrade)). I also understand that there exists [a proposal](https://github.com/rust-lang/rust/pull/56410) to use `parking_lot` as the lock implementation backend.\r\n\r\nOnce (if) that lands, it should merely be a matter of extending the `std` APIs to provide such support.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69240/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69240/timeline", "performed_via_github_app": null, "state_reason": null}