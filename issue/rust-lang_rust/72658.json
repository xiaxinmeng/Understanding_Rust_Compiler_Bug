{"url": "https://api.github.com/repos/rust-lang/rust/issues/72658", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72658/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72658/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72658/events", "html_url": "https://github.com/rust-lang/rust/issues/72658", "id": 625791563, "node_id": "MDU6SXNzdWU2MjU3OTE1NjM=", "number": 72658, "title": "type mismatch in closure arguments without annotation with reference arguments", "user": {"login": "ogoffart", "id": 959326, "node_id": "MDQ6VXNlcjk1OTMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/959326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogoffart", "html_url": "https://github.com/ogoffart", "followers_url": "https://api.github.com/users/ogoffart/followers", "following_url": "https://api.github.com/users/ogoffart/following{/other_user}", "gists_url": "https://api.github.com/users/ogoffart/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogoffart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogoffart/subscriptions", "organizations_url": "https://api.github.com/users/ogoffart/orgs", "repos_url": "https://api.github.com/users/ogoffart/repos", "events_url": "https://api.github.com/users/ogoffart/events{/privacy}", "received_events_url": "https://api.github.com/users/ogoffart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-27T15:22:29Z", "updated_at": "2020-08-18T13:27:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried something looking like this:\r\n(but obviously the actual program was more complex)\r\n\r\n```rust\r\nstruct X {\r\n    do_something : Box<dyn Fn(&u32)>,\r\n}\r\n\r\nfn main() {\r\n    let f = |_| { println!(\"something\") };\r\n    let _ = X { do_something: Box::new(f) };\r\n}\r\n```\r\n\r\nAnd i got quite confused by the error:\r\n\r\n```\r\nerror[E0631]: type mismatch in closure arguments\r\n --> src/main.rs:9:31\r\n  |\r\n8 |     let f = |_| { println!(\"something\") };\r\n  |             --- found signature of `fn(_) -> _`\r\n9 |     let _ = X { do_something: Box::new(f) };\r\n  |                               ^^^^^^^^^^^ expected signature of `for<'r> fn(&'r u32) -> _`\r\n  |\r\n  = note: required for the cast to the object type `dyn for<'r> std::ops::Fn(&'r u32)`\r\n\r\nerror[E0271]: type mismatch resolving `for<'r> <[closure@src/main.rs:8:13: 8:42] as std::ops::FnOnce<(&'r u32,)>>::Output == ()`\r\n --> src/main.rs:9:31\r\n  |\r\n9 |     let _ = X { do_something: Box::new(f) };\r\n  |                               ^^^^^^^^^^^ expected bound lifetime parameter, found concrete lifetime\r\n  |\r\n  = note: required for the cast to the object type `dyn for<'r> std::ops::Fn(&'r u32)`\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nI found ways to get that work: annotating the closure argument like so:\r\n```rust \r\n    let f = |_: &u32| { println!(\"something\") };\r\n```\r\n\r\nMaybe the error message should suggest that.\r\n\r\nBut I would actually even expect this to work without annotations, since it works fine if the argument is not a reference.  (ie: no errors if the type is `Box<dyn Fn(u32)>`)\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0 (4fb7144ed 2020-04-20)\r\nbinary: rustc\r\ncommit-hash: 4fb7144ed159f94491249e86d5bbd033b5d60550\r\ncommit-date: 2020-04-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0\r\nLLVM version: 9.0\r\n```\r\n\r\n(also reproduced with nightly on rust playground)\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72658/timeline", "performed_via_github_app": null, "state_reason": null}