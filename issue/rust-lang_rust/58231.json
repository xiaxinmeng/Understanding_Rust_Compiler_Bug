{"url": "https://api.github.com/repos/rust-lang/rust/issues/58231", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58231/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58231/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58231/events", "html_url": "https://github.com/rust-lang/rust/issues/58231", "id": 407289229, "node_id": "MDU6SXNzdWU0MDcyODkyMjk=", "number": 58231, "title": "Trait bound on associated type causes confusing compilation error", "user": {"login": "igowen", "id": 3053, "node_id": "MDQ6VXNlcjMwNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igowen", "html_url": "https://github.com/igowen", "followers_url": "https://api.github.com/users/igowen/followers", "following_url": "https://api.github.com/users/igowen/following{/other_user}", "gists_url": "https://api.github.com/users/igowen/gists{/gist_id}", "starred_url": "https://api.github.com/users/igowen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igowen/subscriptions", "organizations_url": "https://api.github.com/users/igowen/orgs", "repos_url": "https://api.github.com/users/igowen/repos", "events_url": "https://api.github.com/users/igowen/events{/privacy}", "received_events_url": "https://api.github.com/users/igowen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-06T15:27:51Z", "updated_at": "2023-02-25T21:23:50Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This code fails to compile:\r\n\r\n```rust\r\npub trait Append<T> {\r\n    type Appended;\r\n}\r\n\r\npub trait Proc {\r\n    type Item;\r\n    type Tail;\r\n    fn process_item<P>(&mut self, partial: P)\r\n    where\r\n        P: Append<Self::Item>,\r\n        P::Appended: Append<Self::Tail>;\r\n}\r\n\r\nstruct Read;\r\n\r\nimpl Proc for Read {\r\n    type Item = i32;\r\n    type Tail = i64;\r\n    fn process_item<P>(&mut self, partial: P)\r\n    where\r\n        P: Append<Self::Item>,\r\n        P::Appended: Append<Self::Tail>,\r\n    {\r\n        \r\n    }\r\n}\r\n```\r\n\r\n```\r\nerror[E0277]: the trait bound `P: Append<i32>` is not satisfied\r\n  --> src/lib.rs:19:5\r\n   |\r\n19 | /     fn process_item<P>(&mut self, partial: P)\r\n20 | |     where\r\n21 | |         P: Append<Self::Item>,\r\n22 | |         P::Appended: Append<Self::Tail>,\r\n23 | |     {\r\n24 | |         \r\n25 | |     }\r\n   | |_____^ the trait `Append<i32>` is not implemented for `P`\r\n   |\r\n   = help: consider adding a `where P: Append<i32>` bound\r\n```\r\n\r\nThe error is confusing because `Self::Item` is `i32`. Furthermore, changing the bound on `P` to the suggested bound (setting aside the fact that this is a trait impl so imposing additional bounds isn't necessarily appropriate) yields an even more confusing error:\r\n\r\n```\r\nerror[E0277]: the trait bound `P: Append<i32>` is not satisfied\r\n  --> src/lib.rs:19:5\r\n   |\r\n19 | /     fn process_item<P>(&mut self, partial: P)\r\n20 | |     where\r\n21 | |         P: Append<i32>,\r\n22 | |         P::Appended: Append<Self::Tail>,\r\n23 | |     {\r\n24 | |         \r\n25 | |     }\r\n   | |_____^ the trait `Append<i32>` is not implemented for `P`\r\n   |\r\n   = help: consider adding a `where P: Append<i32>` bound\r\n\r\nerror[E0276]: impl has stricter requirements than trait\r\n  --> src/lib.rs:19:5\r\n   |\r\n8  | /     fn process_item<P>(&mut self, partial: P)\r\n9  | |     where\r\n10 | |         P: Append<Self::Item>,\r\n11 | |         P::Appended: Append<Self::Tail>;\r\n   | |________________________________________- definition of `process_item` from trait\r\n...\r\n19 | /     fn process_item<P>(&mut self, partial: P)\r\n20 | |     where\r\n21 | |         P: Append<i32>,\r\n22 | |         P::Appended: Append<Self::Tail>,\r\n23 | |     {\r\n24 | |         \r\n25 | |     }\r\n   | |_____^ impl has extra requirement `P: Append<i32>`\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nAdding an additional type parameter to the fn and using that as the bound on `P::Appended` appears to work fine, and i think it is semantically equivalent (although applying the bound directly to the associated type is cleaner IMO):\r\n\r\n```rust\r\npub trait Append<T> {\r\n    type Appended;\r\n}\r\n\r\npub trait Proc {\r\n    type Item;\r\n    type Tail;\r\n    fn process_item<P, T>(&mut self, partial: P)\r\n    where\r\n        P: Append<Self::Item, Appended = T>,\r\n        T: Append<Self::Tail>;\r\n}\r\n\r\nstruct Read;\r\n\r\nimpl Proc for Read {\r\n    type Item = i32;\r\n    type Tail = i64;\r\n    fn process_item<P, T>(&mut self, partial: P)\r\n    where\r\n        P: Append<i32, Appended = T>,\r\n        T: Append<Self::Tail>,\r\n    {\r\n\r\n    }\r\n}\r\n```\r\n\r\nShould the original code compile?  If not, the error message (and suggested fix) is monumentally unhelpful. Otherwise, if it should compile, this looks like a compiler bug.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58231/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58231/timeline", "performed_via_github_app": null, "state_reason": null}