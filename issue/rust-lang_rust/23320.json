{"url": "https://api.github.com/repos/rust-lang/rust/issues/23320", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/23320/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/23320/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/23320/events", "html_url": "https://github.com/rust-lang/rust/issues/23320", "id": 60916703, "node_id": "MDU6SXNzdWU2MDkxNjcwMw==", "number": 23320, "title": "`HashMap` docs don't mention `{Eq, Hash}` consistency", "user": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-12T22:03:40Z", "updated_at": "2015-03-29T16:54:44Z", "closed_at": "2015-03-29T16:54:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While it may not be possible to enforce this at the type level, the docs for `HashMap` (and `HashSet`) should specify that its key type's `{Eq, Hash}` implementations must be consistent for the map to have reasonable behavior. The exact requirement is\n\n```\nk1 == k2 -> hash(k1) == hash(k2)\n```\n\nThis is always the case for derived implementations, but the following example is nonsensical if `Foo` is used as a `HashMap` key:\n\n``` rust\n#[derive(Hash)]\nstruct Foo(u32, u32);\n\nimpl PartialEq for Foo {\n    fn eq(&self, other: &Foo) -> bool { self.0 == other.0 }\n}\n\nimpl Eq for Foo {}\n```\n\nThere could additionally be some kind of debug-level assertion of this behavior, or possibly a lint that checks to make sure that the fields that are referenced in `PartialEq::eq` and `Hash::hash` are consistent. The lint wouldn't be perfect, but could be useful.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/23320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/23320/timeline", "performed_via_github_app": null, "state_reason": "completed"}