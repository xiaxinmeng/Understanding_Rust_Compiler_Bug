{"url": "https://api.github.com/repos/rust-lang/rust/issues/111986", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111986/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111986/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111986/events", "html_url": "https://github.com/rust-lang/rust/issues/111986", "id": 1727106016, "node_id": "I_kwDOAAsO6M5m8Yvg", "number": 111986, "title": "Bad overflow errors on missing trait impls.", "user": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-05-26T07:56:55Z", "updated_at": "2023-05-26T07:57:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nuse diesel::prelude::*; // diesel 2.0.4, features = [\"postgres\"]\r\n\r\ntable! {\r\n    users {\r\n        id -> Integer,\r\n        posts -> Text,\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut conn = PgConnection::establish(\"_\").unwrap();\r\n\r\n    users::table\r\n        .into_boxed()\r\n        .group_by(users::id)\r\n        .load::<(i32, String)>(&mut conn);\r\n}\r\n```\r\n\r\n\r\n### Current output\r\n\r\n```Shell\r\nerror[E0275]: overflow evaluating the requirement `_: diesel::Expression`\r\n  --> src/main.rs:13:31\r\n   |\r\n13 |     users::table.into_boxed().group_by(users::id).load::<(i32, String)>(&mut conn);\r\n   |                               ^^^^^^^^\r\n   |\r\n   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`diesel_multi_test`)\r\n   = note: required for `BoxedSelectStatement<'_, (diesel::sql_types::Integer, diesel::sql_types::Text), FromClause<users::table>, _>` to implement `GroupByDsl<_>`\r\n   = note: 128 redundant requirements hidden\r\n   = note: required for `BoxedSelectStatement<'_, (diesel::sql_types::Integer, diesel::sql_types::Text), FromClause<users::table>, _>` to implement `GroupByDsl<_>` \r\n```\r\n\r\nNote that the relevant trait is not implemented for `BoxedSelectStatement` at all. There exists [a generic impl](https://docs.diesel.rs/2.0.x/diesel/query_dsl/methods/trait.GroupByDsl.html#impl-GroupByDsl%3CExpr%3E-for-T) that does not apply.\r\n\r\n\r\n\r\n### Desired output\r\n\r\n\r\nIdeally the compiler would emit a trait not implemented error message. \r\nOther than that the help note that increasing the recursion limit might fix the issue is not helpful as that does not really change anything on the fact that the trait is not implemented. Maybe the compiler could use a heuristic to check if it gets ~recursion limit count times the same error message and skip that suggestion in these cases? Or just skip it if there is a non-default recursion limit (because then the user likely tried to follow that advice already and it did not fix the problem?)\r\n\r\n\r\n\r\n### Rationale and extra context\r\n\r\n_No response_\r\n\r\n### Other cases\r\n\r\n_No response_\r\n\r\n### Anything else?\r\n\r\n_No response_", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111986/timeline", "performed_via_github_app": null, "state_reason": null}