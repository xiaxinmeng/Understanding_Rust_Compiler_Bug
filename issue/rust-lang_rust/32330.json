{"url": "https://api.github.com/repos/rust-lang/rust/issues/32330", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/32330/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/32330/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/32330/events", "html_url": "https://github.com/rust-lang/rust/issues/32330", "id": 141804188, "node_id": "MDU6SXNzdWUxNDE4MDQxODg=", "number": 32330, "title": "Unsound projection when late-bound-region appears only in return type", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}], "state": "closed", "locked": false, "assignee": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 43, "created_at": "2016-03-18T08:32:22Z", "updated_at": "2017-03-02T17:14:22Z", "closed_at": "2017-03-02T17:14:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While working on a [cache for normalization](https://github.com/rust-lang/rust/issues/20304), I came across this problem in the way we currently handle fn items:\n\n``` rust\n#![feature(unboxed_closures)]\n\nfn foo<'a>() -> &'a u32 { loop { } }\n\nfn bar<T>(t: T, x: T::Output) -> T::Output\n    where T: FnOnce<()>\n{\n    x\n}\n\nfn main() {\n    let x = &22;\n    let z: &'static u32 = bar(foo, x); // <-- Effectively casts stack pointer to static pointer\n}\n```\n\nThat program compiles, but clearly it should not. What's going on is kind of in the grotty details of how we handle a function like:\n\n``` rust\nfn foo<'a>() -> &'a u32 { loop { } }\n```\n\nCurrently, that is typed as if it was roughly equivalent to:\n\n``` rust\nstruct foo;\nimpl<'a> FnOnce<()> for foo {\n    type Output = &'a u32;\n    ...\n}\n...\n```\n\nHowever, if you actually tried to write that impl above, you'd [get an error](http://is.gd/xPA7eJ):\n\n```\n<anon>:3:6: 3:8 error: the lifetime parameter `'a` is not constrained by the impl trait, self type, or predicates [E0207]\n<anon>:3 impl<'a> FnOnce<()> for foo {\n              ^~\n```\n\nAnd the reason is precisely because of this kind of unsoundness. Effectively, the way we handle the function `foo` above allows `Output` to have different lifetimes each time it is projected. \n\nI believe this problem is specific to named lifetimes like `'a` that **only appear in the return type** and **do not appear in any where clauses**. This is because:\n- If the lifetime appears in an argument, then it would be constrained by the `FnOnce` trait's argument parameter. (Assuming it appears in a constrained position; that is, not as an input to an associated type projection.)\n- If the lifetime appears in a where-clause, it would be classified as an \"early bound\" lifetime, in which case it would be part of the self type (iow, we would translate to something like `struct foo<'a>`).\n\nThe current treatment of early- vs late-bound is something that hasn't really scaled up well to the more complex language we have now. It is also central to https://github.com/rust-lang/rust/issues/25860, for example. I think it is feasible to actually revamp how we handle things in the compiler in a largely backwards compatible way to close this hole -- and the refactoring would even take us closer to HKT. Basically we'd be pulling the `Binder` out of `FnSig` and object types and moving to be around types in general. \n\n**However,** in the short term, I think we could just reclassify named lifetimes that do not appear in the argument types as being early-bound. I've got an experimental branch doing that right now.\n\nThis problem is the root of what caused my projection cache not to work: I was assuming in that code that `T::Output` would always be the same if `T` is the same, and that is not currently the case!\n\ncc @rust-lang/lang \ncc @arielb1 \ncc @ralfjung\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/32330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/32330/timeline", "performed_via_github_app": null, "state_reason": "completed"}