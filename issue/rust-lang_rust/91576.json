{"url": "https://api.github.com/repos/rust-lang/rust/issues/91576", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91576/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91576/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91576/events", "html_url": "https://github.com/rust-lang/rust/issues/91576", "id": 1071599515, "node_id": "I_kwDOAAsO6M4_30-b", "number": 91576, "title": "Which MIR passes should run on generator drop shims?", "user": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-12-06T00:14:54Z", "updated_at": "2023-04-05T17:41:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Under normal circumstances, MIR shims have the following 5 passes applied:\r\n- [`AddMovesForPackedDrops`](https://github.com/rust-lang/rust/blob/e2116acae59654bfab2a9729a024f3e2fd6d4b02/compiler/rustc_mir_transform/src/add_moves_for_packed_drops.rs#L8-L39)\r\n- [`RemoveNoopLandingPads`](https://github.com/rust-lang/rust/blob/e2116acae59654bfab2a9729a024f3e2fd6d4b02/compiler/rustc_mir_transform/src/remove_noop_landing_pads.rs)\r\n- `SimplifyCfg` (a trivial cleanup pass)\r\n- [`CriticalCallEdges`](https://github.com/rust-lang/rust/blob/e2116acae59654bfab2a9729a024f3e2fd6d4b02/compiler/rustc_mir_transform/src/add_call_guards.rs)\r\n- [`AbortUnwindingCalls`](https://github.com/rust-lang/rust/blob/e2116acae59654bfab2a9729a024f3e2fd6d4b02/compiler/rustc_mir_transform/src/abort_unwinding_calls.rs)\r\n\r\nHowever, generator drop shims are created by [cloning the MIR for the original generator](https://github.com/rust-lang/rust/blob/e2116acae59654bfab2a9729a024f3e2fd6d4b02/compiler/rustc_mir_transform/src/generator.rs#L921) (?), which means they start out in `MirPhase::GeneratorLowering`. Prior to #91475, `run_passes` silently returned without doing anything if the `MirPhase` was greater than or equal to the expected one, so the aforementioned MIR passes were never executed. That behavior was only relevant when building drop shims, so #91475 added an explicit check to preserve it.\r\n\r\nWas this intentional? Notably `AddMovesForPackedDrops` and `AbortUnwindingCalls` have soundness implications, and `CriticalCallEdges` is needed to work around some codegen issues, so it seems like they should always run. However, they might not be applicable to generators specifically.\r\n\r\nPerhaps @tmandry knows the answer, or knows someone who does?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91576/timeline", "performed_via_github_app": null, "state_reason": null}