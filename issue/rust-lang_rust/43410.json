{"url": "https://api.github.com/repos/rust-lang/rust/issues/43410", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43410/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43410/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43410/events", "html_url": "https://github.com/rust-lang/rust/issues/43410", "id": 244862059, "node_id": "MDU6SXNzdWUyNDQ4NjIwNTk=", "number": 43410, "title": "As of 1.19 it is not possible to accurately measure unit test coverage", "user": {"login": "ctz", "id": 579363, "node_id": "MDQ6VXNlcjU3OTM2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/579363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctz", "html_url": "https://github.com/ctz", "followers_url": "https://api.github.com/users/ctz/followers", "following_url": "https://api.github.com/users/ctz/following{/other_user}", "gists_url": "https://api.github.com/users/ctz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctz/subscriptions", "organizations_url": "https://api.github.com/users/ctz/orgs", "repos_url": "https://api.github.com/users/ctz/repos", "events_url": "https://api.github.com/users/ctz/events{/privacy}", "received_events_url": "https://api.github.com/users/ctz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 602425123, "node_id": "MDU6TGFiZWw2MDI0MjUxMjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-dev-tools", "name": "T-dev-tools", "color": "bfd4f2", "default": false, "description": "Relevant to the dev-tools subteam, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-07-22T18:03:17Z", "updated_at": "2020-05-05T19:18:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1.19 prevents access to `-Zno-landing-pads`. I was using that to get accurate test coverage; without it all landing pads appear as uncovered code at the start and end of every function.\r\n\r\n`-Cpanic=abort` is intended to be the stable replacement for `-Zno-landing-pads` but unfortunately that isn't supported for unit tests (apparently, because libtest requires unwinding support).\r\n\r\nI'd like a way to do any of the following on stable:\r\n\r\n- restore `no-landing-pads` behaviour, or,\r\n- have `panic=abort` work for unit tests. Note that I don't much care that `should_panic` tests wouldn't work.\r\n\r\nIs there some combination of cargo/rustc options that might achieve that?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43410/timeline", "performed_via_github_app": null, "state_reason": null}