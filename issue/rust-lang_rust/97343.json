{"url": "https://api.github.com/repos/rust-lang/rust/issues/97343", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/97343/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/97343/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/97343/events", "html_url": "https://github.com/rust-lang/rust/issues/97343", "id": 1245946930, "node_id": "I_kwDOAAsO6M5KQ6Qy", "number": 97343, "title": "#[derive(Debug)] fails when a generic parameter shares the name of the generic type", "user": {"login": "nekodjin", "id": 59782103, "node_id": "MDQ6VXNlcjU5NzgyMTAz", "avatar_url": "https://avatars.githubusercontent.com/u/59782103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nekodjin", "html_url": "https://github.com/nekodjin", "followers_url": "https://api.github.com/users/nekodjin/followers", "following_url": "https://api.github.com/users/nekodjin/following{/other_user}", "gists_url": "https://api.github.com/users/nekodjin/gists{/gist_id}", "starred_url": "https://api.github.com/users/nekodjin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nekodjin/subscriptions", "organizations_url": "https://api.github.com/users/nekodjin/orgs", "repos_url": "https://api.github.com/users/nekodjin/repos", "events_url": "https://api.github.com/users/nekodjin/events{/privacy}", "received_events_url": "https://api.github.com/users/nekodjin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2022-05-24T03:59:22Z", "updated_at": "2022-05-28T02:55:30Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n-->\n\nI tried this code:\n\n```rust\n#[derive(Debug)]\npub struct Irrelevant<Irrelevant> {\n    irrelevant: Irrelevant,\n}\n```\n\nI expected to see this happen:\nCode should compile normally as expected, with a correct `fmt::Debug` implementation. Omitting the derive shows that rustc accepts this as valid and intelligible code. We know that rustc is interpreting the type of `irrelevant` as the type parameter and not the parent struct, as the latter would produce an error since it would produce a recursive type with infinite size which would cause an error. As rustc defines the rust language, the derive macro should also handle this code correctly.\n\nInstead, this happened:\nCompilation errors with the following diagnostic:\n```\nerror[E0574]: expected struct, variant or union type, found type parameter `Irrelevant`\n --> main.rs:3:10\n  |\n3 | #[derive(Debug)]\n  |          ^^^^^ not a struct, variant or union type\n  |\n  = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0109]: type arguments are not allowed for this type\n --> main.rs:4:23\n  |\n3 | #[derive(Debug)]\n  |          ----- in this derive macro expansion\n4 | pub struct Irrelevant<Irrelevant> {\n  |                       ^^^^^^^^^^ type argument not allowed\n  |\n  = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: aborting due to 2 previous errors\n```\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\nI tested this and got the same result on the following versions:\n```\nrustc 1.61.0 (fe5b13d68 2022-05-18)\nbinary: rustc\ncommit-hash: fe5b13d681f25ee6474be29d748c65adcd91f69e\ncommit-date: 2022-05-18\nhost: x86_64-unknown-linux-gnu\nrelease: 1.61.0\nLLVM version: 14.0.0\n```\n```\nrustc 1.63.0-nightly (ee160f2f5 2022-05-23)\nbinary: rustc\ncommit-hash: ee160f2f5e73b6f5954bc33f059c316d9e8582c4\ncommit-date: 2022-05-23\nhost: x86_64-unknown-linux-gnu\nrelease: 1.63.0-nightly\nLLVM version: 14.0.4\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"fmease\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/97343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/97343/timeline", "performed_via_github_app": null, "state_reason": null}