{"url": "https://api.github.com/repos/rust-lang/rust/issues/71720", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71720/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71720/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71720/events", "html_url": "https://github.com/rust-lang/rust/issues/71720", "id": 610401713, "node_id": "MDU6SXNzdWU2MTA0MDE3MTM=", "number": 71720, "title": "Missing symbols with thin LTO on x86_64-pc-windows-msvc", "user": {"login": "jgallagher", "id": 1435635, "node_id": "MDQ6VXNlcjE0MzU2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1435635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgallagher", "html_url": "https://github.com/jgallagher", "followers_url": "https://api.github.com/users/jgallagher/followers", "following_url": "https://api.github.com/users/jgallagher/following{/other_user}", "gists_url": "https://api.github.com/users/jgallagher/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgallagher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgallagher/subscriptions", "organizations_url": "https://api.github.com/users/jgallagher/orgs", "repos_url": "https://api.github.com/users/jgallagher/repos", "events_url": "https://api.github.com/users/jgallagher/events{/privacy}", "received_events_url": "https://api.github.com/users/jgallagher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 266005765, "node_id": "MDU6TGFiZWwyNjYwMDU3NjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows-msvc", "name": "O-windows-msvc", "color": "6e6ec0", "default": false, "description": "Toolchain: MSVC, Operating system: Windows"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T21:33:50Z", "updated_at": "2020-05-06T21:05:48Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse aho_corasick::AhoCorasick;\r\nuse std::os::raw::c_void;\r\nuse std::slice;\r\n\r\n#[no_mangle]\r\npub unsafe extern \"C\" fn foobar(input: *const [u8; 1], len: usize) -> *mut c_void {\r\n    let input = slice::from_raw_parts(input, len);\r\n    Box::into_raw(Box::new(AhoCorasick::new_auto_configured(input))) as *mut c_void\r\n}\r\n```\r\n\r\nwith this `Cargo.toml` file:\r\n\r\n```toml\r\n[package]\r\nname = \"msvc-lto-thin-bug\"\r\nversion = \"0.1.0\"\r\nauthors = [\"John Gallagher <...@...com>\"]\r\nedition = \"2018\"\r\n\r\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\r\n[lib]\r\ncrate-type = [\"staticlib\"]\r\n\r\n[dependencies]\r\naho-corasick = \"0.7.6\"\r\n\r\n[profile.release]\r\nlto = \"thin\"\r\n```\r\n\r\nI compiled this (successfully) with `cargo build --release`, which produced `target/release/msvc_lto_thin_bug.lib`. I then tried to compile this C program (`foobar.c`):\r\n\r\n```c\r\n#include <stdint.h>\r\n#include <stdlib.h>\r\n\r\nextern void *foobar(uint8_t *input, size_t len);\r\n\r\nint main() {\r\n    foobar(NULL, 0);\r\n    return 0;\r\n}\r\n```\r\n\r\nvia:\r\n\r\n```\r\ncl /EHsc foobar.c /link /LIBPATH:\"target\\\\release\" msvc_lto_thin_bug.lib\r\n```\r\n\r\nI expected to see this happen: The program linked (although it obviously wouldn't do anything useful).\r\n\r\nInstead, this happened: \r\n\r\n```\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.16.27032.1 for x64\r\n\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n \r\n\r\nfoobar.c\r\n\r\nMicrosoft (R) Incremental Linker Version 14.16.27032.1\r\n\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n \r\n\r\n/out:foobar.exe\r\n\r\n/LIBPATH:target\\\\release\r\n\r\nmsvc_lto_thin_bug.lib\r\n\r\nfoobar.obj\r\n\r\nmsvc_lto_thin_bug.lib(msvc_lto_thin_bug-71de79c7a20eef0b.aho_corasick.ca16895p-cgu.4.rcgu.o) : error LNK2019: unresolved external symbol __imp__ZN6memchr3x866memchr2FN17heb3e0819c48b999aE referenced in function _ZN92_$LT$aho_corasick..prefilter..RareBytesOne$u20$as$u20$aho_corasick..prefilter..Prefilter$GT$14next_candidate17h4213f95a13c94717E\r\n\r\nmsvc_lto_thin_bug.lib(msvc_lto_thin_bug-71de79c7a20eef0b.aho_corasick.ca16895p-cgu.4.rcgu.o) : error LNK2019: unresolved external symbol __imp__ZN6memchr3x867memchr22FN17h6467cf846ba6072fE referenced in function _ZN92_$LT$aho_corasick..prefilter..RareBytesTwo$u20$as$u20$aho_corasick..prefilter..Prefilter$GT$14next_candidate17h6c996abec2b916acE\r\n\r\nmsvc_lto_thin_bug.lib(msvc_lto_thin_bug-71de79c7a20eef0b.aho_corasick.ca16895p-cgu.4.rcgu.o) : error LNK2019: unresolved external symbol __imp__ZN6memchr3x867memchr32FN17he9d22c893759d6a0E referenced in function _ZN94_$LT$aho_corasick..prefilter..RareBytesThree$u20$as$u20$aho_corasick..prefilter..Prefilter$GT$14next_candidate17hb5e69dcd42a14727E\r\n\r\nfoobar.exe : fatal error LNK1120: 3 unresolved externals\r\n```\r\n\r\n### Meta\r\n\r\nI have _no_ idea what I'm doing on Windows; this is a reproducer from investigating a Windows build problem on a project I primarily develop on Mac/Linux (neither of which exhibit any problems with the above example).\r\n\r\nThe missing symbol demangles to `__imp_memchr::x86::memchr3::FN::...`, which I believe is an always inlined function in the `memchr` crate?\r\n\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0 (4fb7144ed 2020-04-20)\r\nbinary: rustc\r\ncommit-hash: 4fb7144ed159f94491249e86d5bbd033b5d60550\r\ncommit-date: 2020-04-20\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.43.0\r\nLLVM version: 9.0\r\n```\r\n\r\nI tried the current (2020-04-29) nightly and got the same results.\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71720/timeline", "performed_via_github_app": null, "state_reason": null}