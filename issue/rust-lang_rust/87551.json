{"url": "https://api.github.com/repos/rust-lang/rust/issues/87551", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87551/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87551/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87551/events", "html_url": "https://github.com/rust-lang/rust/issues/87551", "id": 954874730, "node_id": "MDU6SXNzdWU5NTQ4NzQ3MzA=", "number": 87551, "title": "enabling const-generics interferes with object safety", "user": {"login": "juntyr", "id": 50025784, "node_id": "MDQ6VXNlcjUwMDI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/50025784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juntyr", "html_url": "https://github.com/juntyr", "followers_url": "https://api.github.com/users/juntyr/followers", "following_url": "https://api.github.com/users/juntyr/following{/other_user}", "gists_url": "https://api.github.com/users/juntyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/juntyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juntyr/subscriptions", "organizations_url": "https://api.github.com/users/juntyr/orgs", "repos_url": "https://api.github.com/users/juntyr/repos", "events_url": "https://api.github.com/users/juntyr/events{/privacy}", "received_events_url": "https://api.github.com/users/juntyr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-07-28T13:47:47Z", "updated_at": "2022-06-24T14:13:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\n*Summary*: Enabling the `const_generics` feature makes an object safe trait with const generics unsafe.\r\n\r\nThe following code compiles successfully as expected (note the angle brackets around 42):\r\n\r\n```rust\r\ntrait TraitWithConstGeneric<const GENERIC: u64> {}\r\ntrait ObjectSafeTrait: TraitWithConstGeneric<{42}> {}\r\n\r\n// Check that `ObjectSafeTrait` is in fact object safe\r\ntype __ = dyn ObjectSafeTrait;\r\n```\r\n\r\nHowever, when I enable the `const_generics` feature, compilation fails (note the angle brackets around 42):\r\n\r\n```rust\r\n#![feature(const_generics)]\r\n\r\ntrait TraitWithConstGeneric<const GENERIC: u64> {}\r\ntrait ObjectSafeTrait: TraitWithConstGeneric<{42}> {}\r\n\r\n// Check that `ObjectSafeTrait` is in fact object safe\r\ntype __ = dyn ObjectSafeTrait;\r\n```\r\n\r\nwith the error that \"`ObjectSafeTrait` cannot be made into an object\".\r\n\r\n<details><summary>Full Error Message</summary>\r\n<p>\r\n\r\n```\r\nerror[E0038]: the trait `ObjectSafeTrait` cannot be made into an object\r\n --> src/lib.rs:7:11\r\n  |\r\n7 | type __ = dyn ObjectSafeTrait;\r\n  |           ^^^^^^^^^^^^^^^^^^^ `ObjectSafeTrait` cannot be made into an object\r\n  |\r\nnote: for a trait to be \"object safe\" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>\r\n --> src/lib.rs:4:24\r\n  |\r\n4 | trait ObjectSafeTrait: TraitWithConstGeneric<{42}> {}\r\n  |       ---------------  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ ...because it uses `Self` as a type parameter\r\n  |       |\r\n  |       this trait cannot be made into an object...\r\n\r\nFor more information about this error, try `rustc --explain E0038`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nYou can also reproduce the behaviour on the playground:\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=e083b7b2d1cb62e355201987e6076775\r\nThe same error can also be reproduced on stable 1.53.0, though rustc then also complains about the feature, of course.\r\n\r\nIt is also worth noting that when the angle brackets around 42 are removed, i.e. `TraitWithConstGeneric<42>`, the code compiles both with and without the `const_generics` feature.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (2faabf579 2021-07-27)\r\nbinary: rustc\r\ncommit-hash: 2faabf579323f5252329264cc53ba9ff803429a3\r\ncommit-date: 2021-07-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 12.0.1\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87551/timeline", "performed_via_github_app": null, "state_reason": null}