{"url": "https://api.github.com/repos/rust-lang/rust/issues/21644", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/21644/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/21644/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/21644/events", "html_url": "https://github.com/rust-lang/rust/issues/21644", "id": 55457279, "node_id": "MDU6SXNzdWU1NTQ1NzI3OQ==", "number": 21644, "title": "HashMap insert method which returns reference to inserted value", "user": {"login": "andrewrk", "id": 106511, "node_id": "MDQ6VXNlcjEwNjUxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/106511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewrk", "html_url": "https://github.com/andrewrk", "followers_url": "https://api.github.com/users/andrewrk/followers", "following_url": "https://api.github.com/users/andrewrk/following{/other_user}", "gists_url": "https://api.github.com/users/andrewrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewrk/subscriptions", "organizations_url": "https://api.github.com/users/andrewrk/orgs", "repos_url": "https://api.github.com/users/andrewrk/repos", "events_url": "https://api.github.com/users/andrewrk/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-26T08:33:39Z", "updated_at": "2015-01-27T02:41:53Z", "closed_at": "2015-01-26T13:30:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's some code using a `HashMap`. Note the `get` right after the `insert`. It would be nice if there were an insert method which returned a reference to the inserted value.\n\n``` rust\n    fn get_cache_entry(&self, key: &CacheKey) -> &CacheValue {\n        match self.cache.get(key) {\n            Option::Some(entry) => entry,\n            Option::None => {\n                // do some stuff...\n                let cache_value = CacheValue {\n                    texture: texture,\n                    glyph: glyph,\n                    bitmap_glyph: bitmap_glyph,\n                };\n                self.cache.insert(*key, cache_value);\n                self.cache.get(key).unwrap()\n            },\n        };\n    }\n```\n", "closed_by": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/21644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/21644/timeline", "performed_via_github_app": null, "state_reason": "completed"}