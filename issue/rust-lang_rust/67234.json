{"url": "https://api.github.com/repos/rust-lang/rust/issues/67234", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67234/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67234/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67234/events", "html_url": "https://github.com/rust-lang/rust/issues/67234", "id": 536541668, "node_id": "MDU6SXNzdWU1MzY1NDE2Njg=", "number": 67234, "title": "Clarify pitfalls of references and NonNull in FFI", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-11T18:28:11Z", "updated_at": "2020-03-06T15:12:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add a note like the one in this commit to the documentation of references and nonnull: https://github.com/rust-lang/rust/pull/62514/commits/fafa4897985f932490960e90ddd2ff39134e967e \r\n\r\nSomething like what that commit does for `Box<T>`:\r\n\r\n```rust\r\n//!  **Important.** At least at present, you should avoid using\r\n//! `Box<T>` types for functions that are defined in C but invoked\r\n//! from Rust. In those cases, you should directly mirror the C types\r\n//! as closely as possible. Using types like `Box<T>` where the C\r\n//! definition is just using `T*` can lead to undefined behavior, as\r\n//! described in [rust-lang/unsafe-code-guidelines#198][ucg#198].\r\n```\r\n\r\nbut replacing `Box<T>` with the reference types and `NonNull<T>`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67234/timeline", "performed_via_github_app": null, "state_reason": null}