{"url": "https://api.github.com/repos/rust-lang/rust/issues/19435", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19435/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19435/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19435/events", "html_url": "https://github.com/rust-lang/rust/issues/19435", "id": 50511263, "node_id": "MDU6SXNzdWU1MDUxMTI2Mw==", "number": 19435, "title": "Iterator reform broke reimplementations of methods now in IteratorExt", "user": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-01T10:58:07Z", "updated_at": "2014-12-03T17:09:06Z", "closed_at": "2014-12-03T16:50:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Recently, `Iterator` was split into `Iterator` and `IteratorExt`, with an implementation `impl<A, I: Iterator<A>> IteratorExt<A> for I`.\n\nI have an Iterator that implements `last` (as the underlying C-API has an efficient implementation for seeking), which now broke:\n\n```\n/home/vagrant/leveldb/src/database/iterator.rs:301:1: 306:2 error: conflicting implementations for trait `core::iter::IteratorExt` [E0119]\n/home/vagrant/leveldb/src/database/iterator.rs:301 impl<'a, K: Key> iter::IteratorExt<Vec<u8>> for ValueIterator<'a,K,Vec<u8>> {\n/home/vagrant/leveldb/src/database/iterator.rs:302   fn last(&mut self) -> Option<Vec<u8>> {\n/home/vagrant/leveldb/src/database/iterator.rs:303      self.seek_last();\n/home/vagrant/leveldb/src/database/iterator.rs:304      Some(self.value())\n/home/vagrant/leveldb/src/database/iterator.rs:305   }\n/home/vagrant/leveldb/src/database/iterator.rs:306 }\n/home/vagrant/leveldb/src/database/iterator.rs:301:1: 306:2 note: conflicting implementation in crate `core`\n/home/vagrant/leveldb/src/database/iterator.rs:301 impl<'a, K: Key> iter::IteratorExt<Vec<u8>> for ValueIterator<'a,K,Vec<u8>> {\n/home/vagrant/leveldb/src/database/iterator.rs:302   fn last(&mut self) -> Option<Vec<u8>> {\n/home/vagrant/leveldb/src/database/iterator.rs:303      self.seek_last();\n/home/vagrant/leveldb/src/database/iterator.rs:304      Some(self.value())\n/home/vagrant/leveldb/src/database/iterator.rs:305   }\n/home/vagrant/leveldb/src/database/iterator.rs:306 }\n```\n\nThe error is expected, but I'd expect that `IteratorExt` methods can be reimplemented like all others.\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19435/timeline", "performed_via_github_app": null, "state_reason": "completed"}