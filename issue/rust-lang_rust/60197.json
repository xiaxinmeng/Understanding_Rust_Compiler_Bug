{"url": "https://api.github.com/repos/rust-lang/rust/issues/60197", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60197/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60197/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60197/events", "html_url": "https://github.com/rust-lang/rust/issues/60197", "id": 436195881, "node_id": "MDU6SXNzdWU0MzYxOTU4ODE=", "number": 60197, "title": "Compiler confused about lifetime when calling mutable method", "user": {"login": "arthurprs", "id": 715958, "node_id": "MDQ6VXNlcjcxNTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/715958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurprs", "html_url": "https://github.com/arthurprs", "followers_url": "https://api.github.com/users/arthurprs/followers", "following_url": "https://api.github.com/users/arthurprs/following{/other_user}", "gists_url": "https://api.github.com/users/arthurprs/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurprs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurprs/subscriptions", "organizations_url": "https://api.github.com/users/arthurprs/orgs", "repos_url": "https://api.github.com/users/arthurprs/repos", "events_url": "https://api.github.com/users/arthurprs/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurprs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-04-23T13:43:48Z", "updated_at": "2021-10-02T22:23:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The compiler wants the function parameter to outlive the call block in this example, but it's not clear why.\r\nIt only happens if I call a method takes &mut self.\r\n\r\nExample snippet https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=fc4b17ad3403da39389481dfb43fac9d\r\n```rust\r\nstruct Demo<T>(Option<T>);\r\n\r\nstruct Obj {\r\n    a: Vec<u8>,\r\n    b: Vec<u8>,\r\n}\r\n\r\nimpl<T> Demo<T> {\r\n    fn non_mut_self(&self, _: &T) {}\r\n    fn mut_self(&mut self, _: &T) {}\r\n    fn something(&mut self) {}\r\n}\r\n\r\nfn happy(s: impl Iterator<Item = Result<Obj, ()>>) {\r\n    let mut demo = Demo(None);\r\n    for obj in s {\r\n        let obj = obj.unwrap();\r\n        let pair = (&obj.a, &obj.b);\r\n        demo.non_mut_self(&pair); // << happy borrow\r\n    }\r\n    demo.something();\r\n}\r\n\r\nfn sad(s: impl Iterator<Item = Result<Obj, ()>>) {\r\n    let mut demo = Demo(None);\r\n    for obj in s {\r\n        let obj = obj.unwrap();\r\n        let pair = (&obj.a, &obj.b);\r\n        demo.mut_self(&pair); // << sad borrow\r\n    }\r\n    demo.something();\r\n}\r\n\r\nfn main() {\r\n    happy(vec![Ok(Obj { a: vec![], b: vec![] })].into_iter());\r\n    sad(vec![Ok(Obj { a: vec![], b: vec![] })].into_iter());\r\n}\r\n```\r\n\r\n```\r\nerror[E0597]: `obj.a` does not live long enough\r\n  --> src/main.rs:28:21\r\n   |\r\n28 |         let pair = (&obj.a, &obj.b);\r\n   |                     ^^^^^^ borrowed value does not live long enough\r\n29 |         demo.mut_self(&pair); // << sad borrow\r\n30 |     }\r\n   |     - `obj.a` dropped here while still borrowed\r\n31 |     demo.something();\r\n   |     ---- borrow later used here\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60197/timeline", "performed_via_github_app": null, "state_reason": null}