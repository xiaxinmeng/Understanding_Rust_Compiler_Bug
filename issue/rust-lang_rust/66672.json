{"url": "https://api.github.com/repos/rust-lang/rust/issues/66672", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66672/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66672/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66672/events", "html_url": "https://github.com/rust-lang/rust/issues/66672", "id": 527571882, "node_id": "MDU6SXNzdWU1Mjc1NzE4ODI=", "number": 66672, "title": "Unhelpful type error for too general trait implementation", "user": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-23T15:38:24Z", "updated_at": "2019-11-23T15:41:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen calling trait method with a too-generic type, the error message does not mention the missing trait bound.\r\n\r\nConsider this example\r\n```\r\ntrait Foo<CTX> {\r\n    fn foo(&self, ctx: &CTX);\r\n}\r\n\r\ntrait Context {}\r\n\r\nstruct A;\r\nimpl Context for A {}\r\n\r\nstruct B;\r\nimpl Foo<A> for B {\r\n    fn foo(&self, ctx: &A) {\r\n        println!(\"Foo for B\")\r\n    }\r\n}\r\n\r\nstruct C { b: B }\r\nimpl<CTX: Context> Foo<CTX> for C {\r\n    fn foo(&self, ctx: &CTX) {\r\n        self.b.foo(ctx);\r\n        println!(\"Foo for C\")\r\n    }\r\n}\r\n```\r\n\r\nI get this error message\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:20:20\r\n   |\r\n20 |         self.b.foo(ctx);\r\n   |                    ^^^ expected struct `A`, found type parameter\r\n   |\r\n   = note: expected type `&A`\r\n              found type `&CTX`\r\n   = help: type parameters must be constrained to match other types\r\n```\r\n\r\nFor derive macros, finding which field is responsible for the error is not obvious.\r\nI would have expected something like\r\n```\r\ntype `B` does not implement trait `Foo<CTX>`\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66672/timeline", "performed_via_github_app": null, "state_reason": null}