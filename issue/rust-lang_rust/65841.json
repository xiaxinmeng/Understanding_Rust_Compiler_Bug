{"url": "https://api.github.com/repos/rust-lang/rust/issues/65841", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65841/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65841/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65841/events", "html_url": "https://github.com/rust-lang/rust/issues/65841", "id": 512811732, "node_id": "MDU6SXNzdWU1MTI4MTE3MzI=", "number": 65841, "title": "Extend rustdoc search", "user": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 2281997310, "node_id": "MDU6TGFiZWwyMjgxOTk3MzEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-type-based-search", "name": "A-type-based-search", "color": "f7e101", "default": false, "description": "Area: searching rustdoc pages using type signatures"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-26T09:05:39Z", "updated_at": "2023-04-24T11:09:19Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "### First idea\r\n\r\nIt'd be nice to write stuff like: `\"avec\"::Vec` or even `vec::`.\r\n\r\nIn the first example, you look specifically into the \"avec\" module/type and look for \"Vec\" inside it.\r\n\r\nIn the second example, you just look at everything inside the matching \"vec\" parent (so that maybe return a lot of things with a bad order).\r\n\r\nOf course, both features could be used at the same time like: `hello::\"avec\"::`.\r\n\r\n### Second idea\r\n\r\nAnother idea that came out was to be able to look at functions based on their arguments.\r\n\r\n### Third idea\r\n\r\nHaving reverse search: instead of looking for something, you'd look for anything that isn't this thing. However, it wouldn't be on the text search itself but on the items filtering. For example: \"!struct:Vec\".\r\n\r\ncc @rust-lang/rustdoc ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65841/timeline", "performed_via_github_app": null, "state_reason": null}