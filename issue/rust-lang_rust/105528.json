{"url": "https://api.github.com/repos/rust-lang/rust/issues/105528", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105528/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105528/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105528/events", "html_url": "https://github.com/rust-lang/rust/issues/105528", "id": 1488432286, "node_id": "I_kwDOAAsO6M5Yt6ye", "number": 105528, "title": "Return `impl for<'a> Fn(&'a)` incorrectly rejected for closures", "user": {"login": "verglasz", "id": 17597129, "node_id": "MDQ6VXNlcjE3NTk3MTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17597129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verglasz", "html_url": "https://github.com/verglasz", "followers_url": "https://api.github.com/users/verglasz/followers", "following_url": "https://api.github.com/users/verglasz/following{/other_user}", "gists_url": "https://api.github.com/users/verglasz/gists{/gist_id}", "starred_url": "https://api.github.com/users/verglasz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verglasz/subscriptions", "organizations_url": "https://api.github.com/users/verglasz/orgs", "repos_url": "https://api.github.com/users/verglasz/repos", "events_url": "https://api.github.com/users/verglasz/events{/privacy}", "received_events_url": "https://api.github.com/users/verglasz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 800802916, "node_id": "MDU6TGFiZWw4MDA4MDI5MTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coercions", "name": "A-coercions", "color": "f7e101", "default": false, "description": "Area: implicit and explicit `expr as Type` coercions"}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-12-10T12:12:02Z", "updated_at": "2022-12-11T02:32:27Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I ran into a compile error while writing some iterator adapters involving building (types containing) closures in a function returning (types containing) `impl for<'a> Fn(&'a)`, which I narrowed down to the following example:\r\n\r\n```rust\r\nfn const_if_unit(input: bool) -> impl for<'a> FnOnce(&'a ()) {\r\n    if input {\r\n        |_| ()\r\n    } else {\r\n        |_| ()\r\n    }\r\n}\r\n```\r\n\r\nThis function fails to typecheck, seemingly because the return type is inferred to only implement `Fn(&())` rather than `for <'a> Fn(&'a ())`.\r\nNote that replacing the body with an unconditional `|_| ()` instead works as expected, and using functions rather than closures also compiles without errors, see [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=246a1e6dfc48aa15545dd58b996118fe) for more examples.\r\nI'm on Rust 1.65.0 but the playground shows the same happening in beta and nightly too.\r\n\r\nSeems related to #99991 and maybe #98437 (that I could find), but they are about trait bounds in input types rather than return `impl`, and here it actually does work as long as the closure is returned unconditionally, though feel free to close as duplicate if it's ultimately the same root issue.\r\n\r\n<details><summary>`cargo check` output</summary>\r\n<p>\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> repro/src/main.rs:2:19\r\n  |\r\n2 |       if input {\r\n  |  ___________________^\r\n3 | |         |_| ()\r\n4 | |     } else {\r\n  | |_____^ one type is more general than the other\r\n  |\r\n  = note: expected trait `for<'b> FnOnce<(&'b u8,)>`\r\n             found trait `FnOnce<(&u8,)>`\r\n\r\nerror: implementation of `FnOnce` is not general enough\r\n --> repro/src/main.rs:2:19\r\n  |\r\n2 |       if input {\r\n  |  ___________________^\r\n3 | |         |_| ()\r\n4 | |     } else {\r\n  | |_____^ implementation of `FnOnce` is not general enough\r\n  |\r\n  = note: `fn(&'2 u8)` must implement `FnOnce<(&'1 u8,)>`, for any lifetime `'1`...\r\n  = note: ...but it actually implements `FnOnce<(&'2 u8,)>`, for some specific lifetime `'2`\r\n\r\nerror: higher-ranked lifetime error\r\n --> repro/src/main.rs:4:12\r\n  |\r\n4 |       } else {\r\n  |  ____________^\r\n5 | |         |_| ()\r\n6 | |     }\r\n  | |_____^\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105528/timeline", "performed_via_github_app": null, "state_reason": null}