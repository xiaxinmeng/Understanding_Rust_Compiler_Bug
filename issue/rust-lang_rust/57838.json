{"url": "https://api.github.com/repos/rust-lang/rust/issues/57838", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57838/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57838/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57838/events", "html_url": "https://github.com/rust-lang/rust/issues/57838", "id": 401840516, "node_id": "MDU6SXNzdWU0MDE4NDA1MTY=", "number": 57838, "title": "Add an is_default() to Default trait", "user": {"login": "aledomu", "id": 31723328, "node_id": "MDQ6VXNlcjMxNzIzMzI4", "avatar_url": "https://avatars.githubusercontent.com/u/31723328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aledomu", "html_url": "https://github.com/aledomu", "followers_url": "https://api.github.com/users/aledomu/followers", "following_url": "https://api.github.com/users/aledomu/following{/other_user}", "gists_url": "https://api.github.com/users/aledomu/gists{/gist_id}", "starred_url": "https://api.github.com/users/aledomu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aledomu/subscriptions", "organizations_url": "https://api.github.com/users/aledomu/orgs", "repos_url": "https://api.github.com/users/aledomu/repos", "events_url": "https://api.github.com/users/aledomu/events{/privacy}", "received_events_url": "https://api.github.com/users/aledomu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-22T16:14:40Z", "updated_at": "2019-01-22T16:36:51Z", "closed_at": "2019-01-22T16:36:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to ask if this an addition small enough to not need the whole RFC + discussion process.\r\n\r\nMy idea, which is something at times I wished was there, is to add an implemented method to the `Default` trait like this:\r\n\r\n```rust\r\npub trait Default {\r\n    ...\r\n    pub fn is_default(&self) -> bool {\r\n        self == Self::default()\r\n    }\r\n}\r\n```\r\n\r\nNote that the method automatically works for any struct that implements `Default::default()`.\r\n\r\nLet me know what you think.", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57838/timeline", "performed_via_github_app": null, "state_reason": "completed"}