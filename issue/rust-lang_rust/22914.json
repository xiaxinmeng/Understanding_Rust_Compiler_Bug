{"url": "https://api.github.com/repos/rust-lang/rust/issues/22914", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22914/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22914/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22914/events", "html_url": "https://github.com/rust-lang/rust/issues/22914", "id": 59368993, "node_id": "MDU6SXNzdWU1OTM2ODk5Mw==", "number": 22914, "title": "PhantomData is incomprehensible", "user": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-03-01T00:33:26Z", "updated_at": "2015-04-02T01:32:48Z", "closed_at": "2015-04-02T01:32:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I need to give a Rust slice to a C API that will return an opaque handle (that actually contains a pointer to the slice), and the slice must outlive the handle.\n\n`rustc` nicely suggested using `PhantomData` for this, but the description of phantom data (and its RFC) for me is so far removed from my mental model/terminology of the problem, that it [sounds like git man pages to me](http://git-man-page-generator.lokaltog.net/). \n- \"\u2026tell the compiler about fake fields\" \u2014 _fake field_ doesn't sound like a thing I want to create. I'm not sure if a fake field is an actual Rust concept. I'm hoping it's a different way of saying a \"pointer that Rust isn't keeping track of\".\n- \"inform the compiler that one or more instances of the type T could be dropped\" \u2014 but does it actually drop anything? I want to prevent value from being dropped, so this confuses me.\n\nThe RFC is even worse, since it uses type variance terminology which is so confusing, that the most comprehensible description of them on Wikipedia is a **3D cube**!\n\n![3d variance](http://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/Java_wildcard_subtyping.svg/700px-Java_wildcard_subtyping.svg.png)\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22914/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22914/timeline", "performed_via_github_app": null, "state_reason": "completed"}