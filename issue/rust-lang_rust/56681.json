{"url": "https://api.github.com/repos/rust-lang/rust/issues/56681", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56681/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56681/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56681/events", "html_url": "https://github.com/rust-lang/rust/issues/56681", "id": 389440642, "node_id": "MDU6SXNzdWUzODk0NDA2NDI=", "number": 56681, "title": "unexplained Rust gotcha in Guessing Game example", "user": {"login": "narration-sd", "id": 247945, "node_id": "MDQ6VXNlcjI0Nzk0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/247945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/narration-sd", "html_url": "https://github.com/narration-sd", "followers_url": "https://api.github.com/users/narration-sd/followers", "following_url": "https://api.github.com/users/narration-sd/following{/other_user}", "gists_url": "https://api.github.com/users/narration-sd/gists{/gist_id}", "starred_url": "https://api.github.com/users/narration-sd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/narration-sd/subscriptions", "organizations_url": "https://api.github.com/users/narration-sd/orgs", "repos_url": "https://api.github.com/users/narration-sd/repos", "events_url": "https://api.github.com/users/narration-sd/events{/privacy}", "received_events_url": "https://api.github.com/users/narration-sd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-12-10T18:59:45Z", "updated_at": "2018-12-13T02:20:13Z", "closed_at": "2018-12-12T01:53:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is due to a facet you are promoting of Rust language, but causes consternation in what is supposed to be an easy-entry example.\r\n\r\nThe problem occurs when you are invited to 'just' add a loop to your code-so-far, to allow multiple guesses.  What you are likely to get if you follow other language practices is a nasty error: \r\n``` \r\nthread 'main' panicked at 'Por favor, escriba un n\u00famero!: ParseIntError { kind: InvalidDigit }', libcore\\result.rs:1009:5\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\nerror: process didn't exit successfully: `target\\debug\\guessing_game.exe` (exit code: 101)\r\n```\r\n\r\nThis occurs if you don't include the line `let mut guess = String::new();` within the loop, which is likely if you have a lot of experience, and are in a hurry, especially, though no doubt newer persons could also do it.  If you go on to include the better error handling later in the lesson, you'll get an equally obscure error: `invalid digit found in string`.\r\n\r\nIn the morning, it seems this occurs because of the type-shadowing which has made the var `guess` no longer able to take a String. I would also say that the error messages, either of them, are very uninformative about the real problem.\r\n\r\nWhat can you do?\r\n- I would suggest that the erroring for this kind of case be vastly improved. \r\n-- There's no line number for the code error -- this is basic, right?\r\n-- 'panicked' ?? come on...\r\n-- it's not an invalid digit, it's an invalid type String trying to be digits....you should say so\r\n-- this whole thing gets awkward fast, so examining how you treat 'shadowed' variables would likely lead to much better thinking about how to act when it goes wrong. \r\n-- So, this points to a fundamental Rust issue, I suspect.\r\n-- the RUST_BACKTRACE is actually an env var, thus unclear -- and its presence in the message is by reading your prior issues a sort of bodge to respond to other obscurities...\r\n-- the 'better' error message is just wrong. The input isn't bad because it's something wrong in the String; it's bad because the shadowed var can't take a String at all...\r\n\r\nI was really surprised to see such a highly touted newer language being so raw. It makes me a bit wary about the intended reason to use it, Web Assembly. I hope you'll improve, thanks.\r\n\r\n", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56681/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56681/timeline", "performed_via_github_app": null, "state_reason": "completed"}