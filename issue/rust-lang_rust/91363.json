{"url": "https://api.github.com/repos/rust-lang/rust/issues/91363", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91363/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91363/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91363/events", "html_url": "https://github.com/rust-lang/rust/issues/91363", "id": 1066329428, "node_id": "I_kwDOAAsO6M4_juVU", "number": 91363, "title": "Inserting a conditional `break` in working code causes strange borrowck error", "user": {"login": "SNCPlay42", "id": 5455518, "node_id": "MDQ6VXNlcjU0NTU1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5455518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SNCPlay42", "html_url": "https://github.com/SNCPlay42", "followers_url": "https://api.github.com/users/SNCPlay42/followers", "following_url": "https://api.github.com/users/SNCPlay42/following{/other_user}", "gists_url": "https://api.github.com/users/SNCPlay42/gists{/gist_id}", "starred_url": "https://api.github.com/users/SNCPlay42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SNCPlay42/subscriptions", "organizations_url": "https://api.github.com/users/SNCPlay42/orgs", "repos_url": "https://api.github.com/users/SNCPlay42/repos", "events_url": "https://api.github.com/users/SNCPlay42/events{/privacy}", "received_events_url": "https://api.github.com/users/SNCPlay42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2366929133, "node_id": "MDU6TGFiZWwyMzY2OTI5MTMz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-control-flow", "name": "A-control-flow", "color": "f7e101", "default": false, "description": "Area: Relating to control flow"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-29T17:53:44Z", "updated_at": "2021-11-29T18:41:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nThis code compiles successfully:\r\n\r\n```rust\r\npub struct Node {\r\n    left: Option<Box<Node>>,\r\n}\r\n\r\npub fn remove_min(\r\n    root: &mut Option<Box<Node>>,\r\n) {\r\n    let mut p = root;\r\n    while p.as_ref().unwrap().left.is_some() {\r\n        let q = p.as_mut().unwrap();\r\n        p = &mut q.left;\r\n    }\r\n    p.take();\r\n}\r\n```\r\n\r\nI tried this version:\r\n\r\n```rust\r\npub struct Node {\r\n    left: Option<Box<Node>>,\r\n}\r\n\r\npub fn remove_min(\r\n    root: &mut Option<Box<Node>>,\r\n) {\r\n    let mut p = root;\r\n    while p.as_ref().unwrap().left.is_some() {\r\n        let q = p.as_mut().unwrap();\r\n        if true { // or any arbitrary expression\r\n            break;\r\n        }\r\n        p = &mut q.left;\r\n    }\r\n    p.take();\r\n}\r\n```\r\n\r\nI expected this to compile successfully.\r\n\r\nInstead, this happened:\r\n\r\n```\r\nerror[E0499]: cannot borrow `*p` as mutable more than once at a time\r\n  --> <source>:16:5\r\n   |\r\n10 |         let q = p.as_mut().unwrap();\r\n   |                 - first mutable borrow occurs here\r\n...\r\n16 |     p.take();\r\n   |     ^\r\n   |     |\r\n   |     second mutable borrow occurs here\r\n   |     first borrow later used here\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n### Meta\r\n\r\nOccurs on stable (1.56) on the [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=d80ce203d520eb9e52fdd6468c7499ac).\r\n\r\nNotably, this [compiles succesfully](https://rust.godbolt.org/z/EnY4rxxsG) with polonius.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91363/timeline", "performed_via_github_app": null, "state_reason": null}