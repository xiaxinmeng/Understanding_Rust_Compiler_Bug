{"url": "https://api.github.com/repos/rust-lang/rust/issues/17120", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/17120/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/17120/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/17120/events", "html_url": "https://github.com/rust-lang/rust/issues/17120", "id": 42281196, "node_id": "MDU6SXNzdWU0MjI4MTE5Ng==", "number": 17120, "title": "Some( NULL ) returns None", "user": {"login": "kaseyc", "id": 2405952, "node_id": "MDQ6VXNlcjI0MDU5NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2405952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaseyc", "html_url": "https://github.com/kaseyc", "followers_url": "https://api.github.com/users/kaseyc/followers", "following_url": "https://api.github.com/users/kaseyc/following{/other_user}", "gists_url": "https://api.github.com/users/kaseyc/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaseyc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaseyc/subscriptions", "organizations_url": "https://api.github.com/users/kaseyc/orgs", "repos_url": "https://api.github.com/users/kaseyc/repos", "events_url": "https://api.github.com/users/kaseyc/events{/privacy}", "received_events_url": "https://api.github.com/users/kaseyc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/20", "html_url": "https://github.com/rust-lang/rust/milestone/20", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/20/labels", "id": 452034, "node_id": "MDk6TWlsZXN0b25lNDUyMDM0", "number": 20, "title": "1.0", "description": "This will be the first major release of Rust, where we offer some guaranteed level of support and backwards compatibility.\r\n\r\nThe significant criteria for this release are:\r\n\r\n* Language backwards compatibility - All major features are in, and in their final form. Generally, the only new language features added after this milestone must be backwards compatible, or to fix soundness holes, though we do expect to have some leeway to make small incompatible fixes that have low impact on existing code bases.\r\n\r\n* Library stability - We have a system of measuring and ensuring the stability of API's, and a significant portion of the standard library is declared stable. Stable API's will not change. Large portions of the standard library need to be stable for 1.0, including primitive types, vectors, strings, option, numerics, collections, some I/O and concurrency.\r\n\r\n* User experience - The system is polished and the presentation is complete and professional. New users have a clear path to using and learning the system. This encompasses the web site, documentation, installation, and tooling.\r\n", "creator": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 376, "state": "closed", "created_at": "2013-10-10T18:48:33Z", "updated_at": "2016-08-28T23:13:24Z", "due_on": "2015-05-15T07:00:00Z", "closed_at": "2015-05-21T20:59:13Z"}, "comments": 5, "created_at": "2014-09-09T08:12:02Z", "updated_at": "2014-09-22T00:55:46Z", "closed_at": "2014-09-13T13:46:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you try to take Some of a null pointer, it will be interpreted as None. This seems to occur for any two element enum with the same signature as option,\n\nExample:\n\n``` rust\nenum Foo<T> {\n    Bar(T),\n    Baz\n}\n\nimpl<T> Foo<T> {\n    fn as_string(&self) -> String {\n        match *self {\n            Bar(_) => \"Bar(_)\".to_string(),\n            Baz => \"Baz\".to_string(),\n        }\n    }\n\n    fn is_bar(&self) -> bool {\n        match *self {\n            Bar(_) => true,\n            _ => false\n        }\n    }\n\n    fn is_baz(&self) -> bool {\n        match *self {\n            Baz => true,\n            _ => false\n        }\n    }\n}\n\n\nfn main() {\n        println!(\"Should be Some: {}\", Some( 0u8 as *const u8))\n        let foo = Bar( 0u8 as *const u8 );\n        println!(\"Should be Bar: {}\\nBar: {}, Baz: {}\", foo.as_string(), foo.is_bar(), foo.is_baz() );\n}\n```\n\nWhich prints:\n\n```\nShould be Some: None\nShould be Bar: Baz\nBar: false, Baz: true\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/17120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/17120/timeline", "performed_via_github_app": null, "state_reason": "completed"}