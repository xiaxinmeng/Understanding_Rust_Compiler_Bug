{"url": "https://api.github.com/repos/rust-lang/rust/issues/87862", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/87862/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/87862/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/87862/events", "html_url": "https://github.com/rust-lang/rust/issues/87862", "id": 963429321, "node_id": "MDU6SXNzdWU5NjM0MjkzMjE=", "number": 87862, "title": "docs: clarify pointer provenance of `Rc::as_ptr()`", "user": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 3983786342, "node_id": "LA_kwDOAAsO6M7tc8Fm", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-strict-provenance", "name": "A-strict-provenance", "color": "f7e101", "default": false, "description": "Area: Strict provenance for raw pointers"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-08-08T13:09:46Z", "updated_at": "2023-02-20T17:18:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is unclear whether it is valid to mutate the `*const T` returned by `Rc::as_ptr()` without looking at or relying on implementation details (edit: assuming there is no other `Rc` or `Weak` to the same `T`, aka. strong count is 1 and weak count is 0).\r\nA quick look at the function signature in the documentation may suggest that, given it takes a `&Rc<T>` and returns a `*const T`, it should be UB to mutate. However, `Rc<T>` itself does not own the T, so `&Rc<T>` \u2260 `&T`. \r\n`RcBox<T>` (private, impl. detail) does own the T, and `Rc<T>` always contains a mutable pointer to the `RcBox`, so the type of reference in the receiver (`&Rc<T>` vs `&mut Rc<T>`) should be irrelevant as to whether it is valid to mutate the `*const T`.\r\nI believe it *is* valid to mutate the `*const T` as Rc is currently implemented, despite only having a shared reference to `Rc<T>` and the pointer being const (AFAIK `*const` vs `*mut` is just \"cosmetic\", what matters is *how* the pointer was obtained)\r\nThis relies on implementation details of `Rc<T>` and I feel like this situation should be documented.\r\n\r\n(The same applies to `Arc::as_ptr()`)\r\n\r\n```rs\r\nuse std::rc::Rc;\r\n\r\nlet foo = Rc::new(1u8);\r\n\r\nunsafe {\r\n  // Valid? Relies on implementation details\r\n  let foo_ref = &mut *(Rc::as_ptr(&foo) as *mut u8);\r\n  *foo_ref += 1;\r\n};\r\n\r\nprintln!(\"{}\", foo);\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/87862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/87862/timeline", "performed_via_github_app": null, "state_reason": null}