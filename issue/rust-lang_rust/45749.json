{"url": "https://api.github.com/repos/rust-lang/rust/issues/45749", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45749/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45749/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45749/events", "html_url": "https://github.com/rust-lang/rust/issues/45749", "id": 271120023, "node_id": "MDU6SXNzdWUyNzExMjAwMjM=", "number": 45749, "title": "Attributes generated by a macro argument provided by another macro crashes the compiler", "user": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-03T21:11:21Z", "updated_at": "2017-11-05T13:06:03Z", "closed_at": "2017-11-05T13:06:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I was working on a macro in a project of mine, and while I was experimenting the compiler started crashing. I managed to reduce the problem to this minimal example:\r\n\r\n```rust\r\nmacro_rules! foo {\r\n    ($name:ident, $doc:expr) => {\r\n        // It doesn't matter which attribute is used\r\n        // For example the bug exists also with the serde attribute\r\n        #[doc = $doc]\r\n        static $name: &'static str = \"foo\";\r\n    };\r\n}\r\n\r\nmacro_rules! bar {\r\n    () => { \"bar\" }\r\n}\r\n\r\nfoo!(BAZ, bar!());\r\n\r\nfn main() {\r\n    assert_eq!(BAZ, \"bar\");\r\n}\r\n```\r\n\r\nWhen I try to compile this, I get this output:\r\n\r\n```\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.20.0 (f3d6973f4 2017-08-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'no entry found for key', /checkout/src/libcore/option.rs:819:4\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:380\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:390\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:611\r\n   5: std::panicking::begin_panic_new\r\n             at /checkout/src/libstd/panicking.rs:553\r\n   6: std::panicking::begin_panic_fmt\r\n             at /checkout/src/libstd/panicking.rs:521\r\n   7: rust_begin_unwind\r\n             at /checkout/src/libstd/panicking.rs:497\r\n   8: core::panicking::panic_fmt\r\n             at /checkout/src/libcore/panicking.rs:92\r\n   9: core::option::expect_failed\r\n             at /checkout/src/libcore/option.rs:819\r\n  10: rustc_resolve::macros::<impl rustc_resolve::Resolver<'a>>::resolve_macro_to_def\r\n  11: rustc_resolve::macros::<impl syntax::ext::base::Resolver for rustc_resolve::Resolver<'a>>::resolve_invoc\r\n  12: syntax::ext::expand::MacroExpander::expand\r\n  13: syntax::ext::expand::MacroExpander::expand_crate\r\n  14: rustc_driver::driver::phase_2_configure_and_expand::{{closure}}\r\n  15: rustc_driver::driver::phase_2_configure_and_expand\r\n  16: rustc_driver::driver::compile_input\r\n  17: rustc_driver::run_compiler\r\n```\r\n\r\n*Note: I'm using rust 1.20 on this machine, but I tested the example on the playground and it crashes even on the latest stable.*\r\n\r\nIf I change the macro invocation to `foo!(BAZ, \"bar\");` it compiles successfully, and it fails with every other macro I passes as argument.", "closed_by": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45749/timeline", "performed_via_github_app": null, "state_reason": "completed"}