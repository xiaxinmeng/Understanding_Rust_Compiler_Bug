{"url": "https://api.github.com/repos/rust-lang/rust/issues/18620", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18620/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18620/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18620/events", "html_url": "https://github.com/rust-lang/rust/issues/18620", "id": 47745454, "node_id": "MDU6SXNzdWU0Nzc0NTQ1NA==", "number": 18620, "title": "Lifetimes should be inferred in simple cases", "user": {"login": "mhart", "id": 367936, "node_id": "MDQ6VXNlcjM2NzkzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/367936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhart", "html_url": "https://github.com/mhart", "followers_url": "https://api.github.com/users/mhart/followers", "following_url": "https://api.github.com/users/mhart/following{/other_user}", "gists_url": "https://api.github.com/users/mhart/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhart/subscriptions", "organizations_url": "https://api.github.com/users/mhart/orgs", "repos_url": "https://api.github.com/users/mhart/repos", "events_url": "https://api.github.com/users/mhart/events{/privacy}", "received_events_url": "https://api.github.com/users/mhart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-11-04T18:07:34Z", "updated_at": "2015-01-29T04:11:20Z", "closed_at": "2015-01-29T04:11:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rust newbie here. This is very probably a dupe, but my GH foo failed me.\n\nThe following fails to compile:\n\n``` rust\nfn my_fn<T>(items: T) where T: Iterator<&str> {\n    println!(\"hello\")\n}\n```\n\nWith:\n\n```\n<anon>:5:41: 5:45 error: missing lifetime specifier [E0106]\n<anon>:5 fn my_fn<T>(items: T) where T: Iterator<&str> {\n                                                 ^~~~\n```\n\nBut it's unclear to me why the compiler can't just infer the lifetime here?\n\nShouldn't this be the default choice?\n\n``` rust\nfn my_fn<'a, T>(items: T) where T: Iterator<&'a str> {\n    println!(\"hello\")\n}\n```\n\n_Edit:_ So it could also be `'static`, but I wouldn't have thought that would be the default (or encouraged) case. If you did want it to be static, then you could declare it explicitly. Similar to how variables are immutable by default (without needing an explicit declaration), yet if you want them to be mutable you declare it.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18620/timeline", "performed_via_github_app": null, "state_reason": "completed"}