{"url": "https://api.github.com/repos/rust-lang/rust/issues/107205", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107205/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107205/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107205/events", "html_url": "https://github.com/rust-lang/rust/issues/107205", "id": 1552223883, "node_id": "I_kwDOAAsO6M5chQ6L", "number": 107205, "title": "codegen generates vtables for a variable's supertype when unsizing sometimes", "user": {"login": "Rattenkrieg", "id": 6948307, "node_id": "MDQ6VXNlcjY5NDgzMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/6948307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rattenkrieg", "html_url": "https://github.com/Rattenkrieg", "followers_url": "https://api.github.com/users/Rattenkrieg/followers", "following_url": "https://api.github.com/users/Rattenkrieg/following{/other_user}", "gists_url": "https://api.github.com/users/Rattenkrieg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rattenkrieg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rattenkrieg/subscriptions", "organizations_url": "https://api.github.com/users/Rattenkrieg/orgs", "repos_url": "https://api.github.com/users/Rattenkrieg/repos", "events_url": "https://api.github.com/users/Rattenkrieg/events{/privacy}", "received_events_url": "https://api.github.com/users/Rattenkrieg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2023-01-22T18:08:44Z", "updated_at": "2023-06-15T09:45:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was putting `&`'s here and there to make my program compile as beginners supposed to do and finally ended with:\r\n\r\n```\r\n  = note: Undefined symbols for architecture arm64:\r\n            \"core::ptr::drop_in_place$LT$fn$LP$$RF$$u5b$i64$u5d$$RP$$u20$.$GT$$u20$i64$GT$::h8f1379e9ceec7fb5\", referenced from:\r\n                l___unnamed_1 in wyas-3cfa3c0d2101b65b.6xaszv4ay9i42ky.rcgu.o\r\n          ld: symbol(s) not found for architecture arm64\r\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\nTo assure myself that this is unrelated to native/rosetta mess I've ran this in docker and in [rust playground](https://play.rust-lang.org/?version=stable&mode=release&edition=2021&gist=ea5473b749dd86ba767cc9acbd2f8be5) with the same outcome.\r\n```\r\n  = note: /usr/bin/ld: /playground/target/release/deps/playground-7e94a1292993c003.playground.0627c30c-cgu.0.rcgu.o:(.data.rel.ro..L__unnamed_3+0x0): undefined reference to `core::ptr::drop_in_place<fn(&[i64]) -> i64>'\r\n          /usr/bin/ld: /playground/target/release/deps/playground-7e94a1292993c003: hidden symbol `_ZN4core3ptr66drop_in_place$LT$fn$LP$$RF$$u5b$i64$u5d$$RP$$u20$.$GT$$u20$i64$GT$17h8581d5a4605118bdE' isn't defined\r\n          /usr/bin/ld: final link failed: bad value\r\n```\r\n\r\nThis particular code breaks the linker\r\n```rust\r\nstruct Wrapper(fn(val: &[i64]) -> i64);\r\n\r\nimpl Debug for Wrapper {\r\n    fn fmt<'a>(&'a self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        f.debug_tuple(\"Wrapper\").field(&self.0 as &fn(&'a [i64]) -> i64).finish()\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"{:?}\", Wrapper(useful));\r\n}\r\n```\r\nI've come up with that since deriving `Debug` or implementing it manually like that \r\n```rust\r\nimpl Debug for Wrapper {\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        f.debug_tuple(\"Wrapper\").field(&self.0).finish()\r\n    }\r\n}\r\n```\r\nleads to following type/borrow check error:\r\n> implementation of `Debug` is not general enough\r\n\r\nExpected behavior: program prints\r\n> Wrapper(address)\r\n\r\nActual behavior: *see above*\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.1 (90743e729 2023-01-10)\r\nbinary: rustc\r\ncommit-hash: 90743e7298aca107ddaa0c202a4d3604e29bfeb6\r\ncommit-date: 2023-01-10\r\nhost: aarch64-apple-darwin\r\nrelease: 1.66.1\r\nLLVM version: 15.0.2\r\n```\r\n\r\nI've tried both beta `1.67.0-beta.9` and nightly `1.68.0-nighlty` at rust playground and both are failing during linking.\r\n\r\n----------------\r\n***Edit***\r\n\r\nI've bruteforced working program \ud83d\ude02  :\r\n```rust\r\nimpl Debug for Wrapper {\r\n    fn fmt<'a>(&'a self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        f.debug_tuple(\"Wrapper\").field(&(self.0 as fn(&'a [i64]) -> i64)).finish()\r\n    }\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107205/timeline", "performed_via_github_app": null, "state_reason": null}