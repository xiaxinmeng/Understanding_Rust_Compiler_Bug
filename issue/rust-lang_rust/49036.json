{"url": "https://api.github.com/repos/rust-lang/rust/issues/49036", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49036/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49036/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49036/events", "html_url": "https://github.com/rust-lang/rust/issues/49036", "id": 305406539, "node_id": "MDU6SXNzdWUzMDU0MDY1Mzk=", "number": 49036, "title": "Possible Vec::split improvement", "user": {"login": "tdbgamer", "id": 3655689, "node_id": "MDQ6VXNlcjM2NTU2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/3655689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdbgamer", "html_url": "https://github.com/tdbgamer", "followers_url": "https://api.github.com/users/tdbgamer/followers", "following_url": "https://api.github.com/users/tdbgamer/following{/other_user}", "gists_url": "https://api.github.com/users/tdbgamer/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdbgamer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdbgamer/subscriptions", "organizations_url": "https://api.github.com/users/tdbgamer/orgs", "repos_url": "https://api.github.com/users/tdbgamer/repos", "events_url": "https://api.github.com/users/tdbgamer/events{/privacy}", "received_events_url": "https://api.github.com/users/tdbgamer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-15T03:49:51Z", "updated_at": "2018-03-16T01:19:14Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys! The other day I was working on something where I had some ``Vec<u8>`` data and wanted to split on two consecutive bytes. Normally with strings I can just do:\r\n```rust\r\nlet v: Vec<&str> = \"Hello\\r\\nWorld!\".split(\"\\r\\n\").collect();\r\n```\r\nBut for ``Vec<u8>`` it only accepts a closure rather than a Pattern type, so it's not very easy to split on consecutive bytes. I noticed that ``String::split`` coerces closures and strings into Patterns that it uses to do the split. Do you think it would be possible (or even a good idea) to modify ``Vec::split`` and ``slice::split`` to accept any Pattern type and implement a new searcher for any PartialEq type? That would be pretty nice. Then we could do things like:\r\n```rust\r\nlet v: Vec<u8> = b\"Hello\\r\\nWorldWithOtherNonUtf8Stuff\".split(b\"\\r\\n\").collect();\r\n```\r\nWhich is useful if you're dealing with lots of bytes that may or may not be valid UTF-8.\r\nAnd just generally it makes sense to me that if ``String::split`` accepts a ``&str``, that ``Vec<T>::split`` would accept a ``&[T]``.\r\n\r\nMaybe I'm missing something obvious that makes this impossible since I imagine someone would've done it already if it were possible.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49036/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49036/timeline", "performed_via_github_app": null, "state_reason": null}