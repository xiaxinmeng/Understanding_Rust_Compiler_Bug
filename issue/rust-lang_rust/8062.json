{"url": "https://api.github.com/repos/rust-lang/rust/issues/8062", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8062/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8062/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8062/events", "html_url": "https://github.com/rust-lang/rust/issues/8062", "id": 17273432, "node_id": "MDU6SXNzdWUxNzI3MzQzMg==", "number": 8062, "title": "lack of mtwt xi could cause breakage", "user": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-07-26T17:04:17Z", "updated_at": "2014-06-24T00:49:38Z", "closed_at": "2013-09-24T18:48:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a placeholder comment. The hygiene system as I've implemented it does not track the foreign environment (referred to as xi in MTWT), and correspondingly omits the expand step that replaces a varref with the varref stored in xi.  I haven't figured out how to make this cause a bug, and indeed it may not correspond to any bugs in our existing system (particularly because of our present inability to specify macros that take args inside of other macros).\n\nConsider this program:\n\nlet xx = 9; macro_rules! g(() => (xx)); g!();\n\nThis program works fine (the xx that results from the expansion of g!() is bound by the 'xx'), _but_... they have different marks. this means that if you can find a nasty way to do another renaming on the binding and the varref, it will break. Again, I'm not sure this is even possible in our sub-implementation of MTWT.\n", "closed_by": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8062/timeline", "performed_via_github_app": null, "state_reason": "completed"}