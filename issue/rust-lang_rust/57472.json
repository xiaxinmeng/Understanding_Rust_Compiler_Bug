{"url": "https://api.github.com/repos/rust-lang/rust/issues/57472", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57472/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57472/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57472/events", "html_url": "https://github.com/rust-lang/rust/issues/57472", "id": 397453174, "node_id": "MDU6SXNzdWUzOTc0NTMxNzQ=", "number": 57472, "title": "Pattern-matching array values in struct fields causes compiler panic", "user": {"login": "mooli", "id": 85358, "node_id": "MDQ6VXNlcjg1MzU4", "avatar_url": "https://avatars.githubusercontent.com/u/85358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mooli", "html_url": "https://github.com/mooli", "followers_url": "https://api.github.com/users/mooli/followers", "following_url": "https://api.github.com/users/mooli/following{/other_user}", "gists_url": "https://api.github.com/users/mooli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mooli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mooli/subscriptions", "organizations_url": "https://api.github.com/users/mooli/orgs", "repos_url": "https://api.github.com/users/mooli/repos", "events_url": "https://api.github.com/users/mooli/events{/privacy}", "received_events_url": "https://api.github.com/users/mooli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 632838966, "node_id": "MDU6TGFiZWw2MzI4Mzg5NjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-slice-patterns", "name": "A-slice-patterns", "color": "f7e101", "default": false, "description": "Area: slice patterns, https://github.com/rust-lang/rust/issues/23121"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-09T16:33:54Z", "updated_at": "2019-01-14T01:00:03Z", "closed_at": "2019-01-14T01:00:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing some code which parses on-disk structures which vary their type based on magic numbers scattered through the structure. I have chosen to model this as a union of structs, and the magic number fields as byte arrays because they have neither power-of-two alignment or size, and then pattern-match on magic numbers to determine the type. This turns out to be sufficiently pathological to cause compiler panics.\r\n\r\nHere is a minimal case that triggers the panic:\r\n```rust\r\npub struct Punned {\r\n    foo: [u8; 1],\r\n    bar: [u8; 1],\r\n}\r\npub fn test(punned: Punned) {\r\n    match punned {\r\n        Punned { foo: [_], .. } => println!(\"foo\"),\r\n        Punned { bar: [_], .. } => println!(\"bar\"),\r\n    }\r\n}\r\n```\r\nPlaying around with the different things being matched on \u2014 my real code matches on constants \u2014 suggest that this is a bug in the exhaustiveness checking.\r\n\r\nOutput of `rustc --version --verbose`:\r\n```\r\nrustc 1.33.0-nightly (d22fa2d87 2019-01-08)\r\nbinary: rustc\r\ncommit-hash: d22fa2d87d03d19fdb1359faab9ec5e74eff26b3\r\ncommit-date: 2019-01-08\r\nhost: x86_64-apple-darwin\r\nrelease: 1.33.0-nightly\r\nLLVM version: 8.0\r\n```\r\nOutput of `RUST_BACKTRACE=1 rustc crash.rs`:\r\n```\r\nthread 'rustc' panicked at 'expected `LazyConst` to contain a usize', src/libcore/option.rs:1040:5\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::sys_common::backtrace::_print\r\n   2: std::panicking::default_hook::{{closure}}\r\n   3: std::panicking::default_hook\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n   6: std::panicking::continue_panic_fmt\r\n   7: rust_begin_unwind\r\n   8: core::panicking::panic_fmt\r\n   9: core::option::expect_failed\r\n  10: rustc_mir::hair::pattern::_match::pat_constructors\r\n  11: rustc_mir::hair::pattern::_match::is_useful\r\n  12: rustc_mir::hair::pattern::_match::is_useful\r\n  13: rustc_mir::hair::pattern::_match::is_useful_specialized\r\n  14: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::try_fold\r\n  15: rustc_mir::hair::pattern::_match::is_useful\r\n  16: rustc_mir::hair::pattern::_match::is_useful_specialized\r\n  17: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::try_fold\r\n  18: rustc_mir::hair::pattern::_match::is_useful\r\n  19: rustc_mir::hair::pattern::check_match::check_arms\r\n  20: rustc_mir::hair::pattern::_match::MatchCheckCtxt::create_and_enter\r\n  21: <rustc_mir::hair::pattern::check_match::MatchVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  22: <rustc_mir::hair::pattern::check_match::MatchVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  23: <rustc_mir::hair::pattern::check_match::MatchVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_body\r\n  24: rustc::session::Session::track_errors\r\n  25: rustc_mir::hair::pattern::check_match::check_match\r\n  26: rustc::ty::query::__query_compute::check_match\r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::check_match<'tcx>>::compute\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  30: <rustc_mir::hair::pattern::check_match::OuterVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_body\r\n  31: rustc::hir::intravisit::walk_item\r\n  32: rustc::hir::Crate::visit_all_item_likes\r\n  33: rustc_mir::hair::pattern::check_match::check_crate\r\n  34: rustc::util::common::time\r\n  35: <std::thread::local::LocalKey<T>>::with\r\n  36: rustc_driver::driver::compile_input\r\n  37: rustc_driver::run_compiler_with_pool\r\n  38: <scoped_tls::ScopedKey<T>>::set\r\n  39: rustc_driver::run_compiler\r\n  40: <scoped_tls::ScopedKey<T>>::set\r\nquery stack during panic:\r\n#0 [check_match] processing `test`\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.33.0-nightly (d22fa2d87 2019-01-08) running on x86_64-apple-darwin\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57472/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57472/timeline", "performed_via_github_app": null, "state_reason": "completed"}