{"url": "https://api.github.com/repos/rust-lang/rust/issues/110734", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/110734/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/110734/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/110734/events", "html_url": "https://github.com/rust-lang/rust/issues/110734", "id": 1680104578, "node_id": "I_kwDOAAsO6M5kJFyC", "number": 110734, "title": "ExactSizeIterator seems to generate worse assembly if mutated before collected into `Vec`", "user": {"login": "ZhennanWu", "id": 38578020, "node_id": "MDQ6VXNlcjM4NTc4MDIw", "avatar_url": "https://avatars.githubusercontent.com/u/38578020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZhennanWu", "html_url": "https://github.com/ZhennanWu", "followers_url": "https://api.github.com/users/ZhennanWu/followers", "following_url": "https://api.github.com/users/ZhennanWu/following{/other_user}", "gists_url": "https://api.github.com/users/ZhennanWu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZhennanWu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZhennanWu/subscriptions", "organizations_url": "https://api.github.com/users/ZhennanWu/orgs", "repos_url": "https://api.github.com/users/ZhennanWu/repos", "events_url": "https://api.github.com/users/ZhennanWu/events{/privacy}", "received_events_url": "https://api.github.com/users/ZhennanWu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2023-04-23T17:32:59Z", "updated_at": "2023-04-26T02:24:38Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nGodbolt link https://godbolt.org/z/cMdx6v1G9\r\n\r\n```rust\r\npub fn exact_size(){\r\n    let it = std::hint::black_box(vec![1,2,3].into_iter());\r\n    let v = it.collect::<Vec<_>>();\r\n    std::hint::black_box(v);\r\n}\r\n\r\n\r\npub fn var_size(){\r\n    let it = std::hint::black_box(vec![1,2,3].into_iter()).filter(|x| true);\r\n    let v = it.collect::<Vec<_>>();\r\n    std::hint::black_box(v);\r\n}\r\n```\r\n\r\nI expected to see this happen: `exact_size` to generate better assembly than `var_size`\r\n\r\nInstead, this happened: \r\n1. `var_size` generates way shorter assembly (~90) than `exact size` (>200) with zero call to allocate `Vec`\r\n2. It seems to me `var_size` is trying to allocate the `Vec` on stack. This optimization did not happen on `exact_size` (Excuse me if I misintepreted the assembly).\r\n\r\n\r\nThe key to trigger this deoptimization seems to be mutating the iterator before collecting. This example is a reduction of a real-world code where the first few elements are processed differently and the rest of the elements is collected into `Vec` then consumed locally. \r\n\r\nGodbolt link for a more realistic example: https://godbolt.org/z/sccdTcvh6\r\n```rust\r\n#[inline(never)]\r\npub fn example<I: Iterator>(mut it: I){\r\n    // .... read and process a few elements\r\n    let Some(first_elem) = it.next() else {return;};\r\n    // let mut it = it.filter(|x| true); // <------ This causes different optimization if ExactSizeIterator\r\n    let v = it.collect::<Vec<_>>();\r\n    for elem in v {\r\n        // Different processing on rest of the elements.\r\n    }\r\n}\r\n\r\npub fn call_example() {\r\n    example(vec![1,2,3].into_iter())\r\n}\r\n```\r\n---\r\nEdit: Include a more realistic example", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/110734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/110734/timeline", "performed_via_github_app": null, "state_reason": null}