{"url": "https://api.github.com/repos/rust-lang/rust/issues/83949", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83949/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83949/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83949/events", "html_url": "https://github.com/rust-lang/rust/issues/83949", "id": 851805024, "node_id": "MDU6SXNzdWU4NTE4MDUwMjQ=", "number": 83949, "title": "Rust compiler error:  'rustc' panicked at 'Box<Any>',", "user": {"login": "hderms", "id": 833575, "node_id": "MDQ6VXNlcjgzMzU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/833575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hderms", "html_url": "https://github.com/hderms", "followers_url": "https://api.github.com/users/hderms/followers", "following_url": "https://api.github.com/users/hderms/following{/other_user}", "gists_url": "https://api.github.com/users/hderms/gists{/gist_id}", "starred_url": "https://api.github.com/users/hderms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hderms/subscriptions", "organizations_url": "https://api.github.com/users/hderms/orgs", "repos_url": "https://api.github.com/users/hderms/repos", "events_url": "https://api.github.com/users/hderms/events{/privacy}", "received_events_url": "https://api.github.com/users/hderms/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133344, "node_id": "MDU6TGFiZWwyNTYxMzMzNDQ=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-hir", "name": "A-hir", "color": "f7e101", "default": false, "description": "Area: the High level Intermediate Representation (HIR)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-06T20:57:37Z", "updated_at": "2021-04-06T21:30:54Z", "closed_at": "2021-04-06T21:03:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nextern crate glutin_window;\r\nextern crate graphics;\r\nextern crate opengl_graphics;\r\nextern crate piston;\r\n\r\nuse glutin_window::GlutinWindow as Window;\r\nuse opengl_graphics::{GlGraphics, OpenGL};\r\nuse piston::event_loop::{EventSettings, Events};\r\nuse piston::input::{RenderArgs, RenderEvent, UpdateArgs, UpdateEvent};\r\nuse piston::window::WindowSettings;\r\n\r\nstruct Particle {\r\n    x: f64,\r\n    y: f64,\r\n    color: [f32; 4],\r\n    size: f64,\r\n    velocity: (f64, f64)\r\n}\r\npub struct App {\r\n    gl: GlGraphics, // OpenGL drawing backend.\r\n    particles: Vec<Particle>,\r\n}\r\n\r\nconst GREEN: [f32; 4] = [0.0, 1.0, 0.0, 1.0];\r\nconst RED: [f32; 4] = [1.0, 0.0, 0.0, 1.0];\r\nimpl App {\r\n    fn render(&mut self, args: &RenderArgs) {\r\n        use graphics::*;\r\n\r\n        let (x, y) = (args.window_size[0] / 2.0, args.window_size[1] / 2.0);\r\n        let particles = &self.particles;\r\n\r\n        self.gl.draw(args.viewport(), |c, gl| {\r\n            // Clear the screen.\r\n            clear(GREEN, gl);\r\n            for particle in particles {\r\n                let size = particle.size;\r\n                let circle = ellipse::circle(0.0, 0.0, size);\r\n                let transform = c.transform.trans(particle.x, particle.y);\r\n\r\n                // Draw a box rotating around the middle of the screen.\r\n                ellipse(particle.color, circle, transform, gl);\r\n            }\r\n        });\r\n    }\r\n\r\n    fn update(&mut self, args: &UpdateArgs) {\r\n        // Rotate 2 radians per second.\r\n        let particles = &self.particles;\r\n        for mut particle in particles {\r\n            let new_velocity = (particle.velocity.0, particle.velocity.1 * GRAVITY * args.dt);\r\n            particle.velocity = new_velocity;\r\n            particle.x += new_velocity.0 ;\r\n            particle.x += new_velocity.1;\r\n        }\r\n    }\r\n}\r\nconst GRAVITY: f64 = -1.0;\r\n\r\nfn main() {\r\n    // Change this to OpenGL::V2_1 if not working.\r\n    let opengl = OpenGL::V3_2;\r\n\r\n    // Create an Glutin window.\r\n    let mut window: Window = WindowSettings::new(\"particular\", [1024, 860])\r\n        .graphics_api(opengl)\r\n        .exit_on_esc(true)\r\n        .build()\r\n        .unwrap();\r\n\r\n    // Create a new game and run it.\r\n    let particles = vec![\r\n        Particle {\r\n            x: 0.0,\r\n            y: 0.0,\r\n            color: RED,\r\n            size: 50.0,\r\n            velocity: (0f64, 0f64)\r\n        },\r\n        Particle {\r\n            x: 100.0,\r\n            y: 100.0,\r\n            color: RED,\r\n            size: 20.0,\r\n            velocity: (0f64, 0f64)\r\n        },\r\n    ];\r\n    let mut app = App {\r\n        gl: GlGraphics::new(opengl),\r\n        particles: particles,\r\n    };\r\n\r\n    let mut events = Events::new(EventSettings::new());\r\n    while let Some(e) = events.next(&mut window) {\r\n        if let Some(args) = e.render_args() {\r\n            app.render(&args);\r\n        }\r\n\r\n        if let Some(args) = e.update_args() {\r\n            app.update(&args);\r\n        }\r\n    }\r\n```\r\nhttps://gist.github.com/hderms/06ab3dfcb50ef3bc01173205e5959d61\r\n\r\n### Meta\r\n\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (3f5aee2d5 2021-02-12)\r\nbinary: rustc\r\ncommit-hash: 3f5aee2d5241139d808f4fdece0026603489afd1\r\ncommit-date: 2021-02-12\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 11.0.1\r\n\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: unused variable: `x`\r\n  --> src/main.rs:30:14\r\n   |\r\n30 |         let (x, y) = (args.window_size[0] / 2.0, args.window_size[1] / 2.0);\r\n   |              ^ help: if this is intentional, prefix it with an underscore: `_x`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused variable: `y`\r\n  --> src/main.rs:30:17\r\n   |\r\n30 |         let (x, y) = (args.window_size[0] / 2.0, args.window_size[1] / 2.0);\r\n   |                 ^ help: if this is intentional, prefix it with an underscore: `_y`\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/hir/map/mod.rs:306:18: impossible case reached\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/3f5aee2d5241139d808f4fdece0026603489afd1/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0-nightly (3f5aee2d5 2021-02-12) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=3 -C embed-bitcode=no --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `App::update`\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error; 2 warnings emitted\r\n\r\nerror: could not compile `particular`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/3f5aee2d5241139d808f4fdece0026603489afd1/library/std/src/panic.rs:59:5\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_middle::hir::map::Map::item\r\n   8: rustc_mir::borrow_check::diagnostics::mutability_errors::<impl rustc_mir::borrow_check::MirBorrowckCtxt>::report_mutability_error\r\n   9: rustc_mir::borrow_check::MirBorrowckCtxt::access_place\r\n  10: rustc_mir::borrow_check::MirBorrowckCtxt::mutate_place\r\n  11: <rustc_mir::borrow_check::MirBorrowckCtxt as rustc_mir::dataflow::framework::visitor::ResultsVisitor>::visit_statement_before_primary_effect\r\n  12: <rustc_mir::dataflow::framework::direction::Forward as rustc_mir::dataflow::framework::direction::Direction>::visit_results_in_block\r\n  13: rustc_mir::dataflow::framework::visitor::visit_results\r\n  14: rustc_mir::borrow_check::do_mir_borrowck\r\n  15: rustc_infer::infer::InferCtxtBuilder::enter\r\n  16: rustc_mir::borrow_check::mir_borrowck\r\n  17: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_borrowck>::compute\r\n  18: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  19: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  20: rustc_data_structures::stack::ensure_sufficient_stack\r\n  21: rustc_query_system::query::plumbing::force_query_with_job\r\n  22: rustc_query_system::query::plumbing::get_query_impl\r\n  23: rustc_query_system::query::plumbing::ensure_query_impl\r\n  24: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  25: rustc_interface::passes::analysis\r\n  26: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  27: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  28: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  29: rustc_data_structures::stack::ensure_sufficient_stack\r\n  30: rustc_query_system::query::plumbing::force_query_with_job\r\n  31: rustc_query_system::query::plumbing::get_query_impl\r\n  32: rustc_interface::passes::QueryContext::enter\r\n  33: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  34: rustc_span::with_source_map\r\n  35: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "hderms", "id": 833575, "node_id": "MDQ6VXNlcjgzMzU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/833575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hderms", "html_url": "https://github.com/hderms", "followers_url": "https://api.github.com/users/hderms/followers", "following_url": "https://api.github.com/users/hderms/following{/other_user}", "gists_url": "https://api.github.com/users/hderms/gists{/gist_id}", "starred_url": "https://api.github.com/users/hderms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hderms/subscriptions", "organizations_url": "https://api.github.com/users/hderms/orgs", "repos_url": "https://api.github.com/users/hderms/repos", "events_url": "https://api.github.com/users/hderms/events{/privacy}", "received_events_url": "https://api.github.com/users/hderms/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83949/timeline", "performed_via_github_app": null, "state_reason": "completed"}