{"url": "https://api.github.com/repos/rust-lang/rust/issues/104119", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104119/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104119/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104119/events", "html_url": "https://github.com/rust-lang/rust/issues/104119", "id": 1438792065, "node_id": "I_kwDOAAsO6M5VwjmB", "number": 104119, "title": "\"ambiguous associated type\" when accessing concrete type (but not on generic type)", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-11-07T18:25:24Z", "updated_at": "2023-04-26T03:49:28Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the following code:\r\n```rust\r\ntrait Memory {\r\n    type Provenance;\r\n}\r\n\r\nstruct BasicMemory;\r\n\r\nimpl Memory for BasicMemory {\r\n    type Provenance = ();\r\n}\r\n\r\nfn some_fn() {\r\n    let x: BasicMemory::Provenance; // this fails\r\n}\r\n\r\nfn some_generic_fn<T: Memory>() {\r\n    let x: T::Provenance; // this works\r\n}\r\n```\r\nUsing `Type::Provenance` works when `Type` is a generic parameter that implements the appropriate trait, but strangely fails when `Type` is a *concrete* type that implements the appropriate trait. That seems like a bug? Or at least it is an odd limitation that it'd be nice to lift. :)\r\n\r\nThanks to @memoryleak47 for pointing this out!", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104119/timeline", "performed_via_github_app": null, "state_reason": null}