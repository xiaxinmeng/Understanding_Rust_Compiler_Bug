{"url": "https://api.github.com/repos/rust-lang/rust/issues/8132", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8132/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8132/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8132/events", "html_url": "https://github.com/rust-lang/rust/issues/8132", "id": 17406767, "node_id": "MDU6SXNzdWUxNzQwNjc2Nw==", "number": 8132, "title": "Nasty hidden invariant in deschedule_running_task_and_then", "user": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 9695584, "node_id": "MDU6TGFiZWw5Njk1NTg0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-concurrency", "name": "A-concurrency", "color": "f7e101", "default": false, "description": "Area: Concurrency related issues."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-07-30T16:48:36Z", "updated_at": "2013-12-05T23:11:27Z", "closed_at": "2013-12-05T23:11:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is currently a gentleperson's agreement about the use of the higher-order context switchers in the new runtime. Usually, they are to be used like this:\n\n```\nlet mut environment = ...;\ndo sched.deschedule_running_task_and_then |sched, task| {\n    ... use environment ...\n    sched.schedule_blocked_task(task);\n}\n... use environment ...\n```\n\nHowever, because the closure (\"cleanup job\") runs in scheduler context, on SMP the task can resume on a different core before the closure finishes running. Hence, if you did:\n\n```\nlet mut environment = ...;\ndo sched.deschedule_running_task_and_then |sched, task| {\n    sched.schedule_blocked_task(task);\n    ... use environment ... // A\n}\n... use environment ... // B\n```\n\n...then A and B will race and the world will explode.\n\nThere are two possible solutions. One is to leave this issue open forever, and audit all uses of the context-switchers before doing each major release. The second is to use the type system (which once again proves expressive enough to deal with this sort of thing). It would look something like this:\n\n```\nimpl Scheduler {\n    // Passes the environment explicitly as a noncopyable Env token.\n    fn deschedule_running_task_and_then<E>(~self, E, extern fn(&mut Scheduler, BlockedTask, Env<E>))\n\n    // Wakes a blocked task, also proving that the caller won't access its environment anymore.\n    fn schedule_blocked_task<E>(&mut self, BlockedTask, Env<E>)\n}\nimpl <E> Env<E> {\n    // Can only access environment as long as opaque Env permission token is held.\n    fn get<'a>(&'a mut self) -> &'a mut E\n}\n```\n\nThere is just one problem with this, which is that it doesn't save you if you're already manipulating unsafe pointers as part of the environment (such as we do in `comm::PortOne`). Those use sites will have to be audited nonetheless.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8132/timeline", "performed_via_github_app": null, "state_reason": "completed"}