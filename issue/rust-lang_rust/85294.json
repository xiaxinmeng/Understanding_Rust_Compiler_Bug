{"url": "https://api.github.com/repos/rust-lang/rust/issues/85294", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85294/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85294/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85294/events", "html_url": "https://github.com/rust-lang/rust/issues/85294", "id": 892001634, "node_id": "MDU6SXNzdWU4OTIwMDE2MzQ=", "number": 85294, "title": "`exported_symbols` unstable fingerprint error", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-05-14T15:09:22Z", "updated_at": "2021-05-14T15:16:44Z", "closed_at": "2021-05-14T15:16:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The same error with Rust 1.52 running under [cargo-tarpaulin](https://github.com/xd009642/tarpaulin)\r\n\r\n```bash\r\n/usr/share/rust/.cargo/bin/cargo tarpaulin --out Xml --all\r\nMay 08 06:25:46.057  INFO cargo_tarpaulin: Running Tarpaulin\r\nMay 08 06:25:46.057  INFO cargo_tarpaulin: Building project\r\nMay 08 06:25:46.057  INFO cargo_tarpaulin::cargo: Cleaning project\r\n...\r\nthread 'rustc' panicked at 'found unstable fingerprints for exported_symbols(bstr[a229]): [(NonGeneric(DefId(19:1743 ~ bstr[a229]::unicode::fsm::grapheme_break_fwd::{impl#0}::deref)), Rust), (NonGeneric(DefId(19:1753 ~ bstr[a229]::unicode::fsm::grapheme_break_fwd::{impl#1}::initialize)), Rust), (NonGeneric(DefId(19:1760 ~ bstr[a229]::unicode::fsm::grapheme_break_rev::{impl#0}::deref)), Rust), (NonGeneric(DefId(19:1770 ~ bstr[a229]::unicode::fsm::grapheme_break_rev::{impl#1}::initialize)), Rust), (NonGeneric(DefId(19:1794 ~ bstr[a229]::unicode::fsm::sentence_break_fwd::{impl#0}::deref)), Rust), (NonGeneric(DefId(19:1804 ~ bstr[a229]::unicode::fsm::sentence_break_fwd::{impl#1}::initialize)), Rust), (Generic(DefId(22:139 ~ regex_automata[88e7]::dense_imp::{impl#7}::is_anchored), [&[u16], u16]), Rust), (Generic(DefId(22:139 ~ regex_automata[88e7]::dense_imp::{impl#7}::is_anchored), [&[u8], u8]), Rust), (Generic(DefId(22:135 ~ regex_automata[88e7]::dense_imp::{impl#7}::start_state), [&[u16], u16]), Rust), (Generic(DefId(22:135 ~ regex_automata[88e7]::dense_imp::{impl#7}::start_state), [&[u8], u8]), Rust), (Generic(DefId(22:137 ~ regex_automata[88e7]::dense_imp::{impl#7}::is_dead_state), [&[u16], u16]), Rust), (Generic(DefId(22:137 ~ regex_automata[88e7]::dense_imp::{impl#7}::is_dead_state), [&[u8], u8]), Rust), (Generic(DefId(22:136 ~ regex_automata[88e7]::dense_imp::{impl#7}::is_match_state), [&[u16], u16]), Rust), (Generic(DefId(22:136 ~ regex_automata[88e7]::dense_imp::{impl#7}::is_match_state), [&[u8], u8]), Rust), (Generic(DefId(22:141 ~ regex_automata[88e7]::dense_imp::{impl#7}::next_state_unchecked), [&[u16], u16]), Rust), (Generic(DefId(22:141 ~ regex_automata[88e7]::dense_imp::{impl#7}::next_state_unchecked), [&[u8], u8]), Rust), (Generic(DefId(22:138 ~ regex_automata[88e7]::dense_imp::{impl#7}::is_match_or_dead_state), [&[u16], u16]), Rust), (Generic(DefId(22:138 ~ regex_automata[88e7]::dense_imp::{impl#7}::is_match_or_dead_state), [&[u8], u8]), Rust), (NonGeneric(DefId(19:1777 ~ bstr[a229]::unicode::fsm::regional_indicator_rev::{impl#0}::deref)), Rust), (NonGeneric(DefId(19:1787 ~ bstr[a229]::unicode::fsm::regional_indicator_rev::{impl#1}::initialize)), Rust), (Generic(DefId(2:9271 ~ core[b0ed]::slice::index::{impl#5}::get_unchecked_mut), [u8]), Rust), (Generic(DefId(2:9273 ~ core[b0ed]::slice::index::{impl#5}::index_mut), [u8]), Rust), (Generic(DefId(5:6208 ~ alloc[9520]::vec::drain::{impl#6}::next_back), [ReErased, u8, std::alloc::Global]), Rust), (Generic(DefId(5:6209 ~ alloc[9520]::vec::drain::{impl#6}::next_back::{closure#0}), [ReErased, u8, std::alloc::Global, i32, extern \"rust-call\" fn((&u8,)) -> u8, ()]), Rust), (NonGeneric(DefId(19:1828 ~ bstr[a229]::unicode::fsm::whitespace_anchored_fwd::{impl#0}::deref)), Rust), (NonGeneric(DefId(19:1838 ~ bstr[a229]::unicode::fsm::whitespace_anchored_fwd::{impl#1}::initialize)), Rust), (NonGeneric(DefId(19:1845 ~ bstr[a229]::unicode::fsm::whitespace_anchored_rev::{impl#0}::deref)), Rust), (NonGeneric(DefId(19:1855 ~ bstr[a229]::unicode::fsm::whitespace_anchored_rev::{impl#1}::initialize)), Rust), (Generic(DefId(2:9290 ~ core[b0ed]::slice::index::{impl#7}::index), [u8]), Rust), (Generic(DefId(2:9291 ~ core[b0ed]::slice::index::{impl#7}::index_mut), [u8]), Rust), (Generic(DefId(2:9299 ~ core[b0ed]::slice::index::{impl#8}::index), [u8]), Rust), (Generic(DefId(2:9300 ~ core[b0ed]::slice::index::{impl#8}::index_mut), [u8]), Rust), (Generic(DefId(24:30 ~ lazy_static[bac5]::lazy::{impl#0}::get::{closure#0}), [regex_automata::sparse_imp::SparseDFA<&[u8], u32>, fn() -> regex_automata::sparse_imp::SparseDFA<&'static [u8], u32> {<bstr::unicode::fsm::sentence_break_fwd::SENTENCE_BREAK_FWD as std::ops::Deref>::deref::__static_ref_initialize}, i32, extern \"rust-call\" fn(()), (&&lazy_static::lazy::Lazy<regex_automata::sparse_imp::SparseDFA<&[u8], u32>>, fn() -> regex_automata::sparse_imp::SparseDFA<&'static [u8], u32> {<bstr::unicode::fsm::sentence_break_fwd::SENTENCE_BREAK_FWD as std::ops::Deref>::deref::__static_ref_initialize})]), Rust), (Generic(DefId(24:30 ~ lazy_static[bac5]::lazy::{impl#0}::get::{closure#0}), [regex_automata::dense_imp::DenseDFA<&[u8], u8>, fn() -> regex_automata::dense_imp::DenseDFA<&'static [u8], u8> {<bstr::unicode::fsm::whitespace_anchored_fwd::WHITESPACE_ANCHORED_FWD as std::ops::Deref>::deref::__static_ref_initialize}, i32, extern \"rust-call\" fn(()), (&&lazy_static::lazy::Lazy<regex_automata::dense_imp::DenseDFA<&[u8], u8>>, fn() -> regex_automata::dense_imp::DenseDFA<&'static [u8], u8> {<bstr::unicode::fsm::whitespace_anchored_fwd::WHITESPACE_ANCHORED_FWD as std::ops::Deref>::deref::__static_ref_initialize})]), Rust), (Generic(DefId(24:30 ~ lazy_static[bac5]::lazy::{impl#0}::get::{closure#0}), [regex_automata::sparse_imp::SparseDFA<&[u8], u16>, fn() -> regex_automata::sparse_imp::SparseDFA<&'static [u8], u16> {<bstr::unicode::fsm::grapheme_break_fwd::GRAPHEME_BREAK_FWD as std::ops::Deref>::deref::__static_ref_initialize}, i32, extern \"rust-call\" fn(()), (&&lazy_static::lazy::Lazy<regex_automata::sparse_imp::SparseDFA<&[u8], u16>>, fn() -> regex_automata::sparse_imp::SparseDFA<&'static [u8], u16> {<bstr::unicode::fsm::grapheme_break_fwd::GRAPHEME_BREAK_FWD as std::ops::Deref>::deref::__static_ref_initialize})]), Rust), (Generic(DefId(24:30 ~ lazy_static[bac5]::lazy::{impl#0}::get::{closure#0}), [regex_automata::sparse_imp::SparseDFA<&[u8], u32>, fn() -> regex_automata::sparse_imp::SparseDFA<&'static [u8], u32> {<bstr::unicode::fsm::word_break_fwd::WORD_BREAK_FWD as std::ops::Deref>::deref::__static_ref_initialize}, i32, extern \"rust-call\" fn(()), (&&lazy_static::lazy::Lazy<regex_automata::sparse_imp::SparseDFA<&[u8], u32>>, fn() -> regex_automata::sparse_imp::SparseDFA<&'static [u8], u32> {<bstr::unicode::fsm::word_break_fwd::WORD_BREAK_FWD as std::ops::Deref>::deref::__static_ref_initialize})]), Rust), (Generic(DefId(24:30 ~ lazy_static[bac5]::lazy::{impl#0}::get::{closure#0}), [regex_automata::dense_imp::DenseDFA<&[u8], u8>, fn() -> regex_automata::dense_imp::DenseDFA<&'static [u8], u8> {<bstr::unicode::fsm::regional_indicator_rev::REGIONAL_INDICATOR_REV as std::ops::Deref>::deref::__static_ref_initialize}, i32, extern \"rust-call\" fn(()), (&&lazy_static::lazy::Lazy<regex_automata::dense_imp::DenseDFA<&[u8], u8>>, fn() -> regex_automata::dense_imp::DenseDFA<&'static [u8], u8> {<bstr::unicode::fsm::regional_indicator_rev::REGIONAL_INDICATOR_REV as std::ops::Deref>::deref::__static_ref_initialize})]), Rust), (Generic(DefId(24:30 ~ lazy_static[bac5]::lazy::{impl#0}::get::{closure#0}), [regex_automata::sparse_imp::SparseDFA<&[u8], u16>, fn() -> regex_automata::sparse_imp::SparseDFA<&'static [u8], u16> {<bstr::unicode::fsm::grapheme_break_rev::GRAPHEME_BREAK_REV as std::ops::Deref>::deref::__static_ref_initialize}, i32, extern \"rust-call\" fn(()), (&&lazy_static::lazy::Lazy<regex_automata::sparse_imp::SparseDFA<&[u8], u16>>, fn() -> regex_automata::sparse_imp::SparseDFA<&'static [u8], u16> {<bstr::unicode::fsm::grapheme_break_rev::GRAPHEME_BREAK_REV as std::ops::Deref>::deref::__static_ref_initialize})]), Rust), (Generic(DefId(24:30 ~ lazy_static[bac5]::lazy::{impl#0}::get::{closure#0}), [regex_automata::dense_imp::DenseDFA<&[u16], u16>, fn() -> regex_automata::dense_imp::DenseDFA<&'static [u16], u16> {<bstr::unicode::fsm::whitespace_anchored_rev::WHITESPACE_ANCHORED_REV as std::ops::Deref>::deref::__static_ref_initialize}, i32, extern \"rust-call\" fn(()), (&&lazy_static::lazy::Lazy<regex_automata::dense_imp::DenseDFA<&[u16], u16>>, fn() -> regex_automata::dense_imp::DenseDFA<&'static [u16], u16> {<bstr::unicode::fsm::whitespace_anchored_rev::WHITESPACE_ANCHORED_REV as std::ops::Deref>::deref::__static_ref_initialize})]), Rust), (Generic(DefId(24:30 ~ lazy_static[bac5]::lazy::{impl#0}::get::{closure#0}), [regex_automata::sparse_imp::SparseDFA<&[u8], u16>, fn() -> regex_automata::sparse_imp::SparseDFA<&'static [u8], u16> {<bstr::unicode::fsm::simple_word_fwd::SIMPLE_WORD_FWD as std::ops::Deref>::deref::__static_ref_initialize}, i32, extern \"rust-call\" fn(()), (&&lazy_static::lazy::Lazy<regex_automata::sparse_imp::SparseDFA<&[u8], u16>>, fn() -> \r\n...\r\n...\r\n/rustc/88f19c6dab716c6281af7602e30f413e809c5974/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\nnote: run with  environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\nError: internal compiler error: unexpected panic\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.52.0 (88f19c6da 2021-05-03) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C link-dead-code -C debuginfo=2\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [exported_symbols] exported_symbols\r\n#1 [upstream_monomorphizations] collecting available upstream monomorphizations \r\nend of query stack\r\n```\r\n\r\n_Originally posted by @messense in https://github.com/rust-lang/rust/issues/84116#issuecomment-835142754_", "closed_by": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85294/timeline", "performed_via_github_app": null, "state_reason": "completed"}