{"url": "https://api.github.com/repos/rust-lang/rust/issues/85455", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85455/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85455/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85455/events", "html_url": "https://github.com/rust-lang/rust/issues/85455", "id": 894891210, "node_id": "MDU6SXNzdWU4OTQ4OTEyMTA=", "number": 85455, "title": "Higher-ranked function pointers implement `Fn` traits without enforcing necessary trait bounds to make sure the return type exists", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 1657845351, "node_id": "MDU6TGFiZWwxNjU3ODQ1MzUx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unboxed_closures", "name": "F-unboxed_closures", "color": "f9c0cc", "default": false, "description": "`#![feature(unboxed_closures)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-05-19T00:48:42Z", "updated_at": "2021-09-06T05:28:32Z", "closed_at": "2021-09-06T05:28:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\ncargo build\r\n```\r\non the following code produces an ICE (just `cargo check` doesn\u2019t ICE)\r\n\r\n```rust\r\n#![feature(unboxed_closures)]\r\n\r\ntrait SomeTrait<'a> {\r\n    type Associated;\r\n}\r\n\r\nfn give_me_ice<T>() {\r\n    callee::<fn(&()) -> <T as SomeTrait<'_>>::Associated>();\r\n}\r\n\r\nfn callee<T: Fn<(&'static (),)>>() {\r\n    println!(\r\n        \"{}\",\r\n        std::any::type_name::<<T as FnOnce<(&'static (),)>>::Output>()\r\n    );\r\n}\r\n\r\nfn main() {\r\n    give_me_ice::<()>();\r\n}\r\n```\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: internal compiler error: compiler/rustc_traits/src/normalize_erasing_regions.rs:54:32: could not fully normalize `fn() -> &'static str {std::any::type_name::<<for<'r> fn(&'r ()) -> <() as SomeTrait<'r>>::Associated as std::ops::FnOnce<(&(),)>>::Output>}`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/3e99439f4dacc8ba0d2ca48d221694362d587927/library/std/src/panic.rs:59:5\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.54.0-nightly (3e99439f4 2021-05-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [normalize_generic_arg_after_erasing_regions] normalizing `fn() -> &'static str {std::any::type_name::<<for<'r> fn(&'r ()) -> <() as SomeTrait<'r>>::Associated as std::ops::FnOnce<(&(),)>>::Output>}`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=44315cd8fe69591ed05432350c9ea840))\r\n\r\nPossibly, this bug can also lead to unsoundness in some way. (I haven\u2019t fully explored that [yet].) Notably, `Box<dyn Fn\u2026>` doesn\u2019t come with the same problem:\r\n\r\n```rust\r\n#![feature(unboxed_closures)]\r\n\r\ntrait SomeTrait<'a> {\r\n    type Associated;\r\n}\r\n\r\nfn give_me_ice<T>() {\r\n    callee::<Box<dyn Fn(&()) -> <T as SomeTrait<'_>>::Associated>>();\r\n}\r\n\r\nfn callee<T: Fn<(&'static (),)>>() {\r\n    println!(\r\n        \"{}\",\r\n        std::any::type_name::<<T as FnOnce<(&'static (),)>>::Output>()\r\n    );\r\n}\r\n\r\nfn main() {\r\n    give_me_ice::<()>();\r\n}\r\n```\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: the trait bound `T: SomeTrait<'_>` is not satisfied\r\n  --> src/main.rs:8:5\r\n   |\r\n8  |     callee::<Box<dyn Fn(&()) -> <T as SomeTrait<'_>>::Associated>>();\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SomeTrait<'_>` is not implemented for `T`\r\n...\r\n11 | fn callee<T: Fn<(&'static (),)>>() {\r\n   |              ------------------ required by this bound in `callee`\r\n   |\r\n   = note: required because of the requirements on the impl of `Fn<(&'static (),)>` for `Box<dyn for<'r> Fn(&'r ()) -> <T as SomeTrait<'_>>::Associated>`\r\nhelp: consider restricting type parameter `T`\r\n   |\r\n7  | fn give_me_ice<T: SomeTrait<'_>>() {\r\n   |                 ^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nI would\u2019ve expected a similar error message for the `fn\u2026` case as well.\r\n\r\n(Further, note that the way things currently stand, the type `Box<dyn Fn(&()) -> <T as SomeTrait<'_>>::Associated>` itself is [not leading to any error](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=770293c5df50b7c9e19cabbbd5a123f5). It\u2019s only the call to `callee` which has an `Fn<\u2026>` bound. The error also successfully appears if `callee` has a higher-ranked `Fn<\u2026>` bound and/or is not actually called but just instantiated with the type argument, [here\u2019s a playground doing both](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=df480812afe33f9a135c16686a8f8b76).)\r\n\r\n@rustbot label requires-nightly, F-unboxed_closures, A-traits, A-typesystem, A-associated-items", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85455/timeline", "performed_via_github_app": null, "state_reason": "completed"}