{"url": "https://api.github.com/repos/rust-lang/rust/issues/91514", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91514/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91514/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91514/events", "html_url": "https://github.com/rust-lang/rust/issues/91514", "id": 1071161621, "node_id": "I_kwDOAAsO6M4_2KEV", "number": 91514, "title": "ICE: thread 'rustc' panicked at 'assertion failed: `(left == right)`   left: `2`,  right: `1`', compiler/rustc_middle/src/mir/mod.rs:474:13", "user": {"login": "izik1", "id": 21113608, "node_id": "MDQ6VXNlcjIxMTEzNjA4", "avatar_url": "https://avatars.githubusercontent.com/u/21113608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/izik1", "html_url": "https://github.com/izik1", "followers_url": "https://api.github.com/users/izik1/followers", "following_url": "https://api.github.com/users/izik1/following{/other_user}", "gists_url": "https://api.github.com/users/izik1/gists{/gist_id}", "starred_url": "https://api.github.com/users/izik1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/izik1/subscriptions", "organizations_url": "https://api.github.com/users/izik1/orgs", "repos_url": "https://api.github.com/users/izik1/repos", "events_url": "https://api.github.com/users/izik1/events{/privacy}", "received_events_url": "https://api.github.com/users/izik1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": {"login": "worldeva", "id": 62271116, "node_id": "MDQ6VXNlcjYyMjcxMTE2", "avatar_url": "https://avatars.githubusercontent.com/u/62271116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/worldeva", "html_url": "https://github.com/worldeva", "followers_url": "https://api.github.com/users/worldeva/followers", "following_url": "https://api.github.com/users/worldeva/following{/other_user}", "gists_url": "https://api.github.com/users/worldeva/gists{/gist_id}", "starred_url": "https://api.github.com/users/worldeva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/worldeva/subscriptions", "organizations_url": "https://api.github.com/users/worldeva/orgs", "repos_url": "https://api.github.com/users/worldeva/repos", "events_url": "https://api.github.com/users/worldeva/events{/privacy}", "received_events_url": "https://api.github.com/users/worldeva/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "worldeva", "id": 62271116, "node_id": "MDQ6VXNlcjYyMjcxMTE2", "avatar_url": "https://avatars.githubusercontent.com/u/62271116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/worldeva", "html_url": "https://github.com/worldeva", "followers_url": "https://api.github.com/users/worldeva/followers", "following_url": "https://api.github.com/users/worldeva/following{/other_user}", "gists_url": "https://api.github.com/users/worldeva/gists{/gist_id}", "starred_url": "https://api.github.com/users/worldeva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/worldeva/subscriptions", "organizations_url": "https://api.github.com/users/worldeva/orgs", "repos_url": "https://api.github.com/users/worldeva/repos", "events_url": "https://api.github.com/users/worldeva/events{/privacy}", "received_events_url": "https://api.github.com/users/worldeva/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2021-12-04T08:52:30Z", "updated_at": "2023-03-06T09:42:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\r\n\r\nNote: requires full build (ie, `cargo check` doesn't trigger it)\r\n```Rust\r\n// lib.rs\r\npub struct S;\r\n\r\n// n.b *has* to be an associated const.\r\nimpl S {\r\n    pub const CONST: u8 = panic!();\r\n}\r\n\r\n// inner types can be anything(?) outer types must be option.\r\nfn f(_: Option<()>, _: Option<u8>) {}\r\n\r\npub fn ice() {\r\n    // \"sandwich\" is required. (arms on both sides of the middle one)\r\n    match 0 {\r\n        0 => {\r\n            f(None, None);\r\n        }\r\n        1 => {\r\n            S::CONST;\r\n        }\r\n        _ => {}\r\n    };\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n(stable)\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n(beta)\r\n```\r\nrustc 1.58.0-beta.1 (426b94d7d 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: 426b94d7df183ac00ed4492541d92855181e9c4e\r\ncommit-date: 2021-11-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.0-beta.1\r\nLLVM version: 13.0.0\r\n```\r\n(latest nightly as of right now)\r\n```\r\nrustc --version --verbose\r\nrustc 1.59.0-nightly (532d2b14c 2021-12-03)\r\nbinary: rustc\r\ncommit-hash: 532d2b14c05f9bc20b2d27cbb5f4550d28343a36\r\ncommit-date: 2021-12-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\ncargo build\r\n   Compiling ribit v0.1.0 (/home/sr/ghq/github.com/izik1/ribit)\r\nwarning: path statement with no effect\r\n  --> src/lib.rs:18:13\r\n   |\r\n18 |             S::CONST;\r\n   |             ^^^^^^^^^\r\n   |\r\n   = note: `#[warn(path_statements)]` on by default\r\n\r\nerror[E0080]: evaluation of constant value failed\r\n --> src/lib.rs:5:27\r\n  |\r\n5 |     pub const CONST: u8 = panic!();\r\n  |                           ^^^^^^^^ the evaluated program panicked at 'explicit panic', src/lib.rs:5:27\r\n  |\r\n  = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `2`,\r\n right: `1`', compiler/rustc_middle/src/mir/mod.rs:474:13\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-nightly (532d2b14c 2021-12-03) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [optimized_mir] optimizing MIR for `ice`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nFor more information about this error, try `rustc --explain E0080`.\r\nwarning: `ribit` (lib) generated 1 warning\r\nerror: could not compile `ribit` due to previous error; 1 warning emitted\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `2`,\r\n right: `1`', compiler/rustc_middle/src/mir/mod.rs:474:13\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/532d2b14c05f9bc20b2d27cbb5f4550d28343a36/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/532d2b14c05f9bc20b2d27cbb5f4550d28343a36/library/core/src/panicking.rs:107:14\r\n   2: core::panicking::assert_failed_inner\r\n   3: core::panicking::assert_failed::<usize, usize>\r\n   4: <rustc_middle::mir::Body>::source_info\r\n   5: <rustc_const_eval::interpret::eval_context::InterpCx<rustc_mir_transform::const_prop::ConstPropMachine>>::generate_stacktrace\r\n   6: <rustc_const_eval::const_eval::error::ConstEvalErr>::new::<rustc_mir_transform::const_prop::ConstPropMachine>\r\n   7: <rustc_mir_transform::const_prop::ConstPropagator as rustc_middle::mir::visit::MutVisitor>::visit_body\r\n   8: <rustc_mir_transform::const_prop::ConstProp as rustc_middle::mir::MirPass>::run_pass\r\n   9: rustc_mir_transform::run_passes\r\n  10: rustc_mir_transform::optimized_mir\r\n  11: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId, &rustc_middle::mir::Body>\r\n  12: rustc_data_structures::stack::ensure_sufficient_stack::<(&rustc_middle::mir::Body, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::DefId, &rustc_middle::mir::Body>::{closure#3}>\r\n  13: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, &rustc_middle::mir::Body>>\r\n  14: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::optimized_mir\r\n  15: <rustc_middle::ty::context::TyCtxt>::instance_mir\r\n  16: rustc_monomorphize::collector::collect_neighbours\r\n  17: rustc_monomorphize::collector::collect_items_rec\r\n  18: <rustc_session::session::Session>::time::<(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}>\r\n  19: rustc_monomorphize::collector::collect_crate_mono_items\r\n  20: rustc_monomorphize::partitioning::collect_and_partition_mono_items\r\n  21: <rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind>::with_deps::<<rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task_impl<rustc_middle::ty::context::TyCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>::{closure#0}, (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>\r\n  22: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>\r\n  23: rustc_data_structures::stack::ensure_sufficient_stack::<((&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit]), rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>::{closure#3}>\r\n  24: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>>\r\n  25: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt>\r\n  26: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  27: rustc_codegen_ssa::back::symbol_export::exported_symbols_provider_local\r\n  28: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::CrateNum, &[(rustc_middle::middle::exported_symbols::ExportedSymbol, rustc_middle::middle::exported_symbols::SymbolExportLevel)]>\r\n  29: rustc_data_structures::stack::ensure_sufficient_stack::<(&[(rustc_middle::middle::exported_symbols::ExportedSymbol, rustc_middle::middle::exported_symbols::SymbolExportLevel)], rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::CrateNum, &[(rustc_middle::middle::exported_symbols::ExportedSymbol, rustc_middle::middle::exported_symbols::SymbolExportLevel)]>::{closure#3}>\r\n  30: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::CrateNum, &[(rustc_middle::middle::exported_symbols::ExportedSymbol, rustc_middle::middle::exported_symbols::SymbolExportLevel)]>>\r\n  31: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::exported_symbols, rustc_query_impl::plumbing::QueryCtxt>\r\n  32: <rustc_metadata::rmeta::encoder::EncodeContext>::encode_crate_root\r\n  33: rustc_metadata::rmeta::encoder::encode_metadata_impl\r\n  34: rustc_data_structures::sync::join::<rustc_metadata::rmeta::encoder::encode_metadata::{closure#0}, rustc_metadata::rmeta::encoder::encode_metadata::{closure#1}, rustc_metadata::rmeta::encoder::EncodedMetadata, ()>\r\n  35: rustc_metadata::rmeta::encoder::encode_metadata\r\n  36: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  37: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  38: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  39: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nNote that the specific version of the panic macro doesn't matter (this triggers with edition=2021 as well)\r\n\r\nGoing to attempt a bisect through nightlies, will report back once I divine a nightly (unless someone else figures it out first, /shrug)\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"worldeva\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91514/timeline", "performed_via_github_app": null, "state_reason": null}