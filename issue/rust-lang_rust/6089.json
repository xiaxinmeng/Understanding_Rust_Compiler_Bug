{"url": "https://api.github.com/repos/rust-lang/rust/issues/6089", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/6089/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/6089/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/6089/events", "html_url": "https://github.com/rust-lang/rust/issues/6089", "id": 13724492, "node_id": "MDU6SXNzdWUxMzcyNDQ5Mg==", "number": 6089, "title": "std::timer::recv_timeout never receives", "user": {"login": "mzabaluev", "id": 1198919, "node_id": "MDQ6VXNlcjExOTg5MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1198919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzabaluev", "html_url": "https://github.com/mzabaluev", "followers_url": "https://api.github.com/users/mzabaluev/followers", "following_url": "https://api.github.com/users/mzabaluev/following{/other_user}", "gists_url": "https://api.github.com/users/mzabaluev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzabaluev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzabaluev/subscriptions", "organizations_url": "https://api.github.com/users/mzabaluev/orgs", "repos_url": "https://api.github.com/users/mzabaluev/repos", "events_url": "https://api.github.com/users/mzabaluev/events{/privacy}", "received_events_url": "https://api.github.com/users/mzabaluev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-04-27T18:39:48Z", "updated_at": "2013-08-05T16:11:06Z", "closed_at": "2013-08-05T16:11:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The test:\n\n``` rust\nextern mod std;\n\nuse std::timer::recv_timeout;\nuse std::uv_global_loop;\nuse core::comm::stream;\n\nstatic TEST_TIMEOUT: uint = 500u;\n\nfn main() {\n    let mut (port, _) = stream::<task::TaskResult>();\n    task::task()\n        .future_result(|p| {\n            port = p;\n        })\n        .spawn(|| {\n            debug!(\"the task has run\");\n        });\n    let res = recv_timeout(&uv_global_loop::get(), TEST_TIMEOUT, &port);\n    assert!(res == Some(task::Success));\n}\n```\n\nFails the assertion, and then the program hangs up with:\n\n```\nrust: task failed at 'assertion failed: res == Some(task::Success)', recv-timeout.rs:17\nrust: domain main @0x864edc0 root task failed\nrust: task failed at 'killed', /home/mzabaluev/src/rust/src/libcore/pipes.rs:314\nrust: task failed at 'killed', /home/mzabaluev/src/rust/src/libcore/pipes.rs:314\n```\n\nAs a matter of fact, `recv_timeout` has not been able to wake up on any type of input I have tried.\n", "closed_by": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/6089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/6089/timeline", "performed_via_github_app": null, "state_reason": "completed"}