{"url": "https://api.github.com/repos/rust-lang/rust/issues/34250", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34250/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34250/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34250/events", "html_url": "https://github.com/rust-lang/rust/issues/34250", "id": 159856677, "node_id": "MDU6SXNzdWUxNTk4NTY2Nzc=", "number": 34250, "title": "Book section on FFI with nullable pointers doesn't explain None == null.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-13T00:32:46Z", "updated_at": "2016-07-29T13:48:03Z", "closed_at": "2016-07-29T13:48:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The paragraph in question (https://doc.rust-lang.org/book/ffi.html#the-nullable-pointer-optimization):\n\n> # The \"nullable pointer optimization\"\n> \n> Certain types are defined to not be `null`. This includes references (`&T`,\n> `&mut T`), boxes (`Box<T>`), and function pointers (`extern \"abi\" fn()`).\n> When interfacing with C, pointers that might be null are often used.\n> As a special case, a generic `enum` that contains exactly two variants, one of\n> which contains no data and the other containing a single field, is eligible\n> for the \"nullable pointer optimization\". When such an enum is instantiated\n> with one of the non-nullable types, it is represented as a single pointer,\n> and the non-data variant is represented as the null pointer. So\n> `Option<extern \"C\" fn(c_int) -> c_int>` is how one represents a nullable\n> function pointer using the C ABI.\n\nWhile the paragraph does a good job at explaining when this optimizations happens (although it's missing the fact that the optimization can now look for deeply nested fields to use), it doesn't explicitly mention that `None` represents the \"NULL\" value and that `Some(function)` is how you create non-\"NULL\" values, nor does it have a code example.\n\nWhat this can lead to is code that transmutes because it might not be entirely clear that there's a safe way to create values of that type.\n\ncc @steveklabnik\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34250/timeline", "performed_via_github_app": null, "state_reason": "completed"}