{"url": "https://api.github.com/repos/rust-lang/rust/issues/103815", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103815/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103815/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103815/events", "html_url": "https://github.com/rust-lang/rust/issues/103815", "id": 1430349085, "node_id": "I_kwDOAAsO6M5VQWUd", "number": 103815, "title": "GAT in path suggests wrong lifetime name when elided lifetime is rejected", "user": {"login": "kupiakos", "id": 3309728, "node_id": "MDQ6VXNlcjMzMDk3Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/3309728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kupiakos", "html_url": "https://github.com/kupiakos", "followers_url": "https://api.github.com/users/kupiakos/followers", "following_url": "https://api.github.com/users/kupiakos/following{/other_user}", "gists_url": "https://api.github.com/users/kupiakos/gists{/gist_id}", "starred_url": "https://api.github.com/users/kupiakos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kupiakos/subscriptions", "organizations_url": "https://api.github.com/users/kupiakos/orgs", "repos_url": "https://api.github.com/users/kupiakos/repos", "events_url": "https://api.github.com/users/kupiakos/events{/privacy}", "received_events_url": "https://api.github.com/users/kupiakos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-10-31T19:09:00Z", "updated_at": "2022-11-27T17:10:56Z", "closed_at": "2022-11-27T17:10:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Usage of GATs must specify lifetime generic parameters even if they can be inferred, unlike structs and type aliases. Personally, I think this is the wrong choice, though I recognize the [linting folks disagree](https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html#elided-lifetimes-in-paths). In any case, the diagnostic output for when `'_` is necessary isn't tested in enough scenarios.\r\n\r\nGiven the following code:  https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=dec1ee3c77e71e10d6217f53ebb0f86f\r\n\r\n```rust\r\n// Copyright 2022 Google LLC.\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nstruct MyElement;\r\nstruct MyContainer {\r\n    data: Vec<MyElement>,\r\n}\r\n\r\ntrait MyIndex<Key> {\r\n    type Output<'a> where Self : 'a;\r\n    fn my_index(&self, k: Key) -> Self::Output<'_>;\r\n}\r\n\r\nimpl MyIndex<usize> for MyContainer {\r\n    type Output<'a> = &'a MyElement;\r\n\r\n    fn my_index(&self, n: usize) -> Self::Output {\r\n        &self.data[n]\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0107]: missing generics for associated type `MyIndex::Output`\r\n  --> src/lib.rs:36:43\r\n   |\r\n36 |     fn my_index(&self, n: usize) -> Self::Output {\r\n   |                                           ^^^^^^ expected 1 lifetime argument\r\n   |\r\nnote: associated type defined here, with 1 lifetime parameter: `'a`\r\n  --> src/lib.rs:10:10\r\n   |\r\n10 |     type Output<'a> where Self : 'a;\r\n   |          ^^^^^^ --\r\nhelp: add missing lifetime argument\r\n   |\r\n36 |     fn my_index(&self, n: usize) -> Self::Output<'a> {\r\n   |                                           ~~~~~~~~~~\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0107]: missing generics for associated type `MyIndex::Output`\r\n  --> src/lib.rs:36:43\r\n   |\r\n36 |     fn my_index(&self, n: usize) -> Self::Output {\r\n   |                                           ^^^^^^ expected 1 lifetime argument\r\n   |\r\nnote: associated type defined here, with 1 lifetime parameter: `'a`\r\n  --> src/lib.rs:10:10\r\n   |\r\n10 |     type Output<'a> where Self : 'a;\r\n   |          ^^^^^^ --\r\nhelp: add missing lifetime argument\r\n   |\r\n36 |     fn my_index(&self, n: usize) -> Self::Output<'_> {\r\n   |                                           ~~~~~~~~~~\r\n```\r\n\r\nThe only difference here is that it suggests using `'_` _before_ suggesting it use the lifetime parameter declared in the type definition. It really shouldn't consider any of the generic params in the GAT definition. Note that if I replace it with `fn my_index<'b>(&'b self, n: usize) -> Self::Output` or `fn my_index<'b>(&self, n: usize) -> Self::Output`, it suggests using `'b`, as expected.\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103815/timeline", "performed_via_github_app": null, "state_reason": "completed"}