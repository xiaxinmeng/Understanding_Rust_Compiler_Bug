{"url": "https://api.github.com/repos/rust-lang/rust/issues/50757", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50757/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50757/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50757/events", "html_url": "https://github.com/rust-lang/rust/issues/50757", "id": 322996224, "node_id": "MDU6SXNzdWUzMjI5OTYyMjQ=", "number": 50757, "title": "Stress testing", "user": {"login": "AnthonyLloyd", "id": 9265702, "node_id": "MDQ6VXNlcjkyNjU3MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9265702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnthonyLloyd", "html_url": "https://github.com/AnthonyLloyd", "followers_url": "https://api.github.com/users/AnthonyLloyd/followers", "following_url": "https://api.github.com/users/AnthonyLloyd/following{/other_user}", "gists_url": "https://api.github.com/users/AnthonyLloyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnthonyLloyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnthonyLloyd/subscriptions", "organizations_url": "https://api.github.com/users/AnthonyLloyd/orgs", "repos_url": "https://api.github.com/users/AnthonyLloyd/repos", "events_url": "https://api.github.com/users/AnthonyLloyd/events{/privacy}", "received_events_url": "https://api.github.com/users/AnthonyLloyd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 630810559, "node_id": "MDU6TGFiZWw2MzA4MTA1NTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-libtest", "name": "A-libtest", "color": "f7e101", "default": false, "description": "Area: #[test] related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-14T21:56:18Z", "updated_at": "2018-10-02T17:22:36Z", "closed_at": "2018-10-02T17:22:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Intro\r\n\r\nI am new to Rust (looking great so far). I am an F# developer and also the maintainer of an F# testing library called [Expecto](https://github.com/haf/expecto). I think it's great that `cargo` runs tests in parallel by default. `Expecto` does the same and we have added a feature called stress testing that I think is very useful.\r\n\r\n# Proposal\r\nNew flag for the test command:\r\n```\r\ncargo test --stress 10\r\n```\r\n\r\nWhen run with this flag, `cargo` does the following:\r\n\r\n1. Runs tests randomly in parallel for a given length of time (minutes).\r\n2. As each test completes a random new one is started. This includes tests that are already running.\r\n3. Maximum memory use can also be monitored against a limit.\r\n4. At the end of the time the running tests are waited for with a timeout. Tests not complete after this timeout are considered to have deadlocked. \r\n5. Output reports:\r\n   - the number of passed and failed etc with a single output example from failing tests.\r\n   - the maximum memory use vs the limit.\r\n   - a list of any tests that have deadlocked.\r\n\r\nthe timeout and memory limit have defaults in `Expecto` of 5 mins and 100MB but can be set using flags e.g.\r\n\r\n`\r\ncargo test --stress 10 --stress-timeout 5 --stress-memory-limit 100\r\n`\r\n\r\nThis feature is compatible with test filtering and number of thread options. \r\n\r\n# Reasoning\r\n\r\nThe idea is that this will catch the following types of bugs:\r\n\r\n- memory leaks.\r\n- rare threading bugs.\r\n- threading bugs running same test at same time.\r\n- threading deadlocks.\r\n\r\nand it gives this to testers for free.\r\n\r\nIt also makes fails they may occasionally see in testing easily reproducible.  \r\n\r\nI have personally found a handful of bugs with this feature e.g. memory leak to native MKL code and thread safety issues of a .Net framework cryptography library.\r\n\r\n![stress](https://user-images.githubusercontent.com/9265702/39971669-e6a0ee34-56f6-11e8-98bc-aed074ffd10f.jpg)\r\n", "closed_by": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50757/timeline", "performed_via_github_app": null, "state_reason": "completed"}