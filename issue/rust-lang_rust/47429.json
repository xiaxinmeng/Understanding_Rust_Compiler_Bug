{"url": "https://api.github.com/repos/rust-lang/rust/issues/47429", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47429/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47429/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47429/events", "html_url": "https://github.com/rust-lang/rust/issues/47429", "id": 288428211, "node_id": "MDU6SXNzdWUyODg0MjgyMTE=", "number": 47429, "title": "Short backtrace have regressed", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-14T18:22:43Z", "updated_at": "2020-08-08T09:09:54Z", "closed_at": "2020-08-08T01:48:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```rust\r\n% rustc +nightly -V\r\nrustc 1.25.0-nightly (51b0b3734 2018-01-12)\r\n% echo 'fn main() { panic!() }' > a.rs\r\n% rustc +nightly -g a.rs\r\n% RUST_BACKTRACE=1 ./a   \r\nthread 'main' panicked at 'explicit panic', a.rs:1:13\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:68\r\n             at libstd/sys_common/backtrace.rs:57\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:380\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:396\r\n   4: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:576\r\n   5: std::panicking::begin_panic\r\n             at /checkout/src/libstd/panicking.rs:537\r\n   6: a::main\r\n             at ./a.rs:1\r\n   7: std::rt::lang_start::{{closure}}\r\n             at /checkout/src/libstd/rt.rs:74\r\n   8: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:479\r\n   9: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  10: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:458\r\n             at libstd/panic.rs:365\r\n             at libstd/rt.rs:58\r\n  11: std::rt::lang_start\r\n             at /checkout/src/libstd/rt.rs:74\r\n  12: main\r\n  13: __libc_start_main\r\n  14: _start\r\n% RUST_BACKTRACE=full ./a\r\nthread 'main' panicked at 'explicit panic', a.rs:1:13\r\nstack backtrace:\r\n   0:     0x557717de85fb - std::sys::unix::backtrace::tracing::imp::unwind_backtrace::h5875a9b214742a4d\r\n                               at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1:     0x557717deb9f1 - std::sys_common::backtrace::print::h143d03afdd7f5f00\r\n                               at libstd/sys_common/backtrace.rs:68\r\n                               at libstd/sys_common/backtrace.rs:57\r\n   2:     0x557717de6620 - std::panicking::default_hook::{{closure}}::h8ff827baa6fe8dc7\r\n                               at libstd/panicking.rs:380\r\n   3:     0x557717de6158 - std::panicking::default_hook::h23592ba8d5e03a89\r\n                               at libstd/panicking.rs:396\r\n   4:     0x557717de69ab - std::panicking::rust_panic_with_hook::ha49ba53377acd9fa\r\n                               at libstd/panicking.rs:576\r\n   5:     0x557717de4677 - std::panicking::begin_panic::hb09c91adc2d20ae1\r\n                               at /checkout/src/libstd/panicking.rs:537\r\n   6:     0x557717de45cd - a::main::hed51cb165992ecb8\r\n                               at /tmp/a.rs:1\r\n   7:     0x557717de41a1 - std::rt::lang_start::{{closure}}::h996750b753d22e78\r\n                               at /checkout/src/libstd/rt.rs:74\r\n   8:     0x557717de66c7 - std::panicking::try::do_call::he88b5e1c2ad945b3\r\n                               at libstd/rt.rs:59\r\n                               at libstd/panicking.rs:479\r\n   9:     0x557717df80be - __rust_maybe_catch_panic\r\n                               at libpanic_unwind/lib.rs:102\r\n  10:     0x557717de83cf - std::rt::lang_start_internal::h4b0a952236374327\r\n                               at libstd/panicking.rs:458\r\n                               at libstd/panic.rs:365\r\n                               at libstd/rt.rs:58\r\n  11:     0x557717de4181 - std::rt::lang_start::h9e17a65d1bce7359\r\n                               at /checkout/src/libstd/rt.rs:74\r\n  12:     0x557717de45fd - main\r\n  13:     0x7ff5d955bf49 - __libc_start_main\r\n  14:     0x557717de3f39 - _start\r\n  15:                0x0 - <unknown>\r\n```\r\n\r\n`1` v.s. `full` is less verbose, but I remember it also filtering out some stack frames in some previous compiler versions. (Only frame # 6 is really useful to me here.) Indeed, `src/libstd/sys_common/backtrace.rs` contains some code that looks for a `__rust_begin_short_backtrace` symbol on the stack to find out what to filter. It looks like some functionality has regressed.\r\n\r\nStepping through the program in gdb it looks like the `__rust_begin_short_backtrace` function is called, but despite `#[inline(never)]` there\u2019s apparently no stack frame (anymore?) for it.\r\n\r\nCC @Yamakaky and @alexcrichton for #41815, #38165, and #40264.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47429/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47429/timeline", "performed_via_github_app": null, "state_reason": "completed"}