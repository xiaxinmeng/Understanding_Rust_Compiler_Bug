{"url": "https://api.github.com/repos/rust-lang/rust/issues/101570", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101570/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101570/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101570/events", "html_url": "https://github.com/rust-lang/rust/issues/101570", "id": 1366149885, "node_id": "I_kwDOAAsO6M5Rbcr9", "number": 101570, "title": "Tracking issue for `mem_uninitialized` future-compatibility warning", "user": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-09-08T11:49:08Z", "updated_at": "2022-09-08T12:43:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is the **summary issue** for the `mem_uninitialized`\r\nfuture-compatibility warning and other related errors. The goal of\r\nthis page is describe why this change was made and how you can fix\r\ncode that is affected by it. It also provides a place to ask questions\r\nor register a complaint if you feel the change should not be made. For\r\nmore information on the policy around future-compatibility warnings,\r\nsee our [breaking change policy guidelines][guidelines].\r\n\r\n[guidelines]: https://github.com/rust-lang/rfcs/blob/master/text/1122-language-semver.md\r\n\r\n#### What is the warning for?\r\n\r\nThis warning will trigger whenever `std::mem::uninitialized` is used, unless the type returned consists of only raw pointers, integers, and floats.\r\n\r\nAs an example, `uninitialized::<[char; 64]>` will trigger the warning, but `uninitialized::<[u8; 64]>` will not. Additionally, in generic methods, `uninitialized::<T>` will trigger the warning, even though T might be a `[u8; 64]` when it is used.\r\n\r\nTo fix the warning, use [`std::mem::MaybeUninit`](https://doc.rust-lang.org/std/mem/union.MaybeUninit.html), and only `assume_init` once the value is fully initialized. Note that even though we do not warn for uninitialized integers here, it is still undefined behavior to create uninitialized integers.\r\n\r\nThe change to warn here was made in order to get notified when their dependencies inappropriately use `mem::uninitialized`, which can lead to runtime panics depending on the type (as tracked in https://github.com/rust-lang/rust/issues/66151). Using a lint here is less surprising than a runtime panic, and allows people to get notification of code that may break at runtime, earlier.\r\n\r\n#### When will this warning become a hard error?\r\n\r\nUnlike other future-compat warnings, this is never intended to be a hard error, it is purely to warn users about dangerous uses of `mem::uninitialized` in their dependency tree.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101570/timeline", "performed_via_github_app": null, "state_reason": null}