{"url": "https://api.github.com/repos/rust-lang/rust/issues/95427", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95427/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95427/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95427/events", "html_url": "https://github.com/rust-lang/rust/issues/95427", "id": 1184666404, "node_id": "I_kwDOAAsO6M5GnJMk", "number": 95427, "title": "Clarify `Vec::from_raw_parts` safety examples", "user": {"login": "jmaargh", "id": 11151181, "node_id": "MDQ6VXNlcjExMTUxMTgx", "avatar_url": "https://avatars.githubusercontent.com/u/11151181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmaargh", "html_url": "https://github.com/jmaargh", "followers_url": "https://api.github.com/users/jmaargh/followers", "following_url": "https://api.github.com/users/jmaargh/following{/other_user}", "gists_url": "https://api.github.com/users/jmaargh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmaargh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmaargh/subscriptions", "organizations_url": "https://api.github.com/users/jmaargh/orgs", "repos_url": "https://api.github.com/users/jmaargh/repos", "events_url": "https://api.github.com/users/jmaargh/events{/privacy}", "received_events_url": "https://api.github.com/users/jmaargh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-29T10:42:31Z", "updated_at": "2022-05-02T05:52:01Z", "closed_at": "2022-05-02T05:52:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looking at the documentation for [`Vec::from_raw_parts`](https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.from_raw_parts) it says:\r\n\r\n> For example it is not safe to build a `Vec<u8>` from a pointer to a C `char` array with length `size_t`.\r\n\r\nBut it's not clear to me _why_ this is not safe. My guess is that it's assumed to violate the \"`ptr` needs to have been previously allocated via [`String`]/`Vec<T>` (at least, it's highly likely to be incorrect if it wasn't).\" requirement. However, that's not necessarily the case, consider the following example (which I imagine is one of the main use-cases for this function):\r\n\r\n```rust\r\nlet mut ascii_string_buffer = Vec::<u8>::with_capacity(512);\r\nlet ptr = ascii_string_buffer.as_mut_ptr();\r\nlet capacity = ascii_string_buffer.capacity();\r\nlet mut length = 0;\r\nstd::mem::forget(ascii_string_buffer);\r\n\r\nunsafe {\r\n    some_ffi_filling_the_buffer(ptr as _, &mut length);\r\n    // error checking...\r\n}\r\n\r\nlet ascii_string = unsafe { Vec::from_raw_parts(ptr, length, capacity) };\r\n```\r\n\r\nAFAICT this is all safe (assuming the length is checked to be valid after the FFI call). The same region of memory, allocated and deallocated by the correct allocator, with appropriate alignment, and all bit patterns are valid for `u8`.\r\n\r\nTherefore, I suggest modifying the docs to read\r\n\r\n> For example it is not safe to build a `Vec<u8>` from an arbitrary pointer to a C `char` array with length `size_t`, the array must have been initially allocated by `Vec` or `String` for this to be safe.\r\n\r\nI haven't checked, but it's possible other `from_raw_parts` docs could use similar clarifications. I'm happy to make a PR, but wanted to check that I wasn't mistaken first.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95427/timeline", "performed_via_github_app": null, "state_reason": "completed"}