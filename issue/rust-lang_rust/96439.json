{"url": "https://api.github.com/repos/rust-lang/rust/issues/96439", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96439/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96439/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96439/events", "html_url": "https://github.com/rust-lang/rust/issues/96439", "id": 1216121272, "node_id": "I_kwDOAAsO6M5IfIm4", "number": 96439, "title": "rust-gdb should automatically break on `rust_panic`", "user": {"login": "antonromanov1", "id": 18309228, "node_id": "MDQ6VXNlcjE4MzA5MjI4", "avatar_url": "https://avatars.githubusercontent.com/u/18309228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antonromanov1", "html_url": "https://github.com/antonromanov1", "followers_url": "https://api.github.com/users/antonromanov1/followers", "following_url": "https://api.github.com/users/antonromanov1/following{/other_user}", "gists_url": "https://api.github.com/users/antonromanov1/gists{/gist_id}", "starred_url": "https://api.github.com/users/antonromanov1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antonromanov1/subscriptions", "organizations_url": "https://api.github.com/users/antonromanov1/orgs", "repos_url": "https://api.github.com/users/antonromanov1/repos", "events_url": "https://api.github.com/users/antonromanov1/events{/privacy}", "received_events_url": "https://api.github.com/users/antonromanov1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 4825122068, "node_id": "LA_kwDOAAsO6M8AAAABH5mFFA", "url": "https://api.github.com/repos/rust-lang/rust/labels/wg-debugging", "name": "wg-debugging", "color": "c2e0c6", "default": false, "description": "Bad Rust debugging experiences"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-04-26T15:21:38Z", "updated_at": "2023-04-09T03:12:34Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Why when the assert falls, assert! in rust-gdb, an Inferior process exited with code occurs and it is impossible to get a backtrace and walk around it (how can this be done with assert in libc)?\r\n\r\nRust's assert:\r\n```\r\nfn main() {\r\n    assert!(false);\r\n}\r\n```\r\none can get this in `rust-gdb`:\r\n```\r\n[Inferior 1 (process 18696) exited with code 0145]\r\n(gdb) bt\r\nNo stack.\r\n```\r\nAnd in C:\r\n```\r\n#include <assert.h>\r\n\r\nint main() {\r\n    assert(0);\r\n    return 0;\r\n}\r\n```\r\nYou get this:\r\n```\r\nProgram received signal SIGABRT, Aborted.\r\n0x... in raise () from /lib64/libc.so.6\r\n(gdb) bt\r\n#0  0x... in raise () from /lib64/libc.so.6\r\n...\r\n(gdb) f 4\r\n#4 0x... in main () ...\r\n4         assert(0);\r\n(gdb)\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96439/timeline", "performed_via_github_app": null, "state_reason": null}