{"url": "https://api.github.com/repos/rust-lang/rust/issues/77335", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77335/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77335/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77335/events", "html_url": "https://github.com/rust-lang/rust/issues/77335", "id": 711141735, "node_id": "MDU6SXNzdWU3MTExNDE3MzU=", "number": 77335, "title": "Deprecation text for Error::description leads users towards accidentally introducing infinite recursion", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-09-29T13:59:56Z", "updated_at": "2020-10-01T23:56:32Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the following code:\r\n\r\n```rust\r\npub enum Error {\r\n    Variant,\r\n}\r\n\r\nimpl fmt::Display for Error {\r\n    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {\r\n        f.write_str(std::error::Error::description(self))\r\n    }\r\n}\r\n\r\nimpl std::error::Error for Error {\r\n    fn description(&self) -> &str {\r\n        match self {\r\n            Error::Variant => \"some error happened\",\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis will give you the following error:\r\n\r\n```\r\nerror: use of deprecated associated function `std::error::Error::description`: use the Display impl or to_string()\r\n  --> somefile.rs:16:21\r\n   |\r\n16 |         f.write_str(std::error::Error::description(self))\r\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: requested on the command line with `-D deprecated`\r\n```\r\n\r\nwhich, if changed naively, will become:\r\n\r\n```rust\r\nimpl fmt::Display for Error {\r\n    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {\r\n        f.write_str(self.to_string())\r\n    }\r\n}\r\n```\r\n\r\nmaking the fmt implementation self-recursive (`to_string` calls `Display` calls `to_string`...).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77335/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 1, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77335/timeline", "performed_via_github_app": null, "state_reason": null}