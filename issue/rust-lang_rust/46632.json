{"url": "https://api.github.com/repos/rust-lang/rust/issues/46632", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46632/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46632/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46632/events", "html_url": "https://github.com/rust-lang/rust/issues/46632", "id": 280833811, "node_id": "MDU6SXNzdWUyODA4MzM4MTE=", "number": 46632, "title": "MIR borrowck: errors for closures should use the span of the closure header, instead of the closure", "user": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 604489711, "node_id": "MDU6TGFiZWw2MDQ0ODk3MTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-NLL", "name": "A-NLL", "color": "f7e101", "default": false, "description": "Area: Non Lexical Lifetimes (NLL)"}, {"id": 867465998, "node_id": "MDU6TGFiZWw4Njc0NjU5OTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-diagnostics", "name": "NLL-diagnostics", "color": "f799ea", "default": false, "description": "Working torwads the \"diagnostic parity\" goal"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/54", "html_url": "https://github.com/rust-lang/rust/milestone/54", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/54/labels", "id": 3463305, "node_id": "MDk6TWlsZXN0b25lMzQ2MzMwNQ==", "number": 54, "title": "Rust 2018 RC", "description": "See https://internals.rust-lang.org/t/rust-2018-the-home-stretch/7810", "creator": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 64, "state": "closed", "created_at": "2018-06-29T18:51:29Z", "updated_at": "2020-06-16T05:11:03Z", "due_on": "2018-09-13T07:00:00Z", "closed_at": "2018-11-16T11:06:58Z"}, "comments": 2, "created_at": "2017-12-10T18:58:03Z", "updated_at": "2018-08-06T21:03:58Z", "closed_at": "2018-08-06T21:03:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "e.g. the `borrowck-block-unint` test:\r\n```Rust\r\n// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\r\n// file at the top-level directory of this distribution and at\r\n// http://rust-lang.org/COPYRIGHT.\r\n//\r\n// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\r\n// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\r\n// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\r\n// option. This file may not be copied, modified, or distributed\r\n// except according to those terms.\r\n\r\nfn force<F>(f: F) where F: FnOnce() { f(); }\r\nfn main() {\r\n    let x: isize;\r\n    force(|| {  //~ ERROR capture of possibly uninitialized variable: `x`\r\n        println!(\"{}\", x);\r\n    });\r\n}\r\n```\r\n\r\nHas an error message that spans the entire closure, which is unwieldy when the closure is big:\r\n\r\n```\r\nerror[E0381]: capture of possibly uninitialized variable: `x` (Ast)\r\n  --> /home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-block-unint.rs:14:11\r\n   |\r\n14 |     force(|| {  //~ ERROR capture of possibly uninitialized variable: `x`\r\n   |           ^^ use of possibly uninitialized `x`\r\n\r\nerror[E0381]: borrow of possibly uninitialized variable: `x` (Mir)\r\n  --> /home/ariel/Rust/rust-master/src/test/compile-fail/borrowck/borrowck-block-unint.rs:14:11\r\n   |\r\n14 |       force(|| {  //~ ERROR capture of possibly uninitialized variable: `x`\r\n   |  ___________^\r\n15 | |         println!(\"{}\", x);\r\n16 | |     });\r\n   | |_____^ use of possibly uninitialized `x`\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nIt's probably also a good idea to also emit a note for the upvar capture, as in this message:\r\n```\r\nerror[E0502]: cannot borrow `x` as immutable because it is also borrowed as mutable\r\n --> src/main.rs:6:11\r\n  |\r\n5 |     let z = &mut x;\r\n  |                  - mutable borrow occurs here\r\n6 |     force(|| {  //~ ERROR capture of possibly uninitialized variable: `x`\r\n  |           ^^ immutable borrow occurs here\r\n7 |         println!(\"{}\", x);\r\n  |                        - borrow occurs due to use of `x` in closure\r\n8 |     });\r\n9 | }\r\n```", "closed_by": {"login": "KiChjang", "id": 3248587, "node_id": "MDQ6VXNlcjMyNDg1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/3248587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiChjang", "html_url": "https://github.com/KiChjang", "followers_url": "https://api.github.com/users/KiChjang/followers", "following_url": "https://api.github.com/users/KiChjang/following{/other_user}", "gists_url": "https://api.github.com/users/KiChjang/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiChjang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiChjang/subscriptions", "organizations_url": "https://api.github.com/users/KiChjang/orgs", "repos_url": "https://api.github.com/users/KiChjang/repos", "events_url": "https://api.github.com/users/KiChjang/events{/privacy}", "received_events_url": "https://api.github.com/users/KiChjang/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46632/timeline", "performed_via_github_app": null, "state_reason": "completed"}