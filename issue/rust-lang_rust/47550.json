{"url": "https://api.github.com/repos/rust-lang/rust/issues/47550", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47550/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47550/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47550/events", "html_url": "https://github.com/rust-lang/rust/issues/47550", "id": 289681798, "node_id": "MDU6SXNzdWUyODk2ODE3OTg=", "number": 47550, "title": "Cannot use an fn pointer as an Fn implementor.", "user": {"login": "brunoczim", "id": 18701450, "node_id": "MDQ6VXNlcjE4NzAxNDUw", "avatar_url": "https://avatars.githubusercontent.com/u/18701450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoczim", "html_url": "https://github.com/brunoczim", "followers_url": "https://api.github.com/users/brunoczim/followers", "following_url": "https://api.github.com/users/brunoczim/following{/other_user}", "gists_url": "https://api.github.com/users/brunoczim/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoczim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoczim/subscriptions", "organizations_url": "https://api.github.com/users/brunoczim/orgs", "repos_url": "https://api.github.com/users/brunoczim/repos", "events_url": "https://api.github.com/users/brunoczim/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoczim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-18T16:00:38Z", "updated_at": "2018-01-18T16:28:50Z", "closed_at": "2018-01-18T16:28:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Take this example:\r\n```rust\r\npub struct Adaptor<F> {\r\n    func: F,\r\n}\r\n\r\nimpl<F> Adaptor<F> {\r\n\r\n    pub fn new(func: F) -> Self {\r\n        Self {func}\r\n    }\r\n\r\n    pub fn with_from<I, O>() -> Self\r\n    where\r\n        O: From<I>,\r\n        F: Fn(I) -> O\r\n    {\r\n        Self {\r\n            func: <O as From<I>>::from,\r\n        }\r\n    }\r\n\r\n    pub fn adapt<T, I, O>(&self, input: I) -> T\r\n    where\r\n        T: From<O>,\r\n        O: From<I>,\r\n        F: Fn(I) -> O\r\n    {\r\n        T::from((self.func)(input))\r\n    }\r\n\r\n}\r\n\r\n\r\n```\r\nIt outputs:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> tests/fail.rs:17:19\r\n   |\r\n17 |             func: <O as From<I>>::from,\r\n   |                   ^^^^^^^^^^^^^^^^^^^^ expected type parameter, found fn item\r\n   |\r\n   = note: expected type `F`\r\n              found type `fn(I) -> O {<O as std::convert::From<I>>::from}`\r\n```\r\nClosures do not work too.\r\n```rust\r\npub struct Adaptor<F> {\r\n    func: F,\r\n}\r\n\r\nimpl<F> Adaptor<F> {\r\n\r\n    pub fn new(func: F) -> Self {\r\n        Self {func}\r\n    }\r\n\r\n    pub fn with_from<I, O>() -> Self\r\n    where\r\n        O: From<I>,\r\n        F: Fn(I) -> O\r\n    {\r\n        Self {\r\n            func: |x| O::from(x),\r\n        }\r\n    }\r\n\r\n    pub fn adapt<T, I, O>(&self, input: I) -> T\r\n    where\r\n        T: From<O>,\r\n        O: From<I>,\r\n        F: Fn(I) -> O\r\n    {\r\n        T::from((self.func)(input))\r\n    }\r\n\r\n}\r\n\r\n```\r\nOutputs:\r\n```\r\nerror[E0308]: mismatched types\r\n  --> tests/fail.rs:17:19\r\n   |\r\n17 |             func: |x| O::from(x),\r\n   |                   ^^^^^^^^^^^^^^ expected type parameter, found closure\r\n   |\r\n   = note: expected type `F`\r\n              found type `[closure@tests/fail.rs:17:19: 17:33]`\r\n```\r\n\r\nRust version:\r\n```\r\nrustc 1.25.0-nightly (da569fa9d 2018-01-16)\r\nbinary: rustc\r\ncommit-hash: da569fa9ddf8369a9809184d43c600dc06bd4b4d\r\ncommit-date: 2018-01-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.25.0-nightly\r\nLLVM version: 4.0\r\n```", "closed_by": {"login": "brunoczim", "id": 18701450, "node_id": "MDQ6VXNlcjE4NzAxNDUw", "avatar_url": "https://avatars.githubusercontent.com/u/18701450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoczim", "html_url": "https://github.com/brunoczim", "followers_url": "https://api.github.com/users/brunoczim/followers", "following_url": "https://api.github.com/users/brunoczim/following{/other_user}", "gists_url": "https://api.github.com/users/brunoczim/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoczim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoczim/subscriptions", "organizations_url": "https://api.github.com/users/brunoczim/orgs", "repos_url": "https://api.github.com/users/brunoczim/repos", "events_url": "https://api.github.com/users/brunoczim/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoczim/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47550/timeline", "performed_via_github_app": null, "state_reason": "completed"}