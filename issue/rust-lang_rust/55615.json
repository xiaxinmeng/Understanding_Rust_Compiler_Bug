{"url": "https://api.github.com/repos/rust-lang/rust/issues/55615", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55615/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55615/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55615/events", "html_url": "https://github.com/rust-lang/rust/issues/55615", "id": 376845492, "node_id": "MDU6SXNzdWUzNzY4NDU0OTI=", "number": 55615, "title": "Result / Option of non-null / non-zero types are not FFI-safe", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-11-02T15:00:08Z", "updated_at": "2019-08-16T18:24:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am writing an FFI wrapper for a library that has a function returning an integer error code:\r\n\r\n```rust\r\nextern \"C\" fn foo() -> libc::c_int;\r\n```\r\n\r\nThe error code of `foo` is `0` on success and non-zero on error. As suggested by @kennytm , I can do the following dance to obtain a `NonZeroU{width}` type that's suitable to hold a `c_int` (note: `NonZero<libc::c_int>` does not work anymore, and the `NonZeroI{width}` variants have been removed, so more extra dance is then necessary to convert the unsigned integers to a `libc::c_int` to be able to compare this with with std error codes like `libc::EINVAL`):\r\n\r\n```rust\r\npub trait NonZeroUInt { type NonZero; }\r\nimpl NonZeroUInt for i32 { type NonZero = core::num::NonZeroU32; }\r\nimpl NonZeroUInt for i64 { type NonZero = core::num::NonZeroU64; }\r\nimpl NonZeroUInt for isize { type NonZero = core::num::NonZeroUsize; }\r\n\r\npub type NonZeroCInt = <libc::c_int as NonZeroUInt>::NonZero;\r\n```\r\n\r\nHowever, when I then try to use `Result` in FFI:\r\n\r\n```rust\r\nextern \"C\" fn foo() -> Result<(), NonZeroCInt>;\r\n```\r\n\r\nI get an error stating that `Result` is not FFI-safe. This type is really similar to an `Option<&'static 32>` which is FFI-safe: an enum with 2 variants, one is zero sized, and the other has niches. \r\n\r\n`Option<NonNull<*mut i32>>`, `Option<NonZeroU32>`, and `Result<(), NonZeroU32>` are not, however, FFI safe.\r\n\r\nIs this an oversight ? \r\ncc @eddyb @SimonSapin ", "closed_by": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55615/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55615/timeline", "performed_via_github_app": null, "state_reason": null}