{"url": "https://api.github.com/repos/rust-lang/rust/issues/84187", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84187/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84187/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84187/events", "html_url": "https://github.com/rust-lang/rust/issues/84187", "id": 857826405, "node_id": "MDU6SXNzdWU4NTc4MjY0MDU=", "number": 84187, "title": "Tracking Issue for restructuring `sys_common`", "user": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37234, "node_id": "MDU6TGFiZWwzNzIzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-cleanup", "name": "C-cleanup", "color": "f5f1fd", "default": false, "description": "Category: PRs that clean code up or issues documenting cleanup."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 3471277129, "node_id": "LA_kwDOAAsO6M7O53xJ", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-libs-nominated", "name": "I-libs-nominated", "color": "e10c02", "default": false, "description": "Indicates that an issue has been nominated for discussion during a libs team meeting."}, {"id": 3812070271, "node_id": "LA_kwDOAAsO6M7jN5N_", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-technical-debt", "name": "A-technical-debt", "color": "f7e101", "default": false, "description": "Area: Internal cleanup work"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-04-14T11:59:41Z", "updated_at": "2023-04-21T10:06:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "> The relationship between `std::sys_common`, `std::sys` and the rest of `std` is complex, with dependencies going in all directions: `std` depending on `sys_common`, `sys_common` depending on `sys`, and `sys` depending on `sys_common` and `std`. Ideally `sys_common` would be split into two and the dependencies between them all would form a dag.\r\n\r\nThere is a lot of interdependence between `std`, `sys` and `sys_common`, this is because `sys_common` contains several types of code:\r\n- abstractions over the different platform implementations in std::sys (for example `std::sys_common::mutex`)\r\n- code shared between platforms (for example `std::sys_common::alloc`)\r\n- code that is not platform-dependent (for example `std::sys_common::poison`)\r\n\r\nIn order to reduce the interdependence, `sys_common` will be restructured:\r\n\r\n- A new module `sys::common` is introduced; code that is shared by all platforms will be moved from `sys_common` to this new module. \r\n- Code that is shared between some but not all platforms will be moved to `sys` and shared using `#[path]` instead.\r\n- Code that is not platform-dependent will be moved out of `sys_common` to the appropriate place in `std`.\r\n\r\nIdeally the end-result of this is `sys_common` again only containing platform-independent abstractions on top of `sys`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84187/timeline", "performed_via_github_app": null, "state_reason": null}