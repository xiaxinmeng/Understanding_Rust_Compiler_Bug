{"url": "https://api.github.com/repos/rust-lang/rust/issues/49851", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49851/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49851/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49851/events", "html_url": "https://github.com/rust-lang/rust/issues/49851", "id": 313069740, "node_id": "MDU6SXNzdWUzMTMwNjk3NDA=", "number": 49851, "title": "Improve usage of `compiler-builtins`", "user": {"login": "jamesmunns", "id": 2097964, "node_id": "MDQ6VXNlcjIwOTc5NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2097964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesmunns", "html_url": "https://github.com/jamesmunns", "followers_url": "https://api.github.com/users/jamesmunns/followers", "following_url": "https://api.github.com/users/jamesmunns/following{/other_user}", "gists_url": "https://api.github.com/users/jamesmunns/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesmunns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesmunns/subscriptions", "organizations_url": "https://api.github.com/users/jamesmunns/orgs", "repos_url": "https://api.github.com/users/jamesmunns/repos", "events_url": "https://api.github.com/users/jamesmunns/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesmunns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-04-10T20:03:56Z", "updated_at": "2018-04-26T05:28:09Z", "closed_at": "2018-04-26T05:28:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is regarding the changes made in #49380. This change works, however when the user makes some kind of mistake, especially forgetting to install the new targets (like `thumbv7em-none-eabihf`), the error messages are not currently helpful.\r\n\r\nThe current error message when forgetting to install the target looks like this:\r\n\r\n```bash\r\ncargo build --target thumbv7em-none-eabihf --example blinky\r\n   Compiling vcell v0.1.0\r\n   Compiling bare-metal v0.1.1\r\n   Compiling aligned v0.1.1\r\n   Compiling untagged-option v0.1.1\r\nerror[E0463]: can't find crate for `compiler_builtins`\r\n\r\nerror[E0463]: can't find crate for `compiler_builtins`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0463`.\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0463`.\r\nerror[E0463]: can't find crate for `compiler_builtins`\r\n\r\nerror: aborting due to previous error\r\n\r\nerror[E0463]: can't find crate for `compiler_builtins`\r\nFor more information about this error, try `rustc --explain E0463`.\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0463`.\r\n```\r\n\r\ncompared to the following when you try to compile for a not-installed target:\r\n\r\n```bash\r\ncargo build --target i686-unknown-linux-gnu\r\n   Compiling foo v0.1.0 (file:///tmp/foo)\r\nerror[E0463]: can't find crate for `std`\r\n  |\r\n  = note: the `i686-unknown-linux-gnu` target may not be installed\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error\r\n```\r\n\r\nThe following `#[no_std]` code shows (the first part of) a typical embedded project:\r\n\r\n```rust\r\n//! Blinks an LED\r\n\r\n#![deny(unsafe_code)]\r\n#![deny(warnings)]\r\n#![no_std]\r\n\r\nextern crate cortex_m;\r\n```\r\n\r\nusing `cargo expand`, this code expands to:\r\n\r\n```rust\r\n#![feature(prelude_import)]\r\n#![no_std]\r\n//! Blinks an LED\r\n\r\n#![deny(unsafe_code)]\r\n#![deny(warnings)]\r\n#![no_std]\r\n#[prelude_import]\r\nuse core::prelude::v1::*;\r\n#[macro_use]\r\nextern crate compiler_builtins;\r\n#[macro_use]\r\nextern crate core;\r\n\r\nextern crate cortex_m;\r\n```\r\n\r\nThe Embedded WG talked about this, and we think the error messages would be improved if the order of `extern crate compiler_builtins;` and `extern crate core;` were swapped.", "closed_by": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49851/timeline", "performed_via_github_app": null, "state_reason": "completed"}