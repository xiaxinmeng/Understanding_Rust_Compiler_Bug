{"url": "https://api.github.com/repos/rust-lang/rust/issues/49199", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49199/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49199/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49199/events", "html_url": "https://github.com/rust-lang/rust/issues/49199", "id": 306752804, "node_id": "MDU6SXNzdWUzMDY3NTI4MDQ=", "number": 49199, "title": "miri interpretation of large array initialization is slow", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1244499056, "node_id": "MDU6TGFiZWwxMjQ0NDk5MDU2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-miri", "name": "A-miri", "color": "f7e101", "default": false, "description": "Area: The miri tool"}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-20T07:17:45Z", "updated_at": "2022-07-07T09:48:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now, if you are initializing a large array either manually or with an array repeat expression takes a long time during interpretation.\r\n\r\n* [ ] Fixing array repeat expressions requires us to stop filling each element individually and just manually filling up the virtual memory (https://github.com/rust-lang/rust/blob/master/src/librustc_mir/interpret/eval_context.rs#L591)\r\n\r\nArrays with lots of fields that are initialized as\r\n\r\n```rust\r\nstatic FOO: [T; N] = [A, B, C, ....., XX, XY];\r\n```\r\n\r\nare turned into the MIR equivalent of\r\n\r\n```rust\r\nstatic FOO: [T; N] = {\r\nlet array: [T; N] = mem::uninitialized();\r\nlet a = A;\r\nlet b = B;\r\nlet c = C;\r\n....\r\nlet xx = XX;\r\nlet xy = XY;\r\narray = [A, B, C, ...., XX, XY];\r\narray\r\n}\r\n```\r\n\r\nWhich requires twice the memory (once for each variable and once for the array) and twice the instructions (initializing the variables and copying each variable into the array).\r\n\r\n* [ ] Instead, we should turn that MIR into \r\n\r\n```rust\r\nstatic FOO: [T; N] = {\r\nlet array: [T; N] = mem::uninitialized();\r\narray[0] = A;\r\narray[1] = B;\r\narray[2] = C;\r\n....\r\narray[N-2] = XX;\r\narray[N-1] = XY;\r\narray\r\n}\r\n```\r\n\r\nWhat do you think @eddyb ?\r\n\r\ncc @Zoxc @bob_twinkles @rkruppe ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49199/timeline", "performed_via_github_app": null, "state_reason": null}