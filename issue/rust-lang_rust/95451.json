{"url": "https://api.github.com/repos/rust-lang/rust/issues/95451", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95451/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95451/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95451/events", "html_url": "https://github.com/rust-lang/rust/issues/95451", "id": 1185493133, "node_id": "I_kwDOAAsO6M5GqTCN", "number": 95451, "title": "Tracking Issue for extended generic associated types", "user": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537216829, "node_id": "LA_kwDOAAsO6M7S1aU9", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-perma-unstable", "name": "S-tracking-perma-unstable", "color": "4682b4", "default": false, "description": ""}, {"id": 3980517256, "node_id": "LA_kwDOAAsO6M7tQd-I", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types_extended", "name": "F-generic_associated_types_extended", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types_extended)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-29T22:22:01Z", "updated_at": "2022-08-10T17:37:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a tracking issue for extensions to the minimal `generic_associated_types` feature, intended to contain features not intended to be stabilized during initial stabilization. This is primarily for experimentation and likely will remain \"incomplete\" and almost certainly unsound, at least in the short-term. Longer-term, we like split these features out into separate feature gates, as their implementation becomes more complete.\r\n\r\nThe RFC for GATs is https://github.com/rust-lang/rfcs/pull/1598, but this feature gate likely will contain features not included in the original RFC.\r\nThe feature gate for the issue is `#![feature(generic_associated_types_extended)]`.\r\n\r\n# Repository\r\n\r\n* Detailed tracking information is available at the [GAT initiative repository](https://rust-lang.github.io/generic-associated-types-initiative/)\r\n\r\n# Features included under this feature gate\r\n\r\n## \"Lazy\" associated type obligations during projection\r\n\r\n### Summary\r\n\r\nBriefly, this ignores obligations generated during projection when they contain placeholder regions generated from higher-ranked trait bounds. Eventually, the idea is to either check these more logically or to confirm that they are checked with concrete regions.\r\n\r\n### Implementation history\r\n\r\n- #94869: First implemented\r\n\r\n### Unresolved questions\r\n\r\n- Logically and eagerly prove obligations; or, lazily prove obligations?\r\n\r\n## Object safe GATs\r\n\r\n### Summary\r\n\r\nThis feature allows traits with GATs to be object safe (other object safety requirements must hold).\r\n\r\n### Implementation history\r\n\r\n- #94911: First implementation\r\n\r\n### Unresolved questions\r\n\r\n- There are a number of well-formedness checks that are unimplemented. It's not quite sure how these should or need to be implemented. These are briefly mentioned here: https://github.com/rust-lang/chalk/blob/1f43e8265eb0472700286bf5c0afa30fcf4cec5a/chalk-solve/src/clauses.rs#L442\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95451/reactions", "total_count": 3, "+1": 0, "-1": 0, "laugh": 0, "hooray": 3, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95451/timeline", "performed_via_github_app": null, "state_reason": null}