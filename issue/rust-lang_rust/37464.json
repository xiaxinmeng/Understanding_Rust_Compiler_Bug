{"url": "https://api.github.com/repos/rust-lang/rust/issues/37464", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37464/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37464/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37464/events", "html_url": "https://github.com/rust-lang/rust/issues/37464", "id": 186067478, "node_id": "MDU6SXNzdWUxODYwNjc0Nzg=", "number": 37464, "title": "Generic Fn wrapper breaks without type annotations", "user": {"login": "hban", "id": 2943382, "node_id": "MDQ6VXNlcjI5NDMzODI=", "avatar_url": "https://avatars.githubusercontent.com/u/2943382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hban", "html_url": "https://github.com/hban", "followers_url": "https://api.github.com/users/hban/followers", "following_url": "https://api.github.com/users/hban/following{/other_user}", "gists_url": "https://api.github.com/users/hban/gists{/gist_id}", "starred_url": "https://api.github.com/users/hban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hban/subscriptions", "organizations_url": "https://api.github.com/users/hban/orgs", "repos_url": "https://api.github.com/users/hban/repos", "events_url": "https://api.github.com/users/hban/events{/privacy}", "received_events_url": "https://api.github.com/users/hban/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-29T08:43:41Z", "updated_at": "2023-06-02T09:19:04Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I have a generic `FnWrapper` struct for closures that take a `&i32` as their only parameter, and a generic `apply` function that consumes such wrappers (not directly, but via `Foo` trait).\n\n``` rust\ntrait Foo {\n    fn foo(self, value: &i32);\n}\n\nstruct FnWrapper<F>(F);\n\nimpl<F: FnOnce(&i32)> Foo for FnWrapper<F> {\n    fn foo(self, value: &i32) {\n        (self.0)(value);\n    }\n}\n\nfn apply<F: Foo>(_: F) {}\n\nfn main() {\n    // Error.\n    apply(FnWrapper(|_| {}));\n\n    // Ok with type annotations.\n    apply(FnWrapper(|_: &i32| {}));\n}\n```\n\n[Run in playground](https://play.rust-lang.org/?gist=c3b691fefa7325d69fdfc3b54eaa3c19&version=nightly&backtrace=0).\n\nWhen invoking `apply` without any annotations, compiler complains about:\n\n```\nerror[E0271]: type mismatch resolving `for<'r> <[closure@<anon>:17:21: 17:27] as std::ops::FnOnce<(&'r i32,)>>::Output == ()`\n  --> <anon>:17:5\n   |\n17 |     apply(FnWrapper(|_| {}));\n   |     ^^^^^ expected bound lifetime parameter , found concrete lifetime\n   |\n   = note: concrete lifetime that was found is lifetime '_#0r\n   = note: required because of the requirements on the impl of `Foo` for `FnWrapper<[closure@<anon>:17:21: 17:27]>`\n   = note: required by `apply`\n\nerror[E0281]: type mismatch: the type `[closure@<anon>:17:21: 17:27]` implements the trait `std::ops::FnOnce<(_,)>`, but the trait `for<'r> std::ops::FnOnce<(&'r i32,)>` is required (expected concrete lifetime, found bound lifetime parameter )\n  --> <anon>:17:5\n   |\n17 |     apply(FnWrapper(|_| {}));\n   |     ^^^^^\n   |\n   = note: required because of the requirements on the impl of `Foo` for `FnWrapper<[closure@<anon>:17:21: 17:27]>`\n   = note: required by `apply`\n```\n\nSimply adding type annotation to the closure parameter will make this compile, so it looks like a bug to me.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37464/timeline", "performed_via_github_app": null, "state_reason": null}