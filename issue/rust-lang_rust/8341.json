{"url": "https://api.github.com/repos/rust-lang/rust/issues/8341", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8341/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8341/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8341/events", "html_url": "https://github.com/rust-lang/rust/issues/8341", "id": 17702284, "node_id": "MDU6SXNzdWUxNzcwMjI4NA==", "number": 8341, "title": "Eliminate blocking on the event loop when possible", "user": {"login": "toddaaro", "id": 366431, "node_id": "MDQ6VXNlcjM2NjQzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/366431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toddaaro", "html_url": "https://github.com/toddaaro", "followers_url": "https://api.github.com/users/toddaaro/followers", "following_url": "https://api.github.com/users/toddaaro/following{/other_user}", "gists_url": "https://api.github.com/users/toddaaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/toddaaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toddaaro/subscriptions", "organizations_url": "https://api.github.com/users/toddaaro/orgs", "repos_url": "https://api.github.com/users/toddaaro/repos", "events_url": "https://api.github.com/users/toddaaro/events{/privacy}", "received_events_url": "https://api.github.com/users/toddaaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-06T17:06:37Z", "updated_at": "2014-09-19T03:26:12Z", "closed_at": "2014-09-19T03:26:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the current design the scheduler takes one scheduling action, registers a callback to wake up in the run_sched_once function, and then blocks on the event loop. This \"block\" is implemented as just finishing the execution associated with the run_sched_once callback. As there is a callback registered it immediately wakes up and repeats the process.\n\nThis should be unnecessary. The drop back to the event loop is a very long process relative to a task context swap, so this is likely very bad for performance. A better solution would be to keep the scheduler active until it runs out of stuff to do, and then block on the event loop.\n\nTo do this we should have a \"live\" flag for the scheduler. If the flag is set the scheduler is guarenteed to check for messages and likely work before going to sleep. While active the scheduler algorithm becomes:\n\n1) Call run on the event loop with the NO_WAIT flag set. This will make it so that if there are no events, the function returns immediately instead of blocking.\n2) Find a task to run, and run it. Repeat a small number of times to get better task throughput.\n3) If the live flag is false, call a blocking run.\n4) If no work has been done this round, set the live flag to false.\n5) Goto (1)\n\nThe libuv \"uv_run\" function has three modes. UV_RUN_DEFAULT is what we have been using, a blocking \"do stuff until the program is done\" use of the event loop. UV_RUN_NOWAIT polls for new events and then does not block if there are no events ready. This is the style that we want for the non-blocking run case. UV_RUN_ONCE is how we would perform blocking runs. It will block until it handles a single event, and then return how many pending events there are.\n\nTo wake up the scheduler while it is \"sleeping\", the old idle-callback is used. Except now the function provided simply modifies the live flag to \"awake\", and the scheduler loop logic takes over. In any case where an idle callback would be registered and the live flag is set the callback can be skipped.\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8341/timeline", "performed_via_github_app": null, "state_reason": "completed"}