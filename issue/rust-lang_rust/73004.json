{"url": "https://api.github.com/repos/rust-lang/rust/issues/73004", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73004/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73004/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73004/events", "html_url": "https://github.com/rust-lang/rust/issues/73004", "id": 631193494, "node_id": "MDU6SXNzdWU2MzExOTM0OTQ=", "number": 73004, "title": "\"mismatched types\" hint to add semicolon before use", "user": {"login": "magmast", "id": 23727047, "node_id": "MDQ6VXNlcjIzNzI3MDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/23727047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magmast", "html_url": "https://github.com/magmast", "followers_url": "https://api.github.com/users/magmast/followers", "following_url": "https://api.github.com/users/magmast/following{/other_user}", "gists_url": "https://api.github.com/users/magmast/gists{/gist_id}", "starred_url": "https://api.github.com/users/magmast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magmast/subscriptions", "organizations_url": "https://api.github.com/users/magmast/orgs", "repos_url": "https://api.github.com/users/magmast/repos", "events_url": "https://api.github.com/users/magmast/events{/privacy}", "received_events_url": "https://api.github.com/users/magmast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T22:47:11Z", "updated_at": "2023-01-08T20:12:27Z", "closed_at": "2023-01-08T20:12:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I'm trying out async/await and tokio. When I've created async function which returns `Result<(), Box<dyn std::error::Error>>`, compiler started to complain that it found `impl std::future::Future` instead of `()`. I think that's a bug itself because I'm returning `Ok(())` from it (still not sure if I'm not doing something wrong), but there's another thing that I'm sure is a bug. Please look at the error message:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n   |\r\n   = note: expected unit type `()`\r\n            found opaque type `impl std::future::Future`\r\nhelp: try adding a semicolon\r\n   |\r\n1  | ;use std::error::Error;\r\n   | ^\r\nhelp: consider using a semicolon here\r\n   |\r\n1  | ;use std::error::Error;\r\n   | ^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\n```\r\n\r\nIt asks me to add semicolon on first line of code before `use` keyword. I've tried that, but then it hints me \"remove this semicolon\" and \"consider adding a `main` function\".\r\n\r\nI  tried this code:\r\n\r\n```rust\r\nuse std::error::Error;\r\n\r\nuse tokio::io::{AsyncBufReadExt, BufStream};\r\nuse tokio::net::{TcpListener, TcpStream};\r\nuse tokio::stream::StreamExt;\r\n\r\nuse tracing::info;\r\n\r\nuse tracing_subscriber::FmtSubscriber;\r\n\r\n#[tokio::main]\r\n#[tracing::instrument]\r\nasync fn main() -> Result<(), Box<dyn Error>> {\r\n    FmtSubscriber::builder().init();\r\n\r\n    let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;\r\n\r\n    info!(\"Listening at {:?}\", listener.local_addr());\r\n\r\n    while let Some(stream) = listener.next().await {\r\n        match stream {\r\n            Ok(stream) => handle_client(stream),\r\n            Err(err) => return Err(err.into()),\r\n        }\r\n    }\r\n\r\n    Ok(())\r\n}\r\n\r\n#[tracing::instrument]\r\nasync fn handle_client(stream: TcpStream) -> Result<(), Box<dyn Error>> {\r\n    let stream = BufStream::new(stream);\r\n\r\n    let mut buffer = Vec::new();\r\n    stream\r\n        .read_until(b' ', &mut buffer)\r\n        .await?;\r\n\r\n    let method = String::from_utf8(buffer)?;\r\n\r\n    Ok(())\r\n}\r\n```\r\n\r\nI expected to see my code running or a lot of helpful errors.\r\n\r\nInstead, I saw error that says to enter semicolon before use on first line in file.\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.1 (8d69840ab 2020-05-04)\r\nbinary: rustc\r\ncommit-hash: 8d69840ab92ea7f4d323420088dd8c9775f180cd\r\ncommit-date: 2020-05-04\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.1\r\nLLVM version: 9.0\r\n```\r\n\r\nRunning with backtrace enabled isn't showing any additional info.\r\n\r\nIf that bug is easy to fix, I would like to try, but may need some help, because I've never even looked at rust compiler code.", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73004/timeline", "performed_via_github_app": null, "state_reason": "completed"}