{"url": "https://api.github.com/repos/rust-lang/rust/issues/48299", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48299/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48299/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48299/events", "html_url": "https://github.com/rust-lang/rust/issues/48299", "id": 298013627, "node_id": "MDU6SXNzdWUyOTgwMTM2Mjc=", "number": 48299, "title": "concat constant println!() args at compiletime", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-17T15:45:20Z", "updated_at": "2020-04-20T22:05:43Z", "closed_at": "2020-04-20T22:05:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Just an idea.\r\nFor\r\n````rust\r\npub fn printtest() {\r\n    println!(\"hello world\");\r\n}\r\n````\r\nwe get\r\n````asm\r\n_ZN7example9printtest17h5d89ebc14efc990fE:\r\n  push rbp\r\n  mov rbp, rsp\r\n  sub rsp, 48\r\n  lea rax, [rip + .Lref.1]\r\n  mov qword ptr [rbp - 48], rax\r\n  mov qword ptr [rbp - 40], 1\r\n  mov qword ptr [rbp - 32], 0\r\n  lea rax, [rip + .Lref.2]\r\n  mov qword ptr [rbp - 16], rax\r\n  mov qword ptr [rbp - 8], 0\r\n  lea rdi, [rbp - 48]\r\n  call _ZN3std2io5stdio6_print17h0853ad73ee6dca9dE@PLT\r\n  add rsp, 48\r\n  pop rbp\r\n  ret\r\n\r\nstr.0:\r\n  .ascii \"hello world\\n\"\r\n\r\n.Lref.1:\r\n  .quad str.0\r\n  .quad 12\r\n\r\n.Lref.2:\r\n````\r\n\r\nBut for\r\n````rust\r\npub fn printtest()  {\r\n    println!(\"hello {}\", \"world\");\r\n}\r\n````\r\nwe get\r\n````asm\r\n<&'a T as core::fmt::Display>::fmt:\r\n  push rbp\r\n  mov rbp, rsp\r\n  mov rax, rsi\r\n  mov rcx, qword ptr [rdi]\r\n  mov rsi, qword ptr [rdi + 8]\r\n  mov rdi, rcx\r\n  mov rdx, rax\r\n  pop rbp\r\n  jmp <str as core::fmt::Display>::fmt@PLT\r\n\r\nexample::printtest:\r\n  push rbp\r\n  mov rbp, rsp\r\n  sub rsp, 64\r\n  lea rax, [rip + <&'a T as core::fmt::Display>::fmt]\r\n  movq xmm0, rax\r\n  lea rax, [rip + .Lref.4]\r\n  movq xmm1, rax\r\n  punpcklqdq xmm1, xmm0\r\n  movdqa xmmword ptr [rbp - 64], xmm1\r\n  lea rax, [rip + .Lref.2]\r\n  mov qword ptr [rbp - 48], rax\r\n  mov qword ptr [rbp - 40], 2\r\n  lea rax, [rip + .Lref.5]\r\n  mov qword ptr [rbp - 32], rax\r\n  mov qword ptr [rbp - 24], 1\r\n  lea rax, [rbp - 64]\r\n  mov qword ptr [rbp - 16], rax\r\n  mov qword ptr [rbp - 8], 1\r\n  lea rdi, [rbp - 48]\r\n  call std::io::stdio::_print@PLT\r\n  add rsp, 64\r\n  pop rbp\r\n  ret\r\n\r\nstr.0:\r\n  .ascii \"hello \"\r\n\r\nstr.1:\r\n  .byte 10\r\n\r\n.Lref.2:\r\n  .quad str.0\r\n  .quad 6\r\n  .quad str.1\r\n  .quad 1\r\n\r\nstr.3:\r\n  .ascii \"world\"\r\n\r\n.Lref.4:\r\n  .quad str.3\r\n  .quad 5\r\n\r\n.Lref.5:\r\n  .quad 1\r\n  .quad 0\r\n  .quad 3\r\n  .zero 8\r\n  .quad 3\r\n  .zero 8\r\n  .long 32\r\n  .long 0\r\n  .byte 3\r\n  .zero 7\r\n````\r\nDon't they do the same essentially?\r\nMaybe this is something miri will be able to solve?\r\nEDIT: godbolt link: https://godbolt.org/g/UhfqUb", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48299/timeline", "performed_via_github_app": null, "state_reason": "completed"}