{"url": "https://api.github.com/repos/rust-lang/rust/issues/82523", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82523/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82523/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82523/events", "html_url": "https://github.com/rust-lang/rust/issues/82523", "id": 816691231, "node_id": "MDU6SXNzdWU4MTY2OTEyMzE=", "number": 82523, "title": "Tracking Issue for future-incompatibility warning `unaligned_references`", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537211190, "node_id": "LA_kwDOAAsO6M7S1Y82", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-needs-to-bake", "name": "S-tracking-needs-to-bake", "color": "4682b4", "default": false, "description": "This is \"code complete\" but needs time to bake."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 77, "created_at": "2021-02-25T18:36:14Z", "updated_at": "2023-05-16T15:58:40Z", "closed_at": "2023-02-01T01:15:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nNOTE: For library features, please use the \"Library Tracking Issue\" template instead.\r\n\r\nThank you for creating a tracking issue! \ud83d\udcdc Tracking issues are for tracking a\r\nfeature from implementation to stabilisation. Make sure to include the relevant\r\nRFC for the feature if it has one. Otherwise provide a short summary of the\r\nfeature and link any relevant PRs or issues, and remove any sections that are\r\nnot relevant to the feature.\r\n\r\nRemember to add team labels to the tracking issue.\r\nFor a language team feature, this would e.g., be `T-lang`.\r\nSuch a feature should also be labeled with e.g., `F-my_feature`.\r\nThis label is used to associate issues (e.g., bugs and design questions) to the feature.\r\n-->\r\n\r\nThis is a tracking issue for the future-incompatibility warning `unaligned_references`.\r\nThis warning will fire for code like the following:\r\n```rust\r\n#[repr(packed)]\r\nstruct Foo1 {\r\n    bar: u8,\r\n    baz: usize\r\n}\r\n\r\nlet foo = Foo1 { bar: 1, baz: 2 };\r\n// Direct field accesses are fine.\r\nlet val = foo.baz;\r\n// However, creating a reference is not.\r\nlet brw = &foo.baz; //~WARN reference to packed field is unaligned\r\n// Format strings implicitly create references.\r\nprintln!(\"{}\", foo.baz); //~WARN reference to packed field is unaligned\r\n```\r\nThe reason this pattern is being phased out is that Rust requires references to always be aligned; creating an unaligned reference falls under the \"creating an invalid value\" clause in [the Rust definition of Undefined Behavior](https://doc.rust-lang.org/reference/behavior-considered-undefined.html). Fields of packed structs are not necessarily properly aligned. Hence creating a reference to a field of a packed struct can cause UB, even if it is never used, and even inside an `unsafe` block. This is a soundness bug, which is fixed by deprecating and eventually disallowing this pattern.\r\n\r\nPreviously, a future-incompatibility warning was emitted when creating references to packed fields outside an unsafe block; however, that warning was incorrectly silenced inside unsafe blocks.\r\n\r\nTo fix this code, it needs to stop creating a reference to a packed field. The alternative is to either just *copy* the packed field by adding curly braces (the compiler knows how to do that despite lack of alignment), or to create a raw pointer:\r\n```rust\r\nlet mut foo = Foo1 { bar: 1, baz: 2 };\r\n\r\nlet brw = std::ptr::addr_of!(foo.baz); // Create an immutable raw pointer to the packed field.\r\nlet val = unsafe { brw.read_unaligned() }; // Perform an unaligned read of that pointer.\r\nlet brw_mut = std::ptr::addr_of_mut!(foo.baz); // Create a mutable raw pointer to the packed field.\r\nunsafe { brw_mut.write_unaligned(val+1); } // Perform an unaligned write to that pointer.\r\n\r\n// For formatting, adding curly braces means that a copy of the field is made, stored\r\n// in a (properly aligned) temporary, and a reference to that temporary is being formatted.\r\nprintln!(\"{}\", {foo.baz});\r\n// This is equivalent to the more verbose\r\nprintln!(\"{}\", {let copy = foo.baz; copy});\r\n```\r\n\r\nFor further background, see https://github.com/rust-lang/rust/issues/46043, #27060.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82523/reactions", "total_count": 14, "+1": 13, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82523/timeline", "performed_via_github_app": null, "state_reason": "completed"}