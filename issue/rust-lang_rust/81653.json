{"url": "https://api.github.com/repos/rust-lang/rust/issues/81653", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81653/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81653/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81653/events", "html_url": "https://github.com/rust-lang/rust/issues/81653", "id": 798898470, "node_id": "MDU6SXNzdWU3OTg4OTg0NzA=", "number": 81653, "title": "Inconsistent move behavior in closure with async block", "user": {"login": "vultix", "id": 5114062, "node_id": "MDQ6VXNlcjUxMTQwNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5114062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vultix", "html_url": "https://github.com/vultix", "followers_url": "https://api.github.com/users/vultix/followers", "following_url": "https://api.github.com/users/vultix/following{/other_user}", "gists_url": "https://api.github.com/users/vultix/gists{/gist_id}", "starred_url": "https://api.github.com/users/vultix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vultix/subscriptions", "organizations_url": "https://api.github.com/users/vultix/orgs", "repos_url": "https://api.github.com/users/vultix/repos", "events_url": "https://api.github.com/users/vultix/events{/privacy}", "received_events_url": "https://api.github.com/users/vultix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 693664741, "node_id": "MDU6TGFiZWw2OTM2NjQ3NDE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mentor", "name": "E-needs-mentor", "color": "02e10c", "default": false, "description": "Call for participation: This issue is in need of a mentor."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-02-02T03:43:04Z", "updated_at": "2021-10-07T23:19:48Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nThis closure fails to compile:\r\n\r\n```rust\r\n|val: i32| async {\r\n    dbg!(val)\r\n};\r\n\r\nerror[E0373]: async block may outlive the current function, but it borrows `val`, which is owned by the current function\r\n```\r\n\r\nI'd expect that this would compile - `val` should be moved into the async closure.\r\n\r\nThis is inconsistent with the following cases where it compiles ([playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=975074b278d22f17c216f2ad5e88f0b5)):\r\n- If you change the type of `val` to a `!Copy` type (such as `String`)\r\n- If you get rid of the `async` keyword\r\n- If you don't use a closure and just have an async block capture a Copy variable\r\n\r\n\r\nThis has a serious drawback in that it forces you to use `async move` even when you can't move everything into the async block.\r\n\r\n### Workaround\r\nThis is super unergonomic, but as a workaround you can surround the copy type with a `NonCopy` newtype.\r\n```\r\nstruct NonCopy(i32);\r\n|val: NonCopy| async {\r\n    dbg!{val.0}\r\n};\r\n```\r\n\r\n### Meta\r\nThis happens on Stable, Nightly, and Beta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (1c389ffef 2020-11-24)\r\nbinary: rustc\r\ncommit-hash: 1c389ffeff814726dec325f0f2b0c99107df2673\r\ncommit-date: 2020-11-24\r\nhost: x86_64-apple-darwin\r\nrelease: 1.50.0-nightly\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81653/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81653/timeline", "performed_via_github_app": null, "state_reason": null}