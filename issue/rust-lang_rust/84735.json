{"url": "https://api.github.com/repos/rust-lang/rust/issues/84735", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84735/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84735/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84735/events", "html_url": "https://github.com/rust-lang/rust/issues/84735", "id": 872072564, "node_id": "MDU6SXNzdWU4NzIwNzI1NjQ=", "number": 84735, "title": "\"unstable fingerprints for predicates_of\" with Clone trait", "user": {"login": "AE1020", "id": 68134252, "node_id": "MDQ6VXNlcjY4MTM0MjUy", "avatar_url": "https://avatars.githubusercontent.com/u/68134252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AE1020", "html_url": "https://github.com/AE1020", "followers_url": "https://api.github.com/users/AE1020/followers", "following_url": "https://api.github.com/users/AE1020/following{/other_user}", "gists_url": "https://api.github.com/users/AE1020/gists{/gist_id}", "starred_url": "https://api.github.com/users/AE1020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AE1020/subscriptions", "organizations_url": "https://api.github.com/users/AE1020/orgs", "repos_url": "https://api.github.com/users/AE1020/repos", "events_url": "https://api.github.com/users/AE1020/events{/privacy}", "received_events_url": "https://api.github.com/users/AE1020/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-30T06:29:29Z", "updated_at": "2021-05-01T14:20:58Z", "closed_at": "2021-05-01T14:20:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "**This appears to be a transient error in an incremental build.**  I wrote up this issue and saved the stack when I got it.  But when I did `cargo clean` and then `cargo build` it would not reproduce.\r\n\r\nI had done `rustup default nightly` at some point, probably (?) without a `cargo clean`.  There had been successful builds after that with nightly, but perhaps never a clean one.  In case that had something to do with it, I tried:\r\n\r\n    $ rustup default stable\r\n    $ cargo clean\r\n    $ cargo build\r\n\r\n    # make change here\r\n\r\n    $ rustup default nightly\r\n    $ cargo build\r\n\r\nBut that didn't reproduce it either.  :-(\r\n\r\n---\r\n\r\nThe change was to manually implement a Clone trait that had previously been derived, in order to log or set breakpoints when a clone of a particular struct was made.\r\n\r\nThe patch I'm trying is to the Firecracker VMM, [specifically to a struct in mmio.rs](https://github.com/firecracker-microvm/firecracker/blob/ffbc2efcf2dcffa02db6df3474a8ad2b0bad21f7/src/vmm/src/device_manager/mmio.rs#L83). \r\n\r\n*(Note: I don't have any Rust experience to speak of--and am merely trying to get some experience with it by poking around with Firecracker.  But perhaps that makes me good at writing unexpected things that will crash Rustc.)*\r\n\r\n### Code\r\n\r\n```Rust\r\n#[derive(Debug, PartialEq, Versionize)]  // previously derived Clone\r\npub struct MMIODeviceInfo {\r\n    pub addr: u64,\r\n    pub len: u64,\r\n    pub irqs: Vec<u32>,\r\n}\r\n\r\nimpl Clone for MMIODeviceInfo {  // I added this \"hooked\" Clone\r\n    fn clone(&self) -> Self {\r\n        println!(\"!!! CLONING {}\", self.addr);\r\n\r\n        // Question: is this equivalent to what the derive(Clone) makes?\r\n        MMIODeviceInfo {\r\n            addr: self.addr.clone(),\r\n            len: self.len.clone(),\r\n            irqs: self.irqs.clone()\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n\r\n```\r\nrustc 1.53.0-nightly (42816d61e 2021-04-24)\r\nbinary: rustc\r\ncommit-hash: 42816d61ead7e46d462df997958ccfd514f8c21c\r\ncommit-date: 2021-04-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Some(Fingerprint(850694786735502876, 7070618143976680221))`,\r\n right: `Some(Fingerprint(4204111565215846862, 483459271662230500))`: found unstable fingerprints for predicates_of(core[ec89]::clone::Clone): GenericPredicates { parent: None, predicates: [(Binder(TraitPredicate(<Self as std::marker::Sized>), []), /home/ae1020/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:108:18: 108:23 (#0)), (Binder(TraitPredicate(<Self as std::clone::Clone>), []), /home/ae1020/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:108:1: 108:23 (#0))] }', /rustc/42816d61ead7e46d462df997958ccfd514f8c21c/compiler/rustc_query_system/src/query/plumbing.rs:593:5\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n   0: rust_begin_unwind\r\n             at /rustc/42816d61ead7e46d462df997958ccfd514f8c21c/library/std/src/panicking.rs:493:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/42816d61ead7e46d462df997958ccfd514f8c21c/library/core/src/panicking.rs:92:14\r\n   2: core::panicking::assert_failed_inner\r\n   3: core::panicking::assert_failed\r\n   4: rustc_query_system::query::plumbing::incremental_verify_ich\r\n   5: rustc_query_system::query::plumbing::load_from_disk_and_cache_in_memory\r\n   6: rustc_query_system::query::plumbing::get_query_impl\r\n   7: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::predicates_of\r\n   8: rustc_trait_selection::traits::wf::WfPredicates::nominal_obligations\r\n   9: rustc_trait_selection::traits::wf::WfPredicates::compute_trait_ref\r\n  10: rustc_trait_selection::traits::wf::trait_obligations\r\n  11: rustc_infer::infer::InferCtxtBuilder::enter\r\n  12: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  13: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  14: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  15: rustc_query_system::query::plumbing::force_query_with_job\r\n  16: rustc_query_system::query::plumbing::get_query_impl\r\n  17: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::check_item_well_formed\r\n  18: <rustc_typeck::check::wfcheck::CheckTypeWellFormedVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  19: rustc_data_structures::sync::par_for_each_in\r\n  20: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  21: rustc_session::session::Session::track_errors\r\n  22: rustc_typeck::check_crate\r\n  23: rustc_interface::passes::analysis\r\n  24: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  25: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  26: rustc_data_structures::stack::ensure_sufficient_stack\r\n  27: rustc_query_system::query::plumbing::force_query_with_job\r\n  28: rustc_query_system::query::plumbing::get_query_impl\r\n  29: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  30: rustc_interface::passes::QueryContext::enter\r\n  31: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  32: rustc_span::with_source_map\r\n  33: rustc_interface::interface::create_compiler_and_run\r\n  34: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>", "closed_by": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84735/timeline", "performed_via_github_app": null, "state_reason": "completed"}