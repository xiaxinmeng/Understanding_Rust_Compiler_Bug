{"url": "https://api.github.com/repos/rust-lang/rust/issues/80694", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80694/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80694/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80694/events", "html_url": "https://github.com/rust-lang/rust/issues/80694", "id": 778234080, "node_id": "MDU6SXNzdWU3NzgyMzQwODA=", "number": 80694, "title": "Name collision for unit struct for different crate bad error", "user": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-01-04T17:06:54Z", "updated_at": "2021-01-04T17:06:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code: (change the `src/bin/init.rs` from https://github.com/pickfire/diesel-multi-join-play)\r\n\r\n```rust\r\nfn main() {\r\n    use hello::models::*;\r\n    use hello::schema::users::dsl::*;\r\n\r\n    let users = vec![NewUser { name: \"John\" }, NewUser { name: \"Jane\" }];\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n\r\nI wanted to make a minimal reproduction for this issue but I see a better error message which it should be like that. So here is the minimal reproduction code that works.\r\n\r\n```rust\r\n#[macro_use]\r\nextern crate diesel;\r\n\r\nmod schema {\r\n    table! {\r\n        users (id) {\r\n            id -> Integer,\r\n            name -> Text,\r\n        }\r\n    }\r\n}\r\n\r\nuse schema::users;\r\n\r\n#[derive(Insertable, Debug)]\r\n#[table_name = \"users\"]\r\npub struct NewUser<'a> {\r\n    pub name: &'a str,\r\n}\r\n\r\nfn t() {\r\n    use schema::users::dsl::*;\r\n\r\n    let users = vec![NewUser { name: \"John\" }, NewUser { name: \"Jane\" }];\r\n}\r\n```\r\n\r\n```rust\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:24:9\r\n   |\r\n5  | /     table! {\r\n6  | |         users (id) {\r\n7  | |             id -> Integer,\r\n8  | |             name -> Text,\r\n9  | |         }\r\n10 | |     }\r\n   | |_____- unit struct defined here\r\n...\r\n24 |       let users = vec![NewUser { name: \"John\" }, NewUser { name: \"Jane\" }];\r\n   |           ^^^^^   -------------------------------------------------------- this expression has type `Vec<NewUser<'_>>`\r\n   |           |\r\n   |           expected struct `Vec`, found struct `table`\r\n   |           `users` is interpreted as a unit struct, not a new binding\r\n   |           help: introduce a new binding instead: `other_users`\r\n   |\r\n   = note: expected struct `Vec<NewUser<'_>>`\r\n              found struct `table`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `hello`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nInstead, this happened (on the first code that I showed):\r\n\r\n```rust\r\n --> src/bin/init.rs:5:9\r\n  |\r\n5 |     let users = vec![NewUser { name: \"John\" }, NewUser { name: \"Jane\" }];\r\n  |         ^^^^^   -------------------------------------------------------- this expression has type `Vec<hello::models::NewUser<'_>>`\r\n  |         |\r\n  |         expected struct `Vec`, found struct `hello::schema::users::table`\r\n  |\r\n  = note: expected struct `Vec<hello::models::NewUser<'_>>`\r\n             found struct `hello::schema::users::table`\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `hello`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\nMy guess is that a different error is being shown for unit struct for different crate since I didn't get to reproduce it within a single file.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.49.0 (e1884a8e3 2020-12-29)\r\nbinary: rustc\r\ncommit-hash: e1884a8e3c3e813aada8254edfa120e85bf5ffca\r\ncommit-date: 2020-12-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.49.0\r\n```\r\n\r\nDiscussed in https://github.com/diesel-rs/diesel/issues/151#issuecomment-753959576", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80694/timeline", "performed_via_github_app": null, "state_reason": null}