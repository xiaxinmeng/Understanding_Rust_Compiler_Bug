{"url": "https://api.github.com/repos/rust-lang/rust/issues/109006", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109006/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109006/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109006/events", "html_url": "https://github.com/rust-lang/rust/issues/109006", "id": 1619673857, "node_id": "I_kwDOAAsO6M5gikMB", "number": 109006, "title": "I found a beautiful gem of the most hideous code in the stdlib I've ever seen... and I cannot fully seem to justify it.", "user": {"login": "T-O-R-U-S", "id": 23533781, "node_id": "MDQ6VXNlcjIzNTMzNzgx", "avatar_url": "https://avatars.githubusercontent.com/u/23533781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-O-R-U-S", "html_url": "https://github.com/T-O-R-U-S", "followers_url": "https://api.github.com/users/T-O-R-U-S/followers", "following_url": "https://api.github.com/users/T-O-R-U-S/following{/other_user}", "gists_url": "https://api.github.com/users/T-O-R-U-S/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-O-R-U-S/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-O-R-U-S/subscriptions", "organizations_url": "https://api.github.com/users/T-O-R-U-S/orgs", "repos_url": "https://api.github.com/users/T-O-R-U-S/repos", "events_url": "https://api.github.com/users/T-O-R-U-S/events{/privacy}", "received_events_url": "https://api.github.com/users/T-O-R-U-S/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-03-10T22:01:06Z", "updated_at": "2023-03-10T23:51:54Z", "closed_at": "2023-03-10T23:51:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was meandering through the Rust library source code when I stumbled across this glorious gem:\r\n\r\n```rs\r\n// The Default impls cannot be done with const generics because `[T; 0]` doesn't\r\n// require Default to be implemented, and having different impl blocks for\r\n// different numbers isn't supported yet.\r\n\r\nmacro_rules! array_impl_default {\r\n    {$n:expr, $t:ident $($ts:ident)*} => {\r\n        #[stable(since = \"1.4.0\", feature = \"array_default\")]\r\n        #[rustc_const_unstable(feature = \"const_default_impls\", issue = \"87864\")]\r\n        impl<T> const Default for [T; $n] where T: ~const Default {\r\n            fn default() -> [T; $n] {\r\n                [$t::default(), $($ts::default()),*]\r\n            }\r\n        }\r\n        array_impl_default!{($n - 1), $($ts)*}\r\n    };\r\n    {$n:expr,} => {\r\n        #[stable(since = \"1.4.0\", feature = \"array_default\")]\r\n        #[rustc_const_unstable(feature = \"const_default_impls\", issue = \"87864\")]\r\n        impl<T> const Default for [T; $n] {\r\n            fn default() -> [T; $n] { [] }\r\n        }\r\n    };\r\n}\r\n\r\narray_impl_default! {32, T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T}\r\n```\r\n\r\nCan anyone please tell me what is so important about `[T; 0]`'s `Default` impl to the point that it warrants code as... well, I hate to say it but, *vile* and disgusting as this?\r\n\r\nI found this diamond in the rough when I noticed that `Default` was only implemented for `[T; N]` up to `[T; 32]`; I instantly assumed code repetition (for which I was sort of right, ugly macro), and swooped in to save the day with const generics... or so I thought??\r\n\r\nIs there a reason why `core::array::from_fn` cannot be simply be used? I personally do not believe that the performance benefit outweighs the flexibility and SEVERE code quality penalty. What are your thoughts, though?\r\n\r\nAnd if whoever happens to be reviewing this issue sides with me on the matter, then can I just go ahead and get rid of this demon?", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109006/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}