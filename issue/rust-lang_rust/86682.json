{"url": "https://api.github.com/repos/rust-lang/rust/issues/86682", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86682/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86682/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86682/events", "html_url": "https://github.com/rust-lang/rust/issues/86682", "id": 931113211, "node_id": "MDU6SXNzdWU5MzExMTMyMTE=", "number": 86682, "title": "Unstable methods can interfere with stable method calls which use auto-dereferencing", "user": {"login": "jturner314", "id": 1836850, "node_id": "MDQ6VXNlcjE4MzY4NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1836850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jturner314", "html_url": "https://github.com/jturner314", "followers_url": "https://api.github.com/users/jturner314/followers", "following_url": "https://api.github.com/users/jturner314/following{/other_user}", "gists_url": "https://api.github.com/users/jturner314/gists{/gist_id}", "starred_url": "https://api.github.com/users/jturner314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jturner314/subscriptions", "organizations_url": "https://api.github.com/users/jturner314/orgs", "repos_url": "https://api.github.com/users/jturner314/repos", "events_url": "https://api.github.com/users/jturner314/events{/privacy}", "received_events_url": "https://api.github.com/users/jturner314/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-06-28T02:47:44Z", "updated_at": "2021-06-28T04:56:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code:\r\n\r\n```rust\r\nuse std::ops::Range;\r\n\r\nfn main() {\r\n    let mut x: Range<usize> = 3..5;\r\n    let y: &mut Range<usize> = &mut x;\r\n    println!(\"{}\", y.is_empty());\r\n}\r\n```\r\n\r\n([Rust playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=34698fdfbff0ffe1f6ada0bd84a2d5fe))\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0658]: use of unstable library feature 'exact_size_is_empty'\r\n --> src/main.rs:6:22\r\n  |\r\n6 |     println!(\"{}\", y.is_empty());\r\n  |                      ^^^^^^^^\r\n  |\r\n  = note: see issue #35428 <https://github.com/rust-lang/rust/issues/35428> for more information\r\n```\r\n\r\nIdeally, the example will compile without errors, since auto-deref should result in a call to the stable [`Range::is_empty`](https://doc.rust-lang.org/std/ops/struct.Range.html#method.is_empty) method. Currently, the user has to work around the error by changing `y.is_empty()` to `(*y).is_empty()`.\r\n\r\nI suspect that the error is due to the following:\r\n\r\n- `&mut Range<usize>` implements `ExactSizeIterator` (via [`impl<'_, I> ExactSizeIterator for &'_ mut I`](https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html#impl-ExactSizeIterator-23) and [`impl ExactSizeIterator for Range<usize>`](https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html#impl-ExactSizeIterator-15))\r\n- `ExactSizeIterator` has an unstable [`is_empty`](https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html#method.is_empty) method.\r\n- So, the compiler sees that there is an *unstable* method named `is_empty` for `&mut Range<usize>` (via `ExactSizeIterator`), and as a result, it stops before finding the *stable* `Range::is_empty` method via auto-dereferencing.\r\n\r\nI'd suggest changing the compiler to continue checking for applicable methods (including via auto-dereferencing) even after finding an applicable *unstable* method, so that adding unstable methods to traits doesn't interfere with existing code. (I don't think it's a regression in this particular case, since I think `ExactSizeIterator::is_empty` was added before `Range::is_empty` was stabilized, but I could easily see this compiler behavior causing regressions for other additions of unstable methods to traits in the future.)\r\n\r\nThis error occurs on stable (1.53.0), beta (1.54.0-beta.1), and nightly (1.55.0-nightly), tested via the Rust Playground.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86682/timeline", "performed_via_github_app": null, "state_reason": null}