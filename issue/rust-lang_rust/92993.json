{"url": "https://api.github.com/repos/rust-lang/rust/issues/92993", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92993/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92993/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92993/events", "html_url": "https://github.com/rust-lang/rust/issues/92993", "id": 1105298105, "node_id": "I_kwDOAAsO6M5B4YK5", "number": 92993, "title": "memcpy-style copies of small fixed length arrays become memcpy, unless done via a loop with ops::Index", "user": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 3425147156, "node_id": "LA_kwDOAAsO6M7MJ5kU", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-array", "name": "A-array", "color": "f7e101", "default": false, "description": "Area: [T; N]"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-17T02:28:00Z", "updated_at": "2023-05-03T04:27:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[godbolt demo](https://godbolt.org/z/7s6K6E6hz)\r\n\r\nI have a `[u8; 4]` and I want to copy an unknown number of bytes from it into a `&mut [u8]`. Based on benchmarking, on x86_64 at least it is much slower to call `memcpy` than it is to do a byte-by-byte copy. The fastest implementation of this pattern in Rust is this:\r\n```rust\r\nif len > 4 {\r\n    core::hint::unreachable_unchecked();\r\n}\r\nfor i in 0..len {\r\n    *dst.get_unchecked_mut(i) = src[i];\r\n}\r\n```\r\nThat just doesn't seem right to me.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92993/timeline", "performed_via_github_app": null, "state_reason": null}