{"url": "https://api.github.com/repos/rust-lang/rust/issues/5585", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/5585/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/5585/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/5585/events", "html_url": "https://github.com/rust-lang/rust/issues/5585", "id": 12531384, "node_id": "MDU6SXNzdWUxMjUzMTM4NA==", "number": 5585, "title": "impl TotalEq/TotalOrd for floats with the standard (IEEE754) total ordering", "user": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-03-27T19:48:19Z", "updated_at": "2015-11-12T19:33:56Z", "closed_at": "2015-11-12T19:33:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This will be implemented via a wrapper type.\n\n```\nFor each supported arithmetic format, an implementation shall provide the following predicate that defines\nan ordering among all operands in a particular format:\n\n    \u2015 boolean totalOrder(source, source)\n\ntotalOrder(x, y) imposes a total ordering on canonical members of the format of x and y:\n    a) If x < y, totalOrder(x, y) is true.\n    b) If x > y, totalOrder(x, y) is false.\n    c) If x = y:\n        1) totalOrder(\u22120, +0) is true.\n        2) totalOrder(+0, \u22120) is false.\n        3) If x and y represent the same floating-point datum:\n            i) If x and y have negative sign,\n            totalOrder(x, y) is true if and only if the exponent of x \u2265 the exponent of y\n            ii) otherwise\n            totalOrder(x, y) is true if and only if the exponent of x \u2264 the exponent of y.\n    d) If x and y are unordered numerically because x or y is NaN:\n        1) totalOrder(\u2212NaN, y) is true where \u2212NaN represents a NaN with negative sign bit and y is a\n        floating-point number.\n        2) totalOrder(x, +NaN) is true where +NaN represents a NaN with positive sign bit and x is a\n        floating-point number.\n        3) If x and y are both NaNs, then totalOrder reflects a total ordering based on:\n            i) negative sign orders below positive sign\n            ii) signaling orders below quiet for +NaN, reverse for \u2212NaN\n            iii) lesser payload, when regarded as an integer, orders below greater payload for +NaN,\n            reverse for \u2212NaN.\n\nNeither signaling NaNs nor quiet NaNs signal an exception. For canonical x and y, totalOrder(x, y) and\ntotalOrder( y, x) are both true if x and y are bitwise identical.\n\nNOTE \u2014 totalOrder does not impose a total ordering on all encodings in a format. In particular, it does not\ndistinguish among different encodings of the same floating-point representation, as when one or both\nencodings are non-canonical.\n```\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/5585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/5585/timeline", "performed_via_github_app": null, "state_reason": "completed"}