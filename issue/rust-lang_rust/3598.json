{"url": "https://api.github.com/repos/rust-lang/rust/issues/3598", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3598/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3598/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3598/events", "html_url": "https://github.com/rust-lang/rust/issues/3598", "id": 7158757, "node_id": "MDU6SXNzdWU3MTU4NzU3", "number": 3598, "title": "infer or permit declarations of variance for type parameters", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2012-09-26T18:51:19Z", "updated_at": "2014-09-27T21:43:53Z", "closed_at": "2014-09-24T04:58:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### UPDATE\n\nVariance inference is complete.\n\nWhat is still missing is:\n- applying results of variance inference to type parameters -- this is an **expressiveness issue**\n- applying results of variance inference to trait matching (#5781) -- this is a **soundness issue**\n### ORIGINAL\n\nToday, we treat all type parameters as invariant, but infer variance for region parameters.  We can use that same code which infers the variance for region parameters to infer the suitable variance for type parameters if we like.\n\nAlternatively, if we decide that inference here is too magical, we could require explicit declaration of variance.  In that case, i'd favor covariance as the default, and the possibility to write `struct Foo<mut T>` to indicate an invariant type parameter `T` (which can appear in mutable locations).  This seems more intuitive than the usual `+` and `-`.  We probably don't need a notation for contravariance, but in that case perhaps `fn T` (to indicate a type parameter that appears only in function arguments, far and away the most common place to have a contravariant type parameter).\n\nStill, I think I favor inference.  It's inline with what we do for regions and I think it will basically match up with user expectations.\n", "closed_by": {"login": "rust-highfive", "id": 7378925, "node_id": "MDQ6VXNlcjczNzg5MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7378925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rust-highfive", "html_url": "https://github.com/rust-highfive", "followers_url": "https://api.github.com/users/rust-highfive/followers", "following_url": "https://api.github.com/users/rust-highfive/following{/other_user}", "gists_url": "https://api.github.com/users/rust-highfive/gists{/gist_id}", "starred_url": "https://api.github.com/users/rust-highfive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rust-highfive/subscriptions", "organizations_url": "https://api.github.com/users/rust-highfive/orgs", "repos_url": "https://api.github.com/users/rust-highfive/repos", "events_url": "https://api.github.com/users/rust-highfive/events{/privacy}", "received_events_url": "https://api.github.com/users/rust-highfive/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3598/timeline", "performed_via_github_app": null, "state_reason": "completed"}