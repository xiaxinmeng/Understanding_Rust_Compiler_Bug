{"url": "https://api.github.com/repos/rust-lang/rust/issues/18759", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/18759/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/18759/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/18759/events", "html_url": "https://github.com/rust-lang/rust/issues/18759", "id": 48153553, "node_id": "MDU6SXNzdWU0ODE1MzU1Mw==", "number": 18759, "title": "Lifetime error messages should have better spans", "user": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-08T03:13:06Z", "updated_at": "2023-05-23T11:43:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This error has an arrow pointing where the lifetime issue is (though I don't know why it isn't more precise):\n\n``` rust\nstruct Mine<'a> { s: &'a str }\n\nimpl <'a>Iterator<&'a str> for Mine<'a> {\n    fn next(&mut self) -> Option<&str> { Some(\"h\") }\n}\n\nfn main() {}\n```\n\n```\n<anon>:4:5: 4:53 error: method `next` has an incompatible type for trait: expected concrete lifetime, found bound lifetime parameter  [E0053]\n<anon>:4     fn next(&mut self) -> Option<&str> { Some(\"h\") }\n             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n<anon>:4:40: 4:53 note: expected concrete lifetime is the lifetime 'a as defined on the block at 4:39\n<anon>:4     fn next(&mut self) -> Option<&str> { Some(\"h\") }\n                                                ^~~~~~~~~~~~~\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n```\n\n---\n\nThis won't because `next()` is multiline:\n\n``` rust\nstruct Mine<'a> { s: &'a str }\n\nimpl <'a>Iterator<&'a str> for Mine<'a> {\n    fn next(&mut self) -> Option<&str> {\n        Some(\"h\")\n    }\n}\n\nfn main() {}\n```\n\n```\n<anon>:4:5: 6:6 error: method `next` has an incompatible type for trait: expected concrete lifetime, found bound lifetime parameter  [E0053]\n<anon>:4     fn next(&mut self) -> Option<&str> {\n<anon>:5         Some(\"h\")\n<anon>:6     }\n<anon>:4:40: 6:6 note: expected concrete lifetime is the lifetime 'a as defined on the block at 4:39\n<anon>:4     fn next(&mut self) -> Option<&str> {\n<anon>:5         Some(\"h\")\n<anon>:6     }\nerror: aborting due to previous error\nplaypen: application terminated with error code 101\n```\n\n---\n\nBest would be: \n\n```\n<anon>:4:40: 4:53 note: expected concrete lifetime is the lifetime 'a as defined on the block at 4:39\n<anon>:4     fn next(&mut self) -> Option<&str> { Some(\"h\") }\n                                           ^~~~~~~~~~~~~\n```\n\nSomeone might easily put the lifetime on `next(&'a self)` instead of `Option<&'a str>` because it didn't point and they didn't understand the message.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/18759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/18759/timeline", "performed_via_github_app": null, "state_reason": null}