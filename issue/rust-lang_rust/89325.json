{"url": "https://api.github.com/repos/rust-lang/rust/issues/89325", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89325/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89325/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89325/events", "html_url": "https://github.com/rust-lang/rust/issues/89325", "id": 1009909183, "node_id": "I_kwDOAAsO6M48Mf2_", "number": 89325, "title": "Diagnostics in FFI use recommend users to cast to i/u8 instead of the appropriate c_char", "user": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-28T15:35:59Z", "updated_at": "2023-05-16T08:10:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\nNote: related to the lint described in https://github.com/rust-lang/rust/issues/79089\r\n\r\nGiven the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=e4aed9f0b25f39886e30db193cf508e2\r\n\r\n```rust\r\nuse libc::c_char;\r\n\r\nfn fun(c: c_char) {\r\n    \r\n}\r\n\r\nfn main() {\r\n    let x: u8 = 3;\r\n    \r\n    fun(x)\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:10:9\r\n   |\r\n10 |     fun(x)\r\n   |         ^ expected `i8`, found `u8`\r\n   |\r\nhelp: you can convert a `u8` to an `i8` and panic if the converted value doesn't fit\r\n   |\r\n10 |     fun(x.try_into().unwrap())\r\n   |         ^^^^^^^^^^^^^^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:10:9\r\n   |\r\n10 |     fun(x)\r\n   |         ^ expected `i8`, found `u8`\r\n   |\r\nhelp: you can convert a `u8` to an `c_char` and panic if the converted value doesn't fit\r\n   |\r\n10 |     fun(x.try_into().unwrap())\r\n   |         ^^^^^^^^^^^^^^^^^^^^^\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\n`c_char` is different on platforms, it may be `u8` or `i8`. The correct cast here in FFI use is towards a `c_char`, keeping casts correct in all situations. There's also an argument to be made that i8 -> c_char should be using an `as` cast.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89325/timeline", "performed_via_github_app": null, "state_reason": null}