{"url": "https://api.github.com/repos/rust-lang/rust/issues/44716", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44716/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44716/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44716/events", "html_url": "https://github.com/rust-lang/rust/issues/44716", "id": 259127405, "node_id": "MDU6SXNzdWUyNTkxMjc0MDU=", "number": 44716, "title": "Tracking Issue for incr. comp. red/green testing", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 693665681, "node_id": "MDU6TGFiZWw2OTM2NjU2ODE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-incr-comp", "name": "WG-incr-comp", "color": "c2e0c6", "default": false, "description": "Working group: incremental compilation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-20T11:16:56Z", "updated_at": "2017-12-07T09:56:29Z", "closed_at": "2017-12-07T09:56:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We already have [quite a bit of testing](https://github.com/rust-lang/rust/issues/36350) in place for incremental compilation but some of it needs to be adapted to the [new red/green change tracking system](https://github.com/rust-lang/rust/issues/42293). This issue will track the needed changes and the progress we make on them.\r\n\r\n### Incremental Compilation Testing Strategy\r\nWe use four major kinds of tests in order to keep regressions at bay:\r\n1. Synthetic end-to-end tests which are small, synthetic test cases that -- given a certain change to the source code -- test that the expected set of object files gets re-compiled. These tests use the `#![rustc_partition_reused]`/`#![rustc_partition_translated]` attributes and are located in [src/test/incremental](https://github.com/rust-lang/rust/tree/master/src/test/incremental).\r\n2. Synthetic tests of input and intermediate-result fingerprints. The incr. comp. system computes fingerprints (hashes) of various things and then uses these fingerprints to check if something has changed in comparison to the previous compilation session. The test cases in [src/test/incremental/hashes](https://github.com/rust-lang/rust/tree/master/src/test/incremental/hashes) test, at a fine-grained level, that various changes in the source code lead to changed fingerprints of various intermediate results. They use the `#[rustc_clean]`/`#[rustc_dirty]` attributes to indicate which things are expected to have changed and which are not. https://github.com/rust-lang/rust/issues/36674 is an example issue with a description of how these tests work.\r\n3. Synthetic dependency graph based tests. These tests check that certain paths exist or do not exist in the dependency graph. The dependency graph records which values had to be accessed (transitively) in order to compute a certain value during the compilation process. By checking for expected and unexpected paths we can make sure that dependency tracking doesn't miss anything (=anything that we actively test for) and that the compiler doesn't unnecessarily access data it doesn't need (which leads to unnecessary cache invalidation). These tests use the `#[rustc_if_this_changed]`/`#[rustc_then_this_would_need]` and located in [src/test/compile-fail](https://github.com/rust-lang/rust/tree/master/src/test/compile-fail)\r\n4. Real-world test cases that take code bases of existing Rust projects, replay their git history, compile each commit and at every step make sure the compiling with and without incr-comp-cache produces the same binaries. These tests are based on the [cargo-incremental tool](https://github.com/nikomatsakis/cargo-incremental) and can be found at https://github.com/rust-icci and https://travis-ci.org/rust-icci. They have proven to be very useful for finding holes in the tracking system that are not covered by any of the synthetic test cases yet.\r\n\r\n### Changes Needed for Red/Green \r\nMost of the test cases can stay the same also with the new tracking system:\r\n* The synthetic end-to-end tests still make sense and are expected to be updated as part of the regular implementation. \r\n* The synthetic dependency graph based tests can stay as they are. The new tracking system still uses a dependency graph underneath and that dependency graph has the same semantics as in the old system.\r\n* The real-world test cases are black-box tests and are not affected by compiler internals.\r\n\r\nThere are some things, however, that should be extended and improved for the red/green system:\r\n* In the old tracking system, we only had fingerprints for the HIR/AST nodes which represent the \"input\" to the compilation pipeline. With the red/green system we compute fingerprints of almost all intermediate results the compiler produces. The tests in [src/test/incremental/hashes](https://github.com/rust-lang/rust/tree/master/src/test/incremental/hashes) should therefore be updated to:\r\n   * test many more intermediate results, and \r\n   * be adapted to be based on actual fingerprints instead of on presence of dependency graph nodes after invalidation.\r\n* In the final red/green system fingerprints for some \"green\" nodes will not be re-computed as they can just be copied from the previous session. It would make sense to implement a special compiler mode that *does* recompute the fingerprint of such nodes and asserts that the recomputed fingerprint is the same as the one from the previous compilation.\r\n\r\n### Action Items\r\n- [x] Change [src/test/incremental/hashes](https://github.com/rust-lang/rust/tree/master/src/test/incremental/hashes) tests to being genuinely fingerprint-based once https://github.com/rust-lang/rust/issues/44702 and https://github.com/rust-lang/rust/pull/44772 are resolved/merged. \r\n**UPDATE: This bullet point is completely implemented once https://github.com/rust-lang/rust/pull/44901 has landed.**\r\n **UPDATE 2: I just verified that the current master branch already contains all needed functionality.**\r\n- [x] Adapt the tests in [src/test/incremental/hashes](https://github.com/rust-lang/rust/tree/master/src/test/incremental/hashes) to check additional fingerprints. The main issue for this is #44924. This is ready to tackle.\r\n- [x] Implement a \"validate all fingerprints\" compiler mode that validates fingerprints loaded from the previous session (implemented in https://github.com/rust-lang/rust/pull/45867).\r\n\r\nPlease leave comments below if you think something's missing or if you have any remarks!\r\n\r\ncc @nikomatsakis @vitiral", "closed_by": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44716/reactions", "total_count": 4, "+1": 0, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 3, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44716/timeline", "performed_via_github_app": null, "state_reason": "completed"}