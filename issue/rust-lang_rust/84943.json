{"url": "https://api.github.com/repos/rust-lang/rust/issues/84943", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84943/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84943/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84943/events", "html_url": "https://github.com/rust-lang/rust/issues/84943", "id": 876137737, "node_id": "MDU6SXNzdWU4NzYxMzc3Mzc=", "number": 84943, "title": "Support instrumenting only selected files or functions with -Z instrument-coverage", "user": {"login": "petrhosek", "id": 283696, "node_id": "MDQ6VXNlcjI4MzY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2483744621, "node_id": "MDU6TGFiZWwyNDgzNzQ0NjIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-code-coverage", "name": "A-code-coverage", "color": "f7e101", "default": false, "description": "Area: Source-based code coverage (-Cinstrument-coverage)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-05-05T07:13:54Z", "updated_at": "2021-05-05T08:01:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sometimes it\u2019s useful to only instrument certain files or functions. For example in automated testing infrastructure, it may be desirable to only instrument files or functions that were modified by a patch to reduce the overhead of instrumenting a full system.\r\n\r\nClang supports this via [the `-fprofile-list==<pathname>` option](https://clang.llvm.org/docs/UsersManual.html#instrumenting-only-selected-files-or-functions) where the argument is a file in the [Sanitizer special case list](https://clang.llvm.org/docs/SanitizerSpecialCaseList.html) format which selects which files and functions to instrument. At the IR level, for any function that's _not_ instrumented, Clang attaches the `noprofile` attribute.\r\n\r\nIt'd be useful if Rust supported the same option. It'd be also nice if Rust could use the same file format but it's not strictly necessary.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84943/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84943/timeline", "performed_via_github_app": null, "state_reason": null}