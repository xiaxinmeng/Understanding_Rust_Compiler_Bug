{"url": "https://api.github.com/repos/rust-lang/rust/issues/51429", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51429/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51429/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51429/events", "html_url": "https://github.com/rust-lang/rust/issues/51429", "id": 330527728, "node_id": "MDU6SXNzdWUzMzA1Mjc3Mjg=", "number": 51429, "title": "Trivial safe AsRef<OsStr> implementation leads to stack overflow in Debug (and maybe memory leaking in Release)", "user": {"login": "jansegre", "id": 729870, "node_id": "MDQ6VXNlcjcyOTg3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/729870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jansegre", "html_url": "https://github.com/jansegre", "followers_url": "https://api.github.com/users/jansegre/followers", "following_url": "https://api.github.com/users/jansegre/following{/other_user}", "gists_url": "https://api.github.com/users/jansegre/gists{/gist_id}", "starred_url": "https://api.github.com/users/jansegre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jansegre/subscriptions", "organizations_url": "https://api.github.com/users/jansegre/orgs", "repos_url": "https://api.github.com/users/jansegre/repos", "events_url": "https://api.github.com/users/jansegre/events{/privacy}", "received_events_url": "https://api.github.com/users/jansegre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-08T05:49:38Z", "updated_at": "2019-01-28T00:38:13Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "[Example:](https://play.rust-lang.org/?gist=615ba34164ed903fdcfe52db371f1871)\r\n\r\n```rust\r\nuse std::ffi::OsStr;\r\nuse std::convert::AsRef;\r\n\r\nstruct A;\r\n\r\nimpl AsRef<OsStr> for A {\r\n    fn as_ref(&self) -> &OsStr {\r\n        OsStr::new(self)\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"{:?}\", A.as_ref());\r\n}\r\n```\r\n\r\nOutcome in (Stable|Beta|Nightly)+Debug:\r\n```\r\nStandard Error\r\n\r\n   Compiling playground v0.0.1 (file:///playground)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.92 secs\r\n     Running `target/debug/playground`\r\n\r\nthread 'main' has overflowed its stack\r\nfatal runtime error: stack overflow\r\ntimeout: the monitored command dumped core\r\n/root/entrypoint.sh: line 7:     5 Aborted                 timeout --signal=KILL ${timeout} \"$@\"\r\n```\r\n\r\nOutcome in Stable+Release:\r\n```\r\nStandard Error\r\n\r\n   Compiling playground v0.0.1 (file:///playground)\r\n    Finished release [optimized] target(s) in 0.87 secs\r\n     Running `target/release/playground`\r\ntimeout: the monitored command dumped core\r\n/root/entrypoint.sh: line 7:     5 Segmentation fault      timeout --signal=KILL ${timeout} \"$@\"\r\n\r\nStandard Output\r\n\r\n\"\\u{1}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}0Q(\\xFC\\u{7f}\\u{0}\\u{0}\\u{0}@Q(\\xFC\\u{7f}\\u{0}\\u{0}\\u{0}@\\x82%\\xA8\\u{7f}\\u{0}\\u{0}\\u{2}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\xB0\\xC1\\\\\\u{c}\\xA1U\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\xC0\\xB3a\\u{c}\\xA1U\\u{0}\\u{0}\\xC4\\xC3\\\\\\u{c}\\xA1U\\u{0}\\u{0}0\\xC3\\\\\\u{c}\\xA1U\\u{0}\\u{0}0\\u{8}\\xC9%\\xA8\\u{7f}\\u{0}\\u{0}p \\xD1(\\xFC\\u{7f}\\u{0}\\u{0}(!\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}t \\xD1(\\u{1}\\u{0}\\u{0}\\u{0}\\xA0\\xC3\\\\\\u{c}\\xA1U\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}r\\xE2\\xA1?\\xEB\\xADw\\xC1\\xB0\\xC1\\\\\\u{c}\\xA1U\\u{0}\\u{0} !\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}r\\xE2\\x81\\u{18}\\x8A\\xE4\u0355r\\xE2\\xF1W\\xBA\\xFEe\\x95\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}8!\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}h\\u{1}\\xAA&\\xA8\\u{7f}\\u{0}\\u{0}\u02d7\\x88&\\xA8\\u{7f}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\xB0\\xC1\\\\\\u{c}\\xA1U\\u{0}\\u{0} !\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\xD9\\xC1\\\\\\u{c}\\xA1U\\u{0}\\u{0}\\u{18}!\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\u{1c}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{1}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0},;\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}F;\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\x8F;\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xA7;\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xC6;\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xEC;\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\u{3}<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\u{17}<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}1<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}I<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}c<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}}<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\x97<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xAE<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xB9<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xCF<\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}x>\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xDC>\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xF2>\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\u{2}?\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\u{1c}?\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}M?\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}d?\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}l?\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\x8C?\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xC1?\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\xCB?\\xD1(\\xFC\\u{7f}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}!\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\xB0\\xD8(\\xFC\\u{7f}\\u{0}\\u{0}\\u{10}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\xFF\\xFB\\x8B\\u{17}\\u{0}\\u{0}\\u{0}\\u{0}\\u{6}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{10}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{11}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}d\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{3}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}@P\\\\\\u{c}\\xA1U\\u{0}\\u{0}\\u{4}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}8\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{5}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\n\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{7}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\x90\\x87&\\xA8\\u{7f}\\u{0}\\u{0}\\u{8}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\t\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\xB0\\xC1\\\\\\u{c}\\xA1U\\u{0}\\u{0}\\u{b}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{c}\\u{0}\\u{0}\\u{0}\\u\r\n```\r\n\r\nOutcome in (Beta|Nightly)+Release:\r\n```\r\nStandard Error\r\n\r\n   Compiling playground v0.0.1 (file:///playground)\r\n    Finished release [optimized] target(s) in 1.22s\r\n     Running `target/release/playground`\r\n\r\nStandard Output\r\n\r\n\"\\u{1}\"\r\n```\r\n\r\nThis may be related ([from the std](https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#473-475)):\r\n```rust\r\nimpl OsStr {\r\n    //...\r\n    pub fn new<S: AsRef<OsStr> + ?Sized>(s: &S) -> &OsStr {\r\n        s.as_ref()\r\n    }\r\n    //...\r\n}\r\n```\r\n\r\nMy initial impression was that my type implemented `AsRef<str>` and because `str` implmenents `AsRef<OsStr>` my implementation of `AsRef<OsStr>` would have used. After the first few crashes I realised that my implementation of `AsRef<OsStr>` calls itself recursively.\r\n\r\nThe broader issue I see is: because the implementation of `AsRef<OsStr>` is enough to be able to implement `AsRef<OsStr>`, this kind of implementation is possible.\r\n\r\nI think the compiler should at least warn against this.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51429/timeline", "performed_via_github_app": null, "state_reason": null}