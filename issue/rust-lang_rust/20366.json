{"url": "https://api.github.com/repos/rust-lang/rust/issues/20366", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/20366/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/20366/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/20366/events", "html_url": "https://github.com/rust-lang/rust/issues/20366", "id": 53172441, "node_id": "MDU6SXNzdWU1MzE3MjQ0MQ==", "number": 20366, "title": "Wrong error reporting for missing trait implementations", "user": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-31T07:57:30Z", "updated_at": "2017-05-31T18:45:39Z", "closed_at": "2017-05-31T18:45:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Arc's `Send` and `Sync` looks like:\n\n``` rust\n#[unsafe_no_drop_flag]\n#[stable]\npub struct Arc<T> {\n// FIXME #12808: strange name to try to avoid interfering with\n// field accesses of the contained type via Deref\n_ptr: NonZero<*mut ArcInner<T>>,\n}\n\nunsafe impl<T: Sync + Send> Send for Arc<T> { }\nunsafe impl<T: Sync + Send> Sync for Arc<T> { }\n```\n\nTherefore, the code below, makes the `Arc` object neither `Send` nor `Sync`. \n\n``` rust\nextern crate alloc;\n\nuse std::kinds::Send;\nuse alloc::arc::Arc;\n\nstruct Inner(*mut u8);\n\nunsafe impl Send for Inner {}\n\nfn is_send<T:Send>(s: T) {}\n\nfn main() {\n    let arc = Arc::new(Inner(0 as *mut u8));\n    is_send(arc);\n}\n```\n\nUnfortunately, the error reported is quite obscure, as it mentions that the `is_send` function requires `T` to be `Sync` which is not true.\n\n```\ntest.rs:14:5: 14:12 error: the trait `core::kinds::Sync` is not implemented for the type `*mut u8`\ntest.rs:14     is_send(arc);\n               ^~~~~~~\ntest.rs:14:5: 14:12 note: the type `*mut u8` must implement `core::kinds::Sync` because it appears within the type `Inner`\ntest.rs:14     is_send(arc);\n               ^~~~~~~\ntest.rs:14:5: 14:12 note: the trait `core::kinds::Sync` must be implemented because it is required by `is_send`\ntest.rs:14     is_send(arc);\n               ^~~~~~~\nerror: aborting due to previous error\n```\n\nIf we put the `Arc` in a wrapper type, then the error becomes even more obscure as it reports that `Send` is not being guaranteed because `Sync` is not implemented. Although this being true to some extent, it's not helpful at all:\n\n``` rust\nextern crate alloc;\n\nuse std::kinds::Send;\nuse alloc::arc::Arc;\n\nstruct Inner(*mut u8);\n\nunsafe impl Send for Inner {}\n\nstruct MyWrapper(Arc<Inner>);\n\nfn is_send<T:Send>(s: T) {}\n\nfn main() {\n    let arc = MyWrapper(Arc::new(Inner(0 as *mut u8)));\n    is_send(arc);\n}\n```\n\n```\ntest.rs:16:5: 16:12 error: the trait `core::kinds::Sync` is not implemented for the type `*mut u8`\ntest.rs:16     is_send(arc);\n               ^~~~~~~\ntest.rs:16:5: 16:12 note: the type `*mut u8` must implement `core::kinds::Sync` because it appears within the type `Inner`\ntest.rs:16     is_send(arc);\n               ^~~~~~~\ntest.rs:16:5: 16:12 note: the type `Inner` must implement `core::kinds::Sync` because it appears within the type `MyWrapper`\ntest.rs:16     is_send(arc);\n               ^~~~~~~\ntest.rs:16:5: 16:12 note: the trait `core::kinds::Send` must be implemented because it is required by `is_send`\ntest.rs:16     is_send(arc);\n               ^~~~~~~\nerror: aborting due to previous error\n```\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/20366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/20366/timeline", "performed_via_github_app": null, "state_reason": "completed"}