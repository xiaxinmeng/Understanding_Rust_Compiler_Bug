{"url": "https://api.github.com/repos/rust-lang/rust/issues/77450", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77450/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77450/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77450/events", "html_url": "https://github.com/rust-lang/rust/issues/77450", "id": 713583458, "node_id": "MDU6SXNzdWU3MTM1ODM0NTg=", "number": 77450, "title": "rustc hang when compiling cargo-outdated with thin-LTO", "user": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1168029555, "node_id": "MDU6TGFiZWwxMTY4MDI5NTU1", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-hang", "name": "I-hang", "color": "e10c02", "default": false, "description": "Issue: The compiler never terminates, due to infinite loops, deadlock, livelock, etc."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-10-02T12:27:27Z", "updated_at": "2020-10-02T13:22:24Z", "closed_at": "2020-10-02T13:22:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "rustc hang when compiling cargo-outdated with thin-LTO.\r\nThis is on x86-64 linux host.\r\n\r\ncargo-outdated commit: https://github.com/kbknapp/cargo-outdated/commit/34165416079209940a8894a0dd1812b9e747e601\r\n\r\n**How to reproduce**:\r\nFirst, change cargo-outdated `Cargo.toml` and add this:\r\n\r\n```toml\r\n[profile.release]\r\nlto = \"thin\"\r\ncodegen-units = 1\r\n```\r\n\r\nThen just run: `cargo build --release`\r\nProcess will hang when building `cargo` crate.\r\n\r\nI managed to get a backtrace with rust-lldb: by Ctrl-C when the process hang.\r\nI only paste the backtrace of thread2\r\nsince other threads just waiting for it:\r\n\r\n*The old backtrace doesn't correct*. \r\nI ran rust-lldb first and attach the hang thread, I got\r\n\r\n<details><summary>Backtrace</summary>\r\n\r\n```gdb\r\n* thread #5, name = 'rustc', stop reason = signal SIGSTOP\r\n  * frame #0: 0x00007fea83731461 libLLVM-11-rust-1.48.0-nightly.so`llvm::DataLayout::getAlignment(llvm::Type*, bool) const + 33\r\n    frame #1: 0x00007fea8492eef0 libLLVM-11-rust-1.48.0-nightly.so`llvm::BasicAAResult::DecomposeGEPExpression(llvm::Value const*, llvm::BasicAAResult::DecomposedGEP&, llvm::DataLayout const&, llvm::AssumptionCache*, llvm::DominatorTree*) + 1776\r\n    frame #2: 0x00007fea84933c3e libLLVM-11-rust-1.48.0-nightly.so`llvm::BasicAAResult::aliasGEP(llvm::GEPOperator const*, llvm::LocationSize, llvm::AAMDNodes const&, llvm::Value const*, llvm::LocationSize, llvm::AAMDNodes const&, llvm::Value const*, llvm::Value const*, llvm::AAQueryInfo&) + 1118\r\n    frame #3: 0x00007fea84931943 libLLVM-11-rust-1.48.0-nightly.so`llvm::BasicAAResult::aliasCheck(llvm::Value const*, llvm::LocationSize, llvm::AAMDNodes, llvm::Value const*, llvm::LocationSize, llvm::AAMDNodes, llvm::AAQueryInfo&, llvm::Value const*, llvm::Value const*) + 1971\r\n    frame #4: 0x00007fea8493106a libLLVM-11-rust-1.48.0-nightly.so`llvm::BasicAAResult::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&) + 458\r\n    frame #5: 0x00007fea84910ba2 libLLVM-11-rust-1.48.0-nightly.so`llvm::AAResults::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&) + 882\r\n    frame #6: 0x00007fea84911db0 libLLVM-11-rust-1.48.0-nightly.so`llvm::AAResults::getModRefInfo(llvm::CallBase const*, llvm::MemoryLocation const&, llvm::AAQueryInfo&) + 592\r\n    frame #7: 0x00007fea84912184 libLLVM-11-rust-1.48.0-nightly.so`llvm::AAResults::getModRefInfo(llvm::CallBase const*, llvm::MemoryLocation const&) + 820\r\n    frame #8: 0x00007fea849118df libLLVM-11-rust-1.48.0-nightly.so`llvm::AAResults::getModRefInfo(llvm::CallBase const*, llvm::CallBase const*, llvm::AAQueryInfo&) + 847\r\n    frame #9: 0x00007fea84912564 libLLVM-11-rust-1.48.0-nightly.so`llvm::AAResults::getModRefInfo(llvm::CallBase const*, llvm::CallBase const*) + 820\r\n    frame #10: 0x00007fea84a93349 libLLVM-11-rust-1.48.0-nightly.so`llvm::MemoryDependenceResults::getCallDependencyFrom(llvm::CallBase*, bool, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::BasicBlock*) + 633\r\n    frame #11: 0x00007fea84a94c27 libLLVM-11-rust-1.48.0-nightly.so`llvm::MemoryDependenceResults::getDependency(llvm::Instruction*) + 1047\r\n    frame #12: 0x00007fea844992f7 libLLVM-11-rust-1.48.0-nightly.so`eliminateDeadStores(llvm::Function&, llvm::AAResults*, llvm::MemoryDependenceResults*, llvm::DominatorTree*, llvm::TargetLibraryInfo const*) + 2711\r\n    frame #13: 0x00007fea837bfbe2 libLLVM-11-rust-1.48.0-nightly.so`llvm::FPPassManager::runOnFunction(llvm::Function&) + 1618\r\n    frame #14: 0x00007fea8497d1cb libLLVM-11-rust-1.48.0-nightly.so`(anonymous namespace)::CGPassManager::runOnModule(llvm::Module&) + 1275\r\n    frame #15: 0x00007fea837c063a libLLVM-11-rust-1.48.0-nightly.so`llvm::legacy::PassManagerImpl::run(llvm::Module&) + 1706\r\n    frame #16: 0x00007fea8372532a libLLVM-11-rust-1.48.0-nightly.so`LLVMRunPassManager + 10\r\n    frame #17: 0x00007fea87acd02e librustc_driver-6937495fc2a3c332.so`rustc_codegen_llvm::back::write::optimize::hfeccbf80964f8905 + 3294\r\n    frame #18: 0x00007fea87aac77b librustc_driver-6937495fc2a3c332.so`rustc_codegen_ssa::back::write::execute_work_item::h49949ce4e63d5aca + 427\r\n    frame #19: 0x00007fea8798e4ef librustc_driver-6937495fc2a3c332.so`std::sys_common::backtrace::__rust_begin_short_backtrace::h09e5e1bfb6108106 + 207\r\n    frame #20: 0x00007fea87a12435 librustc_driver-6937495fc2a3c332.so`core::ops::function::FnOnce::call_once$u7b$$u7b$vtable.shim$u7d$$u7d$::hf3172186a3026df7 + 101\r\n    frame #21: 0x00007fea86dbf7ba libstd-edfba68bd3501617.so`std::sys::unix::thread::Thread::new::thread_start::hd0f336b4ef6808a7 [inlined] _$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$::call_once::h1080dfe0ef616bdf at boxed.rs:1042:9\r\n    frame #22: 0x00007fea86dbf7b4 libstd-edfba68bd3501617.so`std::sys::unix::thread::Thread::new::thread_start::hd0f336b4ef6808a7 [inlined] _$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$::call_once::hd2747e1f2d5cec32 at boxed.rs:1042\r\n    frame #23: 0x00007fea86dbf7ab libstd-edfba68bd3501617.so`std::sys::unix::thread::Thread::new::thread_start::hd0f336b4ef6808a7 at thread.rs:87\r\n    frame #24: 0x00007fea86b024a4 libpthread.so.0`start_thread(arg=0x00007fea7d4ff700) at pthread_create.c:456\r\n    frame #25: 0x00007fea86640d0f libc.so.6`__clone at clone.S:97\r\n```\r\n</details>\r\n\r\nwhich means that it's not rustc hang, it's LLVM run really slowly.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.48.0-nightly (fc2daaae6 2020-09-28)\r\nbinary: rustc\r\ncommit-hash: fc2daaae610b5515438b551a2f3706196a997f35\r\ncommit-date: 2020-09-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n```\r\n", "closed_by": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77450/timeline", "performed_via_github_app": null, "state_reason": "completed"}