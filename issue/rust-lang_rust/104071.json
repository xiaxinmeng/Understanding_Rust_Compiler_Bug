{"url": "https://api.github.com/repos/rust-lang/rust/issues/104071", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104071/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104071/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104071/events", "html_url": "https://github.com/rust-lang/rust/issues/104071", "id": 1437548919, "node_id": "I_kwDOAAsO6M5Vr0F3", "number": 104071, "title": "Incorrect trait bounds suggestion with derive macros", "user": {"login": "Kixiron", "id": 25047011, "node_id": "MDQ6VXNlcjI1MDQ3MDEx", "avatar_url": "https://avatars.githubusercontent.com/u/25047011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixiron", "html_url": "https://github.com/Kixiron", "followers_url": "https://api.github.com/users/Kixiron/followers", "following_url": "https://api.github.com/users/Kixiron/following{/other_user}", "gists_url": "https://api.github.com/users/Kixiron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixiron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixiron/subscriptions", "organizations_url": "https://api.github.com/users/Kixiron/orgs", "repos_url": "https://api.github.com/users/Kixiron/repos", "events_url": "https://api.github.com/users/Kixiron/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixiron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}, {"id": 2079070889, "node_id": "MDU6TGFiZWwyMDc5MDcwODg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-proc-macros", "name": "A-proc-macros", "color": "f7e101", "default": false, "description": "Area: Procedural macros"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-06T21:38:19Z", "updated_at": "2022-11-08T01:59:44Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the following code:\r\n\r\n[Commit](https://github.com/Kixiron/database-stream-processor/blob/b3d2e819c69305f93c3eb174dcd5aaace76072fc/src/trace/ord/indexed_zset_batch.rs#L314)\r\n\r\nThe current output is:\r\n\r\n```\r\n \u03bb  cargo check\r\n    Checking dbsp v0.1.0 (G:\\Users\\Chase\\Code\\Rust\\database-stream-processor)\r\nerror[E0277]: the trait bound `R: Neg` is not satisfied\r\n   --> src\\trace\\ord\\indexed_zset_batch.rs:314:13\r\n    |\r\n314 |     result: <Layers<K, V, R, O> as Trie>::MergeBuilder,\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Neg` is not implemented for `R`\r\n    |\r\nnote: required for `R` to implement `IntoErasedDiff`\r\n   --> src\\trace\\layers\\erased\\vtable.rs:227:9\r\n    |\r\n227 | impl<T> IntoErasedDiff for T\r\n    |         ^^^^^^^^^^^^^^     ^\r\nnote: required for `TypedLayer<V, R>` to implement `Trie`\r\n   --> src\\trace\\layers\\erased\\mod.rs:306:12\r\n    |\r\n306 | impl<K, R> Trie for TypedLayer<K, R>\r\n    |            ^^^^     ^^^^^^^^^^^^^^^^\r\nhelp: consider further restricting this bound\r\n    |\r\n310 |     R: DBWeight + std::ops::Neg,\r\n    |                 +++++++++++++++\r\n\r\nerror[E0277]: the trait bound `for<'a> &'a R: Neg` is not satisfied\r\n   --> src\\trace\\ord\\indexed_zset_batch.rs:314:13\r\n    |\r\n314 |     result: <Layers<K, V, R, O> as Trie>::MergeBuilder,\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'a> Neg` is not implemented for `&'a R`\r\n    |\r\nnote: required for `R` to implement `NegByRef`\r\n   --> src\\algebra\\mod.rs:168:9\r\n    |\r\n168 | impl<T> NegByRef for T\r\n    |         ^^^^^^^^     ^\r\nnote: required for `R` to implement `IntoErasedDiff`\r\n   --> src\\trace\\layers\\erased\\vtable.rs:227:9\r\n    |\r\n227 | impl<T> IntoErasedDiff for T\r\n    |         ^^^^^^^^^^^^^^     ^\r\nnote: required for `TypedLayer<V, R>` to implement `Trie`\r\n   --> src\\trace\\layers\\erased\\mod.rs:306:12\r\n    |\r\n306 | impl<K, R> Trie for TypedLayer<K, R>\r\n    |            ^^^^     ^^^^^^^^^^^^^^^^\r\nhelp: consider extending the `where` clause, but there might be an alternative better way to express this requirement\r\n    |\r\n311 |     O: OrdOffset, &'a R: for<'a> Neg\r\n    |                 ~~~~~~~~~~~~~~~~~~~~\r\n\r\nerror[E0277]: the trait bound `R: Neg` is not satisfied\r\n   --> src\\trace\\ord\\indexed_zset_batch.rs:305:10\r\n    |\r\n305 | #[derive(SizeOf)]\r\n    |          ^^^^^^ the trait `Neg` is not implemented for `R`\r\n    |\r\nnote: required for `R` to implement `IntoErasedDiff`\r\n   --> src\\trace\\layers\\erased\\vtable.rs:227:9\r\n    |\r\n227 | impl<T> IntoErasedDiff for T\r\n    |         ^^^^^^^^^^^^^^     ^\r\nnote: required for `TypedLayer<V, R>` to implement `Trie`\r\n   --> src\\trace\\layers\\erased\\mod.rs:306:12\r\n    |\r\n306 | impl<K, R> Trie for TypedLayer<K, R>\r\n    |            ^^^^     ^^^^^^^^^^^^^^^^\r\n    = note: this error originates in the derive macro `SizeOf` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: consider further restricting this bound\r\n    |\r\n310 |     R: DBWeight + std::ops::Neg,\r\n    |                 +++++++++++++++\r\n\r\nerror[E0277]: the trait bound `for<'a> &'a R: Neg` is not satisfied\r\n   --> src\\trace\\ord\\indexed_zset_batch.rs:305:10\r\n    |\r\n305 | #[derive(SizeOf)]\r\n    |          ^^^^^^ the trait `for<'a> Neg` is not implemented for `&'a R`\r\n    |\r\nnote: required for `R` to implement `NegByRef`\r\n   --> src\\algebra\\mod.rs:168:9\r\n    |\r\n168 | impl<T> NegByRef for T\r\n    |         ^^^^^^^^     ^\r\nnote: required for `R` to implement `IntoErasedDiff`\r\n   --> src\\trace\\layers\\erased\\vtable.rs:227:9\r\n    |\r\n227 | impl<T> IntoErasedDiff for T\r\n    |         ^^^^^^^^^^^^^^     ^\r\nnote: required for `TypedLayer<V, R>` to implement `Trie`\r\n   --> src\\trace\\layers\\erased\\mod.rs:306:12\r\n    |\r\n306 | impl<K, R> Trie for TypedLayer<K, R>\r\n    |            ^^^^     ^^^^^^^^^^^^^^^^\r\n    = note: this error originates in the derive macro `SizeOf` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nhelp: consider extending the `where` clause, but there might be an alternative better way to express this requirement\r\n    |\r\n305 | #[derive(SizeOf, &'a R: for<'a> Neg)]\r\n    |                ++++++++++++++++++++\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `dbsp` due to 4 previous errors\r\n```\r\n\r\nWhich has some weird suggestions, mainly `#[derive(SizeOf, &'a R: for<'a> Neg)]`. Additionally, the \"alternative better way\" of \"but there might be an alternative better way to express this requirement\" is worded a little strangely, it's kind of a double positive\r\n\r\n```\r\n \u03bb  rustc -Vv\r\nrustc 1.66.0-nightly (7fcf850d7 2022-10-23)\r\nbinary: rustc\r\ncommit-hash: 7fcf850d7942804990a1d2e3fe036622a0fe4c74\r\ncommit-date: 2022-10-23\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.66.0-nightly\r\nLLVM version: 15.0.2\r\n```\r\n\r\n```\r\n \u03bb  cargo -Vv\r\ncargo 1.66.0-nightly (071eeaf21 2022-10-22)\r\nrelease: 1.66.0-nightly\r\ncommit-hash: 071eeaf210708219a5a1b2c4728ca2f97df7f2ae\r\ncommit-date: 2022-10-22\r\nhost: x86_64-pc-windows-msvc\r\nlibgit2: 1.5.0 (sys:0.15.0 vendored)\r\nlibcurl: 7.83.1-DEV (sys:0.4.55+curl-7.83.1 vendored ssl:Schannel)\r\nos: Windows 10.0.19044 (Windows 10 Home) [64-bit]\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104071/timeline", "performed_via_github_app": null, "state_reason": null}