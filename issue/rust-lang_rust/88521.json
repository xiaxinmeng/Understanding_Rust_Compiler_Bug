{"url": "https://api.github.com/repos/rust-lang/rust/issues/88521", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88521/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88521/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88521/events", "html_url": "https://github.com/rust-lang/rust/issues/88521", "id": 983334370, "node_id": "MDU6SXNzdWU5ODMzMzQzNzA=", "number": 88521, "title": "[DWARF] Crate Debug Info incomplete?", "user": {"login": "ayermolo", "id": 43973793, "node_id": "MDQ6VXNlcjQzOTczNzkz", "avatar_url": "https://avatars.githubusercontent.com/u/43973793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayermolo", "html_url": "https://github.com/ayermolo", "followers_url": "https://api.github.com/users/ayermolo/followers", "following_url": "https://api.github.com/users/ayermolo/following{/other_user}", "gists_url": "https://api.github.com/users/ayermolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayermolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayermolo/subscriptions", "organizations_url": "https://api.github.com/users/ayermolo/orgs", "repos_url": "https://api.github.com/users/ayermolo/repos", "events_url": "https://api.github.com/users/ayermolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ayermolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2021-08-31T01:00:19Z", "updated_at": "2021-12-18T21:16:45Z", "closed_at": "2021-12-18T21:16:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nTo preface this. I know nothing about RUST and its compiler. I am coming to this issue on toolchain side BOLT/DWP and dealing with debug information that is produced.\r\n\r\n### High level summary:\r\nI am seeing multiple Skeleton CUs that have exact same DWO ID. So for example with ThinLTO when Split dwarf is enabled in main binary there are multiple CUs that point to different .dwo files, but have the same DWO ID.\r\n\r\nLooking in to those files in to .debug_info.dwo section. They are either exactly the same, or differ by DW_AT_linkage_name.\r\nAlthough LLVM can be changed to include DW_AT_linkage_name as part of the hashing algorithm, it won't solve the issue fully.\r\n\r\nTools like BOLT (https://github.com/facebookincubator/BOLT), or llvm-dwp rely on DWO ID to be unique. \r\nFrom DWARF 5 spec (when this was all standardized), but I think also applies to DWARF4\r\n\r\n> dwo_id (unit ID)\r\n> An 8-byte implementation-defined integer constant value, known as the compilation unit ID, that provides unique identification of a skeleton compilation unit and its associated split compilation unit in the object file named in the DW_AT_dwo_name attribute of the skeleton compilation.\r\n\r\n### Digging a bit in to it:\r\nLooking in to one of the cases where only difference was DW_AT_linkage_name.\r\nThere are multiple modules, crates in rust land?, that are created. They define the same templated functions, and import the same functions.\r\n\r\nFor example looking at LLVM IR of one of the modules and one of the functions:\r\n\r\n> !74 = distinct !DISubprogram(name: \"allocate_in<u8,alloc::alloc::Global>\", linkageName: \"_RNvMs_NtCsj2IQpe5qjeI_5alloc7raw_vecINtB4_6RawVechE11allocate_inCs**g6LRvGNwJvd**_41**foo_bar**\", scope: !76, file: !75, line: 180, type: !96, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !43, templateParams: !94, retainedNodes: !98)\r\n> !75 = !DIFile(filename: \"<>/rust/1.53.0/src/<>/build/rust/library/alloc/src/raw_vec.rs\", directory: \"\", checksumkind: CSK_MD5, checksum: \"70792e0964fbcac42a3928c645b54f9d\")\r\n> !76 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: \"RawVec<u8, alloc::alloc::Global>\", scope: !53, file: !2, size: 128, align: 64, elements: !77, templateParams: !94, identifier: \"900af9eff81db06f40b139cda685ab1\")\r\n\r\nWe have a function:\r\nalloc_in that is part of templated raw_vec\r\nhttps://doc.rust-lang.org/src/alloc/raw_vec.rs.html#188\r\nhttps://doc.rust-lang.org/src/alloc/raw_vec.rs.html#115\r\n\r\nFrom LinkageName this is relavant?\r\n`pub mod bar {\r\n    pub use foo_bar::*;\r\n}`\r\n\r\nIn a different module it will have:\r\n> !74 = distinct !DISubprogram(name: \"allocate_in<u8,alloc::alloc::Global>\", linkageName: \"_RNvMs_NtCsj2IQpe5qjeI_5alloc7raw_vecINtB4_6RawVechE11allocate_inCs**kK341NkcZ13**_41**foo_bar2**\", scope: !76, file: !75, line: 180, type: !96, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !43, templateParams: !94, retainedNodes: !98)\r\n> !75 = !DIFile(filename: \"<>/rust/1.53.0/src/<>/build/rust/library/alloc/src/raw_vec.rs\", directory: \"\", checksumkind: CSK_MD5, checksum: \"70792e0964fbcac42a3928c645b54f9d\")\r\n> !76 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: \"RawVec<u8, alloc::alloc::Global>\", scope: !53, file: !2, size: 128, align: 64, elements: !77, templateParams: !94, identifier: \"900af9eff81db06f40b139cda685ab1\")\r\n\r\nand on rust side:\r\n`pub mod bar2 {\r\n    pub use foo_bar2::*;\r\n}`\r\n\r\nI haven't looked in to cases where debug information is identical, beyond that it didn't have any functions just type information {DW_TAG_namespace , DW_TAG_enumeration_type , DW_TAG_enumerator}.\r\n\r\nTo me it seems that there is debug information missing on some level that represents what crate this CU belongs.\r\nAny thoughts?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88521/timeline", "performed_via_github_app": null, "state_reason": "completed"}