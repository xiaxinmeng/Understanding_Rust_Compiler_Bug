{"url": "https://api.github.com/repos/rust-lang/rust/issues/41831", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/41831/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/41831/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/41831/events", "html_url": "https://github.com/rust-lang/rust/issues/41831", "id": 227131032, "node_id": "MDU6SXNzdWUyMjcxMzEwMzI=", "number": 41831, "title": "Boxed array initialisation with Box::new does not seem to optimise properly", "user": {"login": "oyvindln", "id": 8319210, "node_id": "MDQ6VXNlcjgzMTkyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8319210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oyvindln", "html_url": "https://github.com/oyvindln", "followers_url": "https://api.github.com/users/oyvindln/followers", "following_url": "https://api.github.com/users/oyvindln/following{/other_user}", "gists_url": "https://api.github.com/users/oyvindln/gists{/gist_id}", "starred_url": "https://api.github.com/users/oyvindln/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oyvindln/subscriptions", "organizations_url": "https://api.github.com/users/oyvindln/orgs", "repos_url": "https://api.github.com/users/oyvindln/repos", "events_url": "https://api.github.com/users/oyvindln/events{/privacy}", "received_events_url": "https://api.github.com/users/oyvindln/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-08T18:21:18Z", "updated_at": "2017-05-08T19:03:24Z", "closed_at": "2017-05-08T19:03:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One would expect that the compiler would be able to avoid putting a temporary array on the stack when creating a boxed array, at least in release mode. However this doesn't seem to be the case at the moment.\r\n\r\nLooking at [this example](https://play.rust-lang.org/?gist=1251a52617638d1b271a2166dc320325&version=nightly&backtrace=0) one would expect `Box::new([100;100])` to produce a similar assembly output to using the unstable `box` syntax or a `Vec`. The assembly output suggests that when `Box::new` is used, a temporary array is created, filled in, and then an array is allocated on the heap, which and the values from the stack array are copied over with memcpy. This is obviously very suboptimal compared to the alternatives, which allocate on and write the values directly to the heap. What makes it even more confusing is that the implementation of `Box::new` [consists purely of the line `box x`](https://github.com/rust-lang/rust/blob/master/src/liballoc/boxed.rs#L238).\r\n\r\nNow, in many situations, one could simply use `Vec` since it's more flexible anyhow. A boxed array does however seem to allow the compiler to use the size information to elude bounds checks in some cases where it can't with a Vec (e.g indexing an array larger than >255 with an `u8 as usize` ([example](https://gist.github.com/8d6f31cb1db0c8a9d567eeebfc20b985)). This means that it can be preferable in some situations, and the alternative would be potential slowdown, or having to use unsafe to index.", "closed_by": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/41831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/41831/timeline", "performed_via_github_app": null, "state_reason": "completed"}