{"url": "https://api.github.com/repos/rust-lang/rust/issues/93002", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93002/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93002/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93002/events", "html_url": "https://github.com/rust-lang/rust/issues/93002", "id": 1105852513, "node_id": "I_kwDOAAsO6M5B6fhh", "number": 93002, "title": "thread 'rustc' panicked at 'Box<dyn Any>'", "user": {"login": "nbittich", "id": 3816305, "node_id": "MDQ6VXNlcjM4MTYzMDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3816305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbittich", "html_url": "https://github.com/nbittich", "followers_url": "https://api.github.com/users/nbittich/followers", "following_url": "https://api.github.com/users/nbittich/following{/other_user}", "gists_url": "https://api.github.com/users/nbittich/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbittich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbittich/subscriptions", "organizations_url": "https://api.github.com/users/nbittich/orgs", "repos_url": "https://api.github.com/users/nbittich/repos", "events_url": "https://api.github.com/users/nbittich/events{/privacy}", "received_events_url": "https://api.github.com/users/nbittich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-01-17T13:23:00Z", "updated_at": "2022-08-30T09:44:29Z", "closed_at": "2022-08-30T09:44:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::{sync::{mpsc, Arc, Mutex}, thread, time::Duration, rc::Rc};\r\n\r\nfn main() {\r\n    let m = Mutex::new(String::from(\"hello\"));\r\n    let (tx, rx) = mpsc::channel();\r\n    let cl = tx.clone();\r\n    let cl2 = tx.clone();\r\n    thread::spawn(move || {\r\n        let mut i:i32 = 0;\r\n        let x = Arc::new(String::from(\"heyyy\"));\r\n        while cl\r\n            .send(Arc::new(String::from(format!(\r\n                \"hello! {:?}\",\r\n                std::time::SystemTime::now()\r\n            ))))\r\n            .is_ok()\r\n        {\r\n            i+=1;\r\n            cl.send(x.clone()).unwrap();\r\n            thread::sleep(Duration::from_secs(2));\r\n            let mut s = m.lock().unwrap();\r\n            *s = String::from(format!(\"change me! {i}\"));\r\n            println!(\"from thread & mutex: {x:?} / {s}\");\r\n        }\r\n    });\r\n    thread::spawn(move || {\r\n        while cl2.send(Arc::new(String::from(format!(\"here! {:?}\", std::time::SystemTime::now())))).is_ok(){\r\n            let mut x = &m.lock().unwrap();\r\n            &*x=String::from(\"i changed u\");\r\n            println!(\"from thread 2, mutex {x}\");\r\n            thread::sleep(Duration::from_secs(1));\r\n        }\r\n    });\r\n\r\n    loop {\r\n        match rx.try_recv() {\r\n            Ok(res) => println!(\"{res}\"),\r\n            Err(e) =>{\r\n            thread::sleep(Duration::from_millis(200));\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.0 (02072b482 2022-01-11)\r\nbinary: rustc\r\ncommit-hash: 02072b482a8b5357f7fb5e5637444ae30e423c40\r\ncommit-date: 2022-01-11\r\nhost: x86_64-apple-darwin\r\nrelease: 1.58.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/02072b482a8b5357f7fb5e5637444ae30e423c40/compiler/rustc_errors/src/lib.rs:1115:9\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::span_bug::<rustc_span::span_encoding::Span>\r\n   3: <rustc_errors::Handler>::span_bug::<rustc_span::span_encoding::Span>\r\n   4: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>::{closure#0}\r\n   5: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>::{closure#0}\r\n   6: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   7: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   8: rustc_middle::util::bug::span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   9: <rustc_codegen_llvm::context::CodegenCx as rustc_middle::ty::layout::LayoutOfHelpers>::handle_layout_err\r\n  10: <rustc_codegen_llvm::context::CodegenCx as rustc_middle::ty::layout::LayoutOf>::spanned_layout_of::{closure#0}\r\n  11: <rustc_codegen_llvm::context::CodegenCx as rustc_middle::ty::layout::LayoutOf>::spanned_layout_of\r\n  12: <core::iter::adapters::map::Map<core::slice::iter::Iter<rustc_middle::mir::LocalDecl>, rustc_codegen_ssa::mir::analyze::non_ssa_locals<rustc_codegen_llvm::builder::Builder>::{closure#0}> as core::iter::traits::iterator::Iterator>::fold::<(), core::iter::traits::iterator::Iterator::for_each::call<rustc_codegen_ssa::mir::analyze::LocalKind, <alloc::vec::Vec<rustc_codegen_ssa::mir::analyze::LocalKind> as alloc::vec::spec_extend::SpecExtend<rustc_codegen_ssa::mir::analyze::LocalKind, core::iter::adapters::map::Map<core::slice::iter::Iter<rustc_middle::mir::LocalDecl>, rustc_codegen_ssa::mir::analyze::non_ssa_locals<rustc_codegen_llvm::builder::Builder>::{closure#0}>>>::spec_extend::{closure#0}>::{closure#0}>\r\n  13: rustc_codegen_ssa::mir::analyze::non_ssa_locals::<rustc_codegen_llvm::builder::Builder>\r\n  14: rustc_codegen_ssa::mir::codegen_mir::<rustc_codegen_llvm::builder::Builder>\r\n  15: rustc_codegen_ssa::base::codegen_instance::<rustc_codegen_llvm::builder::Builder>\r\n  16: <rustc_middle::mir::mono::MonoItem as rustc_codegen_ssa::mono_item::MonoItemExt>::define::<rustc_codegen_llvm::builder::Builder>\r\n  17: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  18: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::symbol::Symbol, rustc_codegen_ssa::ModuleCodegen<rustc_codegen_llvm::ModuleLlvm>>\r\n  19: rustc_codegen_llvm::base::compile_codegen_unit\r\n  20: rustc_codegen_ssa::base::codegen_crate::<rustc_codegen_llvm::LlvmCodegenBackend>\r\n  21: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  22: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  23: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  24: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  25: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "nbittich", "id": 3816305, "node_id": "MDQ6VXNlcjM4MTYzMDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3816305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbittich", "html_url": "https://github.com/nbittich", "followers_url": "https://api.github.com/users/nbittich/followers", "following_url": "https://api.github.com/users/nbittich/following{/other_user}", "gists_url": "https://api.github.com/users/nbittich/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbittich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbittich/subscriptions", "organizations_url": "https://api.github.com/users/nbittich/orgs", "repos_url": "https://api.github.com/users/nbittich/repos", "events_url": "https://api.github.com/users/nbittich/events{/privacy}", "received_events_url": "https://api.github.com/users/nbittich/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93002/timeline", "performed_via_github_app": null, "state_reason": "completed"}