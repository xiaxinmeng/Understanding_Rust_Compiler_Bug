{"url": "https://api.github.com/repos/rust-lang/rust/issues/34758", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/34758/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/34758/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/34758/events", "html_url": "https://github.com/rust-lang/rust/issues/34758", "id": 164739203, "node_id": "MDU6SXNzdWUxNjQ3MzkyMDM=", "number": 34758, "title": "Any::downcast_ref fails on closures across crates", "user": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-10T23:14:30Z", "updated_at": "2016-07-10T23:22:37Z", "closed_at": "2016-07-10T23:22:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Minimal example: https://github.com/willcrichton/issue-34758\n\nIf I have a create a value of type `Box<Any>` which is an upcasted version of a closure (e.g. `Fn()`) in one crate and then downcast it with the appropriate type in another crate, it fails. For example, if I have the following library in one crate:\n\n``` rust\nuse std::any::Any;\n\npub fn alloc<T: Any>(t: T) -> Box<Any> {\n    Box::new(t)\n}\n\npub fn unwrap<T: Any>(x: Box<Any>) {\n    x.downcast_ref::<T>().unwrap();\n}\n\npub fn unwrap_i32(x: Box<Any>) {\n    x.downcast_ref::<i32>().unwrap();\n}\n\npub fn unwrap_closure(x: Box<Any>) {\n    x.downcast_ref::<Box<Fn()>>().unwrap();\n}\n```\n\nAnd then a binary that uses the library in another crate:\n\n``` rust\nextern crate lib;\n\nmod lib_incrate {\n    use std::any::Any;\n\n    pub fn alloc<T: Any>(t: T) -> Box<Any> {\n        Box::new(t)\n    }\n\n    pub fn unwrap_closure(x: Box<Any>) {\n        x.downcast_ref::<Box<Fn()>>().unwrap();\n    }\n}\n\nfn main() {\n    let x: i32 = 1i32;\n    lib::unwrap::<i32>(lib::alloc(x));\n\n    let x: i32 = 1i32;\n    lib::unwrap_i32(lib::alloc(x));\n\n    let x: Box<Fn()> = Box::new(||{});\n    lib::unwrap::<Box<Fn()>>(lib::alloc(x));\n\n    let x: Box<Fn()> = Box::new(||{});\n    lib_incrate::unwrap_closure(lib_incrate::alloc(x));\n\n    println!(\"Fails here?\");\n    let x: Box<Fn()> = Box::new(||{});\n    lib::unwrap_closure(lib::alloc(x));\n}\n```\n\nThen it fails where noted (i.e. at the unwrap).\n", "closed_by": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/34758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/34758/timeline", "performed_via_github_app": null, "state_reason": "completed"}