{"url": "https://api.github.com/repos/rust-lang/rust/issues/95492", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95492/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95492/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95492/events", "html_url": "https://github.com/rust-lang/rust/issues/95492", "id": 1186853806, "node_id": "I_kwDOAAsO6M5GvfOu", "number": 95492, "title": "[strict provenance] Close The Gap Between AtomicUsize and AtomicPtr", "user": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 3983786342, "node_id": "LA_kwDOAAsO6M7tc8Fm", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-strict-provenance", "name": "A-strict-provenance", "color": "f7e101", "default": false, "description": "Area: Strict provenance for raw pointers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2022-03-30T18:46:55Z", "updated_at": "2022-07-06T22:50:28Z", "closed_at": "2022-07-06T22:50:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue is part of the Strict Provenance Experiment - https://github.com/rust-lang/rust/issues/95228\r\n\r\nAs of this writing, [AtomicUsize](https://doc.rust-lang.org/std/sync/atomic/struct.AtomicUsize.html) has many more operations than [AtomicPtr](https://doc.rust-lang.org/std/sync/atomic/struct.AtomicPtr.html), like fetch_add, which is a *problem* if we want people to conform to strict provenance and admit when pointers are pointers.\r\n\r\nAll the cases I found [in my initial pass](https://github.com/rust-lang/rust/pull/95241) over std and rustc seemed to work fine with CAS operations, so closing the gap is seemingly only needed for the wider ecosystem. For instance, parking_lot does many Cute Tricks with fetch_and and fetch_sub:\r\n\r\nhttps://github.com/Amanieu/parking_lot/blob/035ecafda05588191e03874c1f21cd2b638e6149/core/src/word_lock.rs#L274\r\n\r\nSee also @jrtc27's [comments on what CHERI does](https://github.com/rust-lang/rust/issues/95228#issuecomment-1083405125)\r\n\r\nMorally, most atomic operations can be defined in terms of wrapping_offset, so I think it should be fine to support these operations. However it is *interesting* as to whether they should be defined to operate on \"just the address\" (as you would expect of wrapping_offset) or if they are allowed to \"interact\" with the raw bit representation and therefore things that are \"not\" addresses (e.g. the CHERI metadata). At worst we can say \"we can't stop you, but if you do, you will be sad\", but it would be good to know if we can do \"better\".\r\n\r\n(For those unaware, a pointer (\"capability\") on CHERI is 128-bit, but the address-space is ~64-bit. The pointer is a complicated compressed thing that does lots of Tricks to pack in *at least* an entire slice (so two more logically-64-bit addresses!) into there. If you do Sufficiently Bad things the hardware will mark the memory as ~corrupt and fault you if you try to use the pointer to read/write.)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95492/timeline", "performed_via_github_app": null, "state_reason": "completed"}