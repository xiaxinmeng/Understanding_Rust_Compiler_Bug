{"url": "https://api.github.com/repos/rust-lang/rust/issues/91438", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91438/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91438/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91438/events", "html_url": "https://github.com/rust-lang/rust/issues/91438", "id": 1068940761, "node_id": "I_kwDOAAsO6M4_tr3Z", "number": 91438, "title": "Potentially redundant check for zero alignment in generated assembly", "user": {"login": "alex65536", "id": 25226083, "node_id": "MDQ6VXNlcjI1MjI2MDgz", "avatar_url": "https://avatars.githubusercontent.com/u/25226083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex65536", "html_url": "https://github.com/alex65536", "followers_url": "https://api.github.com/users/alex65536/followers", "following_url": "https://api.github.com/users/alex65536/following{/other_user}", "gists_url": "https://api.github.com/users/alex65536/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex65536/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex65536/subscriptions", "organizations_url": "https://api.github.com/users/alex65536/orgs", "repos_url": "https://api.github.com/users/alex65536/repos", "events_url": "https://api.github.com/users/alex65536/events{/privacy}", "received_events_url": "https://api.github.com/users/alex65536/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2021-12-01T22:41:33Z", "updated_at": "2021-12-13T07:30:42Z", "closed_at": "2021-12-13T07:30:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following code with custom DSTs:\r\n\r\n```rust\r\npub trait My {\r\n    fn f(&self) -> i32;\r\n}\r\n\r\npub struct Wrapper<T: ?Sized>(i8, T);\r\n\r\npub struct My1<T: My + ?Sized> {\r\n    field: i8,\r\n    my: Wrapper<T>,\r\n}\r\n\r\ntype DynMy1 = My1<dyn My>;\r\n\r\npub fn run(d: &DynMy1) -> &Wrapper<dyn My> {\r\n    &d.my\r\n}\r\n```\r\n\r\nThe generated assembly for x86_64 is as follows (with my comments added):\r\n\r\n```asm\r\nexample::run:\r\n  mov     rdx, rsi                   ; Copy vtable pointer into that of result\r\n  mov     rcx, qword ptr [rsi + 16]  ; Load alignment into rcx\r\n  test    rcx, rcx                   ; Check if the alignment is non-zero (?)\r\n  mov     eax, 1\r\n  cmovne  rax, rcx                   ; If the alignment is zero, then the offset is 1, otherwise it's rcx\r\n  add     rax, rdi                   ; Add offset to base pointer and store into the base pointer of result\r\n  ret\r\n```\r\n\r\nThis can be seen on [Godbolt](https://godbolt.org/z/hYM8cz8Kr).\r\n\r\nWhy does the compiler check for zero alignment? It seems that it's impossible, as the alignment cannot be zero.\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0 (09c42c458 2021-10-18)\r\nbinary: rustc\r\ncommit-hash: 09c42c45858d5f3aedfa670698275303a3d19afa\r\ncommit-date: 2021-10-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0\r\nLLVM version: 13.0.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91438/timeline", "performed_via_github_app": null, "state_reason": "completed"}