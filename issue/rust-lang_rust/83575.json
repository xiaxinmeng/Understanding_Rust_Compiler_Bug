{"url": "https://api.github.com/repos/rust-lang/rust/issues/83575", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83575/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83575/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83575/events", "html_url": "https://github.com/rust-lang/rust/issues/83575", "id": 842563538, "node_id": "MDU6SXNzdWU4NDI1NjM1Mzg=", "number": 83575, "title": "Panic about invalid identifier `\"SomeIdentifier::Something\"` from proc macro produces ICE at call-side code", "user": {"login": "chamoretto", "id": 28485306, "node_id": "MDQ6VXNlcjI4NDg1MzA2", "avatar_url": "https://avatars.githubusercontent.com/u/28485306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chamoretto", "html_url": "https://github.com/chamoretto", "followers_url": "https://api.github.com/users/chamoretto/followers", "following_url": "https://api.github.com/users/chamoretto/following{/other_user}", "gists_url": "https://api.github.com/users/chamoretto/gists{/gist_id}", "starred_url": "https://api.github.com/users/chamoretto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chamoretto/subscriptions", "organizations_url": "https://api.github.com/users/chamoretto/orgs", "repos_url": "https://api.github.com/users/chamoretto/repos", "events_url": "https://api.github.com/users/chamoretto/events{/privacy}", "received_events_url": "https://api.github.com/users/chamoretto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-27T17:31:23Z", "updated_at": "2021-03-27T17:31:23Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nI'm not sure if this is actually a ICE or not, but I decided to write a post to give more experienced people a chance to figure it out.\r\n\r\n\r\nCrate with proc_macro. Cargo.toml and actually code.\r\n```\r\n[package]\r\nname = \"procedural_macros\"\r\nversion = \"0.1.0\"\r\nauthors = [\"Me <name>\"]\r\nedition = \"2018\"\r\n\r\n[lib]\r\nname = \"procedural_macros\"\r\nproc-macro = true\r\n\r\n# ===== Dependencies =====\r\n\r\n[dependencies.proc-macro2]\r\nversion = \"^1.0\"\r\n\r\n[dependencies.quote]\r\nversion = \"^1.0\"\r\n\r\n[dependencies.syn]\r\nversion = \"^1.0\"\r\nfeatures = [\"visit\"]\r\n```\r\n\r\n```Rust\r\nextern crate proc_macro;\r\nextern crate quote;\r\n\r\nuse proc_macro::{TokenStream};\r\nuse proc_macro2 as pm2;\r\n\r\nuse syn::parse::{Parse, ParseStream, Result};\r\nuse syn::punctuated::Punctuated;\r\nuse syn::{parse_macro_input, Expr, Ident, Token};\r\nuse quote::ToTokens;\r\n\r\nstruct SimplePgQuery {\r\n    model: Ident,\r\n    executor: Expr,\r\n    params: Vec<(Expr, Expr, usize)>,\r\n}\r\n\r\nimpl Parse for SimplePgQuery {\r\n    fn parse(input: ParseStream) -> Result<Self> {\r\n        let model: Ident = input.parse()?;\r\n        input.parse::<Token![,]>()?;\r\n\r\n        let executor: Expr = input.parse()?;\r\n        input.parse::<Token![,]>()?;\r\n\r\n        let mut params = vec![];\r\n        let mut counter = 1;\r\n        for m in Punctuated::<Expr, Token![,]>::parse_terminated(input)?.iter() {\r\n\r\n            let tmp_s = m.to_token_stream().to_string();\r\n            let mut strings = vec![];\r\n            for s in tmp_s.split('=') {\r\n                   strings.push(s);\r\n            }\r\n            let column_name = Expr::Verbatim(strings.get(0).unwrap().parse()?);\r\n            let value = Expr::Verbatim(strings.get(1).unwrap().parse()?);\r\n            counter += 1;\r\n\r\n            params.push((column_name, value, counter));\r\n        }\r\n        Ok(SimplePgQuery { model, executor, params, })\r\n    }\r\n}\r\n\r\n#[proc_macro]\r\npub fn pg_query(input: TokenStream) -> TokenStream {\r\n    let SimplePgQuery { model, executor, params} = parse_macro_input!(input);\r\n\r\n    let table_name_ident = pm2::Ident::new(&format!(\"{}::TABLE_NAME\", model.to_string()), pm2::Span::call_site());\r\n    let select_from_clause = quote::quote!(\r\n        \"SELECT * FROM \", #table_name_ident,\r\n    );\r\n    let mut add_c = pm2::TokenStream::new();\r\n    let mut and_clause = pm2::TokenStream::new();\r\n    let params_len = params.len();\r\n    for p in params {\r\n\r\n        let (field_name, field_val) = (p.0, p.1);\r\n\r\n        let _num = p.2.to_string();\r\n        let num = quote::quote!(#_num);\r\n\r\n        if p.2 - 1 != params_len {\r\n            and_clause = quote::quote!(#and_clause #field_name = $#num AND);\r\n        } else {\r\n            and_clause = quote::quote!(#and_clause #field_name = $#num);\r\n        }\r\n\r\n        add_c = quote::quote!(#add_c .add_c(#field_val));\r\n    }\r\n\r\n    let with_brackets = pm2::Group::new(\r\n        pm2::Delimiter::Parenthesis,\r\n        quote::quote!(#select_from_clause #and_clause)\r\n    );\r\n\r\n    let finalized_clause = quote::quote!(\r\n        concatcp! #with_brackets\r\n    );\r\n\r\n    let expanded = quote::quote!({\r\n        use $crate::shared::helper_traits::ChainedArguments as _;\r\n\r\n        sqlx::query_as_with::<_, #model, _>(\r\n            #finalized_clause,\r\n            sqlx::postgres::PgArguments::default() #add_c,\r\n        )\r\n            .fetch_optional(#executor).await\r\n    });\r\n\r\n    let result = TokenStream::from(expanded);\r\n    eprintln!(\"{:}\", result);\r\n    result\r\n}\r\n\r\n```\r\n\r\nProject has structure like\r\nmy_project\r\n|__procedural_macros\r\n    |__ src\r\n|__ src // code below written here \r\n\r\nMy code from another crate, which uses this proc macro\r\n```Rust\r\nasync fn mre() {\r\n\r\n    struct User1 {}\r\n    impl User1 {\r\n        pub const TABLE_NAME: &'static str = \"users\";\r\n    }\r\n    let login = \"my_login\".to_string();\r\n    let email_var = \"asfg@123.com\".to_string();\r\n    let s = pg_query!(User1, &mut executor, login=login, email=email_var); // there are no executor, but is does not matter\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (07e0e2ec2 2021-03-24)\r\nbinary: rustc\r\ncommit-hash: 07e0e2ec268c140e607e1ac7f49f145612d0f597\r\ncommit-date: 2021-03-24\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: unexpected panic\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-pc-windows-msvc\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\nnote: some of the compiler flags provided by cargo are hidden\r\nquery stack during panic:\r\nend of query stack\r\nerror: proc macro panicked\r\n   --> src\\main.rs:120:13\r\n    |\r\n120 |     let s = pg_query!(User1, &mut executor, login=login, email=email_var);\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = help: message: `\"User1::TABLE_NAME\"` is not a valid identifier\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `optimeet_actix`\r\nTo learn more, run the command again with --verbose.\r\nProcess finished with exit code 101\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nC:/Users/gosha/.cargo/bin/cargo.exe test --color=always --message-format=json-diagnostic-rendered-ansi --no-run --package optimeet_actix --bin optimeet_actix test\r\n   Compiling optimeet_actix v0.1.0 (C:\\Users\\gosha\\CLionProjects\\optimeet_actix)\r\nthread 'rustc' panicked at '`\"User1::TABLE_NAME\"` is not a valid identifier', compiler\\rustc_expand\\src\\proc_macro_server.rs:336:13\r\nstack backtrace:\r\n   0:     0x7ffdc51877ee - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h62553bb33d269d2e\r\n   1:     0x7ffdc51b27cc - core::fmt::write::h187a24ff0c56237d\r\n   2:     0x7ffdc517b208 - <std::io::IoSlice as core::fmt::Debug>::fmt::h7a51133a1941366b\r\n   3:     0x7ffdc518ba02 - std::panicking::take_hook::ha7af702674468c4c\r\n   4:     0x7ffdc518b4da - std::panicking::take_hook::ha7af702674468c4c\r\n   5:     0x7ffd9424b057 - rustc_driver::report_ice::h530a14ca8f015ece\r\n   6:     0x7ffdc518c1e5 - std::panicking::rust_panic_with_hook::hffdabf0e02906eb3\r\n   7:     0x7ffdc518bdc1 - rust_begin_unwind\r\n   8:     0x7ffdc518810f - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h62553bb33d269d2e\r\n   9:     0x7ffdc518bd19 - rust_begin_unwind\r\n  10:     0x7ffdc51e463c - std::panicking::begin_panic_fmt::h5f113f8f74763d19\r\n  11:     0x7ffd97a1bdab - <proc_macro::Delimiter as rustc_expand::proc_macro_server::ToInternal<rustc_ast::token::DelimToken>>::to_internal::h23f7c824802ad284\r\n  12:     0x7ffd97a6c6ca - <rustc_expand::mbe::transcribe::Frame as core::iter::traits::iterator::Iterator>::next::hc101c5ca12f7d7b4\r\n  13:     0x7ffd97ae84be - rustc_expand::base::MacEager::ty::hf66ef54cd82a2887\r\n  14:     0x7ffdacc4500c - proc_macro::bridge::closure::Closure::call\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\/library\\proc_macro\\src\\bridge\\closure.rs:27\r\n  15:     0x7ffdacc4500c - proc_macro::bridge::client::{{impl}}::new::{{closure}}\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\/library\\proc_macro\\src\\bridge\\client.rs:244\r\n  16:     0x7ffdacc4500c - proc_macro::bridge::client::{{impl}}::with::{{closure}}\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\/library\\proc_macro\\src\\bridge\\client.rs:297\r\n  17:     0x7ffdacc4500c - proc_macro::bridge::client::{{impl}}::with::{{closure}}::{{closure}}\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\/library\\proc_macro\\src\\bridge\\client.rs:293\r\n  18:     0x7ffdacc4500c - proc_macro::bridge::scoped_cell::ScopedCell::replace\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\/library\\proc_macro\\src\\bridge\\scoped_cell.rs:75\r\n  19:     0x7ffdacc4500c - proc_macro::bridge::client::{{impl}}::with::{{closure}}\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\/library\\proc_macro\\src\\bridge\\client.rs:291\r\n  20:     0x7ffdacc4500c - std::thread::local::LocalKey::try_with\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\library\\std\\src\\thread\\local.rs:272\r\n  21:     0x7ffdacc4500c - std::thread::local::LocalKey::with\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\library\\std\\src\\thread\\local.rs:248\r\n  22:     0x7ffdacc4500c - proc_macro::bridge::client::BridgeState::with\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\/library\\proc_macro\\src\\bridge\\client.rs:290\r\n  23:     0x7ffdacc4500c - proc_macro::bridge::Bridge::with\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\/library\\proc_macro\\src\\bridge\\client.rs:329\r\n  24:     0x7ffdacc4500c - proc_macro::bridge::client::Ident::new\r\n                               at /rustc/07e0e2ec268c140e607e1ac7f49f145612d0f597\\/library\\proc_macro\\src\\bridge\\client.rs:237\r\n  25:     0x7ffdacc280c4 - proc_macro2::imp::Ident::new\r\n                               at C:\\Users\\gosha\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.24\\src\\wrapper.rs:668\r\n  26:     0x7ffdacc1412c - proc_macro2::Ident::new\r\n                               at C:\\Users\\gosha\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\proc-macro2-1.0.24\\src\\lib.rs:895\r\n  27:     0x7ffdacaea8cf - procedural_macros::pg_query\r\n                               at C:\\Users\\gosha\\CLionProjects\\optimeet_actix\\procedural_macros\\src\\lib.rs:102\r\n  28:     0x7ffdacae500e - core::ops::function::FnOnce::call_once<fn(proc_macro::TokenStream) -> proc_macro::TokenStream,tuple<proc_macro::TokenStream>>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\core\\src\\ops\\function.rs:227\r\n  29:     0x7ffdacaecaf6 - proc_macro::bridge::client::{{impl}}::expand1::run::{{closure}}<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\client.rs:410\r\n  30:     0x7ffdacaec14a - proc_macro::bridge::client::run_client::{{closure}}::{{closure}}<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::TokenStream,closure-0>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\client.rs:377\r\n  31:     0x7ffdacae12b8 - proc_macro::bridge::scoped_cell::{{impl}}::set::{{closure}}<proc_macro::bridge::client::BridgeStateL,tuple<>,closure-0>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\scoped_cell.rs:80\r\n  32:     0x7ffdacae16fc - proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::replace<proc_macro::bridge::client::BridgeStateL,tuple<>,closure-0>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\scoped_cell.rs:75\r\n  33:     0x7ffdacae1297 - proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<proc_macro::bridge::client::BridgeStateL,tuple<>,closure-0>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\scoped_cell.rs:80\r\n  34:     0x7ffdacaec8b0 - proc_macro::bridge::client::{{impl}}::enter::{{closure}}<tuple<>,closure-0>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\client.rs:325\r\n  35:     0x7ffdacae7358 - std::thread::local::LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::try_with<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>,closure-1,tuple<>>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\std\\src\\thread\\local.rs:272\r\n  36:     0x7ffdacae7233 - std::thread::local::LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::with<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>,closure-1,tuple<>>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\std\\src\\thread\\local.rs:248\r\n  37:     0x7ffdacae6647 - proc_macro::bridge::Bridge::enter<tuple<>,closure-0>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\client.rs:325\r\n  38:     0x7ffdacaec077 - proc_macro::bridge::client::run_client::{{closure}}<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::TokenStream,closure-0>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\client.rs:370\r\n  39:     0x7ffdacae1021 - std::panic::{{impl}}::call_once<tuple<>,closure-0>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\std\\src\\panic.rs:344\r\n  40:     0x7ffdacae5c9b - std::panicking::try::do_call<std::panic::AssertUnwindSafe<closure-0>,tuple<>>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\std\\src\\panicking.rs:379\r\n  41:     0x7ffdacae5d83 - std::panicking::try::do_catch<std::panic::AssertUnwindSafe<closure-0>,tuple<>>\r\n  42:     0x7ffdacae5bdb - std::panicking::try<tuple<>,std::panic::AssertUnwindSafe<closure-0>>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\std\\src\\panicking.rs:343\r\n  43:     0x7ffdacae1054 - std::panic::catch_unwind<std::panic::AssertUnwindSafe<closure-0>,tuple<>>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\std\\src\\panic.rs:431\r\n  44:     0x7ffdacaebed3 - proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream,proc_macro::bridge::client::TokenStream,closure-0>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\client.rs:369\r\n  45:     0x7ffdacaeca83 - proc_macro::bridge::client::{{impl}}::expand1::run<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>\r\n                               at C:\\Users\\gosha\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\library\\proc_macro\\src\\bridge\\client.rs:410\r\n  46:     0x7ffd97a6bab9 - <rustc_expand::mbe::transcribe::Frame as core::iter::traits::iterator::Iterator>::next::hc101c5ca12f7d7b4\r\n  47:     0x7ffd97a4f8ee - <rustc_expand::proc_macro::BangProcMacro as rustc_expand::base::ProcMacro>::expand::ha6c7e4ae01d15bf2\r\n  48:     0x7ffd97a33ce5 - rustc_expand::expand::MacroExpander::fully_expand_fragment::h546b3d6090ae35d8\r\n  49:     0x7ffd97a31ea1 - rustc_expand::expand::MacroExpander::expand_crate::h29457354fdef570e\r\n  50:     0x7ffd9436a57a - <rls_span::compiler::_::<impl serde::de::Deserialize for rls_span::compiler::DiagnosticSpanMacroExpansion>::deserialize::__Visitor as serde::de::Visitor>::expecting::hd5b46ca79c97c9e8\r\n  51:     0x7ffd9438dc0e - rustc_interface::passes::BoxedResolver::to_resolver_outputs::h26a866d2af02ca21\r\n  52:     0x7ffd94428c59 - rustc_interface::interface::try_print_query_stack::h01bfbfe9eda229d6\r\n  53:     0x7ffd94411c13 - rustc_interface::util::commit_date_str::hf818b05ff2345c85\r\n  54:     0x7ffd9438c997 - <rls_span::compiler::_::<impl serde::de::Deserialize for rls_span::compiler::DiagnosticSpanMacroExpansion>::deserialize::__Visitor as serde::de::Visitor>::expecting::hd5b46ca79c97c9e8\r\n  55:     0x7ffd9439c178 - rustc_interface::queries::Queries::expansion::hd60c52385c2fe72c\r\n  56:     0x7ffd94262681 - <rustc_middle::ty::SymbolName as core::fmt::Debug>::fmt::h898edfdbf8c7dbdf\r\n  57:     0x7ffd942c16bc - <rustc_driver::args::Error as core::fmt::Debug>::fmt::h54d0345b5b43328e\r\n  58:     0x7ffd942651eb - <rustc_middle::ty::SymbolName as core::fmt::Debug>::fmt::h898edfdbf8c7dbdf\r\n  59:     0x7ffd94254034 - rustc_driver::pretty::print_after_hir_lowering::h04bf553be4aa75de\r\n  60:     0x7ffd9426745f - <rustc_middle::ty::SymbolName as core::fmt::Debug>::fmt::h898edfdbf8c7dbdf\r\n  61:     0x7ffd9428676d - <rustc_hir::intravisit::ErasedMap as rustc_hir::intravisit::Map>::foreign_item::he23d70bdee5d6fd3\r\n  62:     0x7ffdc519b16a - std::sys::windows::thread::Thread::new::h485ded1a10d2ce17\r\n  63:     0x7ffe175e7034 - BaseThreadInitThunk\r\n  64:     0x7ffe18522651 - RtlUserThreadStart\r\nerror: internal compiler error: unexpected panic\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\nnote: rustc 1.53.0-nightly (07e0e2ec2 2021-03-24) running on x86_64-pc-windows-msvc\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental\r\nnote: some of the compiler flags provided by cargo are hidden\r\nquery stack during panic:\r\nend of query stack\r\nerror: proc macro panicked\r\n   --> src\\main.rs:120:13\r\n    |\r\n120 |     let s = pg_query!(User1, &mut executor, login=login, email=email_var);\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = help: message: `\"User1::TABLE_NAME\"` is not a valid identifier\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `optimeet_actix`\r\nTo learn more, run the command again with --verbose.\r\nProcess finished with exit code 101\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83575/timeline", "performed_via_github_app": null, "state_reason": null}