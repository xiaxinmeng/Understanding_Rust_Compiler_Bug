{"url": "https://api.github.com/repos/rust-lang/rust/issues/42515", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42515/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42515/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42515/events", "html_url": "https://github.com/rust-lang/rust/issues/42515", "id": 234336344, "node_id": "MDU6SXNzdWUyMzQzMzYzNDQ=", "number": 42515, "title": "`cfg_target_feature` and `target_feature` don't interact properly", "user": {"login": "parched", "id": 5975405, "node_id": "MDQ6VXNlcjU5NzU0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5975405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parched", "html_url": "https://github.com/parched", "followers_url": "https://api.github.com/users/parched/followers", "following_url": "https://api.github.com/users/parched/following{/other_user}", "gists_url": "https://api.github.com/users/parched/gists{/gist_id}", "starred_url": "https://api.github.com/users/parched/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parched/subscriptions", "organizations_url": "https://api.github.com/users/parched/orgs", "repos_url": "https://api.github.com/users/parched/repos", "events_url": "https://api.github.com/users/parched/events{/privacy}", "received_events_url": "https://api.github.com/users/parched/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 631737389, "node_id": "MDU6TGFiZWw2MzE3MzczODk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-simd", "name": "A-simd", "color": "f7e101", "default": false, "description": "Area: SIMD (Single Instruction Multiple Data)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 5223550385, "node_id": "LA_kwDOAAsO6M8AAAABN1kNsQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-feature", "name": "A-target-feature", "color": "f7e101", "default": false, "description": "Area: Enabling/disabling target features like AVX, Neon, etc."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-06-07T20:43:52Z", "updated_at": "2023-03-03T22:43:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This should panic but it doesn`t\r\n```\r\n#[target_feature = \"+avx\"]\r\npub fn should_panic() {\r\n#[cfg(target_feature = \"avx\")]\r\n    panic!(\"have_avx\");\r\n}\r\n```\r\n\r\nI would like for this to work because I have a macro that generates 2 copys of a function, one with `#[target_feature = \"+feat\"]` and one without and I want to conditionally use some assembly when the feature is available.\r\n\r\nCC #29717", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42515/timeline", "performed_via_github_app": null, "state_reason": null}