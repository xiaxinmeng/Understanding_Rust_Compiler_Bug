{"url": "https://api.github.com/repos/rust-lang/rust/issues/94902", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94902/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94902/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94902/events", "html_url": "https://github.com/rust-lang/rust/issues/94902", "id": 1167485133, "node_id": "I_kwDOAAsO6M5FlmjN", "number": 94902, "title": "The Try trait causes str::parse to infer the unit type ()", "user": {"login": "spikespaz", "id": 12502988, "node_id": "MDQ6VXNlcjEyNTAyOTg4", "avatar_url": "https://avatars.githubusercontent.com/u/12502988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spikespaz", "html_url": "https://github.com/spikespaz", "followers_url": "https://api.github.com/users/spikespaz/followers", "following_url": "https://api.github.com/users/spikespaz/following{/other_user}", "gists_url": "https://api.github.com/users/spikespaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/spikespaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spikespaz/subscriptions", "organizations_url": "https://api.github.com/users/spikespaz/orgs", "repos_url": "https://api.github.com/users/spikespaz/repos", "events_url": "https://api.github.com/users/spikespaz/events{/privacy}", "received_events_url": "https://api.github.com/users/spikespaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-03-13T05:26:45Z", "updated_at": "2022-06-12T20:21:51Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Given the following code:\r\n\r\n[Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=8d63b01b21fae5600b5e7bcc1ead3092)\r\n\r\n```rust\r\nfn main() {\r\n    || -> anyhow::Result<_> {\r\n        Ok(\"5\".parse::<_>()? / 5.0_f64)\r\n    }().unwrap();\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): cannot divide `()` by `f64`\r\n [--> src/main.rs:3:30\r\n](https://play.rust-lang.org/#)  |\r\n3 |         Ok(\"5\".parse::<_>()? / 5.0_f64)\r\n  |                              ^ no implementation for `() / f64`\r\n  |\r\n  = help: the trait `Div<f64>` is not implemented for `()`\r\n\r\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the trait bound `(): FromStr` is not satisfied\r\n    [--> src/main.rs:3:16\r\n](https://play.rust-lang.org/#)     |\r\n3    |         Ok(\"5\".parse::<_>()? / 5.0_f64)\r\n     |                ^^^^^ the trait `FromStr` is not implemented for `()`\r\n     |\r\nnote: required by a bound in `core::str::<impl str>::parse`\r\n\r\nerror[[E0283]](https://doc.rust-lang.org/stable/error-index.html#E0283): type annotations needed\r\n [--> src/main.rs:3:28\r\n](https://play.rust-lang.org/#)  |\r\n3 |         Ok(\"5\".parse::<_>()? / 5.0_f64)\r\n  |                            ^ cannot infer type for type parameter `E`\r\n  |\r\n  = note: multiple `impl`s satisfying `anyhow::Error: From<_>` found in the following crates: `anyhow`, `core`:\r\n          - impl<E> From<E> for anyhow::Error\r\n            where E: 'static, E: std::error::Error, E: Send, E: Sync;\r\n          - impl<T> From<T> for T;\r\n  = note: required because of the requirements on the impl of `FromResidual<Result<Infallible, _>>` for `Result<_, anyhow::Error>`\r\n\r\nSome errors have detailed explanations: E0277, E0283.\r\nFor more information about an error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` due to 3 previous errors\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 1.16s\r\n     Running `target/debug/playground`\r\n```\r\n\r\nIf a type is provided to `str::parse` via the turbofish, rather than leaving it anonymous as `_`, the code compiles well.\r\n\r\n```rust\r\nfn main() {\r\n    || -> anyhow::Result<_> {\r\n        Ok(\"5\".parse::<f64>()? / 5.0_f64)\r\n    }().unwrap();\r\n}\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94902/timeline", "performed_via_github_app": null, "state_reason": null}