{"url": "https://api.github.com/repos/rust-lang/rust/issues/67301", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67301/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67301/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67301/events", "html_url": "https://github.com/rust-lang/rust/issues/67301", "id": 537951505, "node_id": "MDU6SXNzdWU1Mzc5NTE1MDU=", "number": 67301, "title": "Sharing nightly target dir between Docker containers doesn't work correctly", "user": {"login": "ascclemens", "id": 955250, "node_id": "MDQ6VXNlcjk1NTI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/955250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ascclemens", "html_url": "https://github.com/ascclemens", "followers_url": "https://api.github.com/users/ascclemens/followers", "following_url": "https://api.github.com/users/ascclemens/following{/other_user}", "gists_url": "https://api.github.com/users/ascclemens/gists{/gist_id}", "starred_url": "https://api.github.com/users/ascclemens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ascclemens/subscriptions", "organizations_url": "https://api.github.com/users/ascclemens/orgs", "repos_url": "https://api.github.com/users/ascclemens/repos", "events_url": "https://api.github.com/users/ascclemens/events{/privacy}", "received_events_url": "https://api.github.com/users/ascclemens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632453790, "node_id": "MDU6TGFiZWw2MzI0NTM3OTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-target-specs", "name": "A-target-specs", "color": "f7e101", "default": false, "description": "Area: compile-target specifications"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-14T18:59:50Z", "updated_at": "2020-05-20T19:25:11Z", "closed_at": "2020-05-20T19:25:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry in advance if this is the wrong place for this issue; I'm not sure about the root cause.\r\n\r\nWhen caching the target directory of a build done in a Docker container, restoring\r\nthe directory on a different instance of the same container causes many, but not all,\r\ndependencies to be rebuilt.\r\n\r\nI can only reproduce this on nightly (`rust version 1.41.0-nightly (3eeb8d4f2 2019-12-12)` as a tested example); stable works as expected.\r\n\r\n## Minimal reproduction\r\n\r\nThis works with `podman` and `docker`.\r\n\r\n1. Make a new directory and start a new cargo project in it.\r\n   \r\n   ```sh\r\n   cargo init --bin\r\n   ```\r\n2. Add `proc-macro2 = \"1\"` to your Cargo.toml dependencies.\r\n3. Start a Docker container with the directory mounted in the\r\n   container.\r\n   \r\n   ```sh\r\n   docker run --rm -it -v \"$(pwd)\":/src rust:slim\r\n   ```\r\n4. Install the nightly toolchain.\r\n   \r\n   ```sh\r\n   rustup toolchain add nightly\r\n   ```\r\n5. Build the project.\r\n\r\n   ```sh\r\n   cd /src\r\n   cargo +nightly build\r\n   ```\r\n6. \"Cache\" the result.\r\n\r\n   ```sh\r\n   tar czf cache.tar.gz target\r\n   ```\r\n7. Ensure restoring the cache works as expected.\r\n   \r\n   ```sh\r\n   rm -rf target\r\n   tar xf cache.tar.gz\r\n   cargo +nightly build\r\n   rm -rf target\r\n   ```\r\n   \r\n   `proc-macro2` should not be rebuilt.\r\n8. Exit the container (`exit` or `Ctrl-D`).\r\n9. Start a new container exactly as we started the previous one.\r\n\r\n   ```sh\r\n   docker run --rm -it -v \"$(pwd)\":/src rust:slim\r\n   ```\r\n10. Install nightly again.\r\n    ```sh\r\n\trustup toolchain add nightly\r\n\t```\r\n11. Restore the cache and build.\r\n\r\n\t```sh\r\n\tcd /src\r\n\ttar xf cache.tar.gz\r\n\tcargo +nightly build\r\n    ```\r\n\r\nNotice that after step 11, `proc-macro2` is rebuilt. If you attempt\r\nthese steps on stable, `proc-macro2` will not be rebuilt.", "closed_by": {"login": "Elinvynia", "id": 59487684, "node_id": "MDQ6VXNlcjU5NDg3Njg0", "avatar_url": "https://avatars.githubusercontent.com/u/59487684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elinvynia", "html_url": "https://github.com/Elinvynia", "followers_url": "https://api.github.com/users/Elinvynia/followers", "following_url": "https://api.github.com/users/Elinvynia/following{/other_user}", "gists_url": "https://api.github.com/users/Elinvynia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elinvynia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elinvynia/subscriptions", "organizations_url": "https://api.github.com/users/Elinvynia/orgs", "repos_url": "https://api.github.com/users/Elinvynia/repos", "events_url": "https://api.github.com/users/Elinvynia/events{/privacy}", "received_events_url": "https://api.github.com/users/Elinvynia/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67301/timeline", "performed_via_github_app": null, "state_reason": "completed"}