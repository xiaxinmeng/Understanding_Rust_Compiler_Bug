{"url": "https://api.github.com/repos/rust-lang/rust/issues/89384", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89384/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89384/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89384/events", "html_url": "https://github.com/rust-lang/rust/issues/89384", "id": 1011615219, "node_id": "I_kwDOAAsO6M48TAXz", "number": 89384, "title": "Rustdoc search should support space-separated queries (in additon to `::`-separated)", "user": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 2432552396, "node_id": "MDU6TGFiZWwyNDMyNTUyMzk2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-search", "name": "A-rustdoc-search", "color": "f7e101", "default": false, "description": "Area: Rustdoc's search feature"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-09-30T02:07:05Z", "updated_at": "2022-06-21T16:50:54Z", "closed_at": "2022-06-21T16:50:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I often try to do searches on rustdoc as `foo bar` rather than `foo::bar`, since it's easier to type and to me it feels more natural, especially in situations where the path isn't exact (e.g. see example 2 below).\r\n\r\nUnfortunately, this pretty much never works, and it would be nice if it did. Concrete examples:\r\n\r\n1. I'd like it if searching [`vec truncate`](https://doc.rust-lang.org/nightly/std/?search=vec%20truncate) brought up links to [std::vec::Vec::trunctate](https://doc.rust-lang.org/nightly/std/vec/struct.Vec.html#method.truncate) and such, the way searching [`vec::truncate`](https://doc.rust-lang.org/nightly/std/?search=vec%3A%3Atruncate) does.\r\n\r\n2. I'd like it if [`arch mm_cvt`](https://doc.rust-lang.org/nightly/std/?search=arch%20mm_cvt) brought up the list of `_mm_cvt` functions in core::arch, as searching [`arch::mm_cvt`](https://doc.rust-lang.org/nightly/std/?search=arch%3A%3Amm_cvt) does\r\n\r\n    (Note that in this case, the `::` path isn't really actually a thing that appears anywhere in the results, which is part of why I think spaces for this can be more natural)\r\n\r\n3. Ideally when spaces are used, the order wouldn't be important. e.g. [`mm_cvt x86_64`](https://doc.rust-lang.org/nightly/std/?search=x86_64%20mm_cvt) would work even though `mm_cvt::x86_64` doesn't \u2014 it would ideally something like [this](https://doc.rust-lang.org/nightly/std/?search=x86_64%3A%3Amm_cvt).\r\n\r\n    That said, this might be better addressed later, I can't really make heads or tales of most of what the code is doing, so I don't know how big of a deal it is.\r\n\r\nI think this is a matter of replacing some of the use of `\"::\"` in [this file](https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/static/js/search.js), but I'm not completely sure all the changes that are needed.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"nerandell\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89384/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89384/timeline", "performed_via_github_app": null, "state_reason": "completed"}