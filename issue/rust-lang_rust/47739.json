{"url": "https://api.github.com/repos/rust-lang/rust/issues/47739", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47739/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47739/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47739/events", "html_url": "https://github.com/rust-lang/rust/issues/47739", "id": 291577359, "node_id": "MDU6SXNzdWUyOTE1NzczNTk=", "number": 47739, "title": "Check for Integer Overflow by Default", "user": {"login": "Apromixately", "id": 19586851, "node_id": "MDQ6VXNlcjE5NTg2ODUx", "avatar_url": "https://avatars.githubusercontent.com/u/19586851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Apromixately", "html_url": "https://github.com/Apromixately", "followers_url": "https://api.github.com/users/Apromixately/followers", "following_url": "https://api.github.com/users/Apromixately/following{/other_user}", "gists_url": "https://api.github.com/users/Apromixately/gists{/gist_id}", "starred_url": "https://api.github.com/users/Apromixately/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Apromixately/subscriptions", "organizations_url": "https://api.github.com/users/Apromixately/orgs", "repos_url": "https://api.github.com/users/Apromixately/repos", "events_url": "https://api.github.com/users/Apromixately/events{/privacy}", "received_events_url": "https://api.github.com/users/Apromixately/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2018-01-25T13:54:02Z", "updated_at": "2020-12-13T20:23:50Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "It would be good to always check integers for overflow and thereby providing users with an integer type that actually behaves like an integer or at least fails completely instead of giving \"wrong\" results.\r\n\r\nThis was discussed on IRC last week and three distinct cases were identified:\r\n1. An integer is desired and the implicit modular arithmetic is incorrect\r\n2. Modular arithmetic is desired\r\n3. An integer is desired but the user is sure that overflows are impossible and needs the extra speed of omitting the checks\r\n\r\nMy proposal is to make (1.) the default.\r\n\r\nFor (2.) there is already [Wrapping](https://doc.rust-lang.org/std/num/struct.Wrapping.html) but (3.) should also be annotated requiring people to assert that they have done their homework and\r\na) are sure that overflows cannot cause problems\r\nb) the compiler cannot infer that the situation is safe and remove the checks\r\nc) actually need the speed-up of omitting the checks.\r\n\r\nI am aware that there are [checked operations](https://doc.rust-lang.org/std/primitive.i64.html#method.checked_mul) and compiler flags to keep overflow checks in release builds but the defaults are important and the defaults are wrong!\r\n\r\nThis issue is also discussed in the following two posts:\r\nhttps://mail.mozilla.org/pipermail/rust-dev/2014-June/010363.html\r\nhttps://huonw.github.io/blog/2016/04/myths-and-legends-about-integer-overflow-in-rust/", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47739/reactions", "total_count": 25, "+1": 23, "-1": 0, "laugh": 0, "hooray": 0, "confused": 2, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47739/timeline", "performed_via_github_app": null, "state_reason": null}