{"url": "https://api.github.com/repos/rust-lang/rust/issues/78124", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78124/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78124/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78124/events", "html_url": "https://github.com/rust-lang/rust/issues/78124", "id": 725071839, "node_id": "MDU6SXNzdWU3MjUwNzE4Mzk=", "number": 78124, "title": "Misleading compile error message when checking match arm types.", "user": {"login": "supermank17", "id": 3516468, "node_id": "MDQ6VXNlcjM1MTY0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/3516468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supermank17", "html_url": "https://github.com/supermank17", "followers_url": "https://api.github.com/users/supermank17/followers", "following_url": "https://api.github.com/users/supermank17/following{/other_user}", "gists_url": "https://api.github.com/users/supermank17/gists{/gist_id}", "starred_url": "https://api.github.com/users/supermank17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supermank17/subscriptions", "organizations_url": "https://api.github.com/users/supermank17/orgs", "repos_url": "https://api.github.com/users/supermank17/repos", "events_url": "https://api.github.com/users/supermank17/events{/privacy}", "received_events_url": "https://api.github.com/users/supermank17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-10-20T00:13:06Z", "updated_at": "2020-10-20T06:11:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I ran into a case where the compiler is complaining that match arms have incompatible types, as seen in this code snippet below.\r\nHowever, the line it is pointing to is not necessarily incorrect: the real issue is that the outer \"shouldwe\" Some => match-arm is not returning a u32 as expected. (In other words, this can be made to compile by adding a return <u32> after the match shouldwe2 statement). \r\nI eventually realized the actual issue, but this could possibly be clarified by pointing at the outer shouldwe match instead of the inner shouldwe2 match.\r\n\r\n\r\n\r\n```rust\r\n#![allow(unused)]\r\n\r\nfn test(shouldwe: Option<u32>, shouldwe2: Option<u32>) -> u32 {\r\n    match shouldwe {\r\n        Some(val) => {\r\n            match shouldwe2 {\r\n                Some(val) => {\r\n                    return val;\r\n                }\r\n                None => (),\r\n            }\r\n        }\r\n        None => return 12,\r\n    }\r\n}\r\n\r\nfn main() {\r\n    println!(\"returned {}\", test(None, Some(5)));\r\n}\r\n\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=0bb2a05f27f278d55cc68c6f17513460))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0308]: `match` arms have incompatible types\r\n  --> src/main.rs:10:25\r\n   |\r\n6  | /             match shouldwe2 {\r\n7  | |                 Some(val) => {\r\n8  | |                     return val;\r\n   | |                     ----------- this is found to be of type `u32`\r\n9  | |                 }\r\n10 | |                 None => (),\r\n   | |                         ^^ expected `u32`, found `()`\r\n11 | |             }\r\n   | |_____________- `match` arms have incompatible types\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78124/timeline", "performed_via_github_app": null, "state_reason": null}