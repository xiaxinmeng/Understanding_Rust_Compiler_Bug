{"url": "https://api.github.com/repos/rust-lang/rust/issues/39924", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39924/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39924/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39924/events", "html_url": "https://github.com/rust-lang/rust/issues/39924", "id": 208631014, "node_id": "MDU6SXNzdWUyMDg2MzEwMTQ=", "number": 39924, "title": "Internal compiler error with serde::de::Error::custom", "user": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-18T10:27:28Z", "updated_at": "2017-02-19T21:04:17Z", "closed_at": "2017-02-19T21:04:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Pushed my code to https://github.com/bjorn3/goodgame_empire_import/tree/ice.\r\nI also added a comment with the line I changed before I got a ICE.\r\n\r\n```\r\n$ cargo test\r\n   Compiling goodgame_empire_import v0.1.1 (~/Documents/goodgame_empire_import)\r\nerror[E0308]: match arms have incompatible types\r\n  --> src/data.rs:36:17\r\n   |\r\n36 |                   match v {\r\n   |  _________________^ starting here...\r\n37 | |                     0 => World::Grass,\r\n38 | |                     1 => World::Sand,\r\n39 | |                     2 => World::Ice,\r\n40 | |                     3 => World::Fire,\r\n41 | |                     4 => World::SpecialEvent,\r\n42 | |                     _ => panic!(\"Unrecognized world number {}\", v),\r\n43 | |                 }\r\n   | |_________________^ ...ending here: expected enum `std::result::Result`, found enum `data::World`\r\n   |\r\n   = note: expected type `_`\r\n              found type `data::World`\r\nnote: match arm with an incompatible type\r\n  --> src/data.rs:37:26\r\n   |\r\n37 |                     0 => World::Grass,\r\n   |                          ^^^^^^^^^^^^\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/data.rs:46:79\r\n   |\r\n46 |               fn expecting(&self, expecting: &mut fmt::Formatter) -> fmt::Result{\r\n   |  _______________________________________________________________________________^ starting here...\r\n47 | |\r\n48 | |             }\r\n   | |_____________^ ...ending here: expected enum `std::result::Result`, found ()\r\n   |\r\n   = note: expected type `std::result::Result<(), std::fmt::Error>`\r\n              found type `()`\r\n\r\nerror[E0308]: match arms have incompatible types\r\n  --> src/data.rs:36:17\r\n   |\r\n36 |                   match v {\r\n   |  _________________^ starting here...\r\n37 | |                     0 => World::Grass,\r\n38 | |                     1 => World::Sand,\r\n39 | |                     2 => World::Ice,\r\n40 | |                     3 => World::Fire,\r\n41 | |                     4 => World::SpecialEvent,\r\n42 | |                     _ => panic!(\"Unrecognized world number {}\", v),\r\n43 | |                 }\r\n   | |_________________^ ...ending here: expected enum `std::result::Result`, found enum `data::World`\r\n   |\r\n   = note: expected type `_`\r\n              found type `data::World`\r\nnote: match arm with an incompatible type\r\n  --> src/data.rs:37:26\r\n   |\r\n37 |                     0 => World::Grass,\r\n   |                          ^^^^^^^^^^^^\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/data.rs:46:79\r\n   |\r\n46 |               fn expecting(&self, expecting: &mut fmt::Formatter) -> fmt::Result{\r\n   |  _______________________________________________________________________________^ starting here...\r\n47 | |\r\n48 | |             }\r\n   | |_____________^ ...ending here: expected enum `std::result::Result`, found ()\r\n   |\r\n   = note: expected type `std::result::Result<(), std::fmt::Error>`\r\n              found type `()`\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nerror: Could not compile `goodgame_empire_import`.\r\nBuild failed, waiting for other jobs to finish...\r\nerror: aborting due to 2 previous errors\r\n\r\nerror: build failed\r\niMac:goodgame_empire_import bjorn$ cargo test\r\n   Compiling goodgame_empire_import v0.1.1 (file:///Users/bjorn/Documents/goodgame_empire_import)\r\nerror: cannot find macro `arguments!` in this scope\r\n  --> src/data.rs:42:43\r\n   |\r\n42 |                     _ => D::Error::custom(arguments!(\"Unrecognized world number {}\", v)),\r\n   |                                           ^^^^^^^^^\r\n\r\nerror[E0401]: can't use type parameters from outer function; try using a local type parameter instead\r\n  --> src/data.rs:42:26\r\n   |\r\n42 |                     _ => D::Error::custom(arguments!(\"Unrecognized world number {}\", v)),\r\n   |                          ^^^^^^^^^^^^^^^^ use of type variable from outer function\r\n\r\nerror: cannot find macro `arguments!` in this scope\r\n  --> src/data.rs:42:43\r\n   |\r\n42 |                     _ => D::Error::custom(arguments!(\"Unrecognized world number {}\", v)),\r\n   |                                           ^^^^^^^^^\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nerror[E0401]: can't use type parameters from outer function; try using a local type parameter instead\r\n  --> src/data.rs:42:26\r\n   |\r\n42 |                     _ => D::Error::custom(arguments!(\"Unrecognized world number {}\", v)),\r\n   |                          ^^^^^^^^^^^^^^^^ use of type variable from outer function\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'assertion failed: resolution.depth == 0 || resolution.base_def != Def::Err', src/librustc_resolve/lib.rs:3060\r\nstack backtrace:\r\n   1:        0x10aef01e9 - std::sys::imp::backtrace::tracing::imp::write::h9559bd7cb15d72ad\r\n   2:        0x10aefcc9e - std::panicking::default_hook::{{closure}}::h4b3f2b69c9ce844d\r\n   3:        0x10aefc8cb - std::panicking::default_hook::h61d415f2381a7336\r\n   4:        0x10aefd117 - std::panicking::rust_panic_with_hook::h8e6300d8e8aca457\r\n   5:        0x1070e3334 - std::panicking::begin_panic::h07bca7d56e8cc59f\r\n   6:        0x10716ff18 - rustc_resolve::Resolver::record_def::h76da3c01d36079d3\r\n   7:        0x107165972 - rustc_resolve::Resolver::smart_resolve_path_fragment::h5d76ea9688e88cd4\r\n   8:        0x107165341 - rustc_resolve::Resolver::smart_resolve_path::hf3c46d2a237088c2\r\n   9:        0x10716ec01 - rustc_resolve::Resolver::resolve_expr::h09b0dc21b3ab616b\r\n  10:        0x10716e310 - rustc_resolve::Resolver::resolve_expr::h09b0dc21b3ab616b\r\n  11:        0x1071637a3 - rustc_resolve::Resolver::resolve_arm::h23d6d148db68a5b2\r\n  12:        0x107128eae - syntax::visit::walk_expr::h437c79100384b73b\r\n  13:        0x10716ec0c - rustc_resolve::Resolver::resolve_expr::h09b0dc21b3ab616b\r\n  14:        0x107163fcd - rustc_resolve::Resolver::resolve_block::hbaa1b9cd3b39d13b\r\n  15:        0x1071566d1 - <rustc_resolve::Resolver<'a> as syntax::visit::Visitor<'tcx>>::visit_fn::hc8ab95e4e9e1018f\r\n  16:        0x107126624 - syntax::visit::walk_impl_item::h8444851599ccdb5a\r\n  17:        0x107160e0f - rustc_resolve::Resolver::with_type_parameter_rib::h3e6c8e0287344f15\r\n  18:        0x1071620f1 - rustc_resolve::Resolver::with_current_self_type::h2d9f068bacea9de1\r\n  19:        0x107162a2a - rustc_resolve::Resolver::with_self_rib::hc4caf49323a9c233\r\n  20:        0x107162478 - rustc_resolve::Resolver::with_optional_trait_ref::ha2a0f64226efba95\r\n  21:        0x1071627ae - rustc_resolve::Resolver::with_self_rib::h3225ea62b06fd17b\r\n  22:        0x10715f9b8 - rustc_resolve::Resolver::resolve_item::h4583f1200c5cff01\r\n  23:        0x107163fb5 - rustc_resolve::Resolver::resolve_block::hbaa1b9cd3b39d13b\r\n  24:        0x1071566d1 - <rustc_resolve::Resolver<'a> as syntax::visit::Visitor<'tcx>>::visit_fn::hc8ab95e4e9e1018f\r\n  25:        0x107126624 - syntax::visit::walk_impl_item::h8444851599ccdb5a\r\n  26:        0x107160e0f - rustc_resolve::Resolver::with_type_parameter_rib::h3e6c8e0287344f15\r\n  27:        0x1071620f1 - rustc_resolve::Resolver::with_current_self_type::h2d9f068bacea9de1\r\n  28:        0x107162a2a - rustc_resolve::Resolver::with_self_rib::hc4caf49323a9c233\r\n  29:        0x107162478 - rustc_resolve::Resolver::with_optional_trait_ref::ha2a0f64226efba95\r\n  30:        0x1071627ae - rustc_resolve::Resolver::with_self_rib::h3225ea62b06fd17b\r\n  31:        0x10715f9b8 - rustc_resolve::Resolver::resolve_item::h4583f1200c5cff01\r\n  32:        0x10712925e - syntax::visit::walk_item::hf987c90749bc584f\r\n  33:        0x10715fb8f - rustc_resolve::Resolver::resolve_item::h4583f1200c5cff01\r\n  34:        0x10715924e - rustc_resolve::Resolver::resolve_crate::he366a34c39e14f9e\r\n  35:        0x105ed59a1 - rustc_driver::driver::phase_2_configure_and_expand::hb928c8ce49deb9dc\r\n  36:        0x105ecb36d - rustc_driver::driver::compile_input::hd50a6918443232a0\r\n  37:        0x105f1321e - rustc_driver::run_compiler::h5151bfc01962b066\r\n  38:        0x105e28928 - std::panicking::try::do_call::h9e86b95d9c931e3d\r\n  39:        0x10aeffd6a - __rust_maybe_catch_panic\r\n  40:        0x105e51353 - <F as alloc::boxed::FnBox<A>>::call_box::ha55b035dd9316cf5\r\n  41:        0x10aefbdc4 - std::sys::imp::thread::Thread::new::thread_start::h80e9dc7cc1dfe0d2\r\n  42:     0x7fff89bfa99c - _pthread_body\r\n  43:     0x7fff89bfa919 - _pthread_start\r\n\r\nerror: Could not compile `goodgame_empire_import`.\r\nBuild failed, waiting for other jobs to finish...\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'assertion failed: resolution.depth == 0 || resolution.base_def != Def::Err', src/librustc_resolve/lib.rs:3060\r\nstack backtrace:\r\n   1:        0x113b081e9 - std::sys::imp::backtrace::tracing::imp::write::h9559bd7cb15d72ad\r\n   2:        0x113b14c9e - std::panicking::default_hook::{{closure}}::h4b3f2b69c9ce844d\r\n   3:        0x113b148cb - std::panicking::default_hook::h61d415f2381a7336\r\n   4:        0x113b15117 - std::panicking::rust_panic_with_hook::h8e6300d8e8aca457\r\n   5:        0x10fceb334 - std::panicking::begin_panic::h07bca7d56e8cc59f\r\n   6:        0x10fd77f18 - rustc_resolve::Resolver::record_def::h76da3c01d36079d3\r\n   7:        0x10fd6d972 - rustc_resolve::Resolver::smart_resolve_path_fragment::h5d76ea9688e88cd4\r\n   8:        0x10fd6d341 - rustc_resolve::Resolver::smart_resolve_path::hf3c46d2a237088c2\r\n   9:        0x10fd76c01 - rustc_resolve::Resolver::resolve_expr::h09b0dc21b3ab616b\r\n  10:        0x10fd76310 - rustc_resolve::Resolver::resolve_expr::h09b0dc21b3ab616b\r\n  11:        0x10fd6b7a3 - rustc_resolve::Resolver::resolve_arm::h23d6d148db68a5b2\r\n  12:        0x10fd30eae - syntax::visit::walk_expr::h437c79100384b73b\r\n  13:        0x10fd76c0c - rustc_resolve::Resolver::resolve_expr::h09b0dc21b3ab616b\r\n  14:        0x10fd6bfcd - rustc_resolve::Resolver::resolve_block::hbaa1b9cd3b39d13b\r\n  15:        0x10fd5e6d1 - <rustc_resolve::Resolver<'a> as syntax::visit::Visitor<'tcx>>::visit_fn::hc8ab95e4e9e1018f\r\n  16:        0x10fd2e624 - syntax::visit::walk_impl_item::h8444851599ccdb5a\r\n  17:        0x10fd68e0f - rustc_resolve::Resolver::with_type_parameter_rib::h3e6c8e0287344f15\r\n  18:        0x10fd6a0f1 - rustc_resolve::Resolver::with_current_self_type::h2d9f068bacea9de1\r\n  19:        0x10fd6aa2a - rustc_resolve::Resolver::with_self_rib::hc4caf49323a9c233\r\n  20:        0x10fd6a478 - rustc_resolve::Resolver::with_optional_trait_ref::ha2a0f64226efba95\r\n  21:        0x10fd6a7ae - rustc_resolve::Resolver::with_self_rib::h3225ea62b06fd17b\r\n  22:        0x10fd679b8 - rustc_resolve::Resolver::resolve_item::h4583f1200c5cff01\r\n  23:        0x10fd6bfb5 - rustc_resolve::Resolver::resolve_block::hbaa1b9cd3b39d13b\r\n  24:        0x10fd5e6d1 - <rustc_resolve::Resolver<'a> as syntax::visit::Visitor<'tcx>>::visit_fn::hc8ab95e4e9e1018f\r\n  25:        0x10fd2e624 - syntax::visit::walk_impl_item::h8444851599ccdb5a\r\n  26:        0x10fd68e0f - rustc_resolve::Resolver::with_type_parameter_rib::h3e6c8e0287344f15\r\n  27:        0x10fd6a0f1 - rustc_resolve::Resolver::with_current_self_type::h2d9f068bacea9de1\r\n  28:        0x10fd6aa2a - rustc_resolve::Resolver::with_self_rib::hc4caf49323a9c233\r\n  29:        0x10fd6a478 - rustc_resolve::Resolver::with_optional_trait_ref::ha2a0f64226efba95\r\n  30:        0x10fd6a7ae - rustc_resolve::Resolver::with_self_rib::h3225ea62b06fd17b\r\n  31:        0x10fd679b8 - rustc_resolve::Resolver::resolve_item::h4583f1200c5cff01\r\n  32:        0x10fd3125e - syntax::visit::walk_item::hf987c90749bc584f\r\n  33:        0x10fd67b8f - rustc_resolve::Resolver::resolve_item::h4583f1200c5cff01\r\n  34:        0x10fd6124e - rustc_resolve::Resolver::resolve_crate::he366a34c39e14f9e\r\n  35:        0x10eae79a1 - rustc_driver::driver::phase_2_configure_and_expand::hb928c8ce49deb9dc\r\n  36:        0x10eadd36d - rustc_driver::driver::compile_input::hd50a6918443232a0\r\n  37:        0x10eb2521e - rustc_driver::run_compiler::h5151bfc01962b066\r\n  38:        0x10ea3a928 - std::panicking::try::do_call::h9e86b95d9c931e3d\r\n  39:        0x113b17d6a - __rust_maybe_catch_panic\r\n  40:        0x10ea63353 - <F as alloc::boxed::FnBox<A>>::call_box::ha55b035dd9316cf5\r\n  41:        0x113b13dc4 - std::sys::imp::thread::Thread::new::thread_start::h80e9dc7cc1dfe0d2\r\n  42:     0x7fff89bfa99c - _pthread_body\r\n  43:     0x7fff89bfa919 - _pthread_start\r\n\r\nerror: build failed\r\n$\r\n$ rustup show\r\nDefault host: x86_64-apple-darwin\r\n\r\ninstalled toolchains\r\n--------------------\r\n\r\nstable-x86_64-apple-darwin (default)\r\nbeta-2016-12-20-x86_64-apple-darwin\r\nnightly-2016-04-14-x86_64-apple-darwin\r\nnightly-2016-04-25-x86_64-apple-darwin\r\nnightly-2016-09-29-x86_64-apple-darwin\r\nnightly-2016-09-30-x86_64-apple-darwin\r\nnightly-2016-12-29-x86_64-apple-darwin\r\nnightly-x86_64-apple-darwin\r\nnightly-x86_64-pc-windows-gnu\r\n\r\ninstalled targets for active toolchain\r\n--------------------------------------\r\n\r\ni686-unknown-linux-gnu\r\nwasm32-unknown-emscripten\r\nx86_64-apple-darwin\r\n\r\nactive toolchain\r\n----------------\r\n\r\nnightly-x86_64-apple-darwin (directory override for '~/Documents/goodgame_empire_import')\r\nrustc 1.17.0-nightly (536a900c4 2017-02-17)\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39924/timeline", "performed_via_github_app": null, "state_reason": "completed"}