{"url": "https://api.github.com/repos/rust-lang/rust/issues/112573", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112573/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112573/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112573/events", "html_url": "https://github.com/rust-lang/rust/issues/112573", "id": 1753814827, "node_id": "I_kwDOAAsO6M5oiRcr", "number": 112573, "title": "Should associated type bounds on supertraits be implied?", "user": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1476769455, "node_id": "MDU6TGFiZWwxNDc2NzY5NDU1", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-associated_type_bounds", "name": "F-associated_type_bounds", "color": "f9c0cc", "default": false, "description": "`#![feature(associated_type_bounds)]`"}, {"id": 3471276000, "node_id": "LA_kwDOAAsO6M7O53fg", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-lang-nominated", "name": "I-lang-nominated", "color": "e10c02", "default": false, "description": "Indicates that an issue has been nominated for discussion during a lang team meeting."}, {"id": 4219948899, "node_id": "LA_kwDOAAsO6M77h09j", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-implied-bounds", "name": "A-implied-bounds", "color": "f7e101", "default": false, "description": "Area: Related to implied bounds (e.g., if you have `T: Foo`, what else do you know?)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2023-06-13T00:44:21Z", "updated_at": "2023-06-13T23:49:55Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I tried [this code](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=937d5a302838df7e7e1fdcf4ddee579a):\r\n\r\n```rust\r\n#![feature(associated_type_bounds)]\r\n\r\ntrait Trait: Super<Assoc: Bound> {}\r\n\r\ntrait Super {\r\n    type Assoc;\r\n}\r\n\r\ntrait Bound {}\r\n\r\nfn foo<T>(x: T) where T: Trait {}\r\n```\r\n\r\nAnd this happened:\r\n\r\n```\r\nerror[E0277]: the trait bound `<T as Super>::Assoc: Bound` is not satisfied\r\n  --> src/lib.rs:13:8\r\n   |\r\n13 |     T: Trait,\r\n   |        ^^^^^ the trait `Bound` is not implemented for `<T as Super>::Assoc`\r\n   |\r\nnote: required by a bound in `Trait`\r\n  --> src/lib.rs:3:27\r\n   |\r\n3  | trait Trait: Super<Assoc: Bound> {}\r\n   |                           ^^^^^ required by this bound in `Trait`\r\nhelp: consider further restricting the associated type\r\n   |\r\n13 |     T: Trait, <T as Super>::Assoc: Bound\r\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\n```\r\n\r\nI'm not exactly sure whether this should be implied or not! Nominating this for T-lang for discussion, I'd like to know whether this is expected behavior or not.\r\n\r\n### Argument for the code failing\r\n\r\nFor non trait aliases, we don't imply currently any where clauses for non-supertrait bounds. In this case, supertrait bounds are precisely trait and associated type bounds which have `Self` as their self type. Since we can interpret `Self: Super<Assoc: Bound>` as two bounds -- `Self: Super` and `<Self as Super>::Assoc: Bound` -- it's consistent why the latter is not implied.\r\n\r\nFixing this complicates the code even more.\r\n\r\n### Argument for the code compiling\r\n\r\nThe concept of \"supertraits\" from a language perspective (and not a types perspective) is not very well specified -- one may argue again that it could mean anything that comes after the colon in `trait Trait: ...` or `Self: ...`, for example. Whether or not that's more intuitive, \ud83e\udd37 \r\n\r\nIt's also just annoying that this doesn't compile, and who knows if associated type bounds (which I'm personally motivated to compile) becomes more frustrating and/or less useful without these bounds being implied.\r\n\r\n---\r\n\r\nRelated to #112568, which is essentially the same question but for return type notation.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112573/timeline", "performed_via_github_app": null, "state_reason": null}