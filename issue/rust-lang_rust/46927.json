{"url": "https://api.github.com/repos/rust-lang/rust/issues/46927", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46927/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46927/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46927/events", "html_url": "https://github.com/rust-lang/rust/issues/46927", "id": 284016420, "node_id": "MDU6SXNzdWUyODQwMTY0MjA=", "number": 46927, "title": "Cannot generate unit struct with a macros", "user": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-21T21:59:50Z", "updated_at": "2018-03-26T14:27:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It doesn't seem possible to generate unit struct declaration from a macros in neither stable nor nightly version of Rust.\r\n\r\n[A simplified playground sample](https://play.rust-lang.org/?gist=0dbd7527efdae183f8bfc3fadb28c2d7&version=stable):\r\n\r\n```rust\r\nmacro_rules! def_struct {\r\n  ($name:ident $($body:tt)*) => {\r\n    pub struct $name $($body)*\r\n  };\r\n}\r\n\r\ndef_struct!(X {}); // compiles\r\ndef_struct!(Y); // doesn't\r\n\r\nfn main() {}\r\n```\r\n\r\nWhen trying to expand the second macro call, Rust complains:\r\n\r\n```rust\r\nerror: expected `where`, `{`, `(`, or `;` after struct name, found `<eof>`\r\n --> src/main.rs:3:16\r\n  |\r\n3 |     pub struct $name $($body)*\r\n  |                ^^^^^\r\n...\r\n8 | def_struct!(Y); // doesn't\r\n  | --------------- in this macro invocation\r\n```\r\n\r\nIf I add a semicolon as it asks right after the struct definition, the unit macro call starts compiling fine:\r\n\r\n```rust\r\nmacro_rules! def_struct {\r\n  ($name:ident $($body:tt)*) => {\r\n    pub struct $name $($body)*;\r\n  };\r\n}\r\n\r\ndef_struct!(Y); // compiles\r\ndef_struct!(X {}); // doesn't\r\n\r\nfn main() {}\r\n```\r\n\r\n but the other one fails instead:\r\n\r\n```rust\r\nerror: macro expansion ignores token `;` and any following\r\n --> src/main.rs:3:31\r\n  |\r\n3 |     pub struct $name $($body)*;\r\n  |                               ^\r\n  |\r\nnote: caused by the macro expansion here; the usage of `def_struct!` is likely invalid in item context\r\n --> src/main.rs:8:1\r\n  |\r\n8 | def_struct!(X {}); // compiles\r\n  | ^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nThe two errors seem to contradict each other here. The only obvious workaround to make both cases work I could find is to split macro definition into two, one with semicolon and another without:\r\n\r\n```rust\r\nmacro_rules! def_struct {\r\n  ($name:ident) => {\r\n    pub struct $name;\r\n  };\r\n  \r\n  ($name:ident $body:tt) => {\r\n    pub struct $name $body\r\n  }\r\n}\r\n\r\ndef_struct!(X {}); // compiles\r\ndef_struct!(Y); // compiles\r\n\r\nfn main() {}\r\n```\r\n\r\nBut this is not very clean and gets even harder in more complicated macros. Is there any reason for such behaviour or is it a bug and it would be possible to allow macro to generate unit structs that are not followed by a semicolon, just like any other?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46927/timeline", "performed_via_github_app": null, "state_reason": null}