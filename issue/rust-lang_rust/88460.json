{"url": "https://api.github.com/repos/rust-lang/rust/issues/88460", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88460/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88460/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88460/events", "html_url": "https://github.com/rust-lang/rust/issues/88460", "id": 982103014, "node_id": "MDU6SXNzdWU5ODIxMDMwMTQ=", "number": 88460, "title": "E0277 (bound not satisfied) for bound on generic associated types when combined with HRTB", "user": {"login": "udoprog", "id": 111092, "node_id": "MDQ6VXNlcjExMTA5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/111092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udoprog", "html_url": "https://github.com/udoprog", "followers_url": "https://api.github.com/users/udoprog/followers", "following_url": "https://api.github.com/users/udoprog/following{/other_user}", "gists_url": "https://api.github.com/users/udoprog/gists{/gist_id}", "starred_url": "https://api.github.com/users/udoprog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udoprog/subscriptions", "organizations_url": "https://api.github.com/users/udoprog/orgs", "repos_url": "https://api.github.com/users/udoprog/repos", "events_url": "https://api.github.com/users/udoprog/events{/privacy}", "received_events_url": "https://api.github.com/users/udoprog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 3307663436, "node_id": "MDU6TGFiZWwzMzA3NjYzNDM2", "url": "https://api.github.com/repos/rust-lang/rust/labels/GATs-triaged", "name": "GATs-triaged", "color": "e88000", "default": false, "description": "Issues using the `generic_associated_types` feature that have been triaged"}, {"id": 3921861239, "node_id": "LA_kwDOAAsO6M7pwtp3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-bug-has-test", "name": "S-bug-has-test", "color": "862eff", "default": false, "description": "A `known-bug` test has been added for this bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-08-29T13:43:11Z", "updated_at": "2022-03-12T19:04:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\n#![feature(generic_associated_types)]\r\n\r\npub trait Marker {}\r\n\r\npub trait Trait {\r\n    type Assoc<'a>;\r\n}\r\n\r\nfn test<T>(value: T)\r\nwhere\r\n    T: Trait,\r\n    for<'a> T::Assoc<'a>: Marker,\r\n{\r\n}\r\n\r\nimpl Marker for () {}\r\n\r\nstruct Foo;\r\n\r\nimpl Trait for Foo {\r\n    type Assoc<'a> = ();\r\n}\r\n\r\nfn main() {\r\n    test(Foo);\r\n}\r\n```\r\n\r\nI expected it to compile since `T::Assoc<'a>` to my understanding does implement `Marker` when `T` is `Foo`.\r\n\r\nInstead we get this error:\r\n```\r\nerror[E0277]: the trait bound `for<'a> <_ as Trait>::Assoc<'a>: Marker` is not satisfied\r\n  --> test.rs:25:5\r\n   |\r\n25 |     test(Foo);\r\n   |     ^^^^ the trait `for<'a> Marker` is not implemented for `<_ as Trait>::Assoc<'a>`\r\n   |\r\nnote: required by a bound in `test`\r\n  --> test.rs:12:27\r\n   |\r\n9  | fn test<T>(value: T)\r\n   |    ---- required by a bound in this\r\n...\r\n12 |     for<'a> T::Assoc<'a>: Marker,\r\n   |                           ^^^^^^ required by this bound in `test`\r\n```\r\n\r\n### Alternatives\r\n\r\nAn option is lift the `'a` bound to `test`, but that potentially causes other issues down the line like this ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=7a63f2c0e506dfb2dddba689e88b0738)):\r\n\r\n```rust\r\n#![feature(generic_associated_types)]\r\n\r\npub trait Marker {\r\n    fn borrow(&self) -> &Self;\r\n}\r\n\r\npub trait Trait {\r\n    type Assoc<'a>;\r\n\r\n    fn assoc(&self) -> Self::Assoc<'_>;\r\n}\r\n\r\nfn test<'a, T>(value: T)\r\nwhere\r\n    T: 'a + Trait,\r\n    T::Assoc<'a>: Marker,\r\n{\r\n    let assoc = value.assoc();\r\n    assoc.borrow(); // the lifetime for this reborrow ends up being narrow.\r\n}\r\n\r\nimpl Marker for () {\r\n    fn borrow(&self) -> &Self {\r\n        self\r\n    }\r\n}\r\n\r\nstruct Foo;\r\n\r\nimpl Trait for Foo {\r\n    type Assoc<'a> = ();\r\n\r\n    fn assoc(&self) -> Self::Assoc<'_> {\r\n        ()\r\n    }\r\n}\r\n\r\nfn main() {\r\n    test(Foo);\r\n}\r\n```\r\n\r\nError:\r\n\r\n```text\r\nerror[E0597]: `value` does not live long enough\r\n  --> test.rs:18:17\r\n   |\r\n13 | fn test<'a, T>(value: T)\r\n   |         -- lifetime `'a` defined here\r\n...\r\n18 |     let assoc = value.assoc();\r\n   |                 ^^^^^--------\r\n   |                 |\r\n   |                 borrowed value does not live long enough\r\n   |                 argument requires that `value` is borrowed for `'a`\r\n19 |     assoc.borrow();\r\n20 | }\r\n   | - `value` dropped here while still borrowed\r\n\r\nFor more information about this error, try `rustc --explain E0597`.\r\nerror: could not compile `audio` due to previous error\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0-nightly (5eacec9ec 2021-08-28)\r\nbinary: rustc\r\ncommit-hash: 5eacec9ec7e112a0de1011519a57c45586d58414\r\ncommit-date: 2021-08-28\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.56.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\nI somewhat expected this to be addressed by ~~#56556~~ #85499 given there there appears to be some overlap with the list of available bugs, ,but that doesn't seem to be the case as of 2021-08-28 nightly (assuming it's in there).\r\n\r\nI also apologize if this is a duplicate. I tried my best to grok the existing set of issues to see if this was applicable to one of them.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88460/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88460/timeline", "performed_via_github_app": null, "state_reason": null}