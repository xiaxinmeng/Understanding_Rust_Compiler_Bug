{"url": "https://api.github.com/repos/rust-lang/rust/issues/3903", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/3903/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/3903/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/3903/events", "html_url": "https://github.com/rust-lang/rust/issues/3903", "id": 8043188, "node_id": "MDU6SXNzdWU4MDQzMTg4", "number": 3903, "title": "Error choosing among several implementations of a trait's static method", "user": {"login": "burg", "id": 70680, "node_id": "MDQ6VXNlcjcwNjgw", "avatar_url": "https://avatars.githubusercontent.com/u/70680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burg", "html_url": "https://github.com/burg", "followers_url": "https://api.github.com/users/burg/followers", "following_url": "https://api.github.com/users/burg/following{/other_user}", "gists_url": "https://api.github.com/users/burg/gists{/gist_id}", "starred_url": "https://api.github.com/users/burg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burg/subscriptions", "organizations_url": "https://api.github.com/users/burg/orgs", "repos_url": "https://api.github.com/users/burg/repos", "events_url": "https://api.github.com/users/burg/events{/privacy}", "received_events_url": "https://api.github.com/users/burg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-11-01T21:01:40Z", "updated_at": "2012-11-01T22:10:50Z", "closed_at": "2012-11-01T22:10:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that rustc isn't able to choose among multiple impls, and insists that some arbitrary one is the \"right\" one. (Note that type parameters are explicit to work around #3902)\n## Testcase\n\n```\nmod base {\n    trait HasNew<T> {\n        static pure fn new() -> T;\n    }\n\n    pub struct Foo {\n        dummy: (),\n    }\n\n    pub impl Foo : HasNew<Foo> {\n        static pure fn new() -> Foo {\n            Foo { dummy: () }\n        }\n    }\n\n    pub struct Bar {\n        dummy: (),\n    }\n\n    pub impl Bar : HasNew<Bar> {\n        static pure fn new() -> Bar {\n            Bar { dummy: () }\n        }\n    }\n}\n\nfn main() {\n    let f: base::Foo = base::new::<base::Foo, base::Foo>();\n    debug!(\"%?\", f);\n}\n```\n## Error\n\n```\n[burg@host-5-178 Desktop]# rustc test.rs\ntest.rs:28:23: 28:56 error: mismatched types: expected `@base::HasNew<base::Bar>` but found `@base::HasNew<base::Foo>` (expected class base::Bar but found class base::Foo)\ntest.rs:28     let f: base::Foo = base::new::<base::Foo, base::Foo>();\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ntest.rs:28:23: 28:56 error: mismatched types: expected `base::Foo` but found `base::Bar` (expected class base::Foo but found class base::Bar)\ntest.rs:28     let f: base::Foo = base::new::<base::Foo, base::Foo>();\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ntest.rs:28:23: 28:56 error: mismatched types: expected `@base::HasNew<base::Bar>` but found `@base::HasNew<base::Foo>` (expected class base::Bar but found class base::Foo)\ntest.rs:28     let f: base::Foo = base::new::<base::Foo, base::Foo>();\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ntest.rs:28:23: 28:56 error: mismatched types: expected `base::Foo` but found `base::Bar` (expected class base::Foo but found class base::Bar)\ntest.rs:28     let f: base::Foo = base::new::<base::Foo, base::Foo>();\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n```\n", "closed_by": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/3903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/3903/timeline", "performed_via_github_app": null, "state_reason": "completed"}