{"url": "https://api.github.com/repos/rust-lang/rfcs/issues/2755", "repository_url": "https://api.github.com/repos/rust-lang/rfcs", "labels_url": "https://api.github.com/repos/rust-lang/rfcs/issues/2755/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rfcs/issues/2755/comments", "events_url": "https://api.github.com/repos/rust-lang/rfcs/issues/2755/events", "html_url": "https://github.com/rust-lang/rfcs/issues/2755", "id": 487923264, "node_id": "MDU6SXNzdWU0ODc5MjMyNjQ=", "number": 2755, "title": "Ability to choose libunwind backend", "user": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211667901, "node_id": "MDU6TGFiZWwyMTE2Njc5MDE=", "url": "https://api.github.com/repos/rust-lang/rfcs/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the RFC."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-28T19:06:33Z", "updated_at": "2019-11-17T16:33:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the C library behind the `libunwind` crate is chosen based on some heuristics of the target (https://github.com/rust-lang/rust/blob/master/src/libunwind/build.rs). However, the choice is sometimes not optimal.\r\n\r\nIn my case, I'm trying to cross-compile for a musl-based dynamically linked target. This chooses statically liked libunwind for me, which is not what I want. First, I try to save on the binary size, so I'd like to avoid adding another dependency (while `gcc_s` is already present on the system). I actually don't care about unwinding (I compile with panic=abort) and I'd be willing to forgo backtrace support as well. However, the more important reason is, I get a lot of unresolved references during the final linking (it may be related to mismatch between dynamic and static linking, or my compilation of libunwind does different mangling of the names, or something).\r\n\r\nCurrently I patch the libunwind sources, so `gcc_s` is chosen instead, and that works. But I'd prefer some more systematic way. Would it be possible to add some kind of configuration knob (something like there's `force_alloc_system` for std) to override the heuristics, to either `gcc_s` or some kind of dummy implementation that produces empty backtraces and supports only `panic=abort`? What would be the right process to do that? Should I just try submitting a pull request, or should I write an RFC first?\r\n\r\nI'm aware this would be an option available only when compiling my own std (like through xargo), but I still think there's a class of devices which are powerful enough to want to use std, but where saving space is still important.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rfcs/issues/2755/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rfcs/issues/2755/timeline", "performed_via_github_app": null, "state_reason": null}