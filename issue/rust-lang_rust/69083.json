{"url": "https://api.github.com/repos/rust-lang/rust/issues/69083", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69083/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69083/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69083/events", "html_url": "https://github.com/rust-lang/rust/issues/69083", "id": 563676022, "node_id": "MDU6SXNzdWU1NjM2NzYwMjI=", "number": 69083, "title": "Detect cases where `Box::pin` was likely intended", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-12T01:28:37Z", "updated_at": "2020-05-02T13:19:21Z", "closed_at": "2020-05-02T13:19:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When `BoxFuture` is expected and we supply `Pin::new(async { /* .. */ })`, `Box::new(async { /* .. */ })` or `Pin::new(Box::new(async { /* .. */ }))` we should lead the user in the right direction instead of what we do now:\r\n\r\n```\r\nerror[E0277]: the trait bound `dyn std::future::Future<Output = i32> + std::marker::Send: std::marker::Unpin` is not satisfied\r\n  --> file5.rs:10:5\r\n   |\r\n10 |     Pin::new(async { 42 })\r\n   |     ^^^^^^^^ the trait `std::marker::Unpin` is not implemented for `dyn std::future::Future<Output = i32> + std::marker::Send`\r\n   |\r\n   = note: required by `std::pin::Pin::<P>::new`\r\n```\r\n```\r\nerror[E0308]: mismatched types\r\n  --> file5.rs:10:5\r\n   |\r\n9  | fn foo() -> BoxFuture<'static, i32> {\r\n   |             ----------------------- expected `std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = i32> + std::marker::Send + 'static)>>` because of return type\r\n10 |     Box::new(async { 42 })\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^\r\n   |     |\r\n   |     expected struct `std::pin::Pin`, found struct `std::boxed::Box`\r\n   |     help: you need to pin and box this expression: `Box::pin(Box::new(async { 42 }))`\r\n   |\r\n   = note: expected struct `std::pin::Pin<std::boxed::Box<(dyn std::future::Future<Output = i32> + std::marker::Send + 'static)>>`\r\n              found struct `std::boxed::Box<impl std::future::Future>`\r\n```\r\n```\r\nerror[E0277]: the trait bound `dyn std::future::Future<Output = i32> + std::marker::Send: std::marker::Unpin` is not satisfied\r\n  --> file5.rs:10:5\r\n   |\r\n10 |     Pin::new(Box::new(async { 42 }))\r\n   |     ^^^^^^^^ the trait `std::marker::Unpin` is not implemented for `dyn std::future::Future<Output = i32> + std::marker::Send`\r\n   |\r\n   = note: required by `std::pin::Pin::<P>::new`\r\n```\r\n\r\nFor the second case we could suggest `Box::into_pin` once https://github.com/rust-lang/rust/issues/62370 stabilizes. The other two cases can be handled with a `rustc_on_unimplemented` note.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69083/timeline", "performed_via_github_app": null, "state_reason": "completed"}