{"url": "https://api.github.com/repos/rust-lang/rust/issues/43475", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43475/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43475/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43475/events", "html_url": "https://github.com/rust-lang/rust/issues/43475", "id": 245474363, "node_id": "MDU6SXNzdWUyNDU0NzQzNjM=", "number": 43475, "title": "Associated type bound isn't always present for checking", "user": {"login": "Twey", "id": 101639, "node_id": "MDQ6VXNlcjEwMTYzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/101639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Twey", "html_url": "https://github.com/Twey", "followers_url": "https://api.github.com/users/Twey/followers", "following_url": "https://api.github.com/users/Twey/following{/other_user}", "gists_url": "https://api.github.com/users/Twey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Twey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Twey/subscriptions", "organizations_url": "https://api.github.com/users/Twey/orgs", "repos_url": "https://api.github.com/users/Twey/repos", "events_url": "https://api.github.com/users/Twey/events{/privacy}", "received_events_url": "https://api.github.com/users/Twey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-25T17:22:06Z", "updated_at": "2021-02-02T14:53:08Z", "closed_at": "2021-02-02T14:53:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trait bounds on associated types seem to be *required*, not *implied*, when the trait in question mentions an associated type on a type parameter.\r\n\r\nConcretely, this code (or [playground](https://play.rust-lang.org/?gist=852e99562fe96381dd9ff14635081e0e&version=stable)) produces an error:\r\n```\r\ntrait Foo { type FooT: Foo; }\r\nimpl Foo for () { type FooT = (); }\r\ntrait Bar<T: Foo> { type BarT: Bar<T::FooT>; }\r\nimpl Bar<()> for () { type BarT = (); }\r\n\r\nfn test<C: Bar<()>>() { }\r\n```\r\n\r\n```\r\nerror[E0277]: the trait bound `<C as Bar<()>>::BarT: Bar<()>` is not satisfied\r\n --> src/main.rs:6:1\r\n  |\r\n6 | fn test<C: Bar<()>>() { }\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Bar<()>` is not implemented for `<C as Bar<()>>::BarT`\r\n  |\r\n  = help: consider adding a `where <C as Bar<()>>::BarT: Bar<()>` bound\r\n  = note: required by `Bar`\r\n```\r\ndespite the `C::BarT: Bar<()>` bound being required by the definition of `Bar` itself, and in fact this means that the trait `Bar<T>` can never be mentioned.\r\n\r\nThis similar example ([playground](https://play.rust-lang.org/?gist=c70e905d4f3aa5d038dda6c0ea5a33fa&version=stable)) that doesn't use an associated type in the trait parameter compiles:\r\n```\r\ntrait Foo { type FooT: Foo; }\r\nimpl Foo for () { type FooT = (); }\r\ntrait Bar<T: Foo> { type BarT: Bar<T>; }\r\nimpl Bar<()> for () { type BarT = (); }\r\n\r\nfn test<C: Bar<()>>() { }\r\n```\r\n\r\nwhile this version ([playground](https://play.rust-lang.org/?gist=74b0aacc13661da235b55185f17c2f55&version=stable)), which uses a third trait to avoid the self-reference, does not:\r\n```\r\ntrait Foo { type FooT: Foo; }\r\nimpl Foo for () { type FooT = (); }\r\ntrait Bar<T: Foo> { type BarT: Baz<T::FooT>; }\r\nimpl Bar<()> for () { type BarT = (); }\r\ntrait Baz<T: Foo> { }\r\nimpl Baz<()> for () { }\r\n\r\nfn test<C: Bar<()>>() { }\r\n```\r\n\r\nIs this just a missing normalization step?", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43475/timeline", "performed_via_github_app": null, "state_reason": "completed"}