{"url": "https://api.github.com/repos/rust-lang/rust/issues/15788", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15788/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15788/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15788/events", "html_url": "https://github.com/rust-lang/rust/issues/15788", "id": 38199604, "node_id": "MDU6SXNzdWUzODE5OTYwNA==", "number": 15788, "title": "Are generics under `#![no_std]` implicitly DST now? ", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-18T18:16:57Z", "updated_at": "2015-07-30T01:59:30Z", "closed_at": "2015-07-30T01:59:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Transcript of something that I saw today that I thought was odd:\n\n```\n% cat /tmp/foo_no_std.rs\n#![no_std]\n#![crate_type=\"lib\"]\n\npub fn foo<T>(b: bool, x: T, f: |T| -> int) -> int {\n    if b {\n        f(x)\n    } else {\n        3\n    }\n}\n% cat /tmp/foo_w_std.rs\n#![crate_type=\"lib\"]\n\npub fn foo<T>(b: bool, x: T, f: |T| -> int) -> int {\n    if b {\n        f(x)\n    } else {\n        3\n    }\n}\n% ~/opt/rust-0.10/bin/rustc --version\n/Users/fklock/opt/rust-0.10/bin/rustc 0.10 (46867cc 2014-04-02 16:59:39 -0700)\nhost: x86_64-apple-darwin\n% ~/opt/rust-0.11/bin/rustc --version\nrustc 0.11.0 (aa1163b92de7717eb7c5eba002b4012e0574a7fe 2014-06-27 12:50:16 -0700)\n% ~/opt/rust-0.10/bin/rustc /tmp/foo_w_std.rs\n% ~/opt/rust-0.10/bin/rustc /tmp/foo_no_std.rs\n% ~/opt/rust-0.11/bin/rustc /tmp/foo_w_std.rs\n% ~/opt/rust-0.11/bin/rustc /tmp/foo_no_std.rs\n/tmp/foo_no_std.rs:4:24: 4:25 error: variable `x` has dynamically sized type `T`\n/tmp/foo_no_std.rs:4 pub fn foo<T>(b: bool, x: T, f: |T| -> int) -> int {\n                                            ^\nerror: aborting due to previous error\n% \n```\n\n---\n\nNow, to be fair, I do remember that I had to start adding the `trait Sized` with the appropriate lang item when using `#![no_std]` at some point.  And that was okay, because I got a message telling me to do so (or at least, a message saying it was missing, which is close enough).\n\nBut this seems to go a step further and somehow remove the implicit Sized-ness from generic type parameters?  (Or have I overlooked some obvious goof in the code above?)\n\n---\n\nAt @cmr's suggestion, I changed the code to this:\n\n``` rust\n#![feature(lang_items)]\n#![no_std]\n#![crate_type=\"lib\"]\n\n#[lang=\"sized\"] pub trait Sized { }\n\npub fn foo<T>(b: bool, x: T, f: |T| -> int) -> int {\n    if b {\n        f(x)\n    } else {\n        3\n    }\n}\n```\n\nAnd it now compiles.\n\nSo okay -- maybe we just need to improve the error reporting for the original case to check if the `Sized` lang item is defined, and if not, include a note to the user that they may want to add it.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15788/timeline", "performed_via_github_app": null, "state_reason": "completed"}