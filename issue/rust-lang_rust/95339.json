{"url": "https://api.github.com/repos/rust-lang/rust/issues/95339", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95339/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95339/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95339/events", "html_url": "https://github.com/rust-lang/rust/issues/95339", "id": 1181950165, "node_id": "I_kwDOAAsO6M5GcyDV", "number": 95339, "title": "Suggest borrowing when user tries to convert `T` to `&U` but only `impl From<T> for U` exists", "user": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-26T18:04:38Z", "updated_at": "2022-03-27T20:33:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=da4e717b795a5755355618e0a8773d50\r\n\r\n```rust\r\nstruct Foo;\r\nimpl From<u64> for Foo {\r\n    fn from(_: u64) -> Foo { Foo }\r\n}\r\n\r\nfn foo(_: &Foo) {}\r\n\r\nfn main() {\r\n    foo(42u64.into());\r\n    //  ^^^^^^^^^^^\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0277]: the trait bound `&Foo: From<u64>` is not satisfied\r\n --> src/main.rs:9:15\r\n  |\r\n9 |     foo(42u64.into());\r\n  |               ^^^^ the trait `From<u64>` is not implemented for `&Foo`\r\n  |\r\n  = help: the following implementations were found:\r\n            <Foo as From<u64>>\r\n  = note: required because of the requirements on the impl of `Into<&Foo>` for `u64`\r\n\r\n```\r\n\r\nIdeally the output should look like:\r\n\r\n```diff\r\nerror[E0277]: the trait bound `&Foo: From<u64>` is not satisfied\r\n --> src/main.rs:9:15\r\n  |\r\n9 |     foo(42u64.into());\r\n  |               ^^^^ the trait `From<u64>` is not implemented for `&Foo`\r\n  |\r\n+ = help: consider borrowing here: `&42u64.into()`\r\n  = help: the following implementations were found:\r\n            <Foo as From<u64>>\r\n  = note: required because of the requirements on the impl of `Into<&Foo>` for `u64`\r\n\r\n```\r\n\r\nIt becomes hard to spot that you should borrow when you have `impl From<T> for U` and you are using `foo(T.into())` but `foo` expects `&U`. For example an output from Rust Analyzer:\r\n```\r\nerror[E0277]: the trait bound `&syntax::ast::Type: From<syntax::ast::InferType>` is not satisfied\r\n   --> crates/ide/src/hover/render.rs:297:54\r\n    |\r\n297 |     let ty = sema.resolve_type(infer_type.to_owned().into());\r\n    |                                                      ^^^^ the trait `From<syntax::ast::InferType>` is not implemented for `&syntax::ast::Type`\r\n    |\r\n    = help: the following implementations were found:\r\n              <syntax::ast::Type as From<syntax::ast::ArrayType>>\r\n              <syntax::ast::Type as From<syntax::ast::DynTraitType>>\r\n              <syntax::ast::Type as From<syntax::ast::FnPtrType>>\r\n              <syntax::ast::Type as From<syntax::ast::ForType>>\r\n            and 10 others\r\n    = note: required because of the requirements on the impl of `Into<&syntax::ast::Type>` for `syntax::ast::InferType`\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95339/timeline", "performed_via_github_app": null, "state_reason": null}