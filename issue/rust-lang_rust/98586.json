{"url": "https://api.github.com/repos/rust-lang/rust/issues/98586", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98586/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98586/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98586/events", "html_url": "https://github.com/rust-lang/rust/issues/98586", "id": 1286127545, "node_id": "I_kwDOAAsO6M5MqL-5", "number": 98586, "title": "error: internal compiler error: unexpected panic", "user": {"login": "PeterWrighten", "id": 45826386, "node_id": "MDQ6VXNlcjQ1ODI2Mzg2", "avatar_url": "https://avatars.githubusercontent.com/u/45826386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterWrighten", "html_url": "https://github.com/PeterWrighten", "followers_url": "https://api.github.com/users/PeterWrighten/followers", "following_url": "https://api.github.com/users/PeterWrighten/following{/other_user}", "gists_url": "https://api.github.com/users/PeterWrighten/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterWrighten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterWrighten/subscriptions", "organizations_url": "https://api.github.com/users/PeterWrighten/orgs", "repos_url": "https://api.github.com/users/PeterWrighten/repos", "events_url": "https://api.github.com/users/PeterWrighten/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterWrighten/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-06-27T17:30:13Z", "updated_at": "2022-06-27T17:53:59Z", "closed_at": "2022-06-27T17:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(ptr_metadata)]\r\nuse std::slice::from_raw_parts_mut;\r\n\r\n// assume there is a slice\r\n\r\nstruct Aslice<'a, T>(&'a mut [T]);\r\n\r\nimpl<T> Aslice<'_, T> {\r\n    pub fn new(slice: &'_ mut [T]) -> Aslice<'_, T> {\r\n        Self(slice)\r\n    }\r\n    pub fn split_at_mut(&mut self, mid: usize) -> (&mut [T], &mut [T]) {\r\n        let len = self.0.len();\r\n        let ptr = self.0.as_mut_ptr();\r\n\r\n        unsafe {\r\n            assert!(mid <= len);\r\n            (from_raw_parts_mut(ptr, mid),\r\n             from_raw_parts_mut(ptr.add(mid), len - mid))\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let mut demo: Aslice<u8> = Aslice::new(&mut [1, 0, 3, 4]);\r\n    let (l, r) = demo.split_at_mut(2);\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.63.0-nightly (43347397f 2022-06-23) running on x86_64-apple-darwin\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: unused variable: `l`\r\n  --> split.rs:26:10\r\n   |\r\n26 |     let (l, r) = demo.split_at_mut(2);\r\n   |          ^ help: if this is intentional, prefix it with an underscore: `_l`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused variable: `r`\r\n  --> split.rs:26:13\r\n   |\r\n26 |     let (l, r) = demo.split_at_mut(2);\r\n   |             ^ help: if this is intentional, prefix it with an underscore: `_r`\r\n\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', compiler/rustc_borrowck/src/diagnostics/region_errors.rs:683:52\r\nstack backtrace:\r\n   0:        0x1020a0cc4 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h19a34f6b08057c5d\r\n   1:        0x1020fb94b - core::fmt::write::h0219391aa43504e3\r\n   2:        0x102093498 - std::io::Write::write_fmt::h69e8693d4130e6ba\r\n   3:        0x1020a3f8d - std::panicking::default_hook::{{closure}}::h95ac03d981611120\r\n   4:        0x1020a3ce4 - std::panicking::default_hook::h084699d30db1b565\r\n   5:        0x10f3778fa - rustc_driver[76b32157870aef16]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n   6:        0x1020a45eb - std::panicking::rust_panic_with_hook::h89e4112bb304b99f\r\n   7:        0x1020a442a - std::panicking::begin_panic_handler::{{closure}}::haf8ad06af5422770\r\n   8:        0x1020a1147 - std::sys_common::backtrace::__rust_end_short_backtrace::h9967046c30641ece\r\n   9:        0x1020a413a - _rust_begin_unwind\r\n  10:        0x1021253a3 - core::panicking::panic_fmt::he5643ce24b81a158\r\n  11:        0x102125287 - core::panicking::panic::h79f06b2be57f266a\r\n  12:        0x1124faa19 - <rustc_borrowck[34e0a22444b90d60]::MirBorrowckCtxt>::report_general_error\r\n  13:        0x112507870 - rustc_borrowck[34e0a22444b90d60]::do_mir_borrowck\r\n  14:        0x11246fb75 - <rustc_infer[c0434f3c8aa8ed67]::infer::InferCtxtBuilder>::enter::<rustc_middle[476b514a7a22aade]::mir::query::BorrowCheckResult, rustc_borrowck[34e0a22444b90d60]::mir_borrowck::{closure#0}>\r\n  15:        0x1124ff30c - rustc_borrowck[34e0a22444b90d60]::mir_borrowck\r\n  16:        0x1124d8ad3 - <rustc_borrowck[34e0a22444b90d60]::provide::{closure#0} as core[221c305823e90d2e]::ops::function::FnOnce<(rustc_middle[476b514a7a22aade]::ty::context::TyCtxt, rustc_span[785e9444a6c5cb8]::def_id::LocalDefId)>>::call_once\r\n  17:        0x11293f5bc - rustc_query_system[ea4728f35e615642]::query::plumbing::try_execute_query::<rustc_query_impl[86a2182b50615c12]::plumbing::QueryCtxt, rustc_query_system[ea4728f35e615642]::query::caches::DefaultCache<rustc_span[785e9444a6c5cb8]::def_id::LocalDefId, &rustc_middle[476b514a7a22aade]::mir::query::BorrowCheckResult>>\r\n  18:        0x112a03133 - rustc_query_system[ea4728f35e615642]::query::plumbing::get_query::<rustc_query_impl[86a2182b50615c12]::queries::mir_borrowck, rustc_query_impl[86a2182b50615c12]::plumbing::QueryCtxt>\r\n  19:        0x10f43ecb3 - <rustc_middle[476b514a7a22aade]::hir::map::Map>::par_body_owners::<rustc_interface[d9d6d6a761712c9c]::passes::analysis::{closure#2}::{closure#0}>\r\n  20:        0x10f42e3a0 - <rustc_session[9a25f561c8ac5b8c]::session::Session>::time::<(), rustc_interface[d9d6d6a761712c9c]::passes::analysis::{closure#2}>\r\n  21:        0x10f41bb23 - rustc_interface[d9d6d6a761712c9c]::passes::analysis\r\n  22:        0x112996d06 - rustc_query_system[ea4728f35e615642]::query::plumbing::try_execute_query::<rustc_query_impl[86a2182b50615c12]::plumbing::QueryCtxt, rustc_query_system[ea4728f35e615642]::query::caches::DefaultCache<(), core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>>>\r\n  23:        0x112a3e11f - rustc_query_system[ea4728f35e615642]::query::plumbing::get_query::<rustc_query_impl[86a2182b50615c12]::queries::analysis, rustc_query_impl[86a2182b50615c12]::plumbing::QueryCtxt>\r\n  24:        0x10f330b42 - <rustc_interface[d9d6d6a761712c9c]::passes::QueryContext>::enter::<rustc_driver[76b32157870aef16]::run_compiler::{closure#1}::{closure#2}::{closure#3}, core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>>\r\n  25:        0x10f310307 - <rustc_interface[d9d6d6a761712c9c]::interface::Compiler>::enter::<rustc_driver[76b32157870aef16]::run_compiler::{closure#1}::{closure#2}, core[221c305823e90d2e]::result::Result<core[221c305823e90d2e]::option::Option<rustc_interface[d9d6d6a761712c9c]::queries::Linker>, rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>>\r\n  26:        0x10f366c08 - rustc_span[785e9444a6c5cb8]::with_source_map::<core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>, rustc_interface[d9d6d6a761712c9c]::interface::create_compiler_and_run<core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>, rustc_driver[76b32157870aef16]::run_compiler::{closure#1}>::{closure#1}>\r\n  27:        0x10f310f59 - <scoped_tls[ac36cd0d3072e3d3]::ScopedKey<rustc_span[785e9444a6c5cb8]::SessionGlobals>>::set::<rustc_interface[d9d6d6a761712c9c]::interface::run_compiler<core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>, rustc_driver[76b32157870aef16]::run_compiler::{closure#1}>::{closure#0}, core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>>\r\n  28:        0x10f363b39 - std[687efe2e84a887e3]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[d9d6d6a761712c9c]::util::run_in_thread_pool_with_globals<rustc_interface[d9d6d6a761712c9c]::interface::run_compiler<core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>, rustc_driver[76b32157870aef16]::run_compiler::{closure#1}>::{closure#0}, core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>>::{closure#0}, core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>>\r\n  29:        0x10f333731 - <<std[687efe2e84a887e3]::thread::Builder>::spawn_unchecked_<rustc_interface[d9d6d6a761712c9c]::util::run_in_thread_pool_with_globals<rustc_interface[d9d6d6a761712c9c]::interface::run_compiler<core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>, rustc_driver[76b32157870aef16]::run_compiler::{closure#1}>::{closure#0}, core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>>::{closure#0}, core[221c305823e90d2e]::result::Result<(), rustc_errors[c5f7bee7329b24ad]::ErrorGuaranteed>>::{closure#1} as core[221c305823e90d2e]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  30:        0x1020ad897 - std::sys::unix::thread::Thread::new::thread_start::h78766be5338e8a5c\r\n  31:     0x7ff8185324e1 - __pthread_start\r\n\r\nerror: internal compiler error: unexpected panic\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98586/timeline", "performed_via_github_app": null, "state_reason": "completed"}