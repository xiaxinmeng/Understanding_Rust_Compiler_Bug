{"url": "https://api.github.com/repos/rust-lang/rust/issues/45271", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45271/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45271/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45271/events", "html_url": "https://github.com/rust-lang/rust/issues/45271", "id": 265464938, "node_id": "MDU6SXNzdWUyNjU0NjQ5Mzg=", "number": 45271, "title": "Lifetime errors for referenced objects when reference is moved are not clear", "user": {"login": "mqudsi", "id": 606923, "node_id": "MDQ6VXNlcjYwNjkyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mqudsi", "html_url": "https://github.com/mqudsi", "followers_url": "https://api.github.com/users/mqudsi/followers", "following_url": "https://api.github.com/users/mqudsi/following{/other_user}", "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions", "organizations_url": "https://api.github.com/users/mqudsi/orgs", "repos_url": "https://api.github.com/users/mqudsi/repos", "events_url": "https://api.github.com/users/mqudsi/events{/privacy}", "received_events_url": "https://api.github.com/users/mqudsi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-14T05:01:39Z", "updated_at": "2020-02-14T09:36:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I believe there is room for improvement here:\r\n\r\n```rust\r\nuse std::path::{Path,PathBuf};\r\nuse std::thread;\r\n\r\nfn main() -> () {\r\n    let pb = PathBuf::from(\".\");\r\n    let p = Path::new(&pb);\r\n    thread::spawn(move|| {\r\n        println!(\"{:?}\", p);\r\n    });\r\n}\r\n```\r\n\r\nThis is obviously not correct, since `p` depends on `pb` which may not live as long, now that `pb` has been moved to the thread's scope and shares its lifetime.\r\n\r\nHowever, the error when compiling this is problematic, since it doesn't make it clear at all why this object's lifetime needs to be increased:\r\n\r\n```rust\r\n> rustc +nightly ./test.rs\r\nerror[E0597]: `pb` does not live long enough\r\n  --> ./test.rs:6:24\r\n   |\r\n6  |     let p = Path::new(&pb);\r\n   |                        ^^ does not live long enough\r\n...\r\n10 | }\r\n   | - borrowed value only lives until here\r\n   |\r\n   = note: borrowed value must be valid for the static lifetime...\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nIt's easy to imagine a case where it's not as simple to figure out what is going on (perhaps a chain of references, separated by hundreds of lines of code, that compiled just fine until one of these latter references was moved to spawn a thread, and suddenly the lifetime of a completely different variable in code that wasn't touched is throwing an error).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45271/timeline", "performed_via_github_app": null, "state_reason": null}