{"url": "https://api.github.com/repos/rust-lang/rust/issues/74268", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74268/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74268/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74268/events", "html_url": "https://github.com/rust-lang/rust/issues/74268", "id": 655398016, "node_id": "MDU6SXNzdWU2NTUzOTgwMTY=", "number": 74268, "title": "Allow `unsafe` modifier before control flow blocks like `unsafe match`, `unsafe loop`, etc.", "user": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-12T13:11:30Z", "updated_at": "2020-07-12T13:37:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Motivation\r\n\r\nI don't know why we not yet allow unsafe before: `match`, `loop`, `while`, `for` (1).\r\nI agree that `unsafe if` is ambiguous as we don't know for sure if the unsafe is applied to only the first `if` or all\r\nother `else` clauses.\r\n\r\nNot allowing `unsafe` modifier before (1) makes people have to indent the code for no other benefits.\r\n\r\n```rust\r\nunsafe fn foo<T>(t: T) -> T { unimplemented!() }\r\n\r\nfn bar<T>(t: T, yes: bool) -> Option<T> {\r\n    unsafe {\r\n        match yes {\r\n            true => Some(foo(t)),\r\n            false => None,\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nWith allowing `unsafe` modifier:\r\n```rust\r\nfn bar<T>(t: T, yes: bool) -> Option<T> {\r\n    unsafe match yes {\r\n        true => Some(foo(t)),\r\n        false => None,\r\n    }\r\n}\r\n```\r\n\r\n# Downsides\r\n\r\n* Allow `unsafe` modifier makes grepping for `unsafe {` is not enough\r\n  for finding all unsafe blocks in functions/methods.\r\n* This may be overused because when there are no need to indent code for too long,\r\npeople may not split unsafe blocks to smaller scope.\r\n\r\ncc @RalfJung", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74268/timeline", "performed_via_github_app": null, "state_reason": null}