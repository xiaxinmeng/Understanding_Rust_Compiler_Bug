{"url": "https://api.github.com/repos/rust-lang/rust/issues/96342", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96342/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96342/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96342/events", "html_url": "https://github.com/rust-lang/rust/issues/96342", "id": 1213347012, "node_id": "I_kwDOAAsO6M5IUjTE", "number": 96342, "title": "`--exclude` is broken for individual files", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120005, "node_id": "MDU6TGFiZWwxMjAwMDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-testsuite", "name": "A-testsuite", "color": "f7e101", "default": false, "description": "Area: The testsuite used to check the correctness of rustc"}, {"id": 234876, "node_id": "MDU6TGFiZWwyMzQ4NzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-hard", "name": "E-hard", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Hard / a lot"}, {"id": 325438536, "node_id": "MDU6TGFiZWwzMjU0Mzg1MzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-bootstrap", "name": "T-bootstrap", "color": "bfd4f2", "default": false, "description": "Relevant to the bootstrap subteam: Rust's build system (x.py and src/bootstrap)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-04-23T15:49:50Z", "updated_at": "2022-08-07T05:37:31Z", "closed_at": "2022-08-07T05:37:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n$ x t src/test/ui --exclude src/test/ui\r\nSkipping Suite(test::src/test/ui) because it is excluded\r\nSkipping Suite(test::src/test/ui) because it is excluded\r\n$ x t src/test/ui/attr-start.rs --exclude src/test/ui/attr-start.rs\r\nCheck compiletest suite=ui mode=ui (x86_64-unknown-linux-gnu(x86_64-unknown-linux-gnu) -> x86_64-unknown-linux-gnu(x86_64-unknown-linux-gnu))\r\n\r\nrunning 1 test\r\n.\r\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 12951 filtered out; finished in 0.09s\r\n```\r\n\r\nThis is harder to fix than it looks - if you try something simple like \r\n```diff\r\ndiff --git a/src/bootstrap/builder.rs b/src/bootstrap/builder.rs\r\nindex 0c4f3265dbf..e0acf20ae48 100644\r\n--- a/src/bootstrap/builder.rs\r\n+++ b/src/bootstrap/builder.rs\r\n@@ -225,8 +225,8 @@ fn maybe_run(&self, builder: &Builder<'_>, pathset: &PathSet) {\r\n         }\r\n     }\r\n \r\n-    fn is_excluded(&self, builder: &Builder<'_>, pathset: &PathSet) -> bool {\r\n-        if builder.config.exclude.iter().any(|e| pathset.has(&e.path, e.kind)) {\r\n+    fn is_excluded(&self, builder: &Builder<'_>, pathset: &PathSet, should_run: &ShouldRun) -> bool {\r\n+        if builder.config.exclude.iter().any(|e| pathset.has(&e.path, e.kind) || should_run.is_suite_path(&e.path).is_some()) {\r\n             eprintln!(\"Skipping {:?} because it is excluded\", pathset);\r\n             return true;\r\n         }\r\n```\r\nyou end up skipping the whole suite:\r\n```\r\nSkipping Suite(test::src/test/ui) because it is excluded\r\nSkipping Suite(test::src/test/ui) because it is excluded\r\n```\r\n\r\nI think the proper fix for this involves adding support in compiletest itself :( by passing `--exclude p` for each `is_valid_test_suite_arg` in `config.exclude`.\r\n\r\n@rustbot label +A-rustbuild +A-testsuite +C-bug +E-hard", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96342/timeline", "performed_via_github_app": null, "state_reason": "completed"}