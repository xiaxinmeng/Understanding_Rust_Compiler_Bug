{"url": "https://api.github.com/repos/rust-lang/rust/issues/92416", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92416/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92416/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92416/events", "html_url": "https://github.com/rust-lang/rust/issues/92416", "id": 1090726484, "node_id": "I_kwDOAAsO6M5BAypU", "number": 92416, "title": "Invalid reached the recursion limit error: long types where there are none", "user": {"login": "afetisov", "id": 12111996, "node_id": "MDQ6VXNlcjEyMTExOTk2", "avatar_url": "https://avatars.githubusercontent.com/u/12111996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afetisov", "html_url": "https://github.com/afetisov", "followers_url": "https://api.github.com/users/afetisov/followers", "following_url": "https://api.github.com/users/afetisov/following{/other_user}", "gists_url": "https://api.github.com/users/afetisov/gists{/gist_id}", "starred_url": "https://api.github.com/users/afetisov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afetisov/subscriptions", "organizations_url": "https://api.github.com/users/afetisov/orgs", "repos_url": "https://api.github.com/users/afetisov/repos", "events_url": "https://api.github.com/users/afetisov/events{/privacy}", "received_events_url": "https://api.github.com/users/afetisov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-12-29T20:09:30Z", "updated_at": "2021-12-31T10:01:37Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I have encountered the weirdest bug. When I run `cargo build` or `cargo test` on my project, compilation fails with the error\r\n\r\n```text\r\nerror: reached the recursion limit while instantiating `values::Values::<std::option::Op...e@src/values.rs:189:20: 189:65]>`\r\n   --> src/values.rs:189:9\r\n    |\r\n189 |         result.map(|_, _, val| val.expect(\"uninitialized value\"))\r\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\nnote: `values::Values::<T>::map` defined here\r\n   --> src/values.rs:100:5\r\n    |\r\n100 | /     pub fn map<R, F>(self, mut f: F) -> Values<R>\r\n101 | |         where F: FnMut(Principal, ValueIdx, T) -> R,\r\n    | |____________________________________________________^\r\n    = note: the full type name has been written to '.../target/debug/deps/ex-f9bacf9cb1022b27.long-type.txt'\r\n```\r\n\r\nThe error mentions long types, but the file mentioned contains the following text:\r\n\r\n```text\r\nvalues::Values::<std::option::Option<PrimitiveValue>>::map::<PrimitiveValue, [closure@src/values.rs:189:20: 189:65]>\r\n```\r\n\r\nwhich doesn't look like an infinite recursion at all. The function in question looks like\r\n\r\n```rust\r\n    pub fn map<R, F>(self, mut f: F) -> Values<R>\r\n        where F: FnMut(Party, Idx, T) -> R,\r\n    {\r\n        self.into_iter()\r\n            .map(|(p, idx, val)| (p, idx, f(p, idx, val)))\r\n            .collect()\r\n    }\r\n```\r\n\r\nand the type is \r\n\r\n```rust\r\npub struct Values<T> {\r\n    pub inner: BTreeMap<Party, Vec<T>>,\r\n}\r\n```\r\n\r\nNone of these hint at any possible infinite recursion.\r\n\r\nEven worse, the error doesn't happen with `cargo check`, only when the project is actually built.\r\n\r\nUnfortunately, I can't provide an actual example, since the codebase is proprietary and I was unable to minimize the example thus far. Not for the lack of trying, mind you. Changing the body of `Values::map` into `loop {}` immediately removes the error, which just shouldn't reasonably happen since the type signature is unchanged and should be unaffected by the body. If I try to minimize the example by running `rustc -Z unpretty=expanded`, then once I fix compile errors (either enable all features and use nightly, or loopify the offending code) the error doesn't reproduce.\r\n\r\nSo the only way to minimize the example is to manually dredge through the crates, carefully removing code, when any removal could remove the error :-(\r\n\r\nI will try to make a minimal example later. If I ever succeed, I will add it to this report.\r\n\r\nThe error reproduces on stable, beta and nightly toolchains. I have reproduced in after `cargo clean`, and on a crate extracted into a separate project.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc +stable --version --verbose`:\r\n```\r\nrustc 1.57.0 (f1edd0429 2021-11-29)\r\nbinary: rustc\r\ncommit-hash: f1edd0429582dd29cccacaf50fd134b05593bd9c\r\ncommit-date: 2021-11-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n`rustc +nightly --version --verbose`\r\n```\r\nrustc 1.59.0-nightly (83b15bfe1 2021-12-28)\r\nbinary: rustc\r\ncommit-hash: 83b15bfe1c15f325bc186ebfe3691b729ed59f2b\r\ncommit-date: 2021-12-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92416/timeline", "performed_via_github_app": null, "state_reason": null}