{"url": "https://api.github.com/repos/rust-lang/rust/issues/65921", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65921/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65921/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65921/events", "html_url": "https://github.com/rust-lang/rust/issues/65921", "id": 513700840, "node_id": "MDU6SXNzdWU1MTM3MDA4NDA=", "number": 65921, "title": "Diagnostic for mismatched pointers type could be improved", "user": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-29T05:26:30Z", "updated_at": "2019-10-29T10:23:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following snippet is build with Rust 1.38.0: https://rust.godbolt.org/z/NGTGo-\r\n<details>\r\n<summary>snippet</summary>\r\n\r\n```rust\r\nmod unique {\r\n    type HANDLE = *mut ::std::os::raw::c_void;\r\n    type PHANDLE = *mut HANDLE;\r\n    fn foo(token: PHANDLE) {}\r\n\r\n    fn bar() {\r\n        let token: HANDLE = ::std::ptr::null_mut();\r\n        foo(token as *mut _);\r\n        foo(&mut token);\r\n        foo(&token);\r\n        foo(token);\r\n    }\r\n}\r\n\r\nmod shared {\r\n    type HANDLE = *const ::std::os::raw::c_void;\r\n    type PHANDLE = *const HANDLE;\r\n    fn foo(token: PHANDLE) {}\r\n\r\n    fn bar() {\r\n        let token: HANDLE = ::std::ptr::null_mut();\r\n        foo(token as *const _);\r\n        foo(&mut token);\r\n        foo(&token);\r\n        foo(token);\r\n    }\r\n}\r\n\r\nmod unique_mut {\r\n    type HANDLE = *mut ::std::os::raw::c_void;\r\n    type PHANDLE = *mut HANDLE;\r\n    fn foo(token: PHANDLE) {}\r\n\r\n    fn bar() {\r\n        let mut token: HANDLE = ::std::ptr::null_mut();\r\n        foo(token as *mut _);\r\n        foo(&mut token);\r\n        foo(&token);\r\n        foo(token);\r\n    }\r\n}\r\n```\r\n</details>\r\nThe compiler outputs:\r\n<details>\r\n<summary>rustc's output</summary>\r\n\r\n```rust\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:10:13\r\n   |\r\n10 |         foo(&token);\r\n   |             ^^^^^^ types differ in mutability\r\n   |\r\n   = note: expected type `*mut *mut std::ffi::c_void`\r\n              found type `&*mut std::ffi::c_void`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:11:13\r\n   |\r\n11 |         foo(token);\r\n   |             ^^^^^ expected *-ptr, found enum `std::ffi::c_void`\r\n   |\r\n   = note: expected type `*mut *mut std::ffi::c_void`\r\n              found type `*mut std::ffi::c_void`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:25:13\r\n   |\r\n25 |         foo(token);\r\n   |             ^^^^^ expected *-ptr, found enum `std::ffi::c_void`\r\n   |\r\n   = note: expected type `*const *const std::ffi::c_void`\r\n              found type `*const std::ffi::c_void`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:38:13\r\n   |\r\n38 |         foo(&token);\r\n   |             ^^^^^^ types differ in mutability\r\n   |\r\n   = note: expected type `*mut *mut std::ffi::c_void`\r\n              found type `&*mut std::ffi::c_void`\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:39:13\r\n   |\r\n39 |         foo(token);\r\n   |             ^^^^^ expected *-ptr, found enum `std::ffi::c_void`\r\n   |\r\n   = note: expected type `*mut *mut std::ffi::c_void`\r\n              found type `*mut std::ffi::c_void`\r\n\r\nerror: aborting due to 5 previous errors\r\n```\r\n</details>\r\n\r\nI'm a beginner in Rust's FFI. So my questions may seems silly.\r\n\r\n1. In module `unique`, line 8: we mutually borrow `token`, but `token` is never defined\r\nwith `let mut` syntax. Is this accepted?\r\n\r\n2. Same question but for module `shared`, line 23.\r\n\r\n3. Can we suggest borrowing with appropriate mutability  in `foo(token)` lines?\r\n\r\n   For example:\r\n   ```rust\r\n   error[E0308]: mismatched types\r\n     --> src/lib.rs:10:13\r\n      |\r\n   10 |         foo(&token);\r\n      |             ^^^^^^ types differ in mutability\r\n      |\r\n      = note: expected type `*mut *mut std::ffi::c_void`\r\n                 found type `&*mut std::ffi::c_void`\r\n        try: `&mut token`\r\n\r\n   error[E0308]: mismatched types\r\n     --> src/lib.rs:11:13\r\n      |\r\n   11 |         foo(token);\r\n      |             ^^^^^ expected *-ptr, found enum `std::ffi::c_void`\r\n      |\r\n      = note: expected type `*mut *mut std::ffi::c_void`\r\n                 found type `*mut std::ffi::c_void`\r\n        try: `&mut token`\r\n   ```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65921/timeline", "performed_via_github_app": null, "state_reason": null}