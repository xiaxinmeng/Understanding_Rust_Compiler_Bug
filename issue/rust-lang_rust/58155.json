{"url": "https://api.github.com/repos/rust-lang/rust/issues/58155", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58155/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58155/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58155/events", "html_url": "https://github.com/rust-lang/rust/issues/58155", "id": 406396016, "node_id": "MDU6SXNzdWU0MDYzOTYwMTY=", "number": 58155, "title": "[Experiment] Incr. Comp.: Replace query result hashing with early-exit deserialization.", "user": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-04T15:57:28Z", "updated_at": "2019-11-20T11:46:40Z", "closed_at": "2019-11-20T11:46:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The red-green algorithm of incremental compilation needs to compare query results in order to determine if a result has actually changed after it is has been recomputed. At the moment this is facilitated by creating a `Fingerprint` of every result and storing that `Fingerprint` together with the `DepGraph`. This fingerprinting takes up a considerable amount of time during the initial compilation session (and any other session that re-computes many results). \r\n\r\nThere is a different way of implementing this check that might be more efficient: Instead of computing fingerprints, we \"just\" store the result in the on-disk cache. When we encounter the need to compare a cached result to the newly computed one, we try to load it from the cache. However, we provide an early exit path to this deserialization: As soon as the deserializer encounters something that is not yet in an interner, it fails gracefully. Since any part of the result already has to be present in the interners if it were actually equal to the re-computed one, we know that it must be different. This early exit also has the side effect that we'll never load any unneeded data into interners. \r\n\r\nThe advantages of this approach are:\r\n- fingerprinting is eager: We always have to do it although we might never need the fingerprint. Interner-based comparison postpones most of the work to the point when it's actually needed.\r\n- fingerprinting is eager in a second way: It always has to process the whole value.\r\n- fingerprinting has to duplicate work unless there is an explicit sharing mechanism (e.g. caching the hash of sub-components and then hashing those hashes) - interner-based comparison has sharing built right into it. \r\n- fingerprinting has to use a good quality hash function (SipHash at the moment). Interners use FxHash which is a lot faster.\r\n- because most of the cached results contain interned values, much of them has to be hashed during deserialization anyway. \r\n\r\nThe downside of this approach is: \r\n- every query result has to be stored in the on-disk cache, so it's available for comparison. \r\n\r\nThe steps to implement this are:\r\n1. Make sure that all query results are stored to the on-disk cache.\r\n2. Allow for deserialization to fail if something is not in the interner.\r\n3. Make red-green marking use the new approach.\r\n4. Turn off fingerprinting for query results.\r\n\r\n(TODO: links to code)\r\n\r\ncc @Xanewok @rust-lang/wg-compiler-performance ", "closed_by": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58155/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58155/timeline", "performed_via_github_app": null, "state_reason": "completed"}