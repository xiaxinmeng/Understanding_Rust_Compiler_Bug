{"url": "https://api.github.com/repos/rust-lang/rust/issues/50706", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50706/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50706/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50706/events", "html_url": "https://github.com/rust-lang/rust/issues/50706", "id": 322591555, "node_id": "MDU6SXNzdWUzMjI1OTE1NTU=", "number": 50706, "title": "const_val_field on non-field", "user": {"login": "Thinkofname", "id": 774399, "node_id": "MDQ6VXNlcjc3NDM5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/774399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thinkofname", "html_url": "https://github.com/Thinkofname", "followers_url": "https://api.github.com/users/Thinkofname/followers", "following_url": "https://api.github.com/users/Thinkofname/following{/other_user}", "gists_url": "https://api.github.com/users/Thinkofname/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thinkofname/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thinkofname/subscriptions", "organizations_url": "https://api.github.com/users/Thinkofname/orgs", "repos_url": "https://api.github.com/users/Thinkofname/repos", "events_url": "https://api.github.com/users/Thinkofname/events{/privacy}", "received_events_url": "https://api.github.com/users/Thinkofname/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 203429200, "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high", "name": "P-high", "color": "eb6420", "default": false, "description": "High priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-13T12:54:39Z", "updated_at": "2018-05-19T19:37:16Z", "closed_at": "2018-05-19T19:37:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Compiler version: `rustc 1.27.0-nightly (ff2ac35db 2018-05-12)`\r\n\r\nStack trace:\r\n```\r\nthread 'main' panicked at 'const_val_field on non-field', libcore/option.rs:914:5\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:467\r\n   6: std::panicking::begin_panic_fmt\r\n             at libstd/panicking.rs:350\r\n   7: rust_begin_unwind\r\n             at libstd/panicking.rs:328\r\n   8: core::panicking::panic_fmt\r\n             at libcore/panicking.rs:71\r\n   9: core::option::expect_failed\r\n             at libcore/option.rs:914\r\n  10: rustc_mir::interpret::const_eval::const_val_field\r\n  11: rustc_mir::hair::pattern::PatternContext::const_to_pat::{{closure}}\r\n  12: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  13: rustc_mir::hair::pattern::PatternContext::const_to_pat\r\n  14: rustc_mir::hair::pattern::PatternContext::lower_path\r\n  15: rustc_mir::hair::pattern::PatternContext::lower_pattern\r\n  16: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &'a mut F>::call_once\r\n  17: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  18: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  19: <rustc_mir::hair::pattern::check_match::MatchVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  20: <rustc_mir::hair::pattern::check_match::MatchVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_expr\r\n  21: <rustc_mir::hair::pattern::check_match::MatchVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_body\r\n  22: rustc::session::Session::track_errors\r\n  23: rustc_mir::hair::pattern::check_match::check_match\r\n  24: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  25: rustc::ty::context::tls::with_related_context\r\n  26: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  27: rustc::ty::maps::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  28: rustc::hir::intravisit::Visitor::visit_nested_body\r\n  29: rustc::hir::Crate::visit_all_item_likes\r\n  30: rustc_mir::hair::pattern::check_match::check_crate\r\n  31: rustc::util::common::time\r\n  32: rustc::ty::context::tls::enter_context\r\n  33: <std::thread::local::LocalKey<T>>::with\r\n  34: rustc::ty::context::TyCtxt::create_and_enter\r\n  35: rustc_driver::driver::compile_input\r\n  36: rustc_driver::run_compiler_impl\r\n  37: <scoped_tls::ScopedKey<T>>::set\r\n  38: syntax::with_globals\r\n  39: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  40: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  41: rustc_driver::run\r\n  42: rustc_driver::main\r\n  43: std::rt::lang_start::{{closure}}\r\n  44: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  45: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  46: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:374\r\n             at libstd/rt.rs:58\r\n  47: main\r\n  48: __libc_start_main\r\n  49: <unknown>\r\nquery stack during panic:\r\n#0 [check_match] processing `Stat::from_index`\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n```\r\n\r\nCode:\r\n```rust\r\npub struct Stats;\r\n\r\n#[derive(PartialEq, Eq)]\r\npub struct StatVariant {\r\n    pub id: u8,\r\n    _priv: (),\r\n}\r\n\r\n#[derive(PartialEq, Eq)]\r\npub struct Stat {\r\n    pub variant: StatVariant,\r\n    pub index: usize,\r\n    _priv: (),\r\n}\r\n\r\nimpl Stats {\r\n\r\n    pub const TEST: StatVariant = StatVariant{id: 0, _priv: (),};\r\n    #[allow(non_upper_case_globals)]\r\n    pub const A: Stat = Stat{\r\n         variant: Self::TEST,\r\n         index: 0,\r\n         _priv: (),};\r\n}\r\n\r\nimpl Stat {\r\n    pub fn from_index(variant: StatVariant, index: usize) -> Option<Stat> {\r\n        let stat = Stat{variant, index, _priv: (),};\r\n        match stat {\r\n            Stats::A => Some(Stats::A),\r\n            _ => None,\r\n        }\r\n    }\r\n}\r\n\r\nfn main() {\r\n\r\n}\r\n```\r\n\r\nI tried to reduce it as it was originally generated by a macro, this is about as small as I could get it.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50706/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50706/timeline", "performed_via_github_app": null, "state_reason": "completed"}