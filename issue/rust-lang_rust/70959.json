{"url": "https://api.github.com/repos/rust-lang/rust/issues/70959", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70959/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70959/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70959/events", "html_url": "https://github.com/rust-lang/rust/issues/70959", "id": 597361934, "node_id": "MDU6SXNzdWU1OTczNjE5MzQ=", "number": 70959, "title": "Type checker gives confusing tip when collecting std::str::Char into std::rc::Rc using std::from::From.", "user": {"login": "hank-der-hafenarbeiter", "id": 3400693, "node_id": "MDQ6VXNlcjM0MDA2OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3400693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hank-der-hafenarbeiter", "html_url": "https://github.com/hank-der-hafenarbeiter", "followers_url": "https://api.github.com/users/hank-der-hafenarbeiter/followers", "following_url": "https://api.github.com/users/hank-der-hafenarbeiter/following{/other_user}", "gists_url": "https://api.github.com/users/hank-der-hafenarbeiter/gists{/gist_id}", "starred_url": "https://api.github.com/users/hank-der-hafenarbeiter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hank-der-hafenarbeiter/subscriptions", "organizations_url": "https://api.github.com/users/hank-der-hafenarbeiter/orgs", "repos_url": "https://api.github.com/users/hank-der-hafenarbeiter/repos", "events_url": "https://api.github.com/users/hank-der-hafenarbeiter/events{/privacy}", "received_events_url": "https://api.github.com/users/hank-der-hafenarbeiter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T15:24:45Z", "updated_at": "2020-04-11T17:24:32Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey everyone,\r\n\r\nI noticed that when collecting an `std::str::Chars` into a `std::rc::Rc` using `Rc::from(...)`, the compiler tells you to annotate the type on your variable, when you actually need to annotate the type of your `std::Iter::collect()` call.\r\n \r\nThis [code](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=50c532e502901f9eec202e1f6396010b) produces the bug:\r\n\r\n```rust\r\nfn main() {\r\n    let s = \"Hello, Github!!!!\".to_string();\r\n    let r:Rc<str> = Rc::from(s.chars().collect());\r\n}\r\n```\r\nThe compiler tells me to annotate the type of `r`, which already has a type annotation.\r\n\r\n```\r\nerror[E0283]: type annotations needed for `std::rc::Rc<str>`\r\n --> src/main.rs:5:21\r\n  |\r\n5 |     let r:Rc<str> = Rc::from(s.chars().collect());\r\n  |         -           ^^^^^^^^ cannot infer type for struct `std::rc::Rc<str>`\r\n  |         |\r\n  |         consider giving `r` a type\r\n  |\r\n  = note: cannot resolve `std::rc::Rc<str>: std::convert::From<_>`\r\n  = note: required by `std::convert::From::from`\r\n```\r\n\r\n In actuality the fix is to annotate the `collect()`-call:\r\n\r\n```rust\r\nfn main() {\r\n    let s = \"Hello, Github!!!!\".to_string();\r\n    let r:Rc<str> = Rc::from(s.chars().collect::<String>());\r\n}\r\n```\r\n\r\n### Meta\r\nI used the following version:\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0-nightly (1edd389cc 2020-03-23)\r\nbinary: rustc\r\ncommit-hash: 1edd389cc4c7b5be7a3dd4fe4b986f6017018e54\r\ncommit-date: 2020-03-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.0-nightly\r\nLLVM version: 9.0\r\n```\r\nThe current beta (1.43.0-beta.5) and stable (1.42.0) on the rust playground produce the same output.\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70959/timeline", "performed_via_github_app": null, "state_reason": null}