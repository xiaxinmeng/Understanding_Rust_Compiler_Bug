{"url": "https://api.github.com/repos/rust-lang/rust/issues/15683", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15683/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15683/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15683/events", "html_url": "https://github.com/rust-lang/rust/issues/15683", "id": 37870426, "node_id": "MDU6SXNzdWUzNzg3MDQyNg==", "number": 15683, "title": "Encoding/Decoding bytestrings with libserialize", "user": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-15T10:41:35Z", "updated_at": "2015-01-23T23:00:20Z", "closed_at": "2015-01-23T23:00:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some encoding protocols don't enforce UTF8 in strings. In this cases, it would be useful to provide functions to encode/decode a string as an array of bytes (maybe something like `read_bytestring` and `emit_bytestring`).\n\nAn example of this situation is the bencode protocol. Currently, the only way to decode a struct containig a byte string is to implement a special trait called `FromBencode`.\n\nAnother use case for this is to (de)serialize XML (see [this subreddit thread](http://www.reddit.com/r/rust/comments/2aqzcz/ann_rustxml_a_streaming_xml_library/cixvr60))\n\nShould I submit a PR to add this?\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15683/timeline", "performed_via_github_app": null, "state_reason": "completed"}