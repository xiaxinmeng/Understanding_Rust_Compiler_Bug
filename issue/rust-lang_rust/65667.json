{"url": "https://api.github.com/repos/rust-lang/rust/issues/65667", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65667/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65667/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65667/events", "html_url": "https://github.com/rust-lang/rust/issues/65667", "id": 510101573, "node_id": "MDU6SXNzdWU1MTAxMDE1NzM=", "number": 65667, "title": "Async/Await: Confusing error message when using non-Send type in async fn", "user": {"login": "dbrgn", "id": 105168, "node_id": "MDQ6VXNlcjEwNTE2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrgn", "html_url": "https://github.com/dbrgn", "followers_url": "https://api.github.com/users/dbrgn/followers", "following_url": "https://api.github.com/users/dbrgn/following{/other_user}", "gists_url": "https://api.github.com/users/dbrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrgn/subscriptions", "organizations_url": "https://api.github.com/users/dbrgn/orgs", "repos_url": "https://api.github.com/users/dbrgn/repos", "events_url": "https://api.github.com/users/dbrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrgn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "closed", "locked": false, "assignee": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-10-21T16:32:08Z", "updated_at": "2019-12-11T22:53:12Z", "closed_at": "2019-12-11T22:53:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With this `Cargo.toml`:\r\n\r\n```\r\n[package]\r\nname = \"errmsg\"\r\nversion = \"0.1.0\"\r\nedition = \"2018\"\r\n\r\n[dependencies]\r\nfutures-preview = { version = \"0.3.0-alpha.19\", features = [\"async-await\"] }\r\ntokio = \"0.2.0-alpha.6\"\r\n```\r\n\r\n...and this `main.rs`:\r\n\r\n```rust\r\nuse std::rc::Rc;\r\nuse std::time::Duration;\r\n\r\nuse tokio::timer::delay;\r\n\r\nasync fn wait() {\r\n    let rc = Rc::new(0);\r\n    println!(\"Before sleep\");\r\n    delay(tokio::clock::now() + Duration::from_millis(500)).await;\r\n    println!(\"After sleep\");\r\n}\r\n\r\n#[tokio::main]\r\nasync fn main() -> Result<(), std::io::Error> {\r\n    println!(\"Start\");\r\n    tokio::spawn(wait());\r\n    println!(\"End\");\r\n    Ok(())\r\n}\r\n```\r\n\r\n...I get this error message:\r\n\r\n```\r\n   Compiling errmsg v0.1.0 (/tmp/errmsg)\r\nerror[E0277]: `std::rc::Rc<i32>` cannot be sent between threads safely\r\n   --> src/main.rs:16:5\r\n    |\r\n16  |     tokio::spawn(wait());\r\n    |     ^^^^^^^^^^^^ `std::rc::Rc<i32>` cannot be sent between threads safely\r\n    |\r\n   ::: /home/danilo/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.0-alpha.6/src/executor.rs:100:40\r\n    |\r\n100 |     F: Future<Output = ()> + 'static + Send,\r\n    |                                        ---- required by this bound in `tokio::executor::spawn`\r\n    |\r\n    = help: within `impl std::future::Future`, the trait `std::marker::Send` is not implemented for `std::rc::Rc<i32>`\r\n    = note: required because it appears within the type `{std::rc::Rc<i32>, fn(std::time::Instant) -> tokio_timer::delay::Delay {tokio_timer::delay}, fn() -> std::time::Instant {tokio_timer::clock::now}, std::time::Instant, fn(u64) -> std::time::Duration {std::time::Duration::from_millis}, u64, std::time::Duration, tokio_timer::delay::Delay, ()}`\r\n    = note: required because it appears within the type `[static generator@src/main.rs:6:17: 11:2 {std::rc::Rc<i32>, fn(std::time::Instant) -> tokio_timer::delay::Delay {tokio_timer::delay}, fn() -> std::time::Instant {tokio_timer::clock::now}, std::time::Instant, fn(u64) -> std::time::Duration {std::time::Duration::from_millis}, u64, std::time::Duration, tokio_timer::delay::Delay, ()}]`\r\n    = note: required because it appears within the type `std::future::GenFuture<[static generator@src/main.rs:6:17: 11:2 {std::rc::Rc<i32>, fn(std::time::Instant) -> tokio_timer::delay::Delay {tokio_timer::delay}, fn() -> std::time::Instant {tokio_timer::clock::now}, std::time::Instant, fn(u64) -> std::time::Duration {std::time::Duration::from_millis}, u64, std::time::Duration, tokio_timer::delay::Delay, ()}]>`\r\n    = note: required because it appears within the type `impl std::future::Future`\r\n    = note: required because it appears within the type `impl std::future::Future`\r\n```\r\n\r\nIf I comment out the unused `rc` assignment, then everything works fine.\r\n\r\nIf comment out the `delay(..).await` statement, it works too!\r\n\r\nIf I put the `rc` assignment in a block, it compiles as well (because the `rc` is dropped by the time `await` is called).\r\n\r\nFrom what I know about the implementation of async-await, I think this is because a state machine is created that keeps the local variables across multiple await-points, right? In any case, the error message is quite confusing, especially when the await call and the non-`Send` type are not related at all.\r\n\r\nIt seems that we're back at a pre-NLL situation with the borrow checker in async functions.\r\n\r\nIn summary, two issues:\r\n\r\n- The error message is quite confusing and not all too helpful, expecially if the user doesn't know anything about the internal implementation of async-await\r\n- The `rc` could be dropped before the `await` call, which would resolve this issue", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65667/timeline", "performed_via_github_app": null, "state_reason": "completed"}