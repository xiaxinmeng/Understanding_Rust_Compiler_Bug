{"url": "https://api.github.com/repos/rust-lang/rust/issues/111520", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111520/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111520/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111520/events", "html_url": "https://github.com/rust-lang/rust/issues/111520", "id": 1708354982, "node_id": "I_kwDOAAsO6M5l022m", "number": 111520, "title": "ICE: parallel compiler: `attempted to read from stolen value: rustc_middle::thir::Thir` : `-Zthir-unsafeck=yes`", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1576178387, "node_id": "MDU6TGFiZWwxNTc2MTc4Mzg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-compiler-parallel", "name": "WG-compiler-parallel", "color": "c2e0c6", "default": false, "description": "Working group working on parallelizing the compiler"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-05-13T00:06:01Z", "updated_at": "2023-05-13T00:14:09Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\nyou need parallel compiler config  to reproduce this!\r\n\r\n`rustc -Zthreads=300  -ooutputfile   -Zthir-unsafeck=yes -Zdump-mir-dir=a file.rs`\r\n\r\n```Rust\r\n// FamilyType (GAT workaround)\r\npub trait FamilyLt<'a> {\r\n    type Out;\r\n}\r\n\r\nstruct RefMutFamily<T>(std::marker::PhantomData<T>, ());\r\nimpl<'a, T: 'a> FamilyLt<'a> for RefMutFamily<T> {\r\n    type Out = &'a mut T;\r\n}\r\n\r\npub trait Execute {\r\n    type E: Inject;\r\n    fn execute(self, value: <<Self::E as Inject>::I as FamilyLt>::Out);\r\n}\r\n\r\npub trait Inject\r\nwhere\r\n    Self: Sized,\r\n{\r\n    type I: for<'a> FamilyLt<'a>;\r\n    fn inject(_: &()) -> <Self::I as FamilyLt>::Out;\r\n}\r\n\r\nimpl<T: 'static> Inject for RefMutFamily<T> {\r\n    type I = Self;\r\n    fn inject(_: &()) -> <Self::I as FamilyLt>::Out {\r\n        unimplemented!()\r\n    }\r\n}\r\n\r\n// This struct is only used to give a hint to the compiler about the type `Q`\r\nstruct Annotate<Q>(std::marker::PhantomData<Q>);\r\nimpl<Q> Annotate<Q> {\r\n    fn new() -> Self {\r\n        Self(std::marker::PhantomData)\r\n    }\r\n}\r\n\r\n// This function annotate a closure so it can have Higher-Rank Lifetime Bounds\r\n//\r\n// See 'annotate' workaround: https://github.com/rust-lang/rust/issues/58052\r\nfn annotate<F, Q>(_q: Annotate<Q>, func: F) -> impl Execute + 'static\r\nwhere\r\n    F: for<'r> FnOnce(<<Q as Inject>::I as FamilyLt<'r>>::Out) + 'static,\r\n    Q: Inject + 'static,\r\n{\r\n    let wrapper: Wrapper<Q, F> = Wrapper(std::marker::PhantomData, func);\r\n    wrapper\r\n}\r\n\r\nstruct Wrapper<Q, F>(std::marker::PhantomData<Q>, F);\r\nimpl<Q, F> Execute for Wrapper<Q, F>\r\n    where\r\n        Q: Inject,\r\n        F: for<'r> FnOnce(<<Q as Inject>::I as FamilyLt<'r>>::Out),\r\n{\r\n    type E = Q;\r\n\r\n    fn execute(self, value: <<Self::E as Inject>::I as FamilyLt>::Out) {\r\n        (self.1)(value)\r\n    }\r\n}\r\n\r\nstruct Task {\r\n    _processor: Box<dyn FnOnce()>,\r\n}\r\n\r\n// This function consume the closure\r\nfn task<P>(processor: P) -> Task\r\nwhere P: Execute + 'static {\r\n    Task {\r\n        _processor: Box::new(move || {\r\n            let q = P::E::inject(&());\r\n            processor.execute(q);\r\n        })\r\n    }\r\n}\r\n\r\nfn main() {\r\n    task(annotate(\r\n        Annotate::<RefMutFamily<usize>>::new(),\r\n        |value: &mut usize| {\r\n            *value = 2;\r\n        }\r\n    ));\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n<version>\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n4a59ba4d54a3ec0d8ea1e82b7eeb5c8b0162de04\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111520/timeline", "performed_via_github_app": null, "state_reason": null}