{"url": "https://api.github.com/repos/rust-lang/rust/issues/11097", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11097/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11097/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11097/events", "html_url": "https://github.com/rust-lang/rust/issues/11097", "id": 24659495, "node_id": "MDU6SXNzdWUyNDY1OTQ5NQ==", "number": 11097, "title": "Use of RWArc during unwind after failure poisons it, despite failure not occurring during write", "user": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-21T03:39:50Z", "updated_at": "2013-12-23T02:16:31Z", "closed_at": "2013-12-23T02:16:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If a task fails, and then during the unwind some code in a destructor calls `write` on a `RWArc`, the `RWArc` is poisoned.  I think this is a bug.  I would expect a failure that happened _during_ one of the closures passed to `write` to poison it, but not a call to `write` that happened within a destructor during an unwind from a failure that had already occurred.\n\nHere is some sample code that exhibits the problem--it gives the error message `'Poisoned rw_arc - another task failed inside!'` whereas I would expect it to print `5`:\n\n``` rust\nextern mod extra;\nuse extra::arc::RWArc;\nuse std::task;\n\nstruct Unwinder{ i: RWArc<int> }\nimpl Drop for Unwinder {\n    fn drop(&mut self) { \n        self.i.write(|num| {*num += 3;});\n    }\n}\n\nfn main() {\n    let a = RWArc::<int>::new(2);\n    let a_copy = a.clone();\n    do task::try::<()> {\n        let _u = Unwinder{i:a_copy};\n        fail!();\n    };\n    a.write(|num| { println!(\"{:d}\", *num); });\n}\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11097/timeline", "performed_via_github_app": null, "state_reason": "completed"}