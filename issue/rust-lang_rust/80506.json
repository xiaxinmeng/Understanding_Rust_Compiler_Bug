{"url": "https://api.github.com/repos/rust-lang/rust/issues/80506", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80506/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80506/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80506/events", "html_url": "https://github.com/rust-lang/rust/issues/80506", "id": 776413704, "node_id": "MDU6SXNzdWU3NzY0MTM3MDQ=", "number": 80506, "title": "Diagnostics hint for const generics", "user": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-12-30T11:38:12Z", "updated_at": "2020-12-30T16:53:27Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "## Current Behavior\r\n\r\nGiven the following code:\r\n\r\n```rust\r\nlet mut combinations = (1..2).combinations();\r\nassert_eq!(combinations.next(), None);\r\n```\r\nwhere `Iterator::combinations` is defined as:\r\n\r\n```rust\r\nfn combinations<const N: usize>(self) -> Combinations<Self, N>;\r\n```\r\nThe following diagnostic is provided:\r\n```txt\r\nerror[E0282]: type annotations needed\r\n   --> src\\lib.rs:144:32\r\n    |\r\n144 |         let mut combinations = (1..2).combinations();\r\n    |                                ^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = note: unable to infer the value of a const parameter\r\n```\r\n\r\n**Attempting a fix, and failing:**\r\n\r\nNaively I thought I could fix this by adding a turbofish, but that doesn't seem to help:\r\n\r\n```rust\r\nlet mut combinations = (1..2).combinations::<[usize; 2]>();\r\nassert_eq!(combinations.next(), None);\r\n```\r\n```txt\r\nerror[E0107]: wrong number of const arguments: expected 1, found 0\r\n   --> src\\lib.rs:144:39\r\n    |\r\n144 |         let mut combinations = (1..2).combinations::<[usize; 2]>();\r\n    |                                       ^^^^^^^^^^^^ expected 1 const argument\r\n\r\nerror[E0107]: wrong number of type arguments: expected 0, found 1\r\n   --> src\\lib.rs:144:54\r\n    |\r\n144 |         let mut combinations = (1..2).combinations::<[usize; 2]>();\r\n    |                                                      ^^^^^^^^^^ unexpected type argument\r\n```\r\n\r\n## Expected behavior\r\nProviding a hint on how to correctly define const generics would be immensely helpful. I'm sure I'll be able to figure out the syntax for this eventually (currently going through https://github.com/rust-lang/rust/pull/78460 among others), but given we're set for a 1.51 stabilization of `min_const_generics` I suspect more people will be running into this soon.\r\n\r\n## Further Considerations\r\n\r\nI was looking at how hints work for e.g. missing type params in `collect`, and noticed no hints are provided there either. It only explains what to do, not showing how to do it. For something that's notoriously tricky to learn that seems like it could benefit from hints as well.\r\n\r\n```rust\r\nlet x = (1..5).collect();\r\n```\r\n```txt\r\nerror[E0282]: type annotations needed\r\n --> src/main.rs:2:9\r\n  |\r\n2 |     let x = (1..5).collect();\r\n  |         ^ consider giving `x` a type\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80506/timeline", "performed_via_github_app": null, "state_reason": null}