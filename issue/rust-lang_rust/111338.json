{"url": "https://api.github.com/repos/rust-lang/rust/issues/111338", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111338/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111338/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111338/events", "html_url": "https://github.com/rust-lang/rust/issues/111338", "id": 1699515566, "node_id": "I_kwDOAAsO6M5lTIyu", "number": 111338, "title": "Cannot detect glob re-export's shadowed items in rustdoc JSON", "user": {"login": "obi1kenobi", "id": 2348618, "node_id": "MDQ6VXNlcjIzNDg2MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2348618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obi1kenobi", "html_url": "https://github.com/obi1kenobi", "followers_url": "https://api.github.com/users/obi1kenobi/followers", "following_url": "https://api.github.com/users/obi1kenobi/following{/other_user}", "gists_url": "https://api.github.com/users/obi1kenobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/obi1kenobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obi1kenobi/subscriptions", "organizations_url": "https://api.github.com/users/obi1kenobi/orgs", "repos_url": "https://api.github.com/users/obi1kenobi/repos", "events_url": "https://api.github.com/users/obi1kenobi/events{/privacy}", "received_events_url": "https://api.github.com/users/obi1kenobi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2682491374, "node_id": "MDU6TGFiZWwyNjgyNDkxMzc0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-json", "name": "A-rustdoc-json", "color": "f7e101", "default": false, "description": "Area: Rustdoc JSON backend"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2023-05-08T04:56:59Z", "updated_at": "2023-05-14T02:00:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nmod inner {\r\n    pub struct Foo {};\r\n}\r\n\r\nmod other {\r\n    struct Foo;\r\n}\r\n\r\npub use inner::*;\r\n\r\n// Adding either of the following two lines\r\n// would shadow `inner::Foo` and\r\n// hide the name `Foo` from the public API.\r\n//\r\n// (1)\r\n// struct Foo;\r\n//\r\n// (2)\r\n// use other::Foo;\r\n```\r\n\r\nI expected to see this happen: when either line `(1)` or `(2)` is added, rustdoc JSON files should offer some way to detect that the name `Foo` is no longer part of the crate's public API. \r\n\r\nInstead, this happened:\r\n- With default settings, rustdoc generates identical JSON regardless of whether either or none of `(1)` or `(2)` is included.\r\n- With `--document-private-items` and `--document-hidden-items`, rustdoc generates identical JSON whether or not `(2)` is included.\r\n\r\nJust like using a private type in `(1)`, the same problem can be caused by using a `#[doc(hidden)]` public type, which will also not be emitted in rustdoc JSON unless `--document-hidden-items` is set.\r\n\r\nThis means that shadowing glob re-exported items is in general currently impossible to reliably detect via rustdoc JSON, even with `--document-private-items` and `--document-hidden-items`. As a result, `cargo-semver-checks` cannot detect breaking changes caused by such shadowing, which have happened in real life: around a year ago, [the opencl3 crate seems to have suffered a regression](https://github.com/kenba/opencl3/pull/54) when a large number of its items were accidentally shadowed.\r\n\r\nRelatedly, in #111336 I'm arguing that such shadowing should trigger a lint since it's essentially never what one wants: anything it can productively accomplish can be better accomplished in another way.\r\n\r\nI plan to publish a blog post with more details about this in a few hours, it will be available at the following link: https://predr.ag/blog/breaking-semver-in-rust-by-adding-private-type-or-import/\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.71.0-nightly (39c6804b9 2023-04-19)\r\nbinary: rustc\r\ncommit-hash: 39c6804b92aa202369e402525cee329556bc1db0\r\ncommit-date: 2023-04-19\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```\r\n\r\nThat version of rustc emits rustdoc JSON format version v24.\r\n\r\n### Possible solution\r\n\r\nOne option I thought of would be to tweak the rustdoc format to include a list of shadowed names in glob re-exports. This would allow proper name resolution in all cases, and without requiring `--document-private-items` and `--document-hidden-items` to be set.\r\n\r\nAnother option would be to include non-`pub` imports when `--document-private-items` is set. This only allows proper name resolution in rustdoc JSON generated with both `--document-private-items` and `--document-hidden-items` set.\r\n\r\nPerhaps there are other options as well.\r\n\r\nPersonally, I'd prefer the former option over the latter, since it seems reasonable to expect that rustdoc JSON shouldn't require flags that document explicitly non-public-API components in order to fully describe the public API.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111338/timeline", "performed_via_github_app": null, "state_reason": null}