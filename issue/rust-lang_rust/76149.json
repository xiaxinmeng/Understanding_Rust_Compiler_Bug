{"url": "https://api.github.com/repos/rust-lang/rust/issues/76149", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76149/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76149/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76149/events", "html_url": "https://github.com/rust-lang/rust/issues/76149", "id": 689074277, "node_id": "MDU6SXNzdWU2ODkwNzQyNzc=", "number": 76149, "title": "'Dropping temporaries' prevents borrow check to succeed in match arm without shared ownership", "user": {"login": "Byron", "id": 63622, "node_id": "MDQ6VXNlcjYzNjIy", "avatar_url": "https://avatars.githubusercontent.com/u/63622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Byron", "html_url": "https://github.com/Byron", "followers_url": "https://api.github.com/users/Byron/followers", "following_url": "https://api.github.com/users/Byron/following{/other_user}", "gists_url": "https://api.github.com/users/Byron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Byron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Byron/subscriptions", "organizations_url": "https://api.github.com/users/Byron/orgs", "repos_url": "https://api.github.com/users/Byron/repos", "events_url": "https://api.github.com/users/Byron/events{/privacy}", "received_events_url": "https://api.github.com/users/Byron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 43009118, "node_id": "MDU6TGFiZWw0MzAwOTExOA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-destructors", "name": "A-destructors", "color": "f7e101", "default": false, "description": "Area: destructors (Drop, ..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-08-31T09:49:59Z", "updated_at": "2020-10-28T10:37:38Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\n\r\nI tried this code ([playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2$018&gist=600023f2e68e84725c3ce3edc73e2d88)):\r\n\r\n```rust\r\nstruct Owner {\r\n    to_be_shared: String,\r\n}\r\n\r\nimpl Owner {\r\n    fn share(&mut self) -> Result<Box<dyn ToString + '_>, ()> {\r\n        Ok(Box::new(&self.to_be_shared) as Box<dyn ToString>)\r\n    }\r\n    fn do_something_else(&mut self) {}\r\n}\r\n\r\nfn use_owner(mut owner: Owner) {\r\n    let _v = match owner.share() {\r\n        Ok(v) => v,\r\n        Err(()) => {\r\n            owner.do_something_else();\r\n            return;\r\n        }\r\n    };\r\n}\r\n\r\nfn main() {\r\n    let owner = Owner {\r\n        to_be_shared: String::new(),\r\n    };\r\n    use_owner(owner);\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n\r\nThe code compiles. Especially it's possible to call `owner.do_something_else()` in the match branch dealing with the error, which does not borrow from `owner`.\r\n\r\nInstead, this happened: \r\n```\r\nrror[E0499]: cannot borrow `owner` as mutable more than once at a time\r\n  --> src/main.rs:16:13\r\n   |\r\n13 |     let _v = match owner.share() {\r\n   |                    -------------\r\n   |                    |\r\n   |                    first mutable borrow occurs here\r\n   |                    a temporary with access to the first borrow is created here ...\r\n...\r\n16 |             owner.do_something_else();\r\n   |             ^^^^^ second mutable borrow occurs here\r\n...\r\n19 |     };\r\n   |      - ... and the first borrow might be used here, when that temporary is dropped and runs the destructor for type `std::result::Result<std::boxed::Box<dyn std::string::ToString>, ()>`\r\n```\r\n\r\nAccording to [The Rust Reference:Destructors](https://doc.rust-lang.org/stable/reference/destructors.html) I believe the drop scope should be relative to each match arm, not according to the outer scope. It appears that Rust still wants to drop the `Result<_, _>` which is already dissolved in the match arm.\r\n\r\nAlso, if no destructor is involved, the code compiles as expected.\r\n\r\nThe issue first [occurred in `gitoxide`](https://github.com/Byron/gitoxide/blob/a36d14a6b916f6aafc2c5757acda7c32415370c5/git-protocol/src/fetch.rs#L97), and here is the[workaround](https://github.com/Byron/gitoxide/blob/fd6f9e5c9c2ac8f68ab885d9bbf2d5f7a77a732a/git-protocol/src/fetch.rs#L89).\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nbinary: rustc\r\ncommit-hash: 04488afe34512aa4c33566eb16d8c912a3ae04f9\r\ncommit-date: 2020-08-24\r\nhost: x86_64-apple-darwin\r\nrelease: 1.46.0\r\nLLVM version: 10.0\r\n```\r\n\r\n`rustc +nightly --version --verbose`:\r\n```\r\nrustc 1.48.0-nightly (397b390cc 2020-08-27)\r\nbinary: rustc\r\ncommit-hash: 397b390cc76ba1d98f80b2a24a371f708dcc9169\r\ncommit-date: 2020-08-27\r\nhost: x86_64-apple-darwin\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76149/timeline", "performed_via_github_app": null, "state_reason": null}