{"url": "https://api.github.com/repos/rust-lang/rust/issues/51125", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51125/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51125/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51125/events", "html_url": "https://github.com/rust-lang/rust/issues/51125", "id": 327013320, "node_id": "MDU6SXNzdWUzMjcwMTMzMjA=", "number": 51125, "title": "Defaulted unit types no longer error out (regression?)", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-28T12:40:56Z", "updated_at": "2018-10-02T17:49:51Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This currently compiles (on stable and nightly). Till 1.25, it would trigger a [lint](https://github.com/rust-lang/rust/issues/39216) because it has inference default to `()` instead of throwing an error.\r\n\r\n```rust\r\nfn main() {}\r\n\r\nstruct Err;\r\nfn load<T: Default>() -> Result<T, Err> {\r\n    Ok(T::default())\r\n}\r\nfn foo() -> Result<(), Err> {\r\n    let val = load()?; // defaults to ()\r\n    Ok(())\r\n}\r\n```\r\n\r\n([playpen](https://play.rust-lang.org/?gist=6f7cf9dafb9d1651b659c1f029413fc5&version=nightly&mode=debug))\r\n\r\n\r\nThat lint indicates that it would become a hard error in the future, but it's not erroring. It seems like a bunch of this was changed when we [stabilized `!`](https://github.com/rust-lang/rust/issues/48950).\r\n\r\nThat issue says\r\n\r\n> Type inference will now default unconstrained type variables to `!` instead of `()`. The [`resolve_trait_on_defaulted_unit`](https://github.com/rust-lang/rust/issues/39216) lint has been retired. An example of where this comes up is if you have something like:\r\n\r\n\r\nThough this doesn't really _make sense_, this looks like a safe way to produce nevers, which should, in short, never happen. It seems like this is related to https://github.com/rust-lang/rust/issues/40801 -- but that was closed as it seems to be a more drastic change.\r\n\r\nAlso, if you print `val`, it's clear that the compiler thought it was a unit type. This seems like one of those cases where attempting to observe the situation changes it.\r\n\r\n\r\n\r\n\r\nWe _should_ have a hard error here, this looks like a footgun, and as @SimonSapin mentioned has broken some unsafe code already. We had an upgrade lint for the hard error and we'll need to reintroduce it for a cycle or two since we've had a release without it. AFAICT this is a less drastic change than #40801, and we seem to have _intended_ for this to be a hard error before so it probably is minor enough that it's fine.\r\n\r\n\r\ncc @nikomatsakis @eddyb \r\n\r\nh/t @spacekookie for finding this", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51125/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51125/timeline", "performed_via_github_app": null, "state_reason": null}