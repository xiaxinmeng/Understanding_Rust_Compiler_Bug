{"url": "https://api.github.com/repos/rust-lang/rust/issues/111699", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/111699/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/111699/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/111699/events", "html_url": "https://github.com/rust-lang/rust/issues/111699", "id": 1714713020, "node_id": "I_kwDOAAsO6M5mNHG8", "number": 111699, "title": "ICE when using offset intrinsic with an i32", "user": {"login": "zhassan-aws", "id": 88045115, "node_id": "MDQ6VXNlcjg4MDQ1MTE1", "avatar_url": "https://avatars.githubusercontent.com/u/88045115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhassan-aws", "html_url": "https://github.com/zhassan-aws", "followers_url": "https://api.github.com/users/zhassan-aws/followers", "following_url": "https://api.github.com/users/zhassan-aws/following{/other_user}", "gists_url": "https://api.github.com/users/zhassan-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhassan-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhassan-aws/subscriptions", "organizations_url": "https://api.github.com/users/zhassan-aws/orgs", "repos_url": "https://api.github.com/users/zhassan-aws/repos", "events_url": "https://api.github.com/users/zhassan-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/zhassan-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2023-05-17T22:04:06Z", "updated_at": "2023-05-18T19:27:42Z", "closed_at": "2023-05-17T22:44:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(core_intrinsics)]\r\nuse std::intrinsics::offset;\r\n\r\nfn main() {\r\n    let a = [1u8, 2, 3];\r\n    let ptr: *const u8 = a.as_ptr();\r\n\r\n    unsafe {\r\n        assert_eq!(*offset(ptr, 0), 1);\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.71.0-nightly (e77366b57 2023-05-16)\r\nbinary: rustc\r\ncommit-hash: e77366b57b799dfa3ce1fcb850c068723a3213ee\r\ncommit-date: 2023-05-16\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.71.0-nightly\r\nLLVM version: 16.0.2\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: broken MIR in Item(DefId(0:4 ~ test[90e8]::main)) (after phase change to runtime-optimized) at bb1[1]:\r\n                                Cannot offset by non-isize type i32\r\n --> test.rs:9:21\r\n  |\r\n9 |         assert_eq!(*offset(ptr, 0), 1);\r\n  |                     ^^^^^^^^^^^^^^\r\n  |\r\n  = note: delayed at    0: <rustc_errors::HandlerInner>::emit_diagnostic\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n             1: <rustc_errors::Handler>::delay_span_bug::<rustc_span::span_encoding::Span, alloc::string::String>\r\n             2: <rustc_const_eval::transform::validate::TypeChecker>::fail::<alloc::string::String>\r\n             3: <rustc_const_eval::transform::validate::Validator as rustc_middle::mir::MirPass>::run_pass\r\n             4: rustc_mir_transform::optimized_mir\r\n             5: <rustc_query_impl::dynamic_query::optimized_mir::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, rustc_span::def_id::DefId)>>::call_once\r\n             6: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::DefId, rustc_middle::query::erase::Erased<[u8; 8]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, false>\r\n             7: rustc_query_impl::get_query_non_incr::optimized_mir\r\n             8: rustc_monomorphize::collector::collect_neighbours\r\n             9: rustc_monomorphize::collector::collect_items_rec\r\n            10: rustc_data_structures::sync::par_for_each_in::<alloc::vec::Vec<rustc_middle::mir::mono::MonoItem>, rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}::{closure#0}>\r\n            11: <rustc_session::session::Session>::time::<(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}>\r\n            12: rustc_monomorphize::collector::collect_crate_mono_items\r\n            13: rustc_monomorphize::partitioning::collect_and_partition_mono_items\r\n            14: <rustc_query_impl::dynamic_query::collect_and_partition_mono_items::{closure#2} as core::ops::function::FnOnce<(rustc_middle::ty::context::TyCtxt, ())>>::call_once\r\n            15: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::DynamicConfig<rustc_query_system::query::caches::SingleCache<rustc_middle::query::erase::Erased<[u8; 24]>>, false, false, false>, rustc_query_impl::plumbing::QueryCtxt, false>\r\n            16: rustc_query_impl::get_query_non_incr::collect_and_partition_mono_items\r\n            17: rustc_codegen_ssa::base::codegen_crate::<rustc_codegen_llvm::LlvmCodegenBackend>\r\n            18: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n            19: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\r\n            20: rustc_interface::passes::start_codegen\r\n            21: <rustc_middle::ty::context::GlobalCtxt>::enter::<<rustc_interface::queries::Queries>::ongoing_codegen::{closure#0}::{closure#0}, core::result::Result<alloc::boxed::Box<dyn core::any::Any>, rustc_span::ErrorGuaranteed>>\r\n            22: <rustc_interface::queries::Queries>::ongoing_codegen\r\n            23: <rustc_interface::interface::Compiler>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_span::ErrorGuaranteed>>\r\n            24: rustc_span::set_source_map::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n            25: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n            26: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>\r\n            27: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n            28: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/e77366b57b799dfa3ce1fcb850c068723a3213ee/library/alloc/src/boxed.rs:1985:9\r\n            29: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/e77366b57b799dfa3ce1fcb850c068723a3213ee/library/alloc/src/boxed.rs:1985:9\r\n            30: std::sys::unix::thread::Thread::new::thread_start\r\n                       at /rustc/e77366b57b799dfa3ce1fcb850c068723a3213ee/library/std/src/sys/unix/thread.rs:108:17\r\n            31: start_thread\r\n                       at /build/glibc-SzIz7B/glibc-2.31/nptl/pthread_create.c:477:8\r\n            32: clone\r\n                       at /build/glibc-SzIz7B/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n          \r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.71.0-nightly (e77366b57 2023-05-16) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nAdding an `isize` suffix fixes the issue:\r\n```\r\n       assert_eq!(*offset(ptr, 0isize), 1);\r\n```\r\nThe error first appears with the `nightly-2023-04-29` toolchain. It works fine with `nightly-2023-04-28`.", "closed_by": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/111699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/111699/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}