{"url": "https://api.github.com/repos/rust-lang/rust/issues/44145", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44145/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44145/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44145/events", "html_url": "https://github.com/rust-lang/rust/issues/44145", "id": 253511230, "node_id": "MDU6SXNzdWUyNTM1MTEyMzA=", "number": 44145, "title": "ICE when combining impl_trait and lifetime elision", "user": {"login": "Pratyush", "id": 3220730, "node_id": "MDQ6VXNlcjMyMjA3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3220730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pratyush", "html_url": "https://github.com/Pratyush", "followers_url": "https://api.github.com/users/Pratyush/followers", "following_url": "https://api.github.com/users/Pratyush/following{/other_user}", "gists_url": "https://api.github.com/users/Pratyush/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pratyush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pratyush/subscriptions", "organizations_url": "https://api.github.com/users/Pratyush/orgs", "repos_url": "https://api.github.com/users/Pratyush/repos", "events_url": "https://api.github.com/users/Pratyush/events{/privacy}", "received_events_url": "https://api.github.com/users/Pratyush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-29T02:32:28Z", "updated_at": "2017-09-01T20:38:25Z", "closed_at": "2017-09-01T20:38:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi! The following code snippet utilizing `impl Trait` and lifetime elision fails to compile (resulting in a ICE) on the latest nightly, as well as nightlies stretching back to (at least) 2017/08/02. If I explicitly specify the lifetimes, I don't get the ICE.\r\n\r\n```\r\n// lib.rs\r\n#![feature(conservative_impl_trait)]\r\nuse std::collections::BTreeMap;\r\n\r\npub struct Wrapper<T> {\r\n    map: BTreeMap<T, T>\r\n}\r\n\r\nimpl<T> Wrapper<T> {\r\n    pub fn iter(&self) -> impl Iterator<Item = &T> {\r\n        self.block.iter() // notice that there is no field named block. The same error happens even when using self.map\r\n    }\r\n}\r\n```\r\nI get the following error:\r\n```\r\nerror: internal compiler error: /checkout/src/librustc_typeck/check/mod.rs:626: escaping regions in predicate Obligation(predicate=Binder(ProjectionPredicate(ProjectionTy { substs: Slice([_]), item_def_id: DefId { krate: CrateNum(2), node: DefIndex(1588) => core/ded319f::iter[0]::iterator[0]::Iterator[0]::Item[0] } }, &T)),depth=0)\r\n --> lib.rs:9:27\r\n  |\r\n9 |     pub fn iter(&self) -> impl Iterator<Item = &T> {\r\n  |                           ^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nThe backtrace is:\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc_errors/lib.rs:436:8\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:381\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:391\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:611\r\n   5: std::panicking::begin_panic\r\n   6: rustc_errors::Handler::span_bug\r\n   7: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   8: rustc::session::span_bug_fmt\r\n   9: rustc_typeck::check::Inherited::register_predicate\r\n  10: <rustc::ty::fold::BottomUpFolder<'a, 'gcx, 'tcx, F> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  11: rustc_typeck::check::check_fn\r\n  12: rustc_typeck::check::typeck_tables_of::{{closure}}\r\n  13: rustc_typeck::check::typeck_tables_of\r\n  14: rustc::dep_graph::graph::DepGraph::with_task\r\n  15: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  16: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  17: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of\r\n  18: rustc_typeck::check::typeck_item_bodies\r\n  19: rustc::dep_graph::graph::DepGraph::with_task\r\n  20: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get\r\n  21: rustc::ty::maps::TyCtxtAt::typeck_item_bodies\r\n  22: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies\r\n  23: rustc_typeck::check_crate\r\n  24: rustc::ty::context::TyCtxt::create_and_enter\r\n  25: rustc_driver::driver::compile_input\r\n  26: rustc_driver::run_compiler\r\n```", "closed_by": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44145/timeline", "performed_via_github_app": null, "state_reason": "completed"}