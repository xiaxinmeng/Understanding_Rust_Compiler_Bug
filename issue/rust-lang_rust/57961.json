{"url": "https://api.github.com/repos/rust-lang/rust/issues/57961", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57961/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57961/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57961/events", "html_url": "https://github.com/rust-lang/rust/issues/57961", "id": 404036639, "node_id": "MDU6SXNzdWU0MDQwMzY2Mzk=", "number": 57961, "title": "Defining scope of `existential type` defined by associated type", "user": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-01-28T22:30:22Z", "updated_at": "2022-09-08T14:08:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So, during our discussion earlier today, @nikomatsakis brought up this interesting example of code that should really compile, we think:\r\n\r\n```rust\r\nexistential type X: Sized;\r\n\r\ntrait Foo {\r\n    type Bar: Iterator<Item = Self::_0>;\r\n    type _0;\r\n}\r\n\r\nimpl Foo for () {\r\n    type Bar = std::vec::IntoIter<u32>;\r\n    type _0 = X;    \r\n}\r\n```\r\n\r\nError:\r\n```\r\nerror: could not find defining uses\r\n --> src/main.rs:3:1\r\n  |\r\n3 | existential type X: Sized;\r\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=58b0d50d78a09e5fb79c7dc99e4ff6c8)\r\n\r\nIt seems that `type _0 = X;` isn't being considered as a \"defining use\", even though it clearly does constrain `X`. The question is, what sort of changes do we need for this to work? (I'm pretty sure it should work.) Do we need Chalk perhaps?\r\n\r\nCC @nikomatsakis @cramertj @scalexm \r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57961/timeline", "performed_via_github_app": null, "state_reason": null}