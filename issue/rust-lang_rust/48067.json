{"url": "https://api.github.com/repos/rust-lang/rust/issues/48067", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48067/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48067/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48067/events", "html_url": "https://github.com/rust-lang/rust/issues/48067", "id": 295437163, "node_id": "MDU6SXNzdWUyOTU0MzcxNjM=", "number": 48067, "title": "Macros: limitation in the expression parser for <$:path>::<ident>", "user": {"login": "behnam", "id": 37169, "node_id": "MDQ6VXNlcjM3MTY5", "avatar_url": "https://avatars.githubusercontent.com/u/37169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/behnam", "html_url": "https://github.com/behnam", "followers_url": "https://api.github.com/users/behnam/followers", "following_url": "https://api.github.com/users/behnam/following{/other_user}", "gists_url": "https://api.github.com/users/behnam/gists{/gist_id}", "starred_url": "https://api.github.com/users/behnam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/behnam/subscriptions", "organizations_url": "https://api.github.com/users/behnam/orgs", "repos_url": "https://api.github.com/users/behnam/repos", "events_url": "https://api.github.com/users/behnam/events{/privacy}", "received_events_url": "https://api.github.com/users/behnam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-02-08T09:19:59Z", "updated_at": "2022-06-30T02:46:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Background: https://users.rust-lang.org/t/macros-using-path-tokens-with-format-args/15480\r\n\r\nWhen passing in a `path` token to a macro, then trying to suffix the metavariable with `::<ident>` (or more), the parser cannot recognize the whole thing as an `:expr`, which causes failures on calls to macros like `format_args!`.\r\n\r\nRepro:\r\n\r\n```rust\r\nmacro_rules! something {\r\n    ( $path:path ) => (\r\n        //println!(\"Say: {}\", $path::say);\r\n        format_args!(\"Say: {}\", $path::say);\r\n    );\r\n}\r\n\r\nmod foo {\r\n    const say: &str = \"Hello\";\r\n}\r\n\r\nmod bar {\r\n    const say: &str = \"World\";\r\n\r\n    mod baz {\r\n        const say: &str = \"Universe\";\r\n    }\r\n}\r\n\r\nfn main() {\r\n    something!(foo);\r\n    something!(bar);\r\n    something!(bar::baz);\r\n}\r\n```\r\n\r\nIt fails with three instances of this error (with `RUSTFLAGS='-Z external-macro-backtrace'`):\r\n\r\n```rust\r\nerror: expected token: `,`\r\n  --> src/main.rs:4:9\r\n   |\r\n1  | / macro_rules! talk {\r\n2  | |     ( $mod:path ) => (\r\n3  | |         // print!(\"Say: {}\", $mod::say);\r\n4  | |         format_args!(\"Say: {}\", $mod::say);\r\n   | |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n5  | |     );\r\n6  | | }\r\n   | |_- in this expansion of `talk!`\r\n...\r\n21 |       talk!(foo);\r\n   |       ----------- in this macro invocation\r\n```\r\n\r\nA workaround is to use:\r\n```rust\r\n{ use $path as base; base::say }\r\n```\r\nbut would be great if we could just use:\r\n```\r\n$path::say\r\n```\r\n\r\nI couldn't find an existing report. I'm guessing it falls under RFE.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48067/reactions", "total_count": 13, "+1": 13, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48067/timeline", "performed_via_github_app": null, "state_reason": null}