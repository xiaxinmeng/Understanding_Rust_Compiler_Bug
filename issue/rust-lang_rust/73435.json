{"url": "https://api.github.com/repos/rust-lang/rust/issues/73435", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73435/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73435/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73435/events", "html_url": "https://github.com/rust-lang/rust/issues/73435", "id": 640333497, "node_id": "MDU6SXNzdWU2NDAzMzM0OTc=", "number": 73435, "title": "Warn on assert!(always_false)", "user": {"login": "bugaevc", "id": 10091584, "node_id": "MDQ6VXNlcjEwMDkxNTg0", "avatar_url": "https://avatars.githubusercontent.com/u/10091584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugaevc", "html_url": "https://github.com/bugaevc", "followers_url": "https://api.github.com/users/bugaevc/followers", "following_url": "https://api.github.com/users/bugaevc/following{/other_user}", "gists_url": "https://api.github.com/users/bugaevc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugaevc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugaevc/subscriptions", "organizations_url": "https://api.github.com/users/bugaevc/orgs", "repos_url": "https://api.github.com/users/bugaevc/repos", "events_url": "https://api.github.com/users/bugaevc/events{/privacy}", "received_events_url": "https://api.github.com/users/bugaevc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-17T10:35:11Z", "updated_at": "2020-06-17T16:58:51Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful if rustc emitted a warning on assertions when the condition can be statically proven to always be false.\r\n\r\nExample:\r\n\r\n```rust\r\npub fn meh() {\r\n    let always_false = 2 > 3;\r\n    assert!(always_false);\r\n    println!(\"foo\");\r\n}\r\n```\r\nCurrently compiles cleanly without any warnings ([playground](https://play.rust-lang.org/?version=stable&mode=release&edition=2018&gist=74a4e2c9abeda1dd2d52887e8b44f71a)) \u2014 neither about the always false assertion, nor about the unreachable statement.\r\n\r\nThe LLVM IR emitted:\r\n\r\n```\r\n; playground::meh\r\n; Function Attrs: noreturn nonlazybind uwtable\r\ndefine void @_ZN10playground3meh17h3a7dd68d372b246aE() unnamed_addr #3 {\r\nstart:\r\n; call std::panicking::begin_panic\r\n  tail call fastcc void @_ZN3std9panicking11begin_panic17h982033eda4eb16e4E()\r\n  unreachable\r\n}\r\n```\r\n\r\nsuggests rustc is able to statically prove the assertion to be always false even before LLVM optimization is run.\r\n\r\nI would expect to get something similar to this:\r\n\r\n```\r\nwarning: assertion is always false: `always_false`\r\n --> meh.rs:3:15\r\n  |\r\n3 |     assert!(always_false);\r\n  |             ^^^^^^^^^^^^ the assertion is always false                                  \r\n  |\r\n  = help: to unconditionally panic, use `panic!()` or `unreachable!()` \r\n  = note: `#[warn(assert_is_always_false)]` on by default\r\n\r\nwarning: unreachable statement\r\n --> meh.rs:4:5\r\n  |\r\n3 |     assert!(always_false);\r\n  |     ---------------------- any code following this expression is unreachable\r\n4 |     println!(\"foo\");\r\n  |     ^^^^^^^^^^^^^^^^ unreachable statement\r\n  |\r\n  = note: `#[warn(unreachable_code)]` on by default\r\n\r\n```\r\n\r\n## Meta\r\n\r\nThis is not about any particular version or platform, but here it goes anyway:\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.44.0 (49cae5576 2020-06-01)\r\nbinary: rustc\r\ncommit-hash: 49cae55760da0a43428eba73abcb659bb70cf2e4\r\ncommit-date: 2020-06-01\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.0\r\nLLVM version: 9.0\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73435/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73435/timeline", "performed_via_github_app": null, "state_reason": null}