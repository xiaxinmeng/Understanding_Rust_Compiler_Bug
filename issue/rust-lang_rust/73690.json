{"url": "https://api.github.com/repos/rust-lang/rust/issues/73690", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73690/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73690/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73690/events", "html_url": "https://github.com/rust-lang/rust/issues/73690", "id": 644563458, "node_id": "MDU6SXNzdWU2NDQ1NjM0NTg=", "number": 73690, "title": "libunwind fails to compile with clang-9 as C/C++ compiler", "user": {"login": "fogti", "id": 1618343, "node_id": "MDQ6VXNlcjE2MTgzNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1618343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fogti", "html_url": "https://github.com/fogti", "followers_url": "https://api.github.com/users/fogti/followers", "following_url": "https://api.github.com/users/fogti/following{/other_user}", "gists_url": "https://api.github.com/users/fogti/gists{/gist_id}", "starred_url": "https://api.github.com/users/fogti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fogti/subscriptions", "organizations_url": "https://api.github.com/users/fogti/orgs", "repos_url": "https://api.github.com/users/fogti/repos", "events_url": "https://api.github.com/users/fogti/events{/privacy}", "received_events_url": "https://api.github.com/users/fogti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T12:08:18Z", "updated_at": "2020-06-24T13:04:25Z", "closed_at": "2020-06-24T13:04:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was using `xargo` to cross-compile a project (to a `musl` target) which required the Rust `std` crate, and it failed while linking building `libunwind`, because clang-9 doesn't like the combination `-std=c99 -std=c++11` used in `src/libunwind/build.rs`. I was able to work around this by simply commenting out the respective lines, but I think the `build.rs` script should be able to determine the compiler&version, and skip adding these flags if it detects a recent clang version, which seem to be more strict about this than recent GCC versions (which, as I've read, only produce a warning in that case).\r\n\r\nIt may help to separate compilation of `libunwind`'s C (`-std=c99`) and C++ (`-std=c++11`) code, but I'm unsure how to inform the `cc` crate that it should use different flags for C and C++, and still linking them into the same static lib...\r\n\r\nrelated:\r\n * #69222\r\n * #69277 ", "closed_by": {"login": "fogti", "id": 1618343, "node_id": "MDQ6VXNlcjE2MTgzNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1618343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fogti", "html_url": "https://github.com/fogti", "followers_url": "https://api.github.com/users/fogti/followers", "following_url": "https://api.github.com/users/fogti/following{/other_user}", "gists_url": "https://api.github.com/users/fogti/gists{/gist_id}", "starred_url": "https://api.github.com/users/fogti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fogti/subscriptions", "organizations_url": "https://api.github.com/users/fogti/orgs", "repos_url": "https://api.github.com/users/fogti/repos", "events_url": "https://api.github.com/users/fogti/events{/privacy}", "received_events_url": "https://api.github.com/users/fogti/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73690/timeline", "performed_via_github_app": null, "state_reason": "completed"}