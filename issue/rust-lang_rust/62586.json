{"url": "https://api.github.com/repos/rust-lang/rust/issues/62586", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/62586/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/62586/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/62586/events", "html_url": "https://github.com/rust-lang/rust/issues/62586", "id": 466882451, "node_id": "MDU6SXNzdWU0NjY4ODI0NTE=", "number": 62586, "title": "improve documentation for AsRef/AsMut", "user": {"login": "BurntSushi", "id": 456674, "node_id": "MDQ6VXNlcjQ1NjY3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/456674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BurntSushi", "html_url": "https://github.com/BurntSushi", "followers_url": "https://api.github.com/users/BurntSushi/followers", "following_url": "https://api.github.com/users/BurntSushi/following{/other_user}", "gists_url": "https://api.github.com/users/BurntSushi/gists{/gist_id}", "starred_url": "https://api.github.com/users/BurntSushi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BurntSushi/subscriptions", "organizations_url": "https://api.github.com/users/BurntSushi/orgs", "repos_url": "https://api.github.com/users/BurntSushi/repos", "events_url": "https://api.github.com/users/BurntSushi/events{/privacy}", "received_events_url": "https://api.github.com/users/BurntSushi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-11T13:08:33Z", "updated_at": "2023-02-22T01:13:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "`AsRef`/`AsMut` is fairly common source of changes that result in breaking others' code. Most such changes occur by adding additional `AsRef`/`AsMut` impls, which in turn break type inference that users are unwittingly relying on. According to [Rust's API evolution](https://rust-lang.github.io/rfcs/1105-api-evolution.html), this is, strictly speaking, allowable breakage.\r\n\r\nAlmost all such instances of code breakage correspond to a _misuse_ of `AsRef`/`AsMut`, by using it situations where there are no constraints to help type inference. Idiomatic use of these traits is typically by specifying them in a context where the target type is known. For example:\r\n\r\n```rust\r\nfn foo<T: AsMut<[u8]>>(something: T) {\r\n    // this will never fail, because the target type is unambiguous\r\n    let my_mutable_slice = something.as_mut();\r\n    // ...\r\n}\r\n```\r\n\r\nCode like this is robust with respect to additional implementations of `AsMut`.\r\n\r\nThis issue is about improving the documentation of [`AsRef`](https://doc.rust-lang.org/std/convert/trait.AsRef.html)/[`AsMut`](https://doc.rust-lang.org/std/convert/trait.AsMut.html) to cover these important caveats. Currently, the docs include no mention of what incorrect usage actually is, or the fact that incorrectly using this trait can result in a new Rust compiler failing to compiler your code. (There is an example of correct usage, but no broader discussion of the intricacies of using this trait.) Additionally, the docs, IMO, don't do a good enough job differentiating `AsRef` from `Borrow`. The docs mention some specific differences, but don't cover high level concerns. It's very difficult, even for me, to take the noted differences in the docs and extrapolate that to a heuristic for when I should prefer one over the other.\r\n\r\nThis issue is motivated by the fallout from #60958, and my own recent experience in dealing with this in https://github.com/BurntSushi/rust-csv/issues/160 (which is particularly subtle).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/62586/reactions", "total_count": 13, "+1": 11, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/62586/timeline", "performed_via_github_app": null, "state_reason": null}