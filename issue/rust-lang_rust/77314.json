{"url": "https://api.github.com/repos/rust-lang/rust/issues/77314", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77314/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77314/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77314/events", "html_url": "https://github.com/rust-lang/rust/issues/77314", "id": 710630063, "node_id": "MDU6SXNzdWU3MTA2MzAwNjM=", "number": 77314, "title": "Inconsistent failure in byte slice &[u8] comparison caused by unrelated code", "user": {"login": "aidanhs", "id": 1050652, "node_id": "MDQ6VXNlcjEwNTA2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1050652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanhs", "html_url": "https://github.com/aidanhs", "followers_url": "https://api.github.com/users/aidanhs/followers", "following_url": "https://api.github.com/users/aidanhs/following{/other_user}", "gists_url": "https://api.github.com/users/aidanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanhs/subscriptions", "organizations_url": "https://api.github.com/users/aidanhs/orgs", "repos_url": "https://api.github.com/users/aidanhs/repos", "events_url": "https://api.github.com/users/aidanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanhs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2238194189, "node_id": "MDU6TGFiZWwyMjM4MTk0MTg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-slice", "name": "A-slice", "color": "f7e101", "default": false, "description": "Area: [T]"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-09-28T22:54:55Z", "updated_at": "2020-10-02T05:54:23Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```toml\r\n[package]\r\nname = \"rbup\"\r\nversion = \"0.1.0\"\r\nauthors = [\"Aidan Hobson Sayers <aidanhs@cantab.net>\"]\r\nedition = \"2018\"\r\n\r\n[dependencies]\r\nassert_fs = \"1.0\"\r\n```\r\n\r\n```rust\r\nuse std::os::unix::ffi::OsStrExt;\r\nuse std::path::PathBuf;\r\n\r\nfn main() {}\r\n\r\npub fn foo() {\r\n    //let temp = assert_fs::TempDir::new().unwrap(); // XXX\r\n}\r\n\r\npub fn x() {\r\n    let prefix: &[u8] = &[];\r\n    let name: &Vec<u8> = &vec![];\r\n    let _ = prefix > name.as_slice(); // works\r\n    let _ = prefix > name; // broken iff XXX is uncommented\r\n}\r\n\r\npub fn y() {\r\n    let lastfile: &PathBuf = &PathBuf::new();\r\n    let path: PathBuf = PathBuf::new();\r\n    assert!(lastfile.as_os_str().as_bytes() > path.as_os_str().as_bytes()); // works\r\n    assert!(lastfile.as_os_str().as_bytes() > &path.as_os_str().as_bytes()); // broken iff XXX is uncommented\r\n}\r\n```\r\n\r\nI expected to see this happen: the code either consistently compiles or fails to compile.\r\n\r\nInstead, this happened: depending on whether the line marked `XXX` is commented or not, the unrelated lines marked `broken` cause compilation failures (in turn, commenting those out allows compilation to succeed). i.e. `broken` and `XXX` lines are mutually exclusive.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.48.0-nightly (623fb90b5 2020-09-26)\r\nbinary: rustc\r\ncommit-hash: 623fb90b5a1f324e0ec44085116bf858cef19a00\r\ncommit-date: 2020-09-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n+ cargo --color=always build --release\r\n   Compiling rbup v0.1.0 (/tmp/x)\r\nerror[E0277]: can't compare `[u8]` with `Vec<u8>`\r\n  --> src/main.rs:14:20\r\n   |\r\n14 |     let _ = prefix > name; // broken iff XXX is uncommented\r\n   |                    ^ no implementation for `[u8] < Vec<u8>` and `[u8] > Vec<u8>`\r\n   |\r\n   = help: the trait `PartialOrd<Vec<u8>>` is not implemented for `[u8]`\r\n   = note: required because of the requirements on the impl of `PartialOrd<&Vec<u8>>` for `&[u8]`\r\n\r\nerror[E0277]: can't compare `[u8]` with `&[u8]`\r\n  --> src/main.rs:21:45\r\n   |\r\n21 |     assert!(lastfile.as_os_str().as_bytes() > &path.as_os_str().as_bytes()); // broken iff XXX is uncommented\r\n   |                                             ^ no implementation for `[u8] < &[u8]` and `[u8] > &[u8]`\r\n   |\r\n   = help: the trait `PartialOrd<&[u8]>` is not implemented for `[u8]`\r\n   = note: required because of the requirements on the impl of `PartialOrd<&&[u8]>` for `&[u8]`\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `rbup`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77314/timeline", "performed_via_github_app": null, "state_reason": null}