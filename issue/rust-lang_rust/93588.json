{"url": "https://api.github.com/repos/rust-lang/rust/issues/93588", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93588/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93588/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93588/events", "html_url": "https://github.com/rust-lang/rust/issues/93588", "id": 1122046445, "node_id": "I_kwDOAAsO6M5C4RHt", "number": 93588, "title": "ICE with rustdoc json backend", "user": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2682491374, "node_id": "MDU6TGFiZWwyNjgyNDkxMzc0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-rustdoc-json", "name": "A-rustdoc-json", "color": "f7e101", "default": false, "description": "Area: Rustdoc JSON backend"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2022-02-02T15:11:15Z", "updated_at": "2022-08-19T13:18:26Z", "closed_at": "2022-08-19T13:18:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nhttps://github.com/diesel-rs/diesel/commit/41404e6344cfce91234cbfdc6513a8634abee59a using the following command:\r\n```\r\nRUSTDOCFLAGS='-Z unstable-options --output-format=json' cargo +nightly doc --features \"postgres\"\r\n```\r\nproduces a internal compiler error inside of rustdoc\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustdoc +nightly --version --verbose`:\r\n```\r\nrustdoc 1.60.0-nightly (6abb6385b 2022-01-26)\r\nbinary: rustdoc\r\ncommit-hash: 6abb6385b2cb7249f67b9b3ce7522527767dd907\r\ncommit-date: 2022-01-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.60.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: `(left == right)`\r\n  left: `Item { id: Id(\"0:23812\"), crate_id: 0, name: Some(\"PgMoney\"), span: Some(Span { filename: \"diesel/src/pg/types/money.rs\", begin: (23, 0), end: (23, 28) }), visibility: Public, docs: Some(\"Money is represented in Postgres as a 64 bit signed integer.  This struct is a dumb wrapper\\ntype, meant only to indicate the integer's meaning.  The fractional precision of the value is\\ndetermined by the [`lc_monetary` setting of the database](https://www.postgresql.org/docs/9.6/static/datatype-money.html).\\nThis struct is re-exported as `Cents` as a convenient and conventional expression of a typical\\nunit of 1/100th of currency. For other names or precisions, users might consider a differently\\nnamed `use` of the `PgMoney` struct.\\n\\n```rust\\nuse diesel::data_types::PgMoney as Pence; // 1/100th unit of Pound\\nuse diesel::data_types::PgMoney as Fils;  // 1/1000th unit of Dinar\\n```\"), links: {}, attrs: [\"#[diesel(sql_type = Money)]\"], deprecation: None, inner: Struct(Struct { struct_type: Tuple, generics: Generics { params: [], where_predicates: [] }, fields_stripped: false, fields: [Id(\"0:23814\")], impls: [Id(\"a:2:8549-0:23812\"), Id(\"a:2:3022-0:23812\"), Id(\"a:2:8548-0:23812\"), Id(\"a:2:3034-0:23812\"), Id(\"a:2:3063-0:23812\"), Id(\"b:0:542-0:23812\"), Id(\"b:0:559-0:23812\"), Id(\"b:0:549-0:23812\"), Id(\"b:0:1745-0:23812\"), Id(\"b:2:3736-0:23812\"), Id(\"b:2:2951-0:23812\"), Id(\"b:2:2630-0:23812\"), Id(\"b:2:2966-0:23812\"), Id(\"b:2:2955-0:23812\"), Id(\"b:2:2627-0:23812\"), Id(\"b:2:2961-0:23812\"), Id(\"b:5:667-0:23812\"), Id(\"0:23726\"), Id(\"0:23728\"), Id(\"0:23730\"), Id(\"0:23731\"), Id(\"0:23732\"), Id(\"0:23735\"), Id(\"0:23736\"), Id(\"0:23738\"), Id(\"0:23740\"), Id(\"0:23765\"), Id(\"0:23769\"), Id(\"0:23783\"), Id(\"0:23787\"), Id(\"0:23790\"), Id(\"0:23807\"), Id(\"0:8373\"), Id(\"0:8375\"), Id(\"0:8378\"), Id(\"0:8381\"), Id(\"0:8383\"), Id(\"0:8386\")] }) }`,\r\n right: `Item { id: Id(\"0:23812\"), crate_id: 0, name: Some(\"Cents\"), span: Some(Span { filename: \"diesel/src/pg/types/money.rs\", begin: (23, 0), end: (23, 28) }), visibility: Public, docs: Some(\"Money is represented in Postgres as a 64 bit signed integer.  This struct is a dumb wrapper\\ntype, meant only to indicate the integer's meaning.  The fractional precision of the value is\\ndetermined by the [`lc_monetary` setting of the database](https://www.postgresql.org/docs/9.6/static/datatype-money.html).\\nThis struct is re-exported as `Cents` as a convenient and conventional expression of a typical\\nunit of 1/100th of currency. For other names or precisions, users might consider a differently\\nnamed `use` of the `PgMoney` struct.\\n\\n```rust\\nuse diesel::data_types::PgMoney as Pence; // 1/100th unit of Pound\\nuse diesel::data_types::PgMoney as Fils;  // 1/1000th unit of Dinar\\n```\"), links: {}, attrs: [\"#[diesel(sql_type = Money)]\"], deprecation: None, inner: Struct(Struct { struct_type: Tuple, generics: Generics { params: [], where_predicates: [] }, fields_stripped: false, fields: [Id(\"0:23814\")], impls: [Id(\"a:2:8549-0:23812\"), Id(\"a:2:3022-0:23812\"), Id(\"a:2:8548-0:23812\"), Id(\"a:2:3034-0:23812\"), Id(\"a:2:3063-0:23812\"), Id(\"b:0:542-0:23812\"), Id(\"b:0:559-0:23812\"), Id(\"b:0:549-0:23812\"), Id(\"b:0:1745-0:23812\"), Id(\"b:2:3736-0:23812\"), Id(\"b:2:2951-0:23812\"), Id(\"b:2:2630-0:23812\"), Id(\"b:2:2966-0:23812\"), Id(\"b:2:2955-0:23812\"), Id(\"b:2:2627-0:23812\"), Id(\"b:2:2961-0:23812\"), Id(\"b:5:667-0:23812\"), Id(\"0:23726\"), Id(\"0:23728\"), Id(\"0:23730\"), Id(\"0:23731\"), Id(\"0:23732\"), Id(\"0:23735\"), Id(\"0:23736\"), Id(\"0:23738\"), Id(\"0:23740\"), Id(\"0:23765\"), Id(\"0:23769\"), Id(\"0:23783\"), Id(\"0:23787\"), Id(\"0:23790\"), Id(\"0:23807\"), Id(\"0:8373\"), Id(\"0:8375\"), Id(\"0:8378\"), Id(\"0:8381\"), Id(\"0:8383\"), Id(\"0:8386\")] }) }`', src/librustdoc/json/mod.rs:195:17\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0:     0x7fdbf675869c - std::backtrace_rs::backtrace::libunwind::trace::h9c95184963fef745\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7fdbf675869c - std::backtrace_rs::backtrace::trace_unsynchronized::h5d21f8fdfc262588\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7fdbf675869c - std::sys_common::backtrace::_print_fmt::h6ce732896d3b7bc2\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7fdbf675869c - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h56a1b948079bb60c\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7fdbf67b987c - core::fmt::write::ha787ab3b9068d913\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/core/src/fmt/mod.rs:1168:17\r\n   5:     0x7fdbf6747d43 - std::io::Write::write_fmt::h4913c71f24efdd75\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/io/mod.rs:1653:15\r\n   6:     0x7fdbf675cac2 - std::sys_common::backtrace::_print::h8ba799ac9853e240\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7fdbf675cac2 - std::sys_common::backtrace::print::hc1060288e0e5dcfe\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7fdbf675cac2 - std::panicking::default_hook::{{closure}}::h5623b336a8b38b2c\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/panicking.rs:290:50\r\n   9:     0x7fdbf675c6a5 - std::panicking::default_hook::h7f9b0932f349911f\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/panicking.rs:307:9\r\n  10:     0x7fdbf6f39f41 - rustc_driver[d4f1704680c1e064]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7fdbe79723f3 - <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call::h0599b93be78093ff\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/alloc/src/boxed.rs:1868:9\r\n  12:     0x7fdbe79aa70c - proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}::h45db41ffd4e35ab1\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/proc_macro/src/bridge/client.rs:319:21\r\n  13:     0x7fdbe795a920 - std::panicking::update_hook::{{closure}}::hfc35d8f8dfcea4c0\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/panicking.rs:257:41\r\n  14:     0x7fdbf675d2db - std::panicking::rust_panic_with_hook::h87cab73890184b28\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/panicking.rs:695:17\r\n  15:     0x7fdbf675cf97 - std::panicking::begin_panic_handler::{{closure}}::h541a05bf9df15ade\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/panicking.rs:581:13\r\n  16:     0x7fdbf6758b44 - std::sys_common::backtrace::__rust_end_short_backtrace::h18b7b64c8e3dc986\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/sys_common/backtrace.rs:139:18\r\n  17:     0x7fdbf675cca9 - rust_begin_unwind\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/panicking.rs:577:5\r\n  18:     0x7fdbf67242e3 - core::panicking::panic_fmt::h1720bda5e8269e46\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/core/src/panicking.rs:135:14\r\n  19:     0x7fdbf67b67b8 - core::panicking::assert_failed_inner::h449b64e1f2903a2a\r\n  20:     0x55fbaa6bbccb - core[66374c829b964992]::panicking::assert_failed::<rustdoc_json_types[fb211a9f4b61a76c]::Item, rustdoc_json_types[fb211a9f4b61a76c]::Item>\r\n  21:     0x55fbaa97d885 - <rustdoc[3bca669b999d636e]::json::JsonRenderer as rustdoc[3bca669b999d636e]::formats::renderer::FormatRenderer>::item\r\n  22:     0x55fbaa978af9 - <rustdoc[3bca669b999d636e]::json::JsonRenderer as rustdoc[3bca669b999d636e]::formats::renderer::FormatRenderer>::item\r\n  23:     0x55fbaa978af9 - <rustdoc[3bca669b999d636e]::json::JsonRenderer as rustdoc[3bca669b999d636e]::formats::renderer::FormatRenderer>::item\r\n  24:     0x55fbaa978af9 - <rustdoc[3bca669b999d636e]::json::JsonRenderer as rustdoc[3bca669b999d636e]::formats::renderer::FormatRenderer>::item\r\n  25:     0x55fbaa99bf7b - rustdoc[3bca669b999d636e]::formats::renderer::run_format::<rustdoc[3bca669b999d636e]::json::JsonRenderer>\r\n  26:     0x55fbaa6dc798 - rustdoc[3bca669b999d636e]::run_renderer::<rustdoc[3bca669b999d636e]::json::JsonRenderer>\r\n  27:     0x55fbaa6f7b4b - <rustc_session[ad3655c0359ac0f8]::session::Session>::time::<core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>, rustdoc[3bca669b999d636e]::main_options::{closure#0}::{closure#0}::{closure#1}::{closure#2}>\r\n  28:     0x55fbaa893885 - <rustc_interface[7eb630a73ce93593]::interface::Compiler>::enter::<rustdoc[3bca669b999d636e]::main_options::{closure#0}::{closure#0}, core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>>\r\n  29:     0x55fbaa91a1cc - rustc_span[342a111d7a8110f2]::with_source_map::<core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>, rustc_interface[7eb630a73ce93593]::interface::create_compiler_and_run<core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>, rustdoc[3bca669b999d636e]::main_options::{closure#0}>::{closure#1}>\r\n  30:     0x55fbaa886277 - rustc_interface[7eb630a73ce93593]::interface::create_compiler_and_run::<core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>, rustdoc[3bca669b999d636e]::main_options::{closure#0}>\r\n  31:     0x55fbaa6de0de - rustdoc[3bca669b999d636e]::main_options\r\n  32:     0x55fbaa6f604d - <scoped_tls[158ee4356b9d3fb1]::ScopedKey<rustc_span[342a111d7a8110f2]::SessionGlobals>>::set::<rustc_interface[7eb630a73ce93593]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustdoc[3bca669b999d636e]::main_args::{closure#0}, core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>>::{closure#0}::{closure#0}, core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>>\r\n  33:     0x55fbaa8c4b59 - std[ecfd9b74f7001338]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[7eb630a73ce93593]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustdoc[3bca669b999d636e]::main_args::{closure#0}, core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>>::{closure#0}, core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>>\r\n  34:     0x55fbaa6f5839 - <<std[ecfd9b74f7001338]::thread::Builder>::spawn_unchecked_<rustc_interface[7eb630a73ce93593]::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustdoc[3bca669b999d636e]::main_args::{closure#0}, core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>>::{closure#0}, core[66374c829b964992]::result::Result<(), rustc_errors[86224a19c1a30ce1]::ErrorReported>>::{closure#1} as core[66374c829b964992]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  35:     0x7fdbf6768e83 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h055a74f58759b602\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/alloc/src/boxed.rs:1854:9\r\n  36:     0x7fdbf6768e83 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hb194029d87e03ea5\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/alloc/src/boxed.rs:1854:9\r\n  37:     0x7fdbf6768e83 - std::sys::unix::thread::Thread::new::thread_start::h79b5483319eb1ce5\r\n                               at /rustc/6abb6385b2cb7249f67b9b3ce7522527767dd907/library/std/src/sys/unix/thread.rs:108:17\r\n  38:     0x7fdbf63f5927 - start_thread\r\n                               at ./nptl/./nptl/pthread_create.c:435:8\r\n  39:     0x7fdbf64859e4 - __clone\r\n                               at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:100\r\n  40:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93588/timeline", "performed_via_github_app": null, "state_reason": "completed"}