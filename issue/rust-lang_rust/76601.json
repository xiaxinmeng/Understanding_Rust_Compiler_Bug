{"url": "https://api.github.com/repos/rust-lang/rust/issues/76601", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76601/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76601/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76601/events", "html_url": "https://github.com/rust-lang/rust/issues/76601", "id": 699217350, "node_id": "MDU6SXNzdWU2OTkyMTczNTA=", "number": 76601, "title": "Borrowed Ref seems to outlive its block", "user": {"login": "snoyberg", "id": 49415, "node_id": "MDQ6VXNlcjQ5NDE1", "avatar_url": "https://avatars.githubusercontent.com/u/49415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snoyberg", "html_url": "https://github.com/snoyberg", "followers_url": "https://api.github.com/users/snoyberg/followers", "following_url": "https://api.github.com/users/snoyberg/following{/other_user}", "gists_url": "https://api.github.com/users/snoyberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/snoyberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snoyberg/subscriptions", "organizations_url": "https://api.github.com/users/snoyberg/orgs", "repos_url": "https://api.github.com/users/snoyberg/repos", "events_url": "https://api.github.com/users/snoyberg/events{/privacy}", "received_events_url": "https://api.github.com/users/snoyberg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-09-11T11:48:17Z", "updated_at": "2020-09-11T12:07:00Z", "closed_at": "2020-09-11T11:53:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This may be a misunderstanding on my part, apologies for the noise if so. In the code below, I believe the `Ref` is improperly living beyond its containing block, and the code in question should be a compile-time error instead of a runtime panic. Consider this code:\r\n\r\n```rust\r\nuse std::cell::RefCell;\r\n\r\nfn main() {\r\n    let strings: RefCell<Vec<String>> = RefCell::new(Vec::new());\r\n    let _hello: &str = {\r\n        strings.borrow_mut().push(\"Hello\".to_string());\r\n        &strings.borrow()[0]\r\n    };\r\n    strings.borrow_mut();\r\n}\r\n```\r\n\r\nThe `strings.borrow()` call results in a `Ref<Vec<String>>`, which is then indexed to get a `&str` which is the result of the block. Importantly, note that the `&str` is borrowed from the `Ref`, and therefore should not extend lifetime beyond the enclosing block. Therefore, from my understanding, this should be a compile time error.\r\n\r\nInstead, the `Ref` appears to continue to live. The evidence of this is that this program compiles successfully, but when run, the `borrow_mut()` call after the block panics since there is still an active borrow on the `RefCell`. A variation on the program above helps clarify the situation further. If I explicitly capture the result of `strings.borrow()`, like so:\r\n\r\n```rust\r\nuse std::cell::RefCell;\r\n\r\nfn main() {\r\n    let strings: RefCell<Vec<String>> = RefCell::new(Vec::new());\r\n    let _hello: &str = {\r\n        strings.borrow_mut().push(\"Hello\".to_string());\r\n        let strings_ref = strings.borrow();\r\n        &strings_ref[0]\r\n    };\r\n    strings.borrow_mut();\r\n}\r\n```\r\n\r\nI get the expected error message about `strings_ref` not living long enough:\r\n\r\n```\r\nerror[E0597]: `strings_ref` does not live long enough\r\n --> src\\main.rs:8:10\r\n  |\r\n5 |     let _hello: &str = {\r\n  |         ------ borrow later stored here\r\n...\r\n8 |         &strings_ref[0]\r\n  |          ^^^^^^^^^^^ borrowed value does not live long enough\r\n9 |     };\r\n  |     - `strings_ref` dropped here while still borrowed\r\n```\r\n\r\n### Meta\r\n\r\nI tested with both stable 1.46.0 release:\r\n\r\n```\r\n>rustc --version --verbose\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nbinary: rustc\r\ncommit-hash: 04488afe34512aa4c33566eb16d8c912a3ae04f9\r\ncommit-date: 2020-08-24\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.46.0\r\nLLVM version: 10.0\r\n```\r\n\r\nAnd with nightly for 2020-09-11:\r\n\r\n```\r\n>rustc +nightly --version --verbose\r\nrustc 1.48.0-nightly (a1947b3f9 2020-09-10)\r\nbinary: rustc\r\ncommit-hash: a1947b3f9e2831e2060bc42f0c78e4a2bb67930a\r\ncommit-date: 2020-09-10\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\nThe panics are slightly different between the two versions. On stable, the panic references a code location with `std`, while nightly references a code location within my own project. Stable:\r\n\r\n<details>\r\n\r\n```\r\n>cargo run\r\n   Compiling foo v0.1.0 (C:\\Users\\snoyb\\Desktop\\foo)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.50s\r\n     Running `target\\debug\\foo.exe`\r\nthread 'main' panicked at 'already borrowed: BorrowMutError', C:\\Users\\snoyb\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\src\\libcore\\cell.rs:867:31\r\nstack backtrace:\r\n   0: backtrace::backtrace::trace_unsynchronized\r\n             at C:\\Users\\runneradmin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\backtrace-0.3.46\\src\\backtrace\\mod.rs:66\r\n   1: std::sys_common::backtrace::_print_fmt\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\sys_common\\backtrace.rs:78\r\n   2: std::sys_common::backtrace::_print::{{impl}}::fmt\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\sys_common\\backtrace.rs:59\r\n   3: core::fmt::write\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libcore\\fmt\\mod.rs:1076\r\n   4: std::io::Write::write_fmt<std::sys::windows::stdio::Stderr>\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\io\\mod.rs:1537\r\n   5: std::sys_common::backtrace::_print\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\sys_common\\backtrace.rs:62\r\n   6: std::sys_common::backtrace::print\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\sys_common\\backtrace.rs:49\r\n   7: std::panicking::default_hook::{{closure}}\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\panicking.rs:198\r\n   8: std::panicking::default_hook\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\panicking.rs:217\r\n   9: std::panicking::rust_panic_with_hook\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\panicking.rs:526\r\n  10: std::panicking::begin_panic_handler\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\panicking.rs:437\r\n  11: core::panicking::panic_fmt\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libcore\\panicking.rs:85\r\n  12: core::option::expect_none_failed\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libcore\\option.rs:1269\r\n  13: core::result::Result<core::cell::RefMut<alloc::vec::Vec<alloc::string::String>>, core::cell::BorrowMutError>::expect<core::cell::RefMut<alloc::vec::Vec<alloc::string::String>>,core::cell::BorrowMutError>\r\n             at C:\\Users\\snoyb\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\src\\libcore\\result.rs:963\r\n  14: core::cell::RefCell<alloc::vec::Vec<alloc::string::String>>::borrow_mut<alloc::vec::Vec<alloc::string::String>>\r\n             at C:\\Users\\snoyb\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\src\\libcore\\cell.rs:867\r\n  15: foo::main\r\n             at .\\src\\main.rs:9\r\n  16: std::rt::lang_start::{{closure}}<tuple<>>\r\n             at C:\\Users\\snoyb\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\src\\libstd\\rt.rs:67\r\n  17: std::rt::lang_start_internal::{{closure}}\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\rt.rs:52\r\n  18: std::panicking::try::do_call\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\panicking.rs:348\r\n  19: std::panicking::try\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\panicking.rs:325\r\n  20: std::panic::catch_unwind\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\panic.rs:394\r\n  21: std::rt::lang_start_internal\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9\\/src\\libstd\\rt.rs:51\r\n  22: std::rt::lang_start<tuple<>>\r\n             at C:\\Users\\snoyb\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\src\\rust\\src\\libstd\\rt.rs:67\r\n  23: main\r\n  24: invoke_main\r\n             at D:\\agent\\_work\\9\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl:78\r\n  25: __scrt_common_main_seh\r\n             at D:\\agent\\_work\\9\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl:288\r\n  26: BaseThreadInitThunk\r\n  27: RtlUserThreadStart\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nerror: process didn't exit successfully: `target\\debug\\foo.exe` (exit code: 101)\r\n```\r\n\r\n</details>\r\n\r\nAnd nightly:\r\n\r\n<details>\r\n\r\n```\r\n>cargo +nightly run\r\n   Compiling foo v0.1.0 (C:\\Users\\snoyb\\Desktop\\foo)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.46s\r\n     Running `target\\debug\\foo.exe`\r\nthread 'main' panicked at 'already borrowed: BorrowMutError', src\\main.rs:9:13\r\nstack backtrace:\r\n   0: std::panicking::begin_panic_handler\r\n             at /rustc/a1947b3f9e2831e2060bc42f0c78e4a2bb67930a\\/library\\std\\src\\panicking.rs:483\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/a1947b3f9e2831e2060bc42f0c78e4a2bb67930a\\/library\\core\\src\\panicking.rs:85\r\n   2: core::option::expect_none_failed\r\n             at /rustc/a1947b3f9e2831e2060bc42f0c78e4a2bb67930a\\/library\\core\\src\\option.rs:1221\r\n   3: core::result::Result<core::cell::RefMut<alloc::vec::Vec<alloc::string::String>>, core::cell::BorrowMutError>::expect<core::cell::RefMut<alloc::vec::Vec<alloc::string::String>>,core::cell::BorrowMutError>\r\n             at /rustc/a1947b3f9e2831e2060bc42f0c78e4a2bb67930a\\library\\core\\src\\result.rs:933\r\n   4: core::cell::RefCell<alloc::vec::Vec<alloc::string::String>>::borrow_mut<alloc::vec::Vec<alloc::string::String>>\r\n             at /rustc/a1947b3f9e2831e2060bc42f0c78e4a2bb67930a\\library\\core\\src\\cell.rs:869\r\n   5: foo::main\r\n             at .\\src\\main.rs:9\r\n   6: core::ops::function::FnOnce::call_once<fn(),tuple<>>\r\n             at /rustc/a1947b3f9e2831e2060bc42f0c78e4a2bb67930a\\library\\core\\src\\ops\\function.rs:227\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nerror: process didn't exit successfully: `target\\debug\\foo.exe` (exit code: 101)\r\n```\r\n\r\n</details>", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76601/timeline", "performed_via_github_app": null, "state_reason": "completed"}