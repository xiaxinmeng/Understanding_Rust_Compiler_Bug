{"url": "https://api.github.com/repos/rust-lang/rust/issues/69725", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69725/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69725/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69725/events", "html_url": "https://github.com/rust-lang/rust/issues/69725", "id": 575993392, "node_id": "MDU6SXNzdWU1NzU5OTMzOTI=", "number": 69725, "title": "'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/librustc_typeck/check/method/suggest.rs:550:46", "user": {"login": "sunny-g", "id": 2055636, "node_id": "MDQ6VXNlcjIwNTU2MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/2055636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunny-g", "html_url": "https://github.com/sunny-g", "followers_url": "https://api.github.com/users/sunny-g/followers", "following_url": "https://api.github.com/users/sunny-g/following{/other_user}", "gists_url": "https://api.github.com/users/sunny-g/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunny-g/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunny-g/subscriptions", "organizations_url": "https://api.github.com/users/sunny-g/orgs", "repos_url": "https://api.github.com/users/sunny-g/repos", "events_url": "https://api.github.com/users/sunny-g/events{/privacy}", "received_events_url": "https://api.github.com/users/sunny-g/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-05T04:58:30Z", "updated_at": "2020-03-07T12:02:23Z", "closed_at": "2020-03-07T12:02:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried code very similar to this:\r\n\r\n```rust\r\nuse serde::de::*;\r\n\r\npub trait IpldVisitorExt<'de>: Visitor<'de> {\r\n    fn visit_link<E>(self, _cid: Cid) -> Result<<Self as Visitor<'de>>::Value, E>\r\n    where\r\n        E: Error;\r\n}\r\n\r\nstruct JsonVisitor<V>(V);\r\n\r\nimpl<'de, V: IpldVisitorExt<'de>> Visitor<'de> for JsonVisitor<V> {\r\n    type Value = V::Value;\r\n\r\n    #[inline]\r\n    fn expecting(&self, formatter: &mut std::fmt::Formatter) -> std::fmt::Result {\r\n        formatter.write_str(\"a JSON map, link object or byte object\")\r\n    }\r\n\r\n    #[inline]\r\n    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>\r\n    where\r\n        A: MapAccess<'de>,\r\n    {\r\n        let deserializer = value::MapAccessDeserializer::<A>::new(map);\r\n        \r\n        // uncommenting the following line triggers the error\r\n        // let temp: value::MapAccessDeserializer<A> = deserializer.clone();\r\n\r\n        Err(Error::custom(\"\"))\r\n    }\r\n}\r\n```\r\n\r\nand it produces some type of type checking error when uncommenting the line beginning with `let temp`.\r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/librustc_typeck/check/method/suggest.rs:550:46\r\n...\r\nquery stack during panic:\r\n#0 [typeck_tables_of] type-checking `<codec::dag_json::JsonVisitor<V> as serde::de::Visitor<'de>>::visit_map`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.43.0-nightly (4ad624882 2020-03-03)\r\nbinary: rustc\r\ncommit-hash: 4ad62488258972bdb0e2df225d100f99ef58dbad\r\ncommit-date: 2020-03-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.43.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\nBacktrace: \r\n\r\n```\r\nthread 'rustc' panicked at 'called `Option::unwrap()` on a `None` value', src/librustc_typeck/check/method/suggest.rs:550:46\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1053\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1428\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: <alloc::boxed::Box<F> as core::ops::function::Fn<A>>::call\r\n             at /rustc/4ad62488258972bdb0e2df225d100f99ef58dbad/src/liballoc/boxed.rs:1031\r\n  12: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}::{{closure}}\r\n             at /rustc/4ad62488258972bdb0e2df225d100f99ef58dbad/src/libproc_macro/bridge/client.rs:305\r\n  13: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  14: rust_begin_unwind\r\n             at src/libstd/panicking.rs:378\r\n  15: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  16: core::panicking::panic\r\n             at src/libcore/panicking.rs:52\r\n  17: core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut\r\n  18: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n  19: rustc_typeck::check::method::suggest::<impl rustc_typeck::check::FnCtxt>::report_method_error\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  22: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_coercable_to_type\r\n  23: rustc_typeck::check::FnCtxt::check_decl_local\r\n  24: rustc_typeck::check::FnCtxt::check_stmt\r\n  25: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  26: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  27: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation_and_needs\r\n  28: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_return_expr\r\n  29: rustc_typeck::check::check_fn\r\n  30: rustc::ty::context::GlobalCtxt::enter_local\r\n  31: rustc_typeck::check::typeck_tables_of\r\n  32: rustc::ty::query::__query_compute::typeck_tables_of\r\n  33: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::typeck_tables_of>::compute\r\n  34: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  35: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  36: rustc::ty::<impl rustc::ty::context::TyCtxt>::par_body_owners\r\n  37: rustc_typeck::check::typeck_item_bodies\r\n  38: rustc::ty::query::__query_compute::typeck_item_bodies\r\n  39: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  41: rustc_typeck::check_crate\r\n  42: rustc_interface::passes::analysis\r\n  43: rustc::ty::query::__query_compute::analysis\r\n  44: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  45: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  46: rustc::ty::context::tls::enter_global\r\n  47: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  48: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (4ad624882 2020-03-03) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck_tables_of] type-checking `<codec::dag_json::JsonVisitor<V> as serde::de::Visitor<'de>>::visit_map`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69725/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69725/timeline", "performed_via_github_app": null, "state_reason": "completed"}