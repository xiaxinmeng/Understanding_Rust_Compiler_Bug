{"url": "https://api.github.com/repos/rust-lang/rust/issues/84332", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84332/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84332/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84332/events", "html_url": "https://github.com/rust-lang/rust/issues/84332", "id": 861207726, "node_id": "MDU6SXNzdWU4NjEyMDc3MjY=", "number": 84332, "title": "Add an allow-by-default lint that triggers on reachable catch-all / rest patterns", "user": {"login": "jplatte", "id": 951129, "node_id": "MDQ6VXNlcjk1MTEyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/951129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplatte", "html_url": "https://github.com/jplatte", "followers_url": "https://api.github.com/users/jplatte/followers", "following_url": "https://api.github.com/users/jplatte/following{/other_user}", "gists_url": "https://api.github.com/users/jplatte/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplatte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplatte/subscriptions", "organizations_url": "https://api.github.com/users/jplatte/orgs", "repos_url": "https://api.github.com/users/jplatte/repos", "events_url": "https://api.github.com/users/jplatte/events{/privacy}", "received_events_url": "https://api.github.com/users/jplatte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 1976249039, "node_id": "MDU6TGFiZWwxOTc2MjQ5MDM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-patterns", "name": "A-patterns", "color": "f7e101", "default": false, "description": "Relating to patterns and pattern matching"}, {"id": 1976249438, "node_id": "MDU6TGFiZWwxOTc2MjQ5NDM4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-exhaustiveness-checking", "name": "A-exhaustiveness-checking", "color": "f7e101", "default": false, "description": "Relating to exhaustiveness / usefulness checking of patterns"}], "state": "closed", "locked": false, "assignee": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2021-04-19T11:27:39Z", "updated_at": "2021-09-16T08:18:13Z", "closed_at": "2021-09-16T08:18:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "syn currently allows users to [opt into having their tests fail](https://docs.rs/syn/1.0.69/src/syn/expr.rs.html#227-251) if a match of one of the enums it defines is non-exhaustive:\r\n\r\n```rust\r\nmatch expr {\r\n    Expr::Array(e) => {...}\r\n    Expr::Assign(e) => {...}\r\n    ...\r\n    Expr::Yield(e) => {...}\r\n\r\n    #[cfg(test)]\r\n    Expr::__TestExhaustive(_) => unimplemented!(),\r\n    #[cfg(not(test))]\r\n    _ => { /* some sane fallback */ }\r\n}\r\n```\r\n\r\nIn [the tracking issue for the `#[non_exhaustive]` attribute](https://github.com/rust-lang/rust/issues/44109), it was discussed to allow this in a less hacky way, for truly non-exhaustive enums, with dtolnay suggesting a lint (https://github.com/rust-lang/rust/issues/44109#issuecomment-521781237) like this:\r\n\r\n```rust\r\nmatch expr {\r\n    Expr::Array(e) => {...}\r\n    Expr::Assign(e) => {...}\r\n    ...\r\n    Expr::Yield(e) => {...}\r\n\r\n    #[cfg_attr(test, deny(reachable))]\r\n    _ => { /* some sane fallback */ }\r\n}\r\n```\r\n\r\nLater, [a clippy issue](https://github.com/rust-lang/rust-clippy/issues/5557) was opened about the same thing and [a PR](https://github.com/rust-lang/rust-clippy/pull/6328) opened to address it. However, that PR was closed because\r\n\r\n> the thing is that rustc already has exhaustiveness checks, and this is a lint that was proposed in a Rust RFC, so it would both be _easy_ to implement in rustc and _make sense_. It feels weird to reimplement exhaustiveness checking in a partial way outside of rustc when we can have a perfect version of this lint in rustc.\r\n>\r\n> \u2014 https://github.com/rust-lang/rust-clippy/pull/6328#issuecomment-770460622\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"DevinR528\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84332/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84332/timeline", "performed_via_github_app": null, "state_reason": "completed"}