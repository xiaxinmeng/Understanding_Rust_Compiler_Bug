{"url": "https://api.github.com/repos/rust-lang/rust/issues/108042", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108042/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108042/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108042/events", "html_url": "https://github.com/rust-lang/rust/issues/108042", "id": 1584184817, "node_id": "I_kwDOAAsO6M5ebL3x", "number": 108042, "title": "ICE in type inference? type checking? on broken/wrong BTreeMap code, if inserting into BTreeMap", "user": {"login": "wareya", "id": 585488, "node_id": "MDQ6VXNlcjU4NTQ4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/585488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wareya", "html_url": "https://github.com/wareya", "followers_url": "https://api.github.com/users/wareya/followers", "following_url": "https://api.github.com/users/wareya/following{/other_user}", "gists_url": "https://api.github.com/users/wareya/gists{/gist_id}", "starred_url": "https://api.github.com/users/wareya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wareya/subscriptions", "organizations_url": "https://api.github.com/users/wareya/orgs", "repos_url": "https://api.github.com/users/wareya/repos", "events_url": "https://api.github.com/users/wareya/events{/privacy}", "received_events_url": "https://api.github.com/users/wareya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1050784470, "node_id": "MDU6TGFiZWwxMDUwNzg0NDcw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-bisection", "name": "E-needs-bisection", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs bisection: https://github.com/rust-lang/cargo-bisect-rustc"}], "state": "closed", "locked": false, "assignee": {"login": "martingms", "id": 458783, "node_id": "MDQ6VXNlcjQ1ODc4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/458783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martingms", "html_url": "https://github.com/martingms", "followers_url": "https://api.github.com/users/martingms/followers", "following_url": "https://api.github.com/users/martingms/following{/other_user}", "gists_url": "https://api.github.com/users/martingms/gists{/gist_id}", "starred_url": "https://api.github.com/users/martingms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martingms/subscriptions", "organizations_url": "https://api.github.com/users/martingms/orgs", "repos_url": "https://api.github.com/users/martingms/repos", "events_url": "https://api.github.com/users/martingms/events{/privacy}", "received_events_url": "https://api.github.com/users/martingms/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martingms", "id": 458783, "node_id": "MDQ6VXNlcjQ1ODc4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/458783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martingms", "html_url": "https://github.com/martingms", "followers_url": "https://api.github.com/users/martingms/followers", "following_url": "https://api.github.com/users/martingms/following{/other_user}", "gists_url": "https://api.github.com/users/martingms/gists{/gist_id}", "starred_url": "https://api.github.com/users/martingms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martingms/subscriptions", "organizations_url": "https://api.github.com/users/martingms/orgs", "repos_url": "https://api.github.com/users/martingms/repos", "events_url": "https://api.github.com/users/martingms/events{/privacy}", "received_events_url": "https://api.github.com/users/martingms/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2023-02-14T13:38:32Z", "updated_at": "2023-02-16T10:35:42Z", "closed_at": "2023-02-16T10:35:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\nhow to create smaller examples.\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\n-->\n\nRan into an ICE while refactoring. Only happens on nightly. Don't know what else I should write here.\n\n### Code\n\n```Rust\nextern crate alloc;\nuse alloc::collections::BTreeMap;\n\nstruct Struct {\n    map : BTreeMap<String, String>,\n}\n\nfn main() {\n    let mut map = BTreeMap::new(); // ICE\n    //let mut map = BTreeMap::<(String, String), String>::new(); // ICE\n    //let mut map = BTreeMap::<String, String>::new(); // no ICE\n    map.insert((\"a\".to_string(), \"a\".to_string()));\n    let mut structdef = Struct { map };\n}\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\n$ rustc --version --verbose\nrustc 1.67.1 (d5a82bbd2 2023-02-07)\nbinary: rustc\ncommit-hash: d5a82bbd26e1ad8b7401f6a718a9c57c96905483\ncommit-date: 2023-02-07\nhost: x86_64-pc-windows-gnu\nrelease: 1.67.1\nLLVM version: 15.0.6\n\n$ rustc +nightly --version --verbose\nrustc 1.69.0-nightly (065852def 2023-02-13)\nbinary: rustc\ncommit-hash: 065852def0903296da33a9eaf557f230bcf3a61a\ncommit-date: 2023-02-13\nhost: x86_64-pc-windows-msvc\nrelease: 1.69.0-nightly\nLLVM version: 15.0.7\n```\n\n### Error output\n\n```\n$ rustc +nightly test.rs\nerror[E0061]: this method takes 2 arguments but 1 argument was supplied\n  --> test.rs:12:9\n   |\n12 |     map.insert((\"a\".to_string(), \"a\".to_string()));\n   |         ^^^^^^------------------------------------ an argument is missing\n   |\nnote: associated function defined here\n  --> /rustc/065852def0903296da33a9eaf557f230bcf3a61a\\library\\alloc\\src\\collections\\btree\\map.rs:955:12\nhelp: provide the argument\n   |\n12 |     map.insert((\"a\".to_string(), \"a\".to_string()), /* value */);\n   |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nthread 'rustc' panicked at 'index out of bounds: the len is 1 but the index is 1', compiler\\rustc_hir_typeck\\src\\demand.rs:332:40\n<backtrace omitted, see below>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\n\nnote: rustc 1.69.0-nightly (065852def 2023-02-13) running on x86_64-pc-windows-msvc\n\nquery stack during panic:\n#0 [typeck] type-checking `main`\n#1 [typeck_item_bodies] type-checking all item bodies\n#2 [analysis] running analysis passes on this crate\nend of query stack\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0061`.\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary><strong>Backtrace</strong></summary>\n<p>\n\n```\nstack backtrace:\n   0:     0x7ffcfd6698a2 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h78e89e9946a237ab\n   1:     0x7ffcfd6a532b - core::fmt::write::hb0cb1c9de7a39696\n   2:     0x7ffcfd65c88a - <std::io::IoSliceMut as core::fmt::Debug>::fmt::h2d13ae8023f6410a\n   3:     0x7ffcfd6695eb - std::sys::common::alloc::realloc_fallback::h95ea3faf57f4bab2\n   4:     0x7ffcfd66cf89 - std::panicking::default_hook::h031c528ccf47d428\n   5:     0x7ffcfd66cc0b - std::panicking::default_hook::h031c528ccf47d428\n   6:     0x7ffce4ac00ef - rustc_driver_impl[e542371b9e5deca1]::describe_lints\n   7:     0x7ffcfd66d8ef - std::panicking::rust_panic_with_hook::h2bf5e2387af40df5\n   8:     0x7ffcfd66d64e - <std::panicking::begin_panic_handler::StrPanicPayload as core::panic::BoxMeUp>::get::h3fc7e7bd4173a984\n   9:     0x7ffcfd66a59f - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h78e89e9946a237ab\n  10:     0x7ffcfd66d300 - rust_begin_unwind\n  11:     0x7ffcfd6d8a05 - core::panicking::panic_fmt::h3223cb95b63b2d59\n  12:     0x7ffcfd6d8b97 - core::panicking::panic_bounds_check::hfedaf1b227ea46ee\n  13:     0x7ffce4c547f3 - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::point_at_expr_source_of_inferred_type\n  14:     0x7ffce4c50e1c - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::emit_type_mismatch_suggestions\n  15:     0x7ffce4c51afc - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::emit_coerce_suggestions\n  16:     0x7ffce2fcb5b6 - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::demand_coerce_diag\n  17:     0x7ffce2f7c940 - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::demand_coerce\n  18:     0x7ffce2f5aafc - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::demand_coerce\n  19:     0x7ffce2fafc7d - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::check_struct_path\n  20:     0x7ffce2fb11d8 - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::check_struct_path\n  21:     0x7ffce2f587c3 - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::demand_coerce\n  22:     0x7ffce2f7a4ed - <rustc_hir_typeck[96d41babe8f90f07]::fn_ctxt::FnCtxt>::demand_coerce\n  23:     0x7ffce30505b1 - <rustc_hir_typeck[96d41babe8f90f07]::method::probe::Pick>::maybe_emit_unstable_name_collision_hint\n  24:     0x7ffce305f529 - <rustc_hir_typeck[96d41babe8f90f07]::inherited::Inherited as core[7f56be9053635011]::ops::deref::Deref>::deref\n  25:     0x7ffce3748913 - <rustc_middle[9cf1323aa3ef55]::ty::Visibility as rustc_privacy[4607b2c41700df30]::VisibilityLike>::new_min\n  26:     0x7ffce2fffcb6 - <rustc_hir_typeck[96d41babe8f90f07]::writeback::WritebackCx as rustc_hir[cc46961c34403ead]::intravisit::Visitor>::visit_ty\n  27:     0x7ffce1dba42f - <rustc_hir_typeck[96d41babe8f90f07]::inherited::Inherited>::build\n  28:     0x7ffce20c3aec - rustc_privacy[4607b2c41700df30]::provide\n  29:     0x7ffce21bc172 - <rustc_query_impl[83d2b7f35e45599c]::Queries as rustc_middle[9cf1323aa3ef55]::ty::query::QueryEngine>::try_mark_green\n  30:     0x7ffce1d27245 - <rustc_hir_analysis[4c58ae939ed73dca]::bounds::Bounds>::push_projection_bound\n  31:     0x7ffce1d027f3 - rustc_hir_analysis[4c58ae939ed73dca]::check_crate\n  32:     0x7ffce1e18160 - rustc_interface[71bf077bc0e4ea2b]::passes::analysis\n  33:     0x7ffce216273d - rustc_privacy[4607b2c41700df30]::provide\n  34:     0x7ffce21b963f - <rustc_query_impl[83d2b7f35e45599c]::Queries as rustc_middle[9cf1323aa3ef55]::ty::query::QueryEngine>::try_mark_green\n  35:     0x7ffce1c3d27c - rustc_driver_impl[e542371b9e5deca1]::args::arg_expand_all\n  36:     0x7ffce1c3b443 - rustc_driver_impl[e542371b9e5deca1]::args::arg_expand_all\n  37:     0x7ffce1c3a627 - rustc_driver_impl[e542371b9e5deca1]::args::arg_expand_all\n  38:     0x7ffce1c284d3 - <rustc_data_structures[72e258867a716a8c]::temp_dir::MaybeTempDir>::new\n  39:     0x7ffce1c20cbd - <rustc_data_structures[72e258867a716a8c]::temp_dir::MaybeTempDir>::new\n  40:     0x7ffcfd67fefc - std::sys::windows::thread::Thread::new::hcd7eb12de5a8a905\n  41:     0x7ffd76fb7614 - BaseThreadInitThunk\n  42:     0x7ffd791226a1 - RtlUserThreadStart\n```\n\n</p>\n</details>\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"martingms\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108042/timeline", "performed_via_github_app": null, "state_reason": "completed"}