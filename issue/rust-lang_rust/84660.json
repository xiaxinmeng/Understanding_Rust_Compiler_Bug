{"url": "https://api.github.com/repos/rust-lang/rust/issues/84660", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84660/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84660/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84660/events", "html_url": "https://github.com/rust-lang/rust/issues/84660", "id": 870147210, "node_id": "MDU6SXNzdWU4NzAxNDcyMTA=", "number": 84660, "title": "Types defined with type_alias_impl_trait can be used for dispatch in trait impls. Which is unsound.", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-04-28T16:44:55Z", "updated_at": "2022-04-13T03:41:09Z", "closed_at": "2022-04-13T03:41:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Let\u2019s define a type:\r\n```rust\r\ntrait Foo {}\r\nimpl Foo for () {}\r\ntype Bar = impl Foo;\r\nfn _defining_use() -> Bar {}\r\n```\r\n\r\nWell, a straightforward trait implementation does not work:\r\n```rust\r\ntrait Trait {}\r\n\r\nimpl Trait for Bar {}\r\n```\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror: cannot implement trait on type alias impl trait\r\n  --> src/lib.rs:10:1\r\n   |\r\n10 | impl Trait for Bar {}\r\n   | ^^^^^^^^^^^^^^^^^^\r\n   |\r\nnote: type alias impl trait defined here\r\n  --> src/lib.rs:5:12\r\n   |\r\n5  | type Bar = impl Foo;\r\n   |            ^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n```\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=ca0203907352dece29a4645be0e5bfba))\r\n\r\nBut `rustc` doesn\u2019t complain about anything slighty more complex at the moment, e.g.\r\n```rust\r\ntrait Trait {}\r\nimpl Trait for (Bar,) {}\r\n\r\ntrait TraitArg<T> {}\r\nimpl TraitArg<Bar> for () {}\r\n```\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=0db47061b75d65330102c6b869e74132))\r\n\r\nWhich turns out to be problematic:\r\n```rust\r\ntrait TraitArg<T> {\r\n    fn f();\r\n}\r\n\r\nimpl TraitArg<Bar> for () {\r\n    fn f() {\r\n        println!(\"ho\");\r\n    }\r\n}\r\n\r\nfn main() {\r\n    <() as TraitArg<Bar>>::f();\r\n}\r\n```\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nthread 'rustc' panicked at 'called `Result::unwrap()` on an `Err` value: ErrorReported', compiler/rustc_mir/src/monomorphize/collector.rs:827:84\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (727d10156 2021-04-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: internal compiler error: Encountered error `Unimplemented` selecting `Binder(<() as TraitArg<()>>, [])` during codegen\r\n  |\r\n  = note: delayed at compiler/rustc_trait_selection/src/traits/codegen.rs:68:32\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1018:13\r\nstack backtrace:\r\n   0:     0x7f995e14cfd0 - std::backtrace_rs::backtrace::libunwind::trace::hdcf4f90f85129e83\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\r\n   1:     0x7f995e14cfd0 - std::backtrace_rs::backtrace::trace_unsynchronized::h2669e30cb82f6732\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7f995e14cfd0 - std::sys_common::backtrace::_print_fmt::hfbda19e17f6db318\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/sys_common/backtrace.rs:67:5\r\n   3:     0x7f995e14cfd0 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h1a8751bf59281272\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/sys_common/backtrace.rs:46:22\r\n   4:     0x7f995e1be31f - core::fmt::write::h7aa6cd0067dca82a\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/core/src/fmt/mod.rs:1094:17\r\n   5:     0x7f995e1418d5 - std::io::Write::write_fmt::hd7dd3a1df9b6befb\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/io/mod.rs:1584:15\r\n   6:     0x7f995e150d2b - std::sys_common::backtrace::_print::h551e9ec8a9fa8106\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/sys_common/backtrace.rs:49:5\r\n   7:     0x7f995e150d2b - std::sys_common::backtrace::print::ha4b1c5e95fa040b3\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/sys_common/backtrace.rs:36:9\r\n   8:     0x7f995e150d2b - std::panicking::default_hook::{{closure}}::h0b34c9ab7fb9f857\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/panicking.rs:208:50\r\n   9:     0x7f995e15080d - std::panicking::default_hook::h3067e8318decd17a\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/panicking.rs:225:9\r\n  10:     0x7f995e91382d - rustc_driver::report_ice::hf065daa4796f245b\r\n  11:     0x7f995e151440 - std::panicking::rust_panic_with_hook::h81b8facc50f34daa\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/panicking.rs:595:17\r\n  12:     0x7f995e151017 - std::panicking::begin_panic_handler::{{closure}}::ha376ab85d95a000e\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/panicking.rs:497:13\r\n  13:     0x7f995e14d48c - std::sys_common::backtrace::__rust_end_short_backtrace::h6795c8afdd1a77e6\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/sys_common/backtrace.rs:141:18\r\n  14:     0x7f995e150f79 - rust_begin_unwind\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/panicking.rs:493:5\r\n  15:     0x7f995e11cdbb - std::panicking::begin_panic_fmt::hf43a0025042538e2\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/panicking.rs:435:5\r\n  16:     0x7f9960d9e029 - rustc_errors::HandlerInner::flush_delayed::h340bd563bba016cc\r\n  17:     0x7f9960d9cb1b - <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop::h56e016ed68f55f61\r\n  18:     0x7f9960406cd6 - core::ptr::drop_in_place<rustc_session::parse::ParseSess>::hf9273749d5982cb2\r\n  19:     0x7f99604157e1 - <alloc::rc::Rc<T> as core::ops::drop::Drop>::drop::h2bbea2bbb380f5f7\r\n  20:     0x7f99603fba0d - core::ptr::drop_in_place<rustc_interface::interface::Compiler>::h01f06b96a4e05fdc\r\n  21:     0x7f99603fb5e4 - rustc_span::with_source_map::hafa0f290d807fcb7\r\n  22:     0x7f99603fd161 - rustc_interface::interface::create_compiler_and_run::h31928174eaa223b1\r\n  23:     0x7f99604168e8 - scoped_tls::ScopedKey<T>::set::h332c2cb9377dc4c6\r\n  24:     0x7f9960416e03 - std::sys_common::backtrace::__rust_begin_short_backtrace::h3f92abbf0f820c98\r\n  25:     0x7f996041a625 - core::ops::function::FnOnce::call_once{{vtable.shim}}::h3affa87e0b1d695f\r\n  26:     0x7f995e15fe57 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h3aa31cb6360b59d9\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/alloc/src/boxed.rs:1546:9\r\n  27:     0x7f995e15fe57 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h7719d3c7c5841461\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/alloc/src/boxed.rs:1546:9\r\n  28:     0x7f995e15fe57 - std::sys::unix::thread::Thread::new::thread_start::hfbe13ead469fd0bc\r\n                               at /rustc/727d101561f9b1e81c6282943292d990288ca479/library/std/src/sys/unix/thread.rs:71:17\r\n  29:     0x7f995e09c609 - start_thread\r\n  30:     0x7f995dfb0293 - clone\r\n  31:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (727d10156 2021-04-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nthread panicked while panicking. aborting.\r\nerror: could not compile `playground`\r\n```\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=a941c9fbeb5bebb653c2dba7d93f7f99))\r\n\r\n<hr>\r\n\r\nUnsurprisingly, this is actually not only resulting in ICEs but also in unsoundness:\r\n\r\n```rust\r\n#![feature(min_type_alias_impl_trait)]\r\n\r\ntrait Foo {}\r\nimpl Foo for () {}\r\ntype Bar = impl Foo;\r\nfn _defining_use() -> Bar {}\r\n\r\ntrait Trait<T, In> {\r\n    type Out;\r\n    fn convert(i: In) -> Self::Out;\r\n}\r\n\r\nimpl<In, Out> Trait<Bar, In> for Out {\r\n    type Out = Out;\r\n    fn convert(_i: In) -> Self::Out {\r\n        unreachable!();\r\n    }\r\n}\r\n\r\nimpl<In, Out> Trait<(), In> for Out {\r\n    type Out = In;\r\n    fn convert(i: In) -> Self::Out {\r\n        i\r\n    }\r\n}\r\n\r\nfn transmute<In, Out>(i: In) -> Out {\r\n    <Out as Trait<Bar, In>>::convert(i)\r\n}\r\n\r\nfn main() {\r\n    let d;\r\n    {\r\n        let x = \"Hello World\".to_string();\r\n        d = transmute::<&String, &String>(&x);\r\n    }\r\n    println!(\"{}\", d);\r\n}\r\n```\r\n```\r\n\u0010@U\r\n```\r\n([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=676c3dd309b31ec55b89ed5ba011de0c))\r\n\r\n@rustbot modify labels: A-typesystem, A-traits, A-impl-trait, F-type_alias_impl_trait, T-compiler, requires-nightly\r\nand someone please add \u201cI-unsound \ud83d\udca5\u201d.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84660/timeline", "performed_via_github_app": null, "state_reason": "completed"}