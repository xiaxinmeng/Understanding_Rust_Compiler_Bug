{"url": "https://api.github.com/repos/rust-lang/rust/issues/68931", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68931/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68931/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68931/events", "html_url": "https://github.com/rust-lang/rust/issues/68931", "id": 561676405, "node_id": "MDU6SXNzdWU1NjE2NzY0MDU=", "number": 68931, "title": "Confusing additional warnings when hitting bindings_with_variant_name", "user": {"login": "luser", "id": 286001, "node_id": "MDQ6VXNlcjI4NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/286001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luser", "html_url": "https://github.com/luser", "followers_url": "https://api.github.com/users/luser/followers", "following_url": "https://api.github.com/users/luser/following{/other_user}", "gists_url": "https://api.github.com/users/luser/gists{/gist_id}", "starred_url": "https://api.github.com/users/luser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luser/subscriptions", "organizations_url": "https://api.github.com/users/luser/orgs", "repos_url": "https://api.github.com/users/luser/repos", "events_url": "https://api.github.com/users/luser/events{/privacy}", "received_events_url": "https://api.github.com/users/luser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-07T14:39:09Z", "updated_at": "2020-02-07T14:53:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We're working through a Rust training from Ferrous at my company and one of my colleagues wrote some code that hit the `bindings_with_variant_name` warning. A reduced testcase looks like ([on playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=56cdb3e0474225c306c8a1ccd1272e3c)):\r\n```rust\r\npub enum E {\r\n    One,\r\n    Two,\r\n}\r\n\r\npub fn f(e: E) -> u32 {\r\n    match e {\r\n        One => 1,\r\n        Two => 2,\r\n    }\r\n}\r\n``` \r\n\r\nIf you build this code you get the good `bindings_with_variant_name` warnings and then a slew of other warnings. My colleague got lost in the sea of warnings and didn't notice the ones at the top that explained the problem directly:\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nwarning[E0170]: pattern binding `One` is named the same as one of the variants of the type `E`\r\n --> src/lib.rs:8:9\r\n  |\r\n8 |         One => 1,\r\n  |         ^^^ help: to match on the variant, qualify the path: `E::One`\r\n  |\r\n  = note: `#[warn(bindings_with_variant_name)]` on by default\r\n\r\nwarning[E0170]: pattern binding `Two` is named the same as one of the variants of the type `E`\r\n --> src/lib.rs:9:9\r\n  |\r\n9 |         Two => 2,\r\n  |         ^^^ help: to match on the variant, qualify the path: `E::Two`\r\n\r\nwarning: unreachable pattern\r\n --> src/lib.rs:9:9\r\n  |\r\n8 |         One => 1,\r\n  |         --- matches any value\r\n9 |         Two => 2,\r\n  |         ^^^ unreachable pattern\r\n  |\r\n  = note: `#[warn(unreachable_patterns)]` on by default\r\n\r\nwarning: unused variable: `One`\r\n --> src/lib.rs:8:9\r\n  |\r\n8 |         One => 1,\r\n  |         ^^^ help: consider prefixing with an underscore: `_One`\r\n  |\r\n  = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused variable: `Two`\r\n --> src/lib.rs:9:9\r\n  |\r\n9 |         Two => 2,\r\n  |         ^^^ help: consider prefixing with an underscore: `_Two`\r\n\r\nwarning: variable `One` should have a snake case name\r\n --> src/lib.rs:8:9\r\n  |\r\n8 |         One => 1,\r\n  |         ^^^ help: convert the identifier to snake case (notice the capitalization): `one`\r\n  |\r\n  = note: `#[warn(non_snake_case)]` on by default\r\n\r\nwarning: variable `Two` should have a snake case name\r\n --> src/lib.rs:9:9\r\n  |\r\n9 |         Two => 2,\r\n  |         ^^^ help: convert the identifier to snake case: `two`\r\n\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.55s\r\n```\r\n\r\nIt'd be great if we could suppress those latter warnings in this case since we've already told the user what the exact problem is.\r\n\r\ncc @estebank @skade ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68931/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68931/timeline", "performed_via_github_app": null, "state_reason": null}