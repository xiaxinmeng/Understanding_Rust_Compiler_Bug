{"url": "https://api.github.com/repos/rust-lang/rust/issues/61574", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61574/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61574/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61574/events", "html_url": "https://github.com/rust-lang/rust/issues/61574", "id": 452808710, "node_id": "MDU6SXNzdWU0NTI4MDg3MTA=", "number": 61574, "title": "'Cannot find value in this scope' on macro expansion with generic over const `impl` block inside.", "user": {"login": "L117", "id": 50594896, "node_id": "MDQ6VXNlcjUwNTk0ODk2", "avatar_url": "https://avatars.githubusercontent.com/u/50594896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/L117", "html_url": "https://github.com/L117", "followers_url": "https://api.github.com/users/L117/followers", "following_url": "https://api.github.com/users/L117/following{/other_user}", "gists_url": "https://api.github.com/users/L117/gists{/gist_id}", "starred_url": "https://api.github.com/users/L117/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/L117/subscriptions", "organizations_url": "https://api.github.com/users/L117/orgs", "repos_url": "https://api.github.com/users/L117/repos", "events_url": "https://api.github.com/users/L117/events{/privacy}", "received_events_url": "https://api.github.com/users/L117/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-06T03:03:00Z", "updated_at": "2019-07-30T07:20:45Z", "closed_at": "2019-07-30T07:20:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I kinda hoped that snippet below will be compiled:\r\n```rust\r\n#![feature(const_generics)]\r\n\r\nuse std::ops::Add;\r\n\r\nstruct VectorLike<T, const SIZE: usize>([T; {SIZE}]);\r\n\r\nmacro_rules! impl_operator_overload {\r\n    ($trait_ident:ident, $method_ident:ident) => {\r\n    \r\n        impl<T, const SIZE: usize> $trait_ident for VectorLike<T, {SIZE}> \r\n        where\r\n            T: $trait_ident,\r\n        {\r\n            type Output = VectorLike<T, {SIZE}>;\r\n            \r\n            fn $method_ident(self, _: VectorLike<T, {SIZE}>) -> VectorLike<T, {SIZE}> {\r\n                unimplemented!()\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nimpl_operator_overload!(Add, add);\r\n```\r\n\r\nInstead I got a bunch of errors like\r\n```\r\nerror[E0425]: cannot find value `SIZE` in this scope\r\n```\r\nfor `SIZE` in every occurrence of `{SIZE}` inside macro body, and one\r\n```\r\nthe const parameter `SIZE` is not constrained by the impl trait, self type, or predicates\r\n```\r\nfor `SIZE` in `impl<T, const SIZE: usize>`.\r\n\r\n[Playground permalink](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=e7c0f610b995727536424624cfbc43a0)\r\n\r\nUnlike snippet with \"const variable\" above, this one with \"const value\" compiles without any \r\nissues:\r\n```rust\r\n#![feature(const_generics)]\r\n\r\nuse std::ops::Add;\r\n\r\nstruct VectorLike<T, const SIZE: usize>([T; {SIZE}]);\r\n\r\nmacro_rules! impl_operator_overload {\r\n    ($trait_ident:ident, $method_ident:ident) => {\r\n    \r\n        impl<T> $trait_ident for VectorLike<T, 3> \r\n        where\r\n            T: $trait_ident,\r\n        {\r\n            type Output = VectorLike<T, 3>;\r\n            \r\n            fn $method_ident(self, _: VectorLike<T, 3>) -> VectorLike<T, 3> {\r\n                unimplemented!()\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nimpl_operator_overload!(Add, add);\r\n```\r\n\r\nThis issue seems to be related to #58307.\r\n\r\nRustc version: `1.37.0-nightly (2019-06-04 5d8f59f4b1473217c2de)`.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61574/timeline", "performed_via_github_app": null, "state_reason": "completed"}