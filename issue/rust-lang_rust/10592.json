{"url": "https://api.github.com/repos/rust-lang/rust/issues/10592", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/10592/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/10592/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/10592/events", "html_url": "https://github.com/rust-lang/rust/issues/10592", "id": 23081323, "node_id": "MDU6SXNzdWUyMzA4MTMyMw==", "number": 10592, "title": "Wrong return type of `extern` functions", "user": {"login": "honzasp", "id": 64298, "node_id": "MDQ6VXNlcjY0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/64298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzasp", "html_url": "https://github.com/honzasp", "followers_url": "https://api.github.com/users/honzasp/followers", "following_url": "https://api.github.com/users/honzasp/following{/other_user}", "gists_url": "https://api.github.com/users/honzasp/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzasp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzasp/subscriptions", "organizations_url": "https://api.github.com/users/honzasp/orgs", "repos_url": "https://api.github.com/users/honzasp/repos", "events_url": "https://api.github.com/users/honzasp/events{/privacy}", "received_events_url": "https://api.github.com/users/honzasp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-11-21T17:06:47Z", "updated_at": "2013-12-11T18:41:37Z", "closed_at": "2013-12-11T18:41:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI was trying to use the LLVM C bindings from Rust, but I ran into a mysterious error when I tried to use `LLVMGetTypeKind`. The Rust program is like this:\n\n```\n#[allow(cstack)];\nuse std::libc::{c_uint};\n\npub enum Context_opaque {}\npub type ContextPtr = *Context_opaque;\npub enum Type_opaque {}\npub type TypePtr = *Type_opaque;\n\n#[repr(C)]\npub enum LLVMTypeKind {\n  LLVMVoidTypeKind,\n  LLVMHalfTypeKind,\n  LLVMFloatTypeKind,\n  LLVMDoubleTypeKind,\n  LLVMX86_FP80TypeKind,\n  LLVMFP128TypeKind,\n  LLVMPPC_FP128TypeKind,\n  LLVMLabelTypeKind,\n  LLVMIntegerTypeKind,\n  LLVMFunctionTypeKind,\n  LLVMStructTypeKind,\n  LLVMArrayTypeKind,\n  LLVMPointerTypeKind,\n  LLVMVectorTypeKind,\n  LLVMMetadataTypeKind,\n  LLVMX86_MMXTypeKind\n}\n\n#[link_args = \"-lLLVMCore -lLLVMSupport\"]\nextern {\n  pub fn LLVMContextCreate() -> ContextPtr;\n  pub fn LLVMContextDispose(c: ContextPtr);\n  pub fn LLVMGetTypeKind(t: TypePtr) -> LLVMTypeKind;\n  pub fn LLVMIntTypeInContext(c: ContextPtr, bits: c_uint) -> TypePtr;\n}\n\nfn main() {\n  unsafe {\n    let ctx_ptr = LLVMContextCreate();\n    let int32_ptr = LLVMIntTypeInContext(ctx_ptr, 32);\n    let kind = LLVMGetTypeKind(int32_ptr); // boom!\n    println!(\"{}\", kind as uint);\n    LLVMContextDispose(ctx_ptr);\n  }\n}\n```\n\nWhen compiled and executed, LLVM crashes with\n\n```\nUnhandled TypeID.\nUNREACHABLE executed at Core.cpp:164!\nAborted (core dumped)\n```\n\nAfter some investigation, I made `rustc` emit LLVM bitcode and found something strange:\n\n```\ndeclare void @LLVMGetTypeKind(%enum.LLVMTypeKind* sret, %enum.Type_opaque*) unnamed_addr\n\ncall void @LLVMGetTypeKind(%enum.LLVMTypeKind* sret %kind, %enum.Type_opaque* %11)\n```\n\n`rustc` declared the `LLVMGetTypeKind` function with wrong parameters, so the function, when called, got a pointer to unitialized value on stack instead of a `ContextRef`. \n\nI tried to declare `LLVMGetTypeKind` as a function returning `c_uint` and everything worked well (it is probably the reason why `rustc`'s LLVM bindings declare `LLVMTypeKind` as a series of static variables).\n\nIs this a bug or a feature? If it is a feature, it is worth documenting! :)\n", "closed_by": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/10592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/10592/timeline", "performed_via_github_app": null, "state_reason": "completed"}