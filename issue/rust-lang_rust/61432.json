{"url": "https://api.github.com/repos/rust-lang/rust/issues/61432", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61432/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61432/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61432/events", "html_url": "https://github.com/rust-lang/rust/issues/61432", "id": 451101327, "node_id": "MDU6SXNzdWU0NTExMDEzMjc=", "number": 61432, "title": "Const generic ICE: assertion failed: key.value.promoted.is_none()", "user": {"login": "goodmanjonathan", "id": 3458868, "node_id": "MDQ6VXNlcjM0NTg4Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/3458868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goodmanjonathan", "html_url": "https://github.com/goodmanjonathan", "followers_url": "https://api.github.com/users/goodmanjonathan/followers", "following_url": "https://api.github.com/users/goodmanjonathan/following{/other_user}", "gists_url": "https://api.github.com/users/goodmanjonathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/goodmanjonathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goodmanjonathan/subscriptions", "organizations_url": "https://api.github.com/users/goodmanjonathan/orgs", "repos_url": "https://api.github.com/users/goodmanjonathan/repos", "events_url": "https://api.github.com/users/goodmanjonathan/events{/privacy}", "received_events_url": "https://api.github.com/users/goodmanjonathan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-06-01T16:21:23Z", "updated_at": "2019-08-20T07:44:42Z", "closed_at": "2019-08-20T07:44:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Promotion of const generic parameters causes the compiler to crash.\r\n\r\n```rust\r\n#![feature(const_generics)]\r\n\r\nfn promote<const N: i32>() {\r\n    // works:\r\n    //\r\n    // let n = N;\r\n    // &n;\r\n    \r\n    &N;\r\n}\r\n\r\nfn main() {\r\n    promote::<0>();\r\n}\r\n```\r\n\r\n```\r\n$ RUST_BACKTRACE=1 rustc +nightly promotion_const_generics_ice.rs\r\nwarning: the feature `const_generics` is incomplete and may cause the compiler to crash\r\n --> promotion_const_generics_ice.rs:1:12\r\n  |\r\n1 | #![feature(const_generics)]\r\n  |            ^^^^^^^^^^^^^^\r\n\r\nthread 'rustc' panicked at 'assertion failed: key.value.promoted.is_none()', src/librustc_mir/const_eval.rs:577:17\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/libunwind.rs:97\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.25/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:197\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:211\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:478\r\n   8: std::panicking::begin_panic\r\n   9: rustc_mir::const_eval::const_eval_provider\r\n  10: rustc::ty::query::__query_compute::const_eval\r\n  11: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval>::compute\r\n  12: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  13: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  14: rustc_mir::monomorphize::collector::collect_items_rec\r\n  15: rustc_mir::monomorphize::collector::collect_items_rec\r\n  16: rustc_mir::monomorphize::collector::collect_crate_mono_items::{{closure}}\r\n  17: rustc::util::common::time\r\n  18: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  19: rustc::util::common::time\r\n  20: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  21: rustc::ty::query::__query_compute::collect_and_partition_mono_items\r\n  22: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  23: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  24: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  25: rustc_codegen_ssa::base::codegen_crate\r\n  26: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  27: rustc::util::common::time\r\n  28: rustc_interface::passes::start_codegen\r\n  29: rustc::ty::context::tls::enter_global\r\n  30: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  31: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  32: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  33: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::ongoing_codegen\r\n  34: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  35: std::thread::local::LocalKey<T>::with\r\n  36: scoped_tls::ScopedKey<T>::set\r\n  37: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\n#0 [const_eval] const-evaluating + checking `promote`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.37.0-nightly (7840a0b75 2019-05-31) running on x86_64-unknown-linux-gnu\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61432/timeline", "performed_via_github_app": null, "state_reason": "completed"}