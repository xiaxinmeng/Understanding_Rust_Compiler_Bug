{"url": "https://api.github.com/repos/rust-lang/rust/issues/39188", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39188/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39188/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39188/events", "html_url": "https://github.com/rust-lang/rust/issues/39188", "id": 201922657, "node_id": "MDU6SXNzdWUyMDE5MjI2NTc=", "number": 39188, "title": "Allow `process::Child` to be used with external calls to `waitpid` ", "user": {"login": "zackw", "id": 325899, "node_id": "MDQ6VXNlcjMyNTg5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/325899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackw", "html_url": "https://github.com/zackw", "followers_url": "https://api.github.com/users/zackw/followers", "following_url": "https://api.github.com/users/zackw/following{/other_user}", "gists_url": "https://api.github.com/users/zackw/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackw/subscriptions", "organizations_url": "https://api.github.com/users/zackw/orgs", "repos_url": "https://api.github.com/users/zackw/repos", "events_url": "https://api.github.com/users/zackw/events{/privacy}", "received_events_url": "https://api.github.com/users/zackw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 657353545, "node_id": "MDU6TGFiZWw2NTczNTM1NDU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-accepted", "name": "C-feature-accepted", "color": "f5f1fd", "default": false, "description": "Category: A feature request that has been accepted pending implementation."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-19T17:20:46Z", "updated_at": "2019-12-10T16:41:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `wait` and `wait_with_output` methods of `process::Child` expect to do the waiting for the child to exit themselves.  If you are running many processes at once, and you don't know which one will finish first, this is inconvenient, because the system calls `wait` and `waitpid` consume each exit notification as they report it.  (`waitid` can be told not to do that, but it is not fully supported in the libc crate yet.)  That places the `Child` object in an inconsistent state, in which it is not safe to call `wait` or `wait_with_output`.\r\n\r\nIf `Child` had a `set_exit_status` method, an application in this situation could use it to keep the objects consistent:  something like\r\n\r\n```rust\r\nfn wait_all(children: &[&mut Child]) -> nix::Result<()> {\r\n    use nix::sys::wait::{wait, WaitStatus}\r\n    let mut pending : HashMap<u32, &mut Child> =\r\n        children.iter().map(|c| (c.id(), c)).collect();\r\n   while pending.len() {\r\n       let status = try!(wait());\r\n       match status {\r\n           Exited(pid, ..) | Signaled(pid, ..) => {\r\n               let mut child = try!(pending.remove(pid).ok_or(UnexpectedChild(pid)));\r\n               child.set_exit_status(status); \r\n           },\r\n           _ => unreachable!();\r\n        }\r\n    }\r\n    Ok(())\r\n}\r\n```\r\n\r\n(In this hypothetical, `ExitStatus` impls `From<nix::WaitStatus>`, which I believe nix can make happen without assistance from std.)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39188/timeline", "performed_via_github_app": null, "state_reason": null}