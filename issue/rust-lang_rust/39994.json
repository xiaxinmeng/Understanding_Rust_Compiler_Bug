{"url": "https://api.github.com/repos/rust-lang/rust/issues/39994", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39994/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39994/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39994/events", "html_url": "https://github.com/rust-lang/rust/issues/39994", "id": 209058262, "node_id": "MDU6SXNzdWUyMDkwNTgyNjI=", "number": 39994, "title": "RefCell should check for overflow of borrow counter", "user": {"login": "Storyyeller", "id": 999674, "node_id": "MDQ6VXNlcjk5OTY3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/999674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Storyyeller", "html_url": "https://github.com/Storyyeller", "followers_url": "https://api.github.com/users/Storyyeller/followers", "following_url": "https://api.github.com/users/Storyyeller/following{/other_user}", "gists_url": "https://api.github.com/users/Storyyeller/gists{/gist_id}", "starred_url": "https://api.github.com/users/Storyyeller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Storyyeller/subscriptions", "organizations_url": "https://api.github.com/users/Storyyeller/orgs", "repos_url": "https://api.github.com/users/Storyyeller/repos", "events_url": "https://api.github.com/users/Storyyeller/events{/privacy}", "received_events_url": "https://api.github.com/users/Storyyeller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-21T06:59:42Z", "updated_at": "2017-02-21T20:03:09Z", "closed_at": "2017-02-21T19:17:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just noticed that [BorrowFlag](https://github.com/rust-lang/rust/blob/a17e5e2949db53c9c1e3a697e41c254e31c0bdf3/src/libcore/cell.rs#L543) says the following\r\n\r\n```\r\n// Values [1, MAX-1] represent the number of `Ref` active\r\n// (will not outgrow its range since `usize` is the size of the address space)\r\ntype BorrowFlag = usize;\r\n```\r\n\r\nHowever, this is not a safe assumption due to mem::forget. I looked through the code, and I don't see any overflow checks. This means that by repeatedly borrowing and forgetting from a RefCell, you can overflow the internal counter.\r\n\r\nLuckily, once the counter overflows, the RefCell will appear to be in the mutably borrowed state, preventing any further borrows. So I _think_ this isn't a soundness issue. But it seems like it would be better to check, just to be sure, or at least add comments explaining why it is safe so people accidently don't mess it up in the future.\r\n\r\nEdit: I noticed that BorrowRef's clone() impl does check for overflow. Still, I think the current behavior of allowing the counter to get to WRITING before panicing is overflow error prone. RefCell might grow a method at some point which incorrectly interprets a WRITING state to mean that it is not immutably borrowed for instance.", "closed_by": {"login": "Storyyeller", "id": 999674, "node_id": "MDQ6VXNlcjk5OTY3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/999674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Storyyeller", "html_url": "https://github.com/Storyyeller", "followers_url": "https://api.github.com/users/Storyyeller/followers", "following_url": "https://api.github.com/users/Storyyeller/following{/other_user}", "gists_url": "https://api.github.com/users/Storyyeller/gists{/gist_id}", "starred_url": "https://api.github.com/users/Storyyeller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Storyyeller/subscriptions", "organizations_url": "https://api.github.com/users/Storyyeller/orgs", "repos_url": "https://api.github.com/users/Storyyeller/repos", "events_url": "https://api.github.com/users/Storyyeller/events{/privacy}", "received_events_url": "https://api.github.com/users/Storyyeller/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39994/timeline", "performed_via_github_app": null, "state_reason": "completed"}