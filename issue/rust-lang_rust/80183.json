{"url": "https://api.github.com/repos/rust-lang/rust/issues/80183", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80183/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80183/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80183/events", "html_url": "https://github.com/rust-lang/rust/issues/80183", "id": 771341114, "node_id": "MDU6SXNzdWU3NzEzNDExMTQ=", "number": 80183, "title": "`NonNull`'s `as_ref` / `as_mut` don't have arbitrary lifetimes as stated", "user": {"login": "Zenithsiz", "id": 34359769, "node_id": "MDQ6VXNlcjM0MzU5NzY5", "avatar_url": "https://avatars.githubusercontent.com/u/34359769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zenithsiz", "html_url": "https://github.com/Zenithsiz", "followers_url": "https://api.github.com/users/Zenithsiz/followers", "following_url": "https://api.github.com/users/Zenithsiz/following{/other_user}", "gists_url": "https://api.github.com/users/Zenithsiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zenithsiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zenithsiz/subscriptions", "organizations_url": "https://api.github.com/users/Zenithsiz/orgs", "repos_url": "https://api.github.com/users/Zenithsiz/repos", "events_url": "https://api.github.com/users/Zenithsiz/events{/privacy}", "received_events_url": "https://api.github.com/users/Zenithsiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 2242906716, "node_id": "MDU6TGFiZWwyMjQyOTA2NzE2", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-raw-pointers", "name": "A-raw-pointers", "color": "f7e101", "default": false, "description": "Area: raw pointers, MaybeUninit, NonNull"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-12-19T08:59:55Z", "updated_at": "2021-03-22T06:45:31Z", "closed_at": "2021-03-22T06:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs for [`NonNull::as_ref`](https://doc.rust-lang.org/nightly/std/ptr/struct.NonNull.html#method.as_ref) mention:\r\n> You must enforce Rust's aliasing rules, since the returned lifetime 'a is arbitrarily chosen and does not necessarily reflect the actual lifetime of the data. [...]\r\n\r\nWhich makes sense, the pointer doesn't carry a lifetime with it, so we need to decide on it. However, the implementation actually looks like this (with implicit lifetimes shown for clarity):\r\n```rust\r\npub unsafe fn as_ref<'a>(&'a self) -> &'a T {\r\n    // ...\r\n}\r\n```\r\nThis makes it so the reference constructed has the same lifetime as the pointer variable, which is likely not what is intended.\r\n\r\nThe same occurs for all of these methods currently:\r\n- [`as_ref`](https://doc.rust-lang.org/nightly/std/ptr/struct.NonNull.html#method.as_ref)\r\n- [`as_mut`](https://doc.rust-lang.org/nightly/std/ptr/struct.NonNull.html#method.as_mut)\r\n\r\nAdditionally, these unstable methods with `#![feature(ptr_as_uninit)]` (#75402) also have the same problem.\r\n- [`as_uninit_slice`](https://doc.rust-lang.org/nightly/std/ptr/struct.NonNull.html#method.as_uninit_slice)\r\n- [`as_uninit_slice_mut`](https://doc.rust-lang.org/nightly/std/ptr/struct.NonNull.html#method.as_uninit_slice_mut)\r\n- [`as_uninit_ref`](https://doc.rust-lang.org/nightly/std/ptr/struct.NonNull.html#method.as_uninit_ref)\r\n- [`as_uninit_mut`](https://doc.rust-lang.org/nightly/std/ptr/struct.NonNull.html#method.as_uninit_mut)", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80183/timeline", "performed_via_github_app": null, "state_reason": "completed"}