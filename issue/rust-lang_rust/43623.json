{"url": "https://api.github.com/repos/rust-lang/rust/issues/43623", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43623/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43623/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43623/events", "html_url": "https://github.com/rust-lang/rust/issues/43623", "id": 247629384, "node_id": "MDU6SXNzdWUyNDc2MjkzODQ=", "number": 43623, "title": "ICE: Failed to unify obligation", "user": {"login": "PieterPenninckx", "id": 21333083, "node_id": "MDQ6VXNlcjIxMzMzMDgz", "avatar_url": "https://avatars.githubusercontent.com/u/21333083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PieterPenninckx", "html_url": "https://github.com/PieterPenninckx", "followers_url": "https://api.github.com/users/PieterPenninckx/followers", "following_url": "https://api.github.com/users/PieterPenninckx/following{/other_user}", "gists_url": "https://api.github.com/users/PieterPenninckx/gists{/gist_id}", "starred_url": "https://api.github.com/users/PieterPenninckx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PieterPenninckx/subscriptions", "organizations_url": "https://api.github.com/users/PieterPenninckx/orgs", "repos_url": "https://api.github.com/users/PieterPenninckx/repos", "events_url": "https://api.github.com/users/PieterPenninckx/events{/privacy}", "received_events_url": "https://api.github.com/users/PieterPenninckx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-08-03T08:27:44Z", "updated_at": "2019-08-09T15:55:11Z", "closed_at": "2019-08-09T15:55:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The compiler ices with error \"Failed to unify obligation\" when I try to compile the following code:\r\n\r\n```rust\r\ntrait StreamingIterator<'a> {\r\n\ttype Item : 'a;\r\n\tfn next(&'a mut self) -> Option<Self::Item>;\r\n\tfn map<F>(self, f: F) -> StreamingIterMap<Self, F> \r\n\twhere Self: Sized\r\n\t{\r\n\t\tStreamingIterMap{iter: self, f: f}\r\n\t}\r\n}\r\n\r\nstruct StreamingIterMap<I, F>\r\n{\r\n\titer: I,\r\n\tf: F\r\n}\r\n\r\nimpl<'b, I, F, T> StreamingIterator<'b> for StreamingIterMap<I, F>\r\nwhere\r\n\tI: for<'a:'b> StreamingIterator<'a>,\r\n\tF: for<'a:'b> Fn(<I as StreamingIterator<'a>>::Item) -> T,\r\n\tT: 'b,\r\n{\r\n\ttype Item = T;\r\n\tfn next(&mut self) -> Option<T> {\r\n\t\tself.iter.next().map(&self.f)\r\n\t}\r\n}\r\n\r\nstruct StreamingCounter {\r\n\tindex: usize\r\n}\r\n\r\nimpl<'a> StreamingIterator<'a> for StreamingCounter  {\r\n\ttype Item = &'a usize;\r\n\tfn next(&'a mut self) -> Option<&'a usize> {\r\n\t\tself.index += 1;\r\n\t\tSome(&self.index)\r\n\t}\r\n}\r\n\r\nfn main() {\r\n\tlet mut svi = StreamingCounter{index: 0}\r\n\t\t.map(|u| Some(u));\r\n\tif let Some(ref i) = svi.next() {\r\n\t\tprintln!(\"{}\", i);\r\n\t}\r\n}\r\n```\r\n\r\nI get the following error:\r\n\r\n```\r\nerror: internal compiler error: /checkout/src/librustc/traits/project.rs:1230: Failed to unify obligation `Obligation(predicate=ProjectionTy { trait_ref: <[closure@test.rs:43:8: 43:19] as std::ops::FnOnce<(<StreamingCounter as StreamingIterator<'a>>::Item,)>>, item_def_id: DefId { krate: CrateNum(2), node: DefIndex(895) => core/ce488d1::ops[0]::FnOnce[0]::Output[0] } },depth=0)` with poly_projection `Binder(ProjectionPredicate(ProjectionTy { trait_ref: <[closure@test.rs:43:8: 43:19] as std::ops::FnOnce<(&usize,)>>, item_def_id: DefId { krate: CrateNum(2), node: DefIndex(895) => core/ce488d1::ops[0]::FnOnce[0]::Output[0] } }, std::option::Option<_>))`: Sorts(ExpectedFound { expected: &usize, found: <StreamingCounter as StreamingIterator<'a>>::Item })\r\n  --> test.rs:44:27\r\n   |\r\n44 | \tif let Some(ref i) = svi.next() {\r\n   | \t                         ^^^^\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /checkout/src/librustc_errors/lib.rs:428\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n```\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.19.0 (0ade33941 2017-07-17)\r\nbinary: rustc\r\ncommit-hash: 0ade339411587887bf01bcfa2e9ae4414c8900d4\r\ncommit-date: 2017-07-17\r\nhost: i686-unknown-linux-gnu\r\nrelease: 1.19.0\r\nLLVM version: 4.0\r\n```\r\n\r\nBacktrace:\r\n```\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:355\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:365\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:549\r\n   5: std::panicking::begin_panic\r\n   6: rustc_errors::Handler::span_bug\r\n   7: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   8: rustc::session::opt_span_bug_fmt\r\n   9: rustc::session::span_bug_fmt\r\n  10: rustc::traits::project::confirm_param_env_candidate\r\n  11: rustc::traits::project::confirm_callable_candidate\r\n  12: rustc::traits::project::confirm_closure_candidate\r\n  13: rustc::traits::project::confirm_candidate\r\n  14: rustc::traits::project::opt_normalize_projection_type\r\n  15: rustc::traits::project::poly_project_and_unify_type::{{closure}}\r\n  16: rustc::traits::project::poly_project_and_unify_type\r\n  17: rustc::traits::select::SelectionContext::evaluate_predicate_recursively\r\n  18: rustc::traits::select::SelectionContext::evaluate_obligation\r\n  19: <core::iter::Filter<I, P> as core::iter::iterator::Iterator>::next\r\n  20: rustc_typeck::check::method::probe::ProbeContext::consider_candidates\r\n  21: rustc_typeck::check::method::probe::ProbeContext::pick_method\r\n  22: rustc_typeck::check::method::probe::ProbeContext::pick_core\r\n  23: rustc_typeck::check::method::probe::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::probe_for_name\r\n  24: rustc_typeck::check::FnCtxt::check_method_call\r\n  25: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  26: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  27: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  28: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  29: rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}\r\n  30: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  31: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  32: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  33: rustc_typeck::check::FnCtxt::check_return_expr\r\n  34: rustc_typeck::check::check_fn\r\n  35: rustc_typeck::check::typeck_tables_of::{{closure}}\r\n  36: rustc_typeck::check::typeck_tables_of\r\n  37: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_tables_of<'tcx>>::try_get\r\n  38: rustc::ty::maps::TyCtxtAt::typeck_tables_of\r\n  39: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_tables_of\r\n  40: rustc_typeck::check::typeck_item_bodies\r\n  41: rustc::ty::maps::<impl rustc::ty::maps::queries::typeck_item_bodies<'tcx>>::try_get\r\n  42: rustc::ty::maps::TyCtxtAt::typeck_item_bodies\r\n  43: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::typeck_item_bodies\r\n  44: rustc_typeck::check_crate\r\n  45: rustc_driver::driver::phase_3_run_analysis_passes::{{closure}}\r\n  46: rustc_driver::driver::phase_3_run_analysis_passes\r\n  47: rustc_driver::driver::compile_input\r\n  48: rustc_driver::run_compiler\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43623/timeline", "performed_via_github_app": null, "state_reason": "completed"}