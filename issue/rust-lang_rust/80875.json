{"url": "https://api.github.com/repos/rust-lang/rust/issues/80875", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80875/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80875/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80875/events", "html_url": "https://github.com/rust-lang/rust/issues/80875", "id": 782823726, "node_id": "MDU6SXNzdWU3ODI4MjM3MjY=", "number": 80875, "title": "Const raw pointer to usize cast allowed in release mode, disallowed in debug mode", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-01-10T13:55:51Z", "updated_at": "2021-02-08T23:37:19Z", "closed_at": "2021-02-08T23:37:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While making a PoC for https://github.com/rust-lang/rust/issues/67456 it was discovered that the code beblow fails to compile in debug mode (https://github.com/rust-lang/rust/issues/67456#issuecomment-755780541), saying that \"pointer-to-integer cast needs an rfc before being allowed in constants\", while in release mode, the code compiles and runs.\r\nHere's a [playground](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=7f3994ca028ca38856f42f68c74e725d) link.\r\n```Rust\r\n#![feature(const_ptr_is_null)]\r\n#![feature(const_raw_ptr_to_usize_cast)]\r\n#![feature(const_raw_ptr_deref)]\r\n#![feature(const_slice_from_raw_parts)]\r\n#![feature(const_panic)]\r\n\r\n\r\nmod slice {\r\n    use core::mem;\r\n    use core::ptr;\r\n    \r\n    pub(crate) const unsafe fn is_aligned_and_not_null<T>(ptr: *const T) -> bool {\r\n        !ptr.is_null() && ptr as usize % mem::align_of::<T>() == 0\r\n    }\r\n\r\n    pub const unsafe fn from_raw_parts<'a, T>(data: *const T, len: usize) -> &'a [T] {\r\n        debug_assert!(\r\n            is_aligned_and_not_null(data),\r\n            \"attempt to create unaligned or null slice\"\r\n        );\r\n        debug_assert!(\r\n            mem::size_of::<T>().saturating_mul(len) <= isize::MAX as usize,\r\n            \"attempt to create slice covering at least half the address space\"\r\n        );\r\n        // SAFETY: the caller must uphold the safety contract for `from_raw_parts`.\r\n        unsafe { &*ptr::slice_from_raw_parts(data, len) }\r\n    }\r\n    \r\n    pub const fn from_ref<T>(reference: &T) -> &[T] {\r\n        unsafe {\r\n            from_raw_parts(reference, 1)\r\n        }\r\n    }\r\n}\r\n\r\nconst X: &[usize] = slice::from_ref(&1);\r\n\r\nfn main() {\r\n    dbg!(X);\r\n}\r\n```\r\n\r\nHere's the error message in debug mode:\r\n```\r\nerror: any use of this value will cause an error\r\n  --> src/main.rs:13:27\r\n   |\r\n13 |         !ptr.is_null() && ptr as usize % mem::align_of::<T>() == 0\r\n   |                           ^^^^^^^^^^^^\r\n   |                           |\r\n   |                           \"pointer-to-integer cast\" needs an rfc before being allowed inside constants\r\n   |                           inside `is_aligned_and_not_null::<usize>` at src/main.rs:13:27\r\n   |                           inside `slice::from_raw_parts::<usize>` at src/main.rs:18:13\r\n   |                           inside `slice::from_ref::<usize>` at src/main.rs:31:13\r\n   |                           inside `X` at src/main.rs:36:21\r\n...\r\n36 | const X: &[usize] = slice::from_ref(&1);\r\n   | ----------------------------------------\r\n   |\r\n   = note: `#[deny(const_err)]` on by default\r\n\r\nerror: aborting due to previous error; 1 warning emitted\r\n\r\nerror: could not compile `playground`\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80875/timeline", "performed_via_github_app": null, "state_reason": "completed"}