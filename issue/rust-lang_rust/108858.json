{"url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10718", "repository_url": "https://api.github.com/repos/rust-lang/rust-clippy", "labels_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10718/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10718/comments", "events_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10718/events", "html_url": "https://github.com/rust-lang/rust-clippy/issues/10718", "id": 1685579876, "node_id": "I_kwDOAZm0i85kd-hk", "number": 10718, "title": "Problem with cargo clippy --fix", "user": {"login": "holtgrewe", "id": 521780, "node_id": "MDQ6VXNlcjUyMTc4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/521780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holtgrewe", "html_url": "https://github.com/holtgrewe", "followers_url": "https://api.github.com/users/holtgrewe/followers", "following_url": "https://api.github.com/users/holtgrewe/following{/other_user}", "gists_url": "https://api.github.com/users/holtgrewe/gists{/gist_id}", "starred_url": "https://api.github.com/users/holtgrewe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holtgrewe/subscriptions", "organizations_url": "https://api.github.com/users/holtgrewe/orgs", "repos_url": "https://api.github.com/users/holtgrewe/repos", "events_url": "https://api.github.com/users/holtgrewe/events{/privacy}", "received_events_url": "https://api.github.com/users/holtgrewe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149309557, "node_id": "MDU6TGFiZWwxNDkzMDk1NTc=", "url": "https://api.github.com/repos/rust-lang/rust-clippy/labels/C-bug", "name": "C-bug", "color": "F5F1FD", "default": false, "description": "Category: Clippy is not doing the correct thing"}, {"id": 246553316, "node_id": "MDU6TGFiZWwyNDY1NTMzMTY=", "url": "https://api.github.com/repos/rust-lang/rust-clippy/labels/E-hard", "name": "E-hard", "color": "02E10C", "default": false, "description": "Call for participation: This a hard problem and requires more experience or effort to work on"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2023-03-07T11:22:41Z", "updated_at": "2023-06-08T17:20:02Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n-->\n\nI tried to run `cargo clippy --fix` on this code:\n\n- https://github.com/bihealth/mehari/tree/expose-clippy-fix-bug\n\nI expected to see this happen: *not a failure*\n\nInstead, this happened: *failure see below*\n\n### Meta\n\n```\n# rustc --version --verbose\nrustc 1.67.0 (fc594f156 2023-01-24)\nbinary: rustc\ncommit-hash: fc594f15669680fa70d255faec3ca3fb507c3405\ncommit-date: 2023-01-24\nhost: x86_64-unknown-linux-gnu\nrelease: 1.67.0\nLLVM version: 15.0.6\n# cargo clippy --version\nclippy 0.1.67 (fc594f1 2023-01-24)\n```\n\n<details>\n  <summary>Click here for full output</summary>\n\n    ```\n    cargo clippy --fix\n        Checking mehari v0.1.0 (/home/holtgrem_c/Development/mehari)\n    warning: failed to automatically apply fixes suggested by rustc to crate `mehari`\n\n    after fixes were automatically applied the compiler reported errors within these files:\n\n    * /home/holtgrem_c/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs\n    * /home/holtgrem_c/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/pin.rs\n    * src/db/create/seqvar_freqs/reading.rs\n\n    This likely indicates a bug in either rustc or cargo itself,\n    and we would appreciate a bug report! You're likely to see \n    a number of compiler warnings after this message which cargo\n    attempted to fix but failed. If you could open an issue at\n    https://github.com/rust-lang/rust/issues\n    quoting the full output of this command we'd be very appreciative!\n    Note that you may be able to make some more progress in the near-term\n    fixing code with the `--broken-code` flag\n\n    The following errors were reported:\n    error[E0308]: mismatched types\n    --> src/db/create/seqvar_freqs/reading.rs:86:13\n    |\n    86 |             readers,\n    |             ^^^^^^^ expected struct `noodles_util::variant::Reader`, found struct `std::boxed::Box`\n    |\n    = note: expected struct `std::vec::Vec<noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>`\n                found struct `std::vec::Vec<std::boxed::Box<noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>>`\n\n    error[E0308]: mismatched types\n    --> src/db/create/seqvar_freqs/reading.rs:87:13\n    |\n    87 |             headers,\n    |             ^^^^^^^ expected struct `noodles::noodles_vcf::Header`, found struct `std::boxed::Box`\n    |\n    = note: expected struct `std::vec::Vec<noodles::noodles_vcf::Header>`\n                found struct `std::vec::Vec<std::boxed::Box<noodles::noodles_vcf::Header>>`\n\n    error[E0599]: no method named `as_mut` found for struct `noodles_util::variant::Reader` in the current scope\n    --> src/db/create/seqvar_freqs/reading.rs:114:14\n        |\n    114 |             .as_mut()\n        |              ^^^^^^ method not found in `noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>`\n        |\n    ::: /home/holtgrem_c/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:373:8\n        |\n    373 |     fn as_mut(&mut self) -> &mut T;\n        |        ------\n        |        |\n        |        the method is available for `std::boxed::Box<noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>` here\n        |        the method is available for `std::boxed::Box<&mut noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>` here\n        |        the method is available for `std::boxed::Box<&noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>` here\n        |\n    ::: /home/holtgrem_c/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/pin.rs:701:12\n        |\n    701 |     pub fn as_mut(&mut self) -> Pin<&mut P::Target> {\n        |            ------ the method is available for `std::pin::Pin<&mut noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>` here\n        |\n    help: consider wrapping the receiver expression with the appropriate type\n        |\n    113 |         self.nexts[self.next] = Box::new(self.readers[self.next])\n        |                                 +++++++++                       +\n    help: consider wrapping the receiver expression with the appropriate type\n        |\n    113 |         self.nexts[self.next] = Box::new(&mut self.readers[self.next])\n        |                                 +++++++++++++                        +\n    help: consider wrapping the receiver expression with the appropriate type\n        |\n    113 |         self.nexts[self.next] = Pin::new(&mut self.readers[self.next])\n        |                                 +++++++++++++                        +\n    help: consider wrapping the receiver expression with the appropriate type\n        |\n    113 |         self.nexts[self.next] = Box::new(&self.readers[self.next])\n        |                                 ++++++++++                       +\n\n    error: aborting due to 3 previous errors\n\n    Some errors have detailed explanations: E0308, E0599.\n    For more information about an error, try `rustc --explain E0308`.\n    Original diagnostics will follow.\n\n    error[E0308]: mismatched types\n    --> src/db/create/seqvar_freqs/reading.rs:86:13\n    |\n    86 |             readers,\n    |             ^^^^^^^ expected struct `noodles_util::variant::Reader`, found struct `std::boxed::Box`\n    |\n    = note: expected struct `std::vec::Vec<noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>`\n                found struct `std::vec::Vec<std::boxed::Box<noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>>`\n\n    error[E0308]: mismatched types\n    --> src/db/create/seqvar_freqs/reading.rs:87:13\n    |\n    87 |             headers,\n    |             ^^^^^^^ expected struct `noodles::noodles_vcf::Header`, found struct `std::boxed::Box`\n    |\n    = note: expected struct `std::vec::Vec<noodles::noodles_vcf::Header>`\n                found struct `std::vec::Vec<std::boxed::Box<noodles::noodles_vcf::Header>>`\n\n    error[E0599]: no method named `as_mut` found for struct `noodles_util::variant::Reader` in the current scope\n    --> src/db/create/seqvar_freqs/reading.rs:114:14\n        |\n    114 |             .as_mut()\n        |              ^^^^^^ method not found in `noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>`\n        |\n    ::: /home/holtgrem_c/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:373:8\n        |\n    373 |     fn as_mut(&mut self) -> &mut T;\n        |        ------\n        |        |\n        |        the method is available for `std::boxed::Box<noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>` here\n        |        the method is available for `std::boxed::Box<&mut noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>` here\n        |        the method is available for `std::boxed::Box<&noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>` here\n        |\n    ::: /home/holtgrem_c/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/pin.rs:701:12\n        |\n    701 |     pub fn as_mut(&mut self) -> Pin<&mut P::Target> {\n        |            ------ the method is available for `std::pin::Pin<&mut noodles_util::variant::Reader<std::boxed::Box<(dyn std::io::BufRead + 'static)>>>` here\n        |\n    help: consider wrapping the receiver expression with the appropriate type\n        |\n    113 |         self.nexts[self.next] = Box::new(self.readers[self.next])\n        |                                 +++++++++                       +\n    help: consider wrapping the receiver expression with the appropriate type\n        |\n    113 |         self.nexts[self.next] = Box::new(&mut self.readers[self.next])\n        |                                 +++++++++++++                        +\n    help: consider wrapping the receiver expression with the appropriate type\n        |\n    113 |         self.nexts[self.next] = Pin::new(&mut self.readers[self.next])\n        |                                 +++++++++++++                        +\n    help: consider wrapping the receiver expression with the appropriate type\n        |\n    113 |         self.nexts[self.next] = Box::new(&self.readers[self.next])\n        |                                 ++++++++++                       +\n\n    Some errors have detailed explanations: E0308, E0599.\n    For more information about an error, try `rustc --explain E0308`.\n    error: could not compile `mehari` due to 3 previous errors\n    warning: build failed, waiting for other jobs to finish...\n    warning: use of `expect` followed by a function call\n    --> src/db/create/seqvar_freqs/reading.rs:40:18\n    |\n    40 |                 .expect(&format!(\"Invalid contig {}\", s)),\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"Invalid contig {}\", s))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_fun_call\n    = note: `#[warn(clippy::expect_fun_call)]` on by default\n\n    warning: variables can be used directly in the `format!` string\n    --> src/db/create/seqvar_freqs/reading.rs:40:26\n    |\n    40 |                 .expect(&format!(\"Invalid contig {}\", s)),\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\n    help: change this to\n    |\n    40 -                 .expect(&format!(\"Invalid contig {}\", s)),\n    40 +                 .expect(&format!(\"Invalid contig {s}\")),\n    |\n\n    warning: `Vec<T>` is already on the heap, the boxing is unnecessary\n    --> src/db/create/seqvar_freqs/reading.rs:50:14\n    |\n    50 |     readers: Vec<Box<VariantReader<Box<dyn BufRead>>>>,\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Vec<VariantReader<Box<dyn BufRead>>>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_box\n    = note: `#[warn(clippy::vec_box)]` on by default\n\n    warning: `Vec<T>` is already on the heap, the boxing is unnecessary\n    --> src/db/create/seqvar_freqs/reading.rs:52:14\n    |\n    52 |     headers: Vec<Box<VcfHeader>>,\n    |              ^^^^^^^^^^^^^^^^^^^ help: try: `Vec<VcfHeader>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_box\n\n    warning: using `clone` on type `usize` which implements the `Copy` trait\n    --> src/db/create/seqvar_freqs/reading.rs:179:28\n        |\n    179 |                         if lengths.get(idx).unwrap().clone() == length {\n        |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*lengths.get(idx).unwrap()`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n        = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n    warning: useless use of `vec!`\n    --> src/db/create/seqvar_freqs/reading.rs:288:13\n        |\n    288 | /             &vec![\n    289 | |                 \"tests/data/db/create/seqvar_freqs/gnomad.chrM.vcf\",\n    290 | |                 \"tests/data/db/create/seqvar_freqs/helix.chrM.vcf\",\n    291 | |             ],\n        | |_____________^\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_vec\n        = note: `#[warn(clippy::useless_vec)]` on by default\n    help: you can use a slice directly\n        |\n    288 ~             &[\"tests/data/db/create/seqvar_freqs/gnomad.chrM.vcf\",\n    289 ~                 \"tests/data/db/create/seqvar_freqs/helix.chrM.vcf\"],\n        |\n\n    warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n    --> src/db/create/seqvar_freqs/serialized.rs:132:1\n        |\n    132 | impl Into<Vec<u8>> for VcfVar {\n        | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        |\n        = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n                https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n        = note: `#[warn(clippy::from_over_into)]` on by default\n    help: replace the `Into` implentation with `From<db::create::seqvar_freqs::serialized::VcfVar>`\n        |\n    132 ~ impl From<VcfVar> for Vec<u8> {\n    133 ~     fn from(val: VcfVar) -> Self {\n    134 |         let mut result = Vec::new();\n    135 | \n    136 ~         result.extend_from_slice(chrom_name_to_key(&val.chrom).as_bytes());\n    137 ~         result.extend_from_slice(&val.pos.to_be_bytes());\n    138 ~         result.extend_from_slice(val.reference.as_bytes());\n    139 |         result.push(b'>');\n    140 ~         result.extend_from_slice(val.alternative.as_bytes());\n        |\n\n    warning: redundant clone\n    --> src/db/create/seqvar_freqs/serialized.rs:165:14\n        |\n    165 |         chrom.to_string()\n        |              ^^^^^^^^^^^^ help: remove this\n        |\n    note: this value is dropped without further use\n    --> src/db/create/seqvar_freqs/serialized.rs:165:9\n        |\n    165 |         chrom.to_string()\n        |         ^^^^^\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone\n        = note: `#[warn(clippy::redundant_clone)]` on by default\n\n    warning: stripping a prefix manually\n    --> src/db/create/seqvar_freqs/serialized.rs:149:9\n        |\n    149 |         &name[3..]\n        |         ^^^^^^^^^^\n        |\n    note: the prefix was tested here\n    --> src/db/create/seqvar_freqs/serialized.rs:148:17\n        |\n    148 |     let chrom = if name.starts_with(\"chr\") {\n        |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_strip\n        = note: `#[warn(clippy::manual_strip)]` on by default\n    help: try using the `strip_prefix` method\n        |\n    148 ~     let chrom = if let Some(<stripped>) = name.strip_prefix(\"chr\") {\n    149 ~         <stripped>\n        |\n\n    warning: redundant slicing of the whole range\n    --> src/db/create/seqvar_freqs/serialized.rs:151:9\n        |\n    151 |         &name[..]\n        |         ^^^^^^^^^ help: use the original value instead: `name`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_slicing\n        = note: `#[warn(clippy::redundant_slicing)]` on by default\n\n    warning: variables can be used directly in the `format!` string\n    --> src/db/create/seqvar_freqs/serialized.rs:156:9\n        |\n    156 |         format!(\" {}\", chrom)\n        |         ^^^^^^^^^^^^^^^^^^^^^\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    help: change this to\n        |\n    156 -         format!(\" {}\", chrom)\n    156 +         format!(\" {chrom}\")\n        |\n\n    warning: length comparison to one\n    --> src/db/create/seqvar_freqs/serialized.rs:161:13\n        |\n    161 |     assert!(chrom.len() >= 1);\n        |             ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!chrom.is_empty()`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n        = note: `#[warn(clippy::len_zero)]` on by default\n\n    warning: variables can be used directly in the `format!` string\n    --> src/db/create/seqvar_freqs/serialized.rs:163:9\n        |\n    163 |         format!(\"0{}\", chrom)\n        |         ^^^^^^^^^^^^^^^^^^^^^\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    help: change this to\n        |\n    163 -         format!(\"0{}\", chrom)\n    163 +         format!(\"0{chrom}\")\n        |\n\n    warning: single-character string constant used as pattern\n    --> src/db/create/seqvar_freqs/serialized.rs:172:24\n        |\n    172 |     if key.starts_with(\"0\") || key.starts_with(\" \") {\n        |                        ^^^ help: try using a `char` instead: `'0'`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n        = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n    warning: single-character string constant used as pattern\n    --> src/db/create/seqvar_freqs/serialized.rs:172:48\n        |\n    172 |     if key.starts_with(\"0\") || key.starts_with(\" \") {\n        |                                                ^^^ help: try using a `char` instead: `' '`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:75:39\n    |\n    75 |                 MultiVcfReader::new(&[&path_gnomad], assembly)\n    |                                       ^^^^^^^^^^^^ help: change this to: `path_gnomad`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:82:39\n    |\n    82 |                 MultiVcfReader::new(&[&path_helix], assembly)\n    |                                       ^^^^^^^^^^^ help: change this to: `path_helix`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: redundant clone\n    --> src/db/create/seqvar_freqs/mod.rs:145:87\n        |\n    145 |                         self.helix_next = self.helix_reader.as_mut().unwrap().pop()?.0.clone();\n        |                                                                                       ^^^^^^^^ help: remove this\n        |\n    note: this value is dropped without further use\n    --> src/db/create/seqvar_freqs/mod.rs:145:43\n        |\n    145 |                         self.helix_next = self.helix_reader.as_mut().unwrap().pop()?.0.clone();\n        |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone\n\n    warning: redundant clone\n    --> src/db/create/seqvar_freqs/mod.rs:146:89\n        |\n    146 |                         self.gnomad_next = self.gnomad_reader.as_mut().unwrap().pop()?.0.clone();\n        |                                                                                         ^^^^^^^^ help: remove this\n        |\n    note: this value is dropped without further use\n    --> src/db/create/seqvar_freqs/mod.rs:146:44\n        |\n    146 |                         self.gnomad_next = self.gnomad_reader.as_mut().unwrap().pop()?.0.clone();\n        |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone\n\n    warning: redundant clone\n    --> src/db/create/seqvar_freqs/mod.rs:150:87\n        |\n    150 |                         self.helix_next = self.helix_reader.as_mut().unwrap().pop()?.0.clone();\n        |                                                                                       ^^^^^^^^ help: remove this\n        |\n    note: this value is dropped without further use\n    --> src/db/create/seqvar_freqs/mod.rs:150:43\n        |\n    150 |                         self.helix_next = self.helix_reader.as_mut().unwrap().pop()?.0.clone();\n        |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:117:38\n        |\n    117 |                     VcfVar::from_vcf(&helix),\n        |                                      ^^^^^^ help: change this to: `helix`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:119:40\n        |\n    119 |                     MtCounts::from_vcf(&helix),\n        |                                        ^^^^^^ help: change this to: `helix`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:125:38\n        |\n    125 |                     VcfVar::from_vcf(&gnomad),\n        |                                      ^^^^^^^ help: change this to: `gnomad`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:126:40\n        |\n    126 |                     MtCounts::from_vcf(&gnomad),\n        |                                        ^^^^^^^ help: change this to: `gnomad`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:136:61\n        |\n    136 |                         func(var_gnomad, MtCounts::from_vcf(&gnomad), MtCounts::default())?;\n        |                                                             ^^^^^^^ help: change this to: `gnomad`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:142:48\n        |\n    142 | ...                   MtCounts::from_vcf(&gnomad),\n        |                                          ^^^^^^^ help: change this to: `gnomad`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:143:48\n        |\n    143 | ...                   MtCounts::from_vcf(&helix),\n        |                                          ^^^^^^ help: change this to: `helix`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: this expression creates a reference which is immediately dereferenced by the compiler\n    --> src/db/create/seqvar_freqs/mod.rs:149:81\n        |\n    149 |                         func(var_helix, MtCounts::default(), MtCounts::from_vcf(&helix))?;\n        |                                                                                 ^^^^^^ help: change this to: `helix`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: the borrowed expression implements the required traits\n    --> src/db/create/seqvar_freqs/mod.rs:184:9\n        |\n    184 |         &[\"meta\", \"nuclear\", \"mitochondrial\"],\n        |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"meta\", \"nuclear\", \"mitochondrial\"]`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n    warning: in an `if` condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n    --> src/db/create/seqvar_freqs/mod.rs:207:61\n        |\n    207 |       while mt_reader.run(|variant, gnomad_mtdna, helix_mtdb| {\n        |  _____________________________________________________________^\n    208 | |         tracing::trace!(\n    209 | |             \"at {:?} | {:?} | {:?}\",\n    210 | |             &variant,\n    ...   |\n    223 | |         Ok(())\n    224 | |     })? {\n        | |_____^\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_if_conditions\n        = note: `#[warn(clippy::blocks_in_if_conditions)]` on by default\n\n    warning: `mehari` (bin \"mehari\" test) generated 30 warnings\n    ```\n</details>\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"blyxyas\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10718/timeline", "performed_via_github_app": null, "state_reason": null}