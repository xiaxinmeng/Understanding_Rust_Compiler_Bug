{"url": "https://api.github.com/repos/rust-lang/rust/issues/63502", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63502/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63502/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63502/events", "html_url": "https://github.com/rust-lang/rust/issues/63502", "id": 479823017, "node_id": "MDU6SXNzdWU0Nzk4MjMwMTc=", "number": 63502, "title": "Error \"cannot infer type\" when using '?' in async block + bad diagnostic", "user": {"login": "russelltg", "id": 7105082, "node_id": "MDQ6VXNlcjcxMDUwODI=", "avatar_url": "https://avatars.githubusercontent.com/u/7105082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/russelltg", "html_url": "https://github.com/russelltg", "followers_url": "https://api.github.com/users/russelltg/followers", "following_url": "https://api.github.com/users/russelltg/following{/other_user}", "gists_url": "https://api.github.com/users/russelltg/gists{/gist_id}", "starred_url": "https://api.github.com/users/russelltg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/russelltg/subscriptions", "organizations_url": "https://api.github.com/users/russelltg/orgs", "repos_url": "https://api.github.com/users/russelltg/repos", "events_url": "https://api.github.com/users/russelltg/events{/privacy}", "received_events_url": "https://api.github.com/users/russelltg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-08-12T19:57:49Z", "updated_at": "2023-03-25T18:03:22Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This seems related to #42424, except I don't see an obvious workaround like in #42424.\r\n\r\n```rust\r\n#![feature(async_await)]\r\n\r\nuse std::io::Error;\r\n\r\nfn make_unit() -> Result<(), Error> { \r\n    Ok(())\r\n}\r\n\r\nfn main() {\r\n    let fut = async {\r\n        make_unit()?;\r\n        \r\n        Ok(())\r\n    };\r\n}\r\n```\r\n\r\nFails with the error\r\n\r\n```\r\nerror[E0282]: type annotations needed for `impl std::future::Future`\r\n  --> src/main.rs:11:9\r\n   |\r\n10 |     let fut = async {\r\n   |         --- consider giving `fut` the explicit type `impl std::future::Future`, with the type parameters specified\r\n11 |         make_unit()?;\r\n   |         ^^^^^^^^^^^^ cannot infer type\r\n```\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=ea7e5f7b6e1637f6a39aee0b8209c99e\r\n\r\nFirst of all, it seems like this shouldn't be an error--it should be able to deduce that the return type is `Result<(), io::Error>`, but also the diagnostic **does not work**. If you try to add `impl std::future::Future<Output=Result<(), Error>>` as a type annotation, it also fails to compile because `impl Trait` is only allowed as return types and argument types. \r\n\r\n[Playground link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=e2dacce6293b9d0bb238a3df0d4f2877) \r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63502/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63502/timeline", "performed_via_github_app": null, "state_reason": null}