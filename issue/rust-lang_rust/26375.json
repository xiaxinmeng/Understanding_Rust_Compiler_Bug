{"url": "https://api.github.com/repos/rust-lang/rust/issues/26375", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26375/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26375/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26375/events", "html_url": "https://github.com/rust-lang/rust/issues/26375", "id": 89122099, "node_id": "MDU6SXNzdWU4OTEyMjA5OQ==", "number": 26375, "title": "TRPL: Requested: explanation of Lifetimes on `impl`", "user": {"login": "mcast", "id": 36801, "node_id": "MDQ6VXNlcjM2ODAx", "avatar_url": "https://avatars.githubusercontent.com/u/36801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcast", "html_url": "https://github.com/mcast", "followers_url": "https://api.github.com/users/mcast/followers", "following_url": "https://api.github.com/users/mcast/following{/other_user}", "gists_url": "https://api.github.com/users/mcast/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcast/subscriptions", "organizations_url": "https://api.github.com/users/mcast/orgs", "repos_url": "https://api.github.com/users/mcast/repos", "events_url": "https://api.github.com/users/mcast/events{/privacy}", "received_events_url": "https://api.github.com/users/mcast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-17T20:47:01Z", "updated_at": "2015-07-08T01:11:51Z", "closed_at": "2015-07-08T01:11:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think this is an omission from TRPL, in the description of either Lifetimes or impl - requesting because I think any new user would benefit from it.\n\nHaving got a limited understanding of `struct`, lifetime and `impl` I wanted to write\n\n``` rust\npub struct Foo<'a> { ... }\nimpl Foo<'a> {\n  pub fn new<'a>(...) -> Foo<'a> { ...}\n}\n```\n\nthinking that the `'a` on `impl Foo` defines it for... whatever is using it later.\n\nI got the answer ([thanks user22207](http://stackoverflow.com/questions/26959015/impl-for-structs-in-rust) / made mcast/markdown-chapterise@9fcff539) and concluded that in\n\n``` rust\nimpl<'a> Foo<'b> {   // does not compile\n```\n\nI am _defining_ `'a` for the impl block, then using that definition at `'b` (which must be `'a` here, to compile) to describe the `Foo`.\n\nThe sort of explanatory example that would make sense to me would be like\n\n``` rust\n// does not compile\nstruct Foo<'a, 'b> {\n  bar: &'c str,\n  baz: &'d str,\n}\n\nimpl<'e, 'f> Foo<'g, 'h> {\n  fn mkfoo<'i>(arg: &'j str) -> Foo<'k> { ... }\n}\n```\n\nin which I avoid repeating a lifetime label so it's easier to describe\n- which define and which consume\n- which could be elided & when, and what that means\n- what the described lifetime constraints will mean when we set _e.g._ `'a == 'c == 'e` and so on, to make it compile\n- relationships to lifetimes in enclosing blocks, if there could be any\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26375/timeline", "performed_via_github_app": null, "state_reason": "completed"}