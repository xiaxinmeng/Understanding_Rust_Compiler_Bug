{"url": "https://api.github.com/repos/rust-lang/rust/issues/42505", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42505/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42505/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42505/events", "html_url": "https://github.com/rust-lang/rust/issues/42505", "id": 234208462, "node_id": "MDU6SXNzdWUyMzQyMDg0NjI=", "number": 42505, "title": "Add an API for lazy-cloning the key in a HashMap", "user": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-07T13:25:40Z", "updated_at": "2017-06-07T13:33:15Z", "closed_at": "2017-06-07T13:30:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following snippet:\r\n\r\n```rust\r\nlet mut map = HashMap::new();\r\n// ...\r\nfor key in foo.iter() {\r\n  // This loop is performance-critical.\r\n  map.entry(key.clone()).or_insert(0)\r\n}\r\n```\r\n\r\nThis snippet requires us to always clone `key`, even if the key is already present in `map`. In a short program I recently wrote, in which the same value of `key` appeared quite often in `foo`, this proved much more slower than:\r\n\r\n```rust\r\nfor key in foo.iter() {\r\n  // This loop is performance-critical.\r\n\r\n  if map.get(key).is_none() { // Two lookups in `map`, but only one call to `clone`.\r\n    map.insert(key.clone(), 0);\r\n  }\r\n}\r\n```\r\n\r\nI believe that we can do better by introducing an API along the lines of\r\n\r\n```rust\r\npub fn lazy_entry(&mut self, key: &K) -> LazyEntry<K, V> where K: Clone\r\n```\r\n\r\nThe behavior of `LazyEntry` being the same as `Entry`, except for the fact that cloning takes place only if the code attempts to insert in a `Vacant` `LazyEntry`.", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42505/timeline", "performed_via_github_app": null, "state_reason": "completed"}