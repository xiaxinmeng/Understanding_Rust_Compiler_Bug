{"url": "https://api.github.com/repos/rust-lang/rust/issues/15224", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15224/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15224/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15224/events", "html_url": "https://github.com/rust-lang/rust/issues/15224", "id": 36701467, "node_id": "MDU6SXNzdWUzNjcwMTQ2Nw==", "number": 15224, "title": "adding wcwidth for char in libcore", "user": {"login": "kwantam", "id": 716593, "node_id": "MDQ6VXNlcjcxNjU5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/716593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwantam", "html_url": "https://github.com/kwantam", "followers_url": "https://api.github.com/users/kwantam/followers", "following_url": "https://api.github.com/users/kwantam/following{/other_user}", "gists_url": "https://api.github.com/users/kwantam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwantam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwantam/subscriptions", "organizations_url": "https://api.github.com/users/kwantam/orgs", "repos_url": "https://api.github.com/users/kwantam/repos", "events_url": "https://api.github.com/users/kwantam/events{/privacy}", "received_events_url": "https://api.github.com/users/kwantam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-27T20:33:58Z", "updated_at": "2014-07-09T20:16:31Z", "closed_at": "2014-07-09T20:16:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to have a `wcwidth`-alike, presumably living in core::unicode and exposed as a char method. I've got a working local implementation of this that automatically generates the search tables for 0- and double-width characters from the latest unicode data (this does not need to be done at build time, only when the unicode charsets are updated).\n\nIf this is a desirable feature, can you give me some guidance as to\n1. What the function should be called (`wcwidth` is pretty C-ish and maybe not so Rustic).\n2. Where the autogen stuff should live (maybe in `src/etc/unicode_width`?)\n3. Whether you'd like me to add a `wcwidth_cjk`-equivalent function, whose behavior is slightly different on certain spacing characters, as described in http://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c (see comment above the `mk_wcwidth_cjk` function).\n\nAny other thoughts are, of course, appreciated.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15224/timeline", "performed_via_github_app": null, "state_reason": "completed"}