{"url": "https://api.github.com/repos/rust-lang/rust/issues/83448", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83448/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83448/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83448/events", "html_url": "https://github.com/rust-lang/rust/issues/83448", "id": 840089358, "node_id": "MDU6SXNzdWU4NDAwODkzNTg=", "number": 83448, "title": "Confusing lifetime error with `'static` bound in `?` implicit `From`", "user": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-03-24T19:24:55Z", "updated_at": "2021-08-16T16:57:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "A responce to [this tweet](https://twitter.com/ekuber/status/1373305373197623299) from @estebank \r\n\r\nGiven the following code: ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4a9dea98c22879421c6a46d8a1973772))\r\n\r\n```rust\r\n#[derive(Debug)]\r\nstruct StringErr<'a>(&'a str);\r\nimpl std::error::Error for StringErr<'_> {}\r\nimpl std::fmt::Display for StringErr<'_> {\r\n    fn fmt(&self, _: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\r\n        Ok(())\r\n    }\r\n}\r\n\r\nstruct BoxError(Box<dyn std::error::Error + 'static>);\r\nimpl<E: std::error::Error + 'static> From<E> for BoxError {\r\n    fn from(e: E) -> Self {\r\n        Self(Box::new(e))\r\n    }\r\n}\r\n\r\nfn parse<'a>(x: &'a str) -> Result<&'a str, StringErr<'a>> {\r\n    Ok(x)\r\n}\r\n\r\nfn my_main() -> Result<(), BoxError> {\r\n    let s = String::new();\r\n    parse(&s)?;\r\n    Ok(())\r\n}\r\n\r\n```\r\n\r\nThe current output is: (with `rustc +nightly foo.rs --crate-type lib`)\r\n\r\n```\r\nerror[E0597]: `s` does not live long enough\r\n  --> src/lib.rs:23:11\r\n   |\r\n23 |     parse(&s)?;\r\n   |     ------^^-\r\n   |     |     |\r\n   |     |     borrowed value does not live long enough\r\n   |     argument requires that `s` is borrowed for `'static`\r\n24 |     Ok(())\r\n25 | }\r\n   | - `s` dropped here while still borrowed\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nThe problem is this is that it is super inclear why the `'static` bound is needed, as the arrows point to the `parse` function,\r\nwhich does not require `'static`\r\n\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0597]: `s` does not live long enough\r\n  --> src/lib.rs:23:11\r\n   |\r\n23 |     parse(&s)?;\r\n   |           ^^ ^\r\n   |           |  |\r\n   |           |  argument requires that `s` is borrowed for `'static`\r\n   |           |\r\n   |           borrowed value does not live long enough\r\n24 |     Ok(())\r\n25 | }\r\n   | - `s` dropped here while still borrowed\r\n\r\nNote: Required by the bound in the conversion from `StringErr` to `BoxError`\r\nimpl<E: std::error::Error + 'static> From<E> for BoxError {\r\n                            ^^^^^^^\r\n                            |\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nHere we instead point to the `?` as the source of the `static` bound, and also point out that it exists in the conversion impl\r\n\r\nThis actualy came up when using `eyre`/`anyhow`, and a `lalrpop` parser that returns an error that references into the input string, but I've removed them to make the report self contained.\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n\r\n```\r\nrustc 1.51.0 (2fd73fabe 2021-03-23)\r\nbinary: rustc\r\ncommit-hash: 2fd73fabe469357a12c2c974c140f67e7cdd76d0\r\ncommit-date: 2021-03-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0\r\nLLVM version: 11.0.1\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83448/timeline", "performed_via_github_app": null, "state_reason": null}