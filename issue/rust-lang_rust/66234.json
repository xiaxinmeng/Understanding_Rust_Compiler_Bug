{"url": "https://api.github.com/repos/rust-lang/rust/issues/66234", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/66234/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/66234/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/66234/events", "html_url": "https://github.com/rust-lang/rust/issues/66234", "id": 520292483, "node_id": "MDU6SXNzdWU1MjAyOTI0ODM=", "number": 66234, "title": "Optimize out nop-matches", "user": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 1927601458, "node_id": "MDU6TGFiZWwxOTI3NjAxNDU4", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt", "name": "A-mir-opt", "color": "f7e101", "default": false, "description": "Area: MIR optimizations"}, {"id": 2019962432, "node_id": "MDU6TGFiZWwyMDE5OTYyNDMy", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir-opt-inlining", "name": "A-mir-opt-inlining", "color": "f7e101", "default": false, "description": "Area: MIR inlining"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-09T00:12:15Z", "updated_at": "2020-09-20T14:34:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `?` operator is not zero cost right now, because the matches generated by it don't get optimized as well as they could.\r\n\r\nLooking at https://play.rust-lang.org/?version=stable&mode=release&edition=2018&gist=627df52e7c476667ecf9a9831eecf829\r\n\r\nI see \r\n\r\n```rust\r\n_3 = ((_1 as Ok).0: u32);\r\n_4 = _3;\r\n((_0 as Ok).0: u32) = move _4;\r\ndiscriminant(_0) = 0;\r\n```\r\n\r\nand \r\n\r\n```rust\r\n_5 = ((_1 as Err).0: i32);\r\n_6 = _5;\r\n((_0 as Err).0: i32) = move _6;\r\ndiscriminant(_0) = 1;\r\n```\r\n\r\nWhich we could reasonably write a peephole optimization for getting transformed to\r\n\r\n```rust\r\n_0 = _1\r\n```\r\n\r\neach\r\n\r\nThen a second optimization could find `switchInt` terminators where all basic blocks are the same and eliminate the `switchInt` by replacing it to a goto to the first basic block being switched to.\r\n\r\nThis will even benefit matches where only one arm is a nop, because that arm will just become a memcopy", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/66234/reactions", "total_count": 16, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 16, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/66234/timeline", "performed_via_github_app": null, "state_reason": null}