{"url": "https://api.github.com/repos/rust-lang/rust/issues/56488", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56488/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56488/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56488/events", "html_url": "https://github.com/rust-lang/rust/issues/56488", "id": 387061343, "node_id": "MDU6SXNzdWUzODcwNjEzNDM=", "number": 56488, "title": "ICE with trait aliases and use items", "user": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 239393, "node_id": "MDU6TGFiZWwyMzkzOTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-resolve", "name": "A-resolve", "color": "f7e101", "default": false, "description": "Area: Path resolution"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-04T00:08:56Z", "updated_at": "2019-01-19T18:37:24Z", "closed_at": "2019-01-19T18:37:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "cc https://github.com/rust-lang/rust/issues/41517\r\ncc https://github.com/rust-lang/rust/issues/56485\r\ncc @alexreg \r\n\r\n```rust\r\n#![feature(trait_alias)]\r\n\r\nmod alpha {\r\n    pub trait A { fn foo(); }\r\n    pub trait B { fn foo(); }\r\n    pub trait C = A;\r\n}\r\n\r\nuse alpha::C;\r\n```\r\n\r\ncauses:\r\n\r\n```\r\nerror: internal compiler error: src/librustc_metadata/encoder.rs:1158: cannot encode info for item Item { name: C, id: NodeId(20), hir_id: HirId { owner: DefIndex(0:8), local_id: 0 }, attrs: [], node: TraitAlias(Generics { params: [], where_clause: WhereClause { id: NodeId(21), predicates: [] }, span: src/lib.rs:1:1: 1:1 }, [Trait(PolyTraitRef { bound_generic_params: [], trait_ref: TraitRef { path: path(A), ref_id: NodeId(22), hir_ref_id: HirId { owner: DefIndex(0:8), local_id: 3 } }, span: src/lib.rs:6:19: 6:20 }, None), Trait(PolyTraitRef { bound_generic_params: [], trait_ref: TraitRef { path: path(B), ref_id: NodeId(24), hir_ref_id: HirId { owner: DefIndex(0:8), local_id: 5 } }, span: src/lib.rs:6:23: 6:24 }, None)]), vis: Spanned { node: Public, span: src/lib.rs:6:5: 6:8 }, span: src/lib.rs:6:5: 6:25 }\r\n\r\nthread 'main' panicked at 'Box<Any>', src/librustc_errors/lib.rs:600:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:495\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: rustc_metadata::encoder::<impl rustc_metadata::isolated_encoder::IsolatedEncoder<'a, 'b, 'tcx>>::encode_info_for_item\r\n  15: rustc::ty::context::tls::with_context\r\n  16: <rustc_metadata::encoder::EncodeVisitor<'a, 'b, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  17: rustc::hir::Crate::visit_all_item_likes\r\n  18: rustc_metadata::encoder::encode_metadata\r\n  19: rustc_metadata::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::cstore::CStore>::encode_metadata\r\n  20: rustc::ty::context::TyCtxt::encode_metadata\r\n  21: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::ExtraBackendMethods>::write_metadata\r\n  22: rustc::util::common::time\r\n  23: rustc_codegen_ssa::base::codegen_crate\r\n  24: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  25: rustc::util::common::time\r\n  26: rustc_driver::driver::phase_4_codegen\r\n  27: rustc_driver::driver::compile_input::{{closure}}\r\n  28: rustc::ty::context::tls::enter_context\r\n  29: <std::thread::local::LocalKey<T>>::with\r\n  30: rustc::ty::context::TyCtxt::create_and_enter\r\n  31: rustc_driver::driver::compile_input\r\n  32: rustc_driver::run_compiler_with_pool\r\n  33: <scoped_tls::ScopedKey<T>>::set\r\n  34: rustc_driver::run_compiler\r\n  35: rustc_driver::monitor::{{closure}}\r\n  36: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  37: rustc_driver::run\r\n  38: rustc_driver::main\r\n  39: std::rt::lang_start::{{closure}}\r\n  40: std::panicking::try::do_call\r\n             at src/libstd/rt.rs:59\r\n             at src/libstd/panicking.rs:310\r\n  41: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  42: std::rt::lang_start_internal\r\n             at src/libstd/panicking.rs:289\r\n             at src/libstd/panic.rs:398\r\n             at src/libstd/rt.rs:58\r\n  43: main\r\n  44: __libc_start_main\r\n  45: <unknown>\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-nightly (21f268495 2018-12-02) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n```\r\n\r\nreduced somewhat:\r\n\r\n```rust\r\n#![feature(trait_alias)]\r\n\r\nmod alpha {\r\n    trait A { fn foo(); }\r\n    pub trait C = A;\r\n}\r\n\r\nuse alpha::C;\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56488/timeline", "performed_via_github_app": null, "state_reason": "completed"}