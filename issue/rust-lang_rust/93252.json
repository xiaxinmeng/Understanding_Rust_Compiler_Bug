{"url": "https://api.github.com/repos/rust-lang/rust/issues/93252", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93252/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93252/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93252/events", "html_url": "https://github.com/rust-lang/rust/issues/93252", "id": 1112029668, "node_id": "I_kwDOAAsO6M5CSDnk", "number": 93252, "title": "Confusing lifetime suggestion with multiple references and impl Trait", "user": {"login": "mkeeter", "id": 745333, "node_id": "MDQ6VXNlcjc0NTMzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/745333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkeeter", "html_url": "https://github.com/mkeeter", "followers_url": "https://api.github.com/users/mkeeter/followers", "following_url": "https://api.github.com/users/mkeeter/following{/other_user}", "gists_url": "https://api.github.com/users/mkeeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkeeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkeeter/subscriptions", "organizations_url": "https://api.github.com/users/mkeeter/orgs", "repos_url": "https://api.github.com/users/mkeeter/repos", "events_url": "https://api.github.com/users/mkeeter/events{/privacy}", "received_events_url": "https://api.github.com/users/mkeeter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-01-24T00:13:53Z", "updated_at": "2022-01-24T00:13:53Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code ([playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=acbea93c84794b22e175b4359e41ccfa))\r\n\r\n```rust\r\nfn pick_n<R: rand::Rng, T: Copy>(rng: &mut R, n: usize, vs: &[T]) -> impl Iterator<Item = T> {\r\n    let mut mask = vec![true; vs.len()];\r\n    (0..n).map(move |_| loop {\r\n        let k = rng.gen_range(0..vs.len());\r\n        if mask[k] {\r\n            mask[k] = false;\r\n            break vs[k];\r\n        }\r\n    })\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\r\n --> src/lib.rs:1:70\r\n  |\r\n1 | fn pick_n<R: rand::Rng, T: Copy>(rng: &mut R, n: usize, vs: &[T]) -> impl Iterator<Item = T> {\r\n  |                                       ------                         ^^^^^^^^^^^^^^^^^^^^^^^\r\n  |                                       |\r\n  |                                       hidden type `Map<std::ops::Range<usize>, [closure@src/lib.rs:3:16: 9:6]>` captures the anonymous lifetime defined here\r\n  |\r\nhelp: to declare that the `impl Trait` captures `'_`, you can add an explicit `'_` lifetime bound\r\n  |\r\n1 | fn pick_n<R: rand::Rng, T: Copy>(rng: &mut R, n: usize, vs: &[T]) -> impl Iterator<Item = T> + '_ {\r\n  |                                                                                              ++++\r\n\r\nerror[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\r\n --> src/lib.rs:1:70\r\n  |\r\n1 | fn pick_n<R: rand::Rng, T: Copy>(rng: &mut R, n: usize, vs: &[T]) -> impl Iterator<Item = T> {\r\n  |                                                             ----     ^^^^^^^^^^^^^^^^^^^^^^^\r\n  |                                                             |\r\n  |                                                             hidden type `Map<std::ops::Range<usize>, [closure@src/lib.rs:3:16: 9:6]>` captures the anonymous lifetime defined here\r\n  |\r\nhelp: to declare that the `impl Trait` captures `'_`, you can add an explicit `'_` lifetime bound\r\n  |\r\n1 | fn pick_n<R: rand::Rng, T: Copy>(rng: &mut R, n: usize, vs: &[T]) -> impl Iterator<Item = T> + '_ {\r\n  |                                                                                              ++++\r\n\r\nFor more information about this error, try `rustc --explain E0700`.\r\nerror: could not compile `playground` due to 2 previous errors\r\n```\r\n\r\nThis is confusing, because making the suggested change (of adding `'_` to the `impl Trait`) doesn't actually work ([playground Link](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=a8785a3e0196a2e54f3a0d97d5991ae4)):\r\n\r\n```\r\nerror[E0106]: missing lifetime specifier\r\n --> src/lib.rs:1:96\r\n  |\r\n1 | fn pick_n<R: rand::Rng, T: Copy>(rng: &mut R, n: usize, vs: &[T]) -> impl Iterator<Item = T> + '_ {\r\n  |                                       ------                ----                               ^^ expected named lifetime parameter\r\n  |\r\n  = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `rng` or `vs`\r\nhelp: consider introducing a named lifetime parameter\r\n  |\r\n1 | fn pick_n<'a, R: rand::Rng, T: Copy>(rng: &'a mut R, n: usize, vs: &'a [T]) -> impl Iterator<Item = T> + 'a {\r\n  |           +++                              ++                       ++                                   ~~\r\n\r\nFor more information about this error, try `rustc --explain E0106`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nI'm not sure of the exact right text, but the output should suggest adding `'a` to all of the references _and_ the `impl Trait` right away, rather than suggesting adding `'_` to the `impl Trait`.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93252/timeline", "performed_via_github_app": null, "state_reason": null}