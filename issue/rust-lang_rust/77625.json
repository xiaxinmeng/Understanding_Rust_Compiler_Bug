{"url": "https://api.github.com/repos/rust-lang/rust/issues/77625", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77625/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77625/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77625/events", "html_url": "https://github.com/rust-lang/rust/issues/77625", "id": 715960392, "node_id": "MDU6SXNzdWU3MTU5NjAzOTI=", "number": 77625, "title": "Type inference seems to pick up the wrong trait bound", "user": {"login": "orium", "id": 4107683, "node_id": "MDQ6VXNlcjQxMDc2ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4107683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orium", "html_url": "https://github.com/orium", "followers_url": "https://api.github.com/users/orium/followers", "following_url": "https://api.github.com/users/orium/following{/other_user}", "gists_url": "https://api.github.com/users/orium/gists{/gist_id}", "starred_url": "https://api.github.com/users/orium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orium/subscriptions", "organizations_url": "https://api.github.com/users/orium/orgs", "repos_url": "https://api.github.com/users/orium/repos", "events_url": "https://api.github.com/users/orium/events{/privacy}", "received_events_url": "https://api.github.com/users/orium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-10-06T19:22:51Z", "updated_at": "2023-04-05T17:39:42Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi.  I apologize if this is a dup (I tried to search, but is it not easy to distill this into words to search for).  If it's not a dup please update the title to something more meaningful.\r\n\r\nWhen trying to compile (in [play](https://play.rust-lang.org/?mode=debug&edition=2018&gist=df374da147dde2481917344b1eafbfc8))\r\n\r\n```rust\r\npub trait Distribution<T> {}\r\n\r\nimpl Distribution<u16> for () {}\r\n\r\nfn gen<K>() -> K\r\nwhere\r\n    (): Distribution<K> {\r\n    todo!()\r\n}\r\n\r\nfn foo<T>() -> u16\r\nwhere\r\n    (): Distribution<T>,\r\n{\r\n    gen()\r\n}\r\n```\r\n\r\nI get the error:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/lib.rs:15:5\r\n   |\r\n11 | fn foo<T>() -> u16\r\n   |        -       --- expected `u16` because of return type\r\n   |        |\r\n   |        this type parameter\r\n...\r\n15 |     gen()\r\n   |     ^^^^^ expected `u16`, found type parameter `T`\r\n   |\r\n   = note:        expected type `u16`\r\n           found type parameter `T`\r\n```\r\n\r\nIt it should be able to determine that the hole in `gen::<_>()` is `u16` because that's the return type of `foo()`.  Instead the compiler thinks the hole must be `T`, which is not true (in fact, if you change the call to `gen()` to `gen::<u16>()` the code compiles).\r\n\r\nThis happens in stable (1.46.0) as well as nightly 1.49.0-nightly (2020-10-05 a1dfd2490a6cb456b92e).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77625/timeline", "performed_via_github_app": null, "state_reason": null}