{"url": "https://api.github.com/repos/rust-lang/rust/issues/98917", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98917/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98917/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98917/events", "html_url": "https://github.com/rust-lang/rust/issues/98917", "id": 1293969452, "node_id": "I_kwDOAAsO6M5NIGgs", "number": 98917, "title": "No mention of \"field init shorthand\"", "user": {"login": "andrzejtp", "id": 46742173, "node_id": "MDQ6VXNlcjQ2NzQyMTcz", "avatar_url": "https://avatars.githubusercontent.com/u/46742173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrzejtp", "html_url": "https://github.com/andrzejtp", "followers_url": "https://api.github.com/users/andrzejtp/followers", "following_url": "https://api.github.com/users/andrzejtp/following{/other_user}", "gists_url": "https://api.github.com/users/andrzejtp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrzejtp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrzejtp/subscriptions", "organizations_url": "https://api.github.com/users/andrzejtp/orgs", "repos_url": "https://api.github.com/users/andrzejtp/repos", "events_url": "https://api.github.com/users/andrzejtp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrzejtp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-07-05T08:30:52Z", "updated_at": "2022-07-13T19:54:13Z", "closed_at": "2022-07-13T19:54:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org -->\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=6fd5b067e894e9be655bd28918386f7e\r\n\r\n```rust\r\nstruct Struct {\r\n    id: usize,\r\n    option: Option<usize>,\r\n}\r\n\r\nfn create(id: usize) -> Struct {\r\n    Struct {\r\n        id,\r\n        Some(1),\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let _ = create(1);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror: expected one of `,` or `}`, found `(`\r\n --> src/bin/lib.rs:9:13\r\n  |\r\n7 |     Struct {\r\n  |     ------ while parsing this struct\r\n8 |         id,\r\n9 |         Some(1),\r\n  |             ^ expected one of `,` or `}`\r\n\r\nerror[E0063]: missing field `option` in initializer of `Struct`\r\n --> src/bin/lib.rs:7:5\r\n  |\r\n7 |     Struct {\r\n  |     ^^^^^^ missing `option`\r\n```\r\n\r\nThe first message is about an expected comma or closing curly brace, which is not terribly helpful - we do want to initialize more than one member, so why would we be required to end the instantiation after the `id,`?\r\n\r\nThe \"missing field `option`\" message will perhaps prompt the reader to explicitly name the `option` member, like this:\r\n\r\n```rust\r\nfn create(id: usize) -> Struct {\r\n    Struct {\r\n        id,\r\n        option: Some(1),\r\n    }\r\n}\r\n```\r\nand this will solve the problem, which may trick the reader into believing that only \"simple\" initializers can be used when instantiating the `Struct` (and `Some(1)` would not be considered \"simple\").\r\n\r\nReading the output of `rustc --explain E0063` does not help, because it says \"A struct's or struct-like enum variant's field was not provided\". The actual problem is that while the `id` member can use the \"field init shorthand\" (because it is called the same as the `create`'s argument), the `option` member cannot, but there's no such hint neither in the compiler messages nor in the `rustc --explain E0063`.\r\n\r\nIdeally some mention of the \"field init shorthand\" should be provided either in the messages, or in the output of `rustc --explain`.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98917/timeline", "performed_via_github_app": null, "state_reason": "completed"}