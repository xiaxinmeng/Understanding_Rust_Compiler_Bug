{"url": "https://api.github.com/repos/rust-lang/rust/issues/94980", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94980/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94980/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94980/events", "html_url": "https://github.com/rust-lang/rust/issues/94980", "id": 1170316791, "node_id": "I_kwDOAAsO6M5FwZ33", "number": 94980, "title": "Compile fail with implicit return", "user": {"login": "marcbowes", "id": 15209, "node_id": "MDQ6VXNlcjE1MjA5", "avatar_url": "https://avatars.githubusercontent.com/u/15209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcbowes", "html_url": "https://github.com/marcbowes", "followers_url": "https://api.github.com/users/marcbowes/followers", "following_url": "https://api.github.com/users/marcbowes/following{/other_user}", "gists_url": "https://api.github.com/users/marcbowes/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcbowes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcbowes/subscriptions", "organizations_url": "https://api.github.com/users/marcbowes/orgs", "repos_url": "https://api.github.com/users/marcbowes/repos", "events_url": "https://api.github.com/users/marcbowes/events{/privacy}", "received_events_url": "https://api.github.com/users/marcbowes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-15T22:11:57Z", "updated_at": "2022-03-16T15:40:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::sync::{Arc, Mutex, Weak};\r\n\r\nfn main() {\r\n    let value = Arc::new(Mutex::new(String::new()));\r\n    let weak = Arc::downgrade(&value);\r\n    let _ = foo(weak);\r\n}\r\n\r\nfn foo(weak: Weak<Mutex<String>>) -> usize {\r\n    let upgraded = weak.upgrade().unwrap();\r\n    match upgraded.try_lock() {\r\n        Ok(guard) => guard,\r\n        _ => unreachable!(),\r\n    }\r\n    .len()\r\n}\r\n```\r\n\r\nI expected to see this happen: it compiles!\r\n\r\nInstead, this happened: \r\n```\r\nerror[E0597]: `upgraded` does not live long enough\r\n  --> src/main.rs:11:11\r\n   |\r\n11 |     match upgraded.try_lock() {\r\n   |           ^^^^^^^^^^^^^^^^^^^\r\n   |           |\r\n   |           borrowed value does not live long enough\r\n   |           a temporary with access to the borrow is created here ...\r\n...\r\n16 | }\r\n   | -\r\n   | |\r\n   | `upgraded` dropped here while still borrowed\r\n   | ... and the borrow might be used here, when that temporary is dropped and runs the destructor for type `Result<MutexGuard<'_, String>, TryLockError<MutexGuard<'_, String>>>`\r\n   |\r\n   = note: the temporary is part of an expression at the end of a block;\r\n           consider forcing this temporary to be dropped sooner, before the block's local variables are dropped\r\nhelp: for example, you could save the expression's value in a new local variable `x` and then make `x` be the expression at the end of the block\r\n   |\r\n11 ~     let x = match upgraded.try_lock() {\r\n12 |         Ok(guard) => guard,\r\n13 |         _ => unreachable!(),\r\n14 |     }\r\n15 ~     .len(); x\r\n   |\r\n\r\nFor more information about this error, try `rustc --explain E0597`.\r\nerror: could not compile `explret` due to previous err\r\n```\r\n\r\nWhat's weird is changing to an explicit return fixes the problem:\r\n\r\n```rust\r\nfn foo(weak: Weak<Mutex<String>>) -> usize {\r\n    let upgraded = weak.upgrade().unwrap();\r\n    return match upgraded.try_lock() {\r\n        Ok(guard) => guard,\r\n        _ => unreachable!(),\r\n    }\r\n    .len();\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0 (9d1b2106e 2022-02-23)\r\nbinary: rustc\r\ncommit-hash: 9d1b2106e23b1abd32fce1f17267604a5102f57a\r\ncommit-date: 2022-02-23\r\nhost: x86_64-apple-darwin\r\nrelease: 1.59.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94980/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94980/timeline", "performed_via_github_app": null, "state_reason": null}