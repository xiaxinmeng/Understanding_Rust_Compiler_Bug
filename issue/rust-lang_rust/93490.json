{"url": "https://api.github.com/repos/rust-lang/rust/issues/93490", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93490/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93490/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93490/events", "html_url": "https://github.com/rust-lang/rust/issues/93490", "id": 1118716360, "node_id": "I_kwDOAAsO6M5CrkHI", "number": 93490, "title": "Rust should pass vectors by vector register", "user": {"login": "Miksel12", "id": 47903084, "node_id": "MDQ6VXNlcjQ3OTAzMDg0", "avatar_url": "https://avatars.githubusercontent.com/u/47903084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Miksel12", "html_url": "https://github.com/Miksel12", "followers_url": "https://api.github.com/users/Miksel12/followers", "following_url": "https://api.github.com/users/Miksel12/following{/other_user}", "gists_url": "https://api.github.com/users/Miksel12/gists{/gist_id}", "starred_url": "https://api.github.com/users/Miksel12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Miksel12/subscriptions", "organizations_url": "https://api.github.com/users/Miksel12/orgs", "repos_url": "https://api.github.com/users/Miksel12/repos", "events_url": "https://api.github.com/users/Miksel12/events{/privacy}", "received_events_url": "https://api.github.com/users/Miksel12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2022-01-30T21:18:37Z", "updated_at": "2022-02-13T18:47:08Z", "closed_at": "2022-02-13T18:36:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rust currently doesn't pass vectors of floats by vector register.\r\n\r\nThis should be able to be passed by vector registers:\r\n```Rust\r\npub struct Stats { x: f32, y: f32, z: f32, q: f32  }\r\n\r\n\r\npub fn sum_rust(a: &Stats, b: &Stats) -> Stats {\r\n    return Stats {x: a.x + b.x, y: a.y + b.y, z: a.z + b.z, q: a.q + b.q };\r\n}\r\n```\r\nBut in Rust 1.47 it uses the stack:\r\n\r\n```Assembly\r\nexample::sum_rust:\r\n        mov     rax, rdi\r\n        movups  xmm0, xmmword ptr [rsi]\r\n        movups  xmm1, xmmword ptr [rdx]\r\n        addps   xmm1, xmm0\r\n        movups  xmmword ptr [rdi], xmm1\r\n        ret\r\n```\r\nPost 1.47, it is packed into integer registers (see this issue:  [#85265](https://github.com/rust-lang/rust/issues/85265)):\r\n\r\n```Assembly\r\nexample::sum_rust:\r\n        movss   xmm0, dword ptr [rdi]\r\n        movss   xmm1, dword ptr [rdi + 4]\r\n        addss   xmm0, dword ptr [rsi]\r\n        addss   xmm1, dword ptr [rsi + 4]\r\n        movsd   xmm2, qword ptr [rdi + 8]\r\n        movsd   xmm3, qword ptr [rsi + 8]\r\n        addps   xmm3, xmm2\r\n        movd    eax, xmm0\r\n        movd    ecx, xmm1\r\n        movd    esi, xmm3\r\n        shufps  xmm3, xmm3, 229\r\n        movd    edx, xmm3\r\n        shl     rdx, 32\r\n        or      rdx, rsi\r\n        shl     rcx, 32\r\n        or      rax, rcx\r\n        ret\r\n```\r\nThis issue should be fixed by https://github.com/rust-lang/rust/pull/93405 and should bring it back to pre 1.48.\r\nBut ideally it should be optimized to:\r\n\r\n```Assembly\r\nexample::sum_rust:\r\n        addps   xmm1, xmm0\r\n        ret\r\n```\r\n\r\n@dotdash mentions in [#85265](https://github.com/rust-lang/rust/issues/85265) that this is due to Rust not using the proper types on the LLVM IR level: https://github.com/rust-lang/rust/issues/85265#issuecomment-989821465\r\n\r\nEDIT:\r\nClang is able to use this optimization in a similar case:\r\n```C++\r\nstruct Foo\r\n{\r\n    float bar1;\r\n    float bar2;\r\n    float bar3;\r\n    float bar4;\r\n};\r\n\r\nFoo sum_cpp(Foo foo1, Foo foo2)\r\n{\r\n    Foo foo3;\r\n    foo3.bar1 = foo1.bar1 + foo2.bar1;\r\n    foo3.bar2 = foo1.bar2 + foo2.bar2;\r\n    foo3.bar3 = foo1.bar3 + foo2.bar3;\r\n    foo3.bar4 = foo1.bar4 + foo2.bar4;\r\n    return foo3;\r\n}\r\n```\r\nGets turned into:\r\n```Assembly\r\nsum_cpp(Foo, Foo):                       # @sum_cpp(Foo, Foo)\r\n        addps   xmm0, xmm2\r\n        addps   xmm1, xmm3\r\n        ret\r\n```", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93490/timeline", "performed_via_github_app": null, "state_reason": "completed"}