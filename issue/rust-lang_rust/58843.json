{"url": "https://api.github.com/repos/rust-lang/rust/issues/58843", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58843/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58843/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58843/events", "html_url": "https://github.com/rust-lang/rust/issues/58843", "id": 416130770, "node_id": "MDU6SXNzdWU0MTYxMzA3NzA=", "number": 58843, "title": "Possibly confusing error message when deref/deref_mut are used.", "user": {"login": "Boiethios", "id": 18555389, "node_id": "MDQ6VXNlcjE4NTU1Mzg5", "avatar_url": "https://avatars.githubusercontent.com/u/18555389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boiethios", "html_url": "https://github.com/Boiethios", "followers_url": "https://api.github.com/users/Boiethios/followers", "following_url": "https://api.github.com/users/Boiethios/following{/other_user}", "gists_url": "https://api.github.com/users/Boiethios/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boiethios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boiethios/subscriptions", "organizations_url": "https://api.github.com/users/Boiethios/orgs", "repos_url": "https://api.github.com/users/Boiethios/repos", "events_url": "https://api.github.com/users/Boiethios/events{/privacy}", "received_events_url": "https://api.github.com/users/Boiethios/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-01T14:37:00Z", "updated_at": "2021-12-22T16:45:16Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Beginners can be confused when `deref` and `deref_mut` are called implicitely:\r\n\r\n- https://stackoverflow.com/questions/47060266/error-while-trying-to-borrow-2-fields-from-a-struct-wrapped-in-refcell\r\n- https://stackoverflow.com/questions/54942045/accessing-two-vectors-in-a-struct-locked-by-a-mutex\r\n\r\nIn this given code:\r\n\r\n```rust\r\nstruct Foo {\r\n    a: Vec<i32>,\r\n    b: Vec<i32>,\r\n}\r\n\r\nfn add(foo: std::sync::Mutex<Foo>) {\r\n    let f = foo.lock().unwrap();\r\n\r\n    for i in &mut f.a {\r\n        for j in &f.b {\r\n            *i += *j;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe error message is not the clearest:\r\n\r\n```\r\nerror[E0502]: cannot borrow `f` as immutable because it is also borrowed as mutable\r\n  --> src/lib.rs:10:19\r\n   |\r\n9  |     for i in &mut f.a {\r\n   |              --------\r\n   |              |    |\r\n   |              |    mutable borrow occurs here\r\n   |              mutable borrow used here, in later iteration of loop\r\n10 |         for j in &f.b {\r\n   |                   ^ immutable borrow occurs here\r\n```\r\n\r\nThe users could not understand that the borrows are done by `deref` and `deref_mut`, since the calls are implicit. They could think that, for an unknown reason, the borrow checker does not understand that the fields are disjoint.\r\n\r\nI think that it would be an improvement if the compiler added that the implicit call to `deref`/`deref_mut` is responsible of the borrowing:\r\n\r\n```\r\nerror[E0502]: cannot borrow `f` as immutable because it is also borrowed as mutable\r\n  --> src/lib.rs:10:19\r\n   |\r\n9  |     for i in &mut f.a {\r\n   |              --------\r\n   |              |    |\r\n   |              |    mutable borrow occurs here due to a call to `Deref::deref`\r\n   |              mutable borrow used here, in later iteration of loop\r\n10 |         for j in &f.b {\r\n   |                   ^ immutable borrow occurs here due to a call to `DerefMut::deref_mut`\r\n```\r\n\r\nThis could be even better if the compiler gave the solution:\r\n\r\n```\r\nYou can call `DerefMut::deref_mut` before borrowing the fields:\r\n  --> src/lib.rs:8:1\r\n7  |    let mut f = foo.lock().unwrap();\r\n   |    let f = DerefMut::deref_mut(&mut f);\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58843/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58843/timeline", "performed_via_github_app": null, "state_reason": null}