{"url": "https://api.github.com/repos/rust-lang/rust/issues/56865", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56865/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56865/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56865/events", "html_url": "https://github.com/rust-lang/rust/issues/56865", "id": 391424628, "node_id": "MDU6SXNzdWUzOTE0MjQ2Mjg=", "number": 56865, "title": "ICE \"Encountered a freshend type with id 0 but our counter is only at 0\": eclectic 0.11.0", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252628, "node_id": "MDU6TGFiZWwyNjIyNTI2Mjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-beta", "name": "regression-from-stable-to-beta", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to beta."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-16T00:49:40Z", "updated_at": "2018-12-17T17:13:36Z", "closed_at": "2018-12-17T17:13:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Found via this crater experiment: https://crater.rust-lang.org/ex/pr-56550\r\n````\r\ncargo new crashtest\r\ncd crashtest\r\necho \"eclectic = \\\"0.11.0\\\"\" >> Cargo.toml\r\nRUST_BACKTRACE=Full cargo check\r\n````\r\n\r\n````\r\n    Checking eclectic v0.11.0\r\nerror: internal compiler error: src/librustc/infer/freshen.rs:165: Encountered a freshend type with id 0 but our counter is only at 0\r\n\r\nthread 'main' panicked at 'Box<Any>', src/librustc_errors/lib.rs:600:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n             at src/libstd/panicking.rs:210\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:225\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:492\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: <rustc::infer::freshen::TypeFreshener<'a, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  15: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  16: rustc::ty::fold::TypeFoldable::fold_with\r\n  17: rustc::traits::select::SelectionContext::select\r\n  18: rustc::infer::InferCtxt::commit_if_ok\r\n  19: rustc::traits::project::opt_normalize_projection_type\r\n  20: rustc::traits::project::normalize_projection_type\r\n  21: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  22: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  23: rustc::ty::fold::TypeFoldable::fold_with\r\n  24: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  25: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  26: <smallvec::SmallVec<A> as core::iter::traits::FromIterator<<A as smallvec::Array>::Item>>::from_iter\r\n  27: rustc::ty::fold::TypeFoldable::fold_with\r\n  28: rustc::ty::structural_impls::<impl rustc::ty::fold::TypeFoldable<'tcx> for &'tcx rustc::ty::TyS<'tcx>>::super_fold_with\r\n  29: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  30: rustc::ty::fold::TypeFoldable::fold_with\r\n  31: rustc::ty::fold::TypeFoldable::fold_with\r\n  32: rustc::traits::project::normalize\r\n  33: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once\r\n  34: <core::iter::FlatMap<I, U, F> as core::iter::iterator::Iterator>::next\r\n  35: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T, I>>::from_iter\r\n  36: rustc::ty::wf::WfPredicates::normalize\r\n  37: rustc::ty::wf::obligations\r\n  38: <rustc_data_structures::obligation_forest::ObligationForest<O>>::process_obligations\r\n  39: <rustc::traits::fulfill::FulfillmentContext<'tcx> as rustc::traits::engine::TraitEngine<'tcx>>::select_where_possible\r\n  40: rustc_typeck::check::FnCtxt::select_obligations_where_possible\r\n  41: rustc::ty::context::tls::with_related_context\r\n  42: rustc::infer::InferCtxtBuilder::enter\r\n  43: rustc_typeck::check::typeck_tables_of\r\n  44: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_tables_of<'tcx>>::compute\r\n  45: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  46: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  47: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  48: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  49: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  50: rustc::session::Session::track_errors\r\n  51: rustc_typeck::check::typeck_item_bodies\r\n  52: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_item_bodies<'tcx>>::compute\r\n  53: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  54: <rustc::ty::query::plumbing::JobOwner<'a, 'tcx, Q>>::start\r\n  55: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  56: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  57: rustc::util::common::time\r\n  58: rustc_typeck::check_crate\r\n  59: rustc::ty::context::tls::enter_context\r\n  60: <std::thread::local::LocalKey<T>>::with\r\n  61: rustc::ty::context::TyCtxt::create_and_enter\r\n  62: rustc_driver::driver::compile_input\r\n  63: rustc_driver::run_compiler_with_pool\r\n  64: <scoped_tls::ScopedKey<T>>::set\r\n  65: rustc_driver::run_compiler\r\n  66: rustc_driver::monitor::{{closure}}\r\n  67: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  68: rustc_driver::run\r\n  69: rustc_driver::main\r\n  70: std::rt::lang_start::{{closure}}\r\n  71: std::panicking::try::do_call\r\n             at src/libstd/rt.rs:59\r\n             at src/libstd/panicking.rs:307\r\n  72: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:102\r\n  73: std::rt::lang_start_internal\r\n             at src/libstd/panicking.rs:286\r\n             at src/libstd/panic.rs:398\r\n             at src/libstd/rt.rs:58\r\n  74: main\r\n  75: __libc_start_main\r\n  76: <unknown>\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `assert_object_safe`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.33.0-nightly (96d1334e5 2018-12-14) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C target-cpu=native --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `eclectic`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n````\r\n\r\n````\r\nrustc 1.33.0-nightly (96d1334e5 2018-12-14)\r\nbinary: rustc\r\ncommit-hash: 96d1334e567237b1507cd277938e7ae2de75ff51\r\ncommit-date: 2018-12-14\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.33.0-nightly\r\nLLVM version: 8.0\r\n````", "closed_by": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56865/timeline", "performed_via_github_app": null, "state_reason": "completed"}