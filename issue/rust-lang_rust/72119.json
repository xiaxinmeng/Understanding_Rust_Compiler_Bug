{"url": "https://api.github.com/repos/rust-lang/rust/issues/72119", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72119/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72119/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72119/events", "html_url": "https://github.com/rust-lang/rust/issues/72119", "id": 616145626, "node_id": "MDU6SXNzdWU2MTYxNDU2MjY=", "number": 72119, "title": "Rustc fails to suggest 'consider borrowing here'", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-11T20:01:00Z", "updated_at": "2020-05-12T00:09:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code:\r\n\r\n```rust\r\nstruct Foo;\r\nstruct Bar;\r\n\r\ntrait MyTrait {}\r\n\r\nimpl<'a> MyTrait for &'a Foo {}\r\nimpl MyTrait for Bar {}\r\n\r\nfn use_it<T: MyTrait>(val: &T) {}\r\n\r\nfn main() {\r\n    let a = &Foo;\r\n    let b = Bar;\r\n    \r\n    use_it(a);\r\n    use_it(b);\r\n}\r\n```\r\n\r\nproduces the following errors:\r\n\r\n```\r\nerror[E0277]: the trait bound `Foo: MyTrait` is not satisfied\r\n  --> src/main.rs:15:12\r\n   |\r\n9  | fn use_it<T: MyTrait>(val: &T) {}\r\n   |              ------- required by this bound in `use_it`\r\n...\r\n15 |     use_it(a);\r\n   |            ^ the trait `MyTrait` is not implemented for `Foo`\r\n   |\r\n   = help: the following implementations were found:\r\n             <&'a Foo as MyTrait>\r\n\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:16:12\r\n   |\r\n16 |     use_it(b);\r\n   |            ^\r\n   |            |\r\n   |            expected reference, found struct `Bar`\r\n   |            help: consider borrowing here: `&b`\r\n   |\r\n   = note: expected reference `&_`\r\n                 found struct `Bar`\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nBoth `use_it(a)` and `use_it(b)` fail due to a missing borrow. However, we only suggest adding a borrow for `use_it(b)`, which makes the `use_it(a)` error difficult to understand.\r\n\r\nThis is caused by the fact that `use_it(b)` fails when we try to equate the argument types, while `use_it(a)` fails when we try to fulfill the obligations resulting from argument coercion. \r\n\r\nThe relevant code for `use_it(a)` is:\r\n\r\nhttps://github.com/rust-lang/rust/blob/3fe4dd2dda2826643c4ce4ee7307707a90e08d25/src/librustc_trait_selection/traits/error_reporting/suggestions.rs#L537-L553\r\n\r\nCurrently, this code only emits suggestions for errors with a particular cause structure. In the `use_it(a)` case, we have the following `Obligation`:\r\n\r\n```\r\nObligation(predicate=Binder(TraitPredicate(<Foo as MyTrait>)), cause=ObligationCause { span: bad_ref.rs:15:12: 15:13, body_id: HirId { owner: DefId(0:13 ~ bad_ref[317d]::main[0]), local_id: 19 }, code: BindingObligation(DefId(0:11 ~ bad_ref[317d]::use_it[0]), bad_ref.rs:9:14: 9:21) })\r\n```\r\n\r\nHere, the obligation's cause is uninteresting.\r\n\r\nI think we could modify this code to emit suggestions in more cases (e.g. considering any predicates in the 'cause stack' which are related to an argument type in some way).", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72119/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72119/timeline", "performed_via_github_app": null, "state_reason": null}