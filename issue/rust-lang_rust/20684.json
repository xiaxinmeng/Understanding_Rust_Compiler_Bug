{"url": "https://api.github.com/repos/rust-lang/rust/issues/20684", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/20684/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/20684/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/20684/events", "html_url": "https://github.com/rust-lang/rust/issues/20684", "id": 53604805, "node_id": "MDU6SXNzdWU1MzYwNDgwNQ==", "number": 20684, "title": "Associated types bug", "user": {"login": "dylanmckay", "id": 7722159, "node_id": "MDQ6VXNlcjc3MjIxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/7722159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanmckay", "html_url": "https://github.com/dylanmckay", "followers_url": "https://api.github.com/users/dylanmckay/followers", "following_url": "https://api.github.com/users/dylanmckay/following{/other_user}", "gists_url": "https://api.github.com/users/dylanmckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanmckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanmckay/subscriptions", "organizations_url": "https://api.github.com/users/dylanmckay/orgs", "repos_url": "https://api.github.com/users/dylanmckay/repos", "events_url": "https://api.github.com/users/dylanmckay/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanmckay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-07T07:15:39Z", "updated_at": "2015-01-08T14:40:52Z", "closed_at": "2015-01-08T14:40:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm hitting a bug in my math library due to associated types.\n\nThe compiler does not recognize that the associated type on the result of `Add` is the same type as `T` (well, it partly does, as the error message says that `Item == T`, and as such, the expression `c1+c2` does not typecheck.\n\nHere is the error\n\n```\nerror: type mismatch resolving `<core::iter::Map<(T, T), <T as core::ops::Add>::Output, core::iter::Zip<generic_vector::Components<'_, T>, generic_vector::Components<'_, T>>, closure[vector_test.rs:17:54: 17:69]> as core::iter::Iterator>::Item == T`: expected associated type, found type parameter\n\nvector_test.rs:15:13: 15:47 note: required by `core::iter::FromIterator::from_iter`\nvector_test.rs:15             std::iter::FromIterator::from_iter(self.components()\n\n```\n\nCode snippet ([Playpen](http://is.gd/owgsk7))\n\n``` rust\n#![feature(associated_types)]\n\nuse std::ops::Add;\n\npub trait Vector<T: Copy + Add> : std::iter::FromIterator<T> + Sized\n{\n    fn components<'a>(&'a self) -> Components<'a,T>;\n\n    fn add(self, rhs: Self) -> Self\n    {\n        std::iter::FromIterator::from_iter(self.components()\n                                           .zip(rhs.components())\n                                           .map( |(c1,c2)| c1+c2))\n\n    }\n}\n\n\n/// An efficent iterator for enumerating components.\n///\n/// Iterates over a collection of components in the order they exist in memory.\n///\n/// This iterator is designed to be as fast and efficent as possible.\n/// For this iterator to work correctly, `ptr` must point to a linear, continuous\n/// array in memory. If this requirement is not upheld, the result is undefined behaviour.\npub struct Components<'a, T>\n{\n    ptr: *const T,\n    end: *const T,\n}\n\nimpl<'a, T> Components<'a, T>\n{\n    /// Creates a new iterator from a pointer to the first component and the number of components.\n    pub fn new(begin: *const T, len: uint) -> Components<'a, T>\n    {\n        let end: *const T = ((begin as uint) + (std::mem::size_of::<T>()*len)) as *const T;\n\n        Components::from_ptrs(begin, end)\n    }\n\n    pub fn from_ptrs(begin: *const T, end: *const T) -> Components<'a, T>\n    {\n        Components {\n            ptr: begin,\n            end: end,\n        }\n    }\n}\n\nimpl<'a, T: Copy> Iterator for Components<'a, T>\n{\n    type Item = T;\n\n    fn next(&mut self) -> Option<T>\n    {\n        // check if we have a next component\n        if self.ptr != self.end {\n\n            let component = unsafe { *self.ptr };\n\n            // increment the pointer to the next component.\n            self.ptr = ((self.ptr as uint) + (std::mem::size_of::<T>())) as *const T;\n\n            Some(component)\n\n        } else { // we reached the last component\n            None\n        }\n    }\n}\n\nfn main() { }\n```\n", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/20684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/20684/timeline", "performed_via_github_app": null, "state_reason": "completed"}