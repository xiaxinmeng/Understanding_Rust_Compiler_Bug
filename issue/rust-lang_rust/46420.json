{"url": "https://api.github.com/repos/rust-lang/rust/issues/46420", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46420/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46420/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46420/events", "html_url": "https://github.com/rust-lang/rust/issues/46420", "id": 278405757, "node_id": "MDU6SXNzdWUyNzg0MDU3NTc=", "number": 46420, "title": "MIR InstCombine introduces copies of mutable borrows", "user": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 256133398, "node_id": "MDU6TGFiZWwyNTYxMzMzOTg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-mir", "name": "A-mir", "color": "f7e101", "default": false, "description": "Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-01T09:27:24Z", "updated_at": "2020-08-03T20:54:52Z", "closed_at": "2020-05-26T10:42:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://play.rust-lang.org/?gist=9f782298cc5b0f6cd557baef9e443096&version=nightly\r\n```rust\r\nfn blah(mut x: String) {\r\n    do_something(&mut x);\r\n}\r\n```\r\ngenerates the following MIR:\r\n```rust\r\n    let mut _0: ();                      // return pointer\r\n    let mut _2: ();\r\n    let mut _3: &mut std::string::String;\r\n    let mut _4: &mut std::string::String;\r\n\r\n    bb0: {                              \r\n        StorageLive(_3);                 // scope 0 at src/main.rs:5:18: 5:24\r\n        StorageLive(_4);                 // scope 0 at src/main.rs:5:18: 5:24\r\n        _4 = &mut _1;                    // scope 0 at src/main.rs:5:18: 5:24\r\n        _3 = _4;                         // scope 0 at src/main.rs:5:18: 5:24\r\n        _2 = const do_something(move _3) -> [return: bb1, unwind: bb3]; // scope 0 at src/main.rs:5:5: 5:25\r\n    }\r\n```\r\nWhich -- though we don't run it again after optimizations -- wouldn't pass `TypeckMir` since it's a copy of a `&mut String`.\r\n\r\nThat came from InstCombine on the following \r\n```rust\r\n        _3 = &mut (*_4);                 // scope 0 at lib.rs:33:18: 33:24\r\n```\r\n\r\nThis may or may not be a problem, but I wanted to file it in case it impacts any of the assumptions desired from the Copy/Move split on Operand.\r\n\r\nEdit: I suppose this instcombine has long potentially changed the type of the operand, since it doesn't check mutability of the outer `&` or the borrow being `*`d.\r\n\r\ncc @eddyb \r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46420/timeline", "performed_via_github_app": null, "state_reason": "completed"}