{"url": "https://api.github.com/repos/rust-lang/rust/issues/63281", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63281/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63281/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63281/events", "html_url": "https://github.com/rust-lang/rust/issues/63281", "id": 476736996, "node_id": "MDU6SXNzdWU0NzY3MzY5OTY=", "number": 63281, "title": "rustdoc: explicit marker trait impl bounds are not simplified", "user": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-05T08:57:10Z", "updated_at": "2019-08-29T00:06:24Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Rustdoc currently renders automatic and explicit marker trait implementation bounds differently, for automatic implementations the bounds are simplified down to their most fundamental requirements, while explicit implementations show exactly what is specified.\r\n\r\nAs an example, here are two identically defined structs (`Bar` and `Baz`), one uses the automatic implementation for `Send` while the other has the same implementation explicitly defined, in both cases the direct requirement is `Foo<T>: Send` which can be simplified down to `T: Send` by looking at the bounds on `Foo`:\r\n\r\n```rust\r\npub struct Foo<T>(T);\r\n\r\npub struct Bar<T>(Foo<T>);\r\n\r\npub struct Baz<T>(Foo<T>);\r\n\r\nunsafe impl<T> Send for Baz<T> where Foo<T>: Send {}\r\n```\r\n\r\nand the associated `impl Send` renderings:\r\n\r\n![bar-send](https://user-images.githubusercontent.com/81079/62451443-970ce100-b76e-11e9-9035-7bb400e83356.png)\r\n\r\n![baz-send](https://user-images.githubusercontent.com/81079/62451450-996f3b00-b76e-11e9-9014-9506180d1d07.png)\r\n\r\nThis will become more relevant if RFC 2145 is ever implemented, that [should allow bounds to refer to private types](https://github.com/rust-lang/rfcs/pull/2353#issuecomment-369224212) in which case there is no way to go from the `impl Send for Baz` in the docs to see what the actual requirements are (but it is already possible to simulate that today if `Foo` is moved into a private module).\r\n\r\nThis is also an issue for the proc-macro in https://github.com/taiki-e/pin-project (cc @taiki-e), that produces an explicit implementation for `Unpin` that must refer to the field types so that it can work generically for any struct.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63281/timeline", "performed_via_github_app": null, "state_reason": null}