{"url": "https://api.github.com/repos/rust-lang/rust/issues/90664", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90664/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90664/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90664/events", "html_url": "https://github.com/rust-lang/rust/issues/90664", "id": 1046674027, "node_id": "I_kwDOAAsO6M4-Yvpr", "number": 90664, "title": "Error message for non-fully-qualified method lookup does not contain helpful information related to auto traits.", "user": {"login": "BGR360", "id": 13339928, "node_id": "MDQ6VXNlcjEzMzM5OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/13339928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BGR360", "html_url": "https://github.com/BGR360", "followers_url": "https://api.github.com/users/BGR360/followers", "following_url": "https://api.github.com/users/BGR360/following{/other_user}", "gists_url": "https://api.github.com/users/BGR360/gists{/gist_id}", "starred_url": "https://api.github.com/users/BGR360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BGR360/subscriptions", "organizations_url": "https://api.github.com/users/BGR360/orgs", "repos_url": "https://api.github.com/users/BGR360/repos", "events_url": "https://api.github.com/users/BGR360/events{/privacy}", "received_events_url": "https://api.github.com/users/BGR360/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}, {"id": 2543602342, "node_id": "MDU6TGFiZWwyNTQzNjAyMzQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-auto_traits", "name": "F-auto_traits", "color": "f9c0cc", "default": false, "description": "`#![feature(auto_traits)]`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-07T06:39:47Z", "updated_at": "2021-11-07T06:45:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is spun off from https://github.com/rust-lang/rust/issues/90601.\r\n\r\nGiven the following code ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=369407d93d9ef82aa667c1913ba5e236)):\r\n\r\n```rust\r\ntrait Foo {\r\n    fn foo(self);\r\n}\r\n\r\nimpl<T: Send> Foo for T {\r\n    fn foo(self) {\r\n        println!(\"foo\");\r\n    }\r\n}\r\n\r\nstruct NotSend(Box<dyn ToString>);\r\n\r\nfn main() {\r\n    NotSend(Box::new(\"hello\")).foo();\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0599]: the method `foo` exists for struct `NotSend`, but its trait bounds were not satisfied\r\n  --> src/main.rs:14:32\r\n   |\r\n11 | struct NotSend(Box<dyn ToString>);\r\n   | ----------------------------------\r\n   | |\r\n   | method `foo` not found for this\r\n   | doesn't satisfy `NotSend: Foo`\r\n   | doesn't satisfy `NotSend: Send`\r\n...\r\n14 |     NotSend(Box::new(\"hello\")).foo();\r\n   |                                ^^^ method cannot be called on `NotSend` due to unsatisfied trait bounds\r\n   |\r\n   = note: the following trait bounds were not satisfied:\r\n           `NotSend: Send`\r\n           which is required by `NotSend: Foo`\r\n           `&NotSend: Send`\r\n           which is required by `&NotSend: Foo`\r\n           `&mut NotSend: Send`\r\n           which is required by `&mut NotSend: Foo`\r\nnote: the following trait must be implemented\r\n```\r\n\r\nBy contrast, if you fully qualify the method path, you get an explanation for why the auto trait `Send` does not apply to your type  ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=ebc76aa34a2261b679b709085c6c936f)):\r\n\r\n```\r\nerror[E0277]: `(dyn ToString + 'static)` cannot be sent between threads safely\r\n  --> src/main.rs:14:14\r\n   |\r\n14 |     Foo::foo(NotSend(Box::new(\"hello\")));\r\n   |     -------- ^^^^^^^^^^^^^^^^^^^^^^^^^^ `(dyn ToString + 'static)` cannot be sent between threads safely\r\n   |     |\r\n   |     required by a bound introduced by this call\r\n   |\r\n   = help: the trait `Send` is not implemented for `(dyn ToString + 'static)`\r\n   = note: required because of the requirements on the impl of `Send` for `Unique<(dyn ToString + 'static)>`\r\n   = note: required because it appears within the type `Box<(dyn ToString + 'static)>`\r\nnote: required because it appears within the type `NotSend`\r\n  --> src/main.rs:11:8\r\n   |\r\n11 | struct NotSend(Box<dyn ToString>);\r\n   |        ^^^^^^^\r\nnote: required because of the requirements on the impl of `Foo` for `NotSend`\r\n  --> src/main.rs:5:15\r\n   |\r\n5  | impl<T: Send> Foo for T {\r\n   |               ^^^     ^\r\nnote: required by `Foo::foo`\r\n  --> src/main.rs:2:5\r\n   |\r\n2  |     fn foo(self);\r\n   |     ^^^^^^^^^^^^^\r\n```\r\n\r\nI don't really have a great plan for how to integrate that extra information into the first error, but here's one proposal:\r\n\r\n```\r\nerror[E0599]: the method `foo` exists for struct `NotSend`, but its trait bounds were not satisfied\r\n  --> src/main.rs:14:32\r\n   |\r\n11 | struct NotSend(Box<dyn ToString>);\r\n   | ----------------------------------\r\n   | |\r\n   | method `foo` not found for this\r\n   | doesn't satisfy `NotSend: Foo`\r\n   | doesn't satisfy `NotSend: Send`\r\n...\r\n14 |     NotSend(Box::new(\"hello\")).foo();\r\n   |                                ^^^ method cannot be called on `NotSend` due to unsatisfied trait bounds\r\n   |\r\n   = note: the following trait bounds were not satisfied:\r\n           `NotSend: Send`\r\n           which is required by `NotSend: Foo`\r\n           `&NotSend: Send`\r\n           which is required by `&NotSend: Foo`\r\n           `&mut NotSend: Send`\r\n           which is required by `&mut NotSend: Foo`\r\nnote: the trait `Send` is not implemented for `(dyn ToString + 'static)`\r\nnote: required because of the requirements on the impl of `Send` for `Unique<(dyn ToString + 'static)>`\r\nnote: required because it appears within the type `Box<(dyn ToString + 'static)>`\r\nnote: required because it appears within the type `NotSend`\r\n  --> src/main.rs:11:8\r\n   |\r\n11 | struct NotSend(Box<dyn ToString>);\r\n   |        ^^^^^^^\r\n```\r\n\r\ncc https://github.com/rust-lang/rust/issues/13231\r\n\r\n@rustbot label +A-traits +A-typesystem +D-terse +F-auto_traits", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90664/timeline", "performed_via_github_app": null, "state_reason": null}