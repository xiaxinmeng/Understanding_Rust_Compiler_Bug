{"url": "https://api.github.com/repos/rust-lang/rust/issues/73160", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73160/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73160/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73160/events", "html_url": "https://github.com/rust-lang/rust/issues/73160", "id": 635204753, "node_id": "MDU6SXNzdWU2MzUyMDQ3NTM=", "number": 73160, "title": "Inline assembly warning gets turned into error", "user": {"login": "jethrogb", "id": 1132307, "node_id": "MDQ6VXNlcjExMzIzMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1132307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jethrogb", "html_url": "https://github.com/jethrogb", "followers_url": "https://api.github.com/users/jethrogb/followers", "following_url": "https://api.github.com/users/jethrogb/following{/other_user}", "gists_url": "https://api.github.com/users/jethrogb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jethrogb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jethrogb/subscriptions", "organizations_url": "https://api.github.com/users/jethrogb/orgs", "repos_url": "https://api.github.com/users/jethrogb/repos", "events_url": "https://api.github.com/users/jethrogb/events{/privacy}", "received_events_url": "https://api.github.com/users/jethrogb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 2046313052, "node_id": "MDU6TGFiZWwyMDQ2MzEzMDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-asm", "name": "F-asm", "color": "f9c0cc", "default": false, "description": "`#![feature(asm)]` (not `llvm_asm`)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-09T08:05:20Z", "updated_at": "2020-06-11T21:36:28Z", "closed_at": "2020-06-11T21:36:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Warnings generated by LLVM in inline assembly are reported by `rustc` as errors.\r\n\r\nFor example:\r\n```rust\r\n#![feature(asm, llvm_asm)]\r\nfn main() {\r\n    unsafe{\r\n        asm!(\"call *(%rax)\", options(att_syntax));\r\n        llvm_asm!(\"call *(%rax)\");\r\n    }\r\n}\r\n```\r\nCompile with today's nightly or newer: `rustc +nightly --target x86_64-fortanix-unknown-sgx test.rs`. You'll get these errors:\r\n```\r\nerror: Instruction may be vulnerable to LVI and requires manual mitigation\r\n --> test.rs:4:15\r\n  |\r\n4 |         asm!(\"call *(%rax)\", options(att_syntax));\r\n  |               ^\r\n  |\r\nnote: instantiated into assembly here\r\n --> <inline asm>:1:2\r\n  |\r\n1 |     call *(%rax)\r\n  |     ^\r\n\r\nerror: See https://software.intel.com/security-software-guidance/insights/deep-dive-load-value-injection#specialinstructions for more information\r\n\r\nerror: Instruction may be vulnerable to LVI and requires manual mitigation\r\n --> test.rs:5:9\r\n  |\r\n5 |         llvm_asm!(\"call *(%rax)\");\r\n  |         ^\r\n  |\r\nnote: instantiated into assembly here\r\n --> <inline asm>:1:2\r\n  |\r\n1 |     call *(%rax)\r\n  |     ^\r\n\r\nerror: aborting due to 3 previous errors\r\n```\r\n\r\nHowever, when using `clang`, these are reported as warnings. For example:\r\n```c\r\nasm(\"call *(%rax)\");\r\n```\r\nCompile with a recent Clang nightly: `clang-11 -mlvi-hardening -mllvm -x86-experimental-lvi-inline-asm-hardening -c test.c`. You'll get this warning:\r\n```\r\n<inline asm>:1:1: warning: Instruction may be vulnerable to LVI and requires manual mitigation [-Winline-asm]\r\ncall *(%rax)\r\n^\r\nnote: See https://software.intel.com/security-software-guidance/insights/deep-dive-load-value-injection#specialinstructions for more information\r\n1 warning generated.\r\n```\r\n\r\n*Note* this issue has nothing to do with SGX/LVI, it's just a convenient way to trigger the assembler warnings.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73160/timeline", "performed_via_github_app": null, "state_reason": "completed"}