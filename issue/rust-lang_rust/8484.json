{"url": "https://api.github.com/repos/rust-lang/rust/issues/8484", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8484/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8484/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8484/events", "html_url": "https://github.com/rust-lang/rust/issues/8484", "id": 17976834, "node_id": "MDU6SXNzdWUxNzk3NjgzNA==", "number": 8484, "title": "Moving out of locals still calls drop glue", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-13T02:41:43Z", "updated_at": "2013-08-13T05:58:08Z", "closed_at": "2013-08-13T02:53:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When not moving out of a local, you get the following codegen:\n\n``` rust\nstruct Node {\n    right: Option<~Node>\n}\n\n#[inline(never)]\nfn foo() -> Option<~Node>{\n    None\n}\n\nfn main() {}\n```\n\n```\n; Function Attrs: noinline nounwind uwtable\ndefine void @\"_ZN3foo15_e8578a1b12212b7_0$x2e0E\"(%\"enum.std::option::Option<~Node>[#1]\"* nocapture, { i64, %tydesc*, i8*, i8*, i8 }* nocapture) #0 {\n\"function top level\":\n  %2 = getelementptr inbounds %\"enum.std::option::Option<~Node>[#1]\"* %0, i64 0, i32 0\n  store %struct.Node* null, %struct.Node** %2, align 8\n  ret void\n}\n```\n\nWhich is pretty much expected. When you _do_ move out of a local, however, you get this codegen:\n\n``` rust\nstruct Node {\n    right: Option<~Node>\n}\n\n#[inline(never)]\nfn foo() -> Option<~Node>{\n    let slot = None;\n    slot\n}\n\nfn main() {}\n```\n\n```\n; Function Attrs: noinline uwtable\ndefine void @\"_ZN3foo15_e8578a1b12212b7_0$x2e0E\"(%\"enum.std::option::Option<~Node>[#1]\"* nocapture, { i64, %tydesc*, i8*, i8*, i8 }* nocapture) #0 {\n\"function top level\":\n  %slot = alloca %\"enum.std::option::Option<~Node>[#1]\", align 8\n  %2 = getelementptr inbounds %\"enum.std::option::Option<~Node>[#1]\"* %slot, i64 0, i32 0\n  %3 = getelementptr inbounds %\"enum.std::option::Option<~Node>[#1]\"* %0, i64 0, i32 0\n  store %struct.Node* null, %struct.Node** %3, align 8\n  store %struct.Node* null, %struct.Node** %2, align 8\n  call fastcc void @\"_ZN35std..option..Option$LT$$UP$Node$GT$17_2c255f6811918cb214glue_drop_3590E\"(%\"enum.std::option::Option<~Node>[#1]\"* %slot)\n  ret void\n}\n\n```\n\nWhen moving out of a local, I wouldn't expect the drop glue to be generated at all. It will never have anything to drop, anyway, and it seems like it's always just a no-op (and expensive if you're running it millions of times). I've got a splay-tree implementation and currently drop glue in a function which never drops anything is the highest in the profiles which worries me.\n\ncc @dotdash\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8484/timeline", "performed_via_github_app": null, "state_reason": "completed"}