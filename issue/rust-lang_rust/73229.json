{"url": "https://api.github.com/repos/rust-lang/rust/issues/73229", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73229/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73229/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73229/events", "html_url": "https://github.com/rust-lang/rust/issues/73229", "id": 636716445, "node_id": "MDU6SXNzdWU2MzY3MTY0NDU=", "number": 73229, "title": "ICE: Error encountered resolving bounds after type-checking ", "user": {"login": "The0x539", "id": 7350294, "node_id": "MDQ6VXNlcjczNTAyOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7350294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The0x539", "html_url": "https://github.com/The0x539", "followers_url": "https://api.github.com/users/The0x539/followers", "following_url": "https://api.github.com/users/The0x539/following{/other_user}", "gists_url": "https://api.github.com/users/The0x539/gists{/gist_id}", "starred_url": "https://api.github.com/users/The0x539/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The0x539/subscriptions", "organizations_url": "https://api.github.com/users/The0x539/orgs", "repos_url": "https://api.github.com/users/The0x539/repos", "events_url": "https://api.github.com/users/The0x539/events{/privacy}", "received_events_url": "https://api.github.com/users/The0x539/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T04:56:18Z", "updated_at": "2020-10-26T06:49:31Z", "closed_at": "2020-10-26T06:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nfn any<T>() -> T { loop {} }\r\n\r\ntrait Foo { type V; }\r\n\r\ntrait Callback<T: Foo>: Fn(&T, &T::V) {}\r\nimpl<T: Foo, F: Fn(&T, &T::V)> Callback<T> for F {}\r\n\r\nstruct Bar<T: Foo> {\r\n    callback: Box<dyn Callback<T>>,\r\n}\r\n\r\nimpl<T: Foo> Bar<T> {\r\n    fn event(&self) {\r\n        (self.callback)(any(), any());\r\n    }\r\n}\r\n\r\nstruct A;\r\nstruct B;\r\nimpl Foo for A { type V = B; }\r\n\r\nfn main() {\r\n    let foo = Bar::<A> {\r\n        callback: Box::new(|_: &A, _: &B| ()),\r\n    };\r\n    foo.event();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0-nightly (feb3536eb 2020-06-09)\r\nbinary: rustc\r\ncommit-hash: feb3536eba10c2e4585d066629598f03d5ddc7c6\r\ncommit-date: 2020-06-09\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_trait_selection/traits/codegen/mod.rs:108: Encountered errors `[FulfillmentError(Obligation(predicate=Binder(TraitPredicate(<dyn for<'r, 's> Callback<A, Output = ()> as std::ops::Fn<(&A, &B)>>)), depth=1),Unimplemented)]` resolving bounds after type-checking\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:907:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:481\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_trait_selection::traits::codegen::drain_fulfillment_cx_or_panic\r\n  21: rustc_middle::ty::context::GlobalCtxt::enter_local\r\n  22: rustc_trait_selection::traits::codegen::codegen_fulfill_obligation\r\n  23: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::codegen_fulfill_obligation>::compute\r\n  24: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  25: rustc_data_structures::stack::ensure_sufficient_stack\r\n  26: rustc_query_system::query::plumbing::get_query_impl\r\n  27: rustc_ty::instance::resolve_instance\r\n  28: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::resolve_instance>::compute\r\n  29: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  30: rustc_data_structures::stack::ensure_sufficient_stack\r\n  31: rustc_query_system::query::plumbing::get_query_impl\r\n  32: rustc_middle::ty::instance::Instance::resolve\r\n  33: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator_kind\r\n  34: rustc_mir::monomorphize::collector::collect_neighbours\r\n  35: rustc_data_structures::stack::ensure_sufficient_stack\r\n  36: rustc_mir::monomorphize::collector::collect_items_rec\r\n  37: rustc_mir::monomorphize::collector::collect_items_rec\r\n  38: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  39: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  40: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  41: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  42: rustc_query_system::query::plumbing::get_query_impl\r\n  43: rustc_codegen_ssa::base::codegen_crate\r\n  44: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  45: rustc_interface::passes::start_codegen\r\n  46: rustc_middle::ty::context::tls::enter_global\r\n  47: rustc_interface::queries::Queries::ongoing_codegen\r\n  48: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  49: rustc_span::with_source_map\r\n  50: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  51: scoped_tls::ScopedKey<T>::set\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73229/timeline", "performed_via_github_app": null, "state_reason": "completed"}