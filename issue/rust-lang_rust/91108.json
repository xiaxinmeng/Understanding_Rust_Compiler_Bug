{"url": "https://api.github.com/repos/rust-lang/rust/issues/91108", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/91108/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/91108/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/91108/events", "html_url": "https://github.com/rust-lang/rust/issues/91108", "id": 1059384866, "node_id": "I_kwDOAAsO6M4_JO4i", "number": 91108, "title": "\"type annotations needed\" in closure hints at suboptimal fix", "user": {"login": "Vanille-N", "id": 58042063, "node_id": "MDQ6VXNlcjU4MDQyMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/58042063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vanille-N", "html_url": "https://github.com/Vanille-N", "followers_url": "https://api.github.com/users/Vanille-N/followers", "following_url": "https://api.github.com/users/Vanille-N/following{/other_user}", "gists_url": "https://api.github.com/users/Vanille-N/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vanille-N/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vanille-N/subscriptions", "organizations_url": "https://api.github.com/users/Vanille-N/orgs", "repos_url": "https://api.github.com/users/Vanille-N/repos", "events_url": "https://api.github.com/users/Vanille-N/events{/privacy}", "received_events_url": "https://api.github.com/users/Vanille-N/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-11-21T13:48:03Z", "updated_at": "2021-11-21T13:50:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: [play.rust-lang.org](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=400b1729dce810a5a01bca62c8d08601)\r\n\r\n```rust\r\nfn main() {\r\n    let v: Vec<String> = vec![  // annotating Vec<String> here to make sure the error is unrelated\r\n        \"foo\".to_string(),\r\n        \"bar\".to_string(),\r\n    ];\r\n    let choose = |i| {\r\n        if i < v.len() {\r\n            &v[i]\r\n        } else {\r\n            \"\"\r\n        }\r\n    };\r\n    println!(\"{:?}\", choose(1usize));  // also 1usize for the same reason as above\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0271]: type mismatch resolving `<usize as SliceIndex<[String]>>::Output == str`\r\n --> src/main.rs:8:14\r\n  |\r\n8 |             &v[i]\r\n  |              ^^^^ expected struct `String`, found `str`\r\n\r\nFor more information about this error, try `rustc --explain E0271`.\r\nerror: could not compile `playground` due to previous error\r\n\r\n```\r\n(no difference seen between nightly/beta/stable)\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0282]: type annotations needed\r\n --> src/main.rs:6:19\r\n  |\r\n6 |     let choose = |i| {\r\n  |                   ^ consider giving this closure parameter a type\r\n  |\r\n  = note: type must be known at this point\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\nwhich is the error message obtained from setting `choose = |i| i.to_string()`.\r\n\r\nI believe the current error message is less helpful than it could be because\r\n- \"`<usize as SliceIndex<[String]>>::Output == str`\" seems to suggest that `i: usize` was correctly guessed;\r\n- \"expected struct `String`, found `str`\" points to an `str` vs `&str` vs `String` vs `&String` issue, which is one consequence but not the root cause.\r\n\r\nThese seem to point to the following fix:\r\n```rs\r\nlet choose = |i| {\r\n    if i < v.len() {\r\n        &v[i] as &str   // added \" as &str\"\r\n    } else {\r\n        \"\"\r\n    }\r\n};\r\n```\r\nwhich does compile, but is less good a solution than\r\n```rs\r\nlet choose = |i: usize| {   // added \": usize\"\r\n    if i < v.len() {\r\n        &v[i]\r\n    } else {\r\n        \"\"\r\n    }\r\n};\r\n```\r\n\r\nThe error message is also subject to big changes because of variations:\r\n```rs\r\nlet choose = |i| {\r\n    if i < v.len() {\r\n        v[i].to_string()\r\n    } else {\r\n        \"\".to_string()\r\n    }\r\n};\r\n```\r\nproduces\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0282]: type annotations needed\r\n --> src/main.rs:8:14\r\n  |\r\n8 |             v[i].to_string()\r\n  |             ^^^^ cannot infer type\r\n  |\r\n  = note: type must be known at this point\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\nwhich again can be solved by either `(&v[i] as &str).to_string()` (bad) or `|i: usize|` (good).\r\n\r\nAre there any known issues with (at least by default) changing such \"type annotations needed\" errors in closures with\r\nunannotated arguments to point to the arguments instead of the expression at fault ?\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/91108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/91108/timeline", "performed_via_github_app": null, "state_reason": null}