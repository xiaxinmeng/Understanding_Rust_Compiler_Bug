{"url": "https://api.github.com/repos/rust-lang/rust/issues/70045", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70045/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70045/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70045/events", "html_url": "https://github.com/rust-lang/rust/issues/70045", "id": 582437283, "node_id": "MDU6SXNzdWU1ODI0MzcyODM=", "number": 70045, "title": "Type Parameter Name becomes \u201c_\u201d in Part of Error Message", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-16T16:31:57Z", "updated_at": "2020-03-17T03:10:28Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "```rust\r\n\r\n\r\nfn main() {\r\n    let x1 = [Ok(1), Ok(0)];\r\n}\r\n```\r\n\r\n([Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=bc4501ab19de8c78f0c5326351412108))\r\n\r\nErrors:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0282]: type annotations needed for `[std::result::Result<i32, _>; 2]`\r\n --> src/main.rs:4:15\r\n  |\r\n4 |     let x1 = [Ok(1), Ok(0)];\r\n  |         --    ^^ cannot infer type for type parameter `E` declared on the enum `Result`\r\n  |         |\r\n  |         consider giving `x1` the explicit type `[std::result::Result<i32, _>; 2]`, where the type parameter `E` is specified\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0282`.\r\nerror: could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n\r\n```\r\nAbove, note the \u201cconsider giving `x1` the explicit type\u2026\u201d part of the error message, where it mentions `E`, but in the type we only have a `_`.\r\n\r\n\r\nIn a more straightforward case (without the array) the error message is\r\n```\r\n  |\r\n4 |     let x0 = Ok(1);\r\n  |         --   ^^ cannot infer type for type parameter `E` declared on the enum `Result`\r\n  |         |\r\n  |         consider giving `x0` the explicit type `std::result::Result<i32, E>`, where the type parameter `E` is specified\r\n```\r\nwhich makes a lot more sense, since the `E` actually appears in the type.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70045/timeline", "performed_via_github_app": null, "state_reason": null}