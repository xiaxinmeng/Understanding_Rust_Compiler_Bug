{"url": "https://api.github.com/repos/rust-lang/rust/issues/8636", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/8636/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/8636/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/8636/events", "html_url": "https://github.com/rust-lang/rust/issues/8636", "id": 18279041, "node_id": "MDU6SXNzdWUxODI3OTA0MQ==", "number": 8636, "title": "Matches on &mut[] move the .. match & don't consider disjointness", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}, {"id": 867483626, "node_id": "MDU6TGFiZWw4Njc0ODM2MjY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/NLL-fixed-by-NLL", "name": "NLL-fixed-by-NLL", "color": "f799ea", "default": false, "description": "Bugs fixed, but only when NLL is enabled."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2013-08-20T05:51:00Z", "updated_at": "2018-07-08T14:11:14Z", "closed_at": "2018-07-06T14:56:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I believe the following should work, since `head` and `tail` are disjoint, and `tail` is just taking a slice into `v` (this would mean that `v` is inaccessible while the result of `mut_head_tail` is kept around):\n\n``` rust\nfn mut_head_tail<'a, A>(v: &'a mut [A]) -> Option<(&'a mut A, &'a mut [A])> {\n    match v {\n        [ref mut head, .. tail] => {\n            Some((head, tail))\n        }\n        [] => None\n    }\n\n    /* // this works currently:\n    if v.is_empty() {\n        None\n    } else {\n        let (low, hi) = v.mut_split(1);\n        Some((&mut low[0], hi))\n    }\n    */\n}\n\nfn main() {\n    let mut v = ~[1,2,3,4];\n\n    match mut_head_tail(v) {\n        None => {},\n        Some((h,t)) => {\n            *h = 1000;\n            t.reverse();\n        }\n    }\n\n    println!(\"{:?}\", v);\n}\n```\n\n```\nmut-vec-match.rs:3:26: 3:30 error: cannot bind by-move and by-ref in the same pattern\nmut-vec-match.rs:3         [ref mut head, .. tail] => {\n                                             ^~~~\nmut-vec-match.rs:3:9: 3:21 note: by-ref binding occurs here\nmut-vec-match.rs:3         [ref mut head, .. tail] => {\n                            ^~~~~~~~~~~~\nerror: aborting due to previous error\n```\n\nChanging it to (and removing the `t.reverse()`):\n\n``` rust\nfn mut_head_tail<'a, A>(v: &'a mut [A]) -> Option<(&'a mut A, ())> {\n    match v {\n        [ref mut head, .. ref mut _tail] => {\n            Some((head, ()))\n        }\n        [] => None\n    }\n}\n```\n\n```\nmut-vec-match.rs:21:9: 21:21 error: cannot borrow `(*v)[]` as mutable more than once at a time\nmut-vec-match.rs:21         [ref mut head, .. ref mut _tail] => {\n                             ^~~~~~~~~~~~\nmut-vec-match.rs:21:8: 21:40 note: second borrow of `(*v)[]` as mutable occurs here\nmut-vec-match.rs:21         [ref mut head, .. ref mut _tail] => {\n                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nerror: aborting due to previous error\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/8636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/8636/timeline", "performed_via_github_app": null, "state_reason": "completed"}