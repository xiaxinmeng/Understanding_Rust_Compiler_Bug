{"url": "https://api.github.com/repos/rust-lang/rust/issues/78254", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78254/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78254/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78254/events", "html_url": "https://github.com/rust-lang/rust/issues/78254", "id": 727756840, "node_id": "MDU6SXNzdWU3Mjc3NTY4NDA=", "number": 78254, "title": "ICE: Syntax error in if-let and Cell methods cause rustc panic at Box<Any>", "user": {"login": "justanotherdot", "id": 5350032, "node_id": "MDQ6VXNlcjUzNTAwMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5350032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justanotherdot", "html_url": "https://github.com/justanotherdot", "followers_url": "https://api.github.com/users/justanotherdot/followers", "following_url": "https://api.github.com/users/justanotherdot/following{/other_user}", "gists_url": "https://api.github.com/users/justanotherdot/gists{/gist_id}", "starred_url": "https://api.github.com/users/justanotherdot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justanotherdot/subscriptions", "organizations_url": "https://api.github.com/users/justanotherdot/orgs", "repos_url": "https://api.github.com/users/justanotherdot/repos", "events_url": "https://api.github.com/users/justanotherdot/events{/privacy}", "received_events_url": "https://api.github.com/users/justanotherdot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-10-22T22:18:28Z", "updated_at": "2020-10-22T22:19:43Z", "closed_at": "2020-10-22T22:19:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::cell::Cell;\r\n\r\nfn main() {\r\n    let xs: Cell<Option<()>> = Cell::new(None);\r\n    // ditto get_mut, et. al.\r\n    // NB. `if Some` rather than `if let Some`\r\n    if Some(xs) = xs.take() { }\r\n}\r\n```\r\n\r\n### Meta\r\n\r\nHi! \ud83d\udc4b  First issue; sorry if anything is missing/off. \r\n\r\nBy the minimal example, it looks like the missing `let` in the `if let` seems to cause a syntax error, but the usual diagnostic isn't reported and an ICE occurs, instead.\r\n\r\nThis does not happen on stable, but I can reproduce on the following versions:\r\n\r\n```\r\n; rustc --version --verbose\r\nrustc 1.48.0-nightly (bbc677480 2020-09-18)\r\nbinary: rustc\r\ncommit-hash: bbc677480db8da85ea302e1e89d3df1f00e435bf\r\ncommit-date: 2020-09-18\r\nhost: x86_64-apple-darwin\r\nrelease: 1.48.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n```\r\n; cargo +beta rustc -- --version --verbose\r\n   Compiling rustc-ice-2020-10-23 v0.1.0 (/Users/rjs/tmp/rustc-ice-2020-10-23)\r\nrustc 1.48.0-beta.5 (4c78178b1 2020-10-21)\r\nbinary: rustc\r\ncommit-hash: 4c78178b1c6ee26e493edb58cefaa77ca44e3991\r\ncommit-date: 2020-10-21\r\nhost: x86_64-apple-darwin\r\nrelease: 1.48.0-beta.5\r\nLLVM version: 11.0\r\n```\r\n\r\n```\r\n; cargo +nightly rustc -- --version --verbose\r\n   Compiling rustc-ice-2020-10-23 v0.1.0 (/Users/rjs/tmp/rustc-ice-2020-10-23)\r\nrustc 1.49.0-nightly (1eaadebb3 2020-10-21)\r\nbinary: rustc\r\ncommit-hash: 1eaadebb3dee31669c7649b32747381d11614fae\r\ncommit-date: 2020-10-21\r\nhost: x86_64-apple-darwin\r\nrelease: 1.49.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n; cargo check\r\n    Checking rustc-ice-2020-10-23 v0.1.0 (/Users/rjs/tmp/rustc-ice-2020-10-23)\r\nerror: internal compiler error: compiler/rustc_typeck/src/check/mod.rs:3396:25: while adjusting Expr { hir_id: HirId { owner: DefId(0:4 ~ rustc_ice_2020_10_23[ee17]::main[0])\r\n, local_id: 29 }, kind: Path(Resolved(None, Path { span: src/main.rs:5:19: 5:21 (#0), res: Local(HirId { owner: DefId(0:4 ~ rustc_ice_2020_10_23[ee17]::main[0]), local_id: 1\r\n}), segments: [PathSegment { ident: xs#0, hir_id: Some(HirId { owner: DefId(0:4 ~ rustc_ice_2020_10_23[ee17]::main[0]), local_id: 28 }), res: Some(Local(HirId { owner: DefId(\r\n0:4 ~ rustc_ice_2020_10_23[ee17]::main[0]), local_id: 1 })), args: None, infer_args: true }] })), attrs: ThinVec(None), span: src/main.rs:5:19: 5:21 (#0) }, can't compose [Bo\r\nrrow(Ref('_#0r, Not)) -> &Cell<Option<()>>] and [Borrow(Ref('_#2r, Not)) -> &Cell<Option<()>>]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:945:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.48.0-nightly (bbc677480 2020-09-18) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental -C target-cpu=native --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `rustc-ice-2020-10-23`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:945:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_typeck::check::FnCtxt::apply_adjustments\r\n   9: rustc_typeck::check::method::confirm::ConfirmContext::confirm\r\n  10: rustc_typeck::check::method::<impl rustc_typeck::check::FnCtxt>::lookup_method\r\n  11: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  12: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  13: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_coercable_to_type\r\n  14: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  17: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  18: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt>::check_match\r\n  19: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  20: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  21: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  22: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_kind\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_expr_with_expectation\r\n  24: rustc_typeck::check::expr::<impl rustc_typeck::check::FnCtxt>::check_return_expr\r\n  25: rustc_typeck::check::check_fn\r\n  26: rustc_infer::infer::InferCtxtBuilder::enter\r\n  27: rustc_typeck::check::typeck\r\n  28: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compu\r\nte\r\n  29: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  30: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  31: rustc_data_structures::stack::ensure_sufficient_stack\r\n  32: rustc_query_system::query::plumbing::get_query_impl\r\n  33: rustc_query_system::query::plumbing::ensure_query_impl\r\n  34: rustc_typeck::check::typeck_item_bodies\r\n  35: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_item_bo\r\ndies>::compute\r\n  36: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  37: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  38: rustc_data_structures::stack::ensure_sufficient_stack\r\n  39: rustc_query_system::query::plumbing::get_query_impl\r\n  40: rustc_typeck::check_crate\r\n  41: rustc_interface::passes::analysis\r\n  42: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::com\r\npute\r\n  43: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  44: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  45: rustc_data_structures::stack::ensure_sufficient_stack\r\n  46: rustc_query_system::query::plumbing::get_query_impl\r\n  47: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  48: rustc_span::with_source_map\r\n  49: rustc_interface::interface::create_compiler_and_run\r\n  50: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78254/timeline", "performed_via_github_app": null, "state_reason": "completed"}