{"url": "https://api.github.com/repos/rust-lang/rust/issues/99682", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99682/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99682/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99682/events", "html_url": "https://github.com/rust-lang/rust/issues/99682", "id": 1315945108, "node_id": "I_kwDOAAsO6M5Ob7qU", "number": 99682, "title": "'cargo check' passes but 'cargo build' fails", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-07-24T16:04:05Z", "updated_at": "2022-08-26T17:27:26Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider the following code:\r\n```rust\r\npub struct G;\r\n\r\npub trait IAmArray{\r\n    const SIZE: usize;\r\n}\r\n\r\nimpl<T, const N: usize> IAmArray for [T; N]{\r\n    const SIZE: usize = N;\r\n}\r\n\r\nimpl G{\r\n    pub fn i_am_break_on_different_array_sizes<A, B>(_a: A, _b: B)\r\n        where A: IAmArray,\r\n            B: IAmArray,\r\n    {\r\n        trait CompileAssert{\r\n            const TRIGGER: ();\r\n        }\r\n        impl<A, B> CompileAssert for (A, B)\r\n            where A: IAmArray,\r\n                B: IAmArray,\r\n        {\r\n            const TRIGGER: () = if A::SIZE == B::SIZE {} else {panic!(\"You must provide arrays of same length\")};\r\n        }\r\n        \r\n        let _ = <(A, B) as CompileAssert>::TRIGGER;\r\n    }\r\n}\r\n\r\nfn main() {\r\n    G::i_am_break_on_different_array_sizes([0u8;5], [0u32;3]);\r\n}\r\n```\r\nWhen I do a check-build of this (`rustc --emit=metadata`), it works fine. But when I do a full build (`rustc --emit=link`), it fails:\r\n```\r\nerror[E0080]: evaluation of `<([u8; 5], [u32; 3]) as G::i_am_break_on_different_array_sizes::CompileAssert>::TRIGGER` failed\r\n  --> test.rs:23:64\r\n   |\r\n23 |             const TRIGGER: () = if A::SIZE == B::SIZE {} else {panic!(\"You must provide arrays of same length\")};\r\n   |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'You must provide arrays of same length', test.rs:23:64\r\n   |\r\n   = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nnote: the above error was encountered while instantiating `fn G::i_am_break_on_different_array_sizes::<[u8; 5], [u32; 3]>`\r\n  --> test.rs:31:5\r\n   |\r\n31 |     G::i_am_break_on_different_array_sizes([0u8;5], [0u32;3]);\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to previous error\r\n```\r\nThis is a post-monomorphization error. It is a long-known problem but I could not find an issue tracking it.\r\n\r\nIt seems worth tracking as it is rather surprising, so if we can find a way to fix it, that would be great. It also leads to issues with Miri such as https://github.com/rust-lang/miri/issues/2423.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99682/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99682/timeline", "performed_via_github_app": null, "state_reason": null}