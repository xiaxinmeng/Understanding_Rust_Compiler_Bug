{"url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10133", "repository_url": "https://api.github.com/repos/rust-lang/rust-clippy", "labels_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10133/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10133/comments", "events_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10133/events", "html_url": "https://github.com/rust-lang/rust-clippy/issues/10133", "id": 1514677927, "node_id": "I_kwDOAZm0i85aSCan", "number": 10133, "title": "cargo clippy --fix fails and requests a bug report be entered", "user": {"login": "hschimke", "id": 424189, "node_id": "MDQ6VXNlcjQyNDE4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/424189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hschimke", "html_url": "https://github.com/hschimke", "followers_url": "https://api.github.com/users/hschimke/followers", "following_url": "https://api.github.com/users/hschimke/following{/other_user}", "gists_url": "https://api.github.com/users/hschimke/gists{/gist_id}", "starred_url": "https://api.github.com/users/hschimke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hschimke/subscriptions", "organizations_url": "https://api.github.com/users/hschimke/orgs", "repos_url": "https://api.github.com/users/hschimke/repos", "events_url": "https://api.github.com/users/hschimke/events{/privacy}", "received_events_url": "https://api.github.com/users/hschimke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149309557, "node_id": "MDU6TGFiZWwxNDkzMDk1NTc=", "url": "https://api.github.com/repos/rust-lang/rust-clippy/labels/C-bug", "name": "C-bug", "color": "F5F1FD", "default": false, "description": "Category: Clippy is not doing the correct thing"}, {"id": 1179592412, "node_id": "MDU6TGFiZWwxMTc5NTkyNDEy", "url": "https://api.github.com/repos/rust-lang/rust-clippy/labels/I-suggestion-causes-error", "name": "I-suggestion-causes-error", "color": "E10C02", "default": false, "description": "Issue: The suggestions provided by this Lint cause an ICE/error when applied"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-12-30T15:11:36Z", "updated_at": "2023-01-03T00:32:32Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When running `cargo clippy --fix` on my library project rxing (https://github.com/hschimke/rxing) I receive the below error with a request to submit the issue as a bug report for rustc.\r\n\r\nrustc:\r\n```\r\nrustc --version\r\nrustc 1.66.0 (69f9c33d7 2022-12-12)\r\n```\r\n\r\ncargo:\r\n```\r\ncargo --version\r\ncargo 1.66.0 (d65d197ad 2022-11-15)\r\n```\r\n\r\nclippy:\r\n```\r\ncargo clippy --version \r\nclippy 0.1.66 (69f9c33d 2022-12-12)\r\n```\r\n\r\nHere is the complete text of the error:\r\n```\r\nwarning: failed to automatically apply fixes suggested by rustc to crate `rxing`\r\n\r\nafter fixes were automatically applied the compiler reported errors within these files:\r\n\r\n  * src/client/result/CalendarParsedResult.rs\r\n  * src/common/detector/monochrome_rectangle_detector.rs\r\n  * src/common/reedsolomon/generic_gf_poly.rs\r\n  * src/datamatrix/data_matrix_writer.rs\r\n  * src/datamatrix/decoder/decoded_bit_stream_parser.rs\r\n  * src/maxicode/decoder/decoded_bit_stream_parser.rs\r\n  * src/multi_format_writer.rs\r\n  * src/oned/multi_format_one_d_reader.rs\r\n  * src/oned/multi_format_upc_ean_reader.rs\r\n  * src/oned/rss/expanded/decoders/abstract_decoder_test_utils.rs\r\n  * src/oned/rss/expanded/decoders/field_parser.rs\r\n  * src/pdf417/decoder/decoded_bit_stream_parser.rs\r\n  * src/pdf417/decoder/detection_result.rs\r\n  * src/pdf417/decoder/ec/modulus_poly.rs\r\n  * src/pdf417/decoder/pdf_417_scanning_decoder.rs\r\n  * src/pdf417/encoder/pdf_417_high_level_encoder.rs\r\n  * src/qrcode/encoder/encoder.rs\r\n  * src/qrcode/encoder/minimal_encoder.rs\r\n\r\nThis likely indicates a bug in either rustc or cargo itself,\r\nand we would appreciate a bug report! You're likely to see \r\na number of compiler warnings after this message which cargo\r\nattempted to fix but failed. If you could open an issue at\r\nhttps://github.com/rust-lang/rust/issues\r\nquoting the full output of this command we'd be very appreciative!\r\nNote that you may be able to make some more progress in the near-term\r\nfixing code with the `--broken-code` flag\r\n\r\nThe following errors were reported:\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/oned/multi_format_one_d_reader.rs:86:36\r\n   |\r\n86 |                 readers.push(Box::<oned::itf_reader::ITFReader>::default());\r\n   |                                    ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n   --> src/oned/multi_format_one_d_reader.rs:104:32\r\n    |\r\n104 |             readers.push(Box::<oned::itf_reader::ITFReader>::default());\r\n    |                                ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:49:36\r\n   |\r\n49 |                 readers.push(Box::<oned::ean_13_reader::EAN13Reader>::default());\r\n   |                                    ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:51:36\r\n   |\r\n51 |                 readers.push(Box::<oned::upc_a_reader::UPCAReader>::default());\r\n   |                                    ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:54:36\r\n   |\r\n54 |                 readers.push(Box::<oned::ean_8_reader::EAN8Reader>::default());\r\n   |                                    ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:57:36\r\n   |\r\n57 |                 readers.push(Box::<oned::upc_e_reader::UPCEReader>::default());\r\n   |                                    ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:61:32\r\n   |\r\n61 |             readers.push(Box::<oned::ean_13_reader::EAN13Reader>::default());\r\n   |                                ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:63:32\r\n   |\r\n63 |             readers.push(Box::<oned::ean_8_reader::EAN8Reader>::default());\r\n   |                                ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:64:32\r\n   |\r\n64 |             readers.push(Box::<oned::upc_e_reader::UPCEReader>::default());\r\n   |                                ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/multi_format_writer.rs:58:43\r\n   |\r\n58 |             BarcodeFormat::EAN_8 => Box::<oned::ean_8_writer::EAN8Writer>::default(),\r\n   |                                           ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/multi_format_writer.rs:59:43\r\n   |\r\n59 |             BarcodeFormat::UPC_E => Box::<oned::upc_e_writer::UPCEWriter>::default(),\r\n   |                                           ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/multi_format_writer.rs:60:44\r\n   |\r\n60 |             BarcodeFormat::EAN_13 => Box::<oned::ean_13_writer::EAN13Writer>::default(),\r\n   |                                            ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/multi_format_writer.rs:61:43\r\n   |\r\n61 |             BarcodeFormat::UPC_A => Box::<oned::upc_a_writer::UPCAWriter>::default(),\r\n   |                                           ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/multi_format_writer.rs:63:45\r\n   |\r\n63 |             BarcodeFormat::CODE_39 => Box::<oned::code_39_writer::Code39Writer>::default(),\r\n   |                                             ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/multi_format_writer.rs:64:45\r\n   |\r\n64 |             BarcodeFormat::CODE_93 => Box::<oned::code_93_writer::Code93Writer>::default(),\r\n   |                                             ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/multi_format_writer.rs:65:46\r\n   |\r\n65 |             BarcodeFormat::CODE_128 => Box::<oned::code_128_writer::Code128Writer>::default(),\r\n   |                                              ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/multi_format_writer.rs:66:41\r\n   |\r\n66 |             BarcodeFormat::ITF => Box::<oned::itf_writer::ITFWriter>::default(),\r\n   |                                         ^^^^ use of undeclared crate or module `oned`\r\n\r\nerror[E0433]: failed to resolve: use of undeclared crate or module `oned`\r\n  --> src/multi_format_writer.rs:69:45\r\n   |\r\n69 |             BarcodeFormat::CODABAR => Box::<oned::code_128_writer::Code128Writer>::default(),\r\n   |                                             ^^^^ use of undeclared crate or module `oned`\r\n\r\nwarning: unnecessary parentheses around block return value\r\n   --> src/maxicode/decoder/decoded_bit_stream_parser.rs:262:5\r\n    |\r\n262 |     (str1_u16 - str2_u16)\r\n    |     ^                   ^\r\n    |\r\n    = note: `#[warn(unused_parens)]` on by default\r\nhelp: remove these parentheses\r\n    |\r\n262 -     (str1_u16 - str2_u16)\r\n262 +     str1_u16 - str2_u16\r\n    |\r\n\r\nwarning: unused doc comment\r\n  --> src/qrcode/encoder/encoder.rs:54:1\r\n   |\r\n54 | / /**\r\n55 | |  * @author satorux@google.com (Satoru Takabayashi) - creator\r\n56 | |  * @author dswitkin@google.com (Daniel Switkin) - ported from C++\r\n57 | |  */\r\n   | |___^ rustdoc does not generate documentation for macro invocations\r\n   |\r\n   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\r\n   = note: `#[warn(unused_doc_comments)]` on by default\r\n\r\nwarning: unnecessary parentheses around function argument\r\n   --> src/datamatrix/decoder/decoded_bit_stream_parser.rs:318:59\r\n    |\r\n318 |                         result.append_char(char::from_u32((cValue + 128)).unwrap());\r\n    |                                                           ^            ^\r\n    |\r\nhelp: remove these parentheses\r\n    |\r\n318 -                         result.append_char(char::from_u32((cValue + 128)).unwrap());\r\n318 +                         result.append_char(char::from_u32(cValue + 128).unwrap());\r\n    |\r\n\r\nwarning: unused doc comment\r\n  --> src/oned/rss/expanded/decoders/field_parser.rs:33:1\r\n   |\r\n33 | / /**\r\n34 | |  * @author Pablo Ordu\u00f1a, University of Deusto (pablo.orduna@deusto.es)\r\n35 | |  * @author Eduardo Castillejo, University of Deusto (eduardo.castillejo@deusto.es)\r\n36 | |  */\r\n   | |___^ rustdoc does not generate documentation for macro invocations\r\n   |\r\n   = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\r\n\r\nwarning: unused import: `super::ITFReader`\r\n  --> src/oned/multi_format_one_d_reader.rs:23:5\r\n   |\r\n23 | use super::ITFReader;\r\n   |     ^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_imports)]` on by default\r\n\r\nwarning: unused import: `super::EAN13Reader`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:23:5\r\n   |\r\n23 | use super::EAN13Reader;\r\n   |     ^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `super::EAN8Reader`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:24:5\r\n   |\r\n24 | use super::EAN8Reader;\r\n   |     ^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `super::UPCAReader`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:26:5\r\n   |\r\n26 | use super::UPCAReader;\r\n   |     ^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `super::UPCEReader`\r\n  --> src/oned/multi_format_upc_ean_reader.rs:27:5\r\n   |\r\n27 | use super::UPCEReader;\r\n   |     ^^^^^^^^^^^^^^^^^\r\n\r\nwarning: unused imports: `Code128Writer`, `Code39Writer`, `Code93Writer`, `EAN13Writer`, `EAN8Writer`, `ITFWriter`, `UPCAWriter`, `UPCEWriter`\r\n  --> src/multi_format_writer.rs:23:9\r\n   |\r\n23 |         Code128Writer, Code39Writer, Code93Writer, EAN13Writer, EAN8Writer, ITFWriter, UPCAWriter,\r\n   |         ^^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^\r\n24 |         UPCEWriter,\r\n   |         ^^^^^^^^^^\r\n\r\nwarning: this `else { if .. }` block can be collapsed\r\n   --> src/common/reedsolomon/generic_gf_poly.rs:309:24\r\n    |\r\n309 |                   } else {\r\n    |  ________________________^\r\n310 | |                     if !result.is_empty() {\r\n311 | |                         result.push_str(\" + \");\r\n312 | |                     }\r\n313 | |                 }\r\n    | |_________________^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\r\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\r\nhelp: collapse nested if block\r\n    |\r\n309 ~                 } else if !result.is_empty() {\r\n310 +                     result.push_str(\" + \");\r\n311 +                 }\r\n    |\r\n\r\nwarning: this `else { if .. }` block can be collapsed\r\n   --> src/qrcode/encoder/minimal_encoder.rs:204:16\r\n    |\r\n204 |           } else {\r\n    |  ________________^\r\n205 | |             if version.getVersionNumber() <= 26 {\r\n206 | |                 VersionSize::MEDIUM\r\n207 | |             } else {\r\n208 | |                 VersionSize::LARGE\r\n209 | |             }\r\n210 | |         }\r\n    | |_________^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\r\nhelp: collapse nested if block\r\n    |\r\n204 ~         } else if version.getVersionNumber() <= 26 {\r\n205 +             VersionSize::MEDIUM\r\n206 +         } else {\r\n207 +             VersionSize::LARGE\r\n208 +         }\r\n    |\r\n\r\nwarning: consider removing unnecessary double parentheses\r\n   --> src/datamatrix/decoder/decoded_bit_stream_parser.rs:318:59\r\n    |\r\n318 |                         result.append_char(char::from_u32((cValue + 128)).unwrap());\r\n    |                                                           ^^^^^^^^^^^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#double_parens\r\n    = note: `#[warn(clippy::double_parens)]` on by default\r\n\r\nwarning: this is a decimal constant\r\n   --> src/pdf417/decoder/ec/modulus_poly.rs:144:32\r\n    |\r\n144 |         let mut sumDiff = vec![0032; largerCoefficients.len()];\r\n    |                                ^^^^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\r\n    = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\r\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\r\n    |\r\n144 |         let mut sumDiff = vec![32; largerCoefficients.len()];\r\n    |                                ~~\r\nhelp: if you mean to use an octal constant, use `0o`\r\n    |\r\n144 |         let mut sumDiff = vec![0o32; largerCoefficients.len()];\r\n    |                                ~~~~\r\n\r\nwarning: this `if` statement can be collapsed\r\n   --> src/pdf417/decoder/detection_result.rs:170:13\r\n    |\r\n170 | /             if\r\n171 | |             //let (Some(lricw), Some(rricw)) =\r\n172 | |             self.detectionRXingResultColumns[0]\r\n173 | |                 .as_ref()\r\n...   |\r\n253 | |                 }\r\n254 | |             }\r\n    | |_____________^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\r\n    = note: `#[warn(clippy::collapsible_if)]` on by default\r\nhelp: collapse nested if block\r\n    |\r\n170 ~             if self.detectionRXingResultColumns[0]\r\n171 +                 .as_ref()\r\n172 +                 .unwrap()\r\n173 +                 .getCodewords()[codewordsRow]\r\n174 +                 .is_some() && self.detectionRXingResultColumns[self.barcodeColumnCount + 1]\r\n175 +                     .as_ref()\r\n176 +                     .unwrap()\r\n177 +                     .getCodewords()[codewordsRow]\r\n178 +                     .is_some() && self.detectionRXingResultColumns[0]\r\n179 +                     .as_ref()\r\n180 +                     .unwrap()\r\n181 +                     .getCodewords()[codewordsRow]\r\n182 +                     .as_ref()\r\n183 +                     .unwrap()\r\n184 +                     .getRowNumber() == self.detectionRXingResultColumns[self.barcodeColumnCount + 1]\r\n185 +                         .as_ref()\r\n186 +                         .unwrap()\r\n187 +                         .getCodewords()[codewordsRow]\r\n188 +                         .as_ref()\r\n189 +                         .unwrap()\r\n190 +                         .getRowNumber() {\r\n191 +                 // if (LRIcodewords[codewordsRow] != null &&\r\n192 +                 //     RRIcodewords[codewordsRow] != null &&\r\n193 +                 //     LRIcodewords[codewordsRow].getRowNumber() == RRIcodewords[codewordsRow].getRowNumber()) {\r\n194 +                 for barcodeColumn in 1..=self.barcodeColumnCount {\r\n195 +                     // for (int barcodeColumn = 1; barcodeColumn <= barcodeColumnCount; barcodeColumn++) {\r\n196 +                     if self.detectionRXingResultColumns[barcodeColumn].is_some()\r\n197 +                     //let Some(dc_col) =\r\n198 +                     //&mut self.detectionRXingResultColumns[barcodeColumn]\r\n199 +                     {\r\n200 +                         if self.detectionRXingResultColumns[barcodeColumn]\r\n201 +                             .as_mut()\r\n202 +                             .unwrap()\r\n203 +                             .getCodewordsMut()[codewordsRow]\r\n204 +                             .is_some()\r\n205 +                         {\r\n206 +                             //let Some(codeword) = &mut self.detectionRXingResultColumns[barcodeColumn].as_mut().unwrap().getCodewordsMut()[codewordsRow] {\r\n207 +                             let new_row_number = self.detectionRXingResultColumns[0]\r\n208 +                                 .as_ref()\r\n209 +                                 .unwrap()\r\n210 +                                 .getCodewords()[codewordsRow]\r\n211 +                                 .as_ref()\r\n212 +                                 .unwrap()\r\n213 +                                 .getRowNumber();\r\n214 +                             self.detectionRXingResultColumns[barcodeColumn]\r\n215 +                                 .as_mut()\r\n216 +                                 .unwrap()\r\n217 +                                 .getCodewordsMut()[codewordsRow]\r\n218 +                                 .as_mut()\r\n219 +                                 .unwrap()\r\n220 +                                 .setRowNumber(new_row_number);\r\n221 +                             if !self.detectionRXingResultColumns[barcodeColumn]\r\n222 +                                 .as_mut()\r\n223 +                                 .unwrap()\r\n224 +                                 .getCodewordsMut()[codewordsRow]\r\n225 +                                 .as_ref()\r\n226 +                                 .unwrap()\r\n227 +                                 .hasValidRowNumber()\r\n228 +                             {\r\n229 +                                 // self.detectionRXingResultColumns[barcodeColumn].getCodewords()[codewordsRow] = None;\r\n230 +                                 self.detectionRXingResultColumns[barcodeColumn]\r\n231 +                                     .as_mut()\r\n232 +                                     .unwrap()\r\n233 +                                     .getCodewordsMut()[codewordsRow] = None;\r\n234 +                             }\r\n235 +                         } else {\r\n236 +                             continue;\r\n237 +                         }\r\n238 +                     } else {\r\n239 +                         continue;\r\n240 +                     }\r\n241 +                     // let codeword = self.detectionRXingResultColumns[barcodeColumn].getCodewords()[codewordsRow];\r\n242 +                     // if (codeword == null) {\r\n243 +                     //   continue;\r\n244 +                     // }\r\n245 +                 }\r\n246 +             }\r\n    |\r\n\r\nwarning: this `if` statement can be collapsed\r\n   --> src/pdf417/decoder/pdf_417_scanning_decoder.rs:405:12\r\n    |\r\n405 |       } else if numberOfCodewords[0] != calculatedNumberOfCodewords {\r\n    |  ____________^\r\n406 | |         if (1..=pdf_417_common::MAX_CODEWORDS_IN_BARCODE).contains(&calculatedNumberOfCodewords)\r\n407 | |         {\r\n408 | |             // The calculated one is more reliable as it is derived from the row indicator columns\r\n409 | |             barcodeMatrix01.setValue(calculatedNumberOfCodewords);\r\n410 | |         }\r\n411 | |     }\r\n    | |_____^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\r\nhelp: collapse nested if block\r\n    |\r\n405 ~     } else if numberOfCodewords[0] != calculatedNumberOfCodewords && (1..=pdf_417_common::MAX_CODEWORDS_IN_BARCODE).contains(&calculatedNumberOfCodewords) {\r\n406 +         // The calculated one is more reliable as it is derived from the row indicator columns\r\n407 +         barcodeMatrix01.setValue(calculatedNumberOfCodewords);\r\n408 +     }\r\n    |\r\n\r\nwarning: this `else { if .. }` block can be collapsed\r\n   --> src/pdf417/encoder/pdf_417_high_level_encoder.rs:439:28\r\n    |\r\n439 |                       } else {\r\n    |  ____________________________^\r\n440 | |                         if isAlphaUpper(ch) {\r\n441 | |                             submode = SUBMODE_ALPHA;\r\n442 | |                             tmp.push(28 as char); //al\r\n...   |\r\n456 | |                         }\r\n457 | |                     }\r\n    | |_____________________^\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\r\nhelp: collapse nested if block\r\n    |\r\n439 ~                     } else if isAlphaUpper(ch) {\r\n440 +                         submode = SUBMODE_ALPHA;\r\n441 +                         tmp.push(28 as char); //al\r\n442 +                         continue;\r\n443 +                     } else if isAlphaLower(ch) {\r\n444 +                         submode = SUBMODE_LOWER;\r\n445 +                         tmp.push(27 as char); //ll\r\n446 +                         continue;\r\n447 +                     } else {\r\n448 +                         if startpos + idx + 1 < count && !input.isECI(startpos + idx + 1)? && isPunctuation(input.charAt((startpos + idx + 1) as usize)?) {\r\n449 +                             submode = SUBMODE_PUNCTUATION;\r\n450 +                             tmp.push(25 as char); //pl\r\n451 +                             continue;\r\n452 +                         }\r\n453 +                         tmp.push(29 as char); //ps\r\n454 +                         tmp.push(char::from_u32(PUNCTUATION[ch as usize] as u32).unwrap());\r\n455 +                     }\r\n    |\r\n\r\nwarning: use of deprecated struct `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector`\r\n  --> src/common/detector/monochrome_rectangle_detector.rs:35:6\r\n   |\r\n35 | impl MonochromeRectangleDetector {\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(deprecated)]` on by default\r\n\r\nwarning: use of deprecated unit variant `encode_hints::EncodeHintType::MIN_SIZE`\r\n  --> src/datamatrix/data_matrix_writer.rs:91:63\r\n   |\r\n91 |             let requestedMinSize = hints.get(&EncodeHintType::MIN_SIZE);\r\n   |                                                               ^^^^^^^^\r\n\r\nwarning: use of deprecated tuple variant `encode_hints::EncodeHintValue::MinSize`\r\n  --> src/datamatrix/data_matrix_writer.rs:92:42\r\n   |\r\n92 |             if let Some(EncodeHintValue::MinSize(rq)) = requestedMinSize {\r\n   |                                          ^^^^^^^\r\n\r\nwarning: use of deprecated unit variant `encode_hints::EncodeHintType::MAX_SIZE`\r\n  --> src/datamatrix/data_matrix_writer.rs:96:63\r\n   |\r\n96 |             let requestedMaxSize = hints.get(&EncodeHintType::MAX_SIZE);\r\n   |                                                               ^^^^^^^^\r\n\r\nwarning: use of deprecated tuple variant `encode_hints::EncodeHintValue::MinSize`\r\n  --> src/datamatrix/data_matrix_writer.rs:97:42\r\n   |\r\n97 |             if let Some(EncodeHintValue::MinSize(rq)) = requestedMaxSize {\r\n   |                                          ^^^^^^^\r\n\r\nwarning: use of deprecated associated function `chrono::NaiveDateTime::from_timestamp`: use `from_timestamp_opt()` instead\r\n   --> src/client/result/CalendarParsedResult.rs:259:24\r\n    |\r\n259 |         NaiveDateTime::from_timestamp(date, 0)\r\n    |                        ^^^^^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n  --> src/common/detector/monochrome_rectangle_detector.rs:38:13\r\n   |\r\n38 |             image: image.clone(),\r\n   |             ^^^^^^^^^^^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n  --> src/common/detector/monochrome_rectangle_detector.rs:53:22\r\n   |\r\n53 |         let height = self.image.getHeight() as i32;\r\n   |                      ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n  --> src/common/detector/monochrome_rectangle_detector.rs:54:21\r\n   |\r\n54 |         let width = self.image.getWidth() as i32;\r\n   |                     ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n   --> src/common/detector/monochrome_rectangle_detector.rs:241:17\r\n    |\r\n241 |                 self.image.get(start as u32, fixedDimension as u32)\r\n    |                 ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n   --> src/common/detector/monochrome_rectangle_detector.rs:243:17\r\n    |\r\n243 |                 self.image.get(fixedDimension as u32, start as u32)\r\n    |                 ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n   --> src/common/detector/monochrome_rectangle_detector.rs:251:25\r\n    |\r\n251 |                         self.image.get(start as u32, fixedDimension as u32)\r\n    |                         ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n   --> src/common/detector/monochrome_rectangle_detector.rs:253:25\r\n    |\r\n253 |                         self.image.get(fixedDimension as u32, start as u32)\r\n    |                         ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n   --> src/common/detector/monochrome_rectangle_detector.rs:271:17\r\n    |\r\n271 |                 self.image.get(end as u32, fixedDimension as u32)\r\n    |                 ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n   --> src/common/detector/monochrome_rectangle_detector.rs:273:17\r\n    |\r\n273 |                 self.image.get(fixedDimension as u32, end as u32)\r\n    |                 ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n   --> src/common/detector/monochrome_rectangle_detector.rs:281:25\r\n    |\r\n281 |                         self.image.get(end as u32, fixedDimension as u32)\r\n    |                         ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `common::detector::monochrome_rectangle_detector::MonochromeRectangleDetector::image`\r\n   --> src/common/detector/monochrome_rectangle_detector.rs:283:25\r\n    |\r\n283 |                         self.image.get(fixedDimension as u32, end as u32)\r\n    |                         ^^^^^^^^^^\r\n\r\nwarning: use of deprecated field `encode_hints::EncodeHintValue::MinSize::0`\r\n  --> src/datamatrix/data_matrix_writer.rs:92:50\r\n   |\r\n92 |             if let Some(EncodeHintValue::MinSize(rq)) = requestedMinSize {\r\n   |                                                  ^^\r\n\r\nwarning: use of deprecated field `encode_hints::EncodeHintValue::MinSize::0`\r\n  --> src/datamatrix/data_matrix_writer.rs:97:50\r\n   |\r\n97 |             if let Some(EncodeHintValue::MinSize(rq)) = requestedMaxSize {\r\n   |                                                  ^^\r\n\r\nwarning: use of deprecated associated function `pdf417::pdf_417_result_metadata::PDF417RXingResultMetadata::setOptionalData`\r\n   --> src/pdf417/decoder/decoded_bit_stream_parser.rs:318:24\r\n    |\r\n318 |         resultMetadata.setOptionalData(\r\n    |                        ^^^^^^^^^^^^^^^\r\n\r\nwarning: unused import: `AbstractExpandedDecoder`\r\n  --> src/oned/rss/expanded/decoders/abstract_decoder_test_utils.rs:29:58\r\n   |\r\n29 |     decoders::{abstract_expanded_decoder::createDecoder, AbstractExpandedDecoder},\r\n   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror: aborting due to 18 previous errors; 38 warnings emitted\r\n\r\nFor more information about this error, try `rustc --explain E0433`.\r\nOriginal diagnostics will follow.\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust-clippy/issues/10133/timeline", "performed_via_github_app": null, "state_reason": null}