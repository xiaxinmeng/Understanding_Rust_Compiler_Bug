{"url": "https://api.github.com/repos/rust-lang/rust/issues/54688", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/54688/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/54688/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/54688/events", "html_url": "https://github.com/rust-lang/rust/issues/54688", "id": 365193825, "node_id": "MDU6SXNzdWUzNjUxOTM4MjU=", "number": 54688, "title": "target-cpu=native should also check all the target-features", "user": {"login": "GabrielMajeri", "id": 3010346, "node_id": "MDQ6VXNlcjMwMTAzNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/3010346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GabrielMajeri", "html_url": "https://github.com/GabrielMajeri", "followers_url": "https://api.github.com/users/GabrielMajeri/followers", "following_url": "https://api.github.com/users/GabrielMajeri/following{/other_user}", "gists_url": "https://api.github.com/users/GabrielMajeri/gists{/gist_id}", "starred_url": "https://api.github.com/users/GabrielMajeri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GabrielMajeri/subscriptions", "organizations_url": "https://api.github.com/users/GabrielMajeri/orgs", "repos_url": "https://api.github.com/users/GabrielMajeri/repos", "events_url": "https://api.github.com/users/GabrielMajeri/events{/privacy}", "received_events_url": "https://api.github.com/users/GabrielMajeri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-30T05:29:01Z", "updated_at": "2021-01-09T07:48:53Z", "closed_at": "2021-01-09T07:48:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Because LLVM doesn't know what `target-cpu=native` is, we currently [convert this to an actual CPU family name](https://github.com/rust-lang/rust/commit/1fd45a13dee17701fc0aeaa847c1919d485d09fd), relying on the [`llvm::sys::getHostCPUName`](http://llvm.org/doxygen/namespacellvm_1_1sys.html#a2e8cdc0e591685c9156af3d0d4fdae06) function. So if the current CPU's family is Haswell, we convert `target-cpu=native` to `target-cpu=haswell`.\r\n\r\nAs @EFanZh noticed [here](https://github.com/rust-lang/rust/issues/38218#issuecomment-424210340) and [here](https://github.com/rust-lang/rust/issues/48464), some Intel Pentiums belong to the Haswell microarch, but they lack AVX.\r\n\r\n<hr/>\r\n\r\nHere are the flags Clang generates for `-march=native`:\r\n\r\n```sh\r\n$ clang -E - -march=native -###\r\n-target-cpu skylake -target-feature +sse2 -target-feature +cx16 -target-feature +sahf\r\n...\r\n-target-feature -avx512ifma -target-feature -avx512dq\r\n```\r\n\r\nNot only does it set the right `target-cpu` for optimization purposes, it actually manually enables / disables all the features available / not available on the host. This ensures no matter what the microarch is, only available features will be used.\r\n\r\n<hr/>\r\n\r\nWe should probably use the [`llvm::sys::getHostCPUFeatures`](http://llvm.org/doxygen/namespacellvm_1_1sys.html#a4cdccbe62562aeff32fb137a042d5432) to manually get a list of supported target features. This is [what Clang does](https://github.com/llvm-mirror/clang/blob/024b9a4311cfd57ecb7f29d1138dc975fede4752/lib/Driver/ToolChains/Arch/X86.cpp#L116).\r\n\r\nI think this issue will supersede both rust-lang/rust#38218 and rust-lang/rust#48464. If we can fix this, we will never generate code with unavailable target features.\r\n\r\nReproducing these errors is pretty hard, unless you have a machine with a Haswell Intel Pentium. \r\nI think it might be possible to reproduce this in QEMU with `-cpu Haswell,-avx`", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/54688/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/54688/timeline", "performed_via_github_app": null, "state_reason": "completed"}