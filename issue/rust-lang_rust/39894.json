{"url": "https://api.github.com/repos/rust-lang/rust/issues/39894", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39894/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39894/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39894/events", "html_url": "https://github.com/rust-lang/rust/issues/39894", "id": 208293598, "node_id": "MDU6SXNzdWUyMDgyOTM1OTg=", "number": 39894, "title": "Macros not included in back-traces when used in a crate", "user": {"login": "ideasman42", "id": 1869379, "node_id": "MDQ6VXNlcjE4NjkzNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1869379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ideasman42", "html_url": "https://github.com/ideasman42", "followers_url": "https://api.github.com/users/ideasman42/followers", "following_url": "https://api.github.com/users/ideasman42/following{/other_user}", "gists_url": "https://api.github.com/users/ideasman42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ideasman42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ideasman42/subscriptions", "organizations_url": "https://api.github.com/users/ideasman42/orgs", "repos_url": "https://api.github.com/users/ideasman42/repos", "events_url": "https://api.github.com/users/ideasman42/events{/privacy}", "received_events_url": "https://api.github.com/users/ideasman42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-17T00:26:29Z", "updated_at": "2023-04-05T20:58:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a macro causes a panic (directly or indirectly) between crates, the line of code from which the macro is used isn't included in the back-trace.\r\n\r\nThis makes it impossible to know which use of the macro caused the panic.\r\n\r\nI ran into this problem because my tests are in a separate directory, and use the code they tests as a crate.\r\n\r\nPossibly this is just unsupported feature / known limit in macro system, reporting because I wasn't sure.\r\n\r\n[Git repository][1] for the example below.\r\n\r\n`tests/tests.rs`\r\n\r\n    extern crate test_macro;\r\n    #[test]\r\n    fn main() {\r\n        let file: Vec<u8> = Vec::new();\r\n        test_macro::decode_main(&*file).unwrap();\r\n    }\r\n\r\n\r\n`src/lib.rs`\r\n\r\n    use ::std::io;\r\n\r\n    macro_rules! read_exact {\r\n        ($f:expr, $r:expr) => {\r\n            io::Read::read_exact($f, $r).unwrap()\r\n        }\r\n    }\r\n\r\n    fn decode_blocks<R: io::Read>(mut file: R) -> Result<(), io::Error> {\r\n        let mut bhead: [u8; 320] = [0; 320];\r\n        read_exact!(&mut file, &mut bhead);  // <-- this line isn't in the backtrace\r\n        Ok(())\r\n    }\r\n\r\n    pub fn decode_main<R: io::Read>(mut file: R) -> Result<(), io::Error> {\r\n        decode_blocks(file)?;\r\n        Ok(())\r\n    }\r\n\r\n\r\nCalling:\r\n\r\n    RUST_BACKTRACE=1 cargo test\r\n\r\nGives the backtrace:\r\n\r\n                            at /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libcore/result.rs:737\r\n      11:     0x562061ffd7da - test_macro::decode_blocks::h391253710f990761\r\n                            at /src/test_macro/src/lib.rs:5\r\n      12:     0x562061ffd5ca - test_macro::decode_main::h43b3b33b47640ea4\r\n                            at /src/test_macro/src/lib.rs:16\r\n      13:     0x562061fff1ad - tests::main::hc17f25ef21544d0b\r\n                            at /src/test_macro/tests/tests.rs:5\r\n      14:     0x56206200d54e - <F as test::FnBox<T>>::call_box::h04563d623b7ebdf9\r\n\r\nNotice line 11 isn't included.\r\n\r\n----\r\n\r\nUsing Rust stable 1.15.\r\n\r\n\r\n  [1]: https://gitlab.com/ideasman42/test_42277783_report/tree/master\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39894/timeline", "performed_via_github_app": null, "state_reason": null}