{"url": "https://api.github.com/repos/rust-lang/rust/issues/83704", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83704/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83704/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83704/events", "html_url": "https://github.com/rust-lang/rust/issues/83704", "id": 846758259, "node_id": "MDU6SXNzdWU4NDY3NTgyNTk=", "number": 83704, "title": "ICE on Rust 1.51 with min const generics and Deref<Target=[T; N]>", "user": {"login": "jgallagher", "id": 1435635, "node_id": "MDQ6VXNlcjE0MzU2MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1435635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgallagher", "html_url": "https://github.com/jgallagher", "followers_url": "https://api.github.com/users/jgallagher/followers", "following_url": "https://api.github.com/users/jgallagher/following{/other_user}", "gists_url": "https://api.github.com/users/jgallagher/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgallagher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgallagher/subscriptions", "organizations_url": "https://api.github.com/users/jgallagher/orgs", "repos_url": "https://api.github.com/users/jgallagher/repos", "events_url": "https://api.github.com/users/jgallagher/events{/privacy}", "received_events_url": "https://api.github.com/users/jgallagher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-31T14:19:35Z", "updated_at": "2022-01-18T09:58:47Z", "closed_at": "2022-01-18T09:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nHi! I ran into an ICE experimenting with a wrapper that would hold a `Vec`'s length. I've tried to minimize it and made it this far:\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::ops::Deref;\r\n\r\nstruct VecWrapper<T, const N: usize>(Vec<T>);\r\n\r\nimpl<T, const N: usize> VecWrapper<T, N> {\r\n    pub fn new() -> Self {\r\n        todo!()\r\n    }\r\n}\r\n\r\nimpl<T, const N: usize> Deref for VecWrapper<T, N> {\r\n    type Target = [T; N];\r\n\r\n    fn deref(&self) -> &Self::Target {\r\n        todo!()\r\n    }\r\n}\r\n\r\nfn foo() -> VecWrapper<i32, 10> {\r\n    let tv = VecWrapper::new();\r\n    let _ = tv.len(); // required to trigger ICE?\r\n    tv\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n1.51, beta, and nightly all ICE for me:\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0 (2fd73fabe 2021-03-23)\r\nbinary: rustc\r\ncommit-hash: 2fd73fabe469357a12c2c974c140f67e7cdd76d0\r\ncommit-date: 2021-03-23\r\nhost: x86_64-apple-darwin\r\nrelease: 1.51.0\r\nLLVM version: 11.0.1\r\n```\r\n\r\n`rustup run beta rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-beta.2 (4f27db695 2021-03-26)\r\nbinary: rustc\r\ncommit-hash: 4f27db6956dbd50bb3ce92a73e344d1d02bb1a63\r\ncommit-date: 2021-03-26\r\nhost: x86_64-apple-darwin\r\nrelease: 1.52.0-beta.2\r\nLLVM version: 12.0.0\r\n```\r\n\r\n`rustup run nightly rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (07e0e2ec2 2021-03-24)\r\nbinary: rustc\r\ncommit-hash: 07e0e2ec268c140e607e1ac7f49f145612d0f597\r\ncommit-date: 2021-03-24\r\nhost: x86_64-apple-darwin\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'index out of bounds: the len is 9 but the index is 13', /Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.51.0 (2fd73fabe 2021-03-23) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `foo`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\nerror: could not compile `reproduce-ice`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'index out of bounds: the len is 9 but the index is 13', /Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: core::panicking::panic_bounds_check\r\n   3: rustc_infer::infer::type_variable::TypeVariableTable::probe\r\n   4: rustc_infer::infer::type_variable::TypeVariableTable::replace_if_possible\r\n   5: <rustc_infer::infer::sub::Sub as rustc_middle::ty::relate::TypeRelation>::tys\r\n   6: rustc_middle::ty::relate::super_relate_tys\r\n   7: rustc_infer::infer::combine::<impl rustc_infer::infer::InferCtxt>::super_combine_tys\r\n   8: <rustc_infer::infer::sub::Sub as rustc_middle::ty::relate::TypeRelation>::tys\r\n   9: rustc_middle::ty::relate::super_relate_tys\r\n  10: rustc_infer::infer::combine::<impl rustc_infer::infer::InferCtxt>::super_combine_tys\r\n  11: <rustc_infer::infer::sub::Sub as rustc_middle::ty::relate::TypeRelation>::tys\r\n  12: rustc_infer::infer::at::At::sub_exp\r\n  13: rustc_typeck::check::method::confirm::ConfirmContext::confirm\r\n  14: rustc_typeck::check::method::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_method\r\n  15: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  16: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  17: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_coercable_to_type\r\n  18: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_decl_local\r\n  19: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  20: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  21: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  22: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  23: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  24: rustc_typeck::check::check::check_fn\r\n  25: rustc_infer::infer::InferCtxtBuilder::enter\r\n  26: rustc_typeck::check::typeck\r\n  27: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck>::compute\r\n  28: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  29: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  30: rustc_data_structures::stack::ensure_sufficient_stack\r\n  31: rustc_query_system::query::plumbing::force_query_with_job\r\n  32: rustc_query_system::query::plumbing::get_query_impl\r\n  33: rustc_query_system::query::plumbing::ensure_query_impl\r\n  34: rustc_typeck::check::typeck_item_bodies\r\n  35: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::typeck_item_bodies>::compute\r\n  36: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  37: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  38: rustc_data_structures::stack::ensure_sufficient_stack\r\n  39: rustc_query_system::query::plumbing::force_query_with_job\r\n  40: rustc_query_system::query::plumbing::get_query_impl\r\n  41: rustc_typeck::check_crate\r\n  42: rustc_interface::passes::analysis\r\n  43: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  44: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  45: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  46: rustc_data_structures::stack::ensure_sufficient_stack\r\n  47: rustc_query_system::query::plumbing::force_query_with_job\r\n  48: rustc_query_system::query::plumbing::get_query_impl\r\n  49: rustc_interface::passes::QueryContext::enter\r\n  50: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  51: rustc_span::with_source_map\r\n  52: rustc_interface::interface::create_compiler_and_run\r\n  53: rustc_span::with_session_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83704/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83704/timeline", "performed_via_github_app": null, "state_reason": "completed"}