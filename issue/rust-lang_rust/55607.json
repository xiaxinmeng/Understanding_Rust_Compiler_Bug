{"url": "https://api.github.com/repos/rust-lang/rust/issues/55607", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55607/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55607/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55607/events", "html_url": "https://github.com/rust-lang/rust/issues/55607", "id": 376680713, "node_id": "MDU6SXNzdWUzNzY2ODA3MTM=", "number": 55607, "title": "Tracking issue for unsafe operations in const fn", "user": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 89436934, "node_id": "MDU6TGFiZWw4OTQzNjkzNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-RFC-approved", "name": "B-RFC-approved", "color": "d304cb", "default": false, "description": "Approved by a merged RFC but not yet implemented."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 268744493, "node_id": "MDU6TGFiZWwyNjg3NDQ0OTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-fn", "name": "A-const-fn", "color": "f7e101", "default": false, "description": "Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2018-11-02T06:03:54Z", "updated_at": "2018-12-24T10:04:34Z", "closed_at": "2018-12-24T10:04:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a tracking issue for the RFC *\"Const functions and inherent methods\"* (rust-lang/rfcs#911).\r\n\r\nThis issue only tracks a subset of the proposal in 911 that we are (hopefully) comfortable with stabilizing. To opt into the minimal subset, use `#![feature(min_const_unsafe_fn)]`. To use the more expansive feature set, you can continue using `#![feature(const_fn)]` and other associated feature gates.\r\n\r\nCurrently, while you can write `unsafe {}` inside a `const fn` / `unsafe const fn`, it is not possible to actually possible to call any unsafe operations inside the block. This makes it impossible to implement safe `const fn` abstractions such as `Vec::new`. This issue builds upon https://github.com/rust-lang/rust/issues/53555 by allowing you to use `unsafe` operations inside `const fn` so that we can make more abstractions `const fn`.\r\n\r\n**Exhaustive list of features supported in `const fn` with `#![feature(min_const_unsafe_fn)]`:**\r\n\r\n0. Constructing types (e.g. `NonZero`) with `#[rustc_layout_scalar_valid_range_start]` becomes `unsafe`. This is an internal bug-fix that has no user facing consequences. A motivation is given in https://github.com/rust-lang/rust/issues/55607#issuecomment-435574626 and in https://github.com/rust-lang/rust/issues/55607#issuecomment-435579016.\r\n1. Calling `const unsafe fn` functions inside `const fn` functions inside an `unsafe { ... }` block.\r\n2. Calling `const unsafe fn` functions inside `const unsafe fn` functions. \r\n\r\n**Non-exhaustive lists of things that don't become allowed with `#![feature(min_const_unsafe_fn)]`:**\r\n\r\n3. ~Calling `const unsafe fn` functions directly inside other `const unsafe fn` functions.\r\n    For example:~\r\n\r\n    ```rust\r\n    const unsafe fn foo() {}\r\n    const unsafe fn foo() {\r\n        bar(); // <-- ERROR! You must write `unsafe { bar(); }`.\r\n    }\r\n    ```\r\n\r\n    ~We impose this restriction because @RalfJung has noted that this is not a good thing in `unsafe fn` and `fn`. Thus, for now, we want to avoid making the situation worse in `const unsafe fn`. We can lift the restriction later if we want to.~\r\n\r\n    EDIT: This restriction has been removed.\r\n\r\n4. Calling `ptr::read`, `mem::transmute` or other functions that can't be written as `const unsafe fn` in user code (see discussion below...).\r\n\r\n5. Defererencing raw pointers; Tracked in https://github.com/rust-lang/rust/issues/51911.\r\n\r\n6. Union field accesses; Tracked in https://github.com/rust-lang/rust/issues/51909.\r\n\r\n7. Casting raw pointers to integers\r\n\r\n8. Taking references to fields of packed structs\r\n\r\n9. accessing `extern static`s\r\n\r\n**Things to be done before stabilizing:**\r\n\r\n- [x] Implement the `min_const_unsafe_fn` feature gate. (https://github.com/rust-lang/rust/pull/55635)\r\n- [x] Ensure that the above restrictions apply.\r\n- [x] Adjust documentation ([see instructions on forge][doc-guide])\r\n- [x] Stabilization PR ([see instructions on forge][stabilization-guide])\r\n\r\n[stabilization-guide]: https://forge.rust-lang.org/stabilization-guide.html\r\n[doc-guide]: https://forge.rust-lang.org/stabilization-guide.html#updating-documentation\r\n\r\n**Unresolved questions:**\r\n\r\nNone.\r\n\r\n**Vocabulary:**\r\n\r\n[CTFE]: https://en.wikipedia.org/wiki/Compile_time_function_execution\r\n[promoted]: https://github.com/rust-lang/rfcs/blob/master/text/1414-rvalue_static_promotion.md\r\n\r\n+ [CTFE]\r\n+ [promoted]\r\n+ [rvalue promotion][promoted]\r\n--------------------------------\r\n\r\ncc https://github.com/rust-lang/rust/issues/24111.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55607/timeline", "performed_via_github_app": null, "state_reason": "completed"}