{"url": "https://api.github.com/repos/rust-lang/rust/issues/60558", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60558/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60558/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60558/events", "html_url": "https://github.com/rust-lang/rust/issues/60558", "id": 440436989, "node_id": "MDU6SXNzdWU0NDA0MzY5ODk=", "number": 60558, "title": "Document that CString::new sheds unused capacity from the buffer it's given", "user": {"login": "Minoru", "id": 118875, "node_id": "MDQ6VXNlcjExODg3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/118875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Minoru", "html_url": "https://github.com/Minoru", "followers_url": "https://api.github.com/users/Minoru/followers", "following_url": "https://api.github.com/users/Minoru/following{/other_user}", "gists_url": "https://api.github.com/users/Minoru/gists{/gist_id}", "starred_url": "https://api.github.com/users/Minoru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Minoru/subscriptions", "organizations_url": "https://api.github.com/users/Minoru/orgs", "repos_url": "https://api.github.com/users/Minoru/repos", "events_url": "https://api.github.com/users/Minoru/events{/privacy}", "received_events_url": "https://api.github.com/users/Minoru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 45472092, "node_id": "MDU6TGFiZWw0NTQ3MjA5Mg==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-ffi", "name": "A-ffi", "color": "f7e101", "default": false, "description": "Area: Foreign Function Interface (FFI)"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-05T12:04:29Z", "updated_at": "2021-03-10T20:19:07Z", "closed_at": "2021-03-10T20:19:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to use `std::ffi::CString` as an output buffer for `libc::snprintf` like this ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=53a40ccb1a0f475e019b44895feac8fa)):\r\n\r\n```rust\r\nfn obtain_answer() -> Option<String> {\r\n    let format = \"The answer ... is: %llu\";\r\n\r\n    const BUF_SIZE: usize = 1024;\r\n    let buffer = Vec::<u8>::with_capacity(BUF_SIZE);\r\n    unsafe {\r\n        CString::new(buffer).ok().and_then(|buffer| {\r\n            CString::new(format).ok().and_then(|format| {\r\n                let buffer_ptr = buffer.into_raw();\r\n                libc::snprintf(\r\n                    buffer_ptr,\r\n                    BUF_SIZE as libc::size_t,\r\n                    format.as_ptr() as *const libc::c_char,\r\n                    std::u64::MAX,\r\n                );\r\n                let buffer = CString::from_raw(buffer_ptr);\r\n                buffer.into_string().ok()\r\n            })\r\n        })\r\n    }\r\n}\r\n```\r\n\r\nI thought I'm creating a buffer of 1024 bytes, but in reality, `CString::new` appends a null byte and calls `Vec::into_boxed_slice` on my Vec, shrinking it to 1 byte. This leads to memory corruption, since I pass `snprintf` a pointer to a one-byte buffer but tell it there are 1024 bytes available.\r\n\r\nI'm a bit unsure if `CString` is even a good choice here, but if it is, I think `CString`'s docs should be more explicit on what happens to the buffer. I suggest adding a comment to `CString::new` doc saying the same as `Vec::into_boxed_slice`: \"Note that this will drop any excess capacity\".", "closed_by": {"login": "Minoru", "id": 118875, "node_id": "MDQ6VXNlcjExODg3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/118875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Minoru", "html_url": "https://github.com/Minoru", "followers_url": "https://api.github.com/users/Minoru/followers", "following_url": "https://api.github.com/users/Minoru/following{/other_user}", "gists_url": "https://api.github.com/users/Minoru/gists{/gist_id}", "starred_url": "https://api.github.com/users/Minoru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Minoru/subscriptions", "organizations_url": "https://api.github.com/users/Minoru/orgs", "repos_url": "https://api.github.com/users/Minoru/repos", "events_url": "https://api.github.com/users/Minoru/events{/privacy}", "received_events_url": "https://api.github.com/users/Minoru/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60558/timeline", "performed_via_github_app": null, "state_reason": "completed"}