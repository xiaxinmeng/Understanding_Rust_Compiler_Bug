{"url": "https://api.github.com/repos/rust-lang/rust/issues/90539", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90539/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90539/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90539/events", "html_url": "https://github.com/rust-lang/rust/issues/90539", "id": 1043950955, "node_id": "I_kwDOAAsO6M4-OW1r", "number": 90539, "title": "Using dylib as dependency without -Cprefer-dynamic doesn't work", "user": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-11-03T18:41:32Z", "updated_at": "2022-12-31T16:51:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this:\r\n\r\n```\r\n//- a.rs\r\npub fn foo() {}\r\n\r\n//- b.rs\r\nextern crate a;\r\nfn main() {\r\n    a::foo();\r\n}\r\n```\r\n\r\n```\r\n$ rustc a.rs --crate-type dylib\r\n$ rustc b.rs --crate-type bin --extern a\r\n```\r\n\r\nI expected to see this happen: It compiles and `b` dynamically links to `liba.so` which itself statically links to libstd.\r\n\r\nInstead, this happened:\r\n\r\n<details>\r\n\r\n```\r\nerror: cannot satisfy dependencies so `std` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `core` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `compiler_builtins` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `rustc_std_workspace_core` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `alloc` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `libc` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `unwind` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `cfg_if` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `hashbrown` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `rustc_std_workspace_alloc` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `rustc_demangle` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `std_detect` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `addr2line` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `gimli` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `object` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `memchr` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: cannot satisfy dependencies so `panic_unwind` only shows up once\r\n  |\r\n  = help: having upstream crates all available in one format will likely make this go away\r\n\r\nerror: aborting due to 17 previous errors\r\n```\r\n\r\n</details>\r\n\r\nMaking it work currently requires passing `-Cprefer-dynamic` when compiling `liba.so`.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.56.0 (09c42c458 2021-10-18)\r\nbinary: rustc\r\ncommit-hash: 09c42c45858d5f3aedfa670698275303a3d19afa\r\ncommit-date: 2021-10-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0\r\nLLVM version: 13.0.0\r\n```\r\n\r\nThis seems to have been the reason for a new test in https://github.com/rust-lang/rust/pull/89836 failing.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90539/timeline", "performed_via_github_app": null, "state_reason": null}