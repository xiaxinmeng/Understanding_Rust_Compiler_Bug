{"url": "https://api.github.com/repos/rust-lang/rust/issues/64784", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64784/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64784/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64784/events", "html_url": "https://github.com/rust-lang/rust/issues/64784", "id": 498537906, "node_id": "MDU6SXNzdWU0OTg1Mzc5MDY=", "number": 64784, "title": "Declarative macros can create infinite glob import cycles", "user": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 632573348, "node_id": "MDU6TGFiZWw2MzI1NzMzNDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros-2.0", "name": "A-macros-2.0", "color": "f7e101", "default": false, "description": "Area: declarative macros 2.0, https://github.com/rust-lang/rust/issues/39412"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1578491841, "node_id": "MDU6TGFiZWwxNTc4NDkxODQx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-decl_macro", "name": "F-decl_macro", "color": "f9c0cc", "default": false, "description": "`#![feature(decl_macro)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-25T21:40:59Z", "updated_at": "2023-04-05T17:43:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code results in `A` being cyclicly glob imported from `x` into `y` and back with a different identifier (it gains a new mark on each import).\r\n\r\n```rust\r\n#![feature(decl_macro)]\r\n\r\npub macro m($i:ident, $j:ident) {\r\n    mod $i {\r\n        pub use crate::$j::*;\r\n        pub struct A;\r\n    }\r\n}\r\n\r\nm!(x, y);\r\nm!(y, x);\r\n```\r\n\r\n<details>\r\n\r\n<summary>Backtrace</summary>\r\n\r\n```text\r\nthread 'rustc' panicked at 'already borrowed: BorrowMutError', src/libcore/result.rs:1165:5\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:76\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:60\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1030\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1412\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:64\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:196\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:210\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:477\r\n  12: std::panicking::continue_panic_fmt\r\n             at src/libstd/panicking.rs:380\r\n  13: rust_begin_unwind\r\n             at src/libstd/panicking.rs:307\r\n  14: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  15: core::result::unwrap_failed\r\n             at src/libcore/result.rs:1165\r\n  16: rustc_resolve::resolve_imports::<impl rustc_resolve::Resolver>::try_define\r\n  17: rustc_resolve::resolve_imports::<impl rustc_resolve::Resolver>::try_define\r\n  18: rustc_resolve::resolve_imports::<impl rustc_resolve::Resolver>::try_define\r\n  19: rustc_resolve::resolve_imports::ImportResolver::resolve_imports\r\n  20: rustc_resolve::macros::<impl syntax::ext::base::Resolver for rustc_resolve::Resolver>::resolve_imports\r\n  21: syntax::ext::expand::MacroExpander::fully_expand_fragment\r\n  22: syntax::ext::expand::MacroExpander::expand_crate\r\n  23: rustc_interface::passes::configure_and_expand_inner::{{closure}}\r\n  24: rustc::util::common::time\r\n  25: rustc_interface::passes::configure_and_expand_inner\r\n  26: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  27: rustc_data_structures::box_region::PinnedGenerator<I,A,R>::new\r\n  28: rustc_interface::passes::configure_and_expand\r\n  29: rustc_interface::queries::Query<T>::compute\r\n  30: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::expansion\r\n  31: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  32: std::thread::local::LocalKey<T>::with\r\n  33: scoped_tls::ScopedKey<T>::set\r\n  34: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.39.0-nightly (6ef275e6c 2019-09-24) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n```\r\n\r\n<details>", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64784/timeline", "performed_via_github_app": null, "state_reason": null}