{"url": "https://api.github.com/repos/rust-lang/rust/issues/57933", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/57933/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/57933/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/57933/events", "html_url": "https://github.com/rust-lang/rust/issues/57933", "id": 403573203, "node_id": "MDU6SXNzdWU0MDM1NzMyMDM=", "number": 57933, "title": "The scope of associated existential types", "user": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-01-27T17:12:35Z", "updated_at": "2019-01-28T23:16:42Z", "closed_at": "2019-01-28T23:16:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following snippet ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=e7d86eaec6df7fcbd54b709cd4dc3104)):\r\n\r\n```rust\r\n#![feature(existential_type)]\r\n\r\ntrait A { type B; }\r\n\r\nmod enclosing {\r\n    struct C;\r\n    \r\n    impl crate::A for C { existential type B: Copy; }\r\n    \r\n    pub fn make() -> <C as crate::A>::B {\r\n        42u8 // This is a defining use.\r\n    }\r\n}\r\n```\r\n\r\nIt seems that rustc considers the scope of seeing the underlying type to be `impl crate::A for C` and not `enclosing`:\r\n\r\n```rust\r\nerror: could not find defining uses\r\n --> src/lib.rs:8:27\r\n  |\r\n8 |     impl crate::A for C { existential type B: Copy; }\r\n  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\nThe RFC states that:\r\n\r\n> Each existential type declaration must be constrained by at least one function body or const/static initializer. A body or initializer must either fully constrain or place no constraints upon a given existential type.\r\n\r\n> Existential types are similar to normal type aliases, except that their concrete type is determined from the scope in which they are defined (usually a module or a trait impl).\r\n\r\nThe latter quote suggests that the behavior seen above may be correct.\r\nHowever, in a comment, the RFC also states:\r\n> ```rust\r\n> impl Iterator for MyStruct {\r\n>     // Here we can declare an associated type whose concrete type is hidden\r\n>     // to other modules.\r\n>     //\r\n>     // External users only know that `Item` implements the `Debug` trait.\r\n>     existential type Item: Debug;\r\n>\r\n>    ...\r\n> }\r\n> ```\r\n\r\nThis suggests (note the word *module*) that the current implementation is wrong and that the snippet should be allowed.\r\n\r\nSo which behavior is correct? And why? cc @cramertj @nikomatsakis @alexreg \r\n\r\nAs a final note, currently, the user has a recourse in writing:\r\n```rust\r\n#![feature(existential_type)]\r\n\r\ntrait A { type B; }\r\n\r\nmod enclosing {\r\n    struct C;\r\n\r\n    existential type B: Copy;\r\n\r\n    impl crate::A for C { type B = B; }\r\n    \r\n    pub fn make() -> B {\r\n        42u8\r\n    }\r\n}\r\n```", "closed_by": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/57933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/57933/timeline", "performed_via_github_app": null, "state_reason": "completed"}