{"url": "https://api.github.com/repos/rust-lang/rust/issues/43014", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43014/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43014/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43014/events", "html_url": "https://github.com/rust-lang/rust/issues/43014", "id": 240003867, "node_id": "MDU6SXNzdWUyNDAwMDM4Njc=", "number": 43014, "title": "Thread guard panics with release optimizations", "user": {"login": "m-schier", "id": 23127402, "node_id": "MDQ6VXNlcjIzMTI3NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/23127402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-schier", "html_url": "https://github.com/m-schier", "followers_url": "https://api.github.com/users/m-schier/followers", "following_url": "https://api.github.com/users/m-schier/following{/other_user}", "gists_url": "https://api.github.com/users/m-schier/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-schier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-schier/subscriptions", "organizations_url": "https://api.github.com/users/m-schier/orgs", "repos_url": "https://api.github.com/users/m-schier/repos", "events_url": "https://api.github.com/users/m-schier/events{/privacy}", "received_events_url": "https://api.github.com/users/m-schier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-02T11:09:23Z", "updated_at": "2017-07-02T11:52:56Z", "closed_at": "2017-07-02T11:52:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Optimization of function with empty loop causes panic when setting up thread guard for main thread\r\n\r\nI tried this code:\r\n\r\nIn a new cargo (0.19.0) crate I replace `main.rs` with the following code and run `cargo run --release`:\r\n\r\n    fn wait() {\r\n        loop {}\r\n    }\r\n\r\n    fn main() {\r\n        wait();\r\n        println!(\"Hello, world!\");\r\n    }\r\n\r\nI expected to see this happen:\r\n\r\n- Either the program does not terminate if the function call is not optimized away or\r\n- The program immediately prints and terminates\r\n\r\nInstead, this happened:\r\n\r\n`lang_start` panics while settings up the guard for the main thread.\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\nrustc 1.18.0 (03fc9d622 2017-06-06)\r\nbinary: rustc\r\ncommit-hash: 03fc9d622e0ea26a3d37f5ab030737fcca6928b9\r\ncommit-date: 2017-06-06\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.18.0\r\nLLVM version: 3.9\r\n\r\nBacktrace:\r\nthread 'main' panicked at 'assertion failed: c.borrow().is_none()', /checkout/src/libstd/sys_common/thread_info.rs:51\r\nstack backtrace:\r\n   0: std::sys:: imp ::backtrace::tracing:: imp ::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49 (Added spacing to remove emojis for imp)\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:355\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:371\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:549\r\n   5: std::panicking::begin_panic\r\n             at /checkout/src/libstd/panicking.rs:511\r\n   6: std::sys_common::thread_info::set\r\n             at /checkout/src/libstd/sys_common/thread_info.rs:51\r\n             at /checkout/src/libstd/thread/local.rs:253\r\n             at /checkout/src/libstd/sys_common/thread_info.rs:51\r\n   7: std::rt::lang_start\r\n             at /checkout/src/libstd/rt.rs:51\r\n   8: __rust_maybe_catch_panic\r\n             at /checkout/src/libpanic_unwind/lib.rs:98\r\n   9: std::rt::lang_start\r\n             at /checkout/src/libstd/panicking.rs:433\r\n             at /checkout/src/libstd/panic.rs:361\r\n             at /checkout/src/libstd/rt.rs:57\r\n  10: __libc_start_main\r\n  11: _start", "closed_by": {"login": "m-schier", "id": 23127402, "node_id": "MDQ6VXNlcjIzMTI3NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/23127402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-schier", "html_url": "https://github.com/m-schier", "followers_url": "https://api.github.com/users/m-schier/followers", "following_url": "https://api.github.com/users/m-schier/following{/other_user}", "gists_url": "https://api.github.com/users/m-schier/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-schier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-schier/subscriptions", "organizations_url": "https://api.github.com/users/m-schier/orgs", "repos_url": "https://api.github.com/users/m-schier/repos", "events_url": "https://api.github.com/users/m-schier/events{/privacy}", "received_events_url": "https://api.github.com/users/m-schier/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43014/timeline", "performed_via_github_app": null, "state_reason": "completed"}