{"url": "https://api.github.com/repos/rust-lang/rust/issues/69000", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69000/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69000/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69000/events", "html_url": "https://github.com/rust-lang/rust/issues/69000", "id": 562191760, "node_id": "MDU6SXNzdWU1NjIxOTE3NjA=", "number": 69000, "title": "Suggest how to workaround E0212", "user": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-09T15:16:50Z", "updated_at": "2020-02-13T08:12:02Z", "closed_at": "2020-02-13T08:12:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It is not impossible for one to end up with a code that looks like this:\r\n\r\n```rust\r\ntrait Banana<'a> { \r\n    type Assoc: Default;\r\n}\r\n\r\nstruct Peach<X>(std::marker::PhantomData<X>);\r\n\r\nimpl<X: for<'a> Banana<'a>> Peach<X> {\r\n    fn mango(&self) -> X::Assoc {\r\n        Default::default()\r\n    }\r\n}\r\n```\r\n\r\nBut fairly unintuitively the compiler rejects this code:\r\n\r\n```\r\nerror[E0212]: cannot extract an associated type from a higher-ranked trait bound in this context\r\n --> src/lib.rs:8:24\r\n  |\r\n8 |     fn mango(&self) -> X::Assoc {\r\n  |                        ^^^^^^^^\r\n```\r\n\r\nThis can be made to work by specifying the lifetime for the associated type:\r\n\r\n```rust\r\ntrait Banana<'a> { \r\n    type Assoc: Default;\r\n}\r\n\r\nstruct Peach<X>(std::marker::PhantomData<X>);\r\n\r\nimpl<X: for<'a> Banana<'a>> Peach<X> {\r\n    fn mango(&self) -> <X as Banana<'_>>::Assoc {\r\n        Default::default()\r\n    }\r\n}\r\n```\r\n\r\nBut it is fairly not obvious how to get there. We should suggest a similar transformation in the diagnostic.\r\n\r\ncc @estebank ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69000/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69000/timeline", "performed_via_github_app": null, "state_reason": "completed"}