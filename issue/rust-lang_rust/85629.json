{"url": "https://api.github.com/repos/rust-lang/rust/issues/85629", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/85629/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/85629/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/85629/events", "html_url": "https://github.com/rust-lang/rust/issues/85629", "id": 899560455, "node_id": "MDU6SXNzdWU4OTk1NjA0NTU=", "number": 85629, "title": "Segfault in llvm codegen when compiling for target aarch64-unknown-none-softfloat", "user": {"login": "nipzu", "id": 28843181, "node_id": "MDQ6VXNlcjI4ODQzMTgx", "avatar_url": "https://avatars.githubusercontent.com/u/28843181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nipzu", "html_url": "https://github.com/nipzu", "followers_url": "https://api.github.com/users/nipzu/followers", "following_url": "https://api.github.com/users/nipzu/following{/other_user}", "gists_url": "https://api.github.com/users/nipzu/gists{/gist_id}", "starred_url": "https://api.github.com/users/nipzu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nipzu/subscriptions", "organizations_url": "https://api.github.com/users/nipzu/orgs", "repos_url": "https://api.github.com/users/nipzu/repos", "events_url": "https://api.github.com/users/nipzu/events{/privacy}", "received_events_url": "https://api.github.com/users/nipzu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-05-24T11:09:11Z", "updated_at": "2021-10-11T13:22:38Z", "closed_at": "2021-10-11T13:22:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n-->\r\n\r\nRustc triggers a segmentation fault when compiling the following code. I have tested this on both linux and windows with the latest nightly compiler. It is not possible to compile `core` in debug mode for `aarch64-unknown-none-softfloat` because of this bug. Luckily, release mode works for both `core` and the following example.\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(lang_items)]\r\n#![feature(no_core)]\r\n#![no_core]\r\n\r\n#[lang = \"sized\"]\r\ntrait Sized {}\r\n\r\n// #[no_mangle]\r\n// #[allow(unconditional_recursion)]\r\npub fn foo() -> bool {\r\n    foo()\r\n}\r\n```\r\n<details><summary><strong>Another offending example that doesn't use recursion:</strong></summary><p>\r\n\r\n```Rust\r\n#![feature(lang_items)]\r\n#![feature(no_core)]\r\n#![no_core]\r\n\r\n#[lang = \"sized\"]\r\ntrait Sized {}\r\n\r\npub fn foo() -> bool {\r\n    bar()\r\n}\r\n\r\nfn bar() -> bool {\r\n    loop {}\r\n}\r\n```\r\n</p></details>\r\n\r\n### Error output\r\n\r\n```\r\n~/D/P/segfault> rustc lib.rs --edition=2018 --crate-type lib --target aarch64-unknown-none-softfloat\r\nfish: Job 1, 'rustc lib.rs --edition=2018 --c\u2026' terminated by signal SIGSEGV (Address boundary error)\r\n~/D/P/segfault [SIGSEGV]>\r\n```\r\n\r\n### Critical features in `target-spec`\r\n\r\n`rustc --print target-spec-json -Z unstable-options --target aarch64-unknown-none-softfloat > aarch64-sf.json`\r\n<details><summary>\r\n<strong>aarch64-sf.json</strong>\r\n</summary>\r\n<p>\r\n\r\n```\r\n{\r\n  \"arch\": \"aarch64\",\r\n  \"data-layout\": \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\",\r\n  \"disable-redzone\": true,\r\n  \"executables\": true,\r\n  \"features\": \"+strict-align,-neon,-fp-armv8\",\r\n  \"is-builtin\": true,\r\n  \"linker\": \"rust-lld\",\r\n  \"linker-flavor\": \"ld.lld\",\r\n  \"llvm-target\": \"aarch64-unknown-none\",\r\n  \"max-atomic-width\": 128,\r\n  \"panic-strategy\": \"abort\",\r\n  \"relocation-model\": \"static\",\r\n  \"target-pointer-width\": \"64\",\r\n  \"unsupported-abis\": [\r\n    \"stdcall\",\r\n    \"stdcall-unwind\",\r\n    \"fastcall\",\r\n    \"vectorcall\",\r\n    \"thiscall\",\r\n    \"thiscall-unwind\",\r\n    \"win64\",\r\n    \"sysv64\"\r\n  ]\r\n}\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nI tried extracting the target spec and running with \r\n`rustc lib.rs --edition=2018 --crate-type lib --target aarch64-sf.json`.\r\n\r\nThe critical line is `\"features\": \"+strict-align,-neon,-fp-armv8\",`. Setting both `+neon` and `+fp-armv8` makes the segfault disappear. Those two features are the only difference between `aarch64-unknown-none-softfloat` and `aarch64-unknown-none`.\r\n\r\n### llvm-ir\r\nWith `#[no_mange]`, the llvm-ir I get is\r\n`rustc lib.rs --edition=2018 --crate-type lib --target aarch64-unknown-none-softfloat --emit=llvm-ir` :\r\n```\r\n; ModuleID = 'lib.3a1fbbbh-cgu.0'\r\nsource_filename = \"lib.3a1fbbbh-cgu.0\"\r\ntarget datalayout = \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\"\r\ntarget triple = \"aarch64-unknown-none\"\r\n\r\n; Function Attrs: noredzone nounwind\r\ndefine dso_local zeroext i1 @foo() unnamed_addr #0 {\r\nstart:\r\n  %0 = call zeroext i1 @foo()\r\n  br label %bb1\r\n\r\nbb1:                                              ; preds = %start\r\n  ret i1 %0\r\n}\r\n\r\nattributes #0 = { noredzone nounwind \"target-cpu\"=\"generic\" }\r\n```\r\n\r\nChanging the return type of `foo` from `bool` to `u8` makes the code compile fine. The only difference in llvm-ir is that the return type is changed from `zeroext i1` to `i8`\r\n\r\n<details><summary>\r\n<strong>llvm-ir with `u8` return type</strong>\r\n</summary>\r\n\r\n```\r\n; ModuleID = 'lib.3a1fbbbh-cgu.0'\r\nsource_filename = \"lib.3a1fbbbh-cgu.0\"\r\ntarget datalayout = \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\"\r\ntarget triple = \"aarch64-unknown-none\"\r\n\r\n; Function Attrs: noredzone nounwind\r\ndefine dso_local i8 @foo() unnamed_addr #0 {\r\nstart:\r\n  %0 = call i8 @foo()\r\n  br label %bb1\r\n\r\nbb1:                                              ; preds = %start\r\n  ret i8 %0\r\n}\r\n\r\nattributes #0 = { noredzone nounwind \"target-cpu\"=\"generic\" }\r\n```\r\n</details>\r\n\r\n### Backtrace\r\n\r\n<details><summary>\r\nRunning `gdb` gives the following backtrace:\r\n</summary>\r\n<p>\r\n\r\n```\r\n#0  0x00007ffff1a874e6 in llvm::LegalizerInfo::findAction(std::vector<std::pair<unsigned short, llvm::LegalizeActions::LegalizeAction>, std::allocator<std::pair<unsigned short, llvm::LegalizeActions::LegalizeAction> > > const&, unsigned int) ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#1  0x00007ffff1a85aca in llvm::LegalizerInfo::findScalarLegalAction(llvm::InstrAspect const&) const ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#2  0x00007ffff1a85f41 in llvm::LegalizerInfo::getAction(llvm::LegalityQuery const&) const ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#3  0x00007ffff1a86373 in llvm::LegalizerInfo::getAction(llvm::MachineInstr const&, llvm::MachineRegisterInfo const&) const ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#4  0x00007ffff1a513d4 in llvm::LegalizerHelper::legalizeInstrStep(llvm::MachineInstr&) ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#5  0x00007ffff1a4a25f in llvm::Legalizer::legalizeMachineFunction(llvm::MachineFunction&, llvm::LegalizerInfo const&, llvm::ArrayRef<llvm::GISelChangeObserver*>, llvm::LostDebugLocObserver&, llvm::MachineIRBuilder&) ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#6  0x00007ffff1a4da24 in llvm::Legalizer::runOnMachineFunction(llvm::MachineFunction&) ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#7  0x00007ffff13f05fe in llvm::MachineFunctionPass::runOnFunction(llvm::Function&) ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#8  0x00007ffff11ae759 in llvm::FPPassManager::runOnFunction(llvm::Function&) ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#9  0x00007ffff11b55a3 in llvm::FPPassManager::runOnModule(llvm::Module&) ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#10 0x00007ffff11aefc0 in llvm::legacy::PassManagerImpl::run(llvm::Module&) ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/../lib/libLLVM-12-rust-1.54.0-nightly.so\r\n#11 0x00007ffff674e4c8 in LLVMRustWriteOutputFile ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/librustc_driver-e924046ea34a2c7b.so\r\n#12 0x00007ffff674317f in rustc_codegen_llvm::back::write::write_output_file ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/librustc_driver-e924046ea34a2c7b.so\r\n#13 0x00007ffff674628c in rustc_codegen_llvm::back::write::codegen ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/librustc_driver-e924046ea34a2c7b.so\r\n#14 0x00007ffff66d8b3b in rustc_codegen_ssa::back::write::finish_intra_module_work ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/librustc_driver-e924046ea34a2c7b.so\r\n#15 0x00007ffff66d1d6a in rustc_codegen_ssa::back::write::execute_work_item ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/librustc_driver-e924046ea34a2c7b.so\r\n#16 0x00007ffff672e6cc in std::sys_common::backtrace::__rust_begin_short_backtrace ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/librustc_driver-e924046ea34a2c7b.so\r\n#17 0x00007ffff673c76c in core::ops::function::FnOnce::call_once{{vtable.shim}} ()\r\n    $HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/../lib/librustc_driver-e924046ea34a2c7b.so\r\n#18 0x00007ffff43a2b37 in alloc::boxed::{{impl}}::call_once<(),FnOnce<()>,alloc::alloc::Global> ()\r\n    at /rustc/f64503eb555475d65ae5503ef22439ca5dd394fd/library/alloc/src/boxed.rs:1575\r\n#19 alloc::boxed::{{impl}}::call_once<(),alloc::boxed::Box<FnOnce<()>, alloc::alloc::Global>,alloc::alloc::Global> ()\r\n    at /rustc/f64503eb555475d65ae5503ef22439ca5dd394fd/library/alloc/src/boxed.rs:1575\r\n#20 std::sys::unix::thread::{{impl}}::new::thread_start () at library/std/src/sys/unix/thread.rs:71\r\n#21 0x00007ffff42cf299 in start_thread () from /usr/lib/libpthread.so.0\r\n#22 0x00007ffff41e6053 in clone () from /usr/lib/libc.so.6\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.54.0-nightly (f64503eb5 2021-05-23)\r\nbinary: rustc\r\ncommit-hash: f64503eb555475d65ae5503ef22439ca5dd394fd\r\ncommit-date: 2021-05-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.54.0-nightly\r\nLLVM version: 12.0.1\r\n```", "closed_by": {"login": "nipzu", "id": 28843181, "node_id": "MDQ6VXNlcjI4ODQzMTgx", "avatar_url": "https://avatars.githubusercontent.com/u/28843181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nipzu", "html_url": "https://github.com/nipzu", "followers_url": "https://api.github.com/users/nipzu/followers", "following_url": "https://api.github.com/users/nipzu/following{/other_user}", "gists_url": "https://api.github.com/users/nipzu/gists{/gist_id}", "starred_url": "https://api.github.com/users/nipzu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nipzu/subscriptions", "organizations_url": "https://api.github.com/users/nipzu/orgs", "repos_url": "https://api.github.com/users/nipzu/repos", "events_url": "https://api.github.com/users/nipzu/events{/privacy}", "received_events_url": "https://api.github.com/users/nipzu/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/85629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/85629/timeline", "performed_via_github_app": null, "state_reason": "completed"}