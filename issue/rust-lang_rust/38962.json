{"url": "https://api.github.com/repos/rust-lang/rust/issues/38962", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38962/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38962/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38962/events", "html_url": "https://github.com/rust-lang/rust/issues/38962", "id": 199885148, "node_id": "MDU6SXNzdWUxOTk4ODUxNDg=", "number": 38962, "title": "Using Cow with the Vec/slice ToOwned impl for creating a recursive type fails to typecheck due to overflow", "user": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-01-10T17:33:11Z", "updated_at": "2019-12-30T21:21:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See the following code\r\n\r\n````rust\r\nuse std::borrow::Cow;\r\n\r\n// Does not work either: #[derive(Clone)]\r\nenum Foo<'a> {\r\n    // Does not work:\r\n    Bar(Cow<'a, [Foo<'static>]>),\r\n    // Works: Bar(Vec<Foo<'a>>),\r\n    Baz(&'a str),\r\n}\r\n\r\nimpl<'a> Clone for Foo<'a> {\r\n    fn clone(&self) -> Self {\r\n        unimplemented!();\r\n    }\r\n}\r\n\r\nfn main() {}\r\n````\r\n\r\nThis currently fails to compile with\r\n````\r\nerror[E0275]: overflow evaluating the requirement `<[Foo<'a>] as std::borrow::ToOwned>::Owned`\r\n --> test.rs:5:9\r\n  |\r\n5 |     Bar(Cow<'a, [Foo<'a>]>),\r\n  |         ^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = note: required because it appears within the type `Foo<'a>`\r\n  = note: required because of the requirements on the impl of `std::borrow::ToOwned` for `[Foo<'a>]`\r\n  = note: required because it appears within the type `std::borrow::Cow<'a, [Foo<'a>]>`\r\n  = note: only the last field of a struct may have a dynamically sized type\r\n````\r\n\r\nHowever in the end the Cow here is just an enum that is either a &[Foo] or a Vec<Foo> (the ToOwned instance of [T] uses Vec<T> for the owned variant), both having a known size and thus this all should really work, or am I missing something?\r\n\r\nIs this a bug, a missing feature or can't this possibly work?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38962/timeline", "performed_via_github_app": null, "state_reason": null}