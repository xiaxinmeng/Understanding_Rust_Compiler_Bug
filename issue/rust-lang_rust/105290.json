{"url": "https://api.github.com/repos/rust-lang/rust/issues/105290", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105290/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105290/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105290/events", "html_url": "https://github.com/rust-lang/rust/issues/105290", "id": 1476084589, "node_id": "I_kwDOAAsO6M5X-0Nt", "number": 105290, "title": "thread 'rustc' panicked at '`Ok(impl std::future::Future<Output = ()>)` is not fully resolved', /rustc/53e4b9dd74c29cc9308b8d0f10facac70bb101a7\\compiler\\rustc_infer\\src\\infer\\mod.rs:1438:9", "user": {"login": "Rageking8", "id": 106309953, "node_id": "U_kgDOBlYpQQ", "avatar_url": "https://avatars.githubusercontent.com/u/106309953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rageking8", "html_url": "https://github.com/Rageking8", "followers_url": "https://api.github.com/users/Rageking8/followers", "following_url": "https://api.github.com/users/Rageking8/following{/other_user}", "gists_url": "https://api.github.com/users/Rageking8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rageking8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rageking8/subscriptions", "organizations_url": "https://api.github.com/users/Rageking8/orgs", "repos_url": "https://api.github.com/users/Rageking8/repos", "events_url": "https://api.github.com/users/Rageking8/events{/privacy}", "received_events_url": "https://api.github.com/users/Rageking8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-05T09:15:30Z", "updated_at": "2022-12-17T03:11:38Z", "closed_at": "2022-12-17T03:11:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(async_fn_in_trait)]\r\n#![allow(incomplete_features)]\r\n\r\ntrait MyTrait {\r\nasync fn bar(& abc self);\r\n}\r\n\r\nimpl MyTrait for () {\r\nasync fn bar(&self) {}\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nThe 'abc' can be changed to any keyword or any arbitrary identifier and the ICE still repros.\r\nFound by mutating #105154.\nSeemingly different ICE msg to the in the fixed issue.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0-nightly (53e4b9dd7 2022-12-04)\r\nbinary: rustc\r\ncommit-hash: 53e4b9dd74c29cc9308b8d0f10facac70bb101a7\r\ncommit-date: 2022-12-04\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.67.0-nightly\r\nLLVM version: 15.0.4\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: expected identifier, found keyword `self`\r\n\r\nerror: expected one of `:`, `@`, or `|`, found keyword `self`\r\n\r\nthread 'rustc' panicked at '`Ok(impl std::future::Future<Output = ()>)` is not fully resolved', /rustc/53e4b9dd74c29cc9308b8d0f10facac70bb101a7\\compiler\\rustc_infer\\src\\infer\\mod.rs:1438:9\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: expected identifier, found keyword `self`\r\n --> src\\main.rs:5:20\r\n  |\r\n5 | async fn bar(& abc self);\r\n  |                    ^^^^ expected identifier, found keyword\r\n\r\nerror: expected one of `:`, `@`, or `|`, found keyword `self`\r\n --> src\\main.rs:5:20\r\n  |\r\n5 | async fn bar(& abc self);\r\n  |              ------^^^^\r\n  |              |     |\r\n  |              |     expected one of `:`, `@`, or `|`\r\n  |              help: declare the type after the parameter binding: `<identifier>: <type>`\r\n\r\nthread 'rustc' panicked at '`Ok(impl std::future::Future<Output = ()>)` is not fully resolved', /rustc/53e4b9dd74c29cc9308b8d0f10facac70bb101a7\\compiler\\rustc_infer\\src\\infer\\mod.rs:1438:9\r\nstack backtrace:\r\n   0:     0x7ffd1a3d9e42 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h7e70883c575183bf\r\n   1:     0x7ffd1a41615b - core::fmt::write::h33a76bcc6f834c12\r\n   2:     0x7ffd1a3cca6a - <std::io::IoSliceMut as core::fmt::Debug>::fmt::he6739634bf80651d\r\n   3:     0x7ffd1a3d9b8b - std::sys::common::alloc::realloc_fallback::h79800d247b25f9cf\r\n   4:     0x7ffd1a3dd4b9 - std::panicking::default_hook::hf73f2b3eda2ba841\r\n   5:     0x7ffd1a3dd13b - std::panicking::default_hook::hf73f2b3eda2ba841\r\n   6:     0x7ffca213c72d - rustc_driver[6fdaf07c6b144b62]::describe_lints\r\n   7:     0x7ffd1a3dde20 - std::panicking::rust_panic_with_hook::h026ab977c6c77b06\r\n   8:     0x7ffd1a3ddb7e - <std::panicking::begin_panic_handler::StrPanicPayload as core::panic::BoxMeUp>::get::hb89c2f203710a373\r\n   9:     0x7ffd1a3dab3f - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h7e70883c575183bf\r\n  10:     0x7ffd1a3dd830 - rust_begin_unwind\r\n  11:     0x7ffd1a44bcc5 - core::panicking::panic_fmt::h66cd6f87b18e0169\r\n  12:     0x7ffca362695a - <core[d9f7351a480f3995]::option::Option<rustc_middle[d0f48cd9e4ec2207]::middle::privacy::Level> as rustc_privacy[46ed857b1c6903f4]::VisibilityLike>::new_min\r\n  13:     0x7ffca36555db - <rustc_hir_analysis[e14abbd9f0df36ca]::variance::terms::VarianceTerm as core[d9f7351a480f3995]::fmt::Debug>::fmt\r\n  14:     0x7ffca3cb40fd - <bool as rustc_mir_dataflow[d87990ffd791d352]::framework::lattice::MeetSemiLattice>::meet\r\n  15:     0x7ffca3def4bb - <&[rustc_span[395f7c3a127106b9]::symbol::Ident] as rustc_serialize[99e1dbb5522d458d]::serialize::Decodable<rustc_query_impl[2fbc64f93e3032cd]::on_disk_cache::CacheDecoder>>::decode\r\n  16:     0x7ffca3e3b172 - <&[rustc_span[395f7c3a127106b9]::symbol::Ident] as rustc_serialize[99e1dbb5522d458d]::serialize::Decodable<rustc_query_impl[2fbc64f93e3032cd]::on_disk_cache::CacheDecoder>>::decode\r\n  17:     0x7ffca3e81ac4 - <&[rustc_span[395f7c3a127106b9]::symbol::Ident] as rustc_serialize[99e1dbb5522d458d]::serialize::Decodable<rustc_query_impl[2fbc64f93e3032cd]::on_disk_cache::CacheDecoder>>::decode\r\n  18:     0x7ffca44e12f5 - <rustc_middle[d0f48cd9e4ec2207]::ty::context::TyCtxt>::bound_trait_impl_trait_tys\r\n  19:     0x7ffca1eadfc4 - rustc_trait_selection[a45ef6f2a47a2aca]::traits::project::normalize_projection_type\r\n  20:     0x7ffca1e9c741 - <rustc_trait_selection[a45ef6f2a47a2aca]::traits::project::AssocTypeNormalizer as rustc_middle[d0f48cd9e4ec2207]::ty::fold::TypeFolder>::fold_ty\r\n  21:     0x7ffca0079e1d - <rustc_hir_analysis[e14abbd9f0df36ca]::check::intrinsicck::InlineAsmCtxt>::check_asm\r\n  22:     0x7ffca13d1f69 - <dyn rustc_hir_analysis[e14abbd9f0df36ca]::astconv::AstConv>::ty_of_fn\r\n  23:     0x7ffca14441ce - <rustc_hir_analysis[e14abbd9f0df36ca]::collect::lifetimes::LifetimeContext as rustc_hir[f1f8b5f3b9fa0ead]::intravisit::Visitor>::visit_lifetime\r\n  24:     0x7ffca13decd0 - <dyn rustc_hir_analysis[e14abbd9f0df36ca]::astconv::AstConv>::ty_of_fn\r\n  25:     0x7ffca140507a - rustc_hir_analysis[e14abbd9f0df36ca]::check::check::check_abi\r\n  26:     0x7ffca140acbb - rustc_hir_analysis[e14abbd9f0df36ca]::check::check::check_abi\r\n  27:     0x7ffca0309a89 - <rustc_const_eval[cb9b3011c5bf7f16]::transform::check_consts::resolver::State as core[d9f7351a480f3995]::clone::Clone>::clone_from\r\n  28:     0x7ffca0393e75 - <&[(rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::ExportedSymbol, rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::SymbolExportInfo)] as rustc_serialize[99e1dbb5522d458d]::serialize::Decodable<rustc_query_impl[2fbc64f93e3032cd]::on_disk_cache::CacheDecoder>>::decode\r\n  29:     0x7ffca1b313fd - <rustc_span[395f7c3a127106b9]::symbol::Symbol as rustc_serialize[99e1dbb5522d458d]::serialize::Encodable<rustc_query_impl[2fbc64f93e3032cd]::on_disk_cache::CacheEncoder>>::encode\r\n  30:     0x7ffca04e4212 - <&[(rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::ExportedSymbol, rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::SymbolExportInfo)] as rustc_serialize[99e1dbb5522d458d]::serialize::Decodable<rustc_query_impl[2fbc64f93e3032cd]::on_disk_cache::CacheDecoder>>::decode\r\n  31:     0x7ffca0088ef0 - <rustc_hir_analysis[e14abbd9f0df36ca]::check::check::check_opaque_for_inheriting_lifetimes::ProhibitOpaqueVisitor as rustc_middle[d0f48cd9e4ec2207]::ty::visit::TypeVisitor>::visit_ty\r\n  32:     0x7ffca00567d8 - rustc_hir_analysis[e14abbd9f0df36ca]::check_crate\r\n  33:     0x7ffc9f927f65 - rustc_interface[9a86922769a86bfa]::passes::analysis\r\n  34:     0x7ffca030c45f - <rustc_const_eval[cb9b3011c5bf7f16]::transform::check_consts::resolver::State as core[d9f7351a480f3995]::clone::Clone>::clone_from\r\n  35:     0x7ffca03b2139 - <&[(rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::ExportedSymbol, rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::SymbolExportInfo)] as rustc_serialize[99e1dbb5522d458d]::serialize::Decodable<rustc_query_impl[2fbc64f93e3032cd]::on_disk_cache::CacheDecoder>>::decode\r\n  36:     0x7ffca0461c52 - <&[(rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::ExportedSymbol, rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::SymbolExportInfo)] as rustc_serialize[99e1dbb5522d458d]::serialize::Decodable<rustc_query_impl[2fbc64f93e3032cd]::on_disk_cache::CacheDecoder>>::decode\r\n  37:     0x7ffca04eaf3f - <&[(rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::ExportedSymbol, rustc_middle[d0f48cd9e4ec2207]::middle::exported_symbols::SymbolExportInfo)] as rustc_serialize[99e1dbb5522d458d]::serialize::Decodable<rustc_query_impl[2fbc64f93e3032cd]::on_disk_cache::CacheDecoder>>::decode\r\n  38:     0x7ffc9f8ebe44 - <unknown>\r\n  39:     0x7ffc9f8fcb96 - <rustc_middle[d0f48cd9e4ec2207]::ty::SymbolName as core[d9f7351a480f3995]::fmt::Display>::fmt\r\n  40:     0x7ffc9f8fbe98 - rustc_driver[6fdaf07c6b144b62]::args::arg_expand_all\r\n  41:     0x7ffc9f8ecdb9 - <unknown>\r\n  42:     0x7ffc9f8e3e9d - <unknown>\r\n  43:     0x7ffd1a3f01ac - std::sys::windows::thread::Thread::new::hc3d1b043254b2748\r\n  44:     0x7ffd9f2554e0 - BaseThreadInitThunk\r\n  45:     0x7ffda0be485b - RtlUserThreadStart\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.67.0-nightly (53e4b9dd7 2022-12-04) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [collect_trait_impl_trait_tys] comparing an impl and trait method signature, inferring any hidden `impl Trait` types in the process\r\n#1 [check_mod_item_types] checking item types in top-level module\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: could not compile `rust_test` due to 2 previous errors\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105290/timeline", "performed_via_github_app": null, "state_reason": "completed"}