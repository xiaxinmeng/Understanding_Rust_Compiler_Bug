{"url": "https://api.github.com/repos/rust-lang/rust/issues/48836", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48836/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48836/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48836/events", "html_url": "https://github.com/rust-lang/rust/issues/48836", "id": 303343996, "node_id": "MDU6SXNzdWUzMDMzNDM5OTY=", "number": 48836, "title": "Stabilize fixed-length slice patterns (excluding `..`)", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 219670472, "node_id": "MDU6TGFiZWwyMTk2NzA0NzI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/final-comment-period", "name": "final-comment-period", "color": "1e76d9", "default": false, "description": "In the final comment period and will be merged soon unless new substantive objections are raised."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-08T03:30:23Z", "updated_at": "2018-04-05T21:51:38Z", "closed_at": "2018-03-20T10:18:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a sub-issue of the larger tracking issue for slice patterns (https://github.com/rust-lang/rust/issues/23121). It specifically tracks the plans to stabilize **fixed-length slice patterns** -- that is, excluding the `..` operator (which is entangled with some syntactic questions). There is an implementation PR in https://github.com/rust-lang/rust/pull/48516.\r\n\r\n### Summary\r\n\r\nUsing this feature, a pattern like `[a, b, c]` can be used to **match against fixed-length arrays**:\r\n\r\n```rust\r\nlet arr = [1, 2, 3];\r\nlet [a, b, c] = arr; // where arr: [T;3]\r\nlet [a, ref b, c] = arr; // where arr: [T;3]\r\n```\r\n\r\nOne can also use such a pattern to [**match against slices**](https://play.rust-lang.org/?gist=7ddd151b5806439cf563f82963153d4f&version=nightly):\r\n\r\n```rust\r\nlet arr = &[1, 2];\r\nmatch arr {\r\n    [a, b, c] => { /* this arm will not apply */ }\r\n    [a, b] => { /* this arm will */ }\r\n    _ => { /* this wildcard is required, since we don't know length statically */\r\n}\r\n```\r\n\r\n### Notable points and tests\r\n\r\nHere are some of the things I think we should be testing. I didn't have time to find if we have all these tests, perhaps someone can help (cc @petrochenkov, @mikhail-m1 ?)\r\n\r\n- test showing irrefutable matches (`let [a, b] = `) applied to fixed-length to move things out\r\n- test showing irrefutable matches (`let [a, b] = `) applied to create reference\r\n- test showing attempt to move from a borrowed array or slice gives error\r\n    - [move-out-of-slice1.rs](https://github.com/rust-lang/rust/blob/5430c0c5c0fbdfb8e89358a187d2f9a8d4b796d4/src/test/compile-fail/move-out-of-slice-1.rs) sort of tests that, but for an oddly special case involving box patterns\r\n- test that wildcard is required when matching slice with fixed-length arrays\r\n- [`match-vec-fixed`](https://github.com/rust-lang/rust/blob/5430c0c5c0fbdfb8e89358a187d2f9a8d4b796d4/src/test/compile-fail/match-vec-fixed.rs) tests that we get warnings for two slice patterns of same length\r\n- other cases?\r\n\r\n### Things not stabilized\r\n\r\n- The main thing not stabilized is the ability to create a slice of unmatched items.", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48836/reactions", "total_count": 8, "+1": 0, "-1": 0, "laugh": 0, "hooray": 8, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48836/timeline", "performed_via_github_app": null, "state_reason": "completed"}