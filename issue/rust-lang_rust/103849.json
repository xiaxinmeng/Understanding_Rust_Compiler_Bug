{"url": "https://api.github.com/repos/rust-lang/rust/issues/103849", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/103849/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/103849/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/103849/events", "html_url": "https://github.com/rust-lang/rust/issues/103849", "id": 1432031404, "node_id": "I_kwDOAAsO6M5VWxCs", "number": 103849, "title": "Better error message for E0310", "user": {"login": "DanielSWolf", "id": 5963162, "node_id": "MDQ6VXNlcjU5NjMxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5963162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielSWolf", "html_url": "https://github.com/DanielSWolf", "followers_url": "https://api.github.com/users/DanielSWolf/followers", "following_url": "https://api.github.com/users/DanielSWolf/following{/other_user}", "gists_url": "https://api.github.com/users/DanielSWolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielSWolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielSWolf/subscriptions", "organizations_url": "https://api.github.com/users/DanielSWolf/orgs", "repos_url": "https://api.github.com/users/DanielSWolf/repos", "events_url": "https://api.github.com/users/DanielSWolf/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielSWolf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-11-01T20:14:40Z", "updated_at": "2023-03-12T15:36:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code ([Playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=9e9199cccd55eca356c1ffcfed010834)):\r\n\r\n```rust\r\nuse std::fmt::Display;\r\n\r\nfn foo<T: Display>(value: T) -> Box<dyn Display> {\r\n    let result: Box<dyn Display> = Box::new(value);\r\n    result\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0310]: the parameter type `T` may not live long enough\r\n --> src/lib.rs:4:36\r\n  |\r\n4 |     let result: Box<dyn Display> = Box::new(value);\r\n  |                                    ^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\r\n  |\r\nhelp: consider adding an explicit lifetime bound...\r\n  |\r\n3 | fn foo<T: Display + 'static>(value: T) -> Box<dyn Display> {\r\n  |\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0310]: if the parameter type `T` contains references, variables of this type may not live long enough\r\n --> src/lib.rs:4:36\r\n  |\r\n4 |     let result: Box<dyn Display> = Box::new(value);\r\n  |                                    ^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\r\n  |\r\nhelp: consider excluding types with non-static references by adding an explicit lifetime bound...\r\n  |\r\n3 | fn foo<T: Display + 'static>(value: T) -> Box<dyn Display> {\r\n  |\r\n```\r\n\r\n## Rationale for the change:\r\n\r\nI'm fairly new to Rust. When I first encountered this errors, there were three things about this message I didn't understand:\r\n\r\n**Do types have a lifetime?**\r\n\r\nThe error message states that \"the parameter type `T` may not live long enough\". In non-generic code, Rust's error messages talk about the lifetimes of concrete variables, not the lifetimes of types. My understanding is that there is that types themselves always exist and that there is no such thing as the lifetime of a type, only the lifetime of a variable *of* that type. So I guess \"the parameter type `T` may not live long enough\" is just shorthand for \"variables of type `T` may not live long enough\". The latter would have made the error message clearer to me.\r\n\r\n**How can `value` not live long enough?**\r\n\r\nThe only variable of type `T` is `value`. This variable is passed by value, not by reference, and thus moved. I just couldn't think of a scenario where this variable might not live long enough.\r\n\r\nThe answer, as I now realize, is that `T` may be a struct containing references, which in turn may have a limited lifetime. Given that this is the only problematic case, it would have helped me if the error message had explicitly mentioned it.\r\n\r\n**Must I really limit my function to arguments with static lifetime?**\r\n\r\nThe error message suggests adding the explicit lifetime bound `'static` to `T`. When I first came across this message, I didn't realize that \"static\" as a trait bound [has a different meaning](https://doc.rust-lang.org/rust-by-example/scope/lifetime/static_lifetime.html) to \"static\" as a reference lifetime. I assumed that adding the trait bound `'static` to `T` would allow only arguments with a static lifetime to be passed, making the function useless. This is not the case. It would have helped me if the suggestion had mentioned this in some way.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/103849/reactions", "total_count": 9, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/103849/timeline", "performed_via_github_app": null, "state_reason": null}