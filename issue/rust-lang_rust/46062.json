{"url": "https://api.github.com/repos/rust-lang/rust/issues/46062", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46062/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46062/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46062/events", "html_url": "https://github.com/rust-lang/rust/issues/46062", "id": 274905999, "node_id": "MDU6SXNzdWUyNzQ5MDU5OTk=", "number": 46062, "title": "Tracking issue for closure types that reference themselves", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630636017, "node_id": "MDU6TGFiZWw2MzA2MzYwMTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-future-compatibility", "name": "C-future-compatibility", "color": "f5f1fd", "default": false, "description": "Category: future compatibility lints"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-17T15:43:15Z", "updated_at": "2019-05-29T12:58:13Z", "closed_at": "2019-05-29T12:58:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue describes a bug fix regarding \"cyclic closures\". Specifically, we fixed a bug in rustc in which a closure type T was capable of directly invoking itself without going through a virtual call. This is not intended to be allowed: in order to keep closure inference tractable, closure types are intended to form a strict hierarchy with respect to one another, in terms of which other closures they can invoke.\r\n\r\n### What kind of code is affected\r\n\r\nIn fact, it is rather difficult to have a closure that directly invokes itself without going through a `Fn` object or a `fn` pointer type. It was however possible if you used an [\"fixed-point combinator\"] like this:\r\n\r\n[\"fixed-point combinator\"]: https://en.wikipedia.org/wiki/Fixed-point_combinator\r\n\r\n```rust\r\n#![feature(conservative_impl_trait)]\r\n\r\nfn fix<F>(f: F) -> impl Fn()\r\nwhere F: Fn(&F)\r\n{\r\n  move || f(&f)\r\n}\r\n\r\nfn main() {\r\n    let x = fix(|x| {\r\n      // in here, the closure has a shared reference to itself, `x`\r\n    });\r\n    x();\r\n}\r\n```\r\n\r\nThis hole has since been closed and the code above no longer compiles.\r\n\r\n### How can you fix it?\r\n\r\nThe easiest fix is to rewrite your closure into a top-level function, or into a method. In some cases, you may also be able to have your closure call itself by capturing a `&Fn()` object or `fn()` pointer that refers to itself. That is permitting, since the closure would be invoking itself via a virtual call, and hence does not directly reference its own *type*.\r\n\r\n### Why was there no warning period?\r\n\r\nThis bug was fixed was without a warning period, even though there is the potential that stable code was affected. This is not our normal practice. We chose in this case to take that action because:\r\n\r\n(a) it was quite difficult to arrange a comprehensive warning\r\n(b) crater run indicated no affected crates\r\n(c) this is a bug fix\r\n(d) we are able to direct users to this error message in the event of an error occurring\r\n\r\nIf however you were negatively affected, we very much apologize. We would like to hear about that. If for some reason you cannot update your code readily, we would consider backing out this change and re-applying it later after you've had some time to adapt, presuming the issue is found promptly enough for that to be practical.", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46062/reactions", "total_count": 4, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 2, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46062/timeline", "performed_via_github_app": null, "state_reason": "completed"}