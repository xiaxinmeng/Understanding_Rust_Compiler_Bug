{"url": "https://api.github.com/repos/rust-lang/rust/issues/78619", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78619/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78619/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78619/events", "html_url": "https://github.com/rust-lang/rust/issues/78619", "id": 733849105, "node_id": "MDU6SXNzdWU3MzM4NDkxMDU=", "number": 78619, "title": "Trivial documentation issue with `core::ops::Bit{And|Or|Xor}` ", "user": {"login": "gabhijit", "id": 387214, "node_id": "MDQ6VXNlcjM4NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/387214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabhijit", "html_url": "https://github.com/gabhijit", "followers_url": "https://api.github.com/users/gabhijit/followers", "following_url": "https://api.github.com/users/gabhijit/following{/other_user}", "gists_url": "https://api.github.com/users/gabhijit/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabhijit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabhijit/subscriptions", "organizations_url": "https://api.github.com/users/gabhijit/orgs", "repos_url": "https://api.github.com/users/gabhijit/repos", "events_url": "https://api.github.com/users/gabhijit/events{/privacy}", "received_events_url": "https://api.github.com/users/gabhijit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-11-01T02:24:01Z", "updated_at": "2020-11-02T13:06:58Z", "closed_at": "2020-11-02T13:06:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nThis is a documentation issue. \r\n\r\nIn the documentation for BitOps -> `BitOr`, `BitAnd` and `BitXor`, Following documentation should be changed to use Bitwise operators for Boolean operations and not the logical operations. \r\n\r\n```rust\r\n// For BitOr\r\n\r\nuse std::ops::BitOr;\r\n\r\n#[derive(Debug, PartialEq)]\r\nstruct BooleanVector(Vec<bool>);\r\n\r\nimpl BitOr for BooleanVector {\r\n    type Output = Self;\r\n\r\n    fn bitor(self, Self(rhs): Self) -> Self::Output {\r\n        let Self(lhs) = self;\r\n        assert_eq!(lhs.len(), rhs.len());\r\n        Self(lhs.iter().zip(rhs.iter()).map(|(x, y)| *x || *y).collect()) // <- Here we should use bit-wise or and not logical or \r\n    }\r\n}\r\n\r\nlet bv1 = BooleanVector(vec![true, true, false, false]);\r\nlet bv2 = BooleanVector(vec![true, false, true, false]);\r\nlet expected = BooleanVector(vec![true, true, true, false]);\r\nassert_eq!(bv1 | bv2, expected);\r\n\r\n```\r\n\r\nAlso, similar changes are required for Bitwise And and Bitwise Xor. Note: While the output is not wrong per se, it's actually a bit confusing since, those operators already exist for scalar versions of `bool`. \r\n\r\nThe changes for `BitXor` are more confusing \r\n\r\n```rust\r\n// <snip>\r\nimpl BitXor for BooleanVector {\r\n    type Output = Self;\r\n\r\n    fn bitxor(self, Self(rhs): Self) -> Self::Output {\r\n        let Self(lhs) = self;\r\n        assert_eq!(lhs.len(), rhs.len());\r\n        Self(lhs.iter()\r\n                .zip(rhs.iter())\r\n                .map(|(x, y)| (*x || *y) && !(*x && *y))\r\n                .collect())\r\n    }\r\n}\r\n\r\nlet bv1 = BooleanVector(vec![true, true, false, false]);\r\nlet bv2 = BooleanVector(vec![true, false, true, false]);\r\nlet expected = BooleanVector(vec![false, true, true, false]);\r\nassert_eq!(bv1 ^ bv2, expected);\r\n```\r\nWhere a simple bitwise xor above like ` .map(|(x, y)| (*x ^ *y))` should suffice.\r\n\r\nI have quickly verified these changes indeed work on playground using `nightly` and `stable`. \r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\nSince this is really a documentation issue, added for completeness.\r\n\r\n`rustc --version --verbose`:\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.47.0 (18bf6b4f0 2020-10-07)\r\nbinary: rustc\r\ncommit-hash: 18bf6b4f01a6feaf7259ba7cdae58031af1b7b39\r\ncommit-date: 2020-10-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.47.0\r\nLLVM version: 11.0\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78619/timeline", "performed_via_github_app": null, "state_reason": "completed"}