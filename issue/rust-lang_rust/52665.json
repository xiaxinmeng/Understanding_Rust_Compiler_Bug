{"url": "https://api.github.com/repos/rust-lang/rust/issues/52665", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/52665/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/52665/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/52665/events", "html_url": "https://github.com/rust-lang/rust/issues/52665", "id": 344079728, "node_id": "MDU6SXNzdWUzNDQwNzk3Mjg=", "number": 52665, "title": "Macro checks thwart `unreachable_pub` lint", "user": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 980999956, "node_id": "MDU6TGFiZWw5ODA5OTk5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-edition-2018-lints", "name": "A-edition-2018-lints", "color": "f7e101", "default": false, "description": "Area: lints supporting the 2018 edition"}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-24T15:06:04Z", "updated_at": "2019-01-07T17:18:46Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Recently we [landed a change](https://github.com/rust-lang/rust/pull/52467) which squashes all lints tied to foreign macros, but this can thwart lints like `unreachable_pub` in unusual fashions. The `unreachable_pub` lint can't be fixed unless *all* its warnings are fixed, which means the following examples fails to compile after being fixed:\r\n\r\n```rust\r\n// bar.rs\r\n#![crate_type = \"lib\"]\r\n\r\n#[macro_export]\r\nmacro_rules! a {\r\n    (pub static ref $name:ident : $t:ty = $val:expr) => (\r\n        pub struct $name { _wut: () }\r\n        pub static $name: $t = $val;\r\n    )\r\n}\r\n```\r\n\r\nand then \r\n\r\n```rust\r\n// foo.rs\r\n#![crate_type = \"lib\"]\r\n#![feature(rust_2018_preview)]\r\n#![warn(rust_2018_idioms)]\r\n\r\n#[macro_use]\r\n#[allow(macro_use_extern_crate)]\r\nextern crate bar;\r\n\r\nmod m1 {\r\n    pub struct Foo;\r\n}\r\n\r\nmod lookup {\r\n    use crate::m1::Foo;\r\n\r\n    a!(pub static ref F: Foo = Foo);\r\n}\r\n\r\npub fn f() {\r\n    drop(&lookup::F);\r\n}\r\n```\r\n\r\ncompiled with:\r\n\r\n```\r\n$ rustc +nightly bar.rs\r\n$ rustc +nightly foo.rs -L .\r\nwarning: unreachable `pub` item\r\n  --> foo.rs:10:5\r\n   |\r\n10 |     pub struct Foo;\r\n   |     ---^^^^^^^^^^^^\r\n   |     |\r\n   |     help: consider restricting its visibility: `crate`\r\n   |\r\nnote: lint level defined here\r\n  --> foo.rs:3:9\r\n   |\r\n3  | #![warn(rust_2018_idioms)]\r\n   |         ^^^^^^^^^^^^^^^^\r\n   = note: #[warn(unreachable_pub)] implied by #[warn(rust_2018_idioms)]\r\n   = help: or consider exporting it for use by other crates\r\n```\r\n\r\nbut the corrected code doesn't compile!\r\n\r\nThis is a reuced example where `a!` is `lazy_static!`, but I believe the issue here is that the lints behind the `lazy_static!` invocation are being ignored which means that `Foo` *is* actually fully public (because `F` is) and the lint is no longer applicable as a result.\r\n\r\ncc @Manishearth, @oli-obk ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/52665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/52665/timeline", "performed_via_github_app": null, "state_reason": null}