{"url": "https://api.github.com/repos/rust-lang/rust/issues/86948", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86948/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86948/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86948/events", "html_url": "https://github.com/rust-lang/rust/issues/86948", "id": 939063966, "node_id": "MDU6SXNzdWU5MzkwNjM5NjY=", "number": 86948, "title": "Parse error on labeled loop after break", "user": {"login": "LordHavelockVetinari", "id": 42384284, "node_id": "MDQ6VXNlcjQyMzg0Mjg0", "avatar_url": "https://avatars.githubusercontent.com/u/42384284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LordHavelockVetinari", "html_url": "https://github.com/LordHavelockVetinari", "followers_url": "https://api.github.com/users/LordHavelockVetinari/followers", "following_url": "https://api.github.com/users/LordHavelockVetinari/following{/other_user}", "gists_url": "https://api.github.com/users/LordHavelockVetinari/gists{/gist_id}", "starred_url": "https://api.github.com/users/LordHavelockVetinari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LordHavelockVetinari/subscriptions", "organizations_url": "https://api.github.com/users/LordHavelockVetinari/orgs", "repos_url": "https://api.github.com/users/LordHavelockVetinari/repos", "events_url": "https://api.github.com/users/LordHavelockVetinari/events{/privacy}", "received_events_url": "https://api.github.com/users/LordHavelockVetinari/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-07-07T16:28:42Z", "updated_at": "2021-08-04T09:58:14Z", "closed_at": "2021-08-04T09:58:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nWhile playing with labels in Rust, I noticed that labeled loops can be used as expressions, but aren't parsed correctly after ```break```:\r\n```rust\r\n// This is OK:\r\nlet a = 'first_loop: loop {\r\n    break 'first_loop 1;\r\n};\r\n// This isn't:\r\nlet b = loop {\r\n    // Note the colon after 'inner_loop.\r\n    break 'inner_loop: loop {\r\n        break 'inner_loop 1;\r\n    };\r\n};\r\n```\r\n\r\nOutput:\r\n```\r\nerror: expected identifier, found keyword `loop`\r\n --> src\\main.rs:9:28\r\n  |\r\n9 |         break 'inner_loop: loop {\r\n  |                            ^^^^ expected identifier, found keyword\r\n  |\r\nhelp: you can escape reserved keywords to use them as identifiers\r\n  |\r\n9 |         break 'inner_loop: r#loop {\r\n  |                            ^^^^^^\r\n\r\nerror: expected type, found keyword `loop`\r\n --> src\\main.rs:9:28\r\n  |\r\n9 |         break 'inner_loop: loop {\r\n  |                          - ^^^^ expected type\r\n  |                          |\r\n  |                          help: maybe write a path separator here: `::`\r\n\r\nerror: aborting due to 2 previous errors\r\n```\r\n\r\nThis only happens when the label comes immediately after ```break```, so this does compile:\r\n```rust\r\nloop {\r\n    break ('inner: loop {\r\n        break 'inner 1;\r\n    });\r\n};\r\nloop {\r\n    break 1 + 'inner: loop {\r\n        break 'inner 1;\r\n    };\r\n};\r\n'outer: loop {\r\n    break 'outer 'inner: loop {\r\n        break 'inner 1;\r\n    };\r\n};\r\n\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0 (53cb7b09b 2021-06-17)\r\nbinary: rustc\r\ncommit-hash: 53cb7b09b00cbea8754ffb78e7e3cb521cb8af4b\r\ncommit-date: 2021-06-17\r\nhost: x86_64-pc-windows-gnu\r\nrelease: 1.53.0\r\nLLVM version: 12.0.1\r\n```\r\n(The same thing happened on all the platforms and versions I have tried.)\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<!--<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>-->\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86948/timeline", "performed_via_github_app": null, "state_reason": "completed"}