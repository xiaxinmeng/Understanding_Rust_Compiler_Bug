{"url": "https://api.github.com/repos/rust-lang/rust/issues/96818", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/96818/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/96818/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/96818/events", "html_url": "https://github.com/rust-lang/rust/issues/96818", "id": 1228660573, "node_id": "I_kwDOAAsO6M5JO99d", "number": 96818, "title": "ICE with macro defining invalid enum that derives a trait", "user": {"login": "cdmistman", "id": 23486351, "node_id": "MDQ6VXNlcjIzNDg2MzUx", "avatar_url": "https://avatars.githubusercontent.com/u/23486351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdmistman", "html_url": "https://github.com/cdmistman", "followers_url": "https://api.github.com/users/cdmistman/followers", "following_url": "https://api.github.com/users/cdmistman/following{/other_user}", "gists_url": "https://api.github.com/users/cdmistman/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdmistman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdmistman/subscriptions", "organizations_url": "https://api.github.com/users/cdmistman/orgs", "repos_url": "https://api.github.com/users/cdmistman/repos", "events_url": "https://api.github.com/users/cdmistman/events{/privacy}", "received_events_url": "https://api.github.com/users/cdmistman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-05-07T15:55:49Z", "updated_at": "2022-09-20T21:56:54Z", "closed_at": "2022-09-20T21:56:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nmacro_rules! values {\r\n\t($($token:ident($value:literal) $(as $inner:ty)? => $attr:meta,)*) => {\r\n\t\t#[derive(Debug)]\r\n\t\tpub enum TokenKind {\r\n\t\t\t$(\r\n\t\t\t\t#[$attr]\r\n\t\t\t\t$token $($inner)? = $value,\r\n\t\t\t)*\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvalues!(STRING(1) as (String) => cfg(test),);\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0-nightly (4dd8b420c 2022-05-01)\r\nbinary: rustc\r\ncommit-hash: 4dd8b420c027001e47b0d811a7e55e2fe1de1395\r\ncommit-date: 2022-05-01\r\nhost: aarch64-apple-darwin\r\nrelease: 1.62.0-nightly\r\nLLVM version: 14.0.1\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n$ cargo check\r\n    Checking repro v0.1.0 (/blah/crates/repro)\r\nerror: expected one of `(`, `,`, `=`, `{`, or `}`, found `(String)`\r\n  --> crates/repro/src/lib.rs:7:14\r\n   |\r\n7  |                 $token $($inner)? = $value,\r\n   |                          ^^^^^^ expected one of `(`, `,`, `=`, `{`, or `}`\r\n...\r\n13 | tokens!(STRING(1) as (String) => cfg(test),);\r\n   | -------------------------------------------- in this macro invocation\r\n   |\r\n   = note: this error originates in the macro `tokens` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nerror: macro expansion ignores token `(String)` and any following\r\n  --> crates/repro/src/lib.rs:7:14\r\n   |\r\n7  |                 $token $($inner)? = $value,\r\n   |                          ^^^^^^\r\n...\r\n13 | tokens!(STRING(1) as (String) => cfg(test),);\r\n   | -------------------------------------------- caused by the macro expansion here\r\n   |\r\n   = note: the usage of `tokens!` is likely invalid in item context\r\n\r\nthread 'rustc' panicked at 'Stack should be empty: final_buf=FrameData { open_delim_sp: Some((Brace, crates/repro/src/lib.rs:4:22: 9:4 (#4))), inner: [(Token(Token { kind: Pound, span: crates/repro/src/lib.rs:6:5: 6:6 (#4) }), Alone), (Delimited(DelimSpan { open: crates/repro/src/lib.rs:6:6: 6:7 (#4), close: crates/repro/src/lib.rs:6:12: 6:13 (#4) }, Bracket, AttrAnnotatedTokenStream([(Token(Token { kind: Interpolated(NtMeta(..)), span: crates/repro/src/lib.rs:6:7: 6:12 (#4) }), Alone)])), Alone), (Token(Token { kind: Interpolated(NtIdent(..)), span: crates/repro/src/lib.rs:7:5: 7:11 (#4) }), Alone)] } stack=[FrameData { open_delim_sp: None, inner: [(Token(Token { kind: Ident(\"pub\", false), span: crates/repro/src/lib.rs:4:3: 4:6 (#4) }), Alone), (Token(Token { kind: Ident(\"enum\", false), span: crates/repro/src/lib.rs:4:7: 4:11 (#4) }), Alone), (Token(Token { kind: Ident(\"TokenKind\", false), span: crates/repro/src/lib.rs:4:12: 4:21 (#4) }), Alone)] }]', compiler/rustc_parse/src/parser/attr_wrapper.rs:500:5\r\nstack backtrace:\r\n   0:        0x1031cbe94 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h23e3041a952a3192\r\n   1:        0x10321d790 - core::fmt::write::hf7527de7ada02621\r\n   2:        0x1031beeb0 - std::io::Write::write_fmt::h11ac03f695ea0bfd\r\n   3:        0x1031ceb94 - std::panicking::default_hook::{{closure}}::hbc68a212d51bb096\r\n   4:        0x1031ce870 - std::panicking::default_hook::h8ba60dc6deb30472\r\n   5:        0x10a4c95e4 - rustc_driver[be97d6212fff1111]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n   6:        0x1031cf270 - std::panicking::rust_panic_with_hook::h9b549e34f7164858\r\n   7:        0x1031cf0c8 - std::panicking::begin_panic_handler::{{closure}}::h50e8103cafb0a3d6\r\n   8:        0x1031cc370 - std::sys_common::backtrace::__rust_end_short_backtrace::h7046937afbaad16d\r\n   9:        0x1031cee20 - _rust_begin_unwind\r\n  10:        0x10324bc88 - core::panicking::panic_fmt::h4ae2eb332ac288b3\r\n  11:        0x10db35250 - <rustc_parse[6f970b7ceb167d01]::parser::attr_wrapper::LazyTokenStreamImpl as rustc_ast[5b6630b34daf7a2]::tokenstream::CreateTokenStream>::create_token_stream\r\n  12:        0x10dadd228 - rustc_parse[6f970b7ceb167d01]::prepend_attrs\r\n  13:        0x10dadc900 - rustc_parse[6f970b7ceb167d01]::nt_to_tokenstream\r\n  14:        0x10c88fcc0 - rustc_builtin_macros[ce373b3deb6b848d]::cfg_eval::cfg_eval\r\n  15:        0x10c885804 - <rustc_builtin_macros[ce373b3deb6b848d]::derive::Expander as rustc_expand[3645db8203ef6e1d]::base::MultiItemModifier>::expand::{closure#0}\r\n  16:        0x10cb9f3e8 - <rustc_resolve[82457f197e93ce33]::Resolver as rustc_expand[3645db8203ef6e1d]::base::ResolverExpand>::resolve_derives\r\n  17:        0x10c8854b4 - <rustc_builtin_macros[ce373b3deb6b848d]::derive::Expander as rustc_expand[3645db8203ef6e1d]::base::MultiItemModifier>::expand\r\n  18:        0x10d993e2c - <rustc_expand[3645db8203ef6e1d]::expand::MacroExpander>::fully_expand_fragment\r\n  19:        0x10d991e04 - <rustc_expand[3645db8203ef6e1d]::expand::MacroExpander>::expand_crate\r\n  20:        0x10a5896e0 - <rustc_session[ae993a5043b66882]::session::Session>::time::<core[e4699273b2677591]::result::Result<rustc_ast[5b6630b34daf7a2]::ast::Crate, rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>, rustc_interface[4ab8c5333806be77]::passes::configure_and_expand::{closure#1}>\r\n  21:        0x10a584640 - rustc_interface[4ab8c5333806be77]::passes::configure_and_expand\r\n  22:        0x10a605040 - <rustc_interface[4ab8c5333806be77]::queries::Queries>::expansion\r\n  23:        0x10a475f48 - <rustc_interface[4ab8c5333806be77]::interface::Compiler>::enter::<rustc_driver[be97d6212fff1111]::run_compiler::{closure#1}::{closure#2}, core[e4699273b2677591]::result::Result<core[e4699273b2677591]::option::Option<rustc_interface[4ab8c5333806be77]::queries::Linker>, rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>>\r\n  24:        0x10a4ce578 - rustc_span[595034ce2e7fee82]::with_source_map::<core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>, rustc_interface[4ab8c5333806be77]::interface::create_compiler_and_run<core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>, rustc_driver[be97d6212fff1111]::run_compiler::{closure#1}>::{closure#1}>\r\n  25:        0x10a476634 - rustc_interface[4ab8c5333806be77]::interface::create_compiler_and_run::<core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>, rustc_driver[be97d6212fff1111]::run_compiler::{closure#1}>\r\n  26:        0x10a470b6c - <scoped_tls[8a4b2aa1592938bb]::ScopedKey<rustc_span[595034ce2e7fee82]::SessionGlobals>>::set::<rustc_interface[4ab8c5333806be77]::interface::run_compiler<core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>, rustc_driver[be97d6212fff1111]::run_compiler::{closure#1}>::{closure#0}, core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>>\r\n  27:        0x10a4bc8b4 - std[6fb83afb07978576]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[4ab8c5333806be77]::util::run_in_thread_pool_with_globals<rustc_interface[4ab8c5333806be77]::interface::run_compiler<core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>, rustc_driver[be97d6212fff1111]::run_compiler::{closure#1}>::{closure#0}, core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>>::{closure#0}, core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>>\r\n  28:        0x10a4961d0 - <<std[6fb83afb07978576]::thread::Builder>::spawn_unchecked_<rustc_interface[4ab8c5333806be77]::util::run_in_thread_pool_with_globals<rustc_interface[4ab8c5333806be77]::interface::run_compiler<core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>, rustc_driver[be97d6212fff1111]::run_compiler::{closure#1}>::{closure#0}, core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>>::{closure#0}, core[e4699273b2677591]::result::Result<(), rustc_errors[6fdaf2daf3d0fd37]::ErrorGuaranteed>>::{closure#1} as core[e4699273b2677591]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  29:        0x1031d7b40 - std::sys::unix::thread::Thread::new::thread_start::h4b803e136338a26a\r\n  30:        0x19718226c - __pthread_deallocate\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.62.0-nightly (4dd8b420c 2022-05-01) running on aarch64-apple-darwin\r\n\r\nnote: compiler flags: --crate-type lib -C embed-bitcode=no -C split-debuginfo=unpacked -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: could not compile `repro` due to 2 previous errors\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n$ RUST_BACKTRACE=1 cargo check\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: <rustc_parse::parser::attr_wrapper::LazyTokenStreamImpl as rustc_ast::tokenstream::CreateTokenStream>::create_token_stream\r\n   3: rustc_parse::prepend_attrs\r\n   4: rustc_parse::nt_to_tokenstream\r\n   5: rustc_builtin_macros::cfg_eval::cfg_eval\r\n   6: <rustc_builtin_macros::derive::Expander as rustc_expand::base::MultiItemModifier>::expand::{closure#0}\r\n   7: <rustc_resolve::Resolver as rustc_expand::base::ResolverExpand>::resolve_derives\r\n   8: <rustc_builtin_macros::derive::Expander as rustc_expand::base::MultiItemModifier>::expand\r\n   9: <rustc_expand::expand::MacroExpander>::fully_expand_fragment\r\n  10: <rustc_expand::expand::MacroExpander>::expand_crate\r\n  11: <rustc_session::session::Session>::time::<core::result::Result<rustc_ast::ast::Crate, rustc_errors::ErrorGuaranteed>, rustc_interface::passes::configure_and_expand::{closure#1}>\r\n  12: rustc_interface::passes::configure_and_expand\r\n  13: <rustc_interface::queries::Queries>::expansion\r\n  14: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  15: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  16: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n  17: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/96818/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/96818/timeline", "performed_via_github_app": null, "state_reason": "completed"}