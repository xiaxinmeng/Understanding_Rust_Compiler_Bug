{"url": "https://api.github.com/repos/rust-lang/rust/issues/70108", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70108/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70108/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70108/events", "html_url": "https://github.com/rust-lang/rust/issues/70108", "id": 583813054, "node_id": "MDU6SXNzdWU1ODM4MTMwNTQ=", "number": 70108, "title": "performance issue for musl binary built by rust", "user": {"login": "gmlove", "id": 2764186, "node_id": "MDQ6VXNlcjI3NjQxODY=", "avatar_url": "https://avatars.githubusercontent.com/u/2764186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmlove", "html_url": "https://github.com/gmlove", "followers_url": "https://api.github.com/users/gmlove/followers", "following_url": "https://api.github.com/users/gmlove/following{/other_user}", "gists_url": "https://api.github.com/users/gmlove/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmlove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmlove/subscriptions", "organizations_url": "https://api.github.com/users/gmlove/orgs", "repos_url": "https://api.github.com/users/gmlove/repos", "events_url": "https://api.github.com/users/gmlove/events{/privacy}", "received_events_url": "https://api.github.com/users/gmlove/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-18T15:31:15Z", "updated_at": "2022-12-19T01:25:43Z", "closed_at": "2020-03-18T15:41:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems there is performance issue for the built musl binary. To reproduce this, I created a simple crate as below:\r\n\r\n```rust\r\n// src/main.rs\r\nuse std::collections::HashMap;\r\nuse std::ops::Range;\r\nuse std::time::Instant;\r\n\r\nuse rayon::prelude::*;\r\nuse uuid;\r\n\r\nfn main() {\r\n    let mut map = HashMap::new();\r\n\r\n    for i in 0..1000000 {\r\n        map.insert(format!(\"{}-{}\", i, uuid::Uuid::new_v4()), i);\r\n    }\r\n\r\n    let start = Instant::now();\r\n    let mut sum = 0;\r\n    for i in 0..1000000 {\r\n        sum += *map.get(&format!(\"{}-{}\", i, uuid::Uuid::new_v4())).unwrap_or(&0);\r\n    }\r\n    println!(\"single thread sum with map.get: {}ms\", start.elapsed().as_millis());\r\n\r\n    let start = Instant::now();\r\n    let thread_num = 10usize;\r\n    let range: Vec<usize> = Range { start: 0usize, end: thread_num }.collect();\r\n    let sum: usize = range.into_par_iter().map(|_| {\r\n        let range: Vec<usize> = Range { start: 0, end: 1000000 / thread_num }.collect();\r\n        let sum: usize = range.iter().map(|i| {\r\n            *map.get(&format!(\"{}-{}\", i, uuid::Uuid::new_v4())).unwrap_or(&0)\r\n        }).sum();\r\n        sum\r\n    }).sum();\r\n\r\n    println!(\"multi thread sum with map.get: {}ms\", start.elapsed().as_millis());\r\n}\r\n```\r\n\r\n```toml\r\n# Cargo.toml\r\n[package]\r\nname = \"musl-perf\"\r\nversion = \"0.1.0\"\r\nauthors = [\"gmlove <gracekinglau@gmail.com>\"]\r\nedition = \"2018\"\r\n\r\n[dependencies]\r\nuuid = { version = \"0.8\", features = [\"serde\", \"v4\"] }\r\nrayon = \"1.1\"\r\n```\r\n\r\nIf I build the crate for target x86_64-unknown-linux-gnu, the program can get benefit from multi threading.\r\nThe output on my machine was(built by `cargo build --release` on my ubuntu os):\r\n```\r\nsingle thread sum with map.get: 251ms\r\nmulti thread sum with map.get: 87ms\r\n```\r\n\r\nBut for target x86_64-unknown-linux-musl, the performance under multi thread is even worse than single thread.\r\nThe output on my machine was (built by `cargo build --target x86_64-unknown-linux-musl --release`):\r\n```\r\nsingle thread sum with map.get: 316ms\r\nmulti thread sum with map.get: 1016ms\r\n```\r\n\r\nNot sure if it's musl itself is slow or has compatibility with rust.\r\nThe source code above is at: https://github.com/gmlove/experiments/blob/master/rust/musl-perf/src/main.rs\r\n\r\nWill be so grateful if someone could have a look at this one.\r\n\r\n\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70108/timeline", "performed_via_github_app": null, "state_reason": "completed"}