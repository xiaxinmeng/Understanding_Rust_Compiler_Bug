{"url": "https://api.github.com/repos/rust-lang/rust/issues/77846", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/77846/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/77846/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/77846/events", "html_url": "https://github.com/rust-lang/rust/issues/77846", "id": 719239516, "node_id": "MDU6SXNzdWU3MTkyMzk1MTY=", "number": 77846, "title": "ICE: src/librustc_middle/ty/subst.rs:568:17: const parameter `N/#0` (Const { ty: usize, val: Param(N/#0) }/0) out of range when substituting substs=[]", "user": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-10-12T09:51:42Z", "updated_at": "2020-10-12T10:01:26Z", "closed_at": "2020-10-12T10:01:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Code\r\n\r\n```Rust\r\nfn foo<const N: usize>() -> [(); N + 1] {\r\n    unimplemented!()\r\n}\r\n```\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=a2ca1d2ba3c49f2540baebfb8ac167a0\r\n\r\nSimilar to #75913 this ICE goes away when adding `#![feature(const_generics)]`.\r\n\r\n\r\n### Meta\r\n\r\nSame error on beta and nightly.\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0 (04488afe3 2020-08-24)\r\nbinary: rustc\r\ncommit-hash: 04488afe34512aa4c33566eb16d8c912a3ae04f9\r\ncommit-date: 2020-08-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0658]: const generics are unstable\r\n --> src/lib.rs:1:14\r\n  |\r\n1 | fn foo<const N: usize>() -> [(); N + 1] {\r\n  |              ^\r\n  |\r\n  = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\r\n  = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:568:17: const parameter `N/#0` (Const { ty: usize, val: Param(N/#0) }/0) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/c71248b70870960af9993de4f31d3cba9bbce7e8/compiler/rustc_errors/src/lib.rs:891:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0-nightly (c71248b70 2020-10-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: aborting due to 2 previous errors\r\n\r\nFor more information about this error, try `rustc --explain E0658`.\r\nerror: could not compile `playground`\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n\u276f RUST_BACKTRACE=1 rustc next2.rs                                                     Mon 12 Oct 2020 10:44:30 BST\r\nerror[E0658]: const generics are unstable\r\n --> next2.rs:1:14\r\n  |\r\n1 | fn foo<const N: usize>() -> [(); N + 1] {\r\n  |              ^\r\n  |\r\n  = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\r\n  = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\r\n\r\nerror[E0601]: `main` function not found in crate `next2`\r\n --> next2.rs:1:1\r\n  |\r\n1 | / fn foo<const N: usize>() -> [(); N + 1] {\r\n2 | |     unimplemented!()\r\n3 | | }\r\n  | |_^ consider adding a `main` function to `next2.rs`\r\n\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:568:17: const parameter `N/#0` (Const { ty: usize, val: Param(N/#0) }/0) out of range when substituting substs=[]\r\n\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/8b4085359ae798dedb05c95ad42520557bd25320/compiler/rustc_errors/src/lib.rs:891:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::span_bug\r\n   2: rustc_errors::Handler::span_bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::span_bug_fmt\r\n   8: <rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n   9: rustc_middle::ty::normalize_erasing_regions::<impl rustc_middle::ty::context::TyCtxt>::subst_and_normalize_erasing_regions\r\n  10: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_operand\r\n  11: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  12: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  13: rustc_mir::const_eval::eval_queries::eval_to_allocation_raw_provider\r\n  14: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_allocation_raw>::compute\r\n  15: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  16: rustc_data_structures::stack::ensure_sufficient_stack\r\n  17: rustc_query_system::query::plumbing::get_query_impl\r\n  18: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  19: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  20: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  21: rustc_data_structures::stack::ensure_sufficient_stack\r\n  22: rustc_query_system::query::plumbing::get_query_impl\r\n  23: rustc_mir::const_eval::eval_queries::eval_to_const_value_raw_provider\r\n  24: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::eval_to_const_value_raw>::compute\r\n  25: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  26: rustc_data_structures::stack::ensure_sufficient_stack\r\n  27: rustc_query_system::query::plumbing::get_query_impl\r\n  28: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_global_id\r\n  29: rustc_middle::mir::interpret::queries::<impl rustc_middle::ty::context::TyCtxt>::const_eval_resolve\r\n  30: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_const\r\n  31: rustc_middle::ty::structural_impls::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::TyS>::super_fold_with\r\n  32: <rustc_trait_selection::traits::project::AssocTypeNormalizer as rustc_middle::ty::fold::TypeFolder>::fold_ty\r\n  33: rustc_middle::ty::structural_impls::fold_list\r\n  34: rustc_trait_selection::traits::project::AssocTypeNormalizer::fold\r\n  35: rustc_trait_selection::traits::project::normalize\r\n  36: <rustc_infer::infer::InferCtxt as rustc_trait_selection::infer::InferCtxtExt>::partially_normalize_associated_types_in\r\n  37: rustc_typeck::check::inherited::Inherited::normalize_associated_types_in\r\n  38: rustc_infer::infer::InferCtxtBuilder::enter\r\n  39: rustc_typeck::check::wfcheck::check_item_fn\r\n  40: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  41: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_item_well_formed>::compute\r\n  42: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  43: rustc_data_structures::stack::ensure_sufficient_stack\r\n  44: rustc_query_system::query::plumbing::get_query_impl\r\n  45: rustc_query_system::query::plumbing::ensure_query_impl\r\n  46: rustc_data_structures::sync::par_for_each_in\r\n  47: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  48: rustc_typeck::check_crate\r\n  49: rustc_interface::passes::analysis\r\n  50: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  51: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  52: rustc_data_structures::stack::ensure_sufficient_stack\r\n  53: rustc_query_system::query::plumbing::get_query_impl\r\n  54: rustc_interface::passes::QueryContext::enter\r\n  55: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  56: rustc_span::with_source_map\r\n  57: rustc_interface::interface::create_compiler_and_run\r\n  58: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.48.0-nightly (8b4085359 2020-09-23) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [eval_to_allocation_raw] const-evaluating + checking `foo::{{constant}}#0`\r\n#1 [eval_to_const_value_raw] simplifying constant for the type system `foo::{{constant}}#0`\r\n#2 [eval_to_const_value_raw] simplifying constant for the type system `foo::{{constant}}#0`\r\n#3 [check_item_well_formed] checking that `foo` is well-formed\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to 3 previous errors\r\n\r\nSome errors have detailed explanations: E0601, E0658.\r\nFor more information about an error, try `rustc --explain E0601`.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/77846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/77846/timeline", "performed_via_github_app": null, "state_reason": "completed"}