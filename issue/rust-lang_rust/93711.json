{"url": "https://api.github.com/repos/rust-lang/rust/issues/93711", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93711/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93711/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93711/events", "html_url": "https://github.com/rust-lang/rust/issues/93711", "id": 1125291305, "node_id": "I_kwDOAAsO6M5DEpUp", "number": 93711, "title": "skip clone trait implementation", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-06T19:20:36Z", "updated_at": "2022-02-07T07:20:07Z", "closed_at": "2022-02-07T07:20:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Code\r\n\r\n```Rust\r\nfn main() {\r\n    struct Snapshot {\r\n        person: Person,\r\n        snapshot_name: String,\r\n    }\r\n\r\n   // #[derive(Clone)]  If you uncomment the string, it works\r\n    struct Person {\r\n        name: String,\r\n        surname: String,\r\n    }\r\n    impl Person {\r\n        fn create_snapshot(&self) -> Snapshot {\r\n            Snapshot {\r\n                person: Person {\r\n                    ..self.clone()\r\n                },\r\n                snapshot_name: \"Person snapshot\".to_owned()\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.58.1 (db9d1b20b 2022-01-20)\r\nbinary: rustc\r\ncommit-hash: db9d1b20bba1968c1ec1fc49616d4742c1725b4b\r\ncommit-date: 2022-01-20\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.58.1\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs:319:25: while adjusting Expr { hir_id: HirId { owner: DefId(0:47 ~ codeforces[f0ea]::main::{impl#0}::create_snapshot), local_id: 7 }, kind: Path(Resolved(None, Path { span: src/main.rs:60:23: 60:27 (#0), res: Local(HirId { owner: DefId(0:47 ~ codeforces[f0ea]::main::{impl#0}::create_snapshot), local_id: 2 }), segments: [PathSegment { ident: self#0, hir_id: Some(HirId { owner: DefId(0:47 ~ codeforces[f0ea]::main::{impl#0}::create_snapshot), local_id: 6 }), res: Some(Local(HirId { owner: DefId(0:47 ~ codeforces[f0ea]::main::{impl#0}::create_snapshot), local_id: 2 })), args: None, infer_args: true }] })), span: src/main.rs:60:23: 60:27 (#0) }, can't compose [Borrow(Ref('_#0r, Not)) -> &&Person] and [Borrow(Ref('_#4r, Not)) -> &&Person]\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1169:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug\r\n   3: <rustc_errors::Handler>::bug\r\n   4: rustc_middle::ty::context::tls::with_opt::<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_typeck::check::fn_ctxt::FnCtxt>::apply_adjustments\r\n   8: <rustc_typeck::check::method::confirm::ConfirmContext>::confirm\r\n   9: <rustc_typeck::check::fn_ctxt::FnCtxt>::lookup_method\r\n  10: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  11: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  12: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  13: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  14: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  15: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  16: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  17: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  18: <rustc_typeck::check::fn_ctxt::FnCtxt>::check_return_expr\r\n  19: rustc_typeck::check::check::check_fn\r\n  20: <rustc_infer::infer::InferCtxtBuilder>::enter::<&rustc_middle::ty::context::TypeckResults, <rustc_typeck::check::inherited::InheritedBuilder>::enter<rustc_typeck::check::typeck_with_fallback<rustc_typeck::check::typeck::{closure#0}>::{closure#1}, &rustc_middle::ty::context::TypeckResults>::{closure#0}>\r\n  21: rustc_typeck::check::typeck\r\n  22: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  23: rustc_data_structures::stack::ensure_sufficient_stack::<(&rustc_middle::ty::context::TypeckResults, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>::{closure#3}>\r\n  24: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  25: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  26: <rustc_middle::hir::map::Map>::par_body_owners::<rustc_typeck::check::typeck_item_bodies::{closure#0}>\r\n  27: rustc_typeck::check::typeck_item_bodies\r\n  28: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), ()>\r\n  29: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), ()>>\r\n  30: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  31: <rustc_session::session::Session>::time::<(), rustc_typeck::check_crate::{closure#7}>\r\n  32: rustc_typeck::check_crate\r\n  33: rustc_interface::passes::analysis\r\n  34: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>\r\n  35: rustc_data_structures::stack::ensure_sufficient_stack::<(core::result::Result<(), rustc_errors::ErrorReported>, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>::{closure#3}>\r\n  36: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  37: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  38: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorReported>>\r\n  39: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  40: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  41: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93711/timeline", "performed_via_github_app": null, "state_reason": "completed"}