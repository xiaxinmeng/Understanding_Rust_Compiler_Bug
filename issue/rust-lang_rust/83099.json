{"url": "https://api.github.com/repos/rust-lang/rust/issues/83099", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83099/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83099/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83099/events", "html_url": "https://github.com/rust-lang/rust/issues/83099", "id": 831020395, "node_id": "MDU6SXNzdWU4MzEwMjAzOTU=", "number": 83099, "title": "Tracking Issue for NOOP_METHOD_CALL lint", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 3537211959, "node_id": "LA_kwDOAAsO6M7S1ZI3", "url": "https://api.github.com/repos/rust-lang/rust/labels/S-tracking-impl-incomplete", "name": "S-tracking-impl-incomplete", "color": "4682b4", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-13T23:19:24Z", "updated_at": "2022-07-20T17:44:41Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nNOTE: For library features, please use the \"Library Tracking Issue\" template instead.\r\n\r\nThank you for creating a tracking issue! \ud83d\udcdc Tracking issues are for tracking a\r\nfeature from implementation to stabilisation. Make sure to include the relevant\r\nRFC for the feature if it has one. Otherwise provide a short summary of the\r\nfeature and link any relevant PRs or issues, and remove any sections that are\r\nnot relevant to the feature.\r\n\r\nRemember to add team labels to the tracking issue.\r\nFor a language team feature, this would e.g., be `T-lang`.\r\nSuch a feature should also be labeled with e.g., `F-my_feature`.\r\nThis label is used to associate issues (e.g., bugs and design questions) to the feature.\r\n-->\r\n\r\nThis is a tracking issue for the `NOOP_METHOD_CALL` lint (https://github.com/rust-lang/lang-team/issues/67)\r\n\r\n### About tracking issues\r\n\r\nTracking issues are used to record the overall progress of implementation.\r\nThey are also used as hubs connecting to other relevant issues, e.g., bugs or open design questions.\r\nA tracking issue is however *not* meant for large scale discussion, questions, or bug reports about a feature.\r\nInstead, open a dedicated issue for the specific matter and add the relevant feature gate label.\r\n\r\n### Steps\r\n<!--\r\nInclude each step required to complete the feature. Typically this is a PR\r\nimplementing a feature, followed by a PR that stabilises the feature. However\r\nfor larger features an implementation could be broken up into multiple PRs.\r\n-->\r\n\r\n- [x] Implement the initial version of the lint (https://github.com/rust-lang/rust/pull/80723)\r\n- [ ] Extend this to more complicated cases, like `ToOwned`\r\n- [ ] Make the lint warn-by-default\r\n\r\n### Known issues:\r\n\r\n- [ ] https://github.com/rust-lang/rust/issues/91536\r\n\r\n### Unresolved Questions\r\n<!--\r\nInclude any open questions that need to be answered before the feature can be\r\nstabilised.\r\n-->\r\n\r\n* Should we lint when a method is called via UFCS? This could be interpreted as the user explicitly choosing to call a no-op method.\r\n* Should we allow external crates to mark their own methods as being 'noop-ops', so that this lint can fire on third-party methods?\r\n\r\n### Implementation history\r\n\r\n* Initial version implemented in https://github.com/rust-lang/rust/pull/80723", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83099/timeline", "performed_via_github_app": null, "state_reason": null}