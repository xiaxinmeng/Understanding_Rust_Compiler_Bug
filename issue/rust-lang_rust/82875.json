{"url": "https://api.github.com/repos/rust-lang/rust/issues/82875", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82875/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82875/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82875/events", "html_url": "https://github.com/rust-lang/rust/issues/82875", "id": 824002087, "node_id": "MDU6SXNzdWU4MjQwMDIwODc=", "number": 82875, "title": "Invalid LLVM coverage data produced with crate brotli_decompressor", "user": {"login": "catenacyber", "id": 35799796, "node_id": "MDQ6VXNlcjM1Nzk5Nzk2", "avatar_url": "https://avatars.githubusercontent.com/u/35799796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catenacyber", "html_url": "https://github.com/catenacyber", "followers_url": "https://api.github.com/users/catenacyber/followers", "following_url": "https://api.github.com/users/catenacyber/following{/other_user}", "gists_url": "https://api.github.com/users/catenacyber/gists{/gist_id}", "starred_url": "https://api.github.com/users/catenacyber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catenacyber/subscriptions", "organizations_url": "https://api.github.com/users/catenacyber/orgs", "repos_url": "https://api.github.com/users/catenacyber/repos", "events_url": "https://api.github.com/users/catenacyber/events{/privacy}", "received_events_url": "https://api.github.com/users/catenacyber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2483744621, "node_id": "MDU6TGFiZWwyNDgzNzQ0NjIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-code-coverage", "name": "A-code-coverage", "color": "f7e101", "default": false, "description": "Area: Source-based code coverage (-Cinstrument-coverage)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-03-07T19:49:23Z", "updated_at": "2021-03-25T07:48:53Z", "closed_at": "2021-03-25T07:48:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nuse std::io;\r\nuse brotli_decompressor;\r\n\r\nfn main() {\r\n    match brotli_decompressor::BrotliDecompress(&mut io::stdin(), &mut io::stdout()) {\r\n        Ok(_) => {},\r\n        Err(e) => panic!(\"Error {:?}\", e),\r\n    }\r\n}\r\n```\r\n\r\ncompiled with `RUSTFLAGS=\"-Zinstrument-coverage\"`\r\nand Cargo.toml having\r\n```\r\n[dependencies]\r\nbrotli-decompressor = \"2.3.1\"\r\n```\r\n\r\nI expected to see this happen:\r\nRunning `echo 123 | ./target/debug/rustcov` then `llvm-profdata merge -j=1 -sparse`, then llvm-cov should give me a coverage report\r\n\r\nInstead, this happened: \r\nllvm-cov fails with `Failed to load coverage: Malformed instrumentation profile data\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.52.0-nightly (476acbf1e 2021-03-03)\r\nbinary: rustc\r\ncommit-hash: 476acbf1e9965b5e95c90f0d7d658709812b7003\r\ncommit-date: 2021-03-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.52.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n\r\nBacktrace\r\n\r\nThere is no backtrace here as the failure happens with llvm-cov\r\nI used the following clang\r\n```\r\nclang --version\r\nclang version 12.0.0 (https://github.com/llvm/llvm-project.git 4918a3d138b907a571f496661b5367e090e1e8bb)\r\n```\r\n\r\nUsing this patch in llvm\r\n```\r\ndiff --git a/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp b/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp\r\nindex 1acdcb4bebb9..b985ea11138d 100644\r\n--- a/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp\r\n+++ b/llvm/lib/ProfileData/Coverage/CoverageMappingReader.cpp\r\n@@ -544,8 +544,11 @@ class VersionedCovMapFuncRecordReader : public CovMapFuncRecordReader {\r\n       StringRef FuncName;\r\n       if (Error Err = CFR->template getFuncName<Endian>(ProfileNames, FuncName))\r\n         return Err;\r\n-      if (FuncName.empty())\r\n-        return make_error<InstrProfError>(instrprof_error::malformed);\r\n+      if (FuncName.empty()) {\r\n+       FuncName = \"ossfuzz_llvm_rust_coverage_warning\";\r\n+       printf(\"function with hash %lx has no name\", FuncHash);\r\n+        //return make_error<InstrProfError>(instrprof_error::eof);\r\n+      }\r\n       ++CovMapNumUsedRecords;\r\n       Records.emplace_back(Version, FuncName, FuncHash, Mapping,\r\n                            FileRange.StartingIndex, FileRange.Length);\r\n```\r\nI get more information with, as llvm-cov prints \r\n`function with hash 66eebda9c13062cc has no name`\r\n\r\ncc @richkadel\r\nMight end up as a duplicate of https://github.com/rust-lang/rust/issues/82144\r\nBut I do not see any optimization in cargo build -vv\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82875/timeline", "performed_via_github_app": null, "state_reason": "completed"}