{"url": "https://api.github.com/repos/rust-lang/rust/issues/43774", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43774/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43774/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43774/events", "html_url": "https://github.com/rust-lang/rust/issues/43774", "id": 249163178, "node_id": "MDU6SXNzdWUyNDkxNjMxNzg=", "number": 43774, "title": "error: internal compiler error: unexpected panic", "user": {"login": "IgnusG", "id": 6438760, "node_id": "MDQ6VXNlcjY0Mzg3NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6438760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IgnusG", "html_url": "https://github.com/IgnusG", "followers_url": "https://api.github.com/users/IgnusG/followers", "following_url": "https://api.github.com/users/IgnusG/following{/other_user}", "gists_url": "https://api.github.com/users/IgnusG/gists{/gist_id}", "starred_url": "https://api.github.com/users/IgnusG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IgnusG/subscriptions", "organizations_url": "https://api.github.com/users/IgnusG/orgs", "repos_url": "https://api.github.com/users/IgnusG/repos", "events_url": "https://api.github.com/users/IgnusG/events{/privacy}", "received_events_url": "https://api.github.com/users/IgnusG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-09T21:11:05Z", "updated_at": "2017-08-10T15:20:50Z", "closed_at": "2017-08-10T15:20:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I was messing around with iterators and created this horrific creature while struggling with shuffling around lifetimes and borrows:\r\n\r\n```rust\r\nfn prepare_async_listen<'a> (listener: &TcpListener) -> Result<impl Fn(&TcpListener) -> Result<Box<impl Iterator<Item=&TcpStream> + 'a>>> {\r\n    let poll = Poll::new()\r\n        .chain_err(|| \"couldn't create poll\")?;\r\n\r\n    poll.register(listener, Token(0), Ready::readable() | Ready::writable(), PollOpt::edge())\r\n        .chain_err(|| \"couldn't register listener on poll\")?;\r\n\r\n    Ok(move |listener: &TcpListener| {\r\n        let mut events = Events::with_capacity(1024);\r\n\r\n        poll.poll(&mut events, Some(Duration::from_millis(100)))\r\n            .chain_err(|| \"polling failed\")?;\r\n        Ok(Box::new(events.iter().map(|_| &listener.accept().unwrap().0)))\r\n    })\r\n}\r\n\r\nlet listener = TcpListener::bind(&socket)\r\n    .chain_err(|| \"listener couldn't bind socket\")?;\r\nlet async_listen = prepare_async_listen(&listener)?;\r\n\r\nwhile !should_die.get() {\r\n    trace_labeled_error!( format!(\"{} listener encountered a problem\", desc), {\r\n        for stream in async_listen(&listener)? {\r\n            tx.send(stream_type(stream))\r\n                .chain_err(|| \"sending stream to core channel failed\")?;\r\n        };\r\n    });\r\n};\r\n```\r\n\r\nThe compiler seemed so confused that it let me proceed with it and everything broke. This is the backtrace:\r\n\r\n```\r\nthread 'rustc' panicked at 'assertion failed: match *region { ty::ReLateBound(..) => false, _ => true, }', /checkout/src/librustc/infer/higher_ranked/mod.rs:493:8\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:380\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:390\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:611\r\n   5: std::panicking::begin_panic_new\r\n   6: rustc::infer::higher_ranked::fold_regions_in::{{closure}}\r\n   7: rustc::ty::fold::TypeFolder::fold_ty\r\n   8: rustc::infer::InferCtxt::match_poly_projection_predicate\r\n   9: rustc::traits::project::confirm_param_env_candidate\r\n  10: rustc::traits::project::confirm_candidate\r\n  11: rustc::traits::project::opt_normalize_projection_type\r\n  12: rustc::traits::project::normalize_projection_type\r\n  13: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  14: rustc::traits::project::opt_normalize_projection_type\r\n  15: rustc::traits::project::normalize_projection_type\r\n  16: <rustc::traits::project::AssociatedTypeNormalizer<'a, 'b, 'gcx, 'tcx> as rustc::ty::fold::TypeFolder<'gcx, 'tcx>>::fold_ty\r\n  17: rustc::traits::project::opt_normalize_projection_type\r\n  18: rustc::traits::project::poly_project_and_unify_type::{{closure}}\r\n  19: rustc::traits::project::poly_project_and_unify_type\r\n  20: <rustc::traits::fulfill::FulfillProcessor<'a, 'b, 'gcx, 'tcx> as rustc_data_structures::obligation_forest::ObligationProcessor>::process_obligation\r\n  21: rustc::traits::fulfill::FulfillmentContext::select\r\n  22: rustc::traits::fulfill::FulfillmentContext::select_where_possible\r\n  23: rustc_typeck::check::FnCtxt::select_obligations_where_possible\r\n  24: rustc_typeck::check::FnCtxt::check_argument_types\r\n  25: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::confirm_builtin_call\r\n  26: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  27: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  28: rustc_typeck::check::FnCtxt::check_expr_meets_expectation_or_error\r\n  29: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  30: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  31: rustc_typeck::check::FnCtxt::check_decl_local\r\n  32: rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}\r\n  33: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  34: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  35: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  36: rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}\r\n  37: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  38: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  39: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  40: rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}\r\n  41: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  42: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  43: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  44: rustc_typeck::check::FnCtxt::check_return_expr\r\n  45: rustc_typeck::check::check_fn\r\n  46: rustc_typeck::check::closure::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_closure\r\n  47: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  48: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  49: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  50: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  51: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  52: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  53: rustc_typeck::check::FnCtxt::check_argument_types\r\n  54: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::confirm_builtin_call\r\n  55: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  56: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  57: rustc_typeck::check::FnCtxt::check_expr_meets_expectation_or_error\r\n  58: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  59: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  60: rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}\r\n  61: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  62: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  63: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  64: rustc_typeck::check::FnCtxt::check_return_expr\r\n  65: rustc_typeck::check::check_fn\r\n  66: rustc_typeck::check::closure::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_closure\r\n  67: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  68: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  69: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  70: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  71: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  72: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  73: rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}\r\n  74: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  75: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  76: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  77: rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}\r\n  78: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  79: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  80: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  81: rustc_typeck::check::FnCtxt::check_block_with_expected::{{closure}}\r\n  82: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  83: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  84: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  85: rustc_typeck::check::FnCtxt::check_return_expr\r\n  86: rustc_typeck::check::check_fn\r\n  87: rustc_typeck::check::closure::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_closure\r\n  88: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  89: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  90: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  91: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  92: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  93: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  94: rustc_typeck::check::FnCtxt::check_argument_types\r\n  95: rustc_typeck::check::callee::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::confirm_builtin_call\r\n  96: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  97: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_lvalue_pref\r\n  98: rustc_typeck::check::FnCtxt::check_expr_meets_expectation_or_error\r\n  99: rustc_typeck::check::FnCtxt::check_expr_kind\r\n```\r\nIt told me to report this error so I did but honestly any help with getting that code above to compile would be appreciated because that backtrace is way over my skill level and I don't know what to do with it.\r\n\r\nSome meta:\r\n```\r\nrustc 1.20.0-nightly (9b85e1cfa 2017-07-07)\r\nbinary: rustc\r\ncommit-hash: 9b85e1cfa5aa2aaa4b5df4359a023ad793983ffc\r\ncommit-date: 2017-07-07\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.20.0-nightly\r\nLLVM version: 4.0\r\n```\r\nBuilt using `mio` crate and `#![feature(conservative_impl_trait)]`\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43774/timeline", "performed_via_github_app": null, "state_reason": "completed"}