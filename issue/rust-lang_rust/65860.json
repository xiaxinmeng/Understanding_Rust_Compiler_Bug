{"url": "https://api.github.com/repos/rust-lang/rust/issues/65860", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65860/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65860/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65860/events", "html_url": "https://github.com/rust-lang/rust/issues/65860", "id": 512931382, "node_id": "MDU6SXNzdWU1MTI5MzEzODI=", "number": 65860, "title": "Re-land early syntax feature gating (was: Some features can no longer be controlled by conditional compilation)", "user": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 49, "created_at": "2019-10-27T07:28:41Z", "updated_at": "2022-11-24T23:12:13Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/rust-lang/rust/pull/66004 fixed the original issue; now this tracks re-landing those checks (possibly after some transition period).\r\n\r\n### Original issue\r\n\r\nAt https://github.com/RalfJung/miri-test-libstd/, I have set things up such that one can run the libcore and liballoc test suite against Miri. The basic idea is to have a `Cargo.toml` file like this (very close to the normal one for libcore):\r\n```\r\n\r\n[package]\r\nauthors = [\"The Rust Project Developers\"]\r\nname = \"core_miri_test\"\r\nversion = \"0.0.0\"\r\nautotests = false\r\nautobenches = false\r\nedition = \"2018\"\r\n\r\n[lib]\r\nname = \"core_miri_test\"\r\npath = \"../libcore/lib.rs\"\r\ntest = false\r\nbench = false\r\n\r\n[[test]]\r\nname = \"coretests\"\r\npath = \"../libcore/tests/lib.rs\"\r\n\r\n[dev-dependencies]\r\nrand = \"0.7\"\r\n```\r\nThen I make `../libcore` a symlink to the actual libcore sources, cd into the dir with the above `Cargo.toml`, and run `cargo miri test`. This worked fine until recently (until nightly-2019-10-17, to be precise).\r\n\r\nBut since then something broke, and now [I get lots of build failures](https://travis-ci.org/RalfJung/miri-test-libstd/builds/603417659?utm_medium=notification&utm_source=email):\r\n```\r\nerror[E0658]: associated type bounds are unstable\r\n   --> core_miri_test/../libcore/pin.rs:445:15\r\n    |\r\n445 | impl<P: Deref<Target: Unpin>> Pin<P> {\r\n    |               ^^^^^^^^^^^^^\r\n    |\r\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\r\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\r\n\r\nerror[E0658]: associated type bounds are unstable\r\n   --> core_miri_test/../libcore/pin.rs:754:18\r\n    |\r\n754 | impl<P: DerefMut<Target: Unpin>> DerefMut for Pin<P> {\r\n    |                  ^^^^^^^^^^^^^\r\n    |\r\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\r\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\r\n```\r\nI tried adding these feature gates to every crate root I could think of (the `lib.rs` of both libcore and its test crate), but the errors are sticking. Unfortunately the error doesn't tell me which file *it* thinks is the crate root.\r\n\r\nAny idea what this could be caused by? Until this is fixed, we won't have Miri coverage of the libcore and liballoc test suite.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65860/timeline", "performed_via_github_app": null, "state_reason": null}