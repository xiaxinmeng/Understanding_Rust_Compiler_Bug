{"url": "https://api.github.com/repos/rust-lang/rust/issues/26483", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26483/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26483/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26483/events", "html_url": "https://github.com/rust-lang/rust/issues/26483", "id": 89969013, "node_id": "MDU6SXNzdWU4OTk2OTAxMw==", "number": 26483, "title": "ICE when referencing non-existent variant/item in C-like enum", "user": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-21T22:31:18Z", "updated_at": "2015-10-24T18:55:24Z", "closed_at": "2015-10-24T18:55:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Modified from an example that @ahwatts provided in issue #22933:\n\n``` rust\nstruct Apple;\n\nenum Delicious {\n    ApplePie = Apple::PIE,\n}\n\nfn main() {}\n```\n\nOutput with a recent nightly:\n\n```\ntest_argl.rs:5:16: 5:26 error: no associated item named `PIE` found for type `Apple` in the current scope\ntest_argl.rs:5     ApplePie = Apple::PIE,\n                              ^~~~~~~~~~\nerror: internal compiler error: unexpected panic\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nthread 'rustc' panicked at 'path not fully resolved: PathResolution { base_def: DefTy(DefId { krate: 0, node: 4 }, false), last_private: LastMod(AllPublic), depth: 1 }', ../src/librustc/middle/def.rs:81\n\nstack backtrace:\n   1:      0x317dd4983d3 - sys::backtrace::write::h42760ef5ab82bcd2irs\n   2:      0x317dd4a0521 - panicking::on_panic::h12f68dc29fcc5657Tax\n   3:      0x317dd45f28a - rt::unwind::begin_unwind_inner::h68e746642e433893DQw\n   4:      0x317dd45fec7 - rt::unwind::begin_unwind_fmt::h22d77de4e1204a17JPw\n   5:      0x317db414e0b - middle::const_eval::eval_const_expr_with_substs::h6757944525066075748\n   6:      0x317db3d94c1 - middle::ty::enum_variants::hf5833ad9292c8ac5HAb\n   7:      0x317dcc71c9d - check::check_enum_variants::h52e7fb747609e307ALs\n   8:      0x317dcc63995 - check::check_item_type::ha7187a1df3f0e4ddEco\n   9:      0x317dcc6aa44 - check::check_item_types::h8615aaad832dd957tRn\n  10:      0x317dcd2bbb0 - check_crate::h15b94c5d979eb877VgD\n  11:      0x317dd9ffcb9 - driver::phase_3_run_analysis_passes::h535099e77e0d0b0aHGa\n  12:      0x317dd9e155a - driver::compile_input::hf94b88e60b92b1d3Sba\n  13:      0x317dda9d2e7 - run_compiler::hd38788069be51651F7b\n  14:      0x317dda9a8d6 - boxed::F.FnBox<A>::call_box::h10971823990562187917\n  15:      0x317dda9a0d9 - rt::unwind::try::try_fn::h13260011850501376318\n  16:      0x317dd51cea8 - rust_try_inner\n  17:      0x317dd51ce95 - rust_try\n  18:      0x317dd48b147 - rt::unwind::try::inner_try::hb6dce8ad1d668192wMw\n  19:      0x317dda9a2f9 - boxed::F.FnBox<A>::call_box::h7963608429107561708\n  20:      0x317dd49f151 - sys::thread::Thread::new::thread_start::h82e421ca205cff91sWv\n  21:      0x317d702369b - <unknown>\n  22:      0x317dd0f932c - clone\n  23:                0x0 - <unknown>\n```\n\nThe original example gets an error through a different code path (`check_casts` -> `middle::CastTy::from_ty` -> `ty::type_is_c_like_enum`), but the result is still that `ty::enum_variants` is called, which then attempts to evaluate the constant expression, causing an error.\n\nFor unresolved paths I think we should have the `const_eval` functions return an error rather than panicking. This is a bit of a mess (e.g. lots of unhelpful uses of `Option` rather than `Error` for error handling), and should be fixed anyway.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26483/timeline", "performed_via_github_app": null, "state_reason": "completed"}