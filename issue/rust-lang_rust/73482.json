{"url": "https://api.github.com/repos/rust-lang/rust/issues/73482", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/73482/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/73482/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/73482/events", "html_url": "https://github.com/rust-lang/rust/issues/73482", "id": 641504732, "node_id": "MDU6SXNzdWU2NDE1MDQ3MzI=", "number": 73482, "title": "Iterator Indexing", "user": {"login": "jswrenn", "id": 3820879, "node_id": "MDQ6VXNlcjM4MjA4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3820879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jswrenn", "html_url": "https://github.com/jswrenn", "followers_url": "https://api.github.com/users/jswrenn/followers", "following_url": "https://api.github.com/users/jswrenn/following{/other_user}", "gists_url": "https://api.github.com/users/jswrenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jswrenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jswrenn/subscriptions", "organizations_url": "https://api.github.com/users/jswrenn/orgs", "repos_url": "https://api.github.com/users/jswrenn/repos", "events_url": "https://api.github.com/users/jswrenn/events{/privacy}", "received_events_url": "https://api.github.com/users/jswrenn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-18T19:42:19Z", "updated_at": "2020-06-18T20:20:42Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Itertools is considering [a PR introducing iterator indexing](https://github.com/rust-itertools/itertools/pull/447), implemented in the same manner as the core library's [slice indexing mechanism](https://doc.rust-lang.org/std/slice/trait.SliceIndex.html). This [playground link](https://play.rust-lang.org/?edition=2018&gist=2d908fb28c16fb69070ea857c5aa1143) demonstrates the gist of it:\r\n```rust\r\n// `Itertools::get` indexes an iterator:\r\nassert_eq!(\r\n    (0..5).get(2).collect::<Vec<_>>(),\r\n    vec![2]\r\n);\r\n\r\nassert_eq!(\r\n    (0..5).get(..3).collect::<Vec<_>>(),\r\n    vec![0, 1, 2]\r\n);\r\n\r\nassert_eq!(\r\n    (0..5).get(2..).collect::<Vec<_>>(),\r\n    vec![2, 3, 4]\r\n);\r\n```\r\n\r\nI'm excited to merge this\u2014it feels like something that ought to be in the standard library\u2014but I want to avoid another [`{Itertools,Iterator}::flatten`](https://github.com/rust-lang/rfcs/pull/2845#issuecomment-596231853) debacle; i.e., if the core library later adopts this same method, then itertools users calling this method will have builds break.\r\n\r\nWould this addition be a good fit for the core library?\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/73482/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/73482/timeline", "performed_via_github_app": null, "state_reason": null}