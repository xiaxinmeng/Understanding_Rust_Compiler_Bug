{"url": "https://api.github.com/repos/rust-lang/rust/issues/106710", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/106710/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/106710/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/106710/events", "html_url": "https://github.com/rust-lang/rust/issues/106710", "id": 1528532121, "node_id": "I_kwDOAAsO6M5bG4yZ", "number": 106710, "title": "Cow<'a, T> isn't specializable while FooCow<'a, T> is", "user": {"login": "ryoqun", "id": 117807, "node_id": "MDQ6VXNlcjExNzgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/117807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryoqun", "html_url": "https://github.com/ryoqun", "followers_url": "https://api.github.com/users/ryoqun/followers", "following_url": "https://api.github.com/users/ryoqun/following{/other_user}", "gists_url": "https://api.github.com/users/ryoqun/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryoqun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryoqun/subscriptions", "organizations_url": "https://api.github.com/users/ryoqun/orgs", "repos_url": "https://api.github.com/users/ryoqun/repos", "events_url": "https://api.github.com/users/ryoqun/events{/privacy}", "received_events_url": "https://api.github.com/users/ryoqun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-11T07:01:18Z", "updated_at": "2023-01-26T06:22:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=60bb0c925354009304afd4b84aa2e8e6\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(specialization)]\r\n\r\nuse std::borrow::Cow;\r\nuse std::clone::Clone;\r\nuse std::ops::Deref;\r\nuse std::fmt::Debug;\r\n\r\ntrait Example {\r\n    fn example(); \r\n}\r\n\r\nstruct UserDefinedCow<'a, T> {\r\n    aa: &'a T,\r\n}\r\n\r\nimpl<T: Sized> Example for T {\r\n    default fn example() {\r\n        println!(\"default impl: {}\", std::any::type_name::<Self>());\r\n    }\r\n}\r\n\r\ntrait JJ {\r\n}\r\n\r\nimpl<'a, T: Example /*+ Clone */ +'a> Example for Cow<'a, T> {\r\n    fn example() {\r\n        println!(\"specialized impl (Cow): {}\", std::any::type_name::<Self>());\r\n    }\r\n}\r\n\r\nimpl<'a, T: Example + /*JJ +*/ 'a> Example for UserDefinedCow<'a, T> {\r\n    fn example() {\r\n        println!(\"specialized impol (UserDefinedCow): {}\", std::any::type_name::<Self>());\r\n    }\r\n}\r\n/*\r\nimpl<T: Example> Example for Box<T> {\r\n    fn example() {\r\n        println!(\"Example from Box<T> impl: {}\", std::any::type_name::<Self>());\r\n    }\r\n}\r\n\r\nimpl<'a, T: Example + 'a> Example for Vec<&'a T> {\r\n    fn example() {\r\n        println!(\"Example from Vec<T> impl: {}\", std::any::type_name::<Self>());\r\n    }\r\n}\r\n*/\r\n\r\nfn main() {\r\n    usize::example();\r\n    //<Vec<&u8>>::example();\r\n    //<Box<&u8>>::example();\r\n    <Cow<'_, &u8>>::example();\r\n    <UserDefinedCow<'_, &u8>>::example();\r\n}\r\n\r\n```\r\n\r\nI expected to see this happen:\r\n\r\nno compilation error and the output should be like this:\r\n\r\n```\r\ndefault impl: usize\r\nspecialized impl (Cow): alloc::borrow::Cow<&u8>\r\nspecialized impol (UserDefinedCow): playground::UserDefinedCow<&u8>\r\n```\r\n\r\nInstead, this happened: \r\n\r\n```\r\nerror[[E0119]](https://doc.rust-lang.org/nightly/error-index.html#E0119): conflicting implementations of trait `Example` for type `Cow<'_, _>`\r\n  --> src/main.rs:25:1\r\n   |\r\n16 | impl<T: Sized> Example for T {\r\n   | ---------------------------- first implementation here\r\n...\r\n25 | impl<'a, T: Example /*+ Clone*/ +'a> Example for Cow<'a, T> {\r\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Cow<'_, _>`\r\n```\r\n\r\nOddly enough, I found that you can specialize `Cow` if it's further bound with `+ Clone`. (try to comment in), after fiddling with the code a bit.\r\n\r\nAlso, another specialization for identical type shape is allowed if it's user defined. so, i guess `Cow` is specially treated internally?\r\n\r\n### Meta\r\n\r\n```\r\nNightly channel\r\n\r\nBuild using the Nightly version: 1.68.0-nightly\r\n\r\n(2023-01-10 0442fbabe24ec43636a8)\r\n```\r\n\r\noriginally found and reduced to a minimal test case above: https://github.com/solana-labs/solana/pull/29596", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/106710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/106710/timeline", "performed_via_github_app": null, "state_reason": null}