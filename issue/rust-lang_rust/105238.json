{"url": "https://api.github.com/repos/rust-lang/rust/issues/105238", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105238/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105238/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105238/events", "html_url": "https://github.com/rust-lang/rust/issues/105238", "id": 1474377442, "node_id": "I_kwDOAAsO6M5X4Tbi", "number": 105238, "title": "ICE type parameter out of range when substituting", "user": {"login": "lightmelodies", "id": 20811066, "node_id": "MDQ6VXNlcjIwODExMDY2", "avatar_url": "https://avatars.githubusercontent.com/u/20811066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightmelodies", "html_url": "https://github.com/lightmelodies", "followers_url": "https://api.github.com/users/lightmelodies/followers", "following_url": "https://api.github.com/users/lightmelodies/following{/other_user}", "gists_url": "https://api.github.com/users/lightmelodies/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightmelodies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightmelodies/subscriptions", "organizations_url": "https://api.github.com/users/lightmelodies/orgs", "repos_url": "https://api.github.com/users/lightmelodies/repos", "events_url": "https://api.github.com/users/lightmelodies/events{/privacy}", "received_events_url": "https://api.github.com/users/lightmelodies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 2341291797, "node_id": "MDU6TGFiZWwyMzQxMjkxNzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_const_exprs", "name": "F-generic_const_exprs", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_const_exprs)]`"}, {"id": 5226739262, "node_id": "LA_kwDOAAsO6M8AAAABN4m2Pg", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-incomplete-features", "name": "requires-incomplete-features", "color": "76dcde", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2022-12-04T02:57:35Z", "updated_at": "2023-03-13T22:36:15Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to implement something like c++ `std::conditional_t` with `generic_const_exprs`. The follower code just works but much verbose due to lack of type alias inside struct.\r\n\r\n### Code\r\n\r\n```Rust\r\n#![allow(incomplete_features)]\r\n#![feature(generic_const_exprs)]\r\n\r\ntrait Ret {\r\n    type R;\r\n}\r\n\r\nstruct Cond<const PRED: bool, U, V>(std::marker::PhantomData<U>, std::marker::PhantomData<V>);\r\n\r\nimpl<U, V> Ret for Cond<true, U, V> {\r\n    type R = U;\r\n}\r\n\r\nimpl<U, V> Ret for Cond<false, U, V> {\r\n    type R = V;\r\n}\r\n\r\nstruct RobinHashTable<const MAX_LENGTH: usize>\r\nwhere\r\n    Cond<{ MAX_LENGTH < 65535 }, u16, u32>: Ret,\r\n{\r\n    _idx: <Cond<{ MAX_LENGTH < 65535 }, u16, u32> as Ret>::R,\r\n}\r\n\r\nfn main() {\r\n    use std::mem::size_of;\r\n    println!(\"{}\", size_of::<RobinHashTable<1024>>());\r\n    println!(\"{}\", size_of::<RobinHashTable<65536>>());\r\n}\r\n```\r\nI tried to change it to below forms but all got internal compiler error\r\n``` rust\r\nstruct RobinHashTable<const MAX_LENGTH: usize, CellIdx = Cond<{ MAX_LENGTH < 65535 }, u16, u32>>\r\nwhere\r\n    CellIdx: Ret,\r\n{\r\n    _idx: CellIdx::R,\r\n}\r\n```\r\n``` rust\r\nstruct RobinHashTable<\r\n    const MAX_LENGTH: usize,\r\n    CellIdx = <Cond<{ MAX_LENGTH < 65535 }, u16, u32> as Ret>::R,\r\n> {\r\n    _idx: CellIdx,\r\n}\r\n\r\n```\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0-nightly (234151769 2022-12-03)\r\nbinary: rustc\r\ncommit-hash: 23415176968e81e0aac92d0218612a89c4e68a82\r\ncommit-date: 2022-12-03\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.0-nightly\r\nLLVM version: 15.0.4\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nquery stack during panic:\r\n#0 [typeck] type-checking `main`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_middle/src/ty/subst.rs:810:9: type parameter `CellIdx/#1` (CellIdx/1) out of range when substituting, substs=[Const { ty: usize, kind: Value(Leaf(0x0000000000000400)) }]\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', /rustc/23415176968e81e0aac92d0218612a89c4e68a82/compiler/rustc_errors/src/lib.rs:1575:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::bug::<&alloc::string::String>\r\n   3: <rustc_errors::Handler>::bug::<&alloc::string::String>\r\n   4: rustc_middle::ty::context::tls::with_context_opt::<rustc_middle::ty::context::tls::with_opt<rustc_middle::util::bug::opt_span_bug_fmt<rustc_span::span_encoding::Span>::{closure#0}, ()>::{closure#0}, ()>\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt::<rustc_span::span_encoding::Span>\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: <rustc_middle::ty::subst::SubstFolder>::type_param_out_of_range\r\n   8: <rustc_middle::ty::subst::SubstFolder as rustc_middle::ty::fold::FallibleTypeFolder>::try_fold_ty\r\n   9: <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_middle::ty::fold::TypeFoldable>::try_fold_with::<rustc_middle::ty::subst::SubstFolder>\r\n  10: <rustc_middle::ty::consts::Const as rustc_middle::ty::fold::TypeSuperFoldable>::super_fold_with::<rustc_middle::ty::subst::SubstFolder>\r\n  11: <rustc_middle::ty::Ty as rustc_middle::ty::fold::TypeSuperFoldable>::super_fold_with::<rustc_middle::ty::subst::SubstFolder>\r\n  12: <<dyn rustc_hir_analysis::astconv::AstConv>::create_substs_for_ast_path::{closure#0}::SubstsForAstPathCtxt as rustc_hir_analysis::astconv::CreateSubstsForGenericArgsCtxt>::inferred_kind\r\n  13: <dyn rustc_hir_analysis::astconv::AstConv>::res_to_ty\r\n  14: <dyn rustc_hir_analysis::astconv::AstConv>::ast_ty_to_ty_inner::{closure#0}\r\n  15: <<rustc_hir_typeck::fn_ctxt::FnCtxt>::instantiate_value_path::CreateCtorSubstsContext as rustc_hir_analysis::astconv::CreateSubstsForGenericArgsCtxt>::provided_kind\r\n  16: <dyn rustc_hir_analysis::astconv::AstConv>::create_substs_for_generic_args::<<rustc_hir_typeck::fn_ctxt::FnCtxt>::instantiate_value_path::CreateCtorSubstsContext>\r\n  17: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_path\r\n  18: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_call\r\n  19: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  20: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  21: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_argument_types\r\n  22: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_call\r\n  23: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  24: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  25: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  26: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_argument_types\r\n  27: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_call\r\n  28: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  29: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_argument_types\r\n  30: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_call\r\n  31: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  32: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  33: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  34: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  35: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_expr_with_expectation_and_args\r\n  36: <rustc_hir_typeck::fn_ctxt::FnCtxt>::check_return_expr\r\n  37: rustc_hir_typeck::check::check_fn\r\n  38: rustc_hir_typeck::typeck\r\n  39: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  40: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::VecCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  41: rustc_data_structures::sync::par_for_each_in::<&[rustc_span::def_id::LocalDefId], <rustc_middle::hir::map::Map>::par_body_owners<rustc_hir_typeck::typeck_item_bodies::{closure#0}>::{closure#0}>\r\n  42: rustc_hir_typeck::typeck_item_bodies\r\n  43: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), ()>\r\n  44: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), ()>>\r\n  45: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::typeck_item_bodies, rustc_query_impl::plumbing::QueryCtxt>\r\n  46: <rustc_session::session::Session>::time::<(), rustc_hir_analysis::check_crate::{closure#7}>\r\n  47: rustc_hir_analysis::check_crate\r\n  48: rustc_interface::passes::analysis\r\n  49: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  50: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorGuaranteed>>>\r\n  51: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  52: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#2}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n  53: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n  54: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n  55: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.67.0-nightly (234151769 2022-12-03) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental=[REDACTED]\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `main`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105238/timeline", "performed_via_github_app": null, "state_reason": null}