{"url": "https://api.github.com/repos/rust-lang/rust/issues/105355", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105355/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105355/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105355/events", "html_url": "https://github.com/rust-lang/rust/issues/105355", "id": 1478365899, "node_id": "I_kwDOAAsO6M5YHhLL", "number": 105355, "title": "Internal Compiler Error when compiling cargo-shuttle v0.7.2", "user": {"login": "jestes15", "id": 51448244, "node_id": "MDQ6VXNlcjUxNDQ4MjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/51448244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jestes15", "html_url": "https://github.com/jestes15", "followers_url": "https://api.github.com/users/jestes15/followers", "following_url": "https://api.github.com/users/jestes15/following{/other_user}", "gists_url": "https://api.github.com/users/jestes15/gists{/gist_id}", "starred_url": "https://api.github.com/users/jestes15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jestes15/subscriptions", "organizations_url": "https://api.github.com/users/jestes15/orgs", "repos_url": "https://api.github.com/users/jestes15/repos", "events_url": "https://api.github.com/users/jestes15/events{/privacy}", "received_events_url": "https://api.github.com/users/jestes15/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-12-06T06:37:18Z", "updated_at": "2022-12-07T11:09:36Z", "closed_at": "2022-12-07T11:09:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\n#[stable(feature = \"drop_in_place\", since = \"1.8.0\")]\r\n#[lang = \"drop_in_place\"]\r\n#[allow(unconditional_recursion)]\r\npub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {\r\n    // Code here does not matter - this is replaced by the\r\n    // real drop glue by the compiler.\r\n\r\n    // SAFETY: see comment above\r\n    unsafe { drop_in_place(to_drop) }\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.67.0-nightly (c97b539e4 2022-11-30)\r\nbinary: rustc\r\ncommit-hash: c97b539e408ea353f4fde2f9251d598291fec421\r\ncommit-date: 2022-11-30\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.67.0-nightly\r\nLLVM version: 15.0.4\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: broken MIR in DropGlue(DefId(2:2801 ~ core[7784]::ptr::drop_in_place), Some(futures::stream::TryFlatten<futures::future::IntoStream<futures::future::MapOk<[async block@bollard::Docker::process_request::{closure#0}], fn(tokio_tungstenite::tungstenite::http::Response<hyper::body::body::Body>) -> impl futures::Stream<Item = std::result::Result<bollard::service::CreateImageInfo, bollard::errors::Error>> {bollard::Docker::decode_into_stream::<bollard::service::CreateImageInfo>}>>>)) (after phase change to runtime-optimized) at bb3[0]:\r\n                                Field projection `(*_1).field[1]` specified type `std::option::Option<tokio_util::codec::framed_read::FramedRead<bollard::read::StreamReader<futures::stream::MapErr<hyper::body::body::Body, fn(hyper::error::Error) -> bollard::errors::Error {<bollard::errors::Error as std::convert::From<hyper::error::Error>>::from}>>, bollard::read::JsonLineDecoder<bollard::service::CreateImageInfo>>>`, but actual type is `std::option::Option<<futures::future::IntoStream<futures::future::MapOk<[async block@bollard::Docker::process_request::{closure#0}], fn(tokio_tungstenite::tungstenite::http::Response<hyper::body::body::Body>) -> impl futures::Stream<Item = std::result::Result<bollard::service::CreateImageInfo, bollard::errors::Error>> {bollard::Docker::decode_into_stream::<bollard::service::CreateImageInfo>}>> as futures::TryStream>::Ok>`\r\n   --> /home/bl4z3-ubuntu/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs:490:1\r\n    |\r\n490 | pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = note: delayed at compiler/rustc_const_eval/src/transform/validate.rs:229:30\r\n\r\nerror: internal compiler error: broken MIR in DropGlue(DefId(2:2801 ~ core[7784]::ptr::drop_in_place), Some(futures::stream::TryFlatten<futures::future::IntoStream<futures::future::MapOk<[async block@bollard::Docker::process_request::{closure#0}], fn(tokio_tungstenite::tungstenite::http::Response<hyper::body::body::Body>) -> impl futures::Stream<Item = std::result::Result<bollard::service::CreateImageInfo, bollard::errors::Error>> {bollard::Docker::decode_into_stream::<bollard::service::CreateImageInfo>}>>>)) (after phase change to runtime-optimized) at bb4[0]:\r\n                                Field projection `(*_1).field[1]` specified type `std::option::Option<tokio_util::codec::framed_read::FramedRead<bollard::read::StreamReader<futures::stream::MapErr<hyper::body::body::Body, fn(hyper::error::Error) -> bollard::errors::Error {<bollard::errors::Error as std::convert::From<hyper::error::Error>>::from}>>, bollard::read::JsonLineDecoder<bollard::service::CreateImageInfo>>>`, but actual type is `std::option::Option<<futures::future::IntoStream<futures::future::MapOk<[async block@bollard::Docker::process_request::{closure#0}], fn(tokio_tungstenite::tungstenite::http::Response<hyper::body::body::Body>) -> impl futures::Stream<Item = std::result::Result<bollard::service::CreateImageInfo, bollard::errors::Error>> {bollard::Docker::decode_into_stream::<bollard::service::CreateImageInfo>}>> as futures::TryStream>::Ok>`\r\n   --> /home/bl4z3-ubuntu/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs:490:1\r\n    |\r\n490 | pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {\r\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    |\r\n    = note: delayed at compiler/rustc_const_eval/src/transform/validate.rs:229:30\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1609:13\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner>::flush_delayed::<alloc::vec::Vec<rustc_errors::diagnostic::Diagnostic>, &str>\r\n   3: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   4: core::ptr::drop_in_place::<rustc_session::parse::ParseSess>\r\n   5: core::ptr::drop_in_place::<rustc_session::session::Session>\r\n   6: core::ptr::drop_in_place::<rustc_interface::interface::Compiler>\r\n   7: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}::{closure#0}>\r\n   8: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "apiraino", "id": 6098822, "node_id": "MDQ6VXNlcjYwOTg4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6098822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apiraino", "html_url": "https://github.com/apiraino", "followers_url": "https://api.github.com/users/apiraino/followers", "following_url": "https://api.github.com/users/apiraino/following{/other_user}", "gists_url": "https://api.github.com/users/apiraino/gists{/gist_id}", "starred_url": "https://api.github.com/users/apiraino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apiraino/subscriptions", "organizations_url": "https://api.github.com/users/apiraino/orgs", "repos_url": "https://api.github.com/users/apiraino/repos", "events_url": "https://api.github.com/users/apiraino/events{/privacy}", "received_events_url": "https://api.github.com/users/apiraino/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/105355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105355/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}