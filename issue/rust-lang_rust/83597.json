{"url": "https://api.github.com/repos/rust-lang/rust/issues/83597", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/83597/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/83597/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/83597/events", "html_url": "https://github.com/rust-lang/rust/issues/83597", "id": 842652127, "node_id": "MDU6SXNzdWU4NDI2NTIxMjc=", "number": 83597, "title": "\"overflow evaluating the requirement\" caused by a blanket impl with a wrapper on one of the trait's type parameters", "user": {"login": "Maxpxt", "id": 19475500, "node_id": "MDQ6VXNlcjE5NDc1NTAw", "avatar_url": "https://avatars.githubusercontent.com/u/19475500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maxpxt", "html_url": "https://github.com/Maxpxt", "followers_url": "https://api.github.com/users/Maxpxt/followers", "following_url": "https://api.github.com/users/Maxpxt/following{/other_user}", "gists_url": "https://api.github.com/users/Maxpxt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maxpxt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maxpxt/subscriptions", "organizations_url": "https://api.github.com/users/Maxpxt/orgs", "repos_url": "https://api.github.com/users/Maxpxt/repos", "events_url": "https://api.github.com/users/Maxpxt/events{/privacy}", "received_events_url": "https://api.github.com/users/Maxpxt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-03-28T03:33:27Z", "updated_at": "2021-03-28T03:34:02Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n// &self, &mut Target\r\n\r\npub trait ShowAt<Target, Style> {\r\n    type Output;\r\n\r\n    fn show_at(self, target: Target, style: Style) -> Self::Output;\r\n}\r\n\r\nstruct Foo;\r\nimpl ShowAt<(), ()> for Foo {\r\n    type Output = ();\r\n\r\n    fn show_at(self, _target: (), _style: ()) -> Self::Output {}\r\n}\r\n\r\nstruct Wrapper<T>(T);\r\nimpl<T, Target, Style> ShowAt<Target, Wrapper<Style>> for T\r\nwhere\r\n    T: ShowAt<Target, Style, Output = ()>,\r\n{\r\n    type Output = ();\r\n\r\n    fn show_at(self, target: Target, style: Wrapper<Style>) -> Self::Output {\r\n        self.show_at(target, style.0);\r\n    }\r\n}\r\n\r\nfn main() {\r\n    Foo.show_at((), ());\r\n}\r\n```\r\n\r\nThis code fails to compile with the following error at the `show_at` call in `main`:\r\n```\r\nerror[E0275]: overflow evaluating the requirement `Foo: ShowAt<(), Wrapper<_>>`\r\n  --> src\\main.rs:29:9\r\n   |\r\n29 |     Foo.show_at((), ());\r\n   |         ^^^^^^^\r\n   |\r\n   = help: consider adding a `#![recursion_limit=\"256\"]` attribute to your crate (`bug`)\r\n   = note: required because of the requirements on the impl of `ShowAt<(), Wrapper<Wrapper<_>>>` for `Foo`\r\n   = note: 126 redundant requirements hidden\r\n   = note: required because of the requirements on the impl of `ShowAt<(), Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<Wrapper<_>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>` for `Foo`\r\n```\r\n\r\nI expected the code to compile, since `()` is not `Wrapper<_>`.\r\n\r\nWhat I imagine is happening is that the trait resolution attempts to compute the set of possible `Style`s such that `Foo: ShowAt<(), Style>` even though, clearly, `Style = ()`. This leads to checking `Foo: ShowAt<_, Wrapper<_>>`, which recurses to checking `Foo: ShowAt<_, _>`.\r\n\r\nWhile I can accept that the code above recurses, what causes me to think that this behavior might be a bug is that some slight modifications of the code, none of which remove the recursion, cause it to compile without errors. They are listed below:\r\n\r\n1- Removing the `Output = ()` requirement in\r\n```\r\nimpl<T, Target, Style> ShowAt<Target, Wrapper<Style>> for T\r\nwhere\r\n    T: ShowAt<Target, Style, Output = ()>,\r\n```\r\n\r\n2- Monomorphising `Target` to `()` by hand in the last `impl`:\r\n```\r\nimpl<T, Style> ShowAt<(), Wrapper<Style>> for T\r\nwhere\r\n    T: ShowAt<(), Style, Output = ()>,\r\n{\r\n    type Output = ();\r\n\r\n    fn show_at(self, target: (), style: Wrapper<Style>) -> Self::Output {\r\n        self.show_at(target, style.0);\r\n    }\r\n}\r\n```\r\n\r\n3- Monomorphising `Target` to `()` everywhere. This is probably equivalent to the previous case.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (07e0e2ec2 2021-03-24)\r\nbinary: rustc\r\ncommit-hash: 07e0e2ec268c140e607e1ac7f49f145612d0f597\r\ncommit-date: 2021-03-24\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/83597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/83597/timeline", "performed_via_github_app": null, "state_reason": null}