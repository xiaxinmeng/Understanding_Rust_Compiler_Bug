{"url": "https://api.github.com/repos/rust-lang/rust/issues/28419", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/28419/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/28419/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/28419/events", "html_url": "https://github.com/rust-lang/rust/issues/28419", "id": 106572725, "node_id": "MDU6SXNzdWUxMDY1NzI3MjU=", "number": 28419, "title": "improve error message when resolution via Deref actually required DerefMut", "user": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2015-09-15T14:47:50Z", "updated_at": "2022-08-03T14:32:33Z", "closed_at": "2019-09-14T19:54:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If a type `B` implements `Deref` to get out `&A`, then auto-deref based method resolution of instances of `B` will include methods of `A` that require `&mut self`, even when there is no `DerefMut` that would be necessary for such auto-deref to work.\n\nWe still reject the code, with the message \"cannot borrow immutable borrowed content as mutable\"\n\nWhat I would prefer is for the message to say something like:\n\n> error: cannot do mutable borrow via Deref alone\n> note: would need (at least) impl DerefMut for A\n- (i included some weasel language in the above that might be better editted out of a good error report.)\n\n(I think @nikomatsakis is well aware of this problem; he's mentioned the issue about how the auto-deref code needs to use a conservative guess during method resolution and rely on later compiler stages to reject the method lookup.)\n\nHere is an example of code exhibiting the problem [playpen](http://is.gd/91nnYn):\n\n``` rust\nuse std::ops::Deref;\n\nstruct A(i32);\nstruct B(A);\n\nimpl A {\n    fn yow(&mut self) { println!(\"Hi\"); }\n}\n\nimpl Deref for B {\n    type Target = A;\n    fn deref(&self) -> &Self::Target { &self.0 }\n}\n\nfn main() {\n    let mut b = B(A(3));\n    b.yow();\n}\n```\n\nThe error message when you run this (on nightly) is:\n\n```\n<anon>:17:5: 17:6 error: cannot borrow immutable borrowed content as mutable\n<anon>:17     b.yow();\n              ^\nerror: aborting due to previous error\n```\n\nThis message can be frustrating, especially when the content _appears_ mutable at the point that is highlighted by the span of the error message; after all, I _did_ use `let mut b = ...`\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/28419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/28419/timeline", "performed_via_github_app": null, "state_reason": "completed"}