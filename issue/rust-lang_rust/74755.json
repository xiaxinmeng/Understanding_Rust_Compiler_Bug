{"url": "https://api.github.com/repos/rust-lang/rust/issues/74755", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74755/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74755/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74755/events", "html_url": "https://github.com/rust-lang/rust/issues/74755", "id": 665632362, "node_id": "MDU6SXNzdWU2NjU2MzIzNjI=", "number": 74755, "title": "Empty drop() causes cross-language LTO LLVM segfault", "user": {"login": "TheBlueMatt", "id": 649246, "node_id": "MDQ6VXNlcjY0OTI0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBlueMatt", "html_url": "https://github.com/TheBlueMatt", "followers_url": "https://api.github.com/users/TheBlueMatt/followers", "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}", "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions", "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs", "repos_url": "https://api.github.com/users/TheBlueMatt/repos", "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 100522, "node_id": "MDU6TGFiZWwxMDA1MjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-crash", "name": "I-crash", "color": "e10c02", "default": false, "description": "Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."}, {"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-25T18:22:43Z", "updated_at": "2023-04-05T17:36:12Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "This is a little esoteric, but on Debian testing (LLVM 9, rustc 1.43, obviously can't use rustup since clang's LLVM has to match rustc's LLVM for cross-language LTO), when doing cross-language LTO compilations, if a Rust struct has an `impl Drop` with an empty body in `drop()`, LLVM segfaults doing cross-language LTO. Dropping the impl Drop results in valgrind-clean (at least the parts I tested) code that compiles fine with -Wall. Linking with only-Rust LTO works fine, the issue only kicks in with cross-language LTO.\r\n\r\nBuilt as:\r\n```\r\ncargo rustc -v --release -- -C linker-plugin-lto -C lto -C link-arg=-fuse-ld=lld\r\nclang++ -Wall -flto -O2 -pthread demo.cpp ../target/release/liblightning.a -ldl\r\n```\r\n\r\nBT in ld:\r\n```\r\n#0  0x00007ffff4c7609d in ?? () from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#1  0x00007ffff4c95aab in llvm::InternalizePass::maybeInternalize(llvm::GlobalValue&, llvm::DenseSet<llvm::Comdat const*, llvm::DenseMapInfo<llvm::Comdat const*> > const&) () from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#2  0x00007ffff4c95ff6 in llvm::InternalizePass::internalizeModule(llvm::Module&, llvm::CallGraph*) ()\r\n   from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#3  0x00007ffff4c722fa in llvm::thinLTOInternalizeModule(llvm::Module&, llvm::DenseMap<unsigned long, llvm::GlobalValueSummary*, llvm::DenseMapInfo<unsigned long>, llvm::detail::DenseMapPair<unsigned long, llvm::GlobalValueSummary*> > const&) ()\r\n   from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#4  0x00007ffff4f83222 in llvm::lto::thinBackend(llvm::lto::Config&, unsigned int, std::function<std::unique_ptr<llvm::lto::NativeObjectStream, std::default_delete<llvm::lto::NativeObjectStream> > (unsigned int)>, llvm::Module&, llvm::ModuleSummaryIndex const&, llvm::StringMap<std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> >, llvm::MallocAllocator> const&, llvm::DenseMap<unsigned long, llvm::GlobalValueSummary*, llvm::DenseMapInfo<unsigned long>, llvm::detail::DenseMapPair<unsigned long, llvm::GlobalValueSummary*> > const&, llvm::MapVector<llvm::StringRef, llvm::BitcodeModule, llvm::DenseMap<llvm::StringRef, unsigned int, llvm::DenseMapInfo<llvm::StringRef>, llvm::detail::DenseMapPair<llvm::StringRef, unsigned int> >, std::vector<std::pair<llvm::StringRef, llvm::BitcodeModule>, std::allocator<std::pair<llvm::StringRef, llvm::BitcodeModule> > > >&) ()\r\n   from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#5  0x00007ffff4f7d836 in ?? () from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#6  0x00007ffff4f7d3a5 in ?? () from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#7  0x00007ffff4103d8f in ?? () from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#8  0x00007ffff4103ce7 in ?? () from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#9  0x00007ffff321134f in __pthread_once_slow (once_control=0x55555653d168, init_routine=0x7ffff34cbd50 <__once_proxy>)\r\n    at pthread_once.c:116\r\n#10 0x00007ffff4103c7d in ?? () from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#11 0x00007ffff410392d in ?? () from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#12 0x00007ffff41034b8 in ?? () from /usr/lib/llvm-9/bin/../lib/../lib/libLLVM-9.so.1\r\n#13 0x00007ffff34ccc60 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#14 0x00007ffff3208ea7 in start_thread (arg=<optimized out>) at pthread_create.c:477\r\n#15 0x00007ffff7d94dcf in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74755/timeline", "performed_via_github_app": null, "state_reason": null}