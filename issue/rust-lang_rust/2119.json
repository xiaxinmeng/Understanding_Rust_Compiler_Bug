{"url": "https://api.github.com/repos/rust-lang/rust/issues/2119", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2119/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2119/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2119/events", "html_url": "https://github.com/rust-lang/rust/issues/2119", "id": 3945631, "node_id": "MDU6SXNzdWUzOTQ1NjMx", "number": 2119, "title": "cfg() and multiple predicates, logic language, etc", "user": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/9", "html_url": "https://github.com/rust-lang/rust/milestone/9", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/9/labels", "id": 194126, "node_id": "MDk6TWlsZXN0b25lMTk0MTI2", "number": 9, "title": "0.6", "description": "", "creator": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 203, "state": "closed", "created_at": "2012-10-11T18:15:24Z", "updated_at": "2015-01-21T01:43:22Z", "due_on": "2013-03-25T07:00:00Z", "closed_at": "2013-04-02T18:27:52Z"}, "comments": 14, "created_at": "2012-04-03T14:18:24Z", "updated_at": "2014-09-25T21:09:28Z", "closed_at": "2014-09-25T21:09:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Quick over: the `cfg()` attribute can't be used to do multiple-declaration of rust types/fns/mods along multiple-dimensions of consideration (OS, arch) without signifigant hurdle-jumping-through'ing. I spoke with @graydon about this, briefly, on IRC and he was under the impression that commas in a list passed to `cfg()` would behave like an `&&`, but it seems, from my observation, that they act more like `||`.\n\nHere's a test case:\n\n```\nuse std;\nimport io;\n\nfn main() {\n  io::println(\"#[cfg()] failure test case\");\n  let inst = new_foo_inst();\n}\n\n#[cfg(target_os=\"linux\", target_arch=\"x86_64\")]\ntype foo = {\n  a: int, b: int\n};\n#[cfg(target_os=\"linux\", target_arch=\"x86\")]\ntype foo = {\n  a: int, b: int, c: int\n};\n\nfn new_foo_inst() -> foo {\n  ret new_foo_arch();\n  #[cfg(target_arch=\"x86_64\")]\n  fn new_foo_arch() -> foo {\n    ret { a: 0, b: 0 };\n  }\n  #[cfg(target_arch=\"x86\")]\n  fn new_foo_arch() -> foo {\n    ret { a: 0, b: 0, c: 0};\n  }\n}\n```\n\nWill produce this compiler output:\n\n```\n./cfg.rs:10:0: 12:2 error: duplicate definition of type foo\n./cfg.rs:10 type foo = {\n./cfg.rs:11   a: int, b: int\n./cfg.rs:12 };\n```\n\nThere are workarounds, of course (As my `new_foo_inst()` impl shows, can acheive similar with nested branches of `os::arch` modules). But I think we can do better.\n\nI know this isn't high-priority (as I mentioned, I've already worked around the problem... and I'm not after a turing-completeness for `cfg()` :) , but it would propose changes the `cfg()` impl to:\n1. Change the `,` in `cfg()` to be `||`.\n2. Add `&&` as a supported separator, with all that it implies\n3. Support arbitrary, if-like predicate nesting within `cfg()` using parenthesis\n\nAlso, interesting that a single `=` is used for \"equals\", here. Trying hard to avoid the impulse to not be pedantic about consistency across the language (`==` is used for such things in the main grammar).\n\nThis is totally outside the level of my experience with the language internals so far, and I gather would involve syntax changes. I'm interested in getting my feet wet, gently, with this. Assuming that such a change would be accepted, where would I (or anyone else interested in this work) start?\n", "closed_by": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2119/timeline", "performed_via_github_app": null, "state_reason": "completed"}