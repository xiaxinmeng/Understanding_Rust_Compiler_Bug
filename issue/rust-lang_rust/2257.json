{"url": "https://api.github.com/repos/rust-lang/rust/issues/2257", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/2257/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/2257/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/2257/events", "html_url": "https://github.com/rust-lang/rust/issues/2257", "id": 4203865, "node_id": "MDU6SXNzdWU0MjAzODY1", "number": 2257, "title": "Boxed closures should be nameable, too", "user": {"login": "jwise", "id": 87427, "node_id": "MDQ6VXNlcjg3NDI3", "avatar_url": "https://avatars.githubusercontent.com/u/87427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwise", "html_url": "https://github.com/jwise", "followers_url": "https://api.github.com/users/jwise/followers", "following_url": "https://api.github.com/users/jwise/following{/other_user}", "gists_url": "https://api.github.com/users/jwise/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwise/subscriptions", "organizations_url": "https://api.github.com/users/jwise/orgs", "repos_url": "https://api.github.com/users/jwise/repos", "events_url": "https://api.github.com/users/jwise/events{/privacy}", "received_events_url": "https://api.github.com/users/jwise/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-04-20T01:39:33Z", "updated_at": "2012-08-23T23:45:32Z", "closed_at": "2012-08-23T23:45:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be really nice if it were possible for a boxed closure to recur on itself.  A use case that I find particularly compelling is a variable substitution, which currently looks like this (`impl` version suggested by @nikomatsakis):\n\n```\n  /* this code is in an impl, e.subst(x, y) := [x/y]e */\n  fn subst(gen: fn@() -> var, x: expr, y: var) -> expr {\n    let fvs = x.freevars();\n\n    type subst_encap = { gen: fn@() -> var, x: expr, y: var, fvs: map::set<var>};\n\n    impl subst_ops for subst_encap {\n      fn subst(e: expr) -> expr {\n        alt e {\n          e_app(e1, e2) {\n            e_app(@self.subst(*e1), @self.subst(*e2))\n          }\n          e_lam(v, ep) {\n            alt self.fvs.find(v) { /* v free in x? */\n              option::none { /* no */\n                e_lam(v, @self.subst(*ep))\n              }\n              option::some(_) { /* yes, alpha-vary \\v.ep */\n                let vp = self.gen();\n                e_lam(vp, @self.subst((*ep).subst(self.gen, e_var(vp), v)))\n              }\n            }\n          }\n          e_var(v) {\n            if v == self.y { self.x }\n            else { e }\n          }\n        }\n      }\n    }\n\n    let enc : subst_encap = {gen: gen, x: x, y: y, fvs: fvs};\n    enc.subst(self)\n  }\n```\n\nPreviously, it was even worse; the inner function was something of the form 'fn subst_(...)', which passed 'gen', 'x', 'y', and 'fvs' all the way through, which was _really_ painful.\n\n@nikomatsakis then suggested that I file this bug.  My suggestion is syntax of the form:  `fn@ subst_(...)`.  The problem then is if we want functions that mutually recur; another thought, then, is an ML-style `let rec func1 = fn@(...) {...} and func2 = fn@(...){...}`.\n\nThoughts?\n", "closed_by": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/2257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/2257/timeline", "performed_via_github_app": null, "state_reason": "completed"}