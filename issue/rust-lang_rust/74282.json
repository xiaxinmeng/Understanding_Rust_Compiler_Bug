{"url": "https://api.github.com/repos/rust-lang/rust/issues/74282", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74282/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74282/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74282/events", "html_url": "https://github.com/rust-lang/rust/issues/74282", "id": 655488068, "node_id": "MDU6SXNzdWU2NTU0ODgwNjg=", "number": 74282, "title": "ICE(expected defining type in borrowck) when existential type causes type error", "user": {"login": "meithecatte", "id": 23580910, "node_id": "MDQ6VXNlcjIzNTgwOTEw", "avatar_url": "https://avatars.githubusercontent.com/u/23580910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meithecatte", "html_url": "https://github.com/meithecatte", "followers_url": "https://api.github.com/users/meithecatte/followers", "following_url": "https://api.github.com/users/meithecatte/following{/other_user}", "gists_url": "https://api.github.com/users/meithecatte/gists{/gist_id}", "starred_url": "https://api.github.com/users/meithecatte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meithecatte/subscriptions", "organizations_url": "https://api.github.com/users/meithecatte/orgs", "repos_url": "https://api.github.com/users/meithecatte/repos", "events_url": "https://api.github.com/users/meithecatte/events{/privacy}", "received_events_url": "https://api.github.com/users/meithecatte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-12T22:24:06Z", "updated_at": "2022-03-30T07:45:43Z", "closed_at": "2022-03-30T07:45:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This might be related to #74280, but I am reporting this issue separately as the panic message and location are entirely different. When I try to minimize it further, the panic message changes.\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(type_alias_impl_trait)]\r\n\r\ntype Closure = impl Fn() -> u64;\r\nstruct Anonymous(Closure);\r\n\r\nfn test() {\r\n    let y = || -> Closure { || 3 };\r\n    Anonymous(|| {\r\n        3\r\n    })\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.46.0-nightly (346aec9b0 2020-07-11)\r\nbinary: rustc\r\ncommit-hash: 346aec9b02f3c74f3fce97fd6bda24709d220e49\r\ncommit-date: 2020-07-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.46.0-nightly\r\nLLVM version: 10.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> rust-ice2.rs:8:15\r\n   |\r\n3  |   type Closure = impl Fn() -> u64;\r\n   |                  ---------------- the expected opaque type\r\n...\r\n8  |       Anonymous(|| {\r\n   |  _______________^\r\n9  | |         3\r\n10 | |     })\r\n   | |_____^ expected opaque type, found closure\r\n   |\r\n   = note: expected opaque type `impl std::ops::Fn<()>`\r\n                  found closure `[closure@rust-ice2.rs:8:15: 10:6]`\r\n\r\nerror[E0308]: mismatched types\r\n  --> rust-ice2.rs:8:5\r\n   |\r\n8  | /     Anonymous(|| {\r\n9  | |         3\r\n10 | |     })\r\n   | |______^ expected `()`, found struct `Anonymous`\r\n   |\r\nhelp: try adding a semicolon\r\n   |\r\n10 |     });\r\n   |       ^\r\nhelp: try adding a return type\r\n   |\r\n6  | fn test() -> Anonymous {\r\n   |           ^^^^^^^^^^^^\r\n\r\nerror: internal compiler error: src/librustc_mir/borrow_check/universal_regions.rs:532:26: expected defining type for `DefId(0:11 ~ rust_ice2[317d]::test[0]::{{closure}}[1])`: `[type error]`\r\n  --> rust-ice2.rs:8:15\r\n   |\r\n8  |       Anonymous(|| {\r\n   |  _______________^\r\n9  | |         3\r\n10 | |     })\r\n   | |_____^\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/346aec9b02f3c74f3fce97fd6bda24709d220e49/src/libstd/macros.rs:13:23\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:530\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::span_bug\r\n  14: rustc_errors::Handler::span_bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::span_bug_fmt\r\n  20: rustc_mir::borrow_check::universal_regions::UniversalRegions::new\r\n  21: rustc_mir::borrow_check::do_mir_borrowck\r\n  22: rustc_infer::infer::InferCtxtBuilder::enter\r\n  23: rustc_mir::borrow_check::mir_borrowck\r\n  24: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::mir_borrowck>::compute\r\n  25: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  26: rustc_data_structures::stack::ensure_sufficient_stack\r\n  27: rustc_query_system::query::plumbing::get_query_impl\r\n  28: rustc_typeck::collect::type_of::find_opaque_ty_constraints::ConstraintLocator::check\r\n  29: rustc_hir::intravisit::walk_expr\r\n  30: rustc_hir::intravisit::walk_expr\r\n  31: rustc_hir::intravisit::walk_fn\r\n  32: rustc_hir::intravisit::walk_item\r\n  33: rustc_hir::intravisit::Visitor::visit_nested_item\r\n  34: rustc_typeck::collect::type_of::type_of\r\n  35: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::type_of>::compute\r\n  36: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  37: rustc_data_structures::stack::ensure_sufficient_stack\r\n  38: rustc_query_system::query::plumbing::get_query_impl\r\n  39: rustc_query_system::query::plumbing::ensure_query_impl\r\n  40: <rustc_typeck::collect::CollectItemTypesVisitor as rustc_hir::intravisit::Visitor>::visit_item\r\n  41: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  42: rustc_typeck::collect::collect_mod_item_types\r\n  43: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_mod_item_types>::compute\r\n  44: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  45: rustc_data_structures::stack::ensure_sufficient_stack\r\n  46: rustc_query_system::query::plumbing::get_query_impl\r\n  47: rustc_query_system::query::plumbing::ensure_query_impl\r\n  48: rustc_session::session::Session::track_errors\r\n  49: rustc_typeck::check_crate\r\n  50: rustc_interface::passes::analysis\r\n  51: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  52: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  53: rustc_query_system::query::plumbing::get_query_impl\r\n  54: rustc_middle::ty::context::tls::enter_global\r\n  55: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  56: rustc_span::with_source_map\r\n  57: rustc_interface::interface::create_compiler_and_run\r\n  58: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.46.0-nightly (346aec9b0 2020-07-11) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\n#0 [mir_borrowck] borrow-checking `test::{{closure}}#1`\r\n#1 [type_of] computing type of `Closure::{{opaque}}#0`\r\n#2 [collect_mod_item_types] collecting item types in top-level module\r\n#3 [analysis] running analysis passes on this crate\r\nend of query stack\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74282/timeline", "performed_via_github_app": null, "state_reason": "completed"}