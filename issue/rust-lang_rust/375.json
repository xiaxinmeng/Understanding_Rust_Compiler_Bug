{"url": "https://api.github.com/repos/rust-lang/rust/issues/375", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/375/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/375/events", "html_url": "https://github.com/rust-lang/rust/issues/375", "id": 904036, "node_id": "MDU6SXNzdWU5MDQwMzY=", "number": 375, "title": "Binding non-alias arguments with type parameters fails in llvm", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2011-05-16T01:44:56Z", "updated_at": "2014-06-16T21:56:27Z", "closed_at": "2011-07-11T19:56:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`make stage2/std.o CFG_DISABLE_OPTIMIZE=1` results in the following:\n\n```\nInstruction does not dominate all uses!\n  %20 = load %tydesc** %19\n  store %tydesc* %20, %tydesc** %7\nBroken module found, compilation aborted!\nStack dump:\n0.      Running pass 'Function Pass Manager' on module 'rust_out'.\n1.      Running pass 'Module Verifier' on function '@_rust_thunk1273_deque_create_grow'\nAborted\n```\n\nThe following test cases reproduces:\n\n```\nfn grow[T](vec[T] elts) {\n  auto copy_op = bind grow[T](elts);\n}\n\nfn main() {\n}\n```\n\nAnd fails with the following:\n\n```\nInstruction does not dominate all uses!\n  %19 = load %tydesc** %18\n  store %tydesc* %19, %tydesc** %6\nBroken module found, compilation aborted!\nStack dump:\n0.      Running pass 'Function Pass Manager' on module 'rust_out'.\n1.      Running pass 'Module Verifier' on function '@_rust_thunk17_grow'\nAborted\n```\n\nThe code generated for the thunk in the test case looks like:\n\n```\ndefine internal fastcc void @_rust_thunk17_grow(i1*, %task*, %10*) {\nallocas:\n  %3 = alloca [1 x %tydesc*]\n  %4 = alloca %tydesc\n  %5 = alloca %13*\n  br label %copy_args\n\ncopy_args:                                        ; preds = %allocas                                                                              \n  br label %derived_tydescs\n\nderived_tydescs:                                  ; preds = %copy_args                                                                            \n  %6 = getelementptr [1 x %tydesc*]* %3, i32 0, i32 0\n  store %tydesc* %19, %tydesc** %6\n  %7 = load %tydesc* @_rust_tydesc11_grow\n  store %tydesc %7, %tydesc* %4\n  %8 = getelementptr %tydesc* %4, i32 0, i32 0\n  %9 = getelementptr [1 x %tydesc*]* %3, i32 0, i32 0\n  %10 = getelementptr %tydesc* %4, i32 0, i32 0\n  store %tydesc** %9, %tydesc*** %10\n  %11 = getelementptr %tydesc* %4, i32 0, i32 1\n  store i32 ptrtoint (i1** getelementptr (i1** null, i32 1) to i32), i32* %11\n  %12 = getelementptr %tydesc* %4, i32 0, i32 2\n  store i32 ptrtoint (i1** getelementptr (%15* null, i64 0, i32 1) to i32), i32* %12\n  br label %13\n\n; <label>:13                                      ; preds = %derived_tydescs                                                                      \n  %14 = bitcast %10* %2 to %20*\n  %15 = getelementptr %20* %14, i32 0, i32 1, i32 1\n  %16 = getelementptr %22* %15, i32 0, i32 1\n  %17 = load %10** %16\n  %18 = getelementptr %20* %14, i32 0, i32 1, i32 3, i32 0\n  %19 = load %tydesc** %18\n  %20 = getelementptr %20* %14, i32 0, i32 1, i32 2, i32 0\n  %21 = load %13** %20\n  store %13* %21, %13** %5\n  %22 = bitcast %13** %5 to i8*\n  %23 = getelementptr %tydesc* %4, i32 0, i32 0\n  %24 = load %tydesc*** %23\n  %25 = getelementptr %tydesc* %4, i32 0, i32 3\n  %26 = load void (i1*, %task*, i1*, %tydesc**, i8*)** %25\n  call fastcc void %26(i1* null, %task* %1, i1* null, %tydesc** %24, i8* %22)\n  %27 = getelementptr %22* %15, i32 0, i32 0\n  %28 = bitcast void (i1*, %task*, %10*, %13*)** %27 to void (i1*, %task*, %10*, %tydesc*, %13*)**\n  %29 = load void (i1*, %task*, %10*, %tydesc*, %13*)** %28\n  call fastcc void %29(i1* %0, %task* %1, %10* %17, %tydesc* %19, %13* %21)\n  ret void\n}\n```\n\nNote that this only happens when generating unoptimized code - the verifier runs after the optimizer, which seems to hide problems in code generation.\n", "closed_by": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/375/timeline", "performed_via_github_app": null, "state_reason": "completed"}