{"url": "https://api.github.com/repos/rust-lang/rust/issues/94056", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94056/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94056/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94056/events", "html_url": "https://github.com/rust-lang/rust/issues/94056", "id": 1140283305, "node_id": "I_kwDOAAsO6M5D91ep", "number": 94056, "title": "The \"this function takes ownership of the receiver `self`\" diagnostic hint not shown inside closures", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}, {"id": 1839565265, "node_id": "MDU6TGFiZWwxODM5NTY1MjY1", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-terse", "name": "D-terse", "color": "c9f7a3", "default": false, "description": "A diagnostic that doesn't give enough information about the problem at hand"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-02-16T16:32:09Z", "updated_at": "2022-03-09T11:39:33Z", "closed_at": "2022-03-09T11:39:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code:\r\nhttps://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=bfca5a5df52348cba46546d72a36ccb6\r\n\r\n```rust\r\nfn testcase(items: &[u64]) -> Abc {\r\n    let mut abc = Abc { bar: Vec::new() };\r\n    items.iter().for_each(|item| abc.update(*item));\r\n    abc\r\n}\r\n\r\nstruct Abc {\r\n    bar: Vec<u64>,\r\n}\r\n\r\nimpl Abc {\r\n    fn update(mut self, bar: u64) {\r\n        //    ^^^^^^^^ the issue is here, this should be `&mut self`\r\n        self.bar.push(bar);\r\n    }\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[[E0507]](https://doc.rust-lang.org/nightly/error-index.html#E0507): cannot move out of `abc`, a captured variable in an `FnMut` closure\r\n [--> src/lib.rs:3:34\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021#)  |\r\n2 |     let mut abc = Abc { bar: Vec::new() };\r\n  |         ------- captured outer variable\r\n3 |     items.iter().for_each(|item| abc.update(*item));\r\n  |                           -------^^^--------------\r\n  |                           |      |\r\n  |                           |      move occurs because `abc` has type `Abc`, which does not implement the `Copy` trait\r\n  |                           captured by this `FnMut` closure\r\n\r\nwarning: variable does not need to be mutable\r\n [--> src/lib.rs:2:9\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021#)  |\r\n2 |     let mut abc = Abc { bar: Vec::new() };\r\n  |         ----^^^\r\n  |         |\r\n  |         help: remove this `mut`\r\n  |\r\n  = note: `#[warn(unused_mut)]` on by default\r\n\r\nerror[[E0382]](https://doc.rust-lang.org/nightly/error-index.html#E0382): use of moved value: `abc`\r\n [--> src/lib.rs:4:5\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021#)  |\r\n2 |     let mut abc = Abc { bar: Vec::new() };\r\n  |         ------- move occurs because `abc` has type `Abc`, which does not implement the `Copy` trait\r\n3 |     items.iter().for_each(|item| abc.update(*item));\r\n  |                           ------ --- variable moved due to use in closure\r\n  |                           |\r\n  |                           value moved into closure here\r\n4 |     abc\r\n  |     ^^^ value used here after move\r\n```\r\n\r\nThis diagnostic was confusing to me, since:\r\n1. It doesn't mention the reason why `update()` takes ownership\r\n2. It talks about the `Copy` trait, which whilst true, isn't really the correct way to fix this\r\n\r\nIdeally the output should look like:\r\n\r\n```\r\n...\r\n...\r\nnote: this function takes ownership of the receiver `self`, which moves `abc`\r\n  [--> src/lib.rs:12:19\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021#)   |\r\n12 |     fn update(mut self, bar: u64) {\r\n   |                   ^^^^\r\n```\r\n\r\nie: Have a `note` that explains the root issue - which is that the `mut self` takes ownership - and thus hopefully allow users to realise it should be `&mut self` in the definition of `update()`, rather than the problem being in `testcase()`.\r\n\r\nNotably, if I change the implementation to use a for loop (rather than a closure with `.forEach()`):\r\n\r\n```rust\r\nfn testcase(items: &[u64]) -> Abc {\r\n    let mut abc = Abc { bar: Vec::new() };\r\n    for item in items {\r\n        abc.update(*item);\r\n    }\r\n    abc\r\n}\r\n```\r\n(see https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=eb04a60d4d60c15c1911d14c64e2a692)\r\n\r\n...then the output already includes the above suggestion:\r\n\r\n```\r\nwarning: variable does not need to be mutable\r\n [--> src/lib.rs:2:9\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021#)  |\r\n2 |     let mut abc = Abc { bar: Vec::new() };\r\n  |         ----^^^\r\n  |         |\r\n  |         help: remove this `mut`\r\n  |\r\n  = note: `#[warn(unused_mut)]` on by default\r\n\r\nerror[[E0382]](https://doc.rust-lang.org/nightly/error-index.html#E0382): use of moved value: `abc`\r\n  [--> src/lib.rs:4:9\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021#)   |\r\n2  |     let mut abc = Abc { bar: Vec::new() };\r\n   |         ------- move occurs because `abc` has type `Abc`, which does not implement the `Copy` trait\r\n3  |     for item in items {\r\n4  |         abc.update(*item);\r\n   |         ^^^ ------------- `abc` moved due to this method call, in previous iteration of loop\r\n   |\r\nnote: this function takes ownership of the receiver `self`, which moves `abc`\r\n  [--> src/lib.rs:14:19\r\n](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021#)   |\r\n14 |     fn update(mut self, bar: u64) {\r\n   |                   ^^^^\r\n```\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94056/timeline", "performed_via_github_app": null, "state_reason": "completed"}