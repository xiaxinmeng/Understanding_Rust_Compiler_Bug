{"url": "https://api.github.com/repos/rust-lang/rust/issues/70336", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70336/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70336/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70336/events", "html_url": "https://github.com/rust-lang/rust/issues/70336", "id": 586566058, "node_id": "MDU6SXNzdWU1ODY1NjYwNTg=", "number": 70336, "title": "Float Display with fixed precision output uses inconsistent rounding rules", "user": {"login": "johnbartholomew", "id": 115749, "node_id": "MDQ6VXNlcjExNTc0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/115749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnbartholomew", "html_url": "https://github.com/johnbartholomew", "followers_url": "https://api.github.com/users/johnbartholomew/followers", "following_url": "https://api.github.com/users/johnbartholomew/following{/other_user}", "gists_url": "https://api.github.com/users/johnbartholomew/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnbartholomew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnbartholomew/subscriptions", "organizations_url": "https://api.github.com/users/johnbartholomew/orgs", "repos_url": "https://api.github.com/users/johnbartholomew/repos", "events_url": "https://api.github.com/users/johnbartholomew/events{/privacy}", "received_events_url": "https://api.github.com/users/johnbartholomew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2139259423, "node_id": "MDU6TGFiZWwyMTM5MjU5NDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-floating-point", "name": "A-floating-point", "color": "f7e101", "default": false, "description": "Area: Floating point numbers and arithmetic"}, {"id": 2238476604, "node_id": "MDU6TGFiZWwyMjM4NDc2NjA0", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-fmt", "name": "A-fmt", "color": "f7e101", "default": false, "description": "Area: std::fmt"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-03-23T22:47:07Z", "updated_at": "2022-11-16T10:27:21Z", "closed_at": "2022-11-16T10:27:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rust's f32 formatting seems to follow inconsistent rounding rules when rounding to a fixed output precision.\r\n\r\n```rust\r\nfn main() {\r\n  for i in 0..=10 {\r\n      let nf = (i as f32) + 0.5f32;\r\n      println!(\"{:4} -> {:2.0} ; {:5} -> {:3.0}\", nf, nf, -nf, -nf);\r\n  }\r\n}\r\n```\r\n\r\nOutput ([Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=05bcc5570b84b256ce15347fb776451b)):\r\n\r\n```plain\r\n 0.5 ->  1 ;  -0.5 ->  -1\r\n 1.5 ->  2 ;  -1.5 ->  -2\r\n 2.5 ->  2 ;  -2.5 ->  -2\r\n 3.5 ->  4 ;  -3.5 ->  -4\r\n 4.5 ->  4 ;  -4.5 ->  -4\r\n 5.5 ->  6 ;  -5.5 ->  -6\r\n 6.5 ->  6 ;  -6.5 ->  -6\r\n 7.5 ->  8 ;  -7.5 ->  -8\r\n 8.5 ->  8 ;  -8.5 ->  -8\r\n 9.5 -> 10 ;  -9.5 -> -10\r\n10.5 -> 10 ; -10.5 -> -10\r\n```\r\n\r\nI get this output on Linux x86-64 with both rustc 1.42.0 (b8cedc004 2020-03-09) and rustc 1.44.0-nightly (f509b26a7 2020-03-18). I have not tested on other systems, and have not yet tested with f64.\r\n\r\nMost inputs are rounded following the rule of rounding half to the nearest integer, but 0.5 and -0.5 are rounded away from zero instead.\r\n\r\nWhen rounding 0.5 to an integer both 0 or 1 are correct outputs, so this may not be a bug. However it seems strange that the round-half-to-even rule should be followed for 1.5, 2.5, and up while a different rule is followed for 0.5.\r\n\r\nBy comparison, my Python and C versions followed round-half-to-even consistently (rounding 0.5 to 0), though I don't know that they provide any *guarantee* to follow that rule.\r\n\r\nCross-reference: I originally posted about this on the user forum. [Rounding mode for fixed precision float Display format?](https://users.rust-lang.org/t/rounding-mode-for-fixed-precision-float-display-format/39799)\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70336/timeline", "performed_via_github_app": null, "state_reason": "completed"}