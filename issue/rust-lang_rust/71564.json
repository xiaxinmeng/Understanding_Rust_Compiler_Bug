{"url": "https://api.github.com/repos/rust-lang/rust/issues/71564", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/71564/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/71564/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/71564/events", "html_url": "https://github.com/rust-lang/rust/issues/71564", "id": 606872028, "node_id": "MDU6SXNzdWU2MDY4NzIwMjg=", "number": 71564, "title": "How to find which libc.so will `rustc --target=$TARGET` link against?", "user": {"login": "dubiousjim", "id": 232158, "node_id": "MDQ6VXNlcjIzMjE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/232158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dubiousjim", "html_url": "https://github.com/dubiousjim", "followers_url": "https://api.github.com/users/dubiousjim/followers", "following_url": "https://api.github.com/users/dubiousjim/following{/other_user}", "gists_url": "https://api.github.com/users/dubiousjim/gists{/gist_id}", "starred_url": "https://api.github.com/users/dubiousjim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dubiousjim/subscriptions", "organizations_url": "https://api.github.com/users/dubiousjim/orgs", "repos_url": "https://api.github.com/users/dubiousjim/repos", "events_url": "https://api.github.com/users/dubiousjim/events{/privacy}", "received_events_url": "https://api.github.com/users/dubiousjim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-25T22:53:39Z", "updated_at": "2020-04-29T15:21:36Z", "closed_at": "2020-04-29T15:21:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `rustc --target=x86_64-unknown-linux-musl` on a glibc host (specifically, 1.43.0-x86_64-unknown-linux-gnu), I'd like to be able to determine programmatically, either in a build script or in the library being built, what is the location of the relevant `libc.so` file. (The reason I want to do this is so that I can execute `libc.so --version` to determine its version information; that's provided by C macros by glibc but not by musl).\r\n\r\nFrom what I understand --- but please correct me if I'm wrong --- when the toolchain is on a glibc host, we can only create statically-linked musl outputs. So I can't inspect a binary generated by `rustc --target=x86_64-unknown-linux-musl` to see what libc it has dynamically linked against.\r\n\r\nI also raised this question on [StackOverflow](https://stackoverflow.com/questions/61423973/how-to-find-which-libc-so-will-rustc-target-target-link-against#61427983), and there it was suggested to pass the flags `-C link-args=-Wl,-Map=map.out` to rustc and inspect the generated map file. But this doesn't point to the libc.so file when the file is being statically linked.\r\n\r\nI am able to programmatically find the `libstd-*.so` file that is used when running `rustc --target=x86_64-unknown-linux-musl`, and that seems to have a link in it to the relevant libc file. But I can't query it using `ldd`. On a glibc host, running `ldd /root/.rustup/toolchains/1.43.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib/libstd-*.so` yields \"invalid ELF header\".\r\n\r\nI *can* use the tools `readelf -d` or `objdump -p` to read the dynamic section of the `libstd-*.so` file. But they only report information like this:\r\n\r\n```\r\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so]\r\n 0x000000000000000f (RPATH)              Library rpath: [$ORIGIN/../lib]\r\n```\r\n\r\nThere's no full path to the relevant `libc.so` file. (I know where it is on my own system; but I'm trying to find it programmatically on arbitrary systems.)\r\n\r\nThe environment I'm working in are [these Docker containers](https://hub.docker.com/r/liuchong/rustup/dockerfile). But I'd hope to find a way to obtain this information that works on any system where rustc is capable of targeting musl.\r\n", "closed_by": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/71564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/71564/timeline", "performed_via_github_app": null, "state_reason": "completed"}