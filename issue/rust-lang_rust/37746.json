{"url": "https://api.github.com/repos/rust-lang/rust/issues/37746", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/37746/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/37746/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/37746/events", "html_url": "https://github.com/rust-lang/rust/issues/37746", "id": 188953469, "node_id": "MDU6SXNzdWUxODg5NTM0Njk=", "number": 37746, "title": "docs: Wording regarding guarantees about Vec's unused capacity is unclear", "user": {"login": "antrik", "id": 19555, "node_id": "MDQ6VXNlcjE5NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/19555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antrik", "html_url": "https://github.com/antrik", "followers_url": "https://api.github.com/users/antrik/followers", "following_url": "https://api.github.com/users/antrik/following{/other_user}", "gists_url": "https://api.github.com/users/antrik/gists{/gist_id}", "starred_url": "https://api.github.com/users/antrik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antrik/subscriptions", "organizations_url": "https://api.github.com/users/antrik/orgs", "repos_url": "https://api.github.com/users/antrik/repos", "events_url": "https://api.github.com/users/antrik/events{/privacy}", "received_events_url": "https://api.github.com/users/antrik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-13T05:36:07Z", "updated_at": "2017-04-26T06:16:26Z", "closed_at": "2017-04-26T06:16:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The \"Guarantees\" section in the documentation for `Vec` has some unclear wording, especially in the second-to-last paragraph:\r\n\r\n> Vec will not specifically overwrite any data that is removed from it, but also won't specifically preserve it. Its uninitialized memory is scratch space that it may use however it wants. It will generally just do whatever is most efficient or otherwise easy to implement.\r\n\r\nIn my reading, that means we are explicitly *not* allowed to store anything (e.g. via FFI calls) in the `Vec`'s unused (but allocated) capacity, beyond its current valid length (size) -- but some others are disagreeing with my interpretation.\r\n\r\nSpecifically, the question is whether doing something like this is invalid:\r\n\r\n```\r\nlet buf_size: usize = 666;\r\nunsafe {\r\n    let buf: Vec<u8> = Vec::with_capacity(buf_size);\r\n    let data_size = libc::read(fd, buf.as_mut_ptr() as *mut c_void, buf_size as size_t) as usize;\r\n    assert(data_size >= 0);\r\n    buf.set_len(data_size);\r\n}\r\n```\r\n\r\nAs opposed to this variant, which should be valid even in my reading:\r\n\r\n```\r\nlet buf_size: usize = 666;\r\nunsafe {\r\n    let buf: Vec<u8> = Vec::with_capacity(buf_size);\r\n    buf.set_len(buf_size);\r\n    let data_size = libc::read(fd, buf.as_mut_ptr() as *mut c_void, buf_size as size_t) as usize;\r\n    assert(data_size >= 0);\r\n    buf.set_len(data_size);\r\n}\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/37746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/37746/timeline", "performed_via_github_app": null, "state_reason": "completed"}