{"url": "https://api.github.com/repos/rust-lang/rust/issues/11540", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/11540/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/11540/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/11540/events", "html_url": "https://github.com/rust-lang/rust/issues/11540", "id": 25589188, "node_id": "MDU6SXNzdWUyNTU4OTE4OA==", "number": 11540, "title": "We need exhaustive, coherent documentation on implicit copyability", "user": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2014-01-14T17:12:52Z", "updated_at": "2015-01-17T22:31:36Z", "closed_at": "2015-01-17T22:31:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Quiz time! What do the following two programs do?\n\n``` rust\nfn main() {\n    let mut x = 1;\n    let y = (0, &mut x);\n    fn foo((a, b): (int, &mut int)) {*b += a;}\n    foo(y);\n    foo(y);\n}\n```\n\n``` rust\nfn main() {\n    let mut x = 1;\n    let y = &mut x;\n    fn foo(b: &mut int) {*b += 0;}\n    foo(y);\n    foo(y);\n}\n```\n\nANSWERS:\n1. The first program fails to compile at the second invocation of `foo` with `error: use of moved value: y`.\n2. The second program compiles and runs fine.\n\nThis is because, apparently, a `&mut` embedded in a tuple will make that tuple ineligible for implicit copyability, but a lone `&mut` by itself can be implicitly copied till the cows come home.\n\nI was very surprised at this behavior. And as far as I know, nowhere do we document these sorts of subtleties. This is bad. We can't have a coherent story on explaining unique pointers if we don't clearly lay out when a copy happens and when a move happens. Someone needs to write a reference.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/11540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/11540/timeline", "performed_via_github_app": null, "state_reason": "completed"}