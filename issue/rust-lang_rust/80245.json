{"url": "https://api.github.com/repos/rust-lang/rust/issues/80245", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80245/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80245/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80245/events", "html_url": "https://github.com/rust-lang/rust/issues/80245", "id": 771705767, "node_id": "MDU6SXNzdWU3NzE3MDU3Njc=", "number": 80245, "title": "The libcore.rlib size more than doubled since 1.47", "user": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 631737389, "node_id": "MDU6TGFiZWw2MzE3MzczODk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-simd", "name": "A-simd", "color": "f7e101", "default": false, "description": "Area: SIMD (Single Instruction Multiple Data)"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049491442, "node_id": "MDU6TGFiZWwxMDQ5NDkxNDQy", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-heavy", "name": "I-heavy", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to binary size of generated code."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-12-20T21:11:08Z", "updated_at": "2021-01-07T19:08:19Z", "closed_at": "2021-01-07T19:08:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The libcore.rlib size for x86_64-unknown-linux-gnu target:\r\n\r\n|Toolchain | MB |\r\n|----------|---:|\r\n| nightly  | 76 |\r\n| nightly* | 20 |\r\n| beta     | 48 |\r\n| 1.48     | 47 |\r\n| 1.47     | 36 |\r\n| 1.46     | 29 |\r\n| 1.45     | 29 |\r\n| 1.44     | 28 |\r\n| 1.43     | 27 |\r\n| 1.42     | 27 |\r\n| 1.41     | 27 |\r\n| 1.40     | 28 |\r\n| 1.39     | 26 |\r\n| 1.38     | 26 |\r\n| 1.37     | 27 |\r\n| 1.36     | 27 |\r\n| 1.35     | 27 |\r\n| 1.34     | 27 |\r\n| 1.33     | 26 |\r\n| 1.32     | 26 |\r\n| 1.31     | 26 |\r\n\r\n<details><summary>nightly* = libcore without stdarch</summary>\r\n<p>\r\n\r\n```patch\r\ndiff --git a/library/core/src/lib.rs b/library/core/src/lib.rs\r\nindex 5b19bf6b80f..cc4344a30aa 100644\r\n--- a/library/core/src/lib.rs\r\n+++ b/library/core/src/lib.rs\r\n@@ -284,7 +284,6 @@\r\n // `core_arch` depends on libcore, but the contents of this module are\r\n // set up in such a way that directly pulling it here works such that the\r\n // crate uses the this crate as its libcore.\r\n-#[path = \"../../stdarch/crates/core_arch/src/mod.rs\"]\r\n #[allow(\r\n     missing_docs,\r\n     missing_debug_implementations,\r\n@@ -297,7 +296,93 @@\r\n // merged. It currently cannot because bootstrap fails as the lint hasn't been defined yet.\r\n #[allow(clashing_extern_declarations)]\r\n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\r\n-mod core_arch;\r\n+mod core_arch {\r\n+    pub mod arch {\r\n+        #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+        pub mod x86 {\r\n+            #[allow(non_camel_case_types)]\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            #[derive(Copy, Clone)]\r\n+            pub struct __m128i;\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_pause() {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_set1_epi8(_: i8) -> __m128i {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_or_si128(_: __m128i, _: __m128i) -> __m128i {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_movemask_epi8(_: __m128i) -> i32 {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_load_si128(_: *const __m128i) -> __m128i {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_loadu_si128(_: *const __m128i) -> __m128i {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_store_si128(_: *mut __m128i, _: __m128i) {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_cmpeq_epi8(_: __m128i, _: __m128i) -> __m128i {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_cmpgt_epi8(_: __m128i, _: __m128i) -> __m128i {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _mm_setzero_si128() -> __m128i {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub fn has_cpuid() -> bool {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub struct CpuidResult {\r\n+                /// EAX register.\r\n+                #[stable(feature = \"simd_x86\", since = \"1.27.0\")]\r\n+                pub eax: u32,\r\n+                /// EBX register.\r\n+                #[stable(feature = \"simd_x86\", since = \"1.27.0\")]\r\n+                pub ebx: u32,\r\n+                /// ECX register.\r\n+                #[stable(feature = \"simd_x86\", since = \"1.27.0\")]\r\n+                pub ecx: u32,\r\n+                /// EDX register.\r\n+                #[stable(feature = \"simd_x86\", since = \"1.27.0\")]\r\n+                pub edx: u32,\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn __cpuid(_: u32) -> CpuidResult {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn __cpuid_count(_: u32, _: u32) -> CpuidResult {\r\n+                todo!();\r\n+            }\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub unsafe fn _xgetbv(_: u32) -> u64 {\r\n+                todo!();\r\n+            }\r\n+        }\r\n+        #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+        pub mod x86_64 {\r\n+            #[stable(feature = \"a\", since = \"1.0.0\")]\r\n+            pub use super::x86::*;\r\n+        }\r\n+    }\r\n+}\r\n \r\n #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\r\n pub use core_arch::arch;\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80245/timeline", "performed_via_github_app": null, "state_reason": "completed"}