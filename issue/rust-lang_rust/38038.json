{"url": "https://api.github.com/repos/rust-lang/rust/issues/38038", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/38038/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/38038/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/38038/events", "html_url": "https://github.com/rust-lang/rust/issues/38038", "id": 191887857, "node_id": "MDU6SXNzdWUxOTE4ODc4NTc=", "number": 38038, "title": "Optimize iterator chains better", "user": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-11-27T21:47:38Z", "updated_at": "2017-10-08T00:48:41Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The iterator adaptor `.chain()` and similar code uses a state flag that changes mid-loop; the compiler should recognize this and try to split it into two consecutive loops if possible.\r\n\r\nReproduction in code [(playground)](https://play.rust-lang.org/?gist=cbeda98c191140c030a174af63e6e713&version=nightly&backtrace=1)\r\n\r\n\r\n```rust\r\npub fn visit_both(a: &[u32], b: &[u32], f: fn(u32)) {\r\n    for &elt in chain(a, b) {\r\n        f(elt)\r\n    }\r\n}\r\n\r\n/// this is a simplified version of std::iter::Chain\r\npub struct Chain<I> { front: bool, a: I, b: I }\r\n\r\nfn chain<I>(a: I, b: I) -> Chain<I::IntoIter> where I: IntoIterator {\r\n    Chain { front: true, a: a.into_iter(), b: b.into_iter() }\r\n}\r\n\r\nimpl<I> Iterator for Chain<I> where I: Iterator {\r\n    type Item = I::Item;\r\n    fn next(&mut self) -> Option<Self::Item> {\r\n        if self.front {\r\n            if let elt @ Some(_) = self.a.next() {\r\n                return elt;\r\n            }\r\n            self.front = false;\r\n        }\r\n        self.b.next()\r\n    }\r\n}\r\n```\r\n\r\n# Actual Behaviour\r\n\r\nThere is only one `call` instruction in `visit_both`'s generated code, indicating the loop was not split.\r\n\r\n# Expected Behaviour\r\n\r\nGenerated code should be more similar to two consecutive loops.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/38038/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/38038/timeline", "performed_via_github_app": null, "state_reason": null}