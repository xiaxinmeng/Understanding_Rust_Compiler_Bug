{"url": "https://api.github.com/repos/rust-lang/rust/issues/69487", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69487/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69487/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69487/events", "html_url": "https://github.com/rust-lang/rust/issues/69487", "id": 571503341, "node_id": "MDU6SXNzdWU1NzE1MDMzNDE=", "number": 69487, "title": "ICE: The type checker should prevent reading from a never-written local", "user": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 60344715, "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium", "name": "P-medium", "color": "eb6420", "default": false, "description": "Medium priority"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}, {"id": 1657845351, "node_id": "MDU6TGFiZWwxNjU3ODQ1MzUx", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-unboxed_closures", "name": "F-unboxed_closures", "color": "f9c0cc", "default": false, "description": "`#![feature(unboxed_closures)]`"}, {"id": 1769279746, "node_id": "MDU6TGFiZWwxNzY5Mjc5NzQ2", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_trait_impl", "name": "F-const_trait_impl", "color": "f9c0cc", "default": false, "description": "`#![feature(const_trait_impl)]`"}], "state": "closed", "locked": false, "assignee": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2020-02-26T16:22:05Z", "updated_at": "2022-05-27T14:12:25Z", "closed_at": "2022-05-27T14:12:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(const_trait_impl)]\r\n#![feature(fn_traits)]\r\n#![feature(unboxed_closures)]\r\n\r\nstruct Closure;\r\n\r\nimpl const FnOnce<&usize> for Closure {\r\n    type Output = usize;\r\n    \r\n    extern \"rust-call\" fn call_once(self, arg: &usize) -> Self::Output {\r\n        *arg\r\n    }\r\n}\r\n\r\nenum Bug<T = [(); Closure.call_once(&0) ]> {\r\n    V(T),\r\n}\r\n```\r\n\r\nI expected to see this happen: Maybe it should've compiled? Maybe it should've just emitted an error explaining I did something wrong?\r\n\r\nInstead, this happened: It crashed!\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n1.43.0-nightly (6fd8798f4 2020-02-25)\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: src/librustc_mir/interpret/eval_context.rs:143: The type checker should prevent reading from a never-written local\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:881:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1052\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1428\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:204\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:224\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:474\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::access_local\r\n  21: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_place_to_op\r\n  22: rustc_mir::interpret::operand::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_operand\r\n  23: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::eval_rvalue_into_place\r\n  24: rustc_mir::interpret::step::<impl rustc_mir::interpret::eval_context::InterpCx<M>>::run\r\n  25: rustc_mir::const_eval::eval_queries::const_eval_raw_provider\r\n  26: rustc::ty::query::__query_compute::const_eval_raw\r\n  27: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_raw>::compute\r\n  28: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  29: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  30: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  31: rustc::ty::query::__query_compute::const_eval_validated\r\n  32: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_validated>::compute\r\n  33: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  35: rustc_mir::const_eval::eval_queries::const_eval_validated_provider\r\n  36: rustc::ty::query::__query_compute::const_eval_validated\r\n  37: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::const_eval_validated>::compute\r\n  38: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  40: rustc::mir::interpret::queries::<impl rustc::ty::context::TyCtxt>::const_eval_resolve\r\n  41: rustc::ty::sty::Const::eval::{{closure}}\r\n  42: <rustc_infer::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_const\r\n  43: <rustc_infer::traits::project::AssocTypeNormalizer as rustc::ty::fold::TypeFolder>::fold_ty\r\n  44: rustc::ty::fold::TypeFoldable::fold_with\r\n  45: rustc::ty::fold::TypeFoldable::fold_with\r\n  46: rustc_infer::traits::project::normalize\r\n  47: rustc_infer::infer::InferCtxt::partially_normalize_associated_types_in\r\n  48: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::next\r\n  49: rustc_typeck::check::wfcheck::check_where_clauses\r\n  50: rustc::ty::context::GlobalCtxt::enter_local\r\n  51: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  52: rustc::ty::query::__query_compute::check_item_well_formed\r\n  53: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::check_item_well_formed>::compute\r\n  54: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  55: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  56: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::ensure_query\r\n  57: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:86\r\n  58: rustc_data_structures::sync::par_for_each_in\r\n  59: __rust_maybe_catch_panic\r\n             at src/libpanic_unwind/lib.rs:86\r\n  60: rustc_hir::hir::Crate::par_visit_all_item_likes\r\n  61: rustc_typeck::check_crate\r\n  62: rustc_interface::passes::analysis\r\n  63: rustc::ty::query::__query_compute::analysis\r\n  64: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  65: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  66: rustc::ty::context::tls::enter_global\r\n  67: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.43.0-nightly (6fd8798f4 2020-02-25) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C opt-level=3 -C codegen-units=1 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [const_eval_raw] const-evaluating `Bug::{{constant}}#0`\r\n#1 [const_eval_validated] const-evaluating + checking `Bug::{{constant}}#0`\r\n#2 [const_eval_validated] const-evaluating + checking `Bug::{{constant}}#0`\r\n#3 [check_item_well_formed] processing `Bug`\r\n#4 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69487/timeline", "performed_via_github_app": null, "state_reason": "completed"}