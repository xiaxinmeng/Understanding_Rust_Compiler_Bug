{"url": "https://api.github.com/repos/rust-lang/rust/issues/79874", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79874/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79874/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79874/events", "html_url": "https://github.com/rust-lang/rust/issues/79874", "id": 760768384, "node_id": "MDU6SXNzdWU3NjA3NjgzODQ=", "number": 79874, "title": "asm! doesn't accept `offset` syntax, but gcc does", "user": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 55302148, "node_id": "MDU6TGFiZWw1NTMwMjE0OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-x86_64", "name": "O-x86_64", "color": "6e6ec0", "default": false, "description": "Target: x64 processors"}, {"id": 91598611, "node_id": "MDU6TGFiZWw5MTU5ODYxMQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inline-assembly", "name": "A-inline-assembly", "color": "f7e101", "default": false, "description": "Area: inline asm!(..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2046313052, "node_id": "MDU6TGFiZWwyMDQ2MzEzMDUy", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-asm", "name": "F-asm", "color": "f9c0cc", "default": false, "description": "`#![feature(asm)]` (not `llvm_asm`)"}], "state": "open", "locked": false, "assignee": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-12-10T00:06:12Z", "updated_at": "2023-04-05T17:36:19Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "In Intel-syntax assembly, to refer to the address of a symbol rather than the memory pointed to by that symbol, you have to write `offset symbol` rather than just `symbol`. For instance, `mov rax, 1f` is equivalent to `mov rax, qword ptr 1f` and moves the memory pointed to by `1f` into `rax`, while `mov rax, offset 1f` moves the address of `1f` into `rax`.\r\n\r\nGCC and GAS accept this syntax. However, clang and Rust do not.\r\n\r\n(The examples below use position-dependent addressing for simplicity. Production code should use position-independent addressing.)\r\n\r\n```\r\n/tmp$ cat offset.c \r\n#include <stdio.h>\r\n\r\nint main() {\r\n    unsigned value = 0;\r\n    __asm__ __volatile__(\r\n        \"mov %0, 1\\n\"\r\n        \"mov rax, offset 3f\\n\"\r\n        \"jmp rax\\n\"\r\n        \"mov %0, 2\\n\"\r\n        \"3:\"\r\n        : \"=r\" (value)\r\n        :\r\n        : \"rax\"\r\n    );\r\n    printf(\"%u\\n\", value);\r\n    return 0;\r\n}\r\n\r\n/tmp$ gcc -no-pie -masm=intel -O3 offset.c -o offset\r\n/tmp$ ./offset \r\n1\r\n/tmp$ clang-12 -no-pie -masm=intel -O3 offset.c -o offset\r\noffset.c:7:10: error: unexpected token in argument list\r\n        \"mov rax, offset 3f\\n\"\r\n         ^\r\n<inline asm>:2:17: note: instantiated into assembly here\r\nmov rax, offset 3f\r\n                ^\r\n1 error generated.\r\n(1) /tmp$ cat offset.rs \r\n#![feature(asm)]\r\n\r\nfn main() {\r\n    let mut value: u64;\r\n    unsafe {\r\n        asm!(\r\n          \"mov {value}, 1\",\r\n          \"mov rax, offset 3f\",\r\n          \"jmp rax\",\r\n          \"mov {value}, 2\",\r\n          \"3:\",\r\n          value = out(reg) value,\r\n          out(\"rax\") _,\r\n        );\r\n    }\r\n    dbg!(value);\r\n}\r\n/tmp$ rustc +nightly offset.rs \r\nerror: unexpected token!\r\n --> offset.rs:8:12\r\n  |\r\n8 |           \"mov rax, offset 3f\",\r\n  |            ^\r\n  |\r\nnote: instantiated into assembly here\r\n --> <inline asm>:3:17\r\n  |\r\n3 | mov rax, offset 3f\r\n  |                 ^\r\n\r\nerror: aborting due to previous error\r\n\r\n(1) /tmp$ rustc +nightly --version\r\nrustc 1.50.0-nightly (1c389ffef 2020-11-24)\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79874/timeline", "performed_via_github_app": null, "state_reason": null}