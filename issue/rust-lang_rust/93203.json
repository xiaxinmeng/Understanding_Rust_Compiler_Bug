{"url": "https://api.github.com/repos/rust-lang/rust/issues/93203", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93203/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93203/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93203/events", "html_url": "https://github.com/rust-lang/rust/issues/93203", "id": 1111587794, "node_id": "I_kwDOAAsO6M5CQXvS", "number": 93203, "title": "Tracking Issue for scoped threads", "user": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36953, "node_id": "MDU6TGFiZWwzNjk1Mw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-runtime", "name": "A-runtime", "color": "f7e101", "default": false, "description": "Area: std's runtime and \"pre-main\" init for handling backtraces, unwinds, stack overflows"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 223796632, "node_id": "MDU6TGFiZWwyMjM3OTY2MzI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/relnotes", "name": "relnotes", "color": "fad8c7", "default": false, "description": "Marks issues that should be documented in the release notes of the next release."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 919710011, "node_id": "MDU6TGFiZWw5MTk3MTAwMTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/disposition-merge", "name": "disposition-merge", "color": "008800", "default": false, "description": "This issue / PR is in PFCP or FCP with a disposition to merge it."}, {"id": 923282386, "node_id": "MDU6TGFiZWw5MjMyODIzODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/finished-final-comment-period", "name": "finished-final-comment-period", "color": "f9e189", "default": false, "description": "The final comment period is finished for this PR / Issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 74, "created_at": "2022-01-22T14:52:22Z", "updated_at": "2022-10-21T11:16:15Z", "closed_at": "2022-06-17T02:32:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Feature gate: `#![feature(scoped_threads)]`\r\n\r\nThis is a tracking issue for scoped threads.\r\n\r\nRFC: https://rust-lang.github.io/rfcs/3151-scoped-threads.html\r\n\r\n### Example usage\r\n\r\n```rust\r\nlet local_var = vec![1, 2, 3];\r\n\r\nthread::scope(|s| {\r\n    s.spawn(|| println!(\"borrowed from thread #1: {:?}\", local_var));\r\n    s.spawn(|| println!(\"borrowed from thread #2: {:?}\", local_var));\r\n    println!(\"borrowed from the main thread: {:?}\", local_var);\r\n});\r\n```\r\n\r\n### Public API\r\n\r\nDocumentation: https://doc.rust-lang.org/nightly/std/thread/fn.scope.html\r\n\r\n```rust\r\n// std::thread\r\n\r\npub fn scope<'env, F, T>(f: F) -> T\r\nwhere\r\n    F: for<'scope> FnOnce(&'scope Scope<'scope, 'env>) -> T;\r\n\r\npub struct Scope<'scope, 'env: 'scope> { ... }\r\n\r\nimpl<'scope, 'env> Scope<'scope, 'env> {\r\n    pub fn spawn<F, T>(&'scope self, f: F) -> ScopedJoinHandle<'scope, T>\r\n    where\r\n        F: FnOnce() -> T + Send + 'scope,\r\n        T: Send + 'scope;\r\n}\r\n\r\nimpl Builder {\r\n    pub fn spawn_scoped<'scope, 'env, F, T>(\r\n        self,\r\n        scope: &'scope Scope<'env>,\r\n        f: F,\r\n    ) -> io::Result<ScopedJoinHandle<'scope, T>>\r\n    where\r\n        F: FnOnce() -> T + Send + 'scope,\r\n        T: Send + 'scope;\r\n}\r\n\r\npub struct ScopedJoinHandle<'scope, T> { ... }\r\n\r\nimpl<'scope, T> ScopedJoinHandle<'scope, T> {\r\n    pub fn join(self) -> Result<T>;\r\n    pub fn thread(&self) -> &Thread;\r\n    pub fn is_finshed(&self) -> bool;\r\n}\r\n```\r\n\r\n### Steps / History\r\n\r\n- [x] RFC attempt 1: https://github.com/rust-lang/rfcs/pull/2647\r\n- [x] RFC attempt 2: https://github.com/rust-lang/rfcs/pull/3151\r\n- [x] Implementation: https://github.com/rust-lang/rust/pull/92555\r\n- [x] Change signatures a bit to remove the argument to the spawn closures: https://github.com/rust-lang/rust/pull/94559\r\n- [x] Fix soundness issue in implementation: https://github.com/rust-lang/rust/pull/94644\r\n- [x] Document lifetimes: https://github.com/rust-lang/rust/pull/94763\r\n- [x] Final comment period (FCP): https://github.com/rust-lang/rust/issues/93203#issuecomment-1075284811\r\n- [x] Stabilization PR: https://github.com/rust-lang/rust/pull/97992\r\n\r\n### Unresolved Questions\r\n\r\n- [x] Can we omit the `&Scope` argument to the functions given to `.spawn()`? That is, `scope.spawn(|| ..)` rather than `scope.spawn(|_| ..)`.\r\n  - It's already possible by forcing the user to use `move || ..` instead, but that's not great. Maybe the language could be subtly changed to capture references or certain `Copy` types by value rather than by reference(-to-reference).\r\n  - See also [this comment](https://github.com/rust-lang/rfcs/pull/3151#issuecomment-883251161) and the collapsed section in [the comment below](https://github.com/rust-lang/rust/issues/93203#issuecomment-1019293467).\r\n  - Mostly answered in [this comment](https://github.com/rust-lang/rust/issues/93203#issuecomment-1040720703).\r\n  - Working idea in [this comment](https://github.com/rust-lang/rust/issues/93203#issuecomment-1040798286).\r\n  - Implementation in https://github.com/rust-lang/rust/pull/94559\r\n- [x] How to document the `'env` and `'scope` lifetimes clearly without scaring people away.\r\n  - https://github.com/rust-lang/rust/pull/94763\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93203/reactions", "total_count": 36, "+1": 0, "-1": 0, "laugh": 0, "hooray": 22, "confused": 0, "heart": 14, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93203/timeline", "performed_via_github_app": null, "state_reason": "completed"}