{"url": "https://api.github.com/repos/rust-lang/rust/issues/81759", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81759/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81759/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81759/events", "html_url": "https://github.com/rust-lang/rust/issues/81759", "id": 801590507, "node_id": "MDU6SXNzdWU4MDE1OTA1MDc=", "number": 81759, "title": "Rustdoc testing fails to build with ASan enabled (in some cases)", "user": {"login": "axic", "id": 20340, "node_id": "MDQ6VXNlcjIwMzQw", "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axic", "html_url": "https://github.com/axic", "followers_url": "https://api.github.com/users/axic/followers", "following_url": "https://api.github.com/users/axic/following{/other_user}", "gists_url": "https://api.github.com/users/axic/gists{/gist_id}", "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axic/subscriptions", "organizations_url": "https://api.github.com/users/axic/orgs", "repos_url": "https://api.github.com/users/axic/repos", "events_url": "https://api.github.com/users/axic/events{/privacy}", "received_events_url": "https://api.github.com/users/axic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203738, "node_id": "MDU6TGFiZWwyMDM3Mzg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-rustdoc", "name": "T-rustdoc", "color": "bfd4f2", "default": false, "description": "Relevant to the rustdoc team, which will review and decide on the PR/issue."}, {"id": 630870359, "node_id": "MDU6TGFiZWw2MzA4NzAzNTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-sanitizers", "name": "A-sanitizers", "color": "f7e101", "default": false, "description": "Area: Sanitizers for correctness and code quality."}, {"id": 1118559391, "node_id": "MDU6TGFiZWwxMTE4NTU5Mzkx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-doctests", "name": "A-doctests", "color": "f7e101", "default": false, "description": "Area: Documentation tests, run by rustdoc"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-02-04T19:55:53Z", "updated_at": "2022-05-12T18:24:27Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "While creating/maintaining C++ -> Rust bindings using different sanitizers is very useful. [Recently we added example code](https://github.com/wasmx/fizzy/pull/724) to module-level rustdoc comments for documentation purposes.\r\n\r\nIt turns out that building doc testing using ASan is not possible and likely the ASan library is not passed as a linker flag to the built rustdoc binaries.\r\n\r\nAn example source is the following (this is `src/lib.rs` and I named the create `rustdoc_asan`):\r\n```rust\r\n//! ```\r\n//! extern crate rustdoc_asan;\r\n//! fn main() {\r\n//!   rustdoc_asan::test();\r\n//! }\r\n//! ```\r\n\r\npub fn test() {}\r\n```\r\n\r\nAnd the following is the linking error:\r\n```\r\n$ RUSTFLAGS=\"-Z sanitizer=address\" cargo +nightly test \r\n   Compiling rustdoc-asan v0.1.0 (/Users/alex/Projects/rustdoc-asan)\r\n    Finished test [unoptimized + debuginfo] target(s) in 3.24s\r\n     Running /Users/alex/Projects/rustdoc-asan/target/debug/deps/rustdoc_asan-9b62e53181c3a5a1\r\n\r\nrunning 0 tests\r\n\r\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\r\n\r\n   Doc-tests rustdoc-asan\r\n\r\nrunning 1 test\r\ntest src/lib.rs - (line 1) ... FAILED\r\n\r\nfailures:\r\n\r\n---- src/lib.rs - (line 1) stdout ----\r\nerror: linking with `cc` failed: exit code: 1\r\n  |\r\n  = note: \"cc\" \"-m64\" \"-arch\" \"x86_64\" \"-L\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/var/folders/17/48vzfp593nz15n_6qczdkptr0000gn/T/rustdoctestXBL9Ea/rust_out.rust_out.7rcbfp3g-cgu.0.rcgu.o\" \"-o\" \"/var/folders/17/48vzfp593nz15n_6qczdkptr0000gn/T/rustdoctestXBL9Ea/rust_out\" \"/var/folders/17/48vzfp593nz15n_6qczdkptr0000gn/T/rustdoctestXBL9Ea/rust_out.33dyzt1ekirinwy8.rcgu.o\" \"-Wl,-dead_strip\" \"-nodefaultlibs\" \"-L\" \"/Users/alex/Projects/rustdoc-asan/target/debug/deps\" \"-L\" \"/Users/alex/Projects/rustdoc-asan/target/debug/deps\" \"-L\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib\" \"/Users/alex/Projects/rustdoc-asan/target/debug/deps/librustdoc_asan-9d4abc0162e9d28e.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libstd-ab84b4dcbfd8d769.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libpanic_unwind-eef208cbe41d8926.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libobject-eb72097f4095ae1c.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libaddr2line-2b7555b78fcc6194.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libgimli-304bde8dafaa97b5.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_demangle-67199606c0281c89.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libhashbrown-5a98e4a568df86a7.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_std_workspace_alloc-2422f4c55a37e801.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libunwind-3fa281be56d3f774.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcfg_if-59a9c8519d392d15.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liblibc-50e4694516c58a71.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc-bf6a3bfdc4a5883c.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/librustc_std_workspace_core-8357f853e5f39333.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcore-80c77ff1434731cf.rlib\" \"/Users/alex/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/libcompiler_builtins-7464f80379472ea6.rlib\" \"-lSystem\" \"-lresolv\" \"-lc\" \"-lm\"\r\n  = note: Undefined symbols for architecture x86_64:\r\n            \"___asan_init\", referenced from:\r\n                _asan.module_ctor in librustdoc_asan-9d4abc0162e9d28e.rlib(rustdoc_asan-9d4abc0162e9d28e.1lf8fxf7uh11q5pf.rcgu.o)\r\n            \"___asan_version_mismatch_check_v8\", referenced from:\r\n                _asan.module_ctor in librustdoc_asan-9d4abc0162e9d28e.rlib(rustdoc_asan-9d4abc0162e9d28e.1lf8fxf7uh11q5pf.rcgu.o)\r\n          ld: symbol(s) not found for architecture x86_64\r\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n          \r\n\r\nerror: aborting due to previous error\r\n\r\nCouldn't compile the test.\r\n\r\nfailures:\r\n    src/lib.rs - (line 1)\r\n\r\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.52s\r\n\r\nerror: test failed, to rerun pass '--doc'\r\n```\r\n\r\nInterestingly using the leak sanitizer compiles (`RUSTFLAGS=\"-Z sanitizer=leak\" cargo +nightly test `). While the above output is on macOS, in our project the CI runs it on Linux x86-64 where the same problem happens.\r\n\r\n(For anyone interested, our temporary solutions is disabling the execution of rustdoc tests on the ASan build by adding the `doctest=false` flag to `Cargo.toml`. Interestingly cargo only has a `test --doc` option to only run it, but no commandline option to avoid running it.)\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n$ rustc +nightly --version --verbose\r\nrustc 1.51.0-nightly (04caa632d 2021-01-30)\r\nbinary: rustc\r\ncommit-hash: 04caa632dd10c2bf64b69524c7f9c4c30a436877\r\ncommit-date: 2021-01-30\r\nhost: x86_64-apple-darwin\r\nrelease: 1.51.0-nightly\r\nLLVM version: 11.0.1\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81759/timeline", "performed_via_github_app": null, "state_reason": null}