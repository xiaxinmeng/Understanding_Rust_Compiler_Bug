{"url": "https://api.github.com/repos/rust-lang/rust/issues/35237", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/35237/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/35237/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/35237/events", "html_url": "https://github.com/rust-lang/rust/issues/35237", "id": 169035076, "node_id": "MDU6SXNzdWUxNjkwMzUwNzY=", "number": 35237, "title": "Trait inheritance gives unexpected compile error when inherited traits use associated types defined in trait", "user": {"login": "Osspial", "id": 16296823, "node_id": "MDQ6VXNlcjE2Mjk2ODIz", "avatar_url": "https://avatars.githubusercontent.com/u/16296823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Osspial", "html_url": "https://github.com/Osspial", "followers_url": "https://api.github.com/users/Osspial/followers", "following_url": "https://api.github.com/users/Osspial/following{/other_user}", "gists_url": "https://api.github.com/users/Osspial/gists{/gist_id}", "starred_url": "https://api.github.com/users/Osspial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Osspial/subscriptions", "organizations_url": "https://api.github.com/users/Osspial/orgs", "repos_url": "https://api.github.com/users/Osspial/repos", "events_url": "https://api.github.com/users/Osspial/events{/privacy}", "received_events_url": "https://api.github.com/users/Osspial/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-08-03T02:44:54Z", "updated_at": "2021-03-07T19:42:43Z", "closed_at": "2021-03-07T19:42:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "If one defines a trait such that inherited traits involve one of the trait's associated types, the compiler throws a \"cyclic reference\" error when one does not need to be thrown. Take the following code:\n\n``` rust\ntrait Foo: AsRef<Self::Bar> {\n    type Bar;\n}\n```\n\nwhich throws this error:\n\n```\nerror: unsupported cyclic reference between types/traits detected [--explain E0391]\n --> <anon>:1:18\n1 |> trait Foo: AsRef<Self::Bar> {\n  |>                  ^^^^^^^^^\nnote: the cycle begins when computing the supertraits of `Foo`...\nnote: ...which then again requires computing the supertraits of `Foo`, completing the cycle.\n\nerror: aborting due to previous error\n```\n\nThis error, while it accurately describes what is happening inside of the compiler, does not actually provide any way to fix the error. Even worse, the situation where the error arises isn't consistent with how associated types work in other areas of the trait syntax.\n\nMaking the above code work is fairly simple, although it does unnecessarily clutter the trait definition. The following compiles:\n\n``` rust\ntrait Foo: AsRef<<Self as Foo>::Bar> {\n    type Bar;\n}\n```\n\nHowever, this is not an immediately obvious fix due to how referencing associated types work in other areas of the trait syntax. In all other areas, the `as` syntax is unnecessary if the associated type is a member of the trait being implemented, which is true of the `Bar` type, only requiring the usage of `as` if the associated type is part of a supertrait. For example, take the following trait `Baz` with the associated type `A`:\n\n``` rust\ntrait Baz {\n    type A;\n    fn do_something(&self) -> Self::A;\n}\n```\n\nThis compiles, as expected. The compiler correctly infers that, because of the lack of `as` syntax, the programmer is referring to a type belonging to the `Baz` trait. The programmer would also expect using `Self::A` to work when defining trait inheritance, although this is currently not the case. However, this _should_ be the case - the compiler should, before throwing the \"cyclic reference\" error, scan the current trait for the given associated type and only throw the error if a type is not detected, as it does in other areas of trait definitions. The error should also outline the solution to the problem, suggesting that the programmer use the `as` syntax to specify the supertrait that the associated type is coming from.\n## Meta\n\nRust version:\n\n```\nrustc 1.10.0 (cfcb716cf 2016-07-03)\nbinary: rustc\ncommit-hash: cfcb716cf0961a7e3a4eceac828d94805cf8140b\ncommit-date: 2016-07-03\nhost: x86_64-unknown-linux-gnu\nrelease: 1.10.0\n```\n\ncc @jonathandturner @arielb1 \n", "closed_by": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/35237/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/35237/timeline", "performed_via_github_app": null, "state_reason": "completed"}