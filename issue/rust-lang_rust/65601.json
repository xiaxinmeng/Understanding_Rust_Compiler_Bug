{"url": "https://api.github.com/repos/rust-lang/rust/issues/65601", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/65601/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/65601/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/65601/events", "html_url": "https://github.com/rust-lang/rust/issues/65601", "id": 509473616, "node_id": "MDU6SXNzdWU1MDk0NzM2MTY=", "number": 65601, "title": "Stdin build silently ignores non-inline mod items", "user": {"login": "mystor", "id": 1261662, "node_id": "MDQ6VXNlcjEyNjE2NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1261662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mystor", "html_url": "https://github.com/mystor", "followers_url": "https://api.github.com/users/mystor/followers", "following_url": "https://api.github.com/users/mystor/following{/other_user}", "gists_url": "https://api.github.com/users/mystor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mystor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mystor/subscriptions", "organizations_url": "https://api.github.com/users/mystor/orgs", "repos_url": "https://api.github.com/users/mystor/repos", "events_url": "https://api.github.com/users/mystor/events{/privacy}", "received_events_url": "https://api.github.com/users/mystor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 27424086, "node_id": "MDU6TGFiZWwyNzQyNDA4Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-parser", "name": "A-parser", "color": "f7e101", "default": false, "description": "Area: The parsing of Rust source code to an AST."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-19T16:06:57Z", "updated_at": "2019-11-20T13:11:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Missing external modules don't report a build error when a crate is built from stdin.\r\n\r\n**Expected**: When parsing an external submodule from stdin, a compiler error (or warning) is emitted noting that external submodules are not supported for stdio crates.\r\n\r\n**Actual**: No diagnostics are emitted and an empty submodule is implicitly inserted.\r\n\r\nGenerally if a `mod` statement references a file which does not exist, an E0583 compile error will be emitted. However, when building a crate from stdin, no relative filesystem is present, yet no compile errors are emitted, even with explicit `#[path=\"x\"]` attributes. Instead they are implicitly substituted with empty inline modules.\r\n\r\n```bash\r\n# Surprising stdin cases\r\n$ echo 'mod x;' | rustc --crate-type=rlib -  # Builds\r\n$ echo '#[path=\"/y\"] mod x;' | rustc --crate-type=rlib -  # Builds\r\n\r\n# Working file case\r\n$ echo 'mod x;' > y.rs\r\n$ rustc --crate-type=rlib y.rs\r\nerror[E0583]: file not found for module `x`\r\n --> y.rs:1:5\r\n[...]\r\n```\r\n\r\nI'm not super familiar with rustc, so this might not be handy, but I'm guessing this is caused by the `Parser::recurse_into_file_modules` flag being unset when parsing from a string rather than a file ([`rustc_interface::passes::parse`](https://github.com/rust-lang/rust/blob/e5b8c118a38e8f3319813de56386bf43751582d7/src/librustc_interface/passes.rs#L67-L70) -> [`syntax::parse::parse_crate_from_source_str`](https://github.com/rust-lang/rust/blob/e5b8c118a38e8f3319813de56386bf43751582d7/src/libsyntax/parse/mod.rs#L73-L76) -> [`syntax::parse::new_parser_from_source_str`](https://github.com/rust-lang/rust/blob/e5b8c118a38e8f3319813de56386bf43751582d7/src/libsyntax/parse/mod.rs#L103-L112)), leading to a dummy module [being inserted](https://github.com/rust-lang/rust/blob/e5b8c118a38e8f3319813de56386bf43751582d7/src/libsyntax/parse/parser/module.rs#L56-L77) rather than trying to access the filesystem or emit an error during the parse. \r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/65601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/65601/timeline", "performed_via_github_app": null, "state_reason": null}