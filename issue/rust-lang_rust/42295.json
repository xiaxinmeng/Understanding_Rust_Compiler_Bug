{"url": "https://api.github.com/repos/rust-lang/rust/issues/42295", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42295/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42295/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42295/events", "html_url": "https://github.com/rust-lang/rust/issues/42295", "id": 232040074, "node_id": "MDU6SXNzdWUyMzIwNDAwNzQ=", "number": 42295, "title": "Slow backtrace on panic, nightly 2017-05-28", "user": {"login": "koivunej", "id": 1081634, "node_id": "MDQ6VXNlcjEwODE2MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1081634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koivunej", "html_url": "https://github.com/koivunej", "followers_url": "https://api.github.com/users/koivunej/followers", "following_url": "https://api.github.com/users/koivunej/following{/other_user}", "gists_url": "https://api.github.com/users/koivunej/gists{/gist_id}", "starred_url": "https://api.github.com/users/koivunej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koivunej/subscriptions", "organizations_url": "https://api.github.com/users/koivunej/orgs", "repos_url": "https://api.github.com/users/koivunej/repos", "events_url": "https://api.github.com/users/koivunej/events{/privacy}", "received_events_url": "https://api.github.com/users/koivunej/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-29T14:37:52Z", "updated_at": "2020-03-30T06:24:48Z", "closed_at": "2020-03-30T06:24:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently noticed that my app startup is much slower on `--release` builds than on debug builds. Starting my app on an empty data directory triggers an error which is mapped into an `error_chain` type. In this issue I am showing backtraces from a startup which fails instantly at the first file open which I modified to use `unwrap()` instead of errors.\r\n\r\nI have `debug = true` for `[profile.release]` in my Cargo.toml. I initially suspected this was a bug with `error_chain`, but this problem manifests even with when bypassing error_chain and calling `unwrap` directly to panic.\r\n\r\nWhen panicking, all other frames are printed fast, but the following (full backtraces in the end):\r\n\r\n```\r\n  10: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::next\r\n             at /checkout/src/libcore/result.rs:737\r\n             at src/db/checkpoint.rs:183\r\n             at /checkout/src/libcore/ops.rs:2633\r\n             at /checkout/src/libcore/ops.rs:2731\r\n             at /checkout/src/libcore/option.rs:398\r\n             at /checkout/src/libcore/iter/mod.rs:1065\r\n             at /checkout/src/libcore/iter/mod.rs:1065\r\n```\r\n\r\nFirst line of output above takes a bit longer to output, but the `at /checkout/src/libcore/result:737` takes more than ten seconds to print. After that the rest of the output is instant.\r\n\r\nThere is a possibly related rustc issue [#37477](https://github.com/rust-lang/rust/issues/37477). When profiling with `perf record -g --call-graph dwarf -F 555` the outermost (\"Children\") 96% of time goes to `read_function_entry` and the most self time is used by `__rbt_backtrace_alloc`.\r\n\r\nThere is no problem when `RUST_BACKTRACE=0` or when running non-optimized binary (Cargo settings for dev profile are the defaults).\r\n\r\n<details>\r\n<summary>Timings</summary>\r\n\r\n```\r\n$ time RUST_BACKTRACE=0 cargo run --release &>/dev/null\r\nreal    0m0.361s\r\nuser    0m0.288s\r\nsys     0m0.064s\r\n$ time RUST_BACKTRACE=1 cargo run --release &>/dev/null\r\nreal    0m22.380s\r\nuser    0m22.216s\r\nsys     0m0.144s\r\n$ time RUST_BACKTRACE=0 cargo run &>/dev/null\r\nreal    0m0.301s\r\nuser    0m0.260s\r\nsys     0m0.032s\r\n$ time RUST_BACKTRACE=1 cargo run &>/dev/null\r\nreal    0m0.899s\r\nuser    0m0.828s\r\nsys     0m0.060s\r\n```\r\n\r\n</details>\r\n\r\n\r\nI tried this code: I have been unable to produce a minimized example and my current code base is not open source. My `--release` optimized binary is 44M and I link to a pretty high number (~37) of crates. Suggestions on generating a minimized test case are welcome, though I suspect it is required to have a large binary.\r\n\r\nI expected to see this happen: Fast backtrace\r\n\r\nInstead, this happened: Slow backtrace (20s compared to 0.3s)\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n\r\n```\r\nrustc 1.19.0-nightly (d47cf08d5 2017-05-28)\r\nbinary: rustc\r\ncommit-hash: d47cf08d57d881f34f9724edfb0b3b93209af202\r\ncommit-date: 2017-05-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.19.0-nightly\r\nLLVM version: 4.0\r\n```\r\n\r\n```\r\n$ env | grep -e RUSTFLAGS -e CARGO_INCREMENTAL\r\nRUSTFLAGS=\r\nCARGO_INCREMENTAL=0\r\n```\r\n\r\nFirst noticed with `rustc 1.19.0-nightly (5f3966864 2017-05-25)`, then upgraded to latest. Same behaviour when `gold` is used as linker. Same behaviour with incremental compilation.\r\n\r\nBacktrace is slow also with `rustc 1.18.0-nightly (2564711e8 2017-04-04)`.\r\n\r\n<details>\r\n<summary>Backtrace: without `--release`</summary>\r\n\r\n```\r\nthread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 13, message: \"Permission denied\" } }', /checkout/src/libcore/result.rs:859\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:355\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:371\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:549\r\n   5: std::panicking::begin_panic\r\n             at /checkout/src/libstd/panicking.rs:511\r\n   6: std::panicking::begin_panic_fmt\r\n             at /checkout/src/libstd/panicking.rs:495\r\n   7: rust_begin_unwind\r\n             at /checkout/src/libstd/panicking.rs:471\r\n   8: core::panicking::panic_fmt\r\n             at /checkout/src/libcore/panicking.rs:69\r\n   9: core::result::unwrap_failed\r\n             at /checkout/src/libcore/macros.rs:29\r\n  10: <core::result::Result<T, E>>::unwrap\r\n             at /checkout/src/libcore/result.rs:737\r\n  11: txeng::db::checkpoint::FileCheckpoint::open_or_create\r\n             at src/db/checkpoint.rs:183\r\n  12: core::ops::FnMut::call_mut\r\n             at /checkout/src/libcore/ops.rs:2633\r\n  13: core::ops::impls::<impl core::ops::FnOnce<A> for &'a mut F>::call_once\r\n             at /checkout/src/libcore/ops.rs:2731\r\n  14: <core::option::Option<T>>::map\r\n             at /checkout/src/libcore/option.rs:398\r\n  15: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::next\r\n             at /checkout/src/libcore/iter/mod.rs:1065\r\n  16: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::next\r\n             at /checkout/src/libcore/iter/mod.rs:1065\r\n  17: <txeng::db::Database<T>>::open_or_create\r\n             at src/db/mod.rs:265\r\n  18: txeng::node::serve\r\n             at src/node/mod.rs:160\r\n  19: txeng::node::spawn::{{closure}}\r\n             at src/node/mod.rs:52\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>Backtrace with `--release`</summary>\r\n\r\n```\r\nthread '<unnamed>' panicked at 'called `Result::unwrap()` on an `Err` value: Error { repr: Os { code: 13, message: \"Permission denied\" } }', /checkout/src/libcore/result.rs:859\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at /checkout/src/libstd/sys_common/backtrace.rs:60\r\n             at /checkout/src/libstd/panicking.rs:355\r\n   3: std::panicking::default_hook\r\n             at /checkout/src/libstd/panicking.rs:371\r\n   4: std::panicking::rust_panic_with_hook\r\n             at /checkout/src/libstd/panicking.rs:549\r\n   5: std::panicking::begin_panic\r\n             at /checkout/src/libstd/panicking.rs:511\r\n   6: std::panicking::begin_panic_fmt\r\n             at /checkout/src/libstd/panicking.rs:495\r\n   7: rust_begin_unwind\r\n             at /checkout/src/libstd/panicking.rs:471\r\n   8: core::panicking::panic_fmt\r\n             at /checkout/src/libcore/panicking.rs:69\r\n   9: core::result::unwrap_failed\r\n             at /checkout/src/libcore/macros.rs:29\r\n  10: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::next\r\n             at /checkout/src/libcore/result.rs:737\r\n             at src/db/checkpoint.rs:183\r\n             at /checkout/src/libcore/ops.rs:2633\r\n             at /checkout/src/libcore/ops.rs:2731\r\n             at /checkout/src/libcore/option.rs:398\r\n             at /checkout/src/libcore/iter/mod.rs:1065\r\n             at /checkout/src/libcore/iter/mod.rs:1065\r\n  11: <txeng::db::Database<T>>::open_or_create\r\n             at src/db/mod.rs:265\r\n  12: txeng::node::serve\r\n             at src/node/mod.rs:160\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>diff -u dev.backtrace release.backtrace</summary>\r\n\r\n```\r\n--- dev.backtrace       2017-05-29 16:39:08.335927763 +0300\r\n+++ release.backtrace   2017-05-29 16:39:09.419952077 +0300\r\n@@ -22,23 +22,15 @@\r\n              at /checkout/src/libcore/panicking.rs:69\r\n    9: core::result::unwrap_failed\r\n              at /checkout/src/libcore/macros.rs:29\r\n-  10: <core::result::Result<T, E>>::unwrap\r\n+  10: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::next\r\n              at /checkout/src/libcore/result.rs:737\r\n-  11: txeng::db::checkpoint::FileCheckpoint::open_or_create\r\n              at src/db/checkpoint.rs:183\r\n-  12: core::ops::FnMut::call_mut\r\n              at /checkout/src/libcore/ops.rs:2633\r\n-  13: core::ops::impls::<impl core::ops::FnOnce<A> for &'a mut F>::call_once\r\n              at /checkout/src/libcore/ops.rs:2731\r\n-  14: <core::option::Option<T>>::map\r\n              at /checkout/src/libcore/option.rs:398\r\n-  15: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::next\r\n              at /checkout/src/libcore/iter/mod.rs:1065\r\n-  16: <core::iter::Map<I, F> as core::iter::iterator::Iterator>::next\r\n              at /checkout/src/libcore/iter/mod.rs:1065\r\n-  17: <txeng::db::Database<T>>::open_or_create\r\n+  11: <txeng::db::Database<T>>::open_or_create\r\n              at src/db/mod.rs:265\r\n-  18: txeng::node::serve\r\n+  12: txeng::node::serve\r\n              at src/node/mod.rs:160\r\n-  19: txeng::node::spawn::{{closure}}\r\n-             at src/node/mod.rs:52\r\n```\r\n\r\n</details>", "closed_by": {"login": "koivunej", "id": 1081634, "node_id": "MDQ6VXNlcjEwODE2MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1081634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koivunej", "html_url": "https://github.com/koivunej", "followers_url": "https://api.github.com/users/koivunej/followers", "following_url": "https://api.github.com/users/koivunej/following{/other_user}", "gists_url": "https://api.github.com/users/koivunej/gists{/gist_id}", "starred_url": "https://api.github.com/users/koivunej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koivunej/subscriptions", "organizations_url": "https://api.github.com/users/koivunej/orgs", "repos_url": "https://api.github.com/users/koivunej/repos", "events_url": "https://api.github.com/users/koivunej/events{/privacy}", "received_events_url": "https://api.github.com/users/koivunej/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42295/timeline", "performed_via_github_app": null, "state_reason": "completed"}