{"url": "https://api.github.com/repos/rust-lang/rust/issues/94378", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/94378/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/94378/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/94378/events", "html_url": "https://github.com/rust-lang/rust/issues/94378", "id": 1150934866, "node_id": "I_kwDOAAsO6M5Emd9S", "number": 94378, "title": "ICE: collect_error_for_expanding_node() could not find error for var  '_#0r in universe", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-25T22:31:36Z", "updated_at": "2022-06-08T11:04:21Z", "closed_at": "2022-06-08T11:04:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nfn f<'a, 'b, 'd, 'e> (\r\n    x: for<'c> fn(\r\n        fn(&'c fn(&'c ())),\r\n        fn(&'c fn(&'c ())),\r\n        fn(&'c fn(&'c ())),\r\n        fn(&'c fn(&'c ())),\r\n    )\r\n) -> fn(\r\n        fn(&'a fn(&'d ())),\r\n        fn(&'b fn(&'d ())),\r\n        fn(&'a fn(&'e ())),\r\n        fn(&'b fn(&'e ())),\r\n) {\r\n    x\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0-nightly (4b043faba 2022-02-24)\r\nbinary: rustc\r\ncommit-hash: 4b043faba34ccc053a4d0110634c323f6c03765e\r\ncommit-date: 2022-02-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0-nightly\r\nLLVM version: 14.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: function is never used: `f`\r\n --> ./11637.rs:1:4\r\n  |\r\n1 | fn f<'a, 'b, 'd, 'e> (\r\n  |    ^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: 1 warning emitted\r\n\r\nerror: internal compiler error: collect_error_for_expanding_node() could not find error for var '_#0r in universe U0, lower_bounds=[\r\n                                    RegionAndOrigin(ReEarlyBound(1, 'b),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(0, 'a),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(1, 'b),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(0, 'a),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                ], upper_bounds=[\r\n                                    RegionAndOrigin(ReEarlyBound(3, 'e),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(2, 'd),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(3, 'e),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(2, 'd),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                ]\r\n  --> ./11637.rs:14:5\r\n   |\r\n14 |     x\r\n   |     ^\r\n   |\r\n   = note: delayed at compiler/rustc_infer/src/infer/lexical_region_resolve/mod.rs:748:25\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nfn f<'a, 'b, 'd, 'e> (\r\n    x: for<'c> fn(\r\n        fn(&'c fn(&'c ())),\r\n        fn(&'c fn(&'c ())),\r\n        fn(&'c fn(&'c ())),\r\n        fn(&'c fn(&'c ())),\r\n    )\r\n) -> fn(\r\n        fn(&'a fn(&'d ())),\r\n        fn(&'b fn(&'d ())),\r\n        fn(&'a fn(&'e ())),\r\n        fn(&'b fn(&'e ())),\r\n) {\r\n    x\r\n}\r\n\r\nfn main() {}\r\n~/vcs/github/fuzzgen on \ue0a0 master [?] is \ud83d\udce6 v0.1.0 via \ud83e\udd80 v1.61.0-nightly\r\n\u2726 at 23:29:32 \u276f rustc ./11637.rs\r\nwarning: function is never used: `f`\r\n --> ./11637.rs:1:4\r\n  |\r\n1 | fn f<'a, 'b, 'd, 'e> (\r\n  |    ^\r\n  |\r\n  = note: `#[warn(dead_code)]` on by default\r\n\r\nwarning: 1 warning emitted\r\n\r\nerror: internal compiler error: collect_error_for_expanding_node() could not find error for var '_#0r in universe U0, lower_bounds=[\r\n                                    RegionAndOrigin(ReEarlyBound(1, 'b),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(0, 'a),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(1, 'b),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(0, 'a),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                ], upper_bounds=[\r\n                                    RegionAndOrigin(ReEarlyBound(3, 'e),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(2, 'd),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(3, 'e),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                    RegionAndOrigin(ReEarlyBound(2, 'd),Subtype(TypeTrace { cause: ObligationCause { span: ./11637.rs:14:5: 14:6 (#0), body_id: HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 6 }, code: Some(BlockTailExpression(HirId { owner: DefId(0:3 ~ 11637[4988]::f), local_id: 5 })) }, values: Terms(ExpectedFound { expected: Ty(fn(fn(&'a fn(&'d ())), fn(&'b fn(&'d ())), fn(&'a fn(&'e ())), fn(&'b fn(&'e ())))), found: Ty(for<'c> fn(for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())), for<'c> fn(&'c for<'c> fn(&'c ())))) }) })),\r\n                                ]\r\n  --> ./11637.rs:14:5\r\n   |\r\n14 |     x\r\n   |     ^\r\n   |\r\n   = note: delayed at compiler/rustc_infer/src/infer/lexical_region_resolve/mod.rs:748:25\r\n\r\nthread 'rustc' panicked at 'no errors encountered even though `delay_span_bug` issued', compiler/rustc_errors/src/lib.rs:1176:13\r\nstack backtrace:\r\n   0:     0x7fa59dab7d4c - std::backtrace_rs::backtrace::libunwind::trace::h853a1389f6e5e745\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\r\n   1:     0x7fa59dab7d4c - std::backtrace_rs::backtrace::trace_unsynchronized::h141fba7f3343285a\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\r\n   2:     0x7fa59dab7d4c - std::sys_common::backtrace::_print_fmt::h3413d0b0d4b31c4c\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/sys_common/backtrace.rs:66:5\r\n   3:     0x7fa59dab7d4c - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hbc867a15ccd0341f\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/sys_common/backtrace.rs:45:22\r\n   4:     0x7fa59db179fc - core::fmt::write::h35157148513e92bc\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/core/src/fmt/mod.rs:1190:17\r\n   5:     0x7fa59daa7e78 - std::io::Write::write_fmt::hc5517132c5cecddc\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/io/mod.rs:1657:15\r\n   6:     0x7fa59dabbd27 - std::sys_common::backtrace::_print::hc5f683d445b22529\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/sys_common/backtrace.rs:48:5\r\n   7:     0x7fa59dabbd27 - std::sys_common::backtrace::print::hd841ed3190824cc9\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/sys_common/backtrace.rs:35:9\r\n   8:     0x7fa59dabbd27 - std::panicking::default_hook::{{closure}}::h9a0c56b9dbc35012\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/panicking.rs:295:22\r\n   9:     0x7fa59dabb9df - std::panicking::default_hook::hc46807a97c7de333\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/panicking.rs:314:9\r\n  10:     0x7fa59e24d0d1 - rustc_driver[442ed871d20551d1]::DEFAULT_HOOK::{closure#0}::{closure#0}\r\n  11:     0x7fa59dabc5f6 - std::panicking::rust_panic_with_hook::h1ad2fcf54bcf9bb5\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/panicking.rs:702:17\r\n  12:     0x7fa59dabc2a7 - std::panicking::begin_panic_handler::{{closure}}::hf8003c262b110425\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/panicking.rs:588:13\r\n  13:     0x7fa59dab8214 - std::sys_common::backtrace::__rust_end_short_backtrace::hba6e0d383beff798\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/sys_common/backtrace.rs:138:18\r\n  14:     0x7fa59dabbfb9 - rust_begin_unwind\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/panicking.rs:584:5\r\n  15:     0x7fa59da84943 - core::panicking::panic_fmt::h949e0ccd2ca80abd\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/core/src/panicking.rs:142:14\r\n  16:     0x7fa59f2ca4fc - core[a2af605994515733]::panicking::panic_display::<&str>\r\n  17:     0x7fa5a09372ff - <rustc_errors[1b480dc045645b1a]::HandlerInner>::flush_delayed\r\n  18:     0x7fa5a09358da - <rustc_errors[1b480dc045645b1a]::HandlerInner as core[a2af605994515733]::ops::drop::Drop>::drop\r\n  19:     0x7fa5a005b488 - core[a2af605994515733]::ptr::drop_in_place::<rustc_session[94f6c5c92635dd6]::parse::ParseSess>\r\n  20:     0x7fa5a005d69a - <alloc[712883fc59a62f7]::rc::Rc<rustc_session[94f6c5c92635dd6]::session::Session> as core[a2af605994515733]::ops::drop::Drop>::drop\r\n  21:     0x7fa5a004579c - core[a2af605994515733]::ptr::drop_in_place::<rustc_interface[65caae14b4217ef3]::interface::Compiler>\r\n  22:     0x7fa5a004637c - rustc_span[cac29f2f15677c0e]::with_source_map::<core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>, rustc_interface[65caae14b4217ef3]::interface::create_compiler_and_run<core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>, rustc_driver[442ed871d20551d1]::run_compiler::{closure#1}>::{closure#1}>\r\n  23:     0x7fa5a00439b1 - rustc_interface[65caae14b4217ef3]::interface::create_compiler_and_run::<core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>, rustc_driver[442ed871d20551d1]::run_compiler::{closure#1}>\r\n  24:     0x7fa5a002f372 - <scoped_tls[876471c7b20f8e0c]::ScopedKey<rustc_span[cac29f2f15677c0e]::SessionGlobals>>::set::<rustc_interface[65caae14b4217ef3]::interface::run_compiler<core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>, rustc_driver[442ed871d20551d1]::run_compiler::{closure#1}>::{closure#0}, core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>>\r\n  25:     0x7fa5a002ec2d - std[2a6da251afaa3124]::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface[65caae14b4217ef3]::util::run_in_thread_pool_with_globals<rustc_interface[65caae14b4217ef3]::interface::run_compiler<core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>, rustc_driver[442ed871d20551d1]::run_compiler::{closure#1}>::{closure#0}, core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>>::{closure#0}, core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>>\r\n  26:     0x7fa5a002d419 - <<std[2a6da251afaa3124]::thread::Builder>::spawn_unchecked_<rustc_interface[65caae14b4217ef3]::util::run_in_thread_pool_with_globals<rustc_interface[65caae14b4217ef3]::interface::run_compiler<core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>, rustc_driver[442ed871d20551d1]::run_compiler::{closure#1}>::{closure#0}, core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>>::{closure#0}, core[a2af605994515733]::result::Result<(), rustc_errors[1b480dc045645b1a]::ErrorReported>>::{closure#1} as core[a2af605994515733]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n  27:     0x7fa59dac8183 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::hbda7b2dd6cb05b7b\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/alloc/src/boxed.rs:1854:9\r\n  28:     0x7fa59dac8183 - <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once::h4e7c4e55f1ee6074\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/alloc/src/boxed.rs:1854:9\r\n  29:     0x7fa59dac8183 - std::sys::unix::thread::Thread::new::thread_start::h272cda2d6cad9954\r\n                               at /rustc/4b043faba34ccc053a4d0110634c323f6c03765e/library/std/src/sys/unix/thread.rs:108:17\r\n  30:     0x7fa59d9cd259 - start_thread\r\n  31:     0x7fa59d8e95e3 - __GI___clone\r\n  32:                0x0 - <unknown>\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.61.0-nightly (4b043faba 2022-02-24) running on x86_64-unknown-linux-gnu\r\n\r\nquery stack during panic:\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/94378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/94378/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}