{"url": "https://api.github.com/repos/rust-lang/rust/issues/56058", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56058/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56058/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56058/events", "html_url": "https://github.com/rust-lang/rust/issues/56058", "id": 382034339, "node_id": "MDU6SXNzdWUzODIwMzQzMzk=", "number": 56058, "title": "Run proc macro invocations in separate threads.", "user": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 64037154, "node_id": "MDU6TGFiZWw2NDAzNzE1NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-compiletime", "name": "I-compiletime", "color": "e11d21", "default": false, "description": "Problems and improvements with respect to compile times."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-11-19T02:29:57Z", "updated_at": "2022-12-07T22:34:39Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "#49219 introduces `proc_macro::bridge::server::{ExecutionStrategy,SameThread,CrossThread}`.\r\n`SameThread` had to be used because `CrossThread` was a significant performance regression.\r\n\r\nIdeally, we'd use `CrossThread`, which spawns a thread for each invocation, to prevent (and discourage) proc macros from using TLS for state between invocations.\r\n\r\nBut we'd have to figure out how to make it not regress performance too much, if at all possible.\r\n(it could be the use of channels, which are overkill since they never have more than one value)\r\n\r\ncc @dtolnay @alexcrichton @petrochenkov \r\n\r\n<hr/>\r\n\r\n(**TODO**: update with regressions, if any, after the cross-thread crater run finishes on #49219)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56058/timeline", "performed_via_github_app": null, "state_reason": null}