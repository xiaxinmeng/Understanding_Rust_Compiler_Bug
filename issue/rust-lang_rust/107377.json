{"url": "https://api.github.com/repos/rust-lang/rust/issues/107377", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107377/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107377/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107377/events", "html_url": "https://github.com/rust-lang/rust/issues/107377", "id": 1560073918, "node_id": "I_kwDOAAsO6M5c_Na-", "number": 107377, "title": "Associated types appear to cover or hide generic parameters in orphan rules checking", "user": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 267612997, "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound", "name": "I-unsound", "color": "e11d21", "default": false, "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 4917350639, "node_id": "LA_kwDOAAsO6M8AAAABJRjQ7w", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coherence", "name": "A-coherence", "color": "f7e101", "default": false, "description": "Area: Coherence"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2023-01-27T16:44:25Z", "updated_at": "2023-01-31T09:55:09Z", "closed_at": "2023-01-27T17:07:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here\u2019s a soundness issue in the orphan rules checker. @rustbot label I-unsound, A-traits, A-associated-items, T-compiler.\r\n\r\nOne crate `foo` defines\r\n```rs\r\npub trait Trait<Arg> {}\r\n```\r\n\r\nIf a downstream crate uses `foo` and tries to implement\r\n```rs\r\nuse foo::Trait;\r\n\r\npub struct Local<T>(T);\r\n\r\nimpl<T> Trait<Local<T>> for T {}\r\n```\r\nit fails as expected\r\n```\r\nerror[E0210]: type parameter `T` must be covered by another type when it appears before the first local type (`Local<T>`)\r\n --> dep1/src/lib.rs:5:6\r\n  |\r\n5 | impl<T> Trait<Local<T>> for T {}\r\n  |      ^ type parameter `T` must be covered by another type when it appears before the first local type (`Local<T>`)\r\n  |\r\n  = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local, and no uncovered type parameters appear before that first local type\r\n  = note: in this case, 'before' refers to the following order: `impl<..> ForeignTrait<T1, ..., Tn> for T0`, where `T0` is the first and `Tn` is the last\r\n```\r\nand rightfully so, since other crates depending on `foo` might define an `impl<T> Trait<T> for OtherLocal {}` that overlaps.\r\n\r\nBut we can circumvent this error using a trait with an associated type, violating the orphan rules!\r\n```rs\r\nuse foo::Trait;\r\n\r\npub struct Local<T>(T);\r\n\r\nimpl<T> Trait<Local<T>> for <T as WithAssoc>::Assoc {}\r\n\r\n// implementing `<T as WithAssoc>::Assoc` to be `T`:\r\n\r\npub trait WithAssoc {\r\n    type Assoc;\r\n}\r\n\r\nimpl<T> WithAssoc for T {\r\n    type Assoc = T;\r\n}\r\n```\r\n(***compiles fine***)\r\n\r\nI have only managed to turn this into an ICE during code generation so far, not UB at run-time, but I would be surprised if there wasn\u2019t a way to *actually* exploit this bug, hence the label. I\u2019ll look back into this in the next few days and either post a soundness exploit, or at least the way to achieve ICE.", "closed_by": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107377/timeline", "performed_via_github_app": null, "state_reason": "completed"}