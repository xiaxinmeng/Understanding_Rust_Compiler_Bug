{"url": "https://api.github.com/repos/rust-lang/rust/issues/84491", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84491/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84491/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84491/events", "html_url": "https://github.com/rust-lang/rust/issues/84491", "id": 866360212, "node_id": "MDU6SXNzdWU4NjYzNjAyMTI=", "number": 84491, "title": "ICE: could not fully normalize (wrap + foundationdb)", "user": {"login": "Speedy37", "id": 5376197, "node_id": "MDQ6VXNlcjUzNzYxOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5376197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Speedy37", "html_url": "https://github.com/Speedy37", "followers_url": "https://api.github.com/users/Speedy37/followers", "following_url": "https://api.github.com/users/Speedy37/following{/other_user}", "gists_url": "https://api.github.com/users/Speedy37/gists{/gist_id}", "starred_url": "https://api.github.com/users/Speedy37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Speedy37/subscriptions", "organizations_url": "https://api.github.com/users/Speedy37/orgs", "repos_url": "https://api.github.com/users/Speedy37/repos", "events_url": "https://api.github.com/users/Speedy37/events{/privacy}", "received_events_url": "https://api.github.com/users/Speedy37/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-04-23T19:03:08Z", "updated_at": "2022-05-05T10:36:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```Rust\r\nuse futures::prelude::*;\r\nuse std::pin::Pin;\r\nuse warp::{Filter, Reply};\r\n\r\nstruct Database;\r\n\r\npub trait DatabaseTransact {\r\n    type Item;\r\n}\r\n\r\npub struct FnMutBoxed<F> {\r\n    pub f: F,\r\n}\r\nimpl<F> DatabaseTransact for FnMutBoxed<F>\r\nwhere\r\n    F: FnMut() -> Pin<Box<dyn Future<Output = ()> + Send>>,\r\n{\r\n    type Item = ();\r\n}\r\n\r\nimpl Database {\r\n    pub fn transact_boxed<F>(f: F) -> impl Future<Output = ()> + Send + 'static\r\n    where\r\n        F: FnMut() -> Pin<Box<dyn Future<Output = ()> + Send>>,\r\n        F: Send + 'static,\r\n    {\r\n        Self::transact(FnMutBoxed { f })\r\n    }\r\n\r\n    pub async fn transact<F>(_f: F) -> F::Item\r\n    where\r\n        F: DatabaseTransact,\r\n    {\r\n        todo!()\r\n    }\r\n}\r\npub async fn test1() -> std::result::Result<impl Reply, warp::Rejection> {\r\n    Database::transact_boxed(|| futures::future::ready(()).boxed()).await;\r\n    Ok(warp::reply::json(&\"test 1\"))\r\n}\r\n\r\nfn main() {\r\n    futures::executor::block_on(\r\n        warp::serve(warp::get().and_then(test1)).run(([127, 0, 0, 1], 8010)),\r\n    );\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.53.0-nightly (7f4afdf02 2021-04-22)\r\nbinary: rustc\r\ncommit-hash: 7f4afdf0255600306bf67432da722c7b5d2cbf82\r\ncommit-date: 2021-04-22\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.53.0-nightly\r\nLLVM version: 12.0.0\r\n```\r\n\r\nSame with stable (`rustc 1.51.0 (2fd73fabe 2021-03-23) running on x86_64-pc-windows-msvc`)\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler\\rustc_traits\\src\\normalize_erasing_regions.rs:54:32: could not fully normalize `fn([closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#0}], <warp::hyper::Server<warp::hyper::server::conn::AddrIncoming, warp::hyper::service::make::MakeServiceFn<[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#1}::{closure#0}]>> as futures::Future>::Output) -> <[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, \r\nfn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#0}] as futures_util::fns::FnOnce1<<warp::hyper::Server<warp::hyper::server::conn::AddrIncoming, warp::hyper::service::make::MakeServiceFn<[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#1}::{closure#0}]>> as futures::Future>::Output>>::Output {<[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#0}] as futures_util::fns::FnOnce1<<warp::hyper::Server<warp::hyper::server::conn::AddrIncoming, warp::hyper::service::make::MakeServiceFn<[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#1}::{closure#0}]>> as futures::Future>::Output>>::call_once}`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', /rustc/7f4afdf0255600306bf67432da722c7b5d2cbf82\\library\\std\\src\\panic.rs:59:5\r\nstack backtrace:\r\n   0:     0x7ff89f3c5b8e - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::h65f771762210e3e5\r\n   1:     0x7ff89f3eedac - core::fmt::write::h3d73561f801c6731\r\n   2:     0x7ff89f3b9c28 - <std::io::IoSliceMut as core::fmt::Debug>::fmt::hd8fe844d61210e6f\r\n   3:     0x7ff89f3c9c82 - std::panicking::take_hook::ha49dee799706a2d8\r\n   4:     0x7ff89f3c9774 - std::panicking::take_hook::ha49dee799706a2d8\r\n   5:     0x7ff8903fb2a7 - rustc_driver::report_ice::hab89c69e12b6dd11\r\n   6:     0x7ff89f3ca465 - std::panicking::rust_panic_with_hook::h9e7cc259d68b1de2\r\n   7:     0x7ff894529de0 - <rustc_errors::json::Diagnostic::from_errors_diagnostic::BufWriter as std::io::Write>::flush::h8891f669af2106fb\r\n   8:     0x7ff894529389 - <rustc_errors::json::Diagnostic::from_errors_diagnostic::BufWriter as std::io::Write>::flush::h8891f669af2106fb\r\n   9:     0x7ff8947b4b51 - rustc_query_system::query::job::report_cycle::hf9b212d4fcbb24d3\r\n  10:     0x7ff8944f1070 - <rustc_feature::builtin_attrs::AttributeType as core::fmt::Debug>::fmt::hd792e56b30cee48c\r\n  11:     0x7ff8944f7ab5 - rustc_errors::HandlerInner::err_count::h19c4a44295f74637\r\n  12:     0x7ff8944f55c2 - rustc_errors::Handler::bug::ha6863da4b058abe7\r\n  13:     0x7ff8943af3e8 - <rustc_middle::ty::sty::Binder<rustc_middle::ty::ProjectionPredicate> as rustc_middle::ty::ToPredicate>::to_predicate::h33b1b2f898ff3cca\r\n  14:     0x7ff8943a3b70 - rustc_middle::ty::query::on_disk_cache::<impl rustc_serialize::serialize::Decodable<rustc_middle::ty::query::on_disk_cache::CacheDecoder> for &[rustc_middle::mir::abstract_const::Node]>::decode::h05252040febd0b50\r\n  15:     0x7ff8943a3ab9 - rustc_middle::ty::query::on_disk_cache::<impl rustc_serialize::serialize::Decodable<rustc_middle::ty::query::on_disk_cache::CacheDecoder> for &[rustc_middle::mir::abstract_const::Node]>::decode::h05252040febd0b50\r\n  16:     0x7ff8943af319 - <rustc_middle::ty::sty::Binder<rustc_middle::ty::ProjectionPredicate> as rustc_middle::ty::ToPredicate>::to_predicate::h33b1b2f898ff3cca\r\n  17:     0x7ff8947ad4b7 - rustc_middle::util::bug::bug_fmt::he9e2e7924f44d34c\r\n  18:     0x7ff89272c629 - rustc_traits::provide::hd4707f2be3930568\r\n  19:     0x7ff8927f6a43 - <rustc_middle::traits::chalk::ChalkEnvironmentAndGoal as rustc_traits::chalk::lowering::LowerInto<chalk_ir::InEnvironment<chalk_ir::Goal<rustc_middle::traits::chalk::RustInterner>>>>::lower_into::he129e20208932df5\r\n  20:     0x7ff8931d9752 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::try_print_query_stack::h3c4346cc01dbde58\r\n  21:     0x7ff893169335 - rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::resolve_instance>::hash_result::hc7ba1ed25ba761ff\r\n  22:     0x7ff892fe0b2c - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hbd68f25166d1e477\r\n  23:     0x7ff892f4ecc5 - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hbd68f25166d1e477\r\n  24:     0x7ff892ecb088 - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hbd68f25166d1e477\r\n  25:     0x7ff8931c87ae - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::try_print_query_stack::h3c4346cc01dbde58\r\n  26:     0x7ff8943538fa - <rustc_middle::ty::normalize_erasing_regions::NormalizeAfterErasingRegionsFolder as rustc_middle::ty::fold::TypeFolder>::fold_ty::had7cf8d64e8d7d3e\r\n  27:     0x7ff8934ca183 - <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator::h1b9fec5ded037d3c  28:     0x7ff8934cd690 - <rustc_mir::monomorphize::collector::RootCollector as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_impl_item::hfb7712f4efbd0644  29:     0x7ff8934c61dd - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  30:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  31:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  32:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  33:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  34:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  35:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  36:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  37:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  38:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  39:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  40:     0x7ff8934c5ad2 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  41:     0x7ff8937dcb5c - <rustc_mir::transform::rustc_peek::PeekCall as core::fmt::Debug>::fmt::ha1d73c9f560ce7e8\r\n  42:     0x7ff8934c4351 - rustc_mir::monomorphize::collector::collect_crate_mono_items::hbeb6d2045a60cd71\r\n  43:     0x7ff89382455d - rustc_mir::monomorphize::partitioning::partition::h4e4f3b68f0632de5\r\n  44:     0x7ff892fbc7ef - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hbd68f25166d1e477\r\n  45:     0x7ff8931d6e61 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::try_print_query_stack::h3c4346cc01dbde58\r\n  46:     0x7ff8931786f5 - rustc_query_impl::<impl rustc_query_system::query::config::QueryAccessors<rustc_query_impl::plumbing::QueryCtxt> for rustc_query_impl::queries::resolve_instance>::hash_result::hc7ba1ed25ba761ff\r\n  47:     0x7ff8930067ab - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hbd68f25166d1e477\r\n  48:     0x7ff892f1679b - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hbd68f25166d1e477\r\n  49:     0x7ff892ea297b - <rustc_ast_lowering::item::ItemLowerer as rustc_ast::visit::Visitor>::visit_foreign_item::hbd68f25166d1e477\r\n  50:     0x7ff8931c8118 - <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::try_print_query_stack::h3c4346cc01dbde58\r\n  51:     0x7ff89066d687 - <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::link::h47437b1deee45a0d\r\n  52:     0x7ff89066a199 - <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate::h3f7a7161df43cead    \r\n  53:     0x7ff8905327f2 - rustc_interface::passes::BoxedResolver::to_resolver_outputs::h51cffbb6bc3edf8f\r\n  54:     0x7ff890549ff6 - rustc_interface::queries::Queries::ongoing_codegen::h30f27fdc61a86ed6\r\n  55:     0x7ff890405a77 - rustc_driver::pretty::print_after_hir_lowering::h018530f73994254f\r\n  56:     0x7ff8903fd9dc - <rustc_driver::Compilation as core::fmt::Debug>::fmt::h4409e290eea8174b\r\n  57:     0x7ff890406d56 - rustc_driver::pretty::print_after_hir_lowering::h018530f73994254f\r\n  58:     0x7ff89042d0e4 - <rustc_middle::ty::SymbolName as core::fmt::Debug>::fmt::ha51d28018e278c75\r\n  59:     0x7ff89042f7ff - <rustc_middle::ty::SymbolName as core::fmt::Debug>::fmt::ha51d28018e278c75\r\n  60:     0x7ff890439ddd - <rustc_middle::ty::SymbolName as core::fmt::Debug>::fmt::ha51d28018e278c75\r\n  61:     0x7ff89f3d851a - std::sys::windows::thread::Thread::new::h35832c8baf769397\r\n  62:     0x7ff912a97034 - BaseThreadInitThunk\r\n  63:     0x7ff914882651 - RtlUserThreadStart\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.53.0-nightly (7f4afdf02 2021-04-22) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [normalize_generic_arg_after_erasing_regions] normalizing `fn([closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#0}], <warp::hyper::Server<warp::hyper::server::conn::AddrIncoming, warp::hyper::service::make::MakeServiceFn<[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#1}::{closure#0}]>> as futures::Future>::Output) -> <[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#0}] as futures_util::fns::FnOnce1<<warp::hyper::Server<warp::hyper::server::conn::AddrIncoming, warp::hyper::service::make::MakeServiceFn<[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#1}::{closure#0}]>> as futures::Future>::Output>>::Output {<[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#0}] as futures_util::fns::FnOnce1<<warp::hyper::Server<warp::hyper::server::conn::AddrIncoming, warp::hyper::service::make::MakeServiceFn<[closure@warp::Server<warp::filter::and_then::AndThen<warp::filter::FilterFn<[closure@warp::filters::method::method_is<[closure@warp::get::{closure#0}]>::{closure#0}]>, fn() -> impl futures::Future {test1}>>::bind_ephemeral<([u8; 4], u16)>::{closure#1}::{closure#0}]>> as futures::Future>::Output>>::call_once}`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84491/timeline", "performed_via_github_app": null, "state_reason": null}