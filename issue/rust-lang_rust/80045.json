{"url": "https://api.github.com/repos/rust-lang/rust/issues/80045", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/80045/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/80045/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/80045/events", "html_url": "https://github.com/rust-lang/rust/issues/80045", "id": 767109359, "node_id": "MDU6SXNzdWU3NjcxMDkzNTk=", "number": 80045, "title": "Unexplained errors applying `-Z instrument-coverage` to some rustc `ui` tests", "user": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2483744621, "node_id": "MDU6TGFiZWwyNDgzNzQ0NjIx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-code-coverage", "name": "A-code-coverage", "color": "f7e101", "default": false, "description": "Area: Source-based code coverage (-Cinstrument-coverage)"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-12-15T02:53:04Z", "updated_at": "2020-12-17T06:22:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When experimentally adding `-Zinstrument-coverage` to the set of `ui` tests in the Rust source tree, most tests still pass; of those that don't, almost all failures can be explained, and some improvements have been made to surface known incompatibilities between `-Zinstrument-coverage` and other compiler options (see https://github.com/rust-lang/rust/pull/79958#issuecomment-743958675).\r\n\r\nHowever, there are ~4~ 3 tests that still fail with `-Zinstrument-coverage` that I don't understand.\r\n\r\nI'm hoping someone(s) that understand these tests and/or compiler options can take a look, explain why they are expected to fail, or clarify what the bug might be, if they should not fail.\r\n\r\n---------------------------------------------------------------------------------------------------------------\r\nFixed via #80072\r\n\r\n~$ ./x.py test --rustc-args=\"-Zinstrument-coverage\" src/test/ui/consts/unstable-precise-live-drops-in-libcore.rs~\r\n\r\n~Failure due to:\r\n   error[E0493]: destructors cannot be evaluated at compile-time\r\n     --> /usr/local/google/home/richkadel/rust/src/test/ui/consts/unstable-precise-live-drops-in-libcore.rs:15:25\r\n      |\r\n   LL |     pub const fn unwrap(self) -> T {\r\n      |                         ^^^^ constant functions cannot evaluate destructors\r\n(this error is printed twice)~\r\n\r\n---------------------------------------------------------------------------------------------------------------\r\n\r\n```shell\r\n$ ./x.py test --rustc-args=\"-Zinstrument-coverage\" src/test/ui/issues/issue-33287.rs\r\n```\r\n```text\r\n\r\nFailure due to:\r\n   stderr:\r\n   ------------------------------------------\r\n   error: this operation will panic at runtime\r\n     --> /usr/local/google/home/richkadel/rust/src/test/ui/issues/issue-33287.rs:7:17\r\n      |\r\n   LL |     let range = A[1]..;\r\n      |                 ^^^^ index out of bounds: the length is 1 but the index is 1\r\n      |\r\n      = note: `#[deny(unconditional_panic)]` on by default\r\n\r\n```\r\n\r\n---------------------------------------------------------------------------------------------------------------\r\n\r\n```shell\r\n$ ./x.py test --rustc-args=\"-Zinstrument-coverage\" src/test/ui/print_type_sizes/niche-filling.rs\r\n```\r\n```text\r\n\r\nFailure due to additional lines in the compiler output:\r\n   +       print-type-size type: `std::option::Option<std::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes\r\n   +       print-type-size     variant `Some`: 4 bytes\r\n   +       print-type-size         field `.0`: 4 bytes\r\n   +       print-type-size     variant `None`: 0 bytes\r\n\r\n```\r\n\r\n---------------------------------------------------------------------------------------------------------------\r\n\r\n```shell\r\n$ ./x.py test --rustc-args=\"-Zinstrument-coverage\" src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs\r\n```\r\n```text\r\n\r\nFailure due to:\r\n   error: internal compiler error:\r\n   compiler/rustc_traits/src/normalize_erasing_regions.rs:43:32:\r\n   could not fully normalize `std::option::Option<<i32 as std::iter::Iterator>::Item>`\r\n\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/80045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/80045/timeline", "performed_via_github_app": null, "state_reason": null}