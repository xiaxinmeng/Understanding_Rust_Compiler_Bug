{"url": "https://api.github.com/repos/rust-lang/rust/issues/81206", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81206/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81206/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81206/events", "html_url": "https://github.com/rust-lang/rust/issues/81206", "id": 789950807, "node_id": "MDU6SXNzdWU3ODk5NTA4MDc=", "number": 81206, "title": "Clarify std::mem-docs wrt host/target", "user": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}, {"id": 1944310735, "node_id": "MDU6TGFiZWwxOTQ0MzEwNzM1", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-layout", "name": "A-layout", "color": "f7e101", "default": false, "description": "Area: Memory layout of types"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-01-20T12:49:11Z", "updated_at": "2021-01-25T03:06:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Functions like `std::mem::align_of` (and also parts of `std::alloc::Layout`) which are const can be used to initialize other constants and, soon, types like `[u8;\u00a0{ std::mem::align_of::<String>() }]`. As far as I can see the docs currently do not explicitly make it clear that the compiler *guarantees* (including future versions) that the return values of those functions are valid for the _target_-platform and not for the _host_-platform, even in a const-context.\r\n\r\nThis is probably everybody's expectation. If this behavior is guaranteed, the docs should mention that, though.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81206/timeline", "performed_via_github_app": null, "state_reason": null}