{"url": "https://api.github.com/repos/rust-lang/rust/issues/53974", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/53974/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/53974/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/53974/events", "html_url": "https://github.com/rust-lang/rust/issues/53974", "id": 357373838, "node_id": "MDU6SXNzdWUzNTczNzM4Mzg=", "number": 53974, "title": "Weird Behaviour (Leak in Unclosed Thread)", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-05T19:38:15Z", "updated_at": "2019-01-27T17:49:20Z", "closed_at": "2019-01-27T17:49:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello i am new in Rust and i have the following code : \r\n\r\n```\r\nuse std::sync::mpsc::channel;\r\nuse std::thread;\r\nuse std::time::Duration;\r\n\r\nfn main() {\r\n    let (sender, receiver) = channel::<i32>();\r\n\r\n    //let _ = sender.clone();\r\n\r\n    let _ = thread::spawn(move || loop {\r\n        for i in 1..1_000_000 {\r\n            sender.send(i).unwrap();\r\n        }\r\n\r\n        thread::sleep(Duration::new(5, 0));\r\n    });\r\n\r\n    let t2 = thread::spawn(move || loop {\r\n        match receiver.recv() {\r\n            Ok(i) => println!(\"{}\", i),\r\n            Err(e) => println!(\"{:?}\", e),\r\n        }\r\n    });\r\n\r\n    if t2.join().is_err() {\r\n        println!(\"Closed ...\");\r\n    }\r\n`}`\r\n```\r\nSimple program, as you can see we have 2 different threads , first one sends i32 values to receiver which lives in second thread. So far everything works as expected first one sends then second one writes received values to the console. I executed this program in mac os(10.12.2) and windows 10 with checking the used memory by processes. I'll add results only from mac(almost work same with windows)\r\n\r\n**Here is the result from with code (47mb):** \r\n![image](https://user-images.githubusercontent.com/19870706/45115084-88313f00-b157-11e8-9734-62395cc801c7.png)\r\n\r\nAnd the weird behaviour happens when you uncomment this line \r\n`    //let _ = sender.clone();`\r\n\r\n**Here is the new results (~1.4mb):** \r\n![image](https://user-images.githubusercontent.com/19870706/45115193-d3e3e880-b157-11e8-8ad8-d86acc7be6a6.png)\r\n\r\nActually i want to know if i did something wrong because sender and receiver are both live until the program ends. On the other hand the received values should get dropped in \"t2\" but it doesn't.(note : memory gets freed if i terminate \"t2\" but currently i don't want to do that)\r\nAnd the interesting part is whether if i use it or not, just cloning sender helped freeing the received values from memory.\r\n\r\nAnd one more weird behaviour that i want to note , if you try to execute the leaked program you'll see that it will stick on **47mb**(values can be different), it will not get decreased or increased(in mac os). if i change the for loop's upper limit to **10_000_000**, used memory size will always get increased, it never stops.\r\n\r\nused **stable toolchain, rustc 1.28.0**   \r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/53974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/53974/timeline", "performed_via_github_app": null, "state_reason": "completed"}