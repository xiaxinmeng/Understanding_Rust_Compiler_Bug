{"url": "https://api.github.com/repos/rust-lang/rust/issues/99303", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99303/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99303/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99303/events", "html_url": "https://github.com/rust-lang/rust/issues/99303", "id": 1306611082, "node_id": "I_kwDOAAsO6M5N4U2K", "number": 99303, "title": "Wrong \"lifetime may not live long enough\" diagnostic", "user": {"login": "paulocsanz", "id": 6289779, "node_id": "MDQ6VXNlcjYyODk3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/6289779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulocsanz", "html_url": "https://github.com/paulocsanz", "followers_url": "https://api.github.com/users/paulocsanz/followers", "following_url": "https://api.github.com/users/paulocsanz/following{/other_user}", "gists_url": "https://api.github.com/users/paulocsanz/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulocsanz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulocsanz/subscriptions", "organizations_url": "https://api.github.com/users/paulocsanz/orgs", "repos_url": "https://api.github.com/users/paulocsanz/repos", "events_url": "https://api.github.com/users/paulocsanz/events{/privacy}", "received_events_url": "https://api.github.com/users/paulocsanz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-15T22:58:15Z", "updated_at": "2022-07-28T17:14:13Z", "closed_at": "2022-07-28T17:14:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The compiler is misdiagnosing some compilation errors as lifetime errors. This has happened 4 times today, but it had happened before in the past usually once a week or less.\r\n\r\nA cargo clean + check reports a different error (which was the actual problem). Sadly we don't know how to minimally reproduce it, the things we found were: it always wrongly points to a lifetime problem during the creation of a `Context<'_, '_>` from another one, so we assume lifetime deduction is at fault. And it always points to places that we haven't touched in a while.\r\n\r\nWe have been seeing this happen more after we started to heavily use `Box<dyn Trait + Send + Sync>`, so it might also be related to that, but we don't have enough evidence to be sure.\r\n\r\nAnd we use cargo workspaces heavily. Our codebase is very complex and big, but it's private so I can't share it, we do trigger a lot of incremental compilation problems that generally cause a crash and require a cargo clean, but this is a new one.\r\n\r\nThe wrong error message:\r\n\r\n```\r\nerror: lifetime may not live long enough\r\n   --> lib/dal/src/context.rs:273:56\r\n    |\r\n270 |           &self,\r\n    |           - let's call the lifetime of this reference `'4`\r\n271 |           ctx: &DalContext<'_, '_>,\r\n    |                            -- let's call the lifetime of this reference `'2`\r\n272 |           oid: OrganizationId,\r\n273 |       ) -> Result<DalContext<'_, '_>, TransactionsError> {\r\n    |  ________________________________________________________^\r\n274 | |         let mut new = self.clone();\r\n275 | |         new.update_to_organization_tenancies(ctx, oid).await?;\r\n276 | |         Ok(new)\r\n277 | |     }\r\n    | |_____^ associated function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'4`\r\n\r\nerror: lifetime may not live long enough\r\n   --> lib/dal/src/context.rs:273:56\r\n    |\r\n270 |           &self,\r\n    |           - let's call the lifetime of this reference `'4`\r\n271 |           ctx: &DalContext<'_, '_>,\r\n    |                            -- let's call the lifetime of this reference `'2`\r\n272 |           oid: OrganizationId,\r\n273 |       ) -> Result<DalContext<'_, '_>, TransactionsError> {\r\n    |  ________________________________________________________^\r\n274 | |         let mut new = self.clone();\r\n275 | |         new.update_to_organization_tenancies(ctx, oid).await?;\r\n276 | |         Ok(new)\r\n277 | |     }\r\n    | |_____^ associated function was supposed to return data with lifetime `'4` but it is returning data with lifetime `'2`\r\n\r\nerror: lifetime may not live long enough\r\n   --> lib/dal/src/context.rs:276:9\r\n    |\r\n270 |         &self,\r\n    |         ----- has type `&DalContext<'1, '_>`\r\n271 |         ctx: &DalContext<'_, '_>,\r\n    |                          -- let's call the lifetime of this reference `'2`\r\n...\r\n276 |         Ok(new)\r\n    |         ^^^^^^^ associated function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\r\n\r\nerror: lifetime may not live long enough\r\n   --> lib/dal/src/context.rs:276:9\r\n    |\r\n270 |         &self,\r\n    |         ----- has type `&DalContext<'_, '3>`\r\n271 |         ctx: &DalContext<'_, '_>,\r\n    |                          -- let's call the lifetime of this reference `'2`\r\n...\r\n276 |         Ok(new)\r\n    |         ^^^^^^^ associated function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'3`\r\n\r\nwarning: `dal` (lib) generated 4 warnings\r\nerror: could not compile `dal` due to 4 previous errors; 4 warnings emitted\r\n```\r\n\r\nThe error message after `cargo clean` + `cargo check`:\r\n\r\n```\r\nerror[E0507]: cannot move out of `self.access_builder` which is behind a shared reference\r\n  --> lib/dal/src/job/definition/component_post_processing.rs:77:34\r\n   |\r\n77 |             serde_json::to_value(self.access_builder)?,\r\n   |                                  ^^^^^^^^^^^^^^^^^^^ move occurs because `self.access_builder` has type `AccessBuilder`, which does not implement the `Copy` trait\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0 (a8314ef7d 2022-06-27)\r\nbinary: rustc\r\ncommit-hash: a8314ef7d0ec7b75c336af2c9857bfaf43002bfc\r\ncommit-date: 2022-06-27\r\nhost: aarch64-apple-darwin\r\nrelease: 1.62.0\r\nLLVM version: 14.0.5\r\n```", "closed_by": {"login": "paulocsanz", "id": 6289779, "node_id": "MDQ6VXNlcjYyODk3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/6289779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulocsanz", "html_url": "https://github.com/paulocsanz", "followers_url": "https://api.github.com/users/paulocsanz/followers", "following_url": "https://api.github.com/users/paulocsanz/following{/other_user}", "gists_url": "https://api.github.com/users/paulocsanz/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulocsanz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulocsanz/subscriptions", "organizations_url": "https://api.github.com/users/paulocsanz/orgs", "repos_url": "https://api.github.com/users/paulocsanz/repos", "events_url": "https://api.github.com/users/paulocsanz/events{/privacy}", "received_events_url": "https://api.github.com/users/paulocsanz/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99303/timeline", "performed_via_github_app": null, "state_reason": "completed"}