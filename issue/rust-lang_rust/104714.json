{"url": "https://api.github.com/repos/rust-lang/rust/issues/104714", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104714/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104714/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104714/events", "html_url": "https://github.com/rust-lang/rust/issues/104714", "id": 1459943998, "node_id": "I_kwDOAAsO6M5XBPo-", "number": 104714, "title": "Missing diagnostic for attempting to call Deref method shadowed by trait impl", "user": {"login": "PROMETHIA-27", "id": 42193387, "node_id": "MDQ6VXNlcjQyMTkzMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/42193387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PROMETHIA-27", "html_url": "https://github.com/PROMETHIA-27", "followers_url": "https://api.github.com/users/PROMETHIA-27/followers", "following_url": "https://api.github.com/users/PROMETHIA-27/following{/other_user}", "gists_url": "https://api.github.com/users/PROMETHIA-27/gists{/gist_id}", "starred_url": "https://api.github.com/users/PROMETHIA-27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PROMETHIA-27/subscriptions", "organizations_url": "https://api.github.com/users/PROMETHIA-27/orgs", "repos_url": "https://api.github.com/users/PROMETHIA-27/repos", "events_url": "https://api.github.com/users/PROMETHIA-27/events{/privacy}", "received_events_url": "https://api.github.com/users/PROMETHIA-27/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-11-22T14:08:08Z", "updated_at": "2022-11-22T22:21:20Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Given the following code: [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=16cdc52cb81bbc4c2ed4fbbd19a5289d)\n\n```rust\ntrait Trait {\n  fn get(&self, index: usize);\n}\n\nimpl<T> Trait for Vec<T> {\n  fn get(&self, _index: usize) {\n    let _ = self.get(0);\n  }\n}\n```\n\nThe current output is:\n\n```\nwarning: function cannot return without recursing\n --> src/lib.rs:6:3\n  |\n6 |   fn get(&self, index: usize) {\n  |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot return without recursing\n7 |     let _ = self.get(0);\n  |             ----------- recursive call site\n  |\n  = note: `#[warn(unconditional_recursion)]` on by default\n  = help: a `loop` may express intention better if this is on purpose\n```\n\nIdeally the output should look like:\n\n```\nwarning: function cannot return without recursing\n --> src/lib.rs:6:3\n  |\n6 |   fn get(&self, index: usize) {\n  |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot return without recursing\n7 |     let _ = self.get(0);\n  |             ----------- recursive call site\n  |\n  = note: `#[warn(unconditional_recursion)]` on by default\n  = help: a `loop` may express intention better if this is on purpose\n  = help: there exists another method `get` on `[T]` which `Vec<T>` implements `Deref` for. Did you mean to call that?\n     `(&**self).get(0)`\n```\n\nIt would be better if it also figured out that the clearer way to do this for `Vec` is `self[..].get()`, but just the deref tip would be a big improvement. \n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"compiler-errors\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104714/timeline", "performed_via_github_app": null, "state_reason": null}