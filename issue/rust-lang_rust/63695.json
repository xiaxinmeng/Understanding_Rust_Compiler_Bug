{"url": "https://api.github.com/repos/rust-lang/rust/issues/63695", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/63695/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/63695/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/63695/events", "html_url": "https://github.com/rust-lang/rust/issues/63695", "id": 482096861, "node_id": "MDU6SXNzdWU0ODIwOTY4NjE=", "number": 63695, "title": "ICE caused by using a const_generic fn from a trait or impl", "user": {"login": "kkoning", "id": 546274, "node_id": "MDQ6VXNlcjU0NjI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/546274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkoning", "html_url": "https://github.com/kkoning", "followers_url": "https://api.github.com/users/kkoning/followers", "following_url": "https://api.github.com/users/kkoning/following{/other_user}", "gists_url": "https://api.github.com/users/kkoning/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkoning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkoning/subscriptions", "organizations_url": "https://api.github.com/users/kkoning/orgs", "repos_url": "https://api.github.com/users/kkoning/repos", "events_url": "https://api.github.com/users/kkoning/events{/privacy}", "received_events_url": "https://api.github.com/users/kkoning/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1282665911, "node_id": "MDU6TGFiZWwxMjgyNjY1OTEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-generics", "name": "A-const-generics", "color": "f7e101", "default": false, "description": "Area: const generics (parameters and arguments)"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1486687397, "node_id": "MDU6TGFiZWwxNDg2Njg3Mzk3", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-const_generics", "name": "F-const_generics", "color": "f9c0cc", "default": false, "description": "`#![feature(const_generics)]`"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-08-19T04:17:15Z", "updated_at": "2020-07-16T22:23:10Z", "closed_at": "2020-07-16T22:23:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "A function that compiles and runs successfully outside of a trait causes an ICE when it's in a trait.  The expectation is that this should work similarly to other generics on trait functions--while they will prevent a trait object reference, they should otherwise be allowed.  (On [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=72aa50cd4b32c1cc5bbf896e3fc3d44a))\r\n\r\n```rust\r\n#![feature(const_generics)]\r\nfn test<const A: i32>() -> i32 { A }\r\n\r\ntrait T {\r\n    fn test<const A: i32>(&self) -> i32 { A }\r\n}\r\n\r\nstruct S();\r\n\r\nimpl T for S {}\r\n\r\nfn main() {\r\n  let foo = S();\r\n  println!(\"{}\", test::<{8i32}>());\r\n  println!(\"{}\", foo.test::<{16i32}>());  // <- Causes ICE\r\n}\r\n```\r\n\r\nError and relevant backtrace:\r\n\r\n```\r\nerror: internal compiler error: src/librustc_codegen_ssa/mir/operand.rs:79: unevaluated constant in `OperandRef::from_const`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:643:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.34/src/backtrace/libunwind.rs:88\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.34/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:47\r\n   3: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:36\r\n   4: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:200\r\n   5: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:214\r\n   6: rustc::util::common::panic_hook\r\n   7: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:481\r\n   8: std::panicking::begin_panic\r\n   9: rustc_errors::Handler::bug\r\n  10: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  11: rustc::ty::context::tls::with_opt::{{closure}}\r\n  12: rustc::ty::context::tls::with_context_opt\r\n  13: rustc::ty::context::tls::with_opt\r\n  14: rustc::util::bug::opt_span_bug_fmt\r\n  15: rustc::util::bug::bug_fmt\r\n  16: rustc_codegen_ssa::mir::operand::OperandRef<V>::from_const\r\n  17: rustc_codegen_ssa::mir::operand::<impl rustc_codegen_ssa::mir::FunctionCx<Bx>>::codegen_operand\r\n  18: rustc_codegen_ssa::mir::rvalue::<impl rustc_codegen_ssa::mir::FunctionCx<Bx>>::codegen_rvalue_operand\r\n  19: rustc_codegen_ssa::mir::codegen_mir\r\n  20: rustc_codegen_ssa::base::codegen_instance\r\n  21: <rustc::mir::mono::MonoItem as rustc_codegen_ssa::mono_item::MonoItemExt>::define\r\n  22: rustc_codegen_llvm::base::compile_codegen_unit::module_codegen\r\n  23: rustc::dep_graph::graph::DepGraph::with_task\r\n  24: rustc_codegen_llvm::base::compile_codegen_unit\r\n  25: rustc_codegen_ssa::base::codegen_crate\r\n  26: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_utils::codegen_backend::CodegenBackend>::codegen_crate\r\n  27: rustc::util::common::time\r\n  28: rustc_interface::passes::BoxedGlobalCtxt::access::{{closure}}\r\n  29: rustc_interface::passes::create_global_ctxt::{{closure}}\r\n  30: rustc_interface::passes::BoxedGlobalCtxt::enter\r\n  31: rustc_interface::queries::Query<T>::compute\r\n  32: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::ongoing_codegen\r\n  33: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  34: std::thread::local::LocalKey<T>::with\r\n  35: scoped_tls::ScopedKey<T>::set\r\n  36: syntax::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nquery stack during panic:\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.39.0-nightly (2111aed0a 2019-08-17) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n```\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":null}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/63695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/63695/timeline", "performed_via_github_app": null, "state_reason": "completed"}