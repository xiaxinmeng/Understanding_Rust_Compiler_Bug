{"url": "https://api.github.com/repos/rust-lang/rust/issues/15034", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15034/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15034/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15034/events", "html_url": "https://github.com/rust-lang/rust/issues/15034", "id": 36056980, "node_id": "MDU6SXNzdWUzNjA1Njk4MA==", "number": 15034, "title": "Alternating error messages when compiling the same source", "user": {"login": "boschni", "id": 3061545, "node_id": "MDQ6VXNlcjMwNjE1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3061545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boschni", "html_url": "https://github.com/boschni", "followers_url": "https://api.github.com/users/boschni/followers", "following_url": "https://api.github.com/users/boschni/following{/other_user}", "gists_url": "https://api.github.com/users/boschni/gists{/gist_id}", "starred_url": "https://api.github.com/users/boschni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boschni/subscriptions", "organizations_url": "https://api.github.com/users/boschni/orgs", "repos_url": "https://api.github.com/users/boschni/repos", "events_url": "https://api.github.com/users/boschni/events{/privacy}", "received_events_url": "https://api.github.com/users/boschni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-19T08:00:21Z", "updated_at": "2014-12-30T10:42:46Z", "closed_at": "2014-12-30T10:42:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting alternating error messages when compiling the following source multiple times:\n\n``` rust\npub struct Lexer<'a> {\n    input: &'a str,\n}\n\nimpl<'a> Lexer<'a> {\n    pub fn new<'a>(input: &'a str) -> Lexer<'a> {\n        Lexer { input: input }\n    }\n}\n\nstruct Parser<'a> {\n    lexer: &'a mut Lexer<'a>,\n}\n\nimpl<'a> Parser<'a> {\n    pub fn new<'a>(lexer: &'a mut Lexer) -> Parser<'a> {\n        Parser { lexer: lexer }\n    }\n}\n\nfn main() {}\n```\n\nFirst error message:\n\n```\n$ rustc test.rs\ntest.rs:20:2: 25:3 note: consider using an explicit lifetime parameter as shown: fn new<'a>(lexer: &'a mut Lexer<'a>) -> Parser<'a>\ntest.rs:20  pub fn new<'a>(lexer: &'a mut Lexer) -> Parser<'a> {\ntest.rs:21 \ntest.rs:22      Parser {\ntest.rs:23          lexer: lexer,\ntest.rs:24      }\ntest.rs:25  }\ntest.rs:22:3: 24:4 error: cannot infer an appropriate lifetime for lifetime parameter `'a due to conflicting requirements\ntest.rs:22      Parser {\ntest.rs:23          lexer: lexer,\ntest.rs:24      }\nerror: aborting due to previous error\n```\n\nSecond error message:\n\n```\n$ rustc test.rs\ntest.rs:22:3: 24:4 error: cannot infer an appropriate lifetime for lifetime parameter `'a due to conflicting requirements\ntest.rs:22      Parser {\ntest.rs:23          lexer: lexer,\ntest.rs:24      }\ntest.rs:23:11: 23:16 note: first, the lifetime cannot outlive the expression at 23:10...\ntest.rs:23          lexer: lexer,\n                           ^~~~~\ntest.rs:23:11: 23:16 note: ...so that automatically reference is valid at the time of borrow\ntest.rs:23          lexer: lexer,\n                           ^~~~~\ntest.rs:20:53: 25:3 note: but, the lifetime must be valid for the lifetime 'a as defined on the block at 20:52...\ntest.rs:20  pub fn new<'a>(lexer: &'a mut Lexer) -> Parser<'a> {\ntest.rs:21 \ntest.rs:22      Parser {\ntest.rs:23          lexer: lexer,\ntest.rs:24      }\ntest.rs:25  }\ntest.rs:22:3: 24:4 note: ...so that types are compatible (expected `Parser<'a>` but found `Parser<'_>`)\ntest.rs:22      Parser {\ntest.rs:23          lexer: lexer,\ntest.rs:24      }\nerror: aborting due to previous error\n```\n\nIt can take a couple of re-compilations to see the different message.\n\nRust version:\nf8c9aec34486f953eec0e46cb9c13cdcd20dc476\nrustc 0.11.0-pre\nhost: x86_64-apple-darwin\n\nI was also able to reproduce this behavior on http://play.rust-lang.org/.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15034/timeline", "performed_via_github_app": null, "state_reason": "completed"}