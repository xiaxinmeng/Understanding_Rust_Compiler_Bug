{"url": "https://api.github.com/repos/rust-lang/rust/issues/89339", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89339/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89339/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89339/events", "html_url": "https://github.com/rust-lang/rust/issues/89339", "id": 1010245107, "node_id": "I_kwDOAAsO6M48Nx3z", "number": 89339, "title": "Windows LLVM Sanitizer Support", "user": {"login": "voteblake", "id": 5585957, "node_id": "MDQ6VXNlcjU1ODU5NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5585957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voteblake", "html_url": "https://github.com/voteblake", "followers_url": "https://api.github.com/users/voteblake/followers", "following_url": "https://api.github.com/users/voteblake/following{/other_user}", "gists_url": "https://api.github.com/users/voteblake/gists{/gist_id}", "starred_url": "https://api.github.com/users/voteblake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voteblake/subscriptions", "organizations_url": "https://api.github.com/users/voteblake/orgs", "repos_url": "https://api.github.com/users/voteblake/repos", "events_url": "https://api.github.com/users/voteblake/events{/privacy}", "received_events_url": "https://api.github.com/users/voteblake/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 266005765, "node_id": "MDU6TGFiZWwyNjYwMDU3NjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows-msvc", "name": "O-windows-msvc", "color": "6e6ec0", "default": false, "description": "Toolchain: MSVC, Operating system: Windows"}, {"id": 630870359, "node_id": "MDU6TGFiZWw2MzA4NzAzNTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-sanitizers", "name": "A-sanitizers", "color": "f7e101", "default": false, "description": "Area: Sanitizers for correctness and code quality."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-09-28T21:52:28Z", "updated_at": "2023-04-05T17:35:37Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "In an effort to fuzz a Windows-specific Rust program with `cargo-fuzz` I've done a bit of digging that leads me to think the compiler is the current blocker.\r\n\r\n[`cargo-fuzz`](https://github.com/rust-fuzz/cargo-fuzz) mentions [`libFuzzer`](https://llvm.org/docs/LibFuzzer.html) \"only works on x86-64 Linux and x86-64 macOS for now\". The `libFuzzer` docs in turn suggest Windows should now be [support-able](https://llvm.org/docs/LibFuzzer.html#q-does-libfuzzer-support-windows), and the LLVM [AddressSanitizer](https://clang.llvm.org/docs/AddressSanitizer.html) documentation appears to agree.\r\n\r\nLooking at the history of sanitizer discussion here I see Windows support being mentioned as possible as early as 2017 https://github.com/rust-lang/rust/issues/39699#issuecomment-297589826. Windows support was also mentioned in https://github.com/rust-lang/rust/issues/47174 as part of the discussion on stabilizing the -Z sanitize options.\r\n\r\nI'm opening this issue to document the data I've gathered, ask for input on if I'm understanding the current state correctly, and also understand if anyone is working on this. I may be able to help, but am not an experienced contributor to the compiler. I've started to work locally to understand what this change would look like if it is in-fact possible.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89339/timeline", "performed_via_github_app": null, "state_reason": null}