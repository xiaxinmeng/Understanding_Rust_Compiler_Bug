{"url": "https://api.github.com/repos/rust-lang/rust/issues/112376", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112376/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112376/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112376/events", "html_url": "https://github.com/rust-lang/rust/issues/112376", "id": 1745039995, "node_id": "I_kwDOAAsO6M5oAzJ7", "number": 112376, "title": "ice: cfi: LLVM ERROR with polymorphic paths", "user": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 4574755208, "node_id": "LA_kwDOAAsO6M8AAAABEK05iA", "url": "https://api.github.com/repos/rust-lang/rust/labels/PG-exploit-mitigations", "name": "PG-exploit-mitigations", "color": "c2e0c6", "default": false, "description": "Project group: exploit mitigations"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-06-07T05:01:04Z", "updated_at": "2023-06-07T05:01:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n-->\r\n\r\n### Code\r\nfrom `ufcs-polymorphic-path.rs`\r\n`rustc ufcs-polymorphic-paths.rs -Copt-level=3 -Cdebuginfo=2 -Clto -Zsanitizer=cfi`\r\n```Rust\r\nuse std::borrow::{Cow, ToOwned};\r\nuse std::default::Default;\r\n\r\npub struct XorShiftRng;\r\nimpl Rng for XorShiftRng {}\r\npub trait Rng {}\r\npub trait Rand: Default + Sized {\r\n    fn rand<R: Rng>(_rng: &mut R) -> Self { Default::default() }\r\n}\r\nimpl Rand for i32 { }\r\n\r\npub trait IntoCow<'a, B: ?Sized> where B: ToOwned {\r\n    fn into_cow(self) -> Cow<'a, B>;\r\n}\r\n\r\nimpl<'a> IntoCow<'a, str> for String {\r\n    fn into_cow(self) -> Cow<'a, str> {\r\n        Cow::Owned(self)\r\n    }\r\n}\r\n\r\n#[derive(PartialEq, Eq)]\r\nstruct Newt<T>(T);\r\n\r\nfn eq<T: Eq>(a: T, b: T) -> bool { a == b }\r\n\r\n\r\ntrait Size: Sized {\r\n    fn size() -> usize { std::mem::size_of::<Self>() }\r\n}\r\nimpl<T> Size for T {}\r\n\r\n\r\n\r\n#[derive(PartialEq, Eq)]\r\nstruct Foo<T>(T);\r\n\r\n\r\nmacro_rules! tests {\r\n    ($($expr:expr, $ty:ty, ($($test:expr),*);)+) => (pub fn main() {$({\r\n        static S: $ty = $expr;\r\n        assert!(eq(S($($test),*), $expr($($test),*)));\r\n    })+})\r\n}\r\n\r\ntests! {\r\n    <Vec<()>>::with_capacity, fn(usize) -> Vec<()>, (5);  \r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.72.0-nightly (e6d4725c7 2023-06-05)\r\nbinary: rustc\r\ncommit-hash: e6d4725c76f3b526c74454bc51afdf6daf133506\r\ncommit-date: 2023-06-05\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.72.0-nightly\r\nLLVM version: 16.0.4\r\n```\r\n\r\n### Error output\r\n\r\n```\r\n-\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\n!dbg attachment points at wrong subprogram for function\r\n!199 = distinct !DISubprogram(name: \"main\", linkageName: \"_ZN22ufcs_polymorphic_paths4main17h5fab3a21c907a36eE\", scope: !14, file: !15, line: 40, type: !195, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized | DISPFlagMainSubprogram, unit: !8, templateParams: !46, retainedNodes: !46)\r\nptr @_ZN22ufcs_polymorphic_paths4main17h5fab3a21c907a36eE.cfi\r\n  call void @llvm.dbg.declare(metadata ptr undef, metadata !232, metadata !DIExpression()), !dbg !236\r\n!236 = !DILocation(line: 671, column: 46, scope: !233, inlinedAt: !237)\r\n!238 = distinct !DISubprogram(name: \"with_capacity<()>\", linkageName: \"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h0185b499b8c3601eE\", scope: !19, file: !206, line: 478, type: !17, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !8, templateParams: !41, declaration: !207, retainedNodes: !239)\r\n!238 = distinct !DISubprogram(name: \"with_capacity<()>\", linkageName: \"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h0185b499b8c3601eE\", scope: !19, file: !206, line: 478, type: !17, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !8, templateParams: !41, declaration: !207, retainedNodes: !239)\r\n!dbg attachment points at wrong subprogram for function\r\n!199 = distinct !DISubprogram(name: \"main\", linkageName: \"_ZN22ufcs_polymorphic_paths4main17h5fab3a21c907a36eE\", scope: !14, file: !15, line: 40, type: !195, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized | DISPFlagMainSubprogram, unit: !8, templateParams: !46, retainedNodes: !46)\r\nptr @_ZN22ufcs_polymorphic_paths4main17h5fab3a21c907a36eE.cfi\r\n  call void @llvm.dbg.declare(metadata ptr undef, metadata !232, metadata !DIExpression()), !dbg !236\r\n!236 = !DILocation(line: 671, column: 46, scope: !233, inlinedAt: !237)\r\n!238 = distinct !DISubprogram(name: \"with_capacity<()>\", linkageName: \"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h0185b499b8c3601eE\", scope: !19, file: !206, line: 478, type: !17, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !8, templateParams: !41, declaration: !207, retainedNodes: !239)\r\n!238 = distinct !DISubprogram(name: \"with_capacity<()>\", linkageName: \"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h0185b499b8c3601eE\", scope: !19, file: !206, line: 478, type: !17, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !8, templateParams: !41, declaration: !207, retainedNodes: !239)\r\nLLVM ERROR: Broken module found, compilation aborted!\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112376/timeline", "performed_via_github_app": null, "state_reason": null}