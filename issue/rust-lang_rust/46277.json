{"url": "https://api.github.com/repos/rust-lang/rust/issues/46277", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/46277/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/46277/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/46277/events", "html_url": "https://github.com/rust-lang/rust/issues/46277", "id": 276831116, "node_id": "MDU6SXNzdWUyNzY4MzExMTY=", "number": 46277, "title": "Recursive closure combinator no longer allowed in nightly", "user": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 147085028, "node_id": "MDU6TGFiZWwxNDcwODUwMjg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-nightly", "name": "regression-from-stable-to-nightly", "color": "e4008a", "default": false, "description": "Performance or correctness regression from stable to nightly."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-26T15:04:43Z", "updated_at": "2017-11-26T17:39:14Z", "closed_at": "2017-11-26T17:24:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code (published in odds 0.3) compiles and works(?) in stable but not nightly.\r\n\r\nThe combinator is using a closure where the first argument contains a reference to its own type.\r\n\r\n[(playground link)](https://play.rust-lang.org/?gist=d5ed655c9eab5635aad8e1ca65390327&version=nightly)\r\n\r\n```rust\r\nuse std::marker::PhantomData;\r\n\r\nfn main() {\r\n    let data = [true, false];\r\n    assert!(!fix(&data[..], |f, x| {\r\n       x.len() == 0 || x[0] && f.call(&x[1..])\r\n    }));\r\n}\r\n\r\npub struct Fix<'a, F: 'a, T: 'a, R: 'a = T>(&'a F, PhantomData<fn(T) -> R>);\r\n\r\nimpl<'a, F, T, R> Fix<'a, F, T, R>\r\n    where F: Fn(Fix<F, T, R>, T) -> R,\r\n{\r\n    /// Create a new fix from the reference to closure `f`\r\n    pub fn new(f: &'a F) -> Self {\r\n        Fix(f, PhantomData)\r\n    }\r\n}\r\n\r\n/// Fixpoint combinator for rust closures, generalized over the return type.\r\n///\r\n/// This is a wrapper function that uses the `Fix` type. The recursive closure\r\n/// has two arguments, `Fix` and the argument type `T`.\r\n///\r\n/// In **Fix\\<T, R\\>**, **T** is the argument type, and **R** is the return type,\r\n/// **R** defaults to **T**.\r\n///\r\n/// Calling the `Fix` value only supports function call notation with the nightly\r\n/// channel and the crate feature \u2018unstable\u2019 enabled; use the .call() method otherwise.\r\n///\r\n/// This helper function makes the type inference work out well.\r\n///\r\n/// ```\r\n/// use odds::fix;\r\n/// \r\n/// assert_eq!(120, fix(5, |f, x| if x == 0 { 1 } else { x * f.call(x - 1) }));\r\n///\r\n/// let data = [true, false];\r\n/// assert!(!fix(&data[..], |f, x| {\r\n///     x.len() == 0 || x[0] && f.call(&x[1..])\r\n/// }));\r\n///\r\n/// ```\r\n\r\npub fn fix<T, R, F>(init: T, closure: F) -> R\r\n    where F: Fn(Fix<F, T, R>, T) -> R\r\n{\r\n    Fix(&closure, PhantomData).call(init)\r\n}\r\n\r\nimpl<'a, F, T, R> Fix<'a, F, T, R>\r\n    where F: Fn(Fix<F, T, R>, T) -> R,\r\n{\r\n    /// Call the fix using the argument `arg`\r\n    pub fn call(&self, arg: T) -> R {\r\n        let f = *self;\r\n        f.0(f, arg)\r\n    }\r\n}\r\n\r\nimpl<'a, F, T, R> Clone for Fix<'a, F, T, R> {\r\n    fn clone(&self) -> Self { *self }\r\n}\r\n\r\nimpl<'a, F, T, R> Copy for Fix<'a, F, T, R> { }\r\n```\r\n", "closed_by": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/46277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/46277/timeline", "performed_via_github_app": null, "state_reason": "completed"}