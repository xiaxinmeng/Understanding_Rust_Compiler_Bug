{"url": "https://api.github.com/repos/rust-lang/rust/issues/79224", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/79224/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/79224/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/79224/events", "html_url": "https://github.com/rust-lang/rust/issues/79224", "id": 747349323, "node_id": "MDU6SXNzdWU3NDczNDkzMjM=", "number": 79224, "title": "`min_specialization` with default generic causes an ICE", "user": {"login": "ohadravid", "id": 2358365, "node_id": "MDQ6VXNlcjIzNTgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2358365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohadravid", "html_url": "https://github.com/ohadravid", "followers_url": "https://api.github.com/users/ohadravid/followers", "following_url": "https://api.github.com/users/ohadravid/following{/other_user}", "gists_url": "https://api.github.com/users/ohadravid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohadravid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohadravid/subscriptions", "organizations_url": "https://api.github.com/users/ohadravid/orgs", "repos_url": "https://api.github.com/users/ohadravid/repos", "events_url": "https://api.github.com/users/ohadravid/events{/privacy}", "received_events_url": "https://api.github.com/users/ohadravid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 60329014, "node_id": "MDU6TGFiZWw2MDMyOTAxNA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-low", "name": "P-low", "color": "eb6420", "default": false, "description": "Low priority"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 347795552, "node_id": "MDU6TGFiZWwzNDc3OTU1NTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-specialization", "name": "A-specialization", "color": "f7e101", "default": false, "description": "Area: Trait impl specialization"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-11-20T09:55:29Z", "updated_at": "2022-06-29T08:28:30Z", "closed_at": "2022-06-29T08:28:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nI wanted to change `Cow` to use the pattern in the code below (which changes `Cow` variance w.r.t to `<B as ToOwned>::Owned`),\r\nbut got an ICE. I managed to reduce it the code below.\r\n\r\n\r\n### Code\r\n\r\n```Rust\r\n#![feature(min_specialization)]\r\nuse std::fmt::{self, Display};\r\n\r\npub enum Cow<'a, B: ?Sized + 'a, O = <B as ToOwned>::Owned>\r\nwhere\r\n    B: ToOwned,\r\n{\r\n    Borrowed(&'a B),\r\n    Owned(O),\r\n}\r\n\r\n\r\nimpl ToString for Cow<'_, str> {\r\n    fn to_string(&self) -> String {\r\n        panic!()\r\n    }\r\n}\r\n\r\nimpl<B: ?Sized> Display for Cow<'_, B> {\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        panic!()\r\n    }\r\n}\r\n```\r\n\r\nThe same code with the current definition of `Cow` works  (same as `std`):\r\n\r\n```Rust\r\n#![feature(min_specialization)]\r\nuse std::fmt::{self, Display};\r\n\r\npub enum Cow<'a, B: ?Sized + 'a>\r\nwhere\r\n    B: ToOwned,\r\n{\r\n    Borrowed(&'a B),\r\n    Owned(<B as ToOwned>::Owned),\r\n}\r\n\r\n\r\nimpl ToString for Cow<'_, str> {\r\n    fn to_string(&self) -> String {\r\n        panic!()\r\n    }\r\n}\r\n\r\nimpl<B: ?Sized + ToOwned> Display for Cow<'_, B> {\r\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\r\n        panic!()\r\n    }\r\n}\r\n```\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0-nightly (825637983 2020-11-18)\r\nbinary: rustc\r\ncommit-hash: 8256379832b5ecb7f71e8c5e2018446482223c12\r\ncommit-date: 2020-11-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0-nightly\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler\\rustc_trait_selection\\src\\traits\\specialize\\mod.rs:101:21: When translating substitutions for specialization, the expected specialization failed to hold\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler\\rustc_errors\\src\\lib.rs:958:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.50.0-nightly (825637983 2020-11-18) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [check_mod_impl_wf] checking that impls are well-formed in top-level module\r\n#1 [analysis] running analysis passes on this crate\r\nend of query stack\r\nerror: aborting due to previous error\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:958:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: rustc_errors::HandlerInner::bug\r\n   2: rustc_errors::Handler::bug\r\n   3: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n   4: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n   5: rustc_middle::ty::context::tls::with_opt\r\n   6: rustc_middle::util::bug::opt_span_bug_fmt\r\n   7: rustc_middle::util::bug::bug_fmt\r\n   8: rustc_trait_selection::traits::specialize::translate_substs::{{closure}}\r\n   9: rustc_trait_selection::traits::specialize::translate_substs\r\n  10: rustc_typeck::impl_wf_check::min_specialization::check_always_applicable\r\n  11: rustc_infer::infer::InferCtxtBuilder::enter\r\n  12: rustc_typeck::impl_wf_check::min_specialization::check_min_specialization\r\n  13: <rustc_typeck::impl_wf_check::ImplWfCheck as rustc_hir::itemlikevisit::ItemLikeVisitor>::visit_item\r\n  14: rustc_middle::hir::map::Map::visit_item_likes_in_module\r\n  15: rustc_typeck::impl_wf_check::check_mod_impl_wf\r\n  16: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::check_mod_impl_wf>::compute\r\n  17: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  18: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  19: rustc_data_structures::stack::ensure_sufficient_stack\r\n  20: rustc_query_system::query::plumbing::get_query_impl\r\n  21: rustc_query_system::query::plumbing::ensure_query_impl\r\n  22: rustc_typeck::impl_wf_check::impl_wf_check\r\n  23: rustc_typeck::check_crate\r\n  24: rustc_interface::passes::analysis\r\n  25: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::analysis>::compute\r\n  26: rustc_middle::dep_graph::<impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind>::with_deps\r\n  27: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  28: rustc_data_structures::stack::ensure_sufficient_stack\r\n  29: rustc_query_system::query::plumbing::get_query_impl\r\n  30: rustc_interface::passes::QueryContext::enter\r\n  31: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  32: rustc_span::with_source_map\r\n  33: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n<details><summary><strong>log with RUSTC_LOG=rustc_trait_selection::traits::specialize</strong></summary>\r\n<p>\r\n\r\n```\r\n$ env RUSTC_LOG=rustc_trait_selection::traits::specialize cargo +stage1debug build\r\n   Compiling playground v0.1.0 (/opt/workspace/playground)\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert_blindly: impl_def_id=DefId(5:4335 ~ alloc[ac87]::string::{impl#40}) st=None\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert_blindly: impl_def_id=DefId(5:4339 ~ alloc[ac87]::string::{impl#41}) st=CharSimplifiedType\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert_blindly: impl_def_id=DefId(5:4342 ~ alloc[ac87]::string::{impl#42}) st=StrSimplifiedType\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert_blindly: impl_def_id=DefId(5:4344 ~ alloc[ac87]::string::{impl#43}) st=AdtSimplifiedType(DefId(5:405 ~ alloc[ac87]::borrow::Cow))\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert_blindly: impl_def_id=DefId(5:4346 ~ alloc[ac87]::string::{impl#44}) st=AdtSimplifiedType(DefId(5:5557 ~ alloc[ac87]::string::String))\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert(DefId(0:16 ~ playground[cc5d]::{impl#0})): inserting TraitRef <Cow<'_, str> as std::string::ToString> into specialization graph\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert(impl_def_id=DefId(0:16 ~ playground[cc5d]::{impl#0}), simplified_self=Some(AdtSimplifiedType(DefId(0:6 ~ playground[cc5d]::Cow))))\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert: impl_def_id=DefId(0:16 ~ playground[cc5d]::{impl#0}), simplified_self=Some(AdtSimplifiedType(DefId(0:6 ~ playground[cc5d]::Cow))), possible_sibling=DefId(5:4335 ~ alloc[ac87]::string::{impl#40})\r\nDEBUG rustc_trait_selection::traits::specialize specializes(DefId(0:16 ~ playground[cc5d]::{impl#0}), DefId(5:4335 ~ alloc[ac87]::string::{impl#40}))\r\nDEBUG rustc_trait_selection::traits::specialize translate_substs(ParamEnv { caller_bounds: [], reveal: UserFacing }, DefId(5:4093 ~ alloc[ac87]::str::{impl#4}), [], Impl(DefId(5:4093 ~ alloc[ac87]::str::{impl#4})))\r\nDEBUG rustc_trait_selection::traits::specialize fulfill_implication(ParamEnv { caller_bounds: [], reveal: UserFacing }, trait_ref=<Cow<'_, str, std::string::String> as std::string::ToString> |- DefId(5:4335 ~ alloc[ac87]::string::{impl#40}) applies)\r\nDEBUG rustc_trait_selection::traits::specialize fulfill_implication: an impl for <Cow<'_, str, std::string::String> as std::string::ToString> specializes <_ as std::string::ToString>\r\nDEBUG rustc_trait_selection::traits::specialize specializes(DefId(5:4335 ~ alloc[ac87]::string::{impl#40}), DefId(0:16 ~ playground[cc5d]::{impl#0}))\r\nDEBUG rustc_trait_selection::traits::specialize fulfill_implication(ParamEnv { caller_bounds: [TraitPredicate(<T as std::fmt::Display>)], reveal: UserFacing }, trait_ref=<T as std::string::ToString> |- DefId(0:16 ~ playground[cc5d]::{impl#0}) applies)\r\nDEBUG rustc_trait_selection::traits::specialize translate_substs(ParamEnv { caller_bounds: [TraitPredicate(<T as std::fmt::Display>)], reveal: UserFacing }, DefId(5:4093 ~ alloc[ac87]::str::{impl#4}), [], Impl(DefId(5:4093 ~ alloc[ac87]::str::{impl#4})))\r\nDEBUG rustc_trait_selection::traits::specialize fulfill_implication: <T as std::string::ToString> does not unify with <Cow<'_, str, std::string::String> as std::string::ToString>\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph descending as child of TraitRef <T as std::string::ToString>\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert(impl_def_id=DefId(0:16 ~ playground[cc5d]::{impl#0}), simplified_self=Some(AdtSimplifiedType(DefId(0:6 ~ playground[cc5d]::Cow))))\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph placing as new sibling\r\nDEBUG rustc_trait_selection::traits::specialize::specialization_graph insert_blindly: impl_def_id=DefId(0:16 ~ playground[cc5d]::{impl#0}) st=AdtSimplifiedType(DefId(0:6 ~ playground[cc5d]::Cow))\r\nDEBUG rustc_trait_selection::traits::specialize translate_substs(ParamEnv { caller_bounds: [], reveal: UserFacing }, DefId(0:16 ~ playground[cc5d]::{impl#0}), [ReEarlyBound(0, '_)], Impl(DefId(5:4335 ~ alloc[ac87]::string::{impl#40})))\r\nDEBUG rustc_trait_selection::traits::specialize fulfill_implication(ParamEnv { caller_bounds: [], reveal: UserFacing }, trait_ref=<Cow<'_, str> as std::string::ToString> |- DefId(5:4335 ~ alloc[ac87]::string::{impl#40}) applies)\r\nDEBUG rustc_trait_selection::traits::specialize translate_substs(ParamEnv { caller_bounds: [], reveal: UserFacing }, DefId(5:4093 ~ alloc[ac87]::str::{impl#4}), [], Impl(DefId(5:4093 ~ alloc[ac87]::str::{impl#4})))\r\nDEBUG rustc_trait_selection::traits::specialize fulfill_implication: for impls on <Cow<'_, str> as std::string::ToString> and <_ as std::string::ToString>, could not fulfill: [FulfillmentError(Obligation(predicate=ProjectionPredicate(ProjectionTy { substs: [str], item_def_id: DefId(5:397 ~ alloc[ac87]::borrow::ToOwned::Owned) }, <str as std::borrow::ToOwned>::Owned), depth=2),MismatchedProjectionTypes(Sorts(ExpectedFound { expected: std::string::String, found: <str as std::borrow::ToOwned>::Owned })))] given []\r\nerror: internal compiler error: compiler/rustc_trait_selection/src/traits/specialize/mod.rs:101:21: When translating substitutions for specialization, the expected specialization failed to hold\r\n\r\nthread 'rustc' panicked at 'Box<Any>', compiler/rustc_errors/src/lib.rs:958:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\n```\r\n\r\n</p>\r\n</details>", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/79224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/79224/timeline", "performed_via_github_app": null, "state_reason": "completed"}