{"url": "https://api.github.com/repos/rust-lang/rust/issues/33773", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33773/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33773/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33773/events", "html_url": "https://github.com/rust-lang/rust/issues/33773", "id": 156110926, "node_id": "MDU6SXNzdWUxNTYxMTA5MjY=", "number": 33773, "title": "Can't catch panic!() if main application is in C, causes SIGILL", "user": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-05-21T16:46:49Z", "updated_at": "2016-05-23T01:37:28Z", "closed_at": "2016-05-21T17:20:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/sdroege/rust-c-panic-bug for a testcase\n\nIf you run \"make run\", trying to catch the panic!() will fail with a SIGILL. \"make run2\" will catch it and exit the application cleanly. I'm testing this with rustc 1.8.0.\n\nWhat happens with \"make run\" is that main() is from a C application that calls into a Rust function that panics, but where the panic should be caught by the Drop implementation of \"PanicGuard\". Which will exit() the process if thread::panicking() is true. However before the Drop implementation even runs, the process is killed by a SIGILL while trying to unwind the stack.\n\nThe same application with main() being from a Rust application works as intended (make run2).\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33773/timeline", "performed_via_github_app": null, "state_reason": "completed"}