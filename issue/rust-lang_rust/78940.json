{"url": "https://api.github.com/repos/rust-lang/rust/issues/78940", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78940/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78940/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78940/events", "html_url": "https://github.com/rust-lang/rust/issues/78940", "id": 740526422, "node_id": "MDU6SXNzdWU3NDA1MjY0MjI=", "number": 78940, "title": "Destructor of one struct field depends on other without any correlation", "user": {"login": "MihirLuthra", "id": 42952059, "node_id": "MDQ6VXNlcjQyOTUyMDU5", "avatar_url": "https://avatars.githubusercontent.com/u/42952059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MihirLuthra", "html_url": "https://github.com/MihirLuthra", "followers_url": "https://api.github.com/users/MihirLuthra/followers", "following_url": "https://api.github.com/users/MihirLuthra/following{/other_user}", "gists_url": "https://api.github.com/users/MihirLuthra/gists{/gist_id}", "starred_url": "https://api.github.com/users/MihirLuthra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MihirLuthra/subscriptions", "organizations_url": "https://api.github.com/users/MihirLuthra/orgs", "repos_url": "https://api.github.com/users/MihirLuthra/repos", "events_url": "https://api.github.com/users/MihirLuthra/events{/privacy}", "received_events_url": "https://api.github.com/users/MihirLuthra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 125141240, "node_id": "MDU6TGFiZWwxMjUxNDEyNDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-dst", "name": "A-dst", "color": "f7e101", "default": false, "description": "Area: Dynamically Sized Types"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-11-11T07:07:08Z", "updated_at": "2020-11-11T07:09:14Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I have a struct with 2 fields. Destructor of one field depends on the other without any correlation (at least I don't see any). Below is a short snippet showing the bugged behaviour. Main code can be found on this stackoverflow post: [StackOverflow question](https://stackoverflow.com/questions/64769867/destructor-of-one-struct-field-depends-on-other-without-any-correlation)\r\n\r\n```rust\r\nstruct Iter<'a> {\r\n    inner: Option<Box<dyn Iterator<Item = &'a str>>>,\r\n}\r\n\r\nstruct BuilderData<'a> {\r\n    builder_struct_name: &'a str,\r\n    fields_mapped_iter: Iter<'a>,\r\n}\r\n\r\nfn derive() {\r\n    let fields_mapped_iter = Iter { inner: None };\r\n    let builder_struct_name = &String::new();\r\n    let _ = BuilderData {\r\n        builder_struct_name,\r\n        fields_mapped_iter,\r\n    };\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nThis produces the following error:\r\n```\r\nerror[E0716]: temporary value dropped while borrowed\r\n  --> /Users/mihir/fquicktest/data/user_data/instances/jyn_code.rs:12:32\r\n   |\r\n12 |     let builder_struct_name = &String::new();\r\n   |                                ^^^^^^^^^^^^^ creates a temporary which is freed while still in use\r\n...\r\n17 | }\r\n   | -\r\n   | |\r\n   | temporary value is freed at the end of this statement\r\n   | borrow might be used here, when `fields_mapped_iter` is dropped and runs the destructor for type `Iter<'_>`\r\n   |\r\n   = note: consider using a `let` binding to create a longer lived value\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\nThe error is telling that `fields_mapped_iter`'s destructor depends on `builder_struct_name` for some reason.\r\n\r\nIf I swap the declaration lines to make it like this:\r\n\r\n```rust\r\nlet builder_struct_name = &String::new();\r\nlet fields_mapped_iter = Iter { inner: None };\r\n```\r\nBecause `fields_mapped_iter` is moved below `builder_struct_name`, `fields_mapped_iter`'s destructor is called first and so that time `builder_struct_name` is alive and no error is shown by the compiler.\r\n\r\nAlthough, don't really understand why does the destructor even depend on another field.\r\n\r\nMoreover, if the struct is changed to use a separate lifetime `'b` for `fields_mapped_iter` as shown below, all the issues go away and this destructor dependency is gone.\r\n\r\n```rust\r\nstruct BuilderData<'a, 'b> {\r\n    builder_struct_name: &'a str,\r\n    fields_mapped_iter: Iter<'b>,\r\n}\r\n```\r\n\r\n### Meta\r\nTested on both stable and nightly and the results are same.\r\n\r\n**Stable Version**\r\n```\r\nmihir@Mihirs-MacBook-Pro rust_issue % rustc --version --verbose             \r\nrustc 1.42.0 (b8cedc004 2020-03-09)\r\nbinary: rustc\r\ncommit-hash: b8cedc00407a4c56a3bda1ed605c6fc166655447\r\ncommit-date: 2020-03-09\r\nhost: x86_64-apple-darwin\r\nrelease: 1.42.0\r\nLLVM version: 9.0\r\n\r\n```\r\n\r\n**Nightly Version**\r\n```\r\nmihir@Mihirs-MacBook-Pro rust_issue % rustc --version --verbose             \r\nrustc 1.49.0-nightly (1eaadebb3 2020-10-21)\r\nbinary: rustc\r\ncommit-hash: 1eaadebb3dee31669c7649b32747381d11614fae\r\ncommit-date: 2020-10-21\r\nhost: x86_64-apple-darwin\r\nrelease: 1.49.0-nightly\r\nLLVM version: 11.0\r\n```\r\n\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nmihir@Mihirs-MacBook-Pro rust_issue % RUST_BACKTRACE=1 cargo build --verbose\r\n   Compiling rust_issue v0.1.0 (/Users/mihir/rust_issue/rust_issue)\r\n     Running `rustc --crate-name rust_issue --edition=2018 src/main.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=02e048f8a4b6614d -C extra-filename=-02e048f8a4b6614d --out-dir /Users/mihir/rust_issue/rust_issue/target/debug/deps -C incremental=/Users/mihir/rust_issue/rust_issue/target/debug/incremental -L dependency=/Users/mihir/rust_issue/rust_issue/target/debug/deps`\r\nerror[E0716]: temporary value dropped while borrowed\r\n  --> src/main.rs:12:32\r\n   |\r\n12 |     let builder_struct_name = &String::new();\r\n   |                                ^^^^^^^^^^^^^ creates a temporary which is freed while still in use\r\n...\r\n17 | }\r\n   | -\r\n   | |\r\n   | temporary value is freed at the end of this statement\r\n   | borrow might be used here, when `fields_mapped_iter` is dropped and runs the destructor for type `Iter<'_>`\r\n   |\r\n   = note: consider using a `let` binding to create a longer lived value\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0716`.\r\nerror: could not compile `rust_issue`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --crate-name rust_issue --edition=2018 src/main.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type bin --emit=dep-info,link -C debuginfo=2 -C metadata=02e048f8a4b6614d -C extra-filename=-02e048f8a4b6614d --out-dir /Users/mihir/rust_issue/rust_issue/target/debug/deps -C incremental=/Users/mihir/rust_issue/rust_issue/target/debug/incremental -L dependency=/Users/mihir/rust_issue/rust_issue/target/debug/deps` (exit code: 1)\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\ncc @jyn514 ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78940/timeline", "performed_via_github_app": null, "state_reason": null}