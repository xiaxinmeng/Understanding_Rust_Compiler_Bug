{"url": "https://api.github.com/repos/rust-lang/rust/issues/100177", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/100177/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/100177/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/100177/events", "html_url": "https://github.com/rust-lang/rust/issues/100177", "id": 1330284684, "node_id": "I_kwDOAAsO6M5PSoiM", "number": 100177, "title": "Generic trait with generic supertrait bound by associated type can't be used in trait bound with associated type", "user": {"login": "robinhundt", "id": 24554122, "node_id": "MDQ6VXNlcjI0NTU0MTIy", "avatar_url": "https://avatars.githubusercontent.com/u/24554122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinhundt", "html_url": "https://github.com/robinhundt", "followers_url": "https://api.github.com/users/robinhundt/followers", "following_url": "https://api.github.com/users/robinhundt/following{/other_user}", "gists_url": "https://api.github.com/users/robinhundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinhundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinhundt/subscriptions", "organizations_url": "https://api.github.com/users/robinhundt/orgs", "repos_url": "https://api.github.com/users/robinhundt/repos", "events_url": "https://api.github.com/users/robinhundt/events{/privacy}", "received_events_url": "https://api.github.com/users/robinhundt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}, {"id": 5260993605, "node_id": "LA_kwDOAAsO6M8AAAABOZRkRQ", "url": "https://api.github.com/repos/rust-lang/rust/labels/fixed-by-next-solver", "name": "fixed-by-next-solver", "color": "93CE7D", "default": false, "description": "Fixed by the next-generation trait solver, `-Ztrait-solver=next`"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-08-05T18:57:01Z", "updated_at": "2023-03-13T16:37:33Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to create a `Channel` abstraction over `Sink` and `Stream` and encountered the following issue:\n\nGiven the following (simplified without Sink and Stream) code: [Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=c8273c047fd65cf6ce11c5b49eced321)\n\n```rust\ntrait GenericTrait<T> {}\n\ntrait Channel<I>: GenericTrait<Self::T> {\n    type T;\n}\n\ntrait Sender {\n    type Msg;\n\n    fn send<C>()\n    where\n        C: Channel<Self::Msg>;\n}\n\nimpl<T> Sender for T {\n    type Msg = ();\n\n    fn send<C>()\n    where\n        C: Channel<Self::Msg>,\n    {\n    }\n}\n\n// This works\nfn foo<I, C>(ch: C) where C: Channel<I> {}\n```\n\nThe current output is:\n\n```\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the trait bound `C: Channel<()>` is not satisfied\n  --> src/lib.rs:18:5\n   |\n18 | /     fn send<C>()\n19 | |     where\n20 | |         C: Channel<Self::Msg>,\n   | |______________________________^ the trait `Channel<()>` is not implemented for `C`\n   |\nhelp: consider further restricting this bound\n   |\n20 |         C: Channel<Self::Msg> + Channel<()>,\n   |                               +++++++++++++\n\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the trait bound `C: Channel<()>` is not satisfied\n  --> src/lib.rs:20:12\n   |\n20 |         C: Channel<Self::Msg>,\n   |            ^^^^^^^^^^^^^^^^^^ the trait `Channel<()>` is not implemented for `C`\n   |\nhelp: consider further restricting this bound\n   |\n20 |         C: Channel<Self::Msg> + Channel<()>,\n   |                               +++++++++++++\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `playground` due to 2 previous errors\n```\n\nThe issue is present in stable, beta and nightly.\n\nWhen either removing the generic parameter on `GenericParameter<I>`, the `Self::T` bound on `trait Channel<I>: GenericTrait<Self::T>` or the `Self::Msg` bound on the send method\n```\nfn send<C>()\n    where\n        C: Channel<Self::Msg>;\n```\nthe code compiles.\n\nI think this is at least a diagnostics bug, as the error message is quite unhelpful :D This also seems like a bug/limitation of the trait system?\n\n\nThis might be related/the same as #58231 or #57905, but I wasn't exactly sure.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"compiler-errors\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/100177/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/100177/timeline", "performed_via_github_app": null, "state_reason": null}