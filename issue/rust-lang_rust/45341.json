{"url": "https://api.github.com/repos/rust-lang/rust/issues/45341", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/45341/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/45341/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/45341/events", "html_url": "https://github.com/rust-lang/rust/issues/45341", "id": 266114151, "node_id": "MDU6SXNzdWUyNjYxMTQxNTE=", "number": 45341, "title": "Implement `std::fmt::Display` for `()`", "user": {"login": "bvssvni", "id": 1743862, "node_id": "MDQ6VXNlcjE3NDM4NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1743862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvssvni", "html_url": "https://github.com/bvssvni", "followers_url": "https://api.github.com/users/bvssvni/followers", "following_url": "https://api.github.com/users/bvssvni/following{/other_user}", "gists_url": "https://api.github.com/users/bvssvni/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvssvni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvssvni/subscriptions", "organizations_url": "https://api.github.com/users/bvssvni/orgs", "repos_url": "https://api.github.com/users/bvssvni/repos", "events_url": "https://api.github.com/users/bvssvni/events{/privacy}", "received_events_url": "https://api.github.com/users/bvssvni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-17T12:57:33Z", "updated_at": "2017-11-14T06:59:26Z", "closed_at": "2017-11-14T06:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "In generic code, I `()` as a \"default type\". I would like to write code which represents a custom `Display` with special behavior for `()` and default behavior for other types. The check can be done using `TypeId`, but since `()` does not implement `Display` it can not be used as constraint on the type parameter.\r\n\r\n[Link to playground example](https://play.rust-lang.org/?gist=5de086aabfe18e03c4359bee9156f439&version=undefined)\r\n\r\n```rust\r\nuse std::fmt;\r\n\r\npub struct Foo<T>(T);\r\n\r\nimpl<T: 'static + fmt::Display> fmt::Display for Foo<T> {\r\n    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\r\n        use std::any::TypeId;\r\n    \r\n        if TypeId::of::<()>() == TypeId::of::<T>() {\r\n            write!(fmt, \"{}\", self.0)?;\r\n        } else {\r\n            write!(fmt, \"(empty)\")?;\r\n        }\r\n        Ok(())\r\n    }\r\n}\r\n\r\nfn main() {\r\n    let foo = Foo(());\r\n    println!(\"{}\", foo);\r\n}\r\n```", "closed_by": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/45341/reactions", "total_count": 5, "+1": 0, "-1": 5, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/45341/timeline", "performed_via_github_app": null, "state_reason": "completed"}