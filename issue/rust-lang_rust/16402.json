{"url": "https://api.github.com/repos/rust-lang/rust/issues/16402", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16402/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16402/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16402/events", "html_url": "https://github.com/rust-lang/rust/issues/16402", "id": 39910179, "node_id": "MDU6SXNzdWUzOTkxMDE3OQ==", "number": 16402, "title": "Problems with linking with system-wide installed libraries", "user": {"login": "jauhien", "id": 1590238, "node_id": "MDQ6VXNlcjE1OTAyMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1590238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jauhien", "html_url": "https://github.com/jauhien", "followers_url": "https://api.github.com/users/jauhien/followers", "following_url": "https://api.github.com/users/jauhien/following{/other_user}", "gists_url": "https://api.github.com/users/jauhien/gists{/gist_id}", "starred_url": "https://api.github.com/users/jauhien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jauhien/subscriptions", "organizations_url": "https://api.github.com/users/jauhien/orgs", "repos_url": "https://api.github.com/users/jauhien/repos", "events_url": "https://api.github.com/users/jauhien/events{/privacy}", "received_events_url": "https://api.github.com/users/jauhien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37547, "node_id": "MDU6TGFiZWwzNzU0Nw==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-linkage", "name": "A-linkage", "color": "f7e101", "default": false, "description": "Area: linking into static, shared libraries and binaries"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2014-08-10T15:41:01Z", "updated_at": "2019-03-11T17:20:24Z", "closed_at": "2019-03-11T17:20:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Short description**\n\nRust linking system has one big problem now, that blocks possibility to have a given rust package to be installed and to be developed on the same system.\n\ntl;dr: when you have a library installed system wide and you are developing package that contains this library (and uses other system wide installed libs) you'll have problems with linking because of\n\n```\nerror: multiple dylib candidates for `hello_world` found\n```\n\n**Example projects**\n\nConsider the minimal example, think we have those projects:\n1. A library\n2. A project that has executables + libraries\n\nA library project looks like this:\n\n```\njauhien@zcj linking % cat hello_lib/hello_lib.rs \n#![crate_type = \"dylib\"]\n\npub fn hello(name: &str) -> String {\n    \"Hello, \".to_string() + name + \"!\".to_string()\n}\n```\n\nA project with binary and library looks like this:\n\n```\njauhien@zcj linking % cat hello_world/hello_world.rs \n#![crate_type = \"dylib\"]\n\nextern crate hello_lib;\n\nuse hello_lib::hello;\n\npub fn hello_name(name: &str, surname: &str) -> String {\n    hello((name.to_string() + \" \" + surname).as_slice())\n}\n```\n\n```\njauhien@zcj linking % cat hello_world/hello.rs \n#![crate_type = \"bin\"]\n\nextern crate hello_world;\n\nuse hello_world::hello_name;\n\nfn main() {\n   println!(\"{}\", hello_name(\"Test\", \"Test\"))\n}\n```\n\n**Steps to reproduce the error**\n\nI use 'image' directory as root here.\n1. Compile and install hello_lib library\n   \n   ```\n   jauhien@zcj hello_lib % rustc hello_lib.rs \n   jauhien@zcj hello_lib % cp libhello_lib.so ../image/usr/lib \n   ```\n2. Compile and install hello_world project that uses hello_lib\n   \n   ```\n   jauhien@zcj hello_world % rustc hello_world.rs -L ../image/usr/lib\n   jauhien@zcj hello_world % rustc hello.rs -L . -L ../image/usr/lib \n   jauhien@zcj hello_world % cp libhello_world.so ../image/usr/lib \n   jauhien@zcj hello_world % cp hello ../image/usr/bin \n   ```\n   \n   Test if it works:\n   \n   ```\n   jauhien@zcj hello_world % LD_LIBRARY_PATH=../image/usr/lib ../image/usr/bin/hello\n   Hello, Test Test!         \n   ```\n3. Continue developing of hello_world project and try to recompile it\n   \n   ```\n   jauhien@zcj hello_world % rustc hello_world.rs -L ../image/usr/lib\n   jauhien@zcj hello_world % rustc hello.rs -L . -L ../image/usr/lib \n   hello.rs:3:1: 3:26 error: multiple dylib candidates for `hello_world` found\n   hello.rs:3 extern crate hello_world;\n              ^~~~~~~~~~~~~~~~~~~~~~~~~\n   hello.rs:3:1: 3:26 note: candidate #1: /home/jauhien/work/rust/linking/hello_world/libhello_world.so\n   hello.rs:3 extern crate hello_world;\n              ^~~~~~~~~~~~~~~~~~~~~~~~~\n   hello.rs:3:1: 3:26 note: candidate #2: /home/jauhien/work/rust/linking/image/usr/lib/libhello_world.so\n   hello.rs:3 extern crate hello_world;\n              ^~~~~~~~~~~~~~~~~~~~~~~~~\n   error: aborting due to previous error\n   ```\n\n**Conclusions**\n\nSo we have problem with current linking system. It is bad because\n- it makes not possible to develop rust software on the machine that has already installed version of this software (as rust infrastructure will grow, nearly every project will use libraries from system)\n- it leads to problems with packaging rust software (and rust compiler itself), see e.g. https://github.com/rust-lang/rust/issues/13421, https://github.com/Heather/gentoo-rust/issues/19 and https://github.com/rust-lang/rust/issues/13733\n\nI think that this issue can be solved if some algorithm that chooses which dynamic library to use depending on the order of -L flags is introduced to linking code. That means, e.g. use libraries found under the earliest -L path and ignore others.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16402/timeline", "performed_via_github_app": null, "state_reason": "completed"}