{"url": "https://api.github.com/repos/rust-lang/rust/issues/95541", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/95541/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/95541/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/95541/events", "html_url": "https://github.com/rust-lang/rust/issues/95541", "id": 1188717355, "node_id": "I_kwDOAAsO6M5G2mMr", "number": 95541, "title": "Tcp/UdpSocket.set_ttl fails on macOS for ipv6 sockets", "user": {"login": "mfelsche", "id": 1152667, "node_id": "MDQ6VXNlcjExNTI2Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1152667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfelsche", "html_url": "https://github.com/mfelsche", "followers_url": "https://api.github.com/users/mfelsche/followers", "following_url": "https://api.github.com/users/mfelsche/following{/other_user}", "gists_url": "https://api.github.com/users/mfelsche/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfelsche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfelsche/subscriptions", "organizations_url": "https://api.github.com/users/mfelsche/orgs", "repos_url": "https://api.github.com/users/mfelsche/repos", "events_url": "https://api.github.com/users/mfelsche/events{/privacy}", "received_events_url": "https://api.github.com/users/mfelsche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-31T20:36:27Z", "updated_at": "2022-03-31T20:36:27Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I tried this code:\r\n\r\n```rust\r\nuse std::net::{Ipv6Addr, SocketAddrV6, UdpSocket};\r\n\r\nfn main() {\r\n    let laddr = SocketAddrV6::new(Ipv6Addr::new(0,0,0,0,0,0,0,1), 50000, 0, 0);\r\n    let destination = SocketAddrV6::new(Ipv6Addr::new(0,0,0,0,0,0,0,1), 50000, 0, 0);\r\n\r\n    let socket = UdpSocket::bind(laddr).unwrap();\r\n    socket.connect(destination).unwrap();\r\n    socket.set_ttl(10).unwrap();\r\n    println!(\"{:?}\", socket.ttl().unwrap());\r\n\r\n    let payload = [1,2,3,4,5,6,7,8];\r\n    socket.send(&payload).unwrap();\r\n}\r\n```\r\n\r\nI expected to see this happen:\r\n\r\nAs reported in #47727 using `set_ttl` on a IPv6 based socket does not have any effect and does not set the hop limit correctly. I was able to reproduce this on linux. But on macOS Big Sur (11.6.5) this actually fails.\r\n\r\nI expected this snippet above to print `10` and issue the pakets with the default hop limit. I mean, I actually expected this call to set the hoplimit correctly, but given i knew about #47727 i lowered my expectations a bit.\r\n\r\nI would have loved to have the documentation of `set_ttl` to tell me that it is intended to only work on ipv4 (given, i don't know both protocol and packet fields by heart) or to work for both ipv4 and ipv6.\r\n\r\nInstead, this happened:\r\n\r\nThe snippet above fails with the following output when trying to set the `IP_TTL` field via `setsockopt`:\r\n\r\n```\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 22, kind: InvalidInput, message: \"Invalid argument\" }', src/main.rs:9:24\r\n```\r\n\r\nIt is reproducible for `TcpSocket` as well.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0 (9d1b2106e 2022-02-23)\r\nbinary: rustc\r\ncommit-hash: 9d1b2106e23b1abd32fce1f17267604a5102f57a\r\ncommit-date: 2022-02-23\r\nhost: x86_64-apple-darwin\r\nrelease: 1.59.0\r\nLLVM version: 13.0.0\r\n\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 22, kind: InvalidInput, message: \"Invalid argument\" }', src/main.rs:9:24\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/panicking.rs:116:14\r\n   2: core::result::unwrap_failed\r\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/result.rs:1690:5\r\n   3: core::result::Result<T,E>::unwrap\r\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/result.rs:1018:23\r\n   4: ttl_fun::main\r\n             at ./src/main.rs:9:5\r\n   5: core::ops::function::FnOnce::call_once\r\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/ops/function.rs:227:5\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/95541/reactions", "total_count": 5, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 2}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/95541/timeline", "performed_via_github_app": null, "state_reason": null}