{"url": "https://api.github.com/repos/rust-lang/rust/issues/42715", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/42715/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/42715/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/42715/events", "html_url": "https://github.com/rust-lang/rust/issues/42715", "id": 236655098, "node_id": "MDU6SXNzdWUyMzY2NTUwOTg=", "number": 42715, "title": "operator overloading - suggestion - generalise comparison operator output", "user": {"login": "dobkeratops", "id": 1120754, "node_id": "MDQ6VXNlcjExMjA3NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1120754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dobkeratops", "html_url": "https://github.com/dobkeratops", "followers_url": "https://api.github.com/users/dobkeratops/followers", "following_url": "https://api.github.com/users/dobkeratops/following{/other_user}", "gists_url": "https://api.github.com/users/dobkeratops/gists{/gist_id}", "starred_url": "https://api.github.com/users/dobkeratops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dobkeratops/subscriptions", "organizations_url": "https://api.github.com/users/dobkeratops/orgs", "repos_url": "https://api.github.com/users/dobkeratops/repos", "events_url": "https://api.github.com/users/dobkeratops/events{/privacy}", "received_events_url": "https://api.github.com/users/dobkeratops/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-17T11:23:23Z", "updated_at": "2017-06-19T18:21:26Z", "closed_at": "2017-06-19T18:21:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could the comparision operators `fn gt()  fn lt()` etc  be generalised to use an over-rideable output type (which defaults to 'bool'), e.g. allowing    `fn gt(&self,&Vec4<f32>) -> Vec4<BoolMask32>`  or whatever.\r\n\r\nWould this need the `PartialOrd` constraint to also be parameterised  to keep existing code working, or would the operators themselves have to be extracted into new dedicated traits, and `PartialOrd` depends on specifically bool-operator outputs. (i.e. vectorized bool no longer satisfies PartialOrd in any way).\r\n\r\n**Motivation:**\r\n\r\nI think It would be more consistent when making a vectorized operator library to allow *all* operators to return vectorized results, even if this breaks the ability to use such types in traditional 'branchy' code (as this is sometimes the point of a vectorized library, e.g. for SIMD, predicted SIMD).\r\n\r\nBeing a systems language,  Rust surely wants to surely handle the use cases of C++, and there are many devices where routine use of vectorized types is important for performance. (a real world example  I dealt with was making vector operators easy to use, but also constraining their ability to be used in branchy code because that was expensive .. e.g. a branch costed more than matrix multiplies or whatever).\r\n\r\nWhat I imagine is the vectorized select masks would have methods '.any()', '.all()' (horizontal bitor / bitand) to produce straightforward bools to slot into 'if' etc.\r\n\r\nThis example does not break safety.  The trait system should allow more opportunity for a library to guide the user with meaningful error messages, so confusion should not be a hazard here.", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/42715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/42715/timeline", "performed_via_github_app": null, "state_reason": "completed"}