{"url": "https://api.github.com/repos/rust-lang/rust/issues/86487", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/86487/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/86487/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/86487/events", "html_url": "https://github.com/rust-lang/rust/issues/86487", "id": 925592592, "node_id": "MDU6SXNzdWU5MjU1OTI1OTI=", "number": 86487, "title": "confusing \"lifetime mismatch\" error when spawning task", "user": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1049510487, "node_id": "MDU6TGFiZWwxMDQ5NTEwNDg3", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-async-await", "name": "A-async-await", "color": "f7e101", "default": false, "description": "Area: Async & Await"}, {"id": 1259721467, "node_id": "MDU6TGFiZWwxMjU5NzIxNDY3", "url": "https://api.github.com/repos/rust-lang/rust/labels/AsyncAwait-Triaged", "name": "AsyncAwait-Triaged", "color": "d4c5f9", "default": false, "description": "Async-await issues that have been triaged during a working group meeting."}, {"id": 1359848690, "node_id": "MDU6TGFiZWwxMzU5ODQ4Njkw", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-mcve", "name": "E-needs-mcve", "color": "02e10c", "default": false, "description": "Call for participation: This issue needs a Minimal Complete and Verifiable Example"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-06-20T12:48:43Z", "updated_at": "2021-06-25T17:25:29Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "_suggested labels: A-diagnostics, A-async-await, D-confusing, requires-nightly_\r\n\r\n## Introduction\r\n\r\nHey diagnostics team. I'm currently helping a pal debug some code, and we're experiencing a particularly gnarly error. We haven't been able to figure out what's going wrong, so we can't provide a repro either. So I'm opening this issue so folks can come along on the journey we're on, and maybe we can figure out both what the root error is -- and how to improve the error messages -- together!\r\n\r\n## Setting the scene\r\n\r\nThe current project lives on the `spawn` branch of the `peermap-ingest` project. To get started do:\r\n\r\n```sh\r\n$ git clone https://github.com/substack/peermaps-ingest\r\n$ git checkout origin spawn   # latest commit at time of writing is: ebb442c8716a0c6fa5d511756fcde940726f6be4\r\n$ rustup override set nightly # rust version used at the time of writing is 1.54.0-nightly MSVC\r\n$ cargo check\r\n```\r\n\r\nThe following code is where our error points us to. We're pushing `async-std` `task::JoinHandle` into a `Vec` so we can await all handles together later on. Each task processes a command, which interacts with a backing store asynchronously in the background. If an error occurs, we log it. The `async move {}` block's generated future returns a `()`.\r\n\r\n```rust\r\nfor _ in 0..nthreads {\r\n    let this = self.clone();\r\n    let r = receiver.clone();\r\n    work.push(async_std::task::spawn(async move {\r\n        loop {\r\n            if r.is_closed() {\r\n                break;\r\n            }\r\n            if let Ok((key, value)) = r.recv().await {\r\n                let res: Result<(), Error> = match decode(&key.data, &value) {\r\n                    Err(e) => Err(e.into()),\r\n                    Ok(Decoded::Node(node)) => this.create_node(&node).await,\r\n                    Ok(Decoded::Way(way)) => this.create_way(&way).await,\r\n                    Ok(Decoded::Relation(relation)) => this.create_relation(&relation).await,\r\n                };\r\n                if let Some(f) = this.reporter.lock().await.as_mut() {\r\n                    match res {\r\n                        Err(e) => f(Phase::Process(), Err(e.into())),\r\n                        Ok(r) => f(Phase::Process(), Ok(r)),\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }));\r\n}\r\n\r\n```\r\n\r\nRunning the code generates the following output:\r\n\r\n```\r\nPS C:\\Users\\yoshu\\Code\\peermaps-ingest> cargo c\r\n    Checking peermaps-ingest v1.0.2 (C:\\Users\\yoshu\\Code\\peermaps-ingest)\r\nerror[E0308]: mismatched types\r\n   --> src\\lib.rs:148:17\r\n    |\r\n148 |       work.push(async_std::task::spawn(async move {\r\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\r\n    |\r\n    = note: expected type `Result<_, Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>>`\r\n               found enum `Result<_, Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>>`\r\nnote: the lifetime requirement is introduced here\r\n   --> C:\\Users\\yoshu\\scoop\\persist\\rustup\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs:28:29\r\n    |\r\n28  |     F: Future<Output = T> + Send + 'static,\r\n    |                             ^^^^\r\n\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0308`.\r\nerror: could not compile `peermaps-ingest`\r\n```\r\n\r\n## What are we looking at?\r\n\r\nThe main error describes a: \"lifetime mismatch\". It then points to a call site, highlights the type signatures, and finally points to where the requirement was defined. However this has some issues:\r\n\r\n- the types in `note: expected type` do not carry any explicit lifetimes, and look otherwise identical to each other\r\n- `note: the lifetime requirement is introduced here` points to the `Send` param in `async_std::task::spawn`. That's not a lifetime, which makes it confusing.\r\n- we have to assume that the mention of \"lifetime\" here refers to the `'static` lifetime in `async_std::task::spawn`, but we cannot know for sure.\r\n- in fact, given `Send` is highlighted in the second output makes it unclear whether the issue _actually_ is that we are trying to pass a `!Send` item to a function which required the item is `Send`.\r\n- the mention of `Result<_, Box<dyn Error + ...>>` is odd, since the return type of the `Future` is `()`. What error is being referred to here? It's unclear!\r\n\r\n## What have we tried so far?\r\n- I've added `+ 'static` notations to every `Error` definition in the code (and dependencies) to no change\r\n- I've replaced the anonymous `async move {}` block with an `async fn` to no change\r\n- I've manually gone through the function calls and into dependencies, commenting out code to find the root cause -- but I couldn't find any return types which were `!Send` or non-`'static` (after having done the error type fix as well)\r\n\r\n## What could be done to help solve this?\r\n\r\n- It's unclear whether it's an issue with `Send` or an issue with a lifetime (if so: which lifetime?). Clearing that up would be a first step.\r\n- The two types in `hint: expected type` should not be identical. If a lifetime is different, it should probably show up.\r\n- The link between `async_std::task::spawn` in the source, and the error in the `hint: expected type` is unclear. It'd be nice to know _which_ `Error` type is being referred to -- even if it's only shown with `--verbose` output. Needing to manually step through code takes a lot of time, where supposedly the compiler already knows this information (even if not displayed in the output).\r\n\r\n## Conclusion\r\n\r\nI hope this is enough information for someone to take a look at this. I think we're hitting a particularly gnarly combination of diagnostics failures here, which when put together make it hard to debug. Thanks heaps!\r\n\r\ncc/ @substack", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/86487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/86487/timeline", "performed_via_github_app": null, "state_reason": null}