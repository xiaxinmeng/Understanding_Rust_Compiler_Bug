{"url": "https://api.github.com/repos/rust-lang/rust/issues/13658", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/13658/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/13658/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/13658/events", "html_url": "https://github.com/rust-lang/rust/issues/13658", "id": 31902863, "node_id": "MDU6SXNzdWUzMTkwMjg2Mw==", "number": 13658, "title": "Tricky to construct a dynamically sized ~[T]", "user": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-21T15:46:29Z", "updated_at": "2014-08-19T11:00:29Z", "closed_at": "2014-08-19T02:13:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the removal of `~[T]` vector building functions by #13588, it is now very difficult to construct `~[T]` with a size known at runtime. Currently I opted for this replacement of `std::slice::from_elem`:\n\n``` rust\nfn from_elem<T: Clone>(size: uint, el: T) -> ~[T]\n{\n    use std::iter::Repeat;\n    Repeat::new(el).take(size).collect()\n}\n```\n\nbut it is unclear to me if this workaround is not merely an oversight. Is the intention to make dynamically sized `~[T]` impossible to construct?\n", "closed_by": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/13658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/13658/timeline", "performed_via_github_app": null, "state_reason": "completed"}