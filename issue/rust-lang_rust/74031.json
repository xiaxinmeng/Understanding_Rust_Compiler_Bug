{"url": "https://api.github.com/repos/rust-lang/rust/issues/74031", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/74031/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/74031/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/74031/events", "html_url": "https://github.com/rust-lang/rust/issues/74031", "id": 650889930, "node_id": "MDU6SXNzdWU2NTA4ODk5MzA=", "number": 74031, "title": "Debug line Information is wrong at opt level 3", "user": {"login": "lucamassarelli", "id": 12794148, "node_id": "MDQ6VXNlcjEyNzk0MTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/12794148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucamassarelli", "html_url": "https://github.com/lucamassarelli", "followers_url": "https://api.github.com/users/lucamassarelli/followers", "following_url": "https://api.github.com/users/lucamassarelli/following{/other_user}", "gists_url": "https://api.github.com/users/lucamassarelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucamassarelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucamassarelli/subscriptions", "organizations_url": "https://api.github.com/users/lucamassarelli/orgs", "repos_url": "https://api.github.com/users/lucamassarelli/repos", "events_url": "https://api.github.com/users/lucamassarelli/events{/privacy}", "received_events_url": "https://api.github.com/users/lucamassarelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-04T13:17:18Z", "updated_at": "2023-06-19T15:06:16Z", "closed_at": "2023-06-19T15:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nLine 9  is hit while executing allocator for Box object.\r\n``` bash\r\n\r\n$ cat -n a.rs \r\n     1  #![feature(test)]\r\n     2  extern crate test;\r\n     3\r\n     4  fn foo(x: i32, y: i32) -> i64 {\r\n     5      (x + y) as i64\r\n     6  }\r\n     7\r\n     8  #[inline(never)]\r\n     9  fn bar() {\r\n    10      let _f = Box::new(0);\r\n    11      // This call used to trigger an LLVM bug in opt-level z where the base\r\n    12      // pointer gets corrupted, see issue #45034\r\n    13      let y: fn(i32, i32) -> i64 = test::black_box(foo);\r\n    14      test::black_box(y(1, 2));\r\n    15  }\r\n    16\r\n    17  fn main() {\r\n    18      bar();\r\n    19  }\r\n\r\n$ cat a.rs \r\n#![feature(test)]\r\nextern crate test;\r\nfn foo(x: i32, y: i32) -> i64 {\r\n    (x + y) as i64\r\n}\r\n#[inline(never)]\r\nfn bar() {\r\n    let _f = Box::new(0);\r\n    // This call used to trigger an LLVM bug in opt-level z where the base\r\n    // pointer gets corrupted, see issue #45034\r\n    let y: fn(i32, i32) -> i64 = test::black_box(foo);\r\n    test::black_box(y(1, 2));\r\n}\r\nfn main() {\r\n    bar();\r\n}\r\n\r\n$ rustc --version\r\nrustc 1.46.0-nightly (3503f565e 2020-07-02)\r\n\r\n$ lldb -v\r\nlldb version 11.0.0\r\n  clang revision ee26a31e7b02e124d71091d47f2ae624774e5e0a\r\n  llvm revision ee26a31e7b02e124d71091d47f2ae624774e5e0a\r\n\r\n$ rustc -g -C opt-level=3 -o opt a.rs\r\n\r\n$ lldb opt\r\n(lldb) target create \"opt\"\r\nCurrent executable set to '/home/stepping/output/opt' (x86_64).\r\n(lldb) b a::main\r\nBreakpoint 1: where = opt`a::main::h1122ef72fcd4218b at a.rs:18:5, address = 0x0000000000004200\r\n(lldb) r\r\nProcess 153 launched: '/home/stepping/output/opt' (x86_64)\r\nProcess 153 stopped\r\n* thread #1, name = 'opt', stop reason = breakpoint 1.1\r\n    frame #0: 0x0000555555558200 opt`a::main::h1122ef72fcd4218b at a.rs:18:5\r\n   15   }\r\n   16  \r\n   17   fn main() {\r\n-> 18       bar();\r\n   19   }\r\n(lldb) s\r\nProcess 153 stopped\r\n* thread #1, name = 'opt', stop reason = step in\r\n    frame #0: 0x0000555555558170 opt`a::bar::h11b207b891496261 at a.rs:10\r\n   7   \r\n   8    #[inline(never)]\r\n   9    fn bar() {\r\n-> 10       let _f = Box::new(0);\r\n   11       // This call used to trigger an LLVM bug in opt-level z where the base\r\n   12       // pointer gets corrupted, see issue #45034\r\n   13       let y: fn(i32, i32) -> i64 = test::black_box(foo);\r\n(lldb) s\r\nProcess 153 stopped\r\n* thread #1, name = 'opt', stop reason = step in\r\n    frame #0: 0x0000555555558170 opt`a::bar::h11b207b891496261 [inlined] alloc::boxed::Box$LT$T$GT$::new::hc55307ff476377cf(x=0) at boxed.rs:177\r\n(lldb) s\r\nProcess 153 stopped\r\n* thread #1, name = 'opt', stop reason = step in\r\n    frame #0: 0x0000555555558170 opt`a::bar::h11b207b891496261 at alloc.rs:277\r\n(lldb) s\r\nProcess 153 stopped\r\n* thread #1, name = 'opt', stop reason = step in\r\n    frame #0: 0x0000555555558170 opt`a::bar::h11b207b891496261 at alloc.rs:174\r\n(lldb) s\r\nProcess 153 stopped\r\n* thread #1, name = 'opt', stop reason = step in\r\n    frame #0: 0x0000555555558170 opt`a::bar::h11b207b891496261 [inlined] alloc::alloc::alloc::hed9e65422fb282db(layout=Layout @ 0x00007f521c047a30) at a.rs:9\r\n   6    }\r\n   7   \r\n   8    #[inline(never)]\r\n-> 9    fn bar() {\r\n   10       let _f = Box::new(0);\r\n   11       // This call used to trigger an LLVM bug in opt-level z where the base\r\n   12       // pointer gets corrupted, see issue #45034\r\n(lldb) bt\r\n* thread #1, name = 'opt', stop reason = step in\r\n  * frame #0: 0x0000555555558170 opt`a::bar::h11b207b891496261 [inlined] alloc::alloc::alloc::hed9e65422fb282db(layout=Layout @ 0x0000558880c42c40) at a.rs:9\r\n    frame #1: 0x0000555555558170 opt`a::bar::h11b207b891496261 at alloc.rs:174\r\n    frame #2: 0x0000555555558170 opt`a::bar::h11b207b891496261 at alloc.rs:277\r\n    frame #3: 0x0000555555558170 opt`a::bar::h11b207b891496261 [inlined] alloc::boxed::Box$LT$T$GT$::new::hc55307ff476377cf(x=0) at boxed.rs:177\r\n    frame #4: 0x0000555555558170 opt`a::bar::h11b207b891496261 at a.rs:10\r\n    frame #5: 0x0000555555558243 opt`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h1788e34dd67e53e6 at rt.rs:67:34\r\n    frame #6: 0x000055555555ff78 opt`std::rt::lang_start_internal::h4f696727fe904f48 [inlined] std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h7cea099ad4edf1eb at rt.rs:52:13\r\n    frame #7: 0x000055555555ff6d opt`std::rt::lang_start_internal::h4f696727fe904f48 [inlined] std::panicking::try::do_call::h42d93372c44025d2 at panicking.rs:342\r\n    frame #8: 0x000055555555ff6d opt`std::rt::lang_start_internal::h4f696727fe904f48 [inlined] std::panicking::try::hb47a4182362d3341 at panicking.rs:319\r\n    frame #9: 0x000055555555ff6d opt`std::rt::lang_start_internal::h4f696727fe904f48 [inlined] std::panic::catch_unwind::h2afcfbf3125915b4 at panic.rs:394\r\n    frame #10: 0x000055555555ff6d opt`std::rt::lang_start_internal::h4f696727fe904f48 at rt.rs:51\r\n    frame #11: 0x0000555555558238 opt`main + 40 \r\n```", "closed_by": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/74031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/74031/timeline", "performed_via_github_app": null, "state_reason": "completed"}