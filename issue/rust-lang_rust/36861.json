{"url": "https://api.github.com/repos/rust-lang/rust/issues/36861", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/36861/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/36861/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/36861/events", "html_url": "https://github.com/rust-lang/rust/issues/36861", "id": 180335252, "node_id": "MDU6SXNzdWUxODAzMzUyNTI=", "number": 36861, "title": "parent() returns Some(\"\") for single-component relative paths", "user": {"login": "oconnor663", "id": 860932, "node_id": "MDQ6VXNlcjg2MDkzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/860932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnor663", "html_url": "https://github.com/oconnor663", "followers_url": "https://api.github.com/users/oconnor663/followers", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "repos_url": "https://api.github.com/users/oconnor663/repos", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-09-30T15:37:49Z", "updated_at": "2021-04-01T16:45:02Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\nuse std::path::Path;\n\nfn main() {\n    println!(\"{:?}\", Path::new(\"/\").parent());  // None\n    println!(\"{:?}\", Path::new(\".\").parent());  // Some(\"\")\n    println!(\"{:?}\", Path::new(\"foo\").parent());  // Some(\"\")\n}\n```\n\nThe latter two cases feel weird to me. `Some(\"\")` by itself is kind of a contradiction, on the one hand saying \"yes there _is_ a parent\" and on the other hand returning an invalid path that really means \"no there isn't actually a parent.\" We've also tried to avoid creating empty path components in other cases, like the double-slash case `Path::new(\"a//b\").parent()`, which returns `Some(\"a\")` rather than `Some(\"\")`.\n\nFor consistency with `/`, it probably makes sense to have the parent of `.` be `None`. For `foo` I could imagine going either of two ways, either `Some(\".\")` or `None`. If folks agree that one of those options would be nice in theory, then I guess the second question is whether a behavior change here would break backwards compatibility too much to consider doing it. Would it make sense for me to put together a PR and then ask for a Crater run or something like that?\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/36861/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/36861/timeline", "performed_via_github_app": null, "state_reason": null}