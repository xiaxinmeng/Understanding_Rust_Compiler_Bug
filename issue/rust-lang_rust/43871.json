{"url": "https://api.github.com/repos/rust-lang/rust/issues/43871", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/43871/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/43871/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/43871/events", "html_url": "https://github.com/rust-lang/rust/issues/43871", "id": 250187751, "node_id": "MDU6SXNzdWUyNTAxODc3NTE=", "number": 43871, "title": "Unclear error message when using `Result` instead of `Ok`", "user": {"login": "joepie91", "id": 1663259, "node_id": "MDQ6VXNlcjE2NjMyNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1663259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joepie91", "html_url": "https://github.com/joepie91", "followers_url": "https://api.github.com/users/joepie91/followers", "following_url": "https://api.github.com/users/joepie91/following{/other_user}", "gists_url": "https://api.github.com/users/joepie91/gists{/gist_id}", "starred_url": "https://api.github.com/users/joepie91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joepie91/subscriptions", "organizations_url": "https://api.github.com/users/joepie91/orgs", "repos_url": "https://api.github.com/users/joepie91/repos", "events_url": "https://api.github.com/users/joepie91/events{/privacy}", "received_events_url": "https://api.github.com/users/joepie91/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-08-15T00:08:28Z", "updated_at": "2018-03-20T19:34:15Z", "closed_at": "2018-03-20T19:34:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I made the mistake of trying to do `if let Result(foo) = bar` instead of `if let Ok(foo) = bar`, and got a confusing error like the following:\r\n\r\n```\r\nerror[E0532]: expected tuple struct/variant, found enum `Result`\r\n  --> src/service/prime.rs:18:16\r\n   |\r\n18 |         if let Result(parsed_number) = request.parse::<u64>() {\r\n   |                ^^^^^^ not a tuple struct/variant\r\n```\r\n\r\nIt took me a while to figure out what was wrong here; the [error index entry](https://doc.rust-lang.org/error-index.html#E0532) for this error code was not very helpful either. Part of the problem is that the error tells me what it *isn't*, but not how what it *is* relates to that. To a beginner, the relationship between an Enum and one of its variants won't be intuitively obvious.\r\n\r\nPerhaps the compiler feedback could also be improved here by suggesting `Ok`/`Err` (for `Result`) and `Some`/`None` (for `Option`), as these are common cases where this might occur. A more generic approach would be to simply list expected/valid variants for the specified Enum.\r\n\r\n(As an aside, the contributing guidelines claimed that there would be an issue template, but there doesn't seem to be. I'm not sure whether that is intentional or not.)", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/43871/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/43871/timeline", "performed_via_github_app": null, "state_reason": "completed"}