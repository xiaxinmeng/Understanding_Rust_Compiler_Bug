{"url": "https://api.github.com/repos/rust-lang/rust/issues/47720", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/47720/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/47720/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/47720/events", "html_url": "https://github.com/rust-lang/rust/issues/47720", "id": 291303539, "node_id": "MDU6SXNzdWUyOTEzMDM1Mzk=", "number": 47720, "title": "On recursive requirements, elide repeating output", "user": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1659943986, "node_id": "MDU6TGFiZWwxNjU5OTQzOTg2", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-verbose", "name": "D-verbose", "color": "c9f7a3", "default": false, "description": "Too much output caused by a single piece of incorrect code"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-24T17:57:12Z", "updated_at": "2022-12-28T02:07:20Z", "closed_at": "2022-12-28T02:07:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When encountering [recursive requirements](https://play.rust-lang.org/?gist=c700819390969c7374e557e80157fe74&version=stable), elide some of the repeating output instead of having the following wall of text detailing every recursive step the compiler takes:\r\n\r\n```\r\nerror[E0275]: overflow evaluating the requirement `Foo: std::marker::Sync`\r\n --> src/main.rs:5:1\r\n  |\r\n5 | / lazy_static! {\r\n6 | |     static ref CHAR: Foo = unimplemented!();\r\n7 | | }\r\n  | |_^\r\n  |\r\n  = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\r\n  = note: required because it appears within the type `std::marker::PhantomData<Foo>`\r\n  = note: required because it appears within the type `Bar`\r\n  = note: required because it appears within the type `std::marker::PhantomData<Bar>`\r\n  = note: required because it appears within the type `Foo`\r\n  = note: required because it appears within the type `std::marker::PhantomData<Foo>`\r\n  = note: required because it appears within the type `Bar`\r\n  = note: required because it appears within the type `std::marker::PhantomData<Bar>`\r\n  = note: required because it appears within the type `Foo`\r\n  = note: required because it appears within the type `std::marker::PhantomData<Foo>`\r\n  = note: required because it appears within the type `Bar`\r\n8<8<8<8<8<8<8<\r\n  = note: required by `lazy_static::lazy::Lazy`\r\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\r\n```\r\n\r\n---\r\n\r\nThe following code\r\n\r\nhttps://github.com/rust-lang/rust/blob/a0dcecff90c45ad5d4eb60859e22bb3f1b03842a/src/librustc/traits/error_reporting.rs#L1285-L1293\r\n\r\nneeds to be modified to pass down a vector of the `Ty`s `note_obligation_cause_code` has encountered on previous runs. I feel it is reasonable to delay the `note`s from being produced until the bottom has been reached, and prune the list then. The output should be something along the lines of\r\n\r\n```\r\nerror[E0275]: overflow evaluating the requirement `Foo: std::marker::Sync`\r\n --> src/main.rs:5:1\r\n  |\r\n5 | / lazy_static! {\r\n6 | |     static ref CHAR: Foo = unimplemented!();\r\n7 | | }\r\n  | |_^\r\n  |\r\n  = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\r\n  = note: required because it appears within the type `std::marker::PhantomData<Foo>`\r\n  = note: required because it appears within the type `Bar`\r\n  = note: required because it appears within the type `std::marker::PhantomData<Bar>`\r\n  = note: required because it appears within the type `Foo`\r\n  = note: required because it appears within the type `std::marker::PhantomData<Foo>`\r\n  = note: ...and so on, these requirements repeat until reaching the recursion limit\r\n  = note: required by `lazy_static::lazy::Lazy`\r\n  = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\r\n```", "closed_by": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/47720/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/47720/timeline", "performed_via_github_app": null, "state_reason": "completed"}