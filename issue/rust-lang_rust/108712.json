{"url": "https://api.github.com/repos/rust-lang/rust/issues/108712", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/108712/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/108712/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/108712/events", "html_url": "https://github.com/rust-lang/rust/issues/108712", "id": 1609292120, "node_id": "I_kwDOAAsO6M5f69lY", "number": 108712, "title": "Invalid suggestion already set", "user": {"login": "Zannick", "id": 518709, "node_id": "MDQ6VXNlcjUxODcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/518709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zannick", "html_url": "https://github.com/Zannick", "followers_url": "https://api.github.com/users/Zannick/followers", "following_url": "https://api.github.com/users/Zannick/following{/other_user}", "gists_url": "https://api.github.com/users/Zannick/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zannick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zannick/subscriptions", "organizations_url": "https://api.github.com/users/Zannick/orgs", "repos_url": "https://api.github.com/users/Zannick/repos", "events_url": "https://api.github.com/users/Zannick/events{/privacy}", "received_events_url": "https://api.github.com/users/Zannick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}, {"id": 1596299768, "node_id": "MDU6TGFiZWwxNTk2Mjk5NzY4", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-invalid-suggestion", "name": "D-invalid-suggestion", "color": "c9f7a3", "default": false, "description": "A structured suggestion resulting in incorrect code"}, {"id": 1624891239, "node_id": "MDU6TGFiZWwxNjI0ODkxMjM5", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-incorrect", "name": "D-incorrect", "color": "c9f7a3", "default": false, "description": "A diagnostic that is giving misleading or incorrect information"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2023-03-03T21:49:17Z", "updated_at": "2023-04-17T16:25:40Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code ([playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=b04c8611f6937e8f8f08217183b4beed)):\r\n\r\n```rust\r\npub trait Ctx: Clone + Eq + Debug {\r\ntype Loc: Loc;\r\n}\r\n\r\npub trait Accessible {\r\n    type Context<'a>: Ctx;\r\n    fn can_access<'a>(&self, ctx: &Self::Context<'a>) -> bool;\r\n}\r\n\r\npub trait Id: Copy + Clone + Debug + Eq + Hash + Ord + PartialOrd {}\r\n\r\npub trait Loc: Accessible {\r\n    type LocId: Id;\r\n}\r\n\r\n// error\r\n#[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\r\npub enum History<T>\r\nwhere T: Ctx\r\n{\r\n    Visit(<<T as Ctx>::Loc as Loc>::LocId),\r\n    Action(<<T as Ctx>::Loc as Loc>::LocId),\r\n}\r\n\r\n#[derive(Copy, Clone, Default, Eq, PartialEq)]\r\npub struct HSlice<'a, T>\r\nwhere T: Ctx {\r\n    slice: &'a [History<T>],\r\n}\r\nimpl<'a, T> Hash for HSlice<'a, T> where T: Ctx {\r\n    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {\r\n        (*self.slice).hash(state);\r\n    }\r\n}\r\n```\r\n\r\nI expected either:\r\n1. code compiles (because `History<T>` implements `Hash` and thus `[History<T>]` implements `Hash`)\r\n2. a useful error message tells me to require `T: Hash`\r\n3. some other useful suggestion\r\n\r\nInstead, this happened:\r\n\r\nrust suggests deriving Hash on `History<T>` which has already done so.\r\n```\r\nerror[E0599]: the method `hash` exists for slice `[History<T>]`, but its trait bounds were not satisfied\r\n  --> src/lib.rs:37:23\r\n   |\r\n23 | pub enum History<T>\r\n   | ------------------- doesn't satisfy `History<T>: Hash`\r\n...\r\n37 |         (*self.slice).hash(state);\r\n   |                       ^^^^ method cannot be called on `[History<T>]` due to unsatisfied trait bounds\r\n   |\r\n   = note: the following trait bounds were not satisfied:\r\n           `History<T>: Hash`\r\n           which is required by `[History<T>]: Hash`\r\nhelp: consider annotating `History<T>` with `#[derive(Hash)]`\r\n   |\r\n23 | #[derive(Hash)]\r\n```\r\n\r\nI've included in the playground link an alternate derivation of `Hash` with the useful version of the error:\r\n\r\n```rust\r\n// Variant\r\n#[derive(Copy, Clone, Default, Eq, PartialEq)]\r\npub struct VSlice<'a, T>\r\nwhere T: Ctx {\r\n    slice: &'a [History<T>],\r\n}\r\nimpl<'a, T> Hash for VSlice<'a, T> where T: Ctx {\r\n    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {\r\n        self.slice.iter().for_each(|v| v.hash(state));\r\n    }\r\n}\r\n```\r\n\r\nerror:\r\n\r\n```\r\nerror[E0599]: the method `hash` exists for reference `&History<T>`, but its trait bounds were not satisfied\r\n  --> src/lib.rs:49:42\r\n   |\r\n23 | pub enum History<T>\r\n   | ------------------- doesn't satisfy `History<T>: Hash`\r\n...\r\n49 |         self.slice.iter().for_each(|v| v.hash(state));\r\n   |                                          ^^^^ method cannot be called on `&History<T>` due to unsatisfied trait bounds\r\n   |\r\nnote: trait bound `T: Hash` was not satisfied\r\n  --> src/lib.rs:22:45\r\n   |\r\n22 | #[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\r\n   |                                             ^^^^ unsatisfied trait bound introduced in this `derive` macro\r\n   = note: the following trait bounds were not satisfied:\r\n           `History<T>: Hash`\r\n           which is required by `&History<T>: Hash`\r\nhelp: consider restricting the type parameter to satisfy the trait bound\r\n   |\r\n24 | where T: Ctx, T: Hash\r\n   |             +++++++++\r\nhelp: consider annotating `History<T>` with `#[derive(Hash)]`\r\n   |\r\n23 | #[derive(Hash)]\r\n   |\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/108712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/108712/timeline", "performed_via_github_app": null, "state_reason": null}