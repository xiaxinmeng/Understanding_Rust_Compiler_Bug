{"url": "https://api.github.com/repos/rust-lang/rust/issues/82945", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82945/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82945/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82945/events", "html_url": "https://github.com/rust-lang/rust/issues/82945", "id": 826565263, "node_id": "MDU6SXNzdWU4MjY1NjUyNjM=", "number": 82945, "title": "`core::ptr::copy_nonoverlapping` crashes when writing to odd addresses on ARM `thumbv7em-none-eabihf`", "user": {"login": "birktj", "id": 2932651, "node_id": "MDQ6VXNlcjI5MzI2NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2932651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birktj", "html_url": "https://github.com/birktj", "followers_url": "https://api.github.com/users/birktj/followers", "following_url": "https://api.github.com/users/birktj/following{/other_user}", "gists_url": "https://api.github.com/users/birktj/gists{/gist_id}", "starred_url": "https://api.github.com/users/birktj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birktj/subscriptions", "organizations_url": "https://api.github.com/users/birktj/orgs", "repos_url": "https://api.github.com/users/birktj/repos", "events_url": "https://api.github.com/users/birktj/events{/privacy}", "received_events_url": "https://api.github.com/users/birktj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2021-03-09T20:10:05Z", "updated_at": "2021-03-12T18:55:13Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n## Updated report\r\n\r\nAfter some further investigation it seems that the `core::ptr::copy_nonoverlapping` function crashes when the dest address is not even on the `thumbv7em-none-eabihf` platform. In the example above I am copying two bytes and experience the crash when the address copied to is odd.\r\n\r\n### MWE:\r\n```rust\r\n#[inline(never)]\r\nfn mwe() {\r\n    let buf1 = \"424242\";\r\n    let mut buf2 = [0; 6];\r\n    let buf1_ptr = buf1.as_ptr();\r\n    let buf2_ptr = buf2.as_mut_ptr();\r\n\r\n    // Crashes if n is odd, not if n is even\r\n    let n = 1;\r\n\r\n    unsafe {\r\n        core::ptr::copy_nonoverlapping(buf1_ptr, buf2_ptr.offset(n), 2);\r\n    }\r\n\r\n    // Force usage of `buf2`\r\n    write!(DummyWrite, \"Test: {:?}\", &buf2).unwrap();\r\n}\r\n```\r\n\r\n## Original report\r\nI am using the [`cortex-m-semihosting`] crate to write debug messages over SWD, however when writing multi-digit numbers the execution hangs. Looking at the stacktrace from gdb it seems that execution is stuck on `core::ptr::copy_nonoverlapping`. Experimenting with trivial uses of `core::ptr::copy_nonoverlapping` does not seem to hang.\r\n\r\n```rust\r\nhprintln!(\"Test: {}\", 1); // works fine\r\nhprintln!(\"Test: {}\", 11); // hangs\r\n```\r\n\r\n### Meta\r\n\r\nThe same behaviour is also present in rust nightly.\r\n\r\nToolchain: `thumbv7em-none-eabihf`\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0 (cb75ad5db 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: cb75ad5db02783e8b0222fee363c5f63f7e2cf5b\r\ncommit-date: 2021-02-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0\r\n```\r\n\r\n### Stacktrace from gdb\r\n\r\n```\r\n#2  <signal handler called>\r\n#3  0x0c004c96 in core::intrinsics::copy_nonoverlapping<u8> ()\r\n    at /rustc/cb75ad5db02783e8b0222fee363c5f63f7e2cf5b//library/core/src/intrinsics.rs:1866\r\n#4  core::fmt::num::imp::fmt_u32 ()\r\n    at /rustc/cb75ad5db02783e8b0222fee363c5f63f7e2cf5b//library/core/src/fmt/num.rs:263\r\n#5  core::fmt::num::imp::{{impl}}::fmt ()\r\n    at /rustc/cb75ad5db02783e8b0222fee363c5f63f7e2cf5b//library/core/src/fmt/num.rs:287\r\n#6  0x0c0041c4 in core::fmt::run ()\r\n    at /rustc/cb75ad5db02783e8b0222fee363c5f63f7e2cf5b//library/core/src/fmt/mod.rs:1121\r\n#7  core::fmt::write ()\r\n    at /rustc/cb75ad5db02783e8b0222fee363c5f63f7e2cf5b//library/core/src/fmt/mod.rs:1089\r\n#8  0x0c0026aa in core::fmt::Write::write_fmt<cortex_m_semihosting::hio::HStderr> (\r\n    self=0x20000010 <cortex_m_semihosting::export::HSTDERR+4>, args=...)\r\n    at /home/birk/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/fmt/mod.rs:182\r\n#9  0x0c0025e4 in cortex_m_semihosting::export::hstderr_fmt::{{closure}} ()\r\n    at /home/birk/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-semihosting-0.3.7/src/export.rs:49\r\n#10 0x0c003068 in cortex_m::interrupt::free<closure-0,core::result::Result<(), ()>> (f=...)\r\n    at /home/birk/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.2/src/interrupt.rs:64\r\n#11 0x0c00251a in cortex_m_semihosting::export::hstderr_fmt (args=...)\r\n    at /home/birk/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-semihosting-0.3.7/src/export.rs:44\r\n#12 0x0c000474 in ex6::__cortex_m_rt_main () at /home/birk/docs/cam/p232/ex6/src/main.rs:41\r\n#13 0x0c00031a in ex6::__cortex_m_rt_main_trampoline ()\r\n    at /home/birk/docs/cam/p232/ex6/src/main.rs:20\r\n```\r\n\r\n[`cortex-m-semihosting`]: https://crates.io/crates/cortex-m-semihosting", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82945/timeline", "performed_via_github_app": null, "state_reason": null}