{"url": "https://api.github.com/repos/rust-lang/rust/issues/107896", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107896/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107896/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107896/events", "html_url": "https://github.com/rust-lang/rust/issues/107896", "id": 1580054464, "node_id": "I_kwDOAAsO6M5eLbfA", "number": 107896, "title": "Assinging to an i32 variable a binary representation of i32::MIN fails to compile", "user": {"login": "psvri", "id": 18021639, "node_id": "MDQ6VXNlcjE4MDIxNjM5", "avatar_url": "https://avatars.githubusercontent.com/u/18021639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psvri", "html_url": "https://github.com/psvri", "followers_url": "https://api.github.com/users/psvri/followers", "following_url": "https://api.github.com/users/psvri/following{/other_user}", "gists_url": "https://api.github.com/users/psvri/gists{/gist_id}", "starred_url": "https://api.github.com/users/psvri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psvri/subscriptions", "organizations_url": "https://api.github.com/users/psvri/orgs", "repos_url": "https://api.github.com/users/psvri/repos", "events_url": "https://api.github.com/users/psvri/events{/privacy}", "received_events_url": "https://api.github.com/users/psvri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 1183099971, "node_id": "MDU6TGFiZWwxMTgzMDk5OTcx", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-suggestion-diagnostics", "name": "A-suggestion-diagnostics", "color": "f7e101", "default": false, "description": "Area: suggestions generated by the compiler applied by cargo fix"}], "state": "closed", "locked": false, "assignee": {"login": "nicklimmm", "id": 65026286, "node_id": "MDQ6VXNlcjY1MDI2Mjg2", "avatar_url": "https://avatars.githubusercontent.com/u/65026286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicklimmm", "html_url": "https://github.com/nicklimmm", "followers_url": "https://api.github.com/users/nicklimmm/followers", "following_url": "https://api.github.com/users/nicklimmm/following{/other_user}", "gists_url": "https://api.github.com/users/nicklimmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicklimmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicklimmm/subscriptions", "organizations_url": "https://api.github.com/users/nicklimmm/orgs", "repos_url": "https://api.github.com/users/nicklimmm/repos", "events_url": "https://api.github.com/users/nicklimmm/events{/privacy}", "received_events_url": "https://api.github.com/users/nicklimmm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nicklimmm", "id": 65026286, "node_id": "MDQ6VXNlcjY1MDI2Mjg2", "avatar_url": "https://avatars.githubusercontent.com/u/65026286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicklimmm", "html_url": "https://github.com/nicklimmm", "followers_url": "https://api.github.com/users/nicklimmm/followers", "following_url": "https://api.github.com/users/nicklimmm/following{/other_user}", "gists_url": "https://api.github.com/users/nicklimmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicklimmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicklimmm/subscriptions", "organizations_url": "https://api.github.com/users/nicklimmm/orgs", "repos_url": "https://api.github.com/users/nicklimmm/repos", "events_url": "https://api.github.com/users/nicklimmm/events{/privacy}", "received_events_url": "https://api.github.com/users/nicklimmm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2023-02-10T17:15:07Z", "updated_at": "2023-06-15T19:04:09Z", "closed_at": "2023-06-15T19:04:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n-->\n\nI tried this code:\n\n```rust\nfn main() {\n    let x: i32 = 0b1000_0000_0000_0000_0000_0000_0000_0000i32;\n    println!(\"{}\", x);\n}\n```\n[playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=06a737b582f5b71f2ff93cd64cb0ff2c)\n\nI expected the code to compile since its i am assigning into x binary representation of i32::MIN, instead the compiler throws an error.\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\n1.67.1\n```\n\n<!--\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\n-->\n<details><summary>Backtrace</summary>\n<p>\n\n```\n   Compiling playground v0.0.1 (/playground)\nerror: literal out of range for `i32`\n --> src/main.rs:2:18\n  |\n2 |     let x: i32 = 0b1000_0000_0000_0000_0000_0000_0000_0000i32;\n  |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using the type `u32` instead: `0b1000_0000_0000_0000_0000_0000_0000_0000u32`\n  |\n  = note: the literal `0b1000_0000_0000_0000_0000_0000_0000_0000i32` (decimal `2147483648`) does not fit into the type `i32` and will become `-2147483648i32`\n  = note: `#[deny(overflowing_literals)]` on by default\n\nerror: could not compile `playground` due to previous error\n```\n\n</p>\n</details>\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"nicklimmm\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107896/timeline", "performed_via_github_app": null, "state_reason": "completed"}