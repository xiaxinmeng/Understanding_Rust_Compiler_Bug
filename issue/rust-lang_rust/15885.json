{"url": "https://api.github.com/repos/rust-lang/rust/issues/15885", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15885/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15885/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15885/events", "html_url": "https://github.com/rust-lang/rust/issues/15885", "id": 38357116, "node_id": "MDU6SXNzdWUzODM1NzExNg==", "number": 15885, "title": "Initialization checks for fixed size arrays not initialized during declaration always fails", "user": {"login": "prajwalkman", "id": 1899883, "node_id": "MDQ6VXNlcjE4OTk4ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1899883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prajwalkman", "html_url": "https://github.com/prajwalkman", "followers_url": "https://api.github.com/users/prajwalkman/followers", "following_url": "https://api.github.com/users/prajwalkman/following{/other_user}", "gists_url": "https://api.github.com/users/prajwalkman/gists{/gist_id}", "starred_url": "https://api.github.com/users/prajwalkman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prajwalkman/subscriptions", "organizations_url": "https://api.github.com/users/prajwalkman/orgs", "repos_url": "https://api.github.com/users/prajwalkman/repos", "events_url": "https://api.github.com/users/prajwalkman/events{/privacy}", "received_events_url": "https://api.github.com/users/prajwalkman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-21T23:58:01Z", "updated_at": "2014-07-22T01:29:19Z", "closed_at": "2014-07-22T01:29:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Uninitialized fixed size arrays always throw `Use of possibly uninitialized variable` errors, even if all the indices are allocated. Is there a way around this? If not, it shouldn't be possible to create uninitialized fixed size arrays.\n\n``` rust\nstruct Num {s: int}\n\nfn main() {\n    let s = box Num {s: 5};\n    let mut a: [&Num, ..5];\n    a[0] = &*s;    a[1] = &*s;    a[2] = &*s;    a[3] = &*s;    a[4] = &*s;\n\n    println!(\"{}\", a[0].s) // error: use of possibly uninitialized variable: `a[..].s`\n\n}\n```\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15885/timeline", "performed_via_github_app": null, "state_reason": "completed"}