{"url": "https://api.github.com/repos/rust-lang/rust/issues/89382", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89382/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89382/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89382/events", "html_url": "https://github.com/rust-lang/rust/issues/89382", "id": 1011528042, "node_id": "I_kwDOAAsO6M48SrFq", "number": 89382, "title": "ICE related to non_exhaustive_omitted_patterns lint", "user": {"login": "chanks", "id": 300058, "node_id": "MDQ6VXNlcjMwMDA1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/300058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chanks", "html_url": "https://github.com/chanks", "followers_url": "https://api.github.com/users/chanks/followers", "following_url": "https://api.github.com/users/chanks/following{/other_user}", "gists_url": "https://api.github.com/users/chanks/gists{/gist_id}", "starred_url": "https://api.github.com/users/chanks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chanks/subscriptions", "organizations_url": "https://api.github.com/users/chanks/orgs", "repos_url": "https://api.github.com/users/chanks/repos", "events_url": "https://api.github.com/users/chanks/events{/privacy}", "received_events_url": "https://api.github.com/users/chanks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 3420005440, "node_id": "LA_kwDOAAsO6M7L2SRA", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-non_exhaustive_omitted_patterns_lint", "name": "F-non_exhaustive_omitted_patterns_lint", "color": "f9c0cc", "default": false, "description": "`#![feature(non_exhaustive_omitted_patterns_lint)]`"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-09-29T23:15:20Z", "updated_at": "2021-10-05T11:36:23Z", "closed_at": "2021-10-05T09:45:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nJust tried to update my toolchain from `nightly-2021-09-04` to `nightly-2021-09-29`, and I now get an ICE in a project of mine when I run `cargo check`.\r\n\r\n### Code\r\n\r\nI don't have a self-contained reproduction (though I can try to put one together if necessary). I see that the error is originating from the `non_exhaustive_omitted_patterns` lint introduced in 33a06b73d90bde1d2fc4902672f4cbeb233b83e2 (cc @DevinR528), and the only pattern destructuring happening in the `convert_bulk_write_failure` function mentioned in the error is:\r\n\r\n```Rust\r\nlet mongodb::error::BulkWriteFailure {\r\n\twrite_concern_error,\r\n\twrite_errors,\r\n\t..\r\n} = error;\r\n```\r\nIn the version of the mongodb crate I am using (2.0.0-beta.3), this struct is defined as:\r\n```rust\r\npub struct BulkWriteFailure {\r\n    /// The error(s) that occurred on account of a non write concern failure.\r\n    pub write_errors: Option<Vec<BulkWriteError>>,\r\n\r\n    /// The error that occurred on account of write concern failure.\r\n    pub write_concern_error: Option<WriteConcernError>,\r\n\r\n    #[serde(skip)]\r\n    pub(crate) inserted_ids: HashMap<usize, Bson>,\r\n}\r\n```\r\nThis makes me wonder if the compiler is getting confused by the `pub(crate)` visibility of the last field?\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc --version --verbose\r\nrustc 1.57.0-nightly (8f8092cc3 2021-09-28)\r\nbinary: rustc\r\ncommit-hash: 8f8092cc32ec171becef8ceacec7dbb06c5d7d7e\r\ncommit-date: 2021-09-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.57.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_typeck/src/check/pat.rs:1638:23: impossible case reached\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1146:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.57.0-nightly (8f8092cc3 2021-09-28) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z share-generics=y -C embed-bitcode=no -C debuginfo=2 -C linker=/usr/bin/clang -C incremental -C link-arg=-fuse-ld=lld --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `error_conversion::bulk_write_error::convert_bulk_write_failure`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: compiler/rustc_typeck/src/check/pat.rs:1638:23: impossible case reached\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1146:9\r\nstack backtrace:\r\n   0: std::panicking::begin_panic\r\n   1: std::panic::panic_any\r\n   2: rustc_errors::HandlerInner::bug\r\n   3: rustc_errors::Handler::bug\r\n   4: rustc_middle::ty::context::tls::with_opt\r\n   5: rustc_middle::util::bug::opt_span_bug_fmt\r\n   6: rustc_middle::util::bug::bug_fmt\r\n   7: rustc_typeck::check::pat::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::non_exhaustive_reachable_pattern::joined_uncovered_patterns\r\n   8: rustc_typeck::check::pat::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_struct_pat_fields\r\n   9: rustc_typeck::check::pat::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_pat\r\n  10: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_decl_local\r\n  11: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_stmt\r\n  12: rustc_typeck::check::fn_ctxt::checks::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_block_with_expected\r\n  13: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_kind\r\n  14: rustc_typeck::check::expr::<impl rustc_typeck::check::fn_ctxt::FnCtxt>::check_expr_with_expectation\r\n  15: rustc_typeck::check::check::check_fn\r\n  16: rustc_infer::infer::InferCtxtBuilder::enter\r\n  17: rustc_typeck::check::typeck\r\n  18: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  19: rustc_data_structures::stack::ensure_sufficient_stack\r\n  20: rustc_query_system::query::plumbing::try_execute_query\r\n  21: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  22: rustc_middle::ty::<impl rustc_middle::ty::context::TyCtxt>::par_body_owners\r\n  23: rustc_typeck::check::typeck_item_bodies\r\n  24: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  25: rustc_data_structures::stack::ensure_sufficient_stack\r\n  26: rustc_query_system::query::plumbing::try_execute_query\r\n  27: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck_item_bodies\r\n  28: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  29: rustc_typeck::check_crate\r\n  30: rustc_interface::passes::analysis\r\n  31: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task\r\n  32: rustc_data_structures::stack::ensure_sufficient_stack\r\n  33: rustc_query_system::query::plumbing::try_execute_query\r\n  34: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::analysis\r\n  35: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  36: rustc_span::with_source_map\r\n  37: rustc_interface::interface::create_compiler_and_run\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89382/timeline", "performed_via_github_app": null, "state_reason": "completed"}