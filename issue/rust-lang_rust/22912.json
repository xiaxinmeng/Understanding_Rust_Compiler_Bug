{"url": "https://api.github.com/repos/rust-lang/rust/issues/22912", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/22912/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/22912/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/22912/events", "html_url": "https://github.com/rust-lang/rust/issues/22912", "id": 59363562, "node_id": "MDU6SXNzdWU1OTM2MzU2Mg==", "number": 22912, "title": "Associated types lets you expose private types in public signatures (?)", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/rust-lang/rust/milestones/22", "html_url": "https://github.com/rust-lang/rust/milestone/22", "labels_url": "https://api.github.com/repos/rust-lang/rust/milestones/22/labels", "id": 924511, "node_id": "MDk6TWlsZXN0b25lOTI0NTEx", "number": 22, "title": "1.0 beta", "description": "", "creator": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 80, "state": "closed", "created_at": "2015-01-06T21:40:55Z", "updated_at": "2015-04-08T23:57:21Z", "due_on": null, "closed_at": "2015-04-08T23:57:21Z"}, "comments": 4, "created_at": "2015-02-28T22:51:48Z", "updated_at": "2015-03-03T14:18:13Z", "closed_at": "2015-03-03T14:18:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### STR\n\n``` rust\n#![crate_type = \"lib\"]\n\npub struct Public;\nstruct Private;\n\nimpl Iterator for Public {\n    type Item = Private;\n\n    fn next(&mut self) -> Option<Private> {  // OK(???) `Private` type in public method \n        unimplemented!();\n    }\n}\n\n// an inherent method rejects the same pattern\nimpl Public {\n    pub fn my_next(&mut self) -> Option<Private> {  //~ error: private type in exported type signature\n        unimplemented!();\n    }\n}\n\npub trait MyIterator<Item> {\n    fn next(&mut self) -> Option<Item>;\n}\n\n// the old version of `Iterator` doesn't allow returning `Private` from `next()` either\nimpl MyIterator<Private> for Public {  //~ error: private type in exported type signature\n    fn next(&mut self) -> Option<Private> {\n        unimplemented!();\n    }\n}\n```\n\nAFAIK, you can't put private types in \"public\" items (public as in marked with `pub`). `Iterator::next` is _not_ explicitly marked with `pub`, but for all intent and purposes all the methods in a trait are public if the trait is public. So, I think the `impl Iterator for Public { type Item = Private; .. }` should be rejected by the privacy checker. (Or, I could be wrong and this is \"correct\" behavior - and this wouldn't be the first time that the privacy/module system allows things that _I_ find [unreasonable](https://github.com/rust-lang/rust/issues/18082#issuecomment-59311096))\n### Version\n\n```\nrustc 1.0.0-nightly (e233987ce 2015-02-27) (built 2015-02-28)\n```\n\ncc @alexcrichton @nikomatsakis \n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/22912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/22912/timeline", "performed_via_github_app": null, "state_reason": "completed"}