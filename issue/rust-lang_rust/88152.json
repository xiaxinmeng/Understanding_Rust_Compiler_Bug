{"url": "https://api.github.com/repos/rust-lang/rust/issues/88152", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/88152/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/88152/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/88152/events", "html_url": "https://github.com/rust-lang/rust/issues/88152", "id": 974245374, "node_id": "MDU6SXNzdWU5NzQyNDUzNzQ=", "number": 88152, "title": "rustc disagrees with emcc about WASM struct ABI in parameters", "user": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 474645165, "node_id": "MDU6TGFiZWw0NzQ2NDUxNjU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-wasm", "name": "O-wasm", "color": "6e6ec0", "default": false, "description": "Target: WASM (WebAssembly), http://webassembly.org/"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-08-19T04:05:07Z", "updated_at": "2021-12-21T20:51:02Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I have the following Rust code, being compiled with `cargo +nightly build --target wasm32-unknown-unknown`\r\n\r\n\r\n```rust\r\n// in crate \"em\"\r\n\r\n#[repr(C)]\r\npub struct Options {\r\n    a: u8,\r\n    b: u8\r\n}\r\n\r\n#[no_mangle]\r\npub extern \"C\" fn take_struct(o: Options) {}\r\n```\r\n\r\nAnd the following C++ code, compiled with `emcc -std=c++17 test.cpp target/wasm32-unknown-unknown/debug/libem.a -ldl -lpthread -lm -g -o main.html --emrun -sWASM=1` (using the [emscripten sdk](https://emscripten.org/docs/getting_started/downloads.html))\r\n\r\n```cpp\r\n# test.cpp \r\nextern \"C\" {\r\n    typedef struct Options {\r\n        uint8_t a;\r\n        uint8_t b;\r\n    } Options;\r\n    void take_struct(Options o);\r\n}\r\n\r\nint main() {\r\n    Options o;\r\n    take_struct(o);\r\n    return 0;\r\n}\r\n```\r\n\r\nI expected to see this happen: The code would compile without warnings and run fine.\r\n\r\nInstead, this happened:\r\n\r\nemcc shows up the following warning:\r\n\r\n```\r\nwasm-ld: warning: function signature mismatch: take_struct\r\n>>> defined as (i32) -> void in /tmp/emscripten_temp_qz2pbc3_/test_0.o\r\n>>> defined as (i32, i32) -> void in target/wasm32-unknown-unknown/debug/libem.a(em.zb05z167nruq6bs.rcgu.o)\r\n```\r\n\r\nand running `main.html` in the browser throws the following error (to be expected based on the warning)\r\n\r\n```\r\nexception thrown: RuntimeError: unreachable,RuntimeError: unreachable\r\n    at signature_mismatch:take_struct (http://localhost:8000/main.wasm:wasm-function[1]:0x165)\r\n    at __original_main (http://localhost:8000/main.wasm:wasm-function[2]:0x1f1)\r\n    at main (http://localhost:8000/main.wasm:wasm-function[3]:0x20e)\r\n    at http://localhost:8000/main.js:1560:22\r\n    at callMain (http://localhost:8000/main.js:2142:15)\r\n    at doRun (http://localhost:8000/main.js:2212:23)\r\n    at http://localhost:8000/main.js:2223:7\r\n```\r\n\r\n\r\nSeems like rustc believes that the signature for `fn({u8, u8})` should be `(i32, i32) -> void`, whereas emcc believes it should be `(i32) -> void`.\r\n\r\nA lot of other function signatures work (including returning `Option`), it's specifically when such a struct is a parameter that this happens.\r\n\r\nI'm not sure which side is at fault here, but an incompatibility between Rust and emcc means that it won't be possible to use WASM with C++ programs that embed a little Rust (or vice versa), which seems like a problem worth highlighting. I think there are other ways to compile C++ to WASM via clang that I need to check out next.\r\n\r\n\r\n### Meta\r\n\r\n<details>\r\n<summary> Version info </summary>\r\n\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.56.0-nightly (2d2bc94c8 2021-08-15)\r\nbinary: rustc\r\ncommit-hash: 2d2bc94c8c3aa778e191f80261c726e4777439f1\r\ncommit-date: 2021-08-15\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.56.0-nightly\r\nLLVM version: 12.0.1\r\n$ emcc --version\r\nemcc (Emscripten gcc/clang-like replacement + linker emulating GNU ld) 2.0.27 (7e538a419c3649f3a540a57beab347aa8f6c6271)\r\nCopyright (C) 2014 the Emscripten authors (see AUTHORS.txt)\r\nThis is free and open source software under the MIT license.\r\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n```\r\n\r\n</details>\r\n\r\ncc @fitzgen ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/88152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/88152/timeline", "performed_via_github_app": null, "state_reason": null}