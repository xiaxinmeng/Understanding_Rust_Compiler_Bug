{"url": "https://api.github.com/repos/rust-lang/rust/issues/19056", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19056/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19056/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19056/events", "html_url": "https://github.com/rust-lang/rust/issues/19056", "id": 49168666, "node_id": "MDU6SXNzdWU0OTE2ODY2Ng==", "number": 19056, "title": "Trait object (e.g. `impl Any`) inherent methods can't be used in another crate", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2014-11-18T01:26:09Z", "updated_at": "2015-01-02T23:57:42Z", "closed_at": "2015-01-02T23:57:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### STR\n\n``` rust\n// any.rs\npub trait Any: 'static {}\n\nimpl<T> Any for T where T: 'static {}\n\nimpl Any {\n    pub fn is<T: 'static>(&self) -> bool { true }\n}\n\n#[test]\nfn is() {\n    let b: Box<bool> = box true;\n    let a: Box<Any> = b as Box<Any>;\n    assert!(a.is::<bool>());\n\n    let b: &bool = &true;\n    let a: &Any = b as &Any;\n    assert!(a.is::<bool>());\n}\n```\n\n``` rust\n// app.rs\nextern crate any;\n\nuse any::Any;\n\nfn main() {\n    let b: Box<bool> = box true;\n    let a: Box<Any> = b as Box<Any>;\n    assert!(a.is::<bool>());\n\n    let b: &bool = &true;\n    let a: &Any = b as &Any;\n    assert!(a.is::<bool>());\n}\n```\n\n``` rust\n$ rustc --test any.rs && ./any\nrunning 1 test\ntest is ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n$ rustc --crate-type=lib any.rs && rustc -L . app.rs\napp.rs:9:15: 9:27 error: type `Box<any::Any+'static>` does not implement any method in scope named `is`\napp.rs:9     assert!(a.is::<bool>());\n                       ^~~~~~~~~~~~\napp.rs:13:15: 13:27 error: type `&any::Any+'static` does not implement any method in scope named `is`\napp.rs:13     assert!(a.is::<bool>());\n                        ^~~~~~~~~~~~\nerror: aborting due to 2 previous errors\n```\n### Version\n\n88c743d\n\n---\n\ncc @nick29581 \n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19056/timeline", "performed_via_github_app": null, "state_reason": "completed"}