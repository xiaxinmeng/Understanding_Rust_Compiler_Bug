{"url": "https://api.github.com/repos/rust-lang/rust/issues/93823", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/93823/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/93823/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/93823/events", "html_url": "https://github.com/rust-lang/rust/issues/93823", "id": 1128868186, "node_id": "I_kwDOAAsO6M5DSSla", "number": 93823, "title": "ICE bootstrapping rustc with incremental cache", "user": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 307747675, "node_id": "MDU6TGFiZWwzMDc3NDc2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-incr-comp", "name": "A-incr-comp", "color": "f7e101", "default": false, "description": "Area: Incremental compilation"}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-02-09T18:08:27Z", "updated_at": "2023-02-26T11:51:22Z", "closed_at": "2023-02-26T11:51:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\nhttps://github.com/jyn514/rust/commit/0fa56d77280a959f6cd2a9c07942b8a3223dec1f\r\nwith this diff applied:\r\n\r\n<details>\r\n\r\n```diff\r\ndiff --git a/compiler/rustc_typeck/src/check/op.rs b/compiler/rustc_typeck/src/check/op.rs\r\nindex 74516acbfcf..6aa7f96d800 100644\r\n--- a/compiler/rustc_typeck/src/check/op.rs\r\n+++ b/compiler/rustc_typeck/src/check/op.rs\r\n@@ -10,7 +10,7 @@\r\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability,\r\n };\r\n use rustc_middle::ty::fold::TypeFolder;\r\n-use rustc_middle::ty::TyKind::{Adt, Array, Char, FnDef, Never, Ref, Str, Tuple, Uint};\r\n+use rustc_middle::ty::TyKind::{Array, Char, FnDef, Never, Ref, Str, Tuple, Uint};\r\n use rustc_middle::ty::{\r\n     self, suggest_constraining_type_param, Ty, TyCtxt, TypeFoldable, TypeVisitor,\r\n };\r\n@@ -426,15 +426,7 @@ fn check_overloaded_binop(\r\n                     let mut visitor = TypeParamVisitor(vec![]);\r\n                     visitor.visit_ty(lhs_ty);\r\n \r\n-                    if op.node == hir::BinOpKind::Add\r\n-                        && self.check_str_addition(\r\n-                            lhs_expr, rhs_expr, lhs_ty, rhs_ty, &mut err, is_assign, op,\r\n-                        )\r\n-                    {\r\n-                        // This has nothing here because it means we did string\r\n-                        // concatenation (e.g., \"Hello \" + \"World!\"). This means\r\n-                        // we don't want the note in the else clause to be emitted\r\n-                    } else if let [ty] = &visitor.0[..] {\r\n+                    if let [ty] = &visitor.0[..] {\r\n                         if let ty::Param(p) = *ty.kind() {\r\n                             // Check if the method would be found if the type param wasn't\r\n                             // involved. If so, it means that adding a trait bound to the param is\r\n@@ -534,96 +526,6 @@ fn add_type_neq_err_label(\r\n         false\r\n     }\r\n \r\n-    /// Provide actionable suggestions when trying to add two strings with incorrect types,\r\n-    /// like `&str + &str`, `String + String` and `&str + &String`.\r\n-    ///\r\n-    /// If this function returns `true` it means a note was printed, so we don't need\r\n-    /// to print the normal \"implementation of `std::ops::Add` might be missing\" note\r\n-    fn check_str_addition(\r\n-        &self,\r\n-        lhs_expr: &'tcx hir::Expr<'tcx>,\r\n-        rhs_expr: &'tcx hir::Expr<'tcx>,\r\n-        lhs_ty: Ty<'tcx>,\r\n-        rhs_ty: Ty<'tcx>,\r\n-        err: &mut rustc_errors::DiagnosticBuilder<'_>,\r\n-        is_assign: IsAssign,\r\n-        op: hir::BinOp,\r\n-    ) -> bool {\r\n-        let str_concat_note = \"string concatenation requires an owned `String` on the left\";\r\n-        let rm_borrow_msg = \"remove the borrow to obtain an owned `String`\";\r\n-        let to_owned_msg = \"create an owned `String` from a string reference\";\r\n-\r\n-        let string_type = self.tcx.get_diagnostic_item(sym::String);\r\n-        let is_std_string = |ty: Ty<'tcx>| match ty.ty_adt_def() {\r\n-            Some(ty_def) => Some(ty_def.did) == string_type,\r\n-            None => false,\r\n-        };\r\n-\r\n-        match (lhs_ty.kind(), rhs_ty.kind()) {\r\n-            (&Ref(_, l_ty, _), &Ref(_, r_ty, _)) // &str or &String + &str, &String or &&str\r\n-                if (*l_ty.kind() == Str || is_std_string(l_ty)) && (\r\n-                        *r_ty.kind() == Str || is_std_string(r_ty) ||\r\n-                        &format!(\"{:?}\", rhs_ty) == \"&&str\"\r\n-                    ) =>\r\n-            {\r\n-                if let IsAssign::No = is_assign { // Do not supply this message if `&str += &str`\r\n-                    err.span_label(op.span, \"`+` cannot be used to concatenate two `&str` strings\");\r\n-                    err.note(str_concat_note);\r\n-                    if let hir::ExprKind::AddrOf(_, _, lhs_inner_expr) = lhs_expr.kind {\r\n-                        err.span_suggestion_verbose(\r\n-                            lhs_expr.span.until(lhs_inner_expr.span),\r\n-                            rm_borrow_msg,\r\n-                            \"\".to_owned(),\r\n-                            Applicability::MachineApplicable\r\n-                        );\r\n-                    } else {\r\n-                        err.span_suggestion_verbose(\r\n-                            lhs_expr.span.shrink_to_hi(),\r\n-                            to_owned_msg,\r\n-                            \".to_owned()\".to_owned(),\r\n-                            Applicability::MachineApplicable\r\n-                        );\r\n-                    }\r\n-                }\r\n-                true\r\n-            }\r\n-            (&Ref(_, l_ty, _), &Adt(..)) // Handle `&str` & `&String` + `String`\r\n-                if (*l_ty.kind() == Str || is_std_string(l_ty)) && is_std_string(rhs_ty) =>\r\n-            {\r\n-                err.span_label(\r\n-                    op.span,\r\n-                    \"`+` cannot be used to concatenate a `&str` with a `String`\",\r\n-                );\r\n-                match is_assign {\r\n-                    IsAssign::No => {\r\n-                        let sugg_msg;\r\n-                        let lhs_sugg = if let hir::ExprKind::AddrOf(_, _, lhs_inner_expr) = lhs_expr.kind {\r\n-                            sugg_msg = \"remove the borrow on the left and add one on the right\";\r\n-                            (lhs_expr.span.until(lhs_inner_expr.span), \"\".to_owned())\r\n-                        } else {\r\n-                            sugg_msg = \"create an owned `String` on the left and add a borrow on the right\";\r\n-                            (lhs_expr.span.shrink_to_hi(), \".to_owned()\".to_owned())\r\n-                        };\r\n-                        let suggestions = vec![\r\n-                            lhs_sugg,\r\n-                            (rhs_expr.span.shrink_to_lo(), \"&\".to_owned()),\r\n-                        ];\r\n-                        err.multipart_suggestion_verbose(\r\n-                            sugg_msg,\r\n-                            suggestions,\r\n-                            Applicability::MachineApplicable,\r\n-                        );\r\n-                    }\r\n-                    IsAssign::Yes => {\r\n-                        err.note(str_concat_note);\r\n-                    }\r\n-                }\r\n-                true\r\n-            }\r\n-            _ => false,\r\n-        }\r\n-    }\r\n-\r\n     pub fn check_user_unop(\r\n         &self,\r\n         ex: &'tcx hir::Expr<'tcx>,\r\n```\r\n\r\n</details>\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nnote: rustc 1.59.0-beta.5 (28c8a34e1 2022-01-27) running on x86_64-unknown-linux-gnu\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nthread 'rustc' panicked at 'index out of bounds: the len is 906 but the index is 976', compiler/rustc_query_impl/src/on_disk_cache.rs:726:18\r\n```\r\n\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nBuilding stage0 compiler artifacts (x86_64-unknown-linux-gnu(x86_64-unknown-linux-gnu) -> x86_64-unknown-linux-gnu(x86_64-unknown-linux-gnu))\r\n   Compiling rustc_typeck v0.0.0 (/home/jnelson/rust-lang/rust/compiler/rustc_typeck)\r\n   Compiling rustc_privacy v0.0.0 (/home/jnelson/rust-lang/rust/compiler/rustc_privacy)\r\n   Compiling rustc_interface v0.0.0 (/home/jnelson/rust-lang/rust/compiler/rustc_interface)\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/28c8a34e18fc05277c81328d1bbf5ed931f4d22e/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/28c8a34e18fc05277c81328d1bbf5ed931f4d22e/library/core/src/panicking.rs:107:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/28c8a34e18fc05277c81328d1bbf5ed931f4d22e/library/core/src/panicking.rs:75:5\r\n   3: <rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   4: <rustc_middle::ty::VariantDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   5: <rustc_query_impl::on_disk_cache::CacheDecoder as rustc_serialize::serialize::Decoder>::read_seq::<alloc::vec::Vec<rustc_middle::ty::VariantDef>, <alloc::vec::Vec<rustc_middle::ty::VariantDef> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>\r\n   6: <rustc_middle::ty::adt::AdtDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   7: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   8: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   9: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  10: <smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]> as core::iter::traits::collect::Extend<rustc_middle::ty::subst::GenericArg>>::extend::<core::iter::adapters::ResultShunt<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, alloc::string::String>>\r\n  11: core::iter::adapters::process_results::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, rustc_middle::ty::subst::GenericArg, alloc::string::String, <core::result::Result<smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]>, alloc::string::String> as core::iter::traits::collect::FromIterator<core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String>>>::from_iter<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}, smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]>>\r\n  12: <core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String> as rustc_middle::ty::context::InternIteratorElement<rustc_middle::ty::subst::GenericArg, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>>::intern_with::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, <rustc_middle::ty::context::TyCtxt>::mk_substs<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}>\r\n  13: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  14: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  15: <smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]> as core::iter::traits::collect::Extend<rustc_middle::ty::subst::GenericArg>>::extend::<core::iter::adapters::ResultShunt<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, alloc::string::String>>\r\n  16: core::iter::adapters::process_results::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, rustc_middle::ty::subst::GenericArg, alloc::string::String, <core::result::Result<smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]>, alloc::string::String> as core::iter::traits::collect::FromIterator<core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String>>>::from_iter<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}, smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]>>\r\n  17: <core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String> as rustc_middle::ty::context::InternIteratorElement<rustc_middle::ty::subst::GenericArg, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>>::intern_with::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, <rustc_middle::ty::context::TyCtxt>::mk_substs<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}>\r\n  18: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  19: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  20: <smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]> as core::iter::traits::collect::Extend<rustc_middle::ty::subst::GenericArg>>::extend::<core::iter::adapters::ResultShunt<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, alloc::string::String>>\r\n  21: core::iter::adapters::process_results::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>, rustc_middle::ty::subst::GenericArg, alloc::string::String, <core::result::Result<smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]>, alloc::string::String> as core::iter::traits::collect::FromIterator<core::result::Result<rustc_middle::ty::subst::GenericArg, alloc::string::String>>>::from_iter<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>::{closure#0}, smallvec::SmallVec<[rustc_middle::ty::subst::GenericArg; 8]>>\r\n  22: <rustc_middle::ty::context::TyCtxt>::mk_substs::<core::iter::adapters::map::Map<core::ops::range::Range<usize>, <&rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>>\r\n  23: <rustc_middle::traits::ImplSource<()> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  24: <core::result::Result<rustc_middle::traits::ImplSource<()>, rustc_errors::ErrorReported> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  25: <rustc_query_impl::on_disk_cache::OnDiskCache>::try_load_query_result::<core::result::Result<rustc_middle::traits::ImplSource<()>, rustc_errors::ErrorReported>>\r\n  26: <<rustc_query_impl::queries::codegen_fulfill_obligation as rustc_query_system::query::config::QueryDescription<rustc_query_impl::plumbing::QueryCtxt>>::TRY_LOAD_FROM_DISK::{closure#0} as core::ops::function::FnOnce<(rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::dep_graph::serialized::SerializedDepNodeIndex)>>::call_once\r\n  27: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, (rustc_middle::ty::ParamEnv, rustc_middle::ty::sty::Binder<rustc_middle::ty::sty::TraitRef>), core::result::Result<rustc_middle::traits::ImplSource<()>, rustc_errors::ErrorReported>>\r\n  28: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(rustc_middle::ty::ParamEnv, rustc_middle::ty::sty::Binder<rustc_middle::ty::sty::TraitRef>), core::result::Result<rustc_middle::traits::ImplSource<()>, rustc_errors::ErrorReported>>>\r\n  29: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::codegen_fulfill_obligation\r\n  30: rustc_ty_utils::instance::inner_resolve_instance\r\n  31: rustc_ty_utils::instance::resolve_instance\r\n  32: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, rustc_middle::ty::ParamEnvAnd<(rustc_span::def_id::DefId, &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>)>, core::result::Result<core::option::Option<rustc_middle::ty::instance::Instance>, rustc_errors::ErrorReported>>\r\n  33: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::resolve_instance, rustc_query_impl::plumbing::QueryCtxt>\r\n  34: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::resolve_instance\r\n  35: <rustc_middle::ty::instance::Instance>::resolve\r\n  36: rustc_monomorphize::collector::collect_neighbours\r\n  37: rustc_monomorphize::collector::collect_items_rec\r\n  38: rustc_monomorphize::collector::collect_items_rec\r\n  39: rustc_monomorphize::collector::collect_items_rec\r\n  40: rustc_monomorphize::collector::collect_items_rec\r\n  41: rustc_monomorphize::collector::collect_items_rec\r\n  42: rustc_monomorphize::collector::collect_items_rec\r\n  43: rustc_monomorphize::collector::collect_items_rec\r\n  44: rustc_monomorphize::collector::collect_items_rec\r\n  45: rustc_monomorphize::collector::collect_items_rec\r\n  46: rustc_monomorphize::collector::collect_items_rec\r\n  47: rustc_monomorphize::collector::collect_items_rec\r\n  48: rustc_monomorphize::collector::collect_items_rec\r\n  49: rustc_monomorphize::collector::collect_items_rec\r\n  50: rustc_monomorphize::collector::collect_items_rec\r\n  51: rustc_monomorphize::collector::collect_items_rec\r\n  52: rustc_monomorphize::collector::collect_items_rec\r\n  53: rustc_monomorphize::collector::collect_items_rec\r\n  54: rustc_monomorphize::collector::collect_items_rec\r\n  55: rustc_monomorphize::collector::collect_items_rec\r\n  56: rustc_monomorphize::collector::collect_items_rec\r\n  57: rustc_monomorphize::collector::collect_items_rec\r\n  58: rustc_monomorphize::collector::collect_items_rec\r\n  59: rustc_monomorphize::collector::collect_items_rec\r\n  60: rustc_monomorphize::collector::collect_items_rec\r\n  61: rustc_monomorphize::collector::collect_items_rec\r\n  62: <rustc_session::session::Session>::time::<(), rustc_monomorphize::collector::collect_crate_mono_items::{closure#1}>\r\n  63: rustc_monomorphize::collector::collect_crate_mono_items\r\n  64: rustc_monomorphize::partitioning::collect_and_partition_mono_items\r\n  65: <rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind>::with_deps::<<rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task_impl<rustc_middle::ty::context::TyCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>::{closure#0}, (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>\r\n  66: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>\r\n  67: rustc_data_structures::stack::ensure_sufficient_stack::<((&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit]), rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>::{closure#3}>\r\n  68: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), (&std::collections::hash::set::HashSet<rustc_span::def_id::DefId, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, &[rustc_middle::mir::mono::CodegenUnit])>>\r\n  69: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::collect_and_partition_mono_items, rustc_query_impl::plumbing::QueryCtxt>\r\n  70: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::collect_and_partition_mono_items\r\n  71: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  72: <rustc_session::session::Session>::time::<alloc::boxed::Box<dyn core::any::Any>, rustc_interface::passes::start_codegen::{closure#0}>\r\n  73: <rustc_interface::queries::Queries>::ongoing_codegen\r\n  74: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  75: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  76: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  77: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-beta.5 (28c8a34e1 2022-01-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z macro-backtrace -Z tls-model=initial-exec -Z unstable-options -Z binary-dep-depinfo -Z force-unstable-if-unmarked -C opt-level=3 -C embed-bitcode=no -C debuginfo=0 -C incremental -C symbol-mangling-version=v0 -C link-args=-Wl,-z,origin -C link-args=-Wl,-rpath,$ORIGIN/../lib -C prefer-dynamic -C llvm-args=-import-instr-limit=10 --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `core::ops::function::FnMut` fulfills its obligations\r\n#1 [resolve_instance] resolving instance `<[closure@core::iter::adapters::copied::copy_try_fold<rustc_middle::ty::subst::GenericArg, (), core::ops::control_flow::ControlFlow<!>, [closure@core::iter::traits::iterator::Iterator::try_for_each::call<rustc_middle::ty::subst::GenericArg, core::ops::control_flow::ControlFlow<!>, [closure@rustc_middle::ty::subst::<impl rustc_middle::ty::fold::TypeFoldable for &rustc_middle::ty::list::List<rustc_middle::ty::subst::GenericArg>>::super_visit_with<check::op::TypeParamVisitor>::{closure#0}]>::{closure#0}]>::{closure#0}] as core::ops::function::FnMut<((), &rustc_middle::ty::subst::GenericArg)>>::call_mut`\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\nerror: could not compile `rustc_typeck`\r\n```\r\n</p>\r\n</details>", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/93823/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/93823/timeline", "performed_via_github_app": null, "state_reason": "completed"}