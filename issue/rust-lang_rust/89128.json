{"url": "https://api.github.com/repos/rust-lang/rust/issues/89128", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89128/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89128/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89128/events", "html_url": "https://github.com/rust-lang/rust/issues/89128", "id": 1001332360, "node_id": "I_kwDOAAsO6M47rx6I", "number": 89128, "title": "Clean up handling of `SelectionContext` 'intercrate' mode", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 4172483496, "node_id": "LA_kwDOAAsO6M74swuo", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types", "name": "T-types", "color": "bfd4f2", "default": false, "description": "Relevant to the types team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-20T19:44:47Z", "updated_at": "2023-04-05T17:39:50Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The struct `SelectionContext` has an `intercrate` field. This field is only enabled during coherence checking, when we want to see if two impls overlap.\r\n\r\nUnfortunately, this flag ends up 'infecting' a large amount of the trait selection / projection logic. In particular, `InferCtxt` is not aware of this flag, so we can end up caching a particular result (candidate, evaluation, or projection) in intercrate mode, and then using the cached result in non-intercrate mode.\r\n\r\nThe need for this flag may go away once we fully transition to Chalk. However, it might be worthwhile to investigate if it's possible to move (some of) the necessary logic out of `SelectionContext`, and into coherence checking. If we could make intercrate mode just record additional information (instead of actually altering the results of trait selection), we could safely re-use the same `InferCtxt` caches across different `SelectionContext`s.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89128/timeline", "performed_via_github_app": null, "state_reason": null}