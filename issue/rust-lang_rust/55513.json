{"url": "https://api.github.com/repos/rust-lang/rust/issues/55513", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55513/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55513/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55513/events", "html_url": "https://github.com/rust-lang/rust/issues/55513", "id": 375663407, "node_id": "MDU6SXNzdWUzNzU2NjM0MDc=", "number": 55513, "title": "'expected fn type' compiler panic caused by wrong \"if let ...\"", "user": {"login": "tamasfe", "id": 25967296, "node_id": "MDQ6VXNlcjI1OTY3Mjk2", "avatar_url": "https://avatars.githubusercontent.com/u/25967296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamasfe", "html_url": "https://github.com/tamasfe", "followers_url": "https://api.github.com/users/tamasfe/followers", "following_url": "https://api.github.com/users/tamasfe/following{/other_user}", "gists_url": "https://api.github.com/users/tamasfe/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamasfe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamasfe/subscriptions", "organizations_url": "https://api.github.com/users/tamasfe/orgs", "repos_url": "https://api.github.com/users/tamasfe/repos", "events_url": "https://api.github.com/users/tamasfe/events{/privacy}", "received_events_url": "https://api.github.com/users/tamasfe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-30T19:48:34Z", "updated_at": "2019-01-14T15:22:45Z", "closed_at": "2019-01-14T15:22:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The if condition in the following code causes both the stable and nightly compilers to panic:\r\n\r\n```\r\nextern crate failure;\r\nextern crate walkdir;\r\n\r\nuse failure::Error;\r\nuse std::ffi::OsStr;\r\n\r\nuse walkdir::WalkDir;\r\n\r\nfn main() {\r\n    let mut errors = Vec::<Error>::new();\r\n    for file in WalkDir::new(\".\").follow_links(true) {\r\n        let entry = match file {\r\n            Ok(e) => e,\r\n            Err(e) => {\r\n                errors.push(Error::from(e));\r\n                continue;\r\n            }\r\n        };\r\n\r\n        if let Some(OsStr::new(\"yaml\")) = entry.path().extension() { // <- Here\r\n            // dostuff with yaml file\r\n        }\r\n    }\r\n}\r\n```\r\nNow I know it doesn't work like this, but still shouldn't crash the compiler.\r\n\r\n_(Just out of curiosity, does something like `if option? == some_value {...}` exist in the language?)_\r\n\r\n## Meta\r\n\r\n**rustc version:**\r\nrustc 1.31.0-nightly (d586d5d2f 2018-10-29)\r\nbinary: rustc\r\ncommit-hash: d586d5d2f51489821b471f20959333558c24b129\r\ncommit-date: 2018-10-29\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.31.0-nightly\r\nLLVM version: 8.0\r\n\r\nOS is Fedora 28.\r\nThe bug also appears in the 1.30 stable release.\r\n\r\n**Backtrace:**\r\n\r\n```\r\nthread 'main' panicked at 'expected fn type', libcore/option.rs:1008:5\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/sys_common/backtrace.rs:59\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:480\r\n   6: std::panicking::continue_panic_fmt\r\n             at libstd/panicking.rs:390\r\n   7: rust_begin_unwind\r\n             at libstd/panicking.rs:325\r\n   8: core::panicking::panic_fmt\r\n             at libcore/panicking.rs:77\r\n   9: core::option::expect_failed\r\n             at libcore/option.rs:1008\r\n  10: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_pat_tuple_struct\r\n  11: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_pat_walk\r\n  12: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_pat_tuple_struct\r\n  13: rustc_typeck::check::_match::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::check_pat_walk\r\n  14: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  15: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  16: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  17: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  18: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  19: rustc_typeck::check::FnCtxt::check_expr_meets_expectation_or_error\r\n  20: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  21: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  22: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  23: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  24: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  25: rustc_typeck::check::FnCtxt::check_decl_local\r\n  26: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  27: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  28: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  29: rustc_typeck::check::FnCtxt::check_block_with_expected\r\n  30: rustc_typeck::check::FnCtxt::check_expr_kind\r\n  31: rustc_typeck::check::FnCtxt::check_expr_with_expectation_and_needs\r\n  32: rustc_typeck::check::FnCtxt::check_return_expr\r\n  33: rustc_typeck::check::check_fn\r\n  34: rustc::ty::context::tls::with_related_context\r\n  35: rustc::infer::InferCtxtBuilder::enter\r\n  36: rustc_typeck::check::typeck_tables_of\r\n  37: rustc::ty::query::__query_compute::typeck_tables_of\r\n  38: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_tables_of<'tcx>>::compute\r\n  39: rustc::ty::context::tls::with_context\r\n  40: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  41: rustc::ty::context::tls::with_related_context\r\n  42: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  43: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  44: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  45: rustc::session::Session::track_errors\r\n  46: rustc_typeck::check::typeck_item_bodies\r\n  47: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::typeck_item_bodies<'tcx>>::compute\r\n  48: rustc::ty::context::tls::with_context\r\n  49: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  50: rustc::ty::context::tls::with_related_context\r\n  51: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  52: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  53: rustc_typeck::check_crate\r\n  54: rustc::ty::context::tls::enter_context\r\n  55: <std::thread::local::LocalKey<T>>::with\r\n  56: rustc::ty::context::TyCtxt::create_and_enter\r\n  57: rustc_driver::driver::compile_input\r\n  58: rustc_driver::run_compiler_with_pool\r\n  59: rustc_driver::driver::spawn_thread_pool\r\n  60: rustc_driver::run_compiler\r\n  61: <scoped_tls::ScopedKey<T>>::set\r\n  62: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n  63: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  64: rustc_driver::run\r\n  65: rustc_driver::main\r\n  66: std::rt::lang_start::{{closure}}\r\n  67: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  68: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  69: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:392\r\n             at libstd/rt.rs:58\r\n  70: main\r\n  71: __libc_start_main\r\n  72: <unknown>\r\nquery stack during panic:\r\n#0 [typeck_tables_of] processing `main`\r\n#1 [typeck_item_bodies] type-checking all item bodies\r\nend of query stack\r\n```", "closed_by": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55513/timeline", "performed_via_github_app": null, "state_reason": "completed"}