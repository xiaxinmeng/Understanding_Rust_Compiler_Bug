{"url": "https://api.github.com/repos/rust-lang/rust/issues/51981", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/51981/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/51981/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/51981/events", "html_url": "https://github.com/rust-lang/rust/issues/51981", "id": 337500317, "node_id": "MDU6SXNzdWUzMzc1MDAzMTc=", "number": 51981, "title": "panic! source location information does not account for macro expansion", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 203130, "node_id": "MDU6TGFiZWwyMDMxMzA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-debuginfo", "name": "A-debuginfo", "color": "f7e101", "default": false, "description": "Area: Debugging information in compiled programs (DWARF, PDB, etc.)"}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-02T12:36:33Z", "updated_at": "2021-07-05T15:18:37Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Minimal working example ([playground](https://play.rust-lang.org/?gist=87760b03b9820a3b4e8226998cc72e4e&version=stable&mode=debug&edition=2015)): \r\n\r\n```rust\r\nmacro_rules! foo {\r\n    ($e:expr) => {\r\n        bar!($e);\r\n        baz!($e);\r\n    }\r\n}\r\nmacro_rules! bar {\r\n    ($e:expr) => { assert!($e); }  // line 8\r\n}\r\nmacro_rules! baz {\r\n    ($e:expr) => { assert!(!$e); }  // line 11\r\n}\r\n\r\nfn main() {\r\n    foo!(true);  // line 15\r\n}\r\n```\r\n\r\nproduces the following run-time error:\r\n\r\n```\r\nthread 'main' panicked at 'assertion failed: !true', src/main.rs:15:5\r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n```\r\n\r\nNotice how the `panic!` points at line 15, but the error happens at line 11.\r\n\r\nEnabling `RUST_BACKTRACE=1` does not help:\r\n\r\n```\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::print\r\n             at libstd/sys_common/backtrace.rs:71\r\n             at libstd/sys_common/backtrace.rs:59\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:463\r\n   5: std::panicking::begin_panic\r\n             at /checkout/src/libstd/panicking.rs:397\r\n   6: playground::main\r\n             at src/main.rs:15\r\n   7: std::rt::lang_start::{{closure}}\r\n             at /checkout/src/libstd/rt.rs:74\r\n   8: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n   9: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:105\r\n  10: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:374\r\n             at libstd/rt.rs:58\r\n  11: std::rt::lang_start\r\n             at /checkout/src/libstd/rt.rs:74\r\n  12: main\r\n  13: __libc_start_main\r\n  14: _start\r\n```\r\n\r\n---\r\n\r\nIt would be better for `assert!` and similar macros to not construct the error message from a `file:line:col`, but to use something better instead (like a macro-expansion API). \r\n\r\nA much more useful error message would have been:\r\n\r\n```\r\nthread 'main' panicked at 'assertion failed: !true', \r\n  src/main.rs:15:5: foo!(true);\r\n  src/main.rs:11:19: assert!(!$e); \r\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/51981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/51981/timeline", "performed_via_github_app": null, "state_reason": null}