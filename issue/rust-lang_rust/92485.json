{"url": "https://api.github.com/repos/rust-lang/rust/issues/92485", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92485/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92485/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92485/events", "html_url": "https://github.com/rust-lang/rust/issues/92485", "id": 1091926598, "node_id": "I_kwDOAAsO6M5BFXpG", "number": 92485, "title": "Possible incremental compilation bug", "user": {"login": "sofia-m-a", "id": 71644601, "node_id": "MDQ6VXNlcjcxNjQ0NjAx", "avatar_url": "https://avatars.githubusercontent.com/u/71644601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sofia-m-a", "html_url": "https://github.com/sofia-m-a", "followers_url": "https://api.github.com/users/sofia-m-a/followers", "following_url": "https://api.github.com/users/sofia-m-a/following{/other_user}", "gists_url": "https://api.github.com/users/sofia-m-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/sofia-m-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sofia-m-a/subscriptions", "organizations_url": "https://api.github.com/users/sofia-m-a/orgs", "repos_url": "https://api.github.com/users/sofia-m-a/repos", "events_url": "https://api.github.com/users/sofia-m-a/events{/privacy}", "received_events_url": "https://api.github.com/users/sofia-m-a/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-02T01:05:21Z", "updated_at": "2022-02-11T11:51:03Z", "closed_at": "2022-02-11T11:51:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\nI have no idea where to start with minimizing this, it's a fairly tightly-coupled Bevy game codebase.\r\n\r\nI can provide other code as needed. The bug was reproducible for a while, but after removing some dead code, it builds just fine, even if I go back to the code as it was when the error happened.\r\n\r\nHere is the function that it panics on:\r\n\r\n### Code\r\n\r\n```Rust\r\nfn main() {\r\n    App::new()\r\n        .insert_resource(WgpuOptions {\r\n            limits: WgpuLimits {\r\n                max_texture_array_layers: 2048,\r\n                ..Default::default()\r\n            },\r\n            ..Default::default()\r\n        })\r\n        .add_state(GameState::Splash)\r\n        .add_plugins(DefaultPlugins)\r\n        //.add_plugin(AnimationPlugin)\r\n        //.add_plugin(RapierPhysicsPlugin::<NoUserData>::default())\r\n        .add_plugin(LetterboxCameraPlugin)\r\n        .add_system_set(SystemSet::on_enter(GameState::Splash).with_system(setup_sprites))\r\n        .add_system_set(SystemSet::on_update(GameState::Splash).with_system(update_clear_colour))\r\n        .add_system_set(\r\n            SystemSet::on_enter(GameState::Level)\r\n                .with_system(setup)\r\n                .with_system(setup_player),\r\n        )\r\n        .add_system_set(\r\n            SystemSet::on_update(GameState::Level)\r\n                .with_system(keyboard_input_system)\r\n                .with_system(chunk_load_unload),\r\n        )\r\n        .add_system(set_texture_filters_to_nearest)\r\n        .run();\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.59.0-nightly (c09a9529c 2021-12-23)\r\nbinary: rustc\r\ncommit-hash: c09a9529c51cde41c1101e56049d418edb07bf71\r\ncommit-date: 2021-12-23\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.59.0-nightly\r\nLLVM version: 13.0.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nwarning: unused import: `SHEET_H`\r\n --> src/map/brushes.rs:1:21\r\n  |\r\n1 | use crate::assets::{SHEET_H, SHEET_W};\r\n  |                     ^^^^^^^\r\n  |\r\n  = note: `#[warn(unused_imports)]` on by default\r\n\r\nwarning: unused import: `Vec2`\r\n --> src/map/map.rs:8:25\r\n  |\r\n8 |     math::{IVec2, Rect, Vec2, Vec3},\r\n  |                         ^^^^\r\n\r\nwarning: unused imports: `SHEET_H`, `SHEET_W`, `TILE_SIZE`\r\n  --> src/main.rs:12:66\r\n   |\r\n12 |     set_texture_filters_to_nearest, setup_sprites, SpriteAssets, SHEET_H, SHEET_W, TILE_SIZE,\r\n   |                                                                  ^^^^^^^  ^^^^^^^  ^^^^^^^^^\r\n\r\nwarning: unused variable: `commands`\r\n  --> src/main.rs:63:9\r\n   |\r\n63 |     mut commands: Commands,\r\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_commands`\r\n   |\r\n   = note: `#[warn(unused_variables)]` on by default\r\n\r\nwarning: unused variable: `graphics`\r\n   --> src/main.rs:104:5\r\n    |\r\n104 |     graphics: Res<SpriteAssets>,\r\n    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_graphics`\r\n\r\nwarning: unused variable: `graphics`\r\n   --> src/main.rs:129:41\r\n    |\r\n129 | fn setup_player(mut commands: Commands, graphics: Res<SpriteAssets>) {\r\n    |                                         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_graphics`\r\n\r\nwarning: variable does not need to be mutable\r\n  --> src/main.rs:63:5\r\n   |\r\n63 |     mut commands: Commands,\r\n   |     ----^^^^^^^^\r\n   |     |\r\n   |     help: remove this `mut`\r\n   |\r\n   = note: `#[warn(unused_mut)]` on by default\r\n\r\nwarning: path statement with no effect\r\n  --> src/camera.rs:35:5\r\n   |\r\n35 |     center_mean;\r\n   |     ^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(path_statements)]` on by default\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'index out of bounds: the len is 141 but the index is 145', compiler/rustc_query_impl/src/on_disk_cache.rs:712:18\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n             at /rustc/c09a9529c51cde41c1101e56049d418edb07bf71/library/std/src/panicking.rs:498:5\r\n   1: core::panicking::panic_fmt\r\n             at /rustc/c09a9529c51cde41c1101e56049d418edb07bf71/library/core/src/panicking.rs:107:14\r\n   2: core::panicking::panic_bounds_check\r\n             at /rustc/c09a9529c51cde41c1101e56049d418edb07bf71/library/core/src/panicking.rs:75:5\r\n   3: <rustc_span::span_encoding::Span as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   4: <rustc_middle::ty::VariantDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   5: <rustc_query_impl::on_disk_cache::CacheDecoder as rustc_serialize::serialize::Decoder>::read_seq::<alloc::vec::Vec<rustc_middle::ty::VariantDef>, <alloc::vec::Vec<rustc_middle::ty::VariantDef> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>\r\n   6: <rustc_middle::ty::adt::AdtDef as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   7: <rustc_middle::ty::sty::TyKind as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   8: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n   9: <&rustc_middle::ty::TyS as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode\r\n  10: <rustc_query_impl::on_disk_cache::CacheDecoder as rustc_serialize::serialize::Decoder>::read_map::<std::collections::hash::map::HashMap<rustc_hir::hir_id::ItemLocalId, &rustc_middle::ty::TyS, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>, <std::collections::hash::map::HashMap<rustc_hir::hir_id::ItemLocalId, &rustc_middle::ty::TyS, core::hash::BuildHasherDefault<rustc_hash::FxHasher>> as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}>\r\n  11: <rustc_middle::ty::context::TypeckResults as rustc_serialize::serialize::Decodable<rustc_query_impl::on_disk_cache::CacheDecoder>>::decode::{closure#0}\r\n  12: <rustc_query_impl::on_disk_cache::OnDiskCache>::try_load_query_result::<&rustc_middle::ty::context::TypeckResults>\r\n  13: rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory::<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>\r\n  14: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, &rustc_middle::ty::context::TypeckResults>>\r\n  15: <rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine>::typeck\r\n  16: <rustc_passes::liveness::IrMaps as rustc_hir::intravisit::Visitor>::visit_body\r\n  17: rustc_hir::intravisit::walk_item::<rustc_passes::liveness::IrMaps>\r\n  18: <rustc_middle::hir::map::Map>::visit_item_likes_in_module::<rustc_hir::intravisit::DeepVisitor<rustc_passes::liveness::IrMaps>>\r\n  19: rustc_passes::liveness::check_mod_liveness\r\n  20: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, rustc_span::def_id::LocalDefId, ()>\r\n  21: rustc_data_structures::stack::ensure_sufficient_stack::<((), rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, ()>::{closure#3}>\r\n  22: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<rustc_span::def_id::LocalDefId, ()>>\r\n  23: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::check_mod_liveness, rustc_query_impl::plumbing::QueryCtxt>\r\n  24: <core::panic::unwind_safe::AssertUnwindSafe<rustc_interface::passes::analysis::{closure#1}::{closure#1}> as core::ops::function::FnOnce<()>>::call_once\r\n  25: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#1}>\r\n  26: rustc_interface::passes::analysis\r\n  27: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>\r\n  28: rustc_data_structures::stack::ensure_sufficient_stack::<(core::result::Result<(), rustc_errors::ErrorReported>, rustc_query_system::dep_graph::graph::DepNodeIndex), rustc_query_system::query::plumbing::execute_job<rustc_query_impl::plumbing::QueryCtxt, (), core::result::Result<(), rustc_errors::ErrorReported>>::{closure#3}>\r\n  29: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorReported>>>\r\n  30: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n  31: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorReported>>\r\n  32: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorReported>>\r\n  33: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n  34: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>\r\n  35: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorReported>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>::{closure#0}::{closure#0}, core::result::Result<(), rustc_errors::ErrorReported>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.59.0-nightly (c09a9529c 2021-12-23) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -Z share-generics=y -C opt-level=1 -C embed-bitcode=no -C debuginfo=2 -C debug-assertions=on -C linker=clang -C incremental -C link-arg=-fuse-ld=lld --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [typeck] type-checking `main`\r\n#1 [check_mod_liveness] checking liveness of variables in top-level module\r\n#2 [analysis] running analysis passes on this crate\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92485/timeline", "performed_via_github_app": null, "state_reason": "completed"}