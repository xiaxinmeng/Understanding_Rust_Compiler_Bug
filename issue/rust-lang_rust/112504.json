{"url": "https://api.github.com/repos/rust-lang/rust/issues/112504", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/112504/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/112504/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/112504/events", "html_url": "https://github.com/rust-lang/rust/issues/112504", "id": 1751118076, "node_id": "I_kwDOAAsO6M5oX_D8", "number": 112504, "title": "`unsafe_op_in_unsafe_fn` not triggered for raw pointer dereferencing inside `addr_of`/`addr_of_mut`", "user": {"login": "nhusung", "id": 48403926, "node_id": "MDQ6VXNlcjQ4NDAzOTI2", "avatar_url": "https://avatars.githubusercontent.com/u/48403926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhusung", "html_url": "https://github.com/nhusung", "followers_url": "https://api.github.com/users/nhusung/followers", "following_url": "https://api.github.com/users/nhusung/following{/other_user}", "gists_url": "https://api.github.com/users/nhusung/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhusung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhusung/subscriptions", "organizations_url": "https://api.github.com/users/nhusung/orgs", "repos_url": "https://api.github.com/users/nhusung/repos", "events_url": "https://api.github.com/users/nhusung/events{/privacy}", "received_events_url": "https://api.github.com/users/nhusung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-06-10T20:59:27Z", "updated_at": "2023-06-11T09:00:55Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "### Code\n\n```Rust\n#![forbid(unsafe_op_in_unsafe_fn)]\r\n\r\nuse core::ptr::addr_of;\r\nuse core::ptr::addr_of_mut;\r\n\r\npub struct Foo {\r\n    field: u8\r\n}\r\n\r\npub unsafe fn foo(ptr: *const Foo) -> *const u8 {\r\n    addr_of!((*ptr).field)\r\n}\r\n\r\npub unsafe fn foo_mut(ptr: *mut Foo) -> *mut u8 {\r\n    addr_of_mut!((*ptr).field)\r\n}\n```\n\n\n### Current output\n\n```Shell\n<No error>\n```\n\n\n### Desired output\n\n```Shell\nerror[E0133]: dereference of raw pointer is unsafe and requires unsafe block\r\n  --> src/lib.rs:11:5\r\n   |\r\n11 |     addr_of!((*ptr).field)\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer\r\n   |\r\n   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\r\n   = note: this error originates in the macro `addr_of` (in Nightly builds, run with -Z macro-backtrace for more info)\r\nnote: the lint level is defined here\r\n  --> src/lib.rs:1:11\r\n   |\r\n1  | #![forbid(unsafe_op_in_unsafe_fn)]\r\n   |           ^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nerror[E0133]: dereference of raw pointer is unsafe and requires unsafe block\r\n  --> src/lib.rs:15:5\r\n   |\r\n15 |     addr_of_mut!((*ptr).field)\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer\r\n   |\r\n   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\r\n   = note: this error originates in the macro `addr_of_mut` (in Nightly builds, run with -Z macro-backtrace for more info)\r\n\r\nFor more information about this error, try `rustc --explain E0133`.\n```\n\n\n### Rationale and extra context\n\nWhen removing the `unsafe` keywords in the function declarations of the sample code, the compiler emits the errors found in the \u201cdesired output\u201d box (except for the note on the `unsafe_op_in_unsafe_fn` lint). Hence, I was expecting the operations to be unsafe.[^why-unsafe-op] However, with `forbid(unsafe_op_in_unsafe_fn)` and the functions marked `unsafe`, no errors are emitted at all.\r\n\r\n[^why-unsafe-op]: I\u2019m not a hundred percent sure about this point as we effectively perform pointer arithmetic only. Conceptually, I would like to understand `addr_of!((*ptr).field)` as not actually dereferencing `ptr`. But the [docs](https://doc.rust-lang.org/core/ptr/macro.addr_of.html) explicitly state that \u201cthe `expr` in `addr_of!(expr)` is still subject to all the usual rules. In particular, `addr_of!(*ptr::null())` is Undefined Behavior because it dereferences a null pointer.\u201d\n\n### Other cases\n\n_No response_\n\n### Anything else?\n\nNote that the `unsafe_op_in_unsafe_fn` lint is not entirely broken for the `expr` of `addr_of!(expr)`. The following snippet emits an error for calling an unsafe function (but not for dereferencing the raw pointer):\r\n\r\n```rust\r\n#![forbid(unsafe_op_in_unsafe_fn)]\r\n\r\npub struct Foo {\r\n    field: u8\r\n}\r\n\r\nunsafe fn unsafe_id<T>(x: T) -> T { x }\r\n\r\npub unsafe fn foo(ptr: *const Foo) -> *const u8 {\r\n    core::ptr::addr_of!((*unsafe_id(ptr)).field)\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=577055919ab678e1df8abc6a56cede27)\r\n\r\n---\r\n\r\nNote furthermore that inlining the `addr_of!()`/`addr_of_mut!()` macros (using `#![feature(raw_ref_op)]`) result in the expected behavior:\r\n\r\n```rust\r\n#![feature(raw_ref_op)]\r\n#![forbid(unsafe_op_in_unsafe_fn)]\r\n\r\npub struct Foo {\r\n    field: u8\r\n}\r\n\r\npub unsafe fn foo(ptr: *const Foo) -> *const u8 {\r\n    &raw const (*ptr).field\r\n}\r\n\r\npub unsafe fn foo_mut(ptr: *mut Foo) -> *mut u8 {\r\n    &raw mut (*ptr).field\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=f7da796ab7ab202e623c8e80b9541500)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/112504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/112504/timeline", "performed_via_github_app": null, "state_reason": null}