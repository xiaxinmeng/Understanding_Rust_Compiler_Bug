{"url": "https://api.github.com/repos/rust-lang/rust/issues/84723", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/84723/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/84723/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/84723/events", "html_url": "https://github.com/rust-lang/rust/issues/84723", "id": 871584582, "node_id": "MDU6SXNzdWU4NzE1ODQ1ODI=", "number": 84723, "title": "Invalid code after std::process::exit will cause compilation to fail", "user": {"login": "TobiasDeBruijn", "id": 28569170, "node_id": "MDQ6VXNlcjI4NTY5MTcw", "avatar_url": "https://avatars.githubusercontent.com/u/28569170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiasDeBruijn", "html_url": "https://github.com/TobiasDeBruijn", "followers_url": "https://api.github.com/users/TobiasDeBruijn/followers", "following_url": "https://api.github.com/users/TobiasDeBruijn/following{/other_user}", "gists_url": "https://api.github.com/users/TobiasDeBruijn/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiasDeBruijn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiasDeBruijn/subscriptions", "organizations_url": "https://api.github.com/users/TobiasDeBruijn/orgs", "repos_url": "https://api.github.com/users/TobiasDeBruijn/repos", "events_url": "https://api.github.com/users/TobiasDeBruijn/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiasDeBruijn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-29T21:03:29Z", "updated_at": "2021-04-29T22:10:37Z", "closed_at": "2021-04-29T22:10:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Thanks for filing a \ud83d\udc1b bug report \ud83d\ude04! -->\r\nI'm honestly not sure if Cargo's repository is the place to file this issue, if it is not, apologies! (Where should I file it then?)\r\n\r\n**Problem**\r\n<!-- A clear and concise description of what the bug is. -->\r\n<!-- including what currently happens and what you expected to happen. -->\r\nWhen using std::process::exit, the code after it will prevent you from compiling if it is invalid. Take the following codeblock\r\n```rs\r\npub struct Something {\r\n   some_param: String\r\n}\r\n\r\npub fn something() {\r\n   let something: Something = get_something();\r\n   std::process::exit(1);\r\n\r\n   //Try to access a nonexistent field in Something will prevent you from compiling\r\n   //Even though the std::process::exit call will always exit immediately after, so the code after it shouldn't even be compiled I'd think\r\n   let not_something = something.this_param_does_not_exist;\r\n}\r\n```\r\n\r\nPractical demo:\r\nI ran into this while debugging some API call, instead of deserializing the json I just wanted to print the text. See the two screenshots.\r\n![image](https://user-images.githubusercontent.com/28569170/116618100-ed588500-a93e-11eb-8f1c-be1d7defd5c8.png)\r\n![image](https://user-images.githubusercontent.com/28569170/116618110-efbadf00-a93e-11eb-85de-5208208a2412.png)\r\n\r\n**Steps**\r\n<!-- The steps to reproduce the bug. -->\r\n1. Have a function with some invalid code\r\n2. Stick std::process::exit in it\r\n3. Observe that the code after the exit call will prevent you from compiling\r\n\r\n**Possible Solution(s)**\r\n<!-- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!-- or ideas how to implement the addition or change -->\r\nA possible solution would be to not compile, or at least not fail to compile, (on) things after a call to std::process::exit\r\n\r\n**Notes**\r\nI do think it should be allowed to do as I showed above, considering this will compile successfully:\r\n```rs\r\nlet x: String = if something {\r\n   std::process::exit(1)\r\n} else {\r\n  \"x\".to_string()\r\n};\r\n```\r\n\r\nOutput of `cargo version`: cargo 1.50.0 (f04e7fab7 2021-02-04)\r\n\r\n<!-- Also, any additional context or information you feel may be relevant to the issue. -->\r\n<!-- (e.g rust version, OS platform/distribution/version, target toolchain(s), release channel.. -->\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/84723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/84723/timeline", "performed_via_github_app": null, "state_reason": "completed"}