{"url": "https://api.github.com/repos/rust-lang/rust/issues/72793", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72793/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72793/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72793/events", "html_url": "https://github.com/rust-lang/rust/issues/72793", "id": 627802894, "node_id": "MDU6SXNzdWU2Mjc4MDI4OTQ=", "number": 72793, "title": "ICE (OutputTypeParameterMismatch) with type_alias_impl_trait", "user": {"login": "SNCPlay42", "id": 5455518, "node_id": "MDQ6VXNlcjU0NTU1MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5455518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SNCPlay42", "html_url": "https://github.com/SNCPlay42", "followers_url": "https://api.github.com/users/SNCPlay42/followers", "following_url": "https://api.github.com/users/SNCPlay42/following{/other_user}", "gists_url": "https://api.github.com/users/SNCPlay42/gists{/gist_id}", "starred_url": "https://api.github.com/users/SNCPlay42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SNCPlay42/subscriptions", "organizations_url": "https://api.github.com/users/SNCPlay42/orgs", "repos_url": "https://api.github.com/users/SNCPlay42/repos", "events_url": "https://api.github.com/users/SNCPlay42/events{/privacy}", "received_events_url": "https://api.github.com/users/SNCPlay42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472502130, "node_id": "MDU6TGFiZWwxNDcyNTAyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-type_alias_impl_trait", "name": "F-type_alias_impl_trait", "color": "f9c0cc", "default": false, "description": "`#[feature(type_alias_impl_trait)]`"}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-05-30T19:32:55Z", "updated_at": "2022-07-01T13:55:23Z", "closed_at": "2022-07-01T13:55:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Code\r\n\r\n**Here's MCVE: https://github.com/rust-lang/rust/issues/72793#issuecomment-637043261** (Edited by JohnTitor)\r\n\r\n```Rust\r\n#![feature(type_alias_impl_trait)]\r\n\r\ntype FilteredIter<'a> = impl Iterator<Item = &'a i32> + 'a;\r\n\r\nfn filter_positive<'a>(vals: &'a [i32]) -> FilteredIter<'a> {\r\n    vals.iter().filter(|x| **x >= 0)\r\n}\r\n\r\nfn with_positive<F>(vals: &[i32], fun: F)\r\nwhere\r\n    F: Fn(FilteredIter<'_>),\r\n{\r\n    fun(filter_positive(vals));\r\n}\r\n\r\nfn main() {\r\n    let x = vec![-1, 1, -2, 2, -3, 3];\r\n\r\n    with_positive(&x, |iter| {\r\n        iter.for_each(|x| println!(\"{}\", x));\r\n    });\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4dd04b40b191790488b43b7b38f83aa2)\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_trait_selection/traits/codegen/mod.rs:62: Encountered error `OutputTypeParameterMismatch(Binder(<[closure@src/main.rs:19:23: 21:6] as std::ops::Fn<(FilteredIter::<'_>,)>>), Binder(<[closure@src/main.rs:19:23: 21:6] as std::ops::Fn<(std::iter::Filter<std::slice::Iter<i32>, [closure@src/main.rs:6:24: 6:36]>,)>>), Sorts(ExpectedFound { expected: std::iter::Filter<std::slice::Iter<i32>, [closure@src/main.rs:6:24: 6:36]>, found: FilteredIter::<'_> }))` selecting `Binder(<[closure@src/main.rs:19:23: 21:6] as std::ops::Fn<(std::iter::Filter<std::slice::Iter<i32>, [closure@src/main.rs:6:24: 6:36]>,)>>)` during codegen\r\n```\r\n\r\nPrettied a bit:\r\n\r\n```\r\nerror: internal compiler error: \r\nsrc/librustc_trait_selection/traits/codegen/mod.rs:62: \r\nEncountered error\r\n`OutputTypeParameterMismatch(\r\n\tBinder(<[closure@src/main.rs:19:23: 21:6] as std::ops::Fn<(FilteredIter::<'_>,)>>),\r\n\tBinder(<[closure@src/main.rs:19:23: 21:6] as std::ops::Fn<(std::iter::Filter<std::slice::Iter<i32>, [closure@src/main.rs:6:24: 6:36]>,)>>),\r\n\tSorts(ExpectedFound {\r\n\t\texpected: std::iter::Filter<std::slice::Iter<i32>, [closure@src/main.rs:6:24: 6:36]>,\r\n\t\tfound: FilteredIter::<'_>\r\n\t})\r\n)`\r\nselecting `Binder(<[closure@src/main.rs:19:23: 21:6] as std::ops::Fn<(std::iter::Filter<std::slice::Iter<i32>, [closure@src/main.rs:6:24: 6:36]>,)>>)`\r\nduring codegen\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:907:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:490\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc_middle::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc_middle::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc_middle::ty::context::tls::with_opt\r\n  18: rustc_middle::util::bug::opt_span_bug_fmt\r\n  19: rustc_middle::util::bug::bug_fmt\r\n  20: rustc_middle::ty::context::tls::with_context::{{closure}}\r\n  21: rustc_trait_selection::traits::codegen::codegen_fulfill_obligation\r\n  22: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::codegen_fulfill_obligation>::compute\r\n  23: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  24: rustc_data_structures::stack::ensure_sufficient_stack\r\n  25: rustc_query_system::query::plumbing::get_query_impl\r\n  26: rustc_ty::instance::resolve_instance\r\n  27: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::resolve_instance>::compute\r\n  28: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  29: rustc_data_structures::stack::ensure_sufficient_stack\r\n  30: rustc_query_system::query::plumbing::get_query_impl\r\n  31: rustc_middle::ty::instance::Instance::resolve\r\n  32: <rustc_mir::monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor>::visit_terminator_kind\r\n  33: rustc_mir::monomorphize::collector::collect_neighbours\r\n  34: rustc_data_structures::stack::ensure_sufficient_stack\r\n  35: rustc_mir::monomorphize::collector::collect_items_rec\r\n  36: rustc_mir::monomorphize::collector::collect_items_rec\r\n  37: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  38: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  39: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::collect_and_partition_mono_items>::compute\r\n  40: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\r\n  41: rustc_data_structures::stack::ensure_sufficient_stack\r\n  42: rustc_query_system::query::plumbing::get_query_impl\r\n  43: rustc_codegen_ssa::base::codegen_crate\r\n  44: <rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend>::codegen_crate\r\n  45: rustc_interface::passes::start_codegen\r\n  46: rustc_middle::ty::context::tls::enter_global\r\n  47: rustc_interface::queries::Queries::ongoing_codegen\r\n  48: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\n  49: rustc_ast::attr::with_globals\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.45.0-nightly (4bd32c980 2020-05-29) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [codegen_fulfill_obligation] checking if `std::ops::Fn` fulfills its obligations\r\n#1 [resolve_instance] resolving instance `<[closure@src/main.rs:19:23: 21:6] as std::ops::Fn<(std::iter::Filter<std::slice::Iter<i32>, [closure@src/main.rs:6:24: 6:36]>,)>>::call`\r\n#2 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\nend of query stack\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72793/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72793/timeline", "performed_via_github_app": null, "state_reason": "completed"}