{"url": "https://api.github.com/repos/rust-lang/rust/issues/60413", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/60413/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/60413/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/60413/events", "html_url": "https://github.com/rust-lang/rust/issues/60413", "id": 438778313, "node_id": "MDU6SXNzdWU0Mzg3NzgzMTM=", "number": 60413, "title": "closure captures copyable variable doesn't according capture rule", "user": {"login": "uonr", "id": 34709816, "node_id": "MDQ6VXNlcjM0NzA5ODE2", "avatar_url": "https://avatars.githubusercontent.com/u/34709816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uonr", "html_url": "https://github.com/uonr", "followers_url": "https://api.github.com/users/uonr/followers", "following_url": "https://api.github.com/users/uonr/following{/other_user}", "gists_url": "https://api.github.com/users/uonr/gists{/gist_id}", "starred_url": "https://api.github.com/users/uonr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uonr/subscriptions", "organizations_url": "https://api.github.com/users/uonr/orgs", "repos_url": "https://api.github.com/users/uonr/repos", "events_url": "https://api.github.com/users/uonr/events{/privacy}", "received_events_url": "https://api.github.com/users/uonr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 122406831, "node_id": "MDU6TGFiZWwxMjI0MDY4MzE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-closures", "name": "A-closures", "color": "f7e101", "default": false, "description": "Area: closures (`|args| { .. }`)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-30T13:28:15Z", "updated_at": "2019-04-30T14:05:53Z", "closed_at": "2019-04-30T14:05:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code will success compiled.\r\n\r\n```rust\r\nstruct Madoka;\r\n\r\nfn main() {\r\n    let c = {\r\n        let v = Madoka;\r\n        || v\r\n    };\r\n}\r\n```\r\n\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=ff9f783397fafc9fda5016266ae8277b)\r\n\r\nBut if derived `Copy`:\r\n\r\n```rust\r\n#[derive(Copy, Clone)]\r\nstruct Madoka;\r\n\r\nfn main() {\r\n    let c = {\r\n        let v = Madoka;\r\n        || v // error[E0597]: `v` does not live long enough\r\n    };\r\n}\r\n```\r\n\r\n```\r\nerror[E0597]: `v` does not live long enough\r\n --> src/main.rs:8:12\r\n  |\r\n6 |     let c = {\r\n  |         - borrow later stored here\r\n7 |         let v = Madoka;\r\n8 |         || v // error[E0597]: `v` does not live long enough\r\n  |         -- ^ borrowed value does not live long enough\r\n  |         |\r\n  |         value captured here\r\n9 |     };\r\n  |     - `v` dropped here while still borrowed\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=6dd8290447a59bf70dce583bab3ca935)\r\n\r\nthis is very confusing.\r\n\r\n## MIR\r\n\r\n```rust \r\nstruct Homura;\r\n\r\nfn main() {\r\n    let v = Homura;\r\n    let c = || std::mem::drop(v); \r\n}\r\n```\r\n\r\nMIR of closure is\r\n\r\n```\r\nfn main::{{closure}}(_1: [closure@src/main.rs:5:13: 5:33 v:Homura]) -> () { // <- notice this\r\n    let mut _0: ();                      // return place\r\n    let mut _2: Homura;\r\n\r\n    bb0: {                              \r\n        StorageLive(_2);                 // bb0[0]: scope 0 at src/main.rs:5:31: 5:32\r\n        _2 = move (_1.0: Homura);        // bb0[1]: scope 0 at src/main.rs:5:31: 5:32 <- notice this\r\n        _0 = const std::mem::drop(move _2) -> bb1; // bb0[2]: scope 0 at src/main.rs:5:16: 5:33\r\n                                         // ty::Const\r\n                                         // + ty: fn(Homura) {std::mem::drop::<Homura>}\r\n                                         // + val: Scalar(Bits { size: 0, bits: 0 })\r\n                                         // mir::Constant\r\n                                         // + span: src/main.rs:5:16: 5:30\r\n                                         // + ty: fn(Homura) {std::mem::drop::<Homura>}\r\n                                         // + literal: Evaluated(Const { ty: fn(Homura) {std::mem::drop::<Homura>}, val: Scalar(Bits { size: 0, bits: 0 }) })\r\n    }\r\n\r\n    bb1: {                              \r\n        StorageDead(_2);                 // bb1[0]: scope 0 at src/main.rs:5:32: 5:33\r\n        return;                          // bb1[1]: scope 0 at src/main.rs:5:33: 5:33\r\n    }\r\n}\r\n```\r\nbut after derive `Copy`:\r\n\r\n```rust\r\n#[derive(Clone, Copy)]\r\nstruct Homura;\r\n\r\nfn main() {\r\n    let v = Homura;\r\n    let c = || std::mem::drop(v); \r\n}\r\n```\r\n\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=8b2e04f1bfefe589916aa717dcbbcaab)\r\n\r\n```\r\nfn main::{{closure}}(_1: &[closure@src/main.rs:6:13: 6:33 v:&Homura]) -> () { // <- compare to before\r\n    let mut _0: ();                      // return place\r\n    let mut _2: Homura;\r\n\r\n    bb0: {                              \r\n        StorageLive(_2);\r\n        _2 = (*((*_1).0: &Homura));      //  <- ?????\r\n        _0 = const std::mem::drop(move _2) -> bb1;\r\n    }\r\n    // ....\r\n}\r\n```\r\n\r\n## More examples\r\n\r\nThere is [a blog article about this bug](https://iovxw.net/p/rust-closure-and-copy/), but it is write up by Chinese.\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=a4cebe3ca7669755d34de340f14305fc\r\n\r\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=eddfdbcdfeed71b1311df6115f7484a5\r\n\r\nMaybe related issue:\r\nhttps://github.com/rust-lang/rust/issues/47448 and https://github.com/rust-lang/rust/issues/36569\r\n", "closed_by": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/60413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/60413/timeline", "performed_via_github_app": null, "state_reason": "completed"}