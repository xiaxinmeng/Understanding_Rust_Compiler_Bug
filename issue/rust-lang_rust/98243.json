{"url": "https://api.github.com/repos/rust-lang/rust/issues/98243", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/98243/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/98243/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/98243/events", "html_url": "https://github.com/rust-lang/rust/issues/98243", "id": 1275924419, "node_id": "I_kwDOAAsO6M5MDQ_D", "number": 98243, "title": "No warnings ... though `delayed_good_path_bugs` issued", "user": {"login": "0adb", "id": 55215987, "node_id": "MDQ6VXNlcjU1MjE1OTg3", "avatar_url": "https://avatars.githubusercontent.com/u/55215987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0adb", "html_url": "https://github.com/0adb", "followers_url": "https://api.github.com/users/0adb/followers", "following_url": "https://api.github.com/users/0adb/following{/other_user}", "gists_url": "https://api.github.com/users/0adb/gists{/gist_id}", "starred_url": "https://api.github.com/users/0adb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0adb/subscriptions", "organizations_url": "https://api.github.com/users/0adb/orgs", "repos_url": "https://api.github.com/users/0adb/repos", "events_url": "https://api.github.com/users/0adb/events{/privacy}", "received_events_url": "https://api.github.com/users/0adb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-06-19T01:21:21Z", "updated_at": "2022-06-19T02:16:36Z", "closed_at": "2022-06-19T02:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n(I'm not sure if I should be filing this issue. The instructions in the template say that if the error is encountered with the stable version of the compiler, that I should check that the error exists on nightly/beta. The error below does go away with nightly/beta, but the instructions in the template don't say if that means I shouldn't file the issue anymore or just note that the error goes away on nightly/beta. Apologies if it's the former.)\r\n### Code\r\nin `src/main.rs`:\r\n```Rust\r\nuse std::{process, env};\r\nuse rust_advent_2019::{Config, run};\r\nmod day1;\r\n\r\nfn main() {\r\n    let args: Vec<String> = env::args().collect();\r\n    let config  = Config::new(&args).unwrap_or_else(|err| {\r\n\tprintln!(\"Problem in parsing args: {}\", err);\r\n\tprocess::exit(1);\r\n    });\r\n    run(config);\r\n}\r\n\r\n```\r\n\r\nin `src/lib.rs`:\r\n```Rust\r\nuse std::error::Error;\r\n\r\npub mod day1;\r\n\r\npub struct Config {\r\n    pub day: String,\r\n    pub extra_args: Vec<String>,\r\n}\r\n\r\nimpl Config {\r\n    pub fn new(args: &[String]) -> Result<Config, &'static str> {\r\n\tlet split_args = args.split_first();\r\n\tmatch split_args {\r\n\t    None => Err(\"missing first argument\"),\r\n\t    Some((first, elements)) => Ok(Config { day: first.clone(), extra_args: elements.to_vec()}),\r\n\t}\r\n    }\r\n}\r\n\r\npub fn run(config: Config) -> Result<(), Box<dyn Error>> {\r\n    panic!(\"unimplemented\");\r\n}\r\n```\r\n\r\nin `src/day1.rs`\r\n\r\n```Rust\r\npub fn solve() {\r\n   println!(\"called day 1 solve!\");\r\n}\r\n```\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.61.0 (fe5b13d68 2022-05-18)\r\nbinary: rustc\r\ncommit-hash: fe5b13d681f25ee6474be29d748c65adcd91f69e\r\ncommit-date: 2022-05-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.61.0\r\nLLVM version: 14.0.0\r\n```\r\n(The error goes away when using beta version `beta-x86_64-unknown-linux-gnu (default)\r\nrustc 1.62.0-beta.5 (1bc802e99 2022-06-13)` or nightly version `nightly-x86_64-unknown-linux-gnu (default) rustc 1.63.0-nightly (21e9336fe 2022-06-18)`.)\r\n\r\n\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: no warnings or errors encountered even though `delayed_good_path_bugs` issued\r\n\r\nerror: internal compiler error: trimmed_def_paths constructed\r\n  |\r\n  = note: delayed at    0: <rustc_errors::Handler>::delay_good_path_bug\r\n             1: rustc_middle::ty::print::pretty::trimmed_def_paths\r\n             2: <rustc_middle::dep_graph::dep_node::DepKind as rustc_query_system::dep_graph::DepKind>::with_deps::<<rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task_impl<rustc_middle::ty::context::TyCtxt, (), std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>::{closure#0}, std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>\r\n             3: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>\r\n             4: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::ArenaCache<(), std::collections::hash::map::HashMap<rustc_span::def_id::DefId, rustc_span::symbol::Symbol, core::hash::BuildHasherDefault<rustc_hash::FxHasher>>>>\r\n             5: rustc_query_system::query::plumbing::force_query::<rustc_query_impl::queries::trimmed_def_paths, rustc_query_impl::plumbing::QueryCtxt>\r\n             6: rustc_query_impl::query_callbacks::trimmed_def_paths::force_from_dep_node\r\n             7: <rustc_middle::ty::context::TyCtxt as rustc_query_system::dep_graph::DepContext>::try_force_from_dep_node\r\n             8: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::try_mark_previous_green::<rustc_query_impl::plumbing::QueryCtxt>\r\n             9: rustc_query_system::query::plumbing::ensure_must_run::<rustc_query_impl::plumbing::QueryCtxt, rustc_span::def_id::LocalDefId, &rustc_middle::mir::query::UnsafetyCheckResult>\r\n            10: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::lint_mod, rustc_query_impl::plumbing::QueryCtxt>\r\n            11: <rustc_session::session::Session>::time::<(), rustc_lint::late::check_crate<rustc_lint::BuiltinCombinedLateLintPass, rustc_interface::passes::analysis::{closure#5}::{closure#0}::{closure#2}::{closure#0}::{closure#0}>::{closure#1}::{closure#0}>\r\n            12: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#5}::{closure#0}::{closure#2}::{closure#0}>\r\n            13: <core::panic::unwind_safe::AssertUnwindSafe<rustc_interface::passes::analysis::{closure#5}::{closure#0}> as core::ops::function::FnOnce<()>>::call_once\r\n            14: <rustc_session::session::Session>::time::<(), rustc_interface::passes::analysis::{closure#5}>\r\n            15: rustc_interface::passes::analysis\r\n            16: <rustc_query_system::dep_graph::graph::DepGraph<rustc_middle::dep_graph::dep_node::DepKind>>::with_task::<rustc_middle::ty::context::TyCtxt, (), core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            17: rustc_query_system::query::plumbing::try_execute_query::<rustc_query_impl::plumbing::QueryCtxt, rustc_query_system::query::caches::DefaultCache<(), core::result::Result<(), rustc_errors::ErrorGuaranteed>>>\r\n            18: rustc_query_system::query::plumbing::get_query::<rustc_query_impl::queries::analysis, rustc_query_impl::plumbing::QueryCtxt>\r\n            19: <rustc_interface::passes::QueryContext>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}::{closure#3}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            20: <rustc_interface::interface::Compiler>::enter::<rustc_driver::run_compiler::{closure#1}::{closure#2}, core::result::Result<core::option::Option<rustc_interface::queries::Linker>, rustc_errors::ErrorGuaranteed>>\r\n            21: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n            22: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n            23: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            24: std::sys_common::backtrace::__rust_begin_short_backtrace::<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n            25: <<std::thread::Builder>::spawn_unchecked_<rustc_interface::util::run_in_thread_pool_with_globals<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>::{closure#1} as core::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\r\n            26: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/alloc/src/boxed.rs:1861:9\r\n            27: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\r\n                       at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/alloc/src/boxed.rs:1861:9\r\n            28: std::sys::unix::thread::Thread::new::thread_start\r\n                       at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/std/src/sys/unix/thread.rs:108:17\r\n            29: start_thread\r\n            30: clone\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1309:13\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   3: core::ptr::drop_in_place::<rustc_session::parse::ParseSess>\r\n   4: <alloc::rc::Rc<rustc_session::session::Session> as core::ops::drop::Drop>::drop\r\n   5: core::ptr::drop_in_place::<rustc_interface::interface::Compiler>\r\n   6: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n   7: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n   8: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\n\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/98243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/98243/timeline", "performed_via_github_app": null, "state_reason": "not_planned"}