{"url": "https://api.github.com/repos/rust-lang/rust/issues/104039", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/104039/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/104039/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/104039/events", "html_url": "https://github.com/rust-lang/rust/issues/104039", "id": 1437261136, "node_id": "I_kwDOAAsO6M5Vqt1Q", "number": 104039, "title": "`Box` documentation regarding allocation for ZSTs", "user": {"login": "semiviral", "id": 8019570, "node_id": "MDQ6VXNlcjgwMTk1NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/8019570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semiviral", "html_url": "https://github.com/semiviral", "followers_url": "https://api.github.com/users/semiviral/followers", "following_url": "https://api.github.com/users/semiviral/following{/other_user}", "gists_url": "https://api.github.com/users/semiviral/gists{/gist_id}", "starred_url": "https://api.github.com/users/semiviral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semiviral/subscriptions", "organizations_url": "https://api.github.com/users/semiviral/orgs", "repos_url": "https://api.github.com/users/semiviral/repos", "events_url": "https://api.github.com/users/semiviral/events{/privacy}", "received_events_url": "https://api.github.com/users/semiviral/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431251592, "node_id": "MDU6TGFiZWw0MzEyNTE1OTI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-docs", "name": "A-docs", "color": "f7e101", "default": false, "description": "Area: documentation for any part of the project, including the compiler, standard library, and tools"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-11-06T02:28:38Z", "updated_at": "2022-11-06T02:30:03Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n\r\nThank you for finding a documentation problem! \ud83d\udcda\r\n\r\nDocumentation problems might be grammatical issues, typos, or unclear wording, please provide details regarding the documentation including where it is present.\r\n\r\nNote: If your issue is for one of these, please use their dedicated issue tracker instead:\r\n\r\n- The Rust Book: https://github.com/rust-lang/book/issues\r\n- Rust by Example: https://github.com/rust-lang/rust-by-example/issues\r\n- The Edition Guide: https://github.com/rust-lang/edition-guide/issues\r\n- The Cargo Book: https://github.com/rust-lang/cargo/issues\r\n- The Clippy Book: https://github.com/rust-lang/rust-clippy/issues\r\n- The Reference: https://github.com/rust-lang/reference/issues\r\n- The Rustonomicon: https://github.com/rust-lang/nomicon/issues\r\n- The Embedded Book: https://github.com/rust-embedded/book/issues\r\n\r\nAll other documentation issues should be filed here.\r\n\r\nOr, if you find an issue related to rustdoc (e.g. doctest, rustdoc UI), please use the bug report or blank issue template instead.\r\n\r\n-->\r\n\r\n### Location\r\n\r\nhttps://github.com/rust-lang/rust/blob/master/library/alloc/src/boxed.rs#L205\r\nhttps://github.com/rust-lang/rust/blob/master/library/alloc/src/boxed.rs#L293\r\nhttps://github.com/rust-lang/rust/blob/master/library/alloc/src/boxed.rs#L366\r\nhttps://github.com/rust-lang/rust/blob/master/library/alloc/src/boxed.rs#L396\r\n\r\n### Summary\r\n\r\nIn the provided locations for documentation of various `Box` constructors, the documentation indicates the documented functions *will not* allocate if the `T` is zero-sized. However, looking through the call paths of these functions, no ZST-handling is present\u2014ostensibly, the call-path is relying on an undocumented behaviour of expectation that when `Box` *does* finally call `.allocate`, the provided (global or otherwise) allocator will panic or return an error.\r\n\r\nFor what I hope are obvious reasons, this isn't the expected behaviour. For instance, this is how I implemented ZST handling:\r\n\r\n```rust\r\nconst T_IS_ZST: bool = core::mem::size_of::<T>() == 0;\r\npub fn new_in(value: T, allocator: A) -> AllocResult<Self> {\r\n    if Self::T_IS_ZST {\r\n        // We don't need to allocate anything if the type is zero-sized.\r\n        Ok(Self {\r\n            ptr: NonNull::dangling(),\r\n            allocator,\r\n        })\r\n    } else {\r\n        allocator.allocate(Layout::new::<T>()).map(|allocation| {\r\n            let ptr = allocation.as_non_null_ptr().cast::<T>();\r\n            // ### Safety: Memory is guaranteed valid for T's layout by allocator API safety.\r\n            unsafe { ptr.as_ptr().write(value) };\r\n            Self { ptr, allocator }\r\n        })\r\n    }\r\n}\r\n```\r\n\r\nIt seems disingenuous to me for `Box` to claim it will not allocate for ZSTs, but then have the only possible call path result in a call to `Allocator::allocate`.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/104039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/104039/timeline", "performed_via_github_app": null, "state_reason": null}