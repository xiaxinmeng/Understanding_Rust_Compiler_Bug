{"url": "https://api.github.com/repos/rust-lang/rust/issues/56270", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/56270/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/56270/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/56270/events", "html_url": "https://github.com/rust-lang/rust/issues/56270", "id": 384614031, "node_id": "MDU6SXNzdWUzODQ2MTQwMzE=", "number": 56270, "title": "rustc panic compiling postscript crate", "user": {"login": "galich", "id": 3718155, "node_id": "MDQ6VXNlcjM3MTgxNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3718155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galich", "html_url": "https://github.com/galich", "followers_url": "https://api.github.com/users/galich/followers", "following_url": "https://api.github.com/users/galich/following{/other_user}", "gists_url": "https://api.github.com/users/galich/gists{/gist_id}", "starred_url": "https://api.github.com/users/galich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galich/subscriptions", "organizations_url": "https://api.github.com/users/galich/orgs", "repos_url": "https://api.github.com/users/galich/repos", "events_url": "https://api.github.com/users/galich/events{/privacy}", "received_events_url": "https://api.github.com/users/galich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-27T04:12:51Z", "updated_at": "2018-11-28T13:34:15Z", "closed_at": "2018-11-28T13:34:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "High RAM usage and crash on a package that was compiling fine a day or two ago.\r\n\r\nI tried this code: \r\n\r\nhttps://github.com/bodoni/postscript\r\n\r\nThis happened: rustc took 7GB+ of RAM (may be more), then crashed.\r\n\r\n## Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nC:\\code\\postscript>rustc --version --verbose\r\nrustc 1.32.0-nightly (6bfb46e4a 2018-11-26)\r\nbinary: rustc\r\ncommit-hash: 6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb\r\ncommit-date: 2018-11-26\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.32.0-nightly\r\nLLVM version: 8.0\r\n```\r\nBacktrace:\r\n\r\n```\r\nC:\\code\\postscript>cargo build\r\nwarning: An explicit [[test]] section is specified in Cargo.toml which currently\r\ndisables Cargo from automatically inferring other test targets.\r\nThis inference behavior will change in the Rust 2018 edition and the following\r\nfiles will be included as a test target:\r\n\r\n* C:\\code\\postscript\\tests\\compact1.rs\r\n* C:\\code\\postscript\\tests\\type2.rs\r\n\r\nThis is likely to break cargo build or cargo test as these files may not be\r\nready to be compiled as a test target today. You can future-proof yourself\r\nand disable this warning by adding `autotests = false` to your [package]\r\nsection. You may also move the files to a location where Cargo would not\r\nautomatically infer them to be a target, such as in subfolders.\r\n\r\nFor more information on this warning you can consult\r\nhttps://github.com/rust-lang/cargo/issues/5330\r\nwarning: An explicit [[bench]] section is specified in Cargo.toml which currently\r\ndisables Cargo from automatically inferring other benchmark targets.\r\nThis inference behavior will change in the Rust 2018 edition and the following\r\nfiles will be included as a benchmark target:\r\n\r\n* C:\\code\\postscript\\benches\\compact1.rs\r\n* C:\\code\\postscript\\benches\\type2.rs\r\n\r\nThis is likely to break cargo build or cargo test as these files may not be\r\nready to be compiled as a benchmark target today. You can future-proof yourself\r\nand disable this warning by adding `autobenches = false` to your [package]\r\nsection. You may also move the files to a location where Cargo would not\r\nautomatically infer them to be a target, such as in subfolders.\r\n\r\nFor more information on this warning you can consult\r\nhttps://github.com/rust-lang/cargo/issues/5330\r\n    Updating crates.io index\r\n   Compiling postscript v0.13.2 (C:\\code\\postscript)\r\nthread 'main' panicked at 'assertion failed: value <= 4294967040', src\\librustc\\ty\\mod.rs:1543:1\r\nstack backtrace:\r\n   0: std::sys_common::alloc::realloc_fallback\r\n   1: std::panicking::take_hook\r\n   2: std::panicking::take_hook\r\n   3: rustc::ty::structural_impls::<impl rustc::ty::context::Lift<'tcx> for rustc::ty::adjustment::AutoBorrow<'a>>::lift_to_tcx\r\n   4: std::panicking::rust_panic_with_hook\r\n   5: <rustc::hir::intravisit::IdRange as core::fmt::Debug>::fmt\r\n   6: rustc::infer::InferCtxt::create_next_universe\r\n   7: <rustc_mir::borrow_check::nll::type_check::free_region_relations::UniversalRegionRelations<'tcx> as core::fmt::Debug>::fmt\r\n   8: <rustc_mir::borrow_check::nll::type_check::free_region_relations::UniversalRegionRelations<'tcx> as core::fmt::Debug>::fmt\r\n   9: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_mir\r\n  10: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_constant\r\n  11: <rustc_mir::borrow_check::nll::type_check::TypeVerifier<'a, 'b, 'gcx, 'tcx> as rustc::mir::visit::Visitor<'tcx>>::visit_mir\r\n  12: <rustc_mir::borrow_check::nll::type_check::relate_tys::NllTypeRelatingDelegate<'_, '_, '_, 'tcx> as rustc::infer::nll_relate::TypeRelatingDelegate<'tcx>>::push_outlives\r\n  13: <rustc_mir::dataflow::impls::MaybeUninitializedPlaces<'a, 'gcx, 'tcx> as rustc_mir::dataflow::move_paths::HasMoveData<'tcx>>::move_data\r\n  14: <rustc_mir::borrow_check::nll::type_check::free_region_relations::UniversalRegionRelations<'tcx> as core::fmt::Debug>::fmt\r\n  15: <rustc_mir::borrow_check::nll::type_check::TypeckMir as rustc_mir::transform::MirPass>::run_pass\r\n  16: rustc_mir::transform::run_passes\r\n  17: rustc_mir::transform::run_passes\r\n  18: rustc_mir::transform::run_passes\r\n  19: rustc::ty::context::tls::track_diagnostic\r\n  20: rustc::ty::context::tls::track_diagnostic\r\n  21: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  22: rustc::ty::context::tls::track_diagnostic\r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  24: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  25: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::mir_const\r\n  26: rustc_mir::transform::run_passes\r\n  27: rustc::ty::context::tls::track_diagnostic\r\n  28: rustc::ty::context::tls::track_diagnostic\r\n  29: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  30: rustc::ty::context::tls::track_diagnostic\r\n  31: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  32: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  33: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  34: rustc_borrowck::borrowck::provide\r\n  35: rustc::ty::context::tls::track_diagnostic\r\n  36: rustc::ty::context::tls::track_diagnostic\r\n  37: rustc::dep_graph::graph::DepGraph::assert_ignored\r\n  38: rustc::ty::context::tls::track_diagnostic\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  40: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_print_query_stack\r\n  41: rustc::ty::query::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::borrowck\r\n  42: <rustc::middle::mem_categorization::InteriorKind as rustc_borrowck::borrowck::ToInteriorKind>::cleaned\r\n  43: rustc_borrowck::borrowck::check_crate\r\n  44: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_item\r\n  45: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_item\r\n  46: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_item\r\n  47: rustc_driver::driver::compile_input\r\n  48: rustc_driver::run_compiler\r\n  49: <rustc_driver::derive_registrar::Finder as rustc::hir::itemlikevisit::ItemLikeVisitor<'v>>::visit_impl_item\r\n  50: rustc_driver::run_compiler\r\n  51: <env_logger::filter::inner::Filter as core::fmt::Display>::fmt\r\n  52: _rust_maybe_catch_panic\r\n  53: rustc_driver::profile::dump\r\n  54: rustc_driver::main\r\n  55: <unknown>\r\n  56: std::panicking::update_panic_count\r\n  57: _rust_maybe_catch_panic\r\n  58: std::rt::lang_start_internal\r\n  59: <unknown>\r\n  60: <unknown>\r\n  61: BaseThreadInitThunk\r\n  62: RtlUserThreadStart\r\nquery stack during panic:\r\n#0 [mir_const] processing `type2::program::Program::next`\r\n#1 [mir_validated] processing `type2::program::Program::next`\r\n#2 [borrowck] processing `type2::program::Program::next`\r\nend of query stack\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-nightly (6bfb46e4a 2018-11-26) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `postscript`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/56270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/56270/timeline", "performed_via_github_app": null, "state_reason": "completed"}