{"url": "https://api.github.com/repos/rust-lang/rust/issues/48686", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/48686/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/48686/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/48686/events", "html_url": "https://github.com/rust-lang/rust/issues/48686", "id": 301927525, "node_id": "MDU6SXNzdWUzMDE5Mjc1MjU=", "number": 48686, "title": "Elision in method can take `'static` from `self`, perhaps surprising", "user": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-02T22:38:09Z", "updated_at": "2018-03-06T22:38:12Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "rustc currently compiles the following with no warnings or errors:\r\n\r\n```rust\r\nstruct Foo;\r\n\r\nimpl Foo {\r\n    pub fn get_mut(&'static self, x: &mut u8) -> &mut u8 {\r\n        unsafe { &mut *(x as *mut _) }\r\n    }\r\n}\r\n```\r\n\r\nHowever, attempting to make this function safe reveals that the elided lifetime of `x` isn't the lifetime in the return type-- it's instead copying over the `'static` lifetime into the return type! Rustdoc actually documents that the signature of this method is `fn get_mut(&'static self, x: &mut u8) -> &'static mut u8`.\r\n\r\nThe following code produces an error:\r\n\r\n```rust\r\nstruct Foo;\r\n\r\nimpl Foo {\r\n    pub fn get_mut(&'static self, x: &mut u8) -> &mut u8 {\r\n        x\r\n    }\r\n}\r\n```\r\n```\r\nerror[E0312]: lifetime of reference outlives lifetime of borrowed content...\r\n --> src/main.rs:7:9\r\n  |\r\n7 |         x\r\n  |         ^\r\n  |\r\n  = note: ...the reference is valid for the static lifetime...\r\nnote: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the method body at 6:5\r\n --> src/main.rs:6:5\r\n  |\r\n6 | /     pub fn get_mut(&'static self, x: &mut u8) -> &mut u8 {\r\n7 | |         x\r\n8 | |     }\r\n  | |_____^\r\n\r\nerror: aborting due to previous error\r\n\r\nerror: Could not compile `playground`.\r\n```\r\n\r\nThis seems like it could be fixed by disallowing elision in this case via a lint.\r\n\r\ncc @aturon ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/48686/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/48686/timeline", "performed_via_github_app": null, "state_reason": null}