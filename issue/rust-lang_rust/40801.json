{"url": "https://api.github.com/repos/rust-lang/rust/issues/40801", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/40801/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/40801/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/40801/events", "html_url": "https://github.com/rust-lang/rust/issues/40801", "id": 216864033, "node_id": "MDU6SXNzdWUyMTY4NjQwMzM=", "number": 40801, "title": "Change which type variables fall back to `!`", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-24T18:05:31Z", "updated_at": "2017-10-31T16:34:48Z", "closed_at": "2017-10-25T18:09:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now, type variables fallback to `!` if they are the result of a `return` etc. The idea was that this represents a \"dead control flow path\", but it is not clear that this is the right rule, because those type variables often get 'caught up' in other paths. \r\n\r\nIn #40224, I [outlined another possibility in a comment](https://github.com/rust-lang/rust/pull/40224#issuecomment-287092982):\r\n\r\n> In talking with @pnkfelix, we had an alternative idea that yields a similar result, but does so in a more tailored way. Specifically, we could say that when you instantiate one enum variant (say, `Err`), any type parameters which do not appear in the variant in question get a diverging fallback. So the type of `Err(x)` is `Result<?T, X>`, where `?T` falls back to `!`.\r\n> \r\n> This would allow `Err(x)?` to work as expected, while making `Deserialize::deserialize()?` fail as requiring a type annotation.\r\n>\r\n> ...\r\n> \r\n> This result is not perfect. One can still write things like:\r\n>\r\n> ```rust\r\n> let mut x = Err(E);\r\n> x = Ok(Deserialize::deserialize()?);\r\n> ```\r\n\r\nin particular, this would mean that `Deserialize::deserialize()?;` would error out, whereas today it defaults to deserializing the `!` type (and hence ... probably ... panics?). This feels like a case where I would expect an \"unconstrained type variable\" error -- but we don't get one today because one of the arms is dead, and hence generates a diverging fallback when coerced.\r\n\r\nThere is an obvious backwards compatibility concern here. It's not clear how much we can change these paths. But I suspect we have **some** leeway, if what we do is tailored enough.", "closed_by": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/40801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/40801/timeline", "performed_via_github_app": null, "state_reason": "completed"}