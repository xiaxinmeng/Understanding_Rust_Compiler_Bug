{"url": "https://api.github.com/repos/rust-lang/rust/issues/29061", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/29061/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/29061/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/29061/events", "html_url": "https://github.com/rust-lang/rust/issues/29061", "id": 111512436, "node_id": "MDU6SXNzdWUxMTE1MTI0MzY=", "number": 29061, "title": "Higher-ranked lifetime bounds give confusing errors", "user": {"login": "wthrowe", "id": 867117, "node_id": "MDQ6VXNlcjg2NzExNw==", "avatar_url": "https://avatars.githubusercontent.com/u/867117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wthrowe", "html_url": "https://github.com/wthrowe", "followers_url": "https://api.github.com/users/wthrowe/followers", "following_url": "https://api.github.com/users/wthrowe/following{/other_user}", "gists_url": "https://api.github.com/users/wthrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/wthrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wthrowe/subscriptions", "organizations_url": "https://api.github.com/users/wthrowe/orgs", "repos_url": "https://api.github.com/users/wthrowe/repos", "events_url": "https://api.github.com/users/wthrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/wthrowe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-10-14T23:05:05Z", "updated_at": "2023-05-26T11:14:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` rust\n#![allow(dead_code)]\n\nfn x(_: &()) {}\n\ntrait HR {}\nimpl HR for fn(&()) {}\nfn hr<T: HR>(_: T) {}\n\ntrait NotHR {}\nimpl<'a> NotHR for fn(&'a ()) {}\nfn not_hr<T: NotHR>(_: T) {}\n\nfn a<'a>() {\n    let not_hr_func: fn(&'a ()) = x;\n    let hr_func: fn(&()) = x;\n    let hr_func2: for<'b> fn(&'b ()) = x;\n    hr(not_hr_func);\n    not_hr(hr_func);\n    not_hr(hr_func2);\n}\n\nfn main() {}\n```\n\ngives\n\n```\n<anon>:17:5: 17:7 error: the trait `HR` is not implemented for the type `fn(&())` [E0277]\n<anon>:17     hr(not_hr_func);\n              ^~\n<anon>:17:5: 17:7 help: see the detailed explanation for E0277\n<anon>:17:5: 17:7 note: required by `hr`\n<anon>:18:5: 18:11 error: the trait `NotHR` is not implemented for the type `fn(&())` [E0277]\n<anon>:18     not_hr(hr_func);\n              ^~~~~~\n<anon>:18:5: 18:11 help: see the detailed explanation for E0277\n<anon>:18:5: 18:11 note: required by `not_hr`\n<anon>:19:5: 19:11 error: the trait `NotHR` is not implemented for the type `fn(&'b ())` [E0277]\n<anon>:19     not_hr(hr_func2);\n              ^~~~~~\n<anon>:19:5: 19:11 help: see the detailed explanation for E0277\n<anon>:19:5: 19:11 note: required by `not_hr`\nerror: aborting due to 3 previous errors\nplaypen: application terminated with error code 101\n```\n\nSummarizing, given the type declaration, we have the printed form:\n\n| Declaration | Display |\n| --- | --- |\n| `fn(&'a ())` | `fn(&())` |\n| `fn(&())` | `fn(&())` |\n| `for<'b> fn(&'b ())` | `fn(&'b ())` |\n\nSo the non-higher-ranked type has its lifetime elided and is printed like a higher-ranked type, and higher-ranked types are sometimes printed without the quantifier but with the lifetime, looking like non-higher-ranked types.\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/29061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/29061/timeline", "performed_via_github_app": null, "state_reason": null}