{"url": "https://api.github.com/repos/rust-lang/rust/issues/58072", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/58072/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/58072/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/58072/events", "html_url": "https://github.com/rust-lang/rust/issues/58072", "id": 405958200, "node_id": "MDU6SXNzdWU0MDU5NTgyMDA=", "number": 58072, "title": "ICE when static global allocator is defined in main function", "user": {"login": "WildCryptoFox", "id": 637155, "node_id": "MDQ6VXNlcjYzNzE1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/637155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WildCryptoFox", "html_url": "https://github.com/WildCryptoFox", "followers_url": "https://api.github.com/users/WildCryptoFox/followers", "following_url": "https://api.github.com/users/WildCryptoFox/following{/other_user}", "gists_url": "https://api.github.com/users/WildCryptoFox/gists{/gist_id}", "starred_url": "https://api.github.com/users/WildCryptoFox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WildCryptoFox/subscriptions", "organizations_url": "https://api.github.com/users/WildCryptoFox/orgs", "repos_url": "https://api.github.com/users/WildCryptoFox/repos", "events_url": "https://api.github.com/users/WildCryptoFox/events{/privacy}", "received_events_url": "https://api.github.com/users/WildCryptoFox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234948, "node_id": "MDU6TGFiZWwyMzQ5NDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-attributes", "name": "A-attributes", "color": "f7e101", "default": false, "description": "Area: #[attributes(..)]"}, {"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 129836139, "node_id": "MDU6TGFiZWwxMjk4MzYxMzk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-allocators", "name": "A-allocators", "color": "f7e101", "default": false, "description": "Area: Custom and system allocators"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-02T07:30:54Z", "updated_at": "2019-07-26T02:18:27Z", "closed_at": "2019-07-26T02:18:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While writing some doctests for a custom allocator this popped up. Easy fix for the doc test, just add `# fn main() {}` after the static.\r\n\r\n[playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=0e1bac12dee35ccbe3d90ef002d90e52)\r\n\r\n```rust\r\nfn main() {\r\n    #[global_allocator]\r\n    static A: usize = 0;\r\n}\r\n```\r\n\r\n```\r\nCompiling playground v0.0.1 (/playground)\r\nerror[E0432]: unresolved import `super::A`\r\n --> src/main.rs:3:5\r\n  |\r\n3 |     static A: usize = 0;\r\n  |     ^^^^^^^^^^^^^^^^^^^^ no `A` in the root\r\n\r\nthread 'rustc' panicked at 'assertion failed: prev.is_none()', src/librustc/middle/region.rs:442:13\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\r\n   1: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:70\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/sys_common/backtrace.rs:58\r\n             at src/libstd/panicking.rs:200\r\n   3: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:215\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:482\r\n   6: std::panicking::begin_panic\r\n   7: <rustc::middle::region::RegionResolutionVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_stmt\r\n   8: <rustc::middle::region::RegionResolutionVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_block\r\n   9: rustc::middle::region::resolve_expr\r\n  10: <rustc::middle::region::RegionResolutionVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_body\r\n  11: rustc::middle::region::region_scope_tree\r\n  12: rustc::ty::query::__query_compute::region_scope_tree\r\n  13: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::region_scope_tree<'tcx>>::compute\r\n  14: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  15: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  16: rustc_typeck::check::regionck::<impl rustc_typeck::check::FnCtxt<'a, 'gcx, 'tcx>>::regionck_item\r\n  17: rustc::ty::context::GlobalCtxt::enter_local\r\n  18: rustc_typeck::check::wfcheck::check_item_well_formed\r\n  19: rustc::ty::query::__query_compute::check_item_well_formed\r\n  20: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::check_item_well_formed<'tcx>>::compute\r\n  21: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  22: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::try_get_with\r\n  23: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::ensure_query\r\n  24: rustc::hir::Crate::visit_all_item_likes\r\n  25: rustc::util::common::time\r\n  26: rustc_typeck::check_crate\r\n  27: <std::thread::local::LocalKey<T>>::with\r\n  28: rustc::ty::context::TyCtxt::create_and_enter\r\n  29: rustc_driver::driver::compile_input\r\n  30: rustc_driver::run_compiler_with_pool\r\n  31: <scoped_tls::ScopedKey<T>>::set\r\n  32: rustc_driver::run_compiler\r\n  33: <scoped_tls::ScopedKey<T>>::set\r\nquery stack during panic:\r\n#0 [region_scope_tree] processing `main`\r\n#1 [check_item_well_formed] processing `main`\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nFor more information about this error, try `rustc --explain E0432`.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.34.0-nightly (852701ad6 2019-02-01) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C codegen-units=1 -C debuginfo=2 --crate-type bin\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `playground`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/58072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/58072/timeline", "performed_via_github_app": null, "state_reason": "completed"}