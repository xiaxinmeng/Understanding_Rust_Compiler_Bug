{"url": "https://api.github.com/repos/rust-lang/rust/issues/49198", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/49198/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/49198/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/49198/events", "html_url": "https://github.com/rust-lang/rust/issues/49198", "id": 306746699, "node_id": "MDU6SXNzdWUzMDY3NDY2OTk=", "number": 49198, "title": "Performance penalty of an unused result type", "user": {"login": "codido", "id": 1302219, "node_id": "MDQ6VXNlcjEzMDIyMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1302219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codido", "html_url": "https://github.com/codido", "followers_url": "https://api.github.com/users/codido/followers", "following_url": "https://api.github.com/users/codido/following{/other_user}", "gists_url": "https://api.github.com/users/codido/gists{/gist_id}", "starred_url": "https://api.github.com/users/codido/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codido/subscriptions", "organizations_url": "https://api.github.com/users/codido/orgs", "repos_url": "https://api.github.com/users/codido/repos", "events_url": "https://api.github.com/users/codido/events{/privacy}", "received_events_url": "https://api.github.com/users/codido/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 234956, "node_id": "MDU6TGFiZWwyMzQ5NTY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-codegen", "name": "A-codegen", "color": "f7e101", "default": false, "description": "Area: Code generation"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-20T06:45:45Z", "updated_at": "2022-07-06T03:52:53Z", "closed_at": "2022-07-06T03:52:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following mock code seems to run substantially slower when executed multiple times if bar1() is used instead of bar2().\r\n\r\nmain.rs:\r\n```\r\nextern crate foobar;\r\n\r\nfn main() {\r\n    let prog = std::env::args().next().unwrap();\r\n    if let Ok(_x) = foobar::foo(&prog) {\r\n        println!(\"Hello World\");\r\n    }\r\n}\r\n```\r\n\r\nlib.rs:\r\n```\r\nuse std::path::Path;\r\nuse std::collections::HashMap;\r\nuse std::error::Error;\r\n\r\nconst NEEDLE: &'static [u8] = b\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nconst HAYSTACK: &'static [u8] = &[0; 10 * 1024 * 1024];\r\n\r\npub fn bar1() -> Result<(), Box<Error>> {\r\n    if HAYSTACK\r\n        .windows(NEEDLE.len())\r\n        .filter(|window| window == &NEEDLE)\r\n        .count() > 0\r\n    {\r\n        println!(\"bar\");\r\n    }\r\n\r\n    Ok(())\r\n}\r\n\r\npub fn bar2() -> Result<bool, Box<Error>> {\r\n    if HAYSTACK\r\n        .windows(NEEDLE.len())\r\n        .filter(|window| window == &NEEDLE)\r\n        .count() > 0\r\n    {\r\n        println!(\"bar\");\r\n    }\r\n\r\n    Ok(true)\r\n}\r\n\r\npub fn foo<P: AsRef<Path>>(_p: P) -> Result<Vec<HashMap<u32, u32>>, Box<Error>> {\r\n    bar1()?;\r\n    // bar2()?;\r\n    let ret = vec![];\r\n    Ok(ret)\r\n}\r\n```\r\n\r\nMeasuring the above code with:\r\n```\r\ntime for x in `seq 1 100`; do ./target/release/foobar; done\r\n```\r\n\r\n...this yields:\r\n```\r\nreal    0m3.318s\r\nuser    0m3.195s\r\nsys     0m0.121s\r\n```\r\n\r\nBut if foo() calls bar2(), the results are quite different:\r\n```\r\nreal    0m2.773s\r\nuser    0m2.652s\r\nsys     0m0.119s\r\n```\r\n\r\nSeemingly unrelated changes to the code, such as the removal of the path argument change the results of the experiment and make both runs perform roughly the same.\r\nThe above was built with Rust 1.24.1 and a release configuration.", "closed_by": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/49198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/49198/timeline", "performed_via_github_app": null, "state_reason": "completed"}