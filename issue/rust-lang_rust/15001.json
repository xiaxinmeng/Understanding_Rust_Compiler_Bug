{"url": "https://api.github.com/repos/rust-lang/rust/issues/15001", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15001/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15001/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15001/events", "html_url": "https://github.com/rust-lang/rust/issues/15001", "id": 35972712, "node_id": "MDU6SXNzdWUzNTk3MjcxMg==", "number": 15001, "title": "Excessively strict borrowing rules.", "user": {"login": "smosher", "id": 383027, "node_id": "MDQ6VXNlcjM4MzAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/383027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smosher", "html_url": "https://github.com/smosher", "followers_url": "https://api.github.com/users/smosher/followers", "following_url": "https://api.github.com/users/smosher/following{/other_user}", "gists_url": "https://api.github.com/users/smosher/gists{/gist_id}", "starred_url": "https://api.github.com/users/smosher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smosher/subscriptions", "organizations_url": "https://api.github.com/users/smosher/orgs", "repos_url": "https://api.github.com/users/smosher/repos", "events_url": "https://api.github.com/users/smosher/events{/privacy}", "received_events_url": "https://api.github.com/users/smosher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-18T10:39:32Z", "updated_at": "2014-06-18T15:11:27Z", "closed_at": "2014-06-18T15:11:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nrustc 0.11.0-pre-nightly (7ec7805 2014-06-16 08:16:49 +0000)\nhost: x86_64-unknown-linux-gnu\n```\n\nI'm not sure if this is intentional with the new borrowing rules, but I don't think it should be. When calling a `&mut self` method on a struct, you can't pass in a field of the struct by value, nor can you express a computed value in the arguments.\n\nTest case:\n\n```\nstruct Foo { x: int }\nimpl Foo {\n    fn set_x(&mut self, new: int) { self.x = new }\n}\n\nfn main() { \n    let t = &mut Foo { x: 0 };\n    // compiles:\n    let tmpx = t.x;\n    t.set_x(tmpx + 1);\n    // borrow fails:\n    t.set_x(t.x + 1)\n}\n```\n\nThe borrow of `t.x` fails, claiming that `t` is already borrowed by `t.setx`, but I would expect `t.x + 1` to be evaluated prior to the mutable borrow (at least conceptually), and to behave essentially like the pair of lines above which compile successfully.\n\n```\nt2.rs:13:11: 13:14 error: cannot use `t.x` because it was mutably borrowed\nt2.rs:13                t.set_x(t.x + 1);\n                                ^~~\nt2.rs:13:3: 13:4 note: borrow of `*t` occurs here\nt2.rs:13                t.set_x(t.x + 1);\n                        ^\nerror: aborting due to previous error\n```\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15001/timeline", "performed_via_github_app": null, "state_reason": "completed"}