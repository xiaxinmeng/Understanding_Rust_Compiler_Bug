{"url": "https://api.github.com/repos/rust-lang/rust/issues/44415", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/44415/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/44415/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/44415/events", "html_url": "https://github.com/rust-lang/rust/issues/44415", "id": 256247064, "node_id": "MDU6SXNzdWUyNTYyNDcwNjQ=", "number": 44415, "title": "ICE in Layout::compute with const cycle", "user": {"login": "plietar", "id": 1489775, "node_id": "MDQ6VXNlcjE0ODk3NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1489775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plietar", "html_url": "https://github.com/plietar", "followers_url": "https://api.github.com/users/plietar/followers", "following_url": "https://api.github.com/users/plietar/following{/other_user}", "gists_url": "https://api.github.com/users/plietar/gists{/gist_id}", "starred_url": "https://api.github.com/users/plietar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plietar/subscriptions", "organizations_url": "https://api.github.com/users/plietar/orgs", "repos_url": "https://api.github.com/users/plietar/repos", "events_url": "https://api.github.com/users/plietar/events{/privacy}", "received_events_url": "https://api.github.com/users/plietar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-08T13:02:14Z", "updated_at": "2018-02-06T09:51:08Z", "closed_at": "2018-02-06T09:51:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a slightly modified version of the [`compile-fail/const-size_of-cycle`](https://github.com/rust-lang/rust/blob/d6ad402a644d9e57f1a6d6c579fe04acf00e0e2e/src/test/compile-fail/const-size_of-cycle.rs) test, adding a field at the end of the struct.\r\n```rust\r\n#![feature(const_fn)]\r\n\r\nstruct Foo {\r\n    bytes: [u8; std::mem::size_of::<Foo>()],\r\n    x: usize,\r\n}\r\n\r\nfn main() {}\r\n```\r\n\r\nIt ends up in the following ICE. The \"unsupported cyclic reference between types/traits detected\" error is expected.\r\n```\r\nerror[E0391]: unsupported cyclic reference between types/traits detected\r\n  --> src/test/compile-fail/const-size_of-cycle.rs:14:5\r\n   |\r\n14 |     bytes: [u8; std::mem::size_of::<Foo>()],\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cyclic reference\r\n   |\r\nnote: the cycle begins when processing `Foo::bytes`...\r\n  --> src/test/compile-fail/const-size_of-cycle.rs:14:5\r\n   |\r\n14 |     bytes: [u8; std::mem::size_of::<Foo>()],\r\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which then requires const-evaluating `Foo::{{initializer}}`...\r\n  --> src/test/compile-fail/const-size_of-cycle.rs:14:17\r\n   |\r\n14 |     bytes: [u8; std::mem::size_of::<Foo>()],\r\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nnote: ...which then requires computing layout of `Foo`...\r\n   = note: ...which then again requires processing `Foo::bytes`, completing the cycle.\r\n\r\nerror: internal compiler error: src/librustc/ty/layout.rs:1541: Layout::compute: unexpected type `[type error]`\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.21.0-nightly (97b01abf3 2017-08-31) running on x86_64-apple-darwin\r\n\r\nnote: run with `RUST_BACKTRACE=1` for a backtrace\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:492:8\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nstack backtrace:\r\n   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\r\n   1: std::panicking::default_hook::{{closure}}\r\n   2: std::panicking::default_hook\r\n   3: std::panicking::rust_panic_with_hook\r\n   4: std::panicking::begin_panic\r\n   5: rustc_errors::Handler::bug\r\n   6: rustc::session::opt_span_bug_fmt::{{closure}}\r\n   7: rustc::session::opt_span_bug_fmt\r\n   8: rustc::session::bug_fmt\r\n   9: rustc::ty::layout::Layout::compute_uncached\r\n  10: rustc::ty::util::layout_raw\r\n  11: rustc::ty::maps::<impl rustc::ty::maps::queries::layout_raw<'tcx>>::try_get\r\n  12: rustc::ty::maps::TyCtxtAt::layout_raw\r\n  13: rustc::ty::util::<impl rustc::ty::TyS<'tcx>>::layout\r\n  14: <&'a mut I as core::iter::iterator::Iterator>::next\r\n  15: rustc::ty::layout::Layout::compute_uncached\r\n  16: rustc::ty::util::layout_raw\r\n  17: rustc::ty::maps::<impl rustc::ty::maps::queries::layout_raw<'tcx>>::try_get\r\n  18: rustc::ty::maps::TyCtxtAt::layout_raw\r\n  19: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::layout_raw\r\n  20: rustc_const_eval::eval::eval_const_expr_partial::{{closure}}\r\n  21: rustc_const_eval::eval::eval_const_expr_partial\r\n  22: rustc_const_eval::eval::eval_const_expr_partial\r\n  23: rustc_const_eval::eval::eval_const_expr_partial\r\n  24: rustc_const_eval::eval::eval_const_expr_partial\r\n  25: rustc_const_eval::eval::const_eval\r\n  26: rustc::ty::maps::<impl rustc::ty::maps::queries::const_eval<'tcx>>::try_get\r\n  27: rustc::ty::maps::TyCtxtAt::const_eval\r\n  28: rustc::middle::const_val::eval_length\r\n  29: <rustc_typeck::astconv::AstConv<'gcx, 'tcx> + 'o>::ast_ty_to_ty\r\n  30: rustc_typeck::collect::type_of\r\n  31: rustc::dep_graph::graph::DepGraph::with_task\r\n  32: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::cycle_check\r\n  33: rustc::ty::maps::<impl rustc::ty::maps::queries::type_of<'tcx>>::try_get\r\n  34: rustc::ty::maps::TyCtxtAt::type_of\r\n  35: rustc::ty::maps::<impl rustc::ty::context::TyCtxt<'a, 'tcx, 'lcx>>::type_of\r\n  36: <rustc_typeck::collect::CollectItemTypesVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  37: rustc_typeck::check_crate::{{closure}}::{{closure}}\r\n  38: rustc_typeck::check_crate\r\n  39: rustc::ty::context::TyCtxt::create_and_enter\r\n  40: rustc_driver::driver::compile_input\r\n  41: rustc_driver::run_compiler\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/44415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/44415/timeline", "performed_via_github_app": null, "state_reason": "completed"}