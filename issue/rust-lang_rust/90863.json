{"url": "https://api.github.com/repos/rust-lang/rust/issues/90863", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/90863/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/90863/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/90863/events", "html_url": "https://github.com/rust-lang/rust/issues/90863", "id": 1052670351, "node_id": "I_kwDOAAsO6M4-vnmP", "number": 90863, "title": "Bad/confusing error message with Residuals", "user": {"login": "simbleau", "id": 48108917, "node_id": "MDQ6VXNlcjQ4MTA4OTE3", "avatar_url": "https://avatars.githubusercontent.com/u/48108917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simbleau", "html_url": "https://github.com/simbleau", "followers_url": "https://api.github.com/users/simbleau/followers", "following_url": "https://api.github.com/users/simbleau/following{/other_user}", "gists_url": "https://api.github.com/users/simbleau/gists{/gist_id}", "starred_url": "https://api.github.com/users/simbleau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simbleau/subscriptions", "organizations_url": "https://api.github.com/users/simbleau/orgs", "repos_url": "https://api.github.com/users/simbleau/repos", "events_url": "https://api.github.com/users/simbleau/events{/privacy}", "received_events_url": "https://api.github.com/users/simbleau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-11-13T12:23:52Z", "updated_at": "2022-08-07T02:35:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\nGiven the following code: <!-- Please provide a link to play.rust-lang.org --> https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=1b1c18cee65bf066a53f2c1a8c3653d0 \r\n\r\n```rust\r\nextern crate anyhow; // 1.0.45\r\nuse anyhow::Result;\r\n\r\nfn give_result() -> Result<()> {\r\n    Ok(())\r\n}\r\n\r\npub fn main() {\r\n    give_result()?; // <--- Notice the `?`\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\r\n   --> src/main.rs:9:18\r\n    |\r\n8   | / pub fn main() {\r\n9   | |     give_result()?;\r\n    | |                  ^ cannot use the `?` operator in a function that returns `()`\r\n10  | | }\r\n    | |_- this function should return `Result` or `Option` to accept `?`\r\n    |\r\n    = help: the trait `FromResidual<Result<Infallible, anyhow::Error>>` is not implemented for `()`\r\nnote: required by `from_residual`\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\nWhat is wrong?:\r\n- **The indication on ***which*** offending function that does not return `Result` or `Option` could be better.** It could be more explicit on whether `main()` or `get_result()` needs to return `Result` or `Option`. \r\n- **The helper text ```\r\nhelp: the trait `FromResidual<Result<Infallible, anyhow::Error>>` is not implemented for `()`\r\nnote: required by `from_residual`.```** is help text for the internal compiler which does not need to be passed to developers. It's generally incomprehensible to most who do not know that this trait bound error has nothing to do with their code and would confuse a mass of new Rust programmers. \r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\n   Compiling playground v0.0.1 (/playground)\r\nerror[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\r\n   --> src/main.rs:9:18\r\n    |\r\n8   | / pub fn main() {\r\n    | |            ^^ `main` does not return `Result` or `Option` to accept `?`\r\n9   | |     give_result()?;\r\n    | |                  ^ cannot use the `?` operator in a function that returns `()`\r\n10  | | }\r\n    | |_- this function should return `Result` or `Option` to accept `?`\r\n    |\r\n\r\nFor more information about this error, try `rustc --explain E0277`.\r\nerror: could not compile `playground` due to previous error\r\n```\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/90863/reactions", "total_count": 12, "+1": 12, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/90863/timeline", "performed_via_github_app": null, "state_reason": null}