{"url": "https://api.github.com/repos/rust-lang/rust/issues/67738", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67738/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67738/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67738/events", "html_url": "https://github.com/rust-lang/rust/issues/67738", "id": 544029848, "node_id": "MDU6SXNzdWU1NDQwMjk4NDg=", "number": 67738, "title": "Incorrect/unexpected behavior with associated type lifetime bounds in lifetime-parametrized traits", "user": {"login": "syntacticsugarglider", "id": 25019299, "node_id": "MDQ6VXNlcjI1MDE5Mjk5", "avatar_url": "https://avatars.githubusercontent.com/u/25019299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syntacticsugarglider", "html_url": "https://github.com/syntacticsugarglider", "followers_url": "https://api.github.com/users/syntacticsugarglider/followers", "following_url": "https://api.github.com/users/syntacticsugarglider/following{/other_user}", "gists_url": "https://api.github.com/users/syntacticsugarglider/gists{/gist_id}", "starred_url": "https://api.github.com/users/syntacticsugarglider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syntacticsugarglider/subscriptions", "organizations_url": "https://api.github.com/users/syntacticsugarglider/orgs", "repos_url": "https://api.github.com/users/syntacticsugarglider/repos", "events_url": "https://api.github.com/users/syntacticsugarglider/events{/privacy}", "received_events_url": "https://api.github.com/users/syntacticsugarglider/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 149689562, "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items", "name": "A-associated-items", "color": "f7e101", "default": false, "description": "Area: Associated items such as associated types and consts."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-30T22:27:13Z", "updated_at": "2021-06-30T17:52:50Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```Rust\r\ntrait Bound<'a> {\r\n    type Assoc;\r\n}\r\n\r\ntrait Bounded<'a, C: Bound<'a>>\r\nwhere\r\n    <C as Bound<'a>>::Assoc: 'static,\r\n{\r\n}\r\n\r\nimpl<'a, T> Bounded<'a, T> for T\r\nwhere\r\n    T: Bound<'a>,\r\n    <T as Bound<'a>>::Assoc: 'static,\r\n{\r\n}\r\n```\r\n\r\nThis fails with ```the associated type `<T as Bound<'_>>::Assoc` may not live long enough\r\nconsider adding an explicit lifetime bound `<T as Bound<'_>>::Assoc: 'static```, despite that very bound clearly being present.\r\n\r\nThis problem is resolved by removing the `'a` parametrization on `Bound` i.e. \r\n```Rust\r\ntrait Bound {\r\n    type Assoc;\r\n}\r\n```\r\nor by adding the bound explicitly to `Assoc` at definition-site\r\n```Rust\r\ntrait Bound {\r\n    type Assoc: 'static;\r\n}\r\n```\r\nbut not, for some reason, by adding a HRTB and/or bound on the initial type parameter that should (as far as I understand this) be equivalent\r\n```Rust\r\nimpl<'a, T> Bounded<'a, T> for T\r\nwhere\r\n    T: Bound<'a> + 'static,\r\n    <T as Bound<'a>>::Assoc: 'static,\r\n    for<'b> <T as Bound<'b>>::Assoc: 'static\r\n{\r\n}\r\n```\r\n[playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=84929734a411d595b93ed890d17d6ecf)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67738/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 2}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67738/timeline", "performed_via_github_app": null, "state_reason": null}