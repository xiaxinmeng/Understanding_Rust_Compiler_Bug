{"url": "https://api.github.com/repos/rust-lang/rust/issues/81432", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81432/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81432/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81432/events", "html_url": "https://github.com/rust-lang/rust/issues/81432", "id": 795046436, "node_id": "MDU6SXNzdWU3OTUwNDY0MzY=", "number": 81432, "title": "LLVM cannot prove that index is in bounds", "user": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108333, "node_id": "MDU6TGFiZWwxMDgzMzM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-LLVM", "name": "A-LLVM", "color": "f7e101", "default": false, "description": "Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."}, {"id": 113376, "node_id": "MDU6TGFiZWwxMTMzNzY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-slow", "name": "I-slow", "color": "e10c02", "default": false, "description": "Problems and improvements with respect to performance of generated code."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-01-27T12:10:18Z", "updated_at": "2021-05-31T02:28:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to get rid of `unsafe` code in commit 57d25179e6751854c298313070adc4ac4454e230 in #81427.\r\nI found a case that GCC can prove that the slice index in bound but LLVM cannot.\r\n\r\nI tried this code (see generated assembly at godbolt <https://godbolt.org/z/dTraGe>):\r\n\r\n```rust\r\npub fn eat_digits<const N: usize>(s: &[u8; N]) -> bool {\r\n    let mut i = 0;\r\n    while i < N {\r\n        let c = s[i];\r\n        if b'0' <= c && c <= b'9' {\r\n            i += 1;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    i <= N\r\n}\r\n\r\npub fn foo(s: &[u8; 1234]) -> bool {\r\n    eat_digits(s)\r\n}\r\n```\r\n\r\nI expected to see this happen: Compiler optimizes `eat_digits` to only `true`.\r\n\r\nInstead, this happened: LLVM cannot prove that, which leads to bounds check with `s[..i]`.\r\n\r\nNote that for the C version (more or less), gcc can optimize the code to `ret true`:\r\n\r\n```c\r\n#include <stdint.h>\r\n#include <stddef.h>\r\n#include <stdbool.h>\r\n\r\n#define N 1234\r\n\r\nbool eat_digits(uint8_t s[N]) {\r\n    size_t i = 0;\r\n    while (i < N) {\r\n        uint8_t c = s[i];\r\n        if ('0' <= c && c <= '9') {\r\n            i += 1;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return i <= N;\r\n}\r\n```\r\n\r\n### Meta\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.51.0-nightly (d1aed50ab 2021-01-26)\r\nbinary: rustc\r\ncommit-hash: d1aed50ab81df3140977c610c5a7d00f36dc519f\r\ncommit-date: 2021-01-26\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.51.0-nightly\r\nLLVM version: 11.0.1\r\nCompiler returned: 0\r\n```\r\n\r\n@rustbot label  A-LLVM I-slow T-compiler ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81432/timeline", "performed_via_github_app": null, "state_reason": null}