{"url": "https://api.github.com/repos/rust-lang/rust/issues/89557", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/89557/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/89557/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/89557/events", "html_url": "https://github.com/rust-lang/rust/issues/89557", "id": 1016354326, "node_id": "I_kwDOAAsO6M48lFYW", "number": 89557, "title": "Diagnostics: suggest a `for<'a>` bound where possible", "user": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 1775993, "node_id": "MDU6TGFiZWwxNzc1OTkz", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lifetimes", "name": "A-lifetimes", "color": "f7e101", "default": false, "description": "Area: lifetime related"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122811, "node_id": "MDU6TGFiZWwxNTk2MTIyODEx", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-newcomer-roadblock", "name": "D-newcomer-roadblock", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error hard to understand for new users"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-10-05T13:47:58Z", "updated_at": "2021-10-05T16:44:38Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "@estebank requested I submit this [here](https://twitter.com/ekuber/status/1445361832357662727). This is a small-ish repro for a case where the compiler should suggest we use a `for<'_>` lifetime ([HRTB](https://doc.rust-lang.org/nomicon/hrtb.html)), but currently doesn't.\r\n\r\nThis repro is based on an issue I encountered [here](https://twitter.com/yoshuawuyts/status/1418726825627459589) ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=64c62d99d47bfa15502d358145676fe2)) while working on [heckcheck](https://docs.rs/heckcheck/1.0.2/heckcheck/). The fix for it was contributed by @BoxyUwU  [here](https://twitter.com/yoshuawuyts/status/1418726825627459589).\r\n\r\n---\r\n\r\n<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n\r\nIf you cannot produce a minimal reproduction case (something that would work in\r\nisolation), please provide the steps or even link to a repository that causes\r\nthe problematic output to occur.\r\n-->\r\n\r\n[Given the following code](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5b7fa7f3c640c982fb38cd75fc51c1ab): <!-- Please provide a link to play.rust-lang.org -->\r\n\r\n```rust\r\nstruct HeckCheck(String);\r\n\r\nimpl HeckCheck {\r\n    pub fn check<'a, A>(&'a mut self)\r\n    where\r\n        A: Arbitrary<'a>,\r\n    {\r\n        for _ in 0..2 {\r\n            fill(&mut self.0);\r\n            A::arbitrary(&mut self.0);\r\n        }\r\n    }\r\n}\r\n\r\nfn fill(_: &mut String) {}\r\n\r\npub trait Arbitrary<'a> {\r\n    fn arbitrary(u: &'a mut String);\r\n}\r\n```\r\n\r\nThe current output is:\r\n\r\n```\r\nerror[E0499]: cannot borrow `self.0` as mutable more than once at a time\r\n  --> src/lib.rs:9:18\r\n   |\r\n4  |     pub fn check<'a, A>(&'a mut self)\r\n   |                  -- lifetime `'a` defined here\r\n...\r\n9  |             fill(&mut self.0);\r\n   |                  ^^^^^^^^^^^ second mutable borrow occurs here\r\n10 |             A::arbitrary(&mut self.0);\r\n   |             -------------------------\r\n   |             |            |\r\n   |             |            first mutable borrow occurs here\r\n   |             argument requires that `self.0` is borrowed for `'a`\r\n\r\nerror[E0499]: cannot borrow `self.0` as mutable more than once at a time\r\n  --> src/lib.rs:10:26\r\n   |\r\n4  |     pub fn check<'a, A>(&'a mut self)\r\n   |                  -- lifetime `'a` defined here\r\n...\r\n10 |             A::arbitrary(&mut self.0);\r\n   |             -------------^^^^^^^^^^^-\r\n   |             |            |\r\n   |             |            `self.0` was mutably borrowed here in the previous iteration of the loop\r\n   |             argument requires that `self.0` is borrowed for `'a`\r\n```\r\n\r\n<!-- The following is not always necessary. -->\r\nIdeally the output should look like:\r\n\r\n```\r\nerror[E0499]: cannot borrow `self.0` as mutable more than once at a time\r\n  --> src/lib.rs:14:18\r\n6  |        A: Arbitrary<'a>,\r\n...\r\n9  |             fill(&mut self.0);\r\n   |                  ^^^^^^^^^^^ first mutable borrow occurs here\r\n10 |             A::arbitrary(&mut self.0);\r\n   |                               ^^^^^^ second mutable borrow occurs here\r\n   |\r\nhelp: consider giving `A` a higher-rank lifetime\r\n   |\r\n6  |        for<'b> A: Arbitrary<'ab>,\r\n   |        +++++++               ~+\r\n\r\n```\r\n\r\n<!--\r\nIf the problem is not self-explanatory, please provide a rationale for the\r\nchange.\r\n-->\r\n\r\n<!--\r\nIf dramatically different output is caused by small changes, consider also\r\nadding them here.\r\n\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions. The output might also be\r\ndifferent depending on the Edition.\r\n-->\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/89557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/89557/timeline", "performed_via_github_app": null, "state_reason": null}