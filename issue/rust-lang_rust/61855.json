{"url": "https://api.github.com/repos/rust-lang/rust/issues/61855", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/61855/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/61855/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/61855/events", "html_url": "https://github.com/rust-lang/rust/issues/61855", "id": 456467553, "node_id": "MDU6SXNzdWU0NTY0Njc1NTM=", "number": 61855, "title": "error[E0506] when using rustc but passes with cargo", "user": {"login": "AbdouSeck", "id": 6490055, "node_id": "MDQ6VXNlcjY0OTAwNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6490055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdouSeck", "html_url": "https://github.com/AbdouSeck", "followers_url": "https://api.github.com/users/AbdouSeck/followers", "following_url": "https://api.github.com/users/AbdouSeck/following{/other_user}", "gists_url": "https://api.github.com/users/AbdouSeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdouSeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdouSeck/subscriptions", "organizations_url": "https://api.github.com/users/AbdouSeck/orgs", "repos_url": "https://api.github.com/users/AbdouSeck/repos", "events_url": "https://api.github.com/users/AbdouSeck/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdouSeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-14T23:00:25Z", "updated_at": "2019-06-18T00:57:03Z", "closed_at": "2019-06-15T12:01:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am sorry if this turns out to be a duplicate, or an issue directly related with some other issue. I am relatively new to the language.\r\n\r\nThe following (also [linked here](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=db2d55307e898c5d2e6eea3b3c1cacc5)) will compile just fine with `cargo run` or `cargo build`. However, when compiled with `rustc`, I get a compile error:\r\n\r\n**Code**:\r\n```\r\n// A Person struct with name, age and health status\r\n#[derive(Debug)]\r\nstruct Person {\r\n    /// Name of the person\r\n    name: String,\r\n    /// Age of the person\r\n    age: u32,\r\n    /// The health status of the person\r\n    status: Status,\r\n}\r\n\r\n// Create a constructor for the Person struct\r\nimpl Person {\r\n    fn new(n: String, a: u32, s: Status) -> Self {\r\n        Person {\r\n            name: n,\r\n            age: a,\r\n            status: s,\r\n        }\r\n    }\r\n}\r\n\r\n// A Disease struct with symptoms, curability and medication information\r\n#[derive(Debug)]\r\nstruct Disease {\r\n    /// Whether or not the disease is curable\r\n    curable: bool,\r\n    /// A list of symptoms\r\n    symptoms: Vec<String>,\r\n    /// The recommended medication\r\n    medication: String,\r\n}\r\n\r\n// Make a constructor for the Disease struct\r\nimpl Disease {\r\n    fn new(curable: bool, symptoms: Vec<String>, medication: String) -> Self {\r\n        Disease {\r\n            curable,\r\n            symptoms,\r\n            medication,\r\n        }\r\n    }\r\n}\r\n\r\n// Enum with 2 variants: Healthy and Sick\r\n#[derive(Debug)]\r\nenum Status {\r\n    /// Variant indicating that the person is healthy\r\n    Healthy,\r\n    /// Variant indicating that the person is sick\r\n    Sick(Vec<Disease>),\r\n}\r\n\r\n// Trait for the current status of a person's health\r\ntrait Sick {\r\n    /// Return the diseases someone has, if any.\r\n    /// A None is returned if someone is not sick\r\n    fn sickness(&self) -> Option<&Vec<Disease>>;\r\n    /// Check whether or not someone is sick\r\n    fn is_sick(&self) -> bool;\r\n    /// Make someone sick by adding the provided\r\n    /// disease to their list of diseases\r\n    fn sicken(&mut self, d: Disease);\r\n}\r\n\r\n// Implement the Sick trait for Person\r\nimpl Sick for Person {\r\n    fn sickness(&self) -> Option<&Vec<Disease>> {\r\n        match &self.status {\r\n            Status::Healthy => None,\r\n            Status::Sick(d) => Some(d),\r\n        }\r\n    }\r\n    fn is_sick(&self) -> bool {\r\n        self.sickness().is_some()\r\n    }\r\n    fn sicken(&mut self, d: Disease) {\r\n        match &mut self.status {\r\n            Status::Healthy => {\r\n                self.status = Status::Sick(vec![d])\r\n            },\r\n            Status::Sick(diseases) => {\r\n                diseases.push(d);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Bring everything together\r\nfn main() {\r\n    // Let there be healthy Mireille\r\n    let mut p = Person::new(String::from(\"Mireille\"), 45, Status::Healthy);\r\n    println!(\"{:#?}\", p.sickness());\r\n    println!(\"{}\", p.is_sick());\r\n    // Make up some disease\r\n    let d = Disease::new(\r\n        true,\r\n        vec![String::from(\"Sore throat\")],\r\n        String::from(\"Sleep\"),\r\n    );\r\n    // Infect Mireille with it\r\n    p.sicken(d);\r\n    // Make another one\r\n    let d = Disease::new(\r\n        true,\r\n        vec![String::from(\"Headache\")],\r\n        String::from(\"Aspirin\"),\r\n    );\r\n    // Sicken her even more\r\n    p.sicken(d);\r\n    // Check for diseases\r\n    println!(\"{:#?}\", p.sickness().unwrap());\r\n}\r\n```\r\n\r\n**Error with rustc**:\r\n```\r\nerror[E0506]: cannot assign to `self.status` because it is borrowed\r\n  --> sicklies.rs:80:17\r\n   |\r\n78 |         match &mut self.status {\r\n   |                    ----------- borrow of `self.status` occurs here\r\n79 |             Status::Healthy => {\r\n80 |                 self.status = Status::Sick(vec![d])\r\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `self.status` occurs here\r\n```\r\n\r\nI have, quite frankly, come to terms with the fact that the borrow checker is right about the error here. `self.status` is mutably borrowed at `match &mut self.status`; so reassigning it with the line `self.status = Status::Sick(vec![d])` should trigger an error. Hence, I see that error by directly invoking `rustc`. Not seeing the same error with `cargo` has me confused.\r\n\r\n**Summary**:\r\n- Doesn't compile in:\r\n```\r\nrustc 1.34.2 (6c2484dc3 2019-05-13)\r\nbinary: rustc\r\ncommit-hash: 6c2484dc3c532c052f159264e970278d8b77cdc9\r\ncommit-date: 2019-05-13\r\nhost: x86_64-apple-darwin\r\nrelease: 1.34.2\r\nLLVM version: 8.0\r\n```\r\nor\r\n```\r\nrustc 1.34.1 (fc50f328b 2019-04-24)\r\nbinary: rustc\r\ncommit-hash: fc50f328b0353b285421b8ff5d4100966387a997\r\ncommit-date: 2019-04-24\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.34.1\r\nLLVM version: 8.0\r\n```\r\nor\r\n```\r\nrustc 1.33.0 (2aa4c46cf 2019-02-28)\r\nbinary: rustc\r\ncommit-hash: 2aa4c46cfdd726e97360c2734835aa3515e8c858\r\ncommit-date: 2019-02-28\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.33.0\r\nLLVM version: 8.0\r\n```\r\n\r\n- But compiles with:\r\n```\r\ncargo 1.33.0 (f099fe94b 2019-02-12)\r\nrelease: 1.33.0\r\ncommit-hash: f099fe94b66f0a2f80370be8f2d3db2a55b97050\r\ncommit-date: 2019-02-12\r\n```\r\nand\r\n```\r\ncargo 1.34.0 (6789d8a0a 2019-04-01)\r\nrelease: 1.34.0\r\ncommit-hash: 6789d8a0a54a96d95365c4e1fb01d47a5eed9937\r\ncommit-date: 2019-04-01\r\n```\r\n\r\n**Questions**:\r\nIs this a bug or am I missing something?\r\n\r\nThank you,\r\n\r\nAbdou", "closed_by": {"login": "AbdouSeck", "id": 6490055, "node_id": "MDQ6VXNlcjY0OTAwNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6490055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdouSeck", "html_url": "https://github.com/AbdouSeck", "followers_url": "https://api.github.com/users/AbdouSeck/followers", "following_url": "https://api.github.com/users/AbdouSeck/following{/other_user}", "gists_url": "https://api.github.com/users/AbdouSeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdouSeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdouSeck/subscriptions", "organizations_url": "https://api.github.com/users/AbdouSeck/orgs", "repos_url": "https://api.github.com/users/AbdouSeck/repos", "events_url": "https://api.github.com/users/AbdouSeck/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdouSeck/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/61855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/61855/timeline", "performed_via_github_app": null, "state_reason": "completed"}