{"url": "https://api.github.com/repos/rust-lang/rust/issues/69488", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/69488/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/69488/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/69488/events", "html_url": "https://github.com/rust-lang/rust/issues/69488", "id": 571516899, "node_id": "MDU6SXNzdWU1NzE1MTY4OTk=", "number": 69488, "title": "const-eval: load of partially initialized scalar produces entirely uninitialized result", "user": {"login": "HeroicKatora", "id": 5550310, "node_id": "MDQ6VXNlcjU1NTAzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5550310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HeroicKatora", "html_url": "https://github.com/HeroicKatora", "followers_url": "https://api.github.com/users/HeroicKatora/followers", "following_url": "https://api.github.com/users/HeroicKatora/following{/other_user}", "gists_url": "https://api.github.com/users/HeroicKatora/gists{/gist_id}", "starred_url": "https://api.github.com/users/HeroicKatora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HeroicKatora/subscriptions", "organizations_url": "https://api.github.com/users/HeroicKatora/orgs", "repos_url": "https://api.github.com/users/HeroicKatora/repos", "events_url": "https://api.github.com/users/HeroicKatora/events{/privacy}", "received_events_url": "https://api.github.com/users/HeroicKatora/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 900795185, "node_id": "MDU6TGFiZWw5MDA3OTUxODU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-const-eval", "name": "A-const-eval", "color": "f7e101", "default": false, "description": "Area: constant evaluation (mir interpretation)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-02-26T16:43:21Z", "updated_at": "2022-04-05T21:09:40Z", "closed_at": "2022-04-05T19:05:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The constant evaluation of a move of a union differs from the semantics of non-constant evaluation. The union instance is not regarded as a bag-of-bits as aluded to in the reference and also [this `unsafe-code-guidelines` issue](https://github.com/rust-lang/unsafe-code-guidelines/issues/73#issue-397775312). This occurs only if the unions has a single scalar *scalar* field and otherwise ZSTs, which is pretty specific but occurs for `MaybeUninit` if the type parameter is a scalar. If the field is of other types such as arrays (`[scalar; N]`) *or* if the other field is not a ZST then the semantics seem fine.\r\n\r\nI tried this code:\r\n\r\n```rust\r\n#![feature(const_if_match)] // Only related to make_1u8_bag, all of them set by Miri\r\n#![feature(const_fn)]\r\n#![feature(const_mut_refs)]\r\n#![feature(const_panic)]\r\n#![feature(const_raw_ptr_deref)]\r\n\r\n// Or, equivalently: `MaybeUninit`.\r\npub union BagOfBits<T: Copy> {\r\n    uninit: (),\r\n    _storage: T,\r\n}\r\n\r\npub const fn make_1u8_bag<T: Copy>() -> BagOfBits<T> {\r\n    assert!(core::mem::size_of::<T>() >= 1);\r\n    let mut bag = BagOfBits { uninit: () };\r\n    unsafe { (&mut bag as *mut _ as *mut u8).write(1); };\r\n    bag\r\n}\r\n\r\npub fn check_bag<T: Copy>(bag: &BagOfBits<T>) {\r\n    let val = unsafe { (bag as *const _ as *const u8).read() };\r\n    assert_eq!(val, 1);\r\n}\r\n\r\nfn main() {\r\n    check_bag(&make_1u8_bag::<[usize; 1]>()); // Fine\r\n    check_bag(&make_1u8_bag::<usize>()); // Fine\r\n\r\n    const CONST_ARRAY_BAG: BagOfBits<[usize; 1]> = make_1u8_bag();\r\n    check_bag(&CONST_ARRAY_BAG); // Fine.\r\n    const CONST_USIZE_BAG: BagOfBits<usize> = make_1u8_bag();\r\n    check_bag(&CONST_USIZE_BAG); // Panics\r\n}\r\n```\r\n\r\n[Playground](https://play.rust-lang.org/?version=nightly&mode=release&edition=2018&gist=deecbf5c59706a37f7db16ea5f3ed30b)\r\n\r\nI expected to see this happen: All assertions succeed.\r\n\r\nInstead, this happened: The check where a union of type `BagOfBits<usize>` is *moved during constant evaluation*, panics. When putting everything through Miri it panics with the message of trying to read an uninitialized byte. The check where the union of type `BagOfBits<[usize; 1]>` is used instead runs fine in both cases.\r\n\r\n```text\r\nerror: Miri evaluation error: attempted to read undefined bytes\r\n  --> src/main.rs:21:5\r\n   |\r\n21 |     assert_eq!(val, 1);\r\n   |     ^^^^^^^^^^^^^^^^^^^ attempted to read undefined bytes\r\n```\r\n\r\nAs far as I am aware, when constant evaluation reads *scalars* then it propagates uninitialized bytes. If that were to happen then it would explain the observed behaviour but it seems weird why the union copy would use a scalar read.\r\n\r\ncc @RalfJung ", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/69488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/69488/timeline", "performed_via_github_app": null, "state_reason": "completed"}