{"url": "https://api.github.com/repos/rust-lang/rust/issues/82410", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/82410/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/82410/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/82410/events", "html_url": "https://github.com/rust-lang/rust/issues/82410", "id": 813734534, "node_id": "MDU6SXNzdWU4MTM3MzQ1MzQ=", "number": 82410, "title": "std::io::copy returns Bad File Descriptor with writer files in append mode in 1.50", "user": {"login": "kurojishi", "id": 818975, "node_id": "MDQ6VXNlcjgxODk3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/818975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kurojishi", "html_url": "https://github.com/kurojishi", "followers_url": "https://api.github.com/users/kurojishi/followers", "following_url": "https://api.github.com/users/kurojishi/following{/other_user}", "gists_url": "https://api.github.com/users/kurojishi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kurojishi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kurojishi/subscriptions", "organizations_url": "https://api.github.com/users/kurojishi/orgs", "repos_url": "https://api.github.com/users/kurojishi/repos", "events_url": "https://api.github.com/users/kurojishi/events{/privacy}", "received_events_url": "https://api.github.com/users/kurojishi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123110, "node_id": "MDU6TGFiZWwxMjMxMTA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-linux", "name": "O-linux", "color": "6e6ec0", "default": false, "description": "Operating system: Linux"}, {"id": 262252840, "node_id": "MDU6TGFiZWwyNjIyNTI4NDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/regression-from-stable-to-stable", "name": "regression-from-stable-to-stable", "color": "e4008a", "default": false, "description": "Performance or correctness regression from one stable version to another."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1966877457, "node_id": "MDU6TGFiZWwxOTY2ODc3NDU3", "url": "https://api.github.com/repos/rust-lang/rust/labels/P-critical", "name": "P-critical", "color": "eb6420", "default": false, "description": "Critical priority"}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "closed", "locked": false, "assignee": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2021-02-22T18:06:46Z", "updated_at": "2021-03-12T06:44:06Z", "closed_at": "2021-03-12T00:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "While updating my code base from 1.49 to 1.50 we noticed a failures in a program that rebuilds files from small chunks.\r\n\r\nWe are opening a file in append mode, one in read mode, and we stream one into the other (as for the snippet below).\r\n\r\nTesting this out confirmed that the error happens on the reader file when the writer is in append mode, whenever we use a `BufWriter`/`BufReader` or not. If we load the whole file into a string and then use `std::io::copy` on the same data it works as intended, as does setting the file in write mode (while it becomes necessary to seek to the end).\r\n\r\nChecking what got shipped into 1.50 we suspect the probable culprit to be https://github.com/rust-lang/rust/commit/028754a2f7f62ed1e4df889fadfa74eb2d007109#diff-4280ab12d5278289ca8b2e83cad374850eaeac0c18f49a474f5a9b5bf55d3991\r\n\r\nWhat we are guessing is that this change is using the `sendfile` syscall that doesn't support files in append mode even when the file is in append mode, triggering the Bad File Descriptor error\r\n\r\nhttps://github.com/torvalds/linux/blob/b52bb135aad99deea9bfe5f050c3295b049adc87/fs/read_write.c#L1676\r\n\r\n### Code\r\n\r\nI tried this code ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=74547a9cf80257602aa687f10e8d7d76)):\r\n\r\n```rust\r\nuse std::fs::{File, OpenOptions};\r\nuse std::io::prelude::*;\r\n\r\nfn main() -> std::io::Result<()> {\r\n    write_file(\"first.txt\")?;\r\n    write_file(\"second.txt\")?;\r\n    println!(\"{}\", read_file(\"first.txt\")?);\r\n    copy_file(\"first.txt\", \"second.txt\")?;\r\n    Ok(())\r\n}\r\n\r\nfn write_file(name: &str) -> std::io::Result<()> {\r\n    let mut file = File::create(name)?;\r\n    file.write_all(b\"Hello, world!\")?;\r\n    Ok(())\r\n}\r\n\r\nfn read_file(name: &str) -> std::io::Result<String> {\r\n    let mut file = File::open(name)?;\r\n    let mut contents = String::new();\r\n    file.read_to_string(&mut contents)?;\r\n    Ok(contents)\r\n}\r\n\r\nfn copy_file(from: &str, to: &str) -> std::io::Result<()> {\r\n    let mut source = OpenOptions::new().read(true).open(from)?;\r\n    let mut dest = OpenOptions::new().append(true).open(to)?;\r\n    let bytes_written = std::io::copy(&mut source, &mut dest)?;\r\n    println!(\"Copied {} bytes\", bytes_written);\r\n    std::fs::remove_file(from)?;\r\n    Ok(())\r\n}\r\n```\r\n\r\nI expected to see this happen: the files to be concatenated \r\n\r\nInstead, this happened: ```std::io::copy``` returns ```Error: Os { code: 9, kind: Other, message: \"Bad file descriptor\" }```\r\n\r\nStrace for the code snipped:\r\n```\r\nopen(\"first.txt\", O_RDONLY|O_CLOEXEC)   = 3\r\nopen(\"second.txt\", O_WRONLY|O_APPEND|O_CLOEXEC) = 4\r\nfutex(0x7f376caad0ec, FUTEX_WAKE_PRIVATE, 2147483647) = 0\r\nsyscall_332(0, 0, 0, 0xfff, 0, 0)       = -1 (errno 38)\r\nfstat(3, {st_mode=S_IFREG|0644, st_size=13, ...}) = 0\r\nsyscall_326(0xffffffff, 0, 0xffffffff, 0, 0x1, 0) = -1 (errno 9)\r\nsyscall_326(0x3, 0, 0x4, 0, 0x40000000, 0) = -1 (errno 9)\r\nclose(4)                                = 0\r\nclose(3)                                = 0\r\n```\r\n\r\nExample that works with loading the file into a string before copy ([playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c15b5ed94233649b6939eccce9742b7b)):\r\n```rust\r\nuse std::fs::{File, OpenOptions};\r\nuse std::io::BufReader;\r\nuse std::io::BufWriter;\r\nuse std::io::Read;\r\nuse std::io::prelude::*;\r\nfn main() -> std::io::Result<()> {\r\n    write_file(\"first.txt\")?;\r\n    write_file(\"second.txt\")?;\r\n    println!(\"{}\", read_file(\"first.txt\")?);\r\n    copy_file(\"first.txt\", \"second.txt\")?;\r\n    println!(\"destination data {}\", read_file(\"second.txt\")?);\r\n    Ok(())\r\n}\r\nfn write_file(name: &str) -> std::io::Result<()> {\r\n    let mut file = File::create(name)?;\r\n    file.write_all(b\"Hello, world!\")?;\r\n    Ok(())\r\n}\r\nfn read_file(name: &str) -> std::io::Result<String> {\r\n    let mut file = File::open(name)?;\r\n    let mut contents = String::new();\r\n    file.read_to_string(&mut contents)?;\r\n    Ok(contents)\r\n}\r\nfn copy_file(from: &str, to: &str) -> std::io::Result<()> {\r\n    let mut source = BufReader::new(OpenOptions::new().read(true).open(from)?);\r\n    let mut source_str = String::new();\r\n    source.read_to_string(&mut source_str)?;\r\n    let mut reader = BufReader::new(source_str.as_bytes());\r\n    let mut dest = BufWriter::new(OpenOptions::new().append(true).open(to)?);\r\n    let bytes_written = std::io::copy(&mut reader, &mut dest)?;\r\n    println!(\"Copied {} bytes\", bytes_written);\r\n    std::fs::remove_file(from)?;\r\n    Ok(())\r\n}\r\n```\r\n### Version it worked on\r\nIt most recently worked on: 1.49\r\n### Version with regression\r\n1.50\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.50.0 (cb75ad5db 2021-02-10)\r\nbinary: rustc\r\ncommit-hash: cb75ad5db02783e8b0222fee363c5f63f7e2cf5b\r\ncommit-date: 2021-02-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.50.0\r\n```\r\n\r\n### Backtrace\r\nno backtrace\r\n\r\n<!--\r\nIf you know when this regression occurred, please add a line like below, replacing `{channel}` with one of stable, beta, or nightly.\r\n\r\n@rustbot modify labels: +regression-from-stable-to-stable-regression-untriaged\r\n-->\r\n\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"the8472\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/82410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/82410/timeline", "performed_via_github_app": null, "state_reason": "completed"}