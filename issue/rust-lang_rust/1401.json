{"url": "https://api.github.com/repos/rust-lang/rust/issues/1401", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/1401/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/1401/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/1401/events", "html_url": "https://github.com/rust-lang/rust/issues/1401", "id": 2693554, "node_id": "MDU6SXNzdWUyNjkzNTU0", "number": 1401, "title": "make all no longer works after make clean", "user": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-12-31T04:55:51Z", "updated_at": "2012-01-13T20:59:48Z", "closed_at": "2012-01-13T20:59:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At least for me, running make clean seems to then prevent me from ever building again.  I get lots of linking errors related to LLVM (see below).  I presume this is related to 7e611366bb07f1c26cf5692bccfdfa4fb1d96d25.\n\n```\ng++  -dynamiclib -lpthread -framework CoreServices -Wl,-no_compact_unwind -g -o rustllvm/x86_64-apple-darwin/librustllvm.dylib -m64 -Wl,-exported_symbols_list,rustllvm/rustllvm.darwin.def rustllvm/x86_64-apple-darwin/RustGCMetadataPrinter.o rustllvm/x86_64-apple-darwin/RustGCStrategy.o rustllvm/x86_64-apple-darwin/RustWrapper.o  -lLLVMAsmParser -lLLVMLinker -lLLVMArchive -lLLVMBitWriter -lLLVMBitReader -lLLVMipo -lLLVMX86Disassembler -lLLVMX86AsmParser -lLLVMX86CodeGen -lLLVMSelectionDAG -lLLVMAsmPrinter -lLLVMMCParser -lLLVMCodeGen -lLLVMScalarOpts -lLLVMInstCombine -lLLVMTransformUtils -lLLVMipa -lLLVMAnalysis -lLLVMX86Desc -lLLVMX86Info -lLLVMTarget -lLLVMX86AsmPrinter -lLLVMMC -lLLVMObject -lLLVMX86Utils -lLLVMCore -lLLVMSupport  -L/Users/nmatsakis/versioned/rust-task/build/llvm/x86_64-apple-darwin/Release+Asserts/lib  -lm  -Wl,-install_name,@rpath/librustllvm.dylib\nld: warning: ignoring file /usr/local/lib/libLLVMAsmParser.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMLinker.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMArchive.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMBitWriter.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMBitReader.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMipo.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMX86Disassembler.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMX86AsmParser.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMX86CodeGen.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMSelectionDAG.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMAsmPrinter.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMMCParser.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMCodeGen.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMScalarOpts.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMInstCombine.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMTransformUtils.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMipa.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMAnalysis.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMX86Desc.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMX86Info.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMTarget.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMX86AsmPrinter.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMMC.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMObject.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMX86Utils.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMCore.a, file was built for archive which is not the architecture being linked (x86_64)\nld: warning: ignoring file /usr/local/lib/libLLVMSupport.a, file was built for archive which is not the architecture being linked (x86_64)\nUndefined symbols for architecture x86_64:\n  \"llvm::GCMetadataPrinter::GCMetadataPrinter()\", referenced from:\n      llvm::Registry<llvm::GCMetadataPrinter, llvm::RegistryTraits<llvm::GCMetadataPrinter> >::Add<(anonymous namespace)::RustGCMetadataPrinter>::CtorFn()in RustGCMetadataPrinter.o\n  \"llvm::AsmPrinter::getObjFileLowering() const\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::finishAssembly(llvm::AsmPrinter&)in RustGCMetadataPrinter.o\n  \"llvm::AsmPrinter::GetExternalSymbolSymbol(llvm::StringRef) const\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::finishAssembly(llvm::AsmPrinter&)in RustGCMetadataPrinter.o\n  \"llvm::MCStreamer::EmitSymbolValue(llvm::MCSymbol const*, unsigned int, unsigned int)\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::finishAssembly(llvm::AsmPrinter&)in RustGCMetadataPrinter.o\n  \"llvm::AsmPrinter::GetTempSymbol(llvm::StringRef, unsigned int) const\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::finishAssembly(llvm::AsmPrinter&)in RustGCMetadataPrinter.o\n  \"llvm::Mangler::getSymbol(llvm::GlobalValue const*)\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::finishAssembly(llvm::AsmPrinter&)in RustGCMetadataPrinter.o\n  \"llvm::GCMetadataPrinter::~GCMetadataPrinter()\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::~RustGCMetadataPrinter()in RustGCMetadataPrinter.o\n      (anonymous namespace)::RustGCMetadataPrinter::~RustGCMetadataPrinter()in RustGCMetadataPrinter.o\n  \"llvm::Value::stripPointerCasts()\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::GetGCMetadataForRoot(llvm::GCRoot const&)in RustGCMetadataPrinter.o\n  \"llvm::GlobalValue::isDeclaration() const\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::GetGCMetadataForRoot(llvm::GCRoot const&)in RustGCMetadataPrinter.o\n  \"llvm::Value::getContext() const\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::GetGCMetadataForRoot(llvm::GCRoot const&)in RustGCMetadataPrinter.o\n  \"llvm::IntegerType::get(llvm::LLVMContext&, unsigned int)\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::GetGCMetadataForRoot(llvm::GCRoot const&)in RustGCMetadataPrinter.o\n  \"llvm::ConstantInt::get(llvm::IntegerType*, unsigned long long, bool)\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::GetGCMetadataForRoot(llvm::GCRoot const&)in RustGCMetadataPrinter.o\n  \"llvm::APInt::countLeadingZerosSlowCase() const\", referenced from:\n      (anonymous namespace)::RustGCMetadataPrinter::GetGCMetadataForRoot(llvm::GCRoot const&)in RustGCMetadataPrinter.o\n  \"llvm::GCStrategy::GCStrategy()\", referenced from:\n      llvm::Registry<llvm::GCStrategy, llvm::RegistryTraits<llvm::GCStrategy> >::Add<RustGCStrategy>::CtorFn()in RustGCStrategy.o\n  \"llvm::GCStrategy::~GCStrategy()\", referenced from:\n      RustGCStrategy::~RustGCStrategy()in RustGCStrategy.o\n      RustGCStrategy::~RustGCStrategy()in RustGCStrategy.o\n  \"llvm::GCStrategy::initializeCustomLowering(llvm::Module&)\", referenced from:\n      vtable for RustGCStrategyin RustGCStrategy.o\n  \"llvm::GCStrategy::performCustomLowering(llvm::Function&)\", referenced from:\n      vtable for RustGCStrategyin RustGCStrategy.o\n  \"llvm::GCStrategy::findCustomSafePoints(llvm::GCFunctionInfo&, llvm::MachineFunction&)\", referenced from:\n      vtable for RustGCStrategyin RustGCStrategy.o\n  \"_LLVMCreateMemoryBufferWithContentsOfFile\", referenced from:\n      _LLVMRustCreateMemoryBufferWithContentsOfFile in RustWrapper.o\n  \"llvm::TimePassesIsEnabled\", referenced from:\n      _LLVMRustEnableTimePasses in RustWrapper.o\n  \"llvm::Module::getOrInsertNamedMetadata(llvm::StringRef)\", referenced from:\n      _LLVMAddNamedMetadataOperand in RustWrapper.o\n  \"llvm::NamedMDNode::addOperand(llvm::MDNode*)\", referenced from:\n      _LLVMAddNamedMetadataOperand in RustWrapper.o\n  \"llvm::Type::getMetadataTy(llvm::LLVMContext&)\", referenced from:\n      _LLVMMetadataTypeInContext in RustWrapper.o\n      _LLVMMetadataType in RustWrapper.o\n  \"_LLVMGetGlobalContext\", referenced from:\n      _LLVMMetadataType in RustWrapper.o\n  \"llvm::Module::getOrInsertFunction(llvm::StringRef, llvm::FunctionType*)\", referenced from:\n      _LLVMGetOrInsertFunction in RustWrapper.o\n  \"llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool)\", referenced from:\n      _LLVMRustPrintPassTimings in RustWrapper.o\n  \"llvm::TimerGroup::printAll(llvm::raw_ostream&)\", referenced from:\n      _LLVMRustPrintPassTimings in RustWrapper.o\n  \"llvm::raw_fd_ostream::~raw_fd_ostream()\", referenced from:\n      _LLVMRustPrintPassTimings in RustWrapper.o\n      _LLVMRustWriteOutputFile in RustWrapper.o\n      _LLVMRustAddPrintModulePass in RustWrapper.o\n  \"_LLVMConstInt\", referenced from:\n      _LLVMRustConstInt in RustWrapper.o\n      _LLVMRustConstSmallInt in RustWrapper.o\n  \"_LLVMParseBitcode\", referenced from:\n      _LLVMRustParseBitcode in RustWrapper.o\n  \"llvm::getGlobalContext()\", referenced from:\n      _LLVMRustParseAssemblyFile in RustWrapper.o\n  \"llvm::ParseAssemblyFile(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, llvm::SMDiagnostic&, llvm::LLVMContext&)\", referenced from:\n      _LLVMRustParseAssemblyFile in RustWrapper.o\n  \"llvm::raw_ostream::flush_nonempty()\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n      _LLVMRustAddPrintModulePass in RustWrapper.o\n      llvm::formatted_raw_ostream::releaseStream()      in RustWrapper.o\n      llvm::formatted_raw_ostream::setStream(llvm::raw_ostream&, bool)in RustWrapper.o\n  \"llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind)\", referenced from:\n      llvm::formatted_raw_ostream::releaseStream()      in RustWrapper.o\n      llvm::formatted_raw_ostream::setStream(llvm::raw_ostream&, bool)in RustWrapper.o\n  \"_LLVMInitializeX86TargetInfo\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n  \"_LLVMInitializeX86Target\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n  \"_LLVMInitializeX86TargetMC\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n  \"_LLVMInitializeX86AsmPrinter\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n  \"_LLVMInitializeX86AsmParser\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n  \"llvm::TargetRegistry::lookupTarget(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n  \"llvm::sys::getHostCPUName()\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n  \"llvm::raw_fd_ostream::raw_fd_ostream(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned int)\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n      _LLVMRustAddPrintModulePass in RustWrapper.o\n  \"vtable for llvm::formatted_raw_ostream\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n      _LLVMRustAddPrintModulePass in RustWrapper.o\n  \"llvm::PassManager::run(llvm::Module&)\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n      _LLVMRustAddPrintModulePass in RustWrapper.o\n  \"llvm::raw_ostream::~raw_ostream()\", referenced from:\n      _LLVMRustWriteOutputFile in RustWrapper.o\n      _LLVMRustAddPrintModulePass in RustWrapper.o\n  \"llvm::Linker::LinkModules(llvm::Module*, llvm::Module*, unsigned int, std::basic_string<char, std::char_traits<char>, std::allocator<char> >*)\", referenced from:\n      _LLVMLinkModules in RustWrapper.o\n  \"llvm::createPrintModulePass(llvm::raw_ostream*, bool, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\", referenced from:\n      _LLVMRustAddPrintModulePass in RustWrapper.o\n  \"_LLVMCreateObjectFile\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDisposeObjectFile\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetSections\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDisposeSectionIterator\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsSectionIteratorAtEnd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMMoveToNextSection\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetSectionName\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetSectionSize\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetSectionContents\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMABIAlignmentOfType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMABISizeOfType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddAggressiveDCEPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddAlias\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddArgumentPromotionPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddAttribute\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddBasicAliasAnalysisPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddCFGSimplificationPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddCase\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddClause\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddConstantMergePass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddConstantPropagationPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddCorrelatedValuePropagationPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddDeadArgEliminationPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddDeadStoreEliminationPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddDemoteMemoryToRegisterPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddDestination\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddEarlyCSEPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddFunction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddFunctionAttr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddFunctionAttrsPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddFunctionInliningPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddGVNPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddGlobal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddGlobalDCEPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddGlobalInAddressSpace\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddGlobalOptimizerPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddIPConstantPropagationPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddIPSCCPPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddIncoming\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddIndVarSimplifyPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddInstrAttribute\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddInstructionCombiningPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddInternalizePass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddJumpThreadingPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddLICMPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddLoopDeletionPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddLoopIdiomPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddLoopRotatePass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddLoopUnrollPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddLoopUnswitchPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddMemCpyOptPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddPromoteMemoryToRegisterPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddPruneEHPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddReassociatePass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddSCCPPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddScalarReplAggregatesPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddScalarReplAggregatesPassSSA\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddScalarReplAggregatesPassWithThreshold\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddSimplifyLibCallsPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddStripDeadPrototypesPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddStripSymbolsPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddTailCallEliminationPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddTargetData\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddTypeBasedAliasAnalysisPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAddVerifierPass\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAlignOf\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAppendBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMAppendBasicBlockInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMArrayType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBasicBlockAsValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBlockAddress\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildAShr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildAdd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildAggregateRet\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildAlloca\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildAnd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildArrayAlloca\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildArrayMalloc\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildBinOp\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildBitCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildBr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildCall\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildCondBr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildExactSDiv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildExtractElement\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildExtractValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFAdd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFCmp\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFDiv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFMul\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFNeg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFPCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFPExt\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFPToSI\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFPToUI\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFPTrunc\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFRem\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFSub\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildFree\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildGEP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildGlobalString\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildGlobalStringPtr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildICmp\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildInBoundsGEP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildIndirectBr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildInsertElement\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildInsertValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildIntCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildIntToPtr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildInvoke\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildIsNotNull\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildIsNull\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildLandingPad\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildLShr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildLoad\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildMalloc\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildMul\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNSWAdd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNSWMul\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNSWNeg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNSWSub\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNUWAdd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNUWMul\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNUWNeg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNUWSub\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNeg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildNot\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildOr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildPhi\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildPointerCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildPtrDiff\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildPtrToInt\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildResume\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildRet\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildRetVoid\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildSDiv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildSExt\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildSExtOrBitCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildSIToFP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildSRem\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildSelect\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildShl\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildShuffleVector\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildStore\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildStructGEP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildSub\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildSwitch\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildTrunc\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildTruncOrBitCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildUDiv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildUIToFP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildURem\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildUnreachable\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildVAArg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildXor\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildZExt\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMBuildZExtOrBitCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMByteOrder\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCallFrameAlignmentOfType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMClearInsertionPosition\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstAShr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstAdd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstAllOnes\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstAnd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstArray\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstBitCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstExactSDiv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstExtractElement\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstExtractValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFAdd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFCmp\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFDiv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFMul\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFNeg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFPCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFPExt\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFPToSI\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFPToUI\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFPTrunc\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFRem\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstFSub\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstGEP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstICmp\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstInBoundsGEP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstInlineAsm\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstInsertElement\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstInsertValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstIntCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstIntGetSExtValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstIntGetZExtValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstIntOfArbitraryPrecision\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstIntOfString\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstIntOfStringAndSize\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstIntToPtr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstLShr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstMul\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNSWAdd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNSWMul\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNSWNeg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNSWSub\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNUWAdd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNUWMul\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNUWNeg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNUWSub\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNeg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNot\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNull\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstOr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstPointerCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstPointerNull\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstPtrToInt\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstReal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstRealOfString\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstRealOfStringAndSize\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstSDiv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstSExt\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstSExtOrBitCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstSIToFP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstSRem\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstSelect\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstShl\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstShuffleVector\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstString\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstStringInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstStruct\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstStructInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstSub\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstTrunc\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstTruncOrBitCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstUDiv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstUIToFP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstURem\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstVector\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstXor\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstZExt\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstZExtOrBitCast\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMContextCreate\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMContextDispose\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCopyStringRepOfTargetData\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCountBasicBlocks\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCountIncoming\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCountParamTypes\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCountParams\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCountStructElementTypes\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCreateBuilder\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCreateBuilderInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCreateFunctionPassManager\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCreateFunctionPassManagerForModule\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCreateMemoryBufferWithSTDIN\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCreateModuleProviderForExistingModule\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCreatePassManager\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMCreateTargetData\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDeleteBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDeleteFunction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDeleteGlobal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDisposeBuilder\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDisposeMemoryBuffer\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDisposeMessage\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDisposeModule\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDisposeModuleProvider\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDisposePassManager\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDisposeTargetData\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDoubleType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDoubleTypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDumpModule\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMDumpValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMElementAtOffset\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMFP128Type\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMFP128TypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMFinalizeFunctionPassManager\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMFloatType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMFloatTypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMFunctionType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetAlignment\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetArrayLength\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetAttribute\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetBasicBlockParent\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetBasicBlocks\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetBitcodeModule\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetBitcodeModuleInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetBitcodeModuleProvider\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetBitcodeModuleProviderInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetConstOpcode\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetCurrentDebugLocation\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetDataLayout\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetElementType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetEntryBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetFirstBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetFirstFunction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetFirstGlobal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetFirstInstruction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetFirstParam\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetFirstUse\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetFunctionAttr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetFunctionCallConv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetGC\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetGlobalParent\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetGlobalPassRegistry\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetIncomingBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetIncomingValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetInitializer\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetInsertBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetInstructionCallConv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetInstructionParent\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetIntTypeWidth\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetIntrinsicID\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetLastBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetLastFunction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetLastGlobal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetLastInstruction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetLastParam\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetLinkage\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetMDKindID\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetMDKindIDInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetMetadata\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetModuleContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetNamedFunction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetNamedGlobal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetNextBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetNextFunction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetNextGlobal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetNextInstruction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetNextParam\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetNextUse\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetNumOperands\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetOperand\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetParam\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetParamParent\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetParamTypes\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetParams\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetPointerAddressSpace\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetPreviousBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetPreviousFunction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetPreviousGlobal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetPreviousInstruction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetPreviousParam\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetReturnType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetSection\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetStructElementTypes\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetTarget\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetTypeContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetTypeKind\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetUndef\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetUsedValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetUser\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetValueName\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetVectorSize\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMGetVisibility\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMHasMetadata\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInitializeCodeGen\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInitializeFunctionPassManager\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInitializeIPA\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInitializeInstCombine\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInitializeScalarOpts\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInitializeTarget\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInitializeTransformUtils\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInitializeX86AsmLexer\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInitializeX86Disassembler\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInsertBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInsertBasicBlockInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInsertIntoBuilder\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInsertIntoBuilderWithName\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt16Type\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt16TypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt1Type\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt1TypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt32Type\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt32TypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt64Type\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt64TypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt8Type\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMInt8TypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIntPtrType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIntType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIntTypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAAllocaInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAArgument\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsABasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsABinaryOperator\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsABitCastInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsABranchInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsACallInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsACastInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsACmpInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAConstant\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAConstantAggregateZero\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAConstantArray\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAConstantExpr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAConstantFP\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAConstantInt\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAConstantPointerNull\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAConstantStruct\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAConstantVector\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsADbgDeclareInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsADbgInfoIntrinsic\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAEHSelectorInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAExtractElementInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAExtractValueInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAFCmpInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAFPExtInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAFPToSIInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAFPToUIInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAFPTruncInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAFunction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAGetElementPtrInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAGlobalAlias\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAGlobalValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAGlobalVariable\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAICmpInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAInlineAsm\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAInsertElementInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAInsertValueInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAInstruction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAIntToPtrInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAIntrinsicInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAInvokeInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsALoadInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAMemCpyInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAMemIntrinsic\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAMemMoveInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAMemSetInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAPHINode\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAPtrToIntInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAReturnInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsASExtInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsASIToFPInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsASelectInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAShuffleVectorInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAStoreInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsASwitchInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsATerminatorInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsATruncInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAUIToFPInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAUnaryInstruction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAUndefValue\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAUnreachableInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAUser\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAVAArgInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsAZExtInst\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsConstant\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsDeclaration\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsFunctionVarArg\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsGlobalConstant\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsNull\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsPackedStruct\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsTailCall\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsThreadLocal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMIsUndef\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMLabelType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMLabelTypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMMDNode\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMMDNodeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMMDString\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMMDStringInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMModuleCreateWithName\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMModuleCreateWithNameInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMMoveBasicBlockAfter\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMMoveBasicBlockBefore\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMOffsetOfElement\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPPCFP128Type\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPPCFP128TypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMParseBitcodeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderCreate\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderDispose\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderPopulateModulePassManager\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderSetDisableSimplifyLibCalls\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderSetDisableUnitAtATime\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderPopulateFunctionPassManager\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderSetDisableUnrollLoops\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderSetOptLevel\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderSetSizeLevel\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPassManagerBuilderUseInlinerWithThreshold\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPointerSize\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPointerType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPositionBuilder\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPositionBuilderAtEnd\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPositionBuilderBefore\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPreferredAlignmentOfGlobal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMPreferredAlignmentOfType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMRemoveAttribute\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMRemoveFunctionAttr\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMRemoveInstrAttribute\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMReplaceAllUsesWith\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMRunFunctionPassManager\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMRunPassManager\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetAlignment\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetCleanup\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetCurrentDebugLocation\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetDataLayout\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetFunctionCallConv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetGC\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetGlobalConstant\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetInitializer\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetInstDebugLocation\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetInstrParamAlignment\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetInstructionCallConv\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetLinkage\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetMetadata\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetModuleInlineAsm\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetOperand\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetParamAlignment\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetSection\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetTailCall\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetTarget\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetThreadLocal\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetValueName\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSetVisibility\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSizeOf\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMSizeOfTypeInBits\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMStoreSizeOfType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMStructType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMStructTypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMTypeOf\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMValueAsBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMValueIsBasicBlock\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMVectorType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMVerifyFunction\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMVerifyModule\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMViewFunctionCFG\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMViewFunctionCFGOnly\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMVoidType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMVoidTypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMWriteBitcodeToFD\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMWriteBitcodeToFile\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMWriteBitcodeToFileHandle\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMX86FP80Type\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMX86FP80TypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMX86MMXType\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMX86MMXTypeInContext\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMConstNamedStruct\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMStructCreateNamed\", referenced from:\n     -exported_symbol[s_list] command line option\n  \"_LLVMStructSetBody\", referenced from:\n     -exported_symbol[s_list] command line option\nld: symbol(s) not found for architecture x86_64\ncollect2: ld returned 1 exit status\nmake: *** [rustllvm/x86_64-apple-darwin/librustllvm.dylib] Error 1\n```\n", "closed_by": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/1401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/1401/timeline", "performed_via_github_app": null, "state_reason": "completed"}