{"url": "https://api.github.com/repos/rust-lang/rust/issues/55903", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55903/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55903/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55903/events", "html_url": "https://github.com/rust-lang/rust/issues/55903", "id": 379964454, "node_id": "MDU6SXNzdWUzNzk5NjQ0NTQ=", "number": 55903, "title": "ICE: \"unexpected predicate\" when using multiple lifetime parameters in existential type", "user": {"login": "allen-marshall", "id": 4213993, "node_id": "MDQ6VXNlcjQyMTM5OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/4213993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allen-marshall", "html_url": "https://github.com/allen-marshall", "followers_url": "https://api.github.com/users/allen-marshall/followers", "following_url": "https://api.github.com/users/allen-marshall/following{/other_user}", "gists_url": "https://api.github.com/users/allen-marshall/gists{/gist_id}", "starred_url": "https://api.github.com/users/allen-marshall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allen-marshall/subscriptions", "organizations_url": "https://api.github.com/users/allen-marshall/orgs", "repos_url": "https://api.github.com/users/allen-marshall/repos", "events_url": "https://api.github.com/users/allen-marshall/events{/privacy}", "received_events_url": "https://api.github.com/users/allen-marshall/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 631673608, "node_id": "MDU6TGFiZWw2MzE2NzM2MDg=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-impl-trait", "name": "A-impl-trait", "color": "f7e101", "default": false, "description": "Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-12T21:44:47Z", "updated_at": "2018-11-30T22:01:41Z", "closed_at": "2018-11-30T22:01:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have encountered an internal compiler error using Rust 1.32.0 nightly. It seems to occur when using multiple lifetime parameters in an existential type.\r\n\r\nI can reproduce the error by using the following code in `lib.rs`. I am not sure if this code should compile or not (I am new to Rust and trying to learn how existential types work), but I know it shouldn't cause an ICE. (The `Clone` trait bound here is just a placeholder to keep the example simple. The ICE seems to still happen if `Clone` is replaced by any other trait bound.)\r\n\r\n```rust\r\n#![feature(existential_type)]\r\n\r\nexistential type ExType<'a, 'b: 'a>: Clone;\r\n\r\nfn new_ex_type<'a, 'b: 'a>() -> ExType<'a, 'b> {\r\n    0usize\r\n}\r\n```\r\n\r\nThe output of `cargo build --verbose` is as follows:\r\n\r\n```\r\n   Compiling rusttest v0.1.0 (/home/allen/IdeaProjects/rusttest)\r\n     Running `rustc --edition=2018 --crate-name rusttest src/lib.rs --color always --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=0e629ce91b3e30a4 -C extra-filename=-0e629ce91b3e30a4 --out-dir /home/allen/IdeaProjects/rusttest/target/debug/deps -C incremental=/home/allen/IdeaProjects/rusttest/target/debug/incremental -L dependency=/home/allen/IdeaProjects/rusttest/target/debug/deps`\r\nerror: internal compiler error: librustc_privacy/lib.rs:971: unexpected predicate: Binder(OutlivesPredicate(ReEarlyBound(1, 'b), ReEarlyBound(0, 'a)))\r\n\r\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:600:9\r\nstack backtrace:\r\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\r\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\r\n   1: std::sys_common::backtrace::_print\r\n             at libstd/sys_common/backtrace.rs:71\r\n   2: std::panicking::default_hook::{{closure}}\r\n             at libstd/sys_common/backtrace.rs:59\r\n             at libstd/panicking.rs:211\r\n   3: std::panicking::default_hook\r\n             at libstd/panicking.rs:227\r\n   4: rustc::util::common::panic_hook\r\n   5: std::panicking::rust_panic_with_hook\r\n             at libstd/panicking.rs:480\r\n   6: std::panicking::begin_panic\r\n   7: rustc_errors::Handler::bug\r\n   8: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n   9: rustc::ty::context::tls::with_opt::{{closure}}\r\n  10: rustc::ty::context::tls::with_context_opt\r\n  11: rustc::ty::context::tls::with_opt\r\n  12: rustc::util::bug::opt_span_bug_fmt\r\n  13: rustc::util::bug::bug_fmt\r\n  14: <rustc_privacy::TypePrivacyVisitor<'a, 'tcx> as rustc::ty::fold::TypeVisitor<'tcx>>::visit_ty\r\n  15: <rustc_privacy::TypePrivacyVisitor<'a, 'tcx> as rustc::ty::fold::TypeVisitor<'tcx>>::visit_ty\r\n  16: <rustc_privacy::TypePrivacyVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_ty\r\n  17: rustc::hir::intravisit::walk_item\r\n  18: <rustc_privacy::TypePrivacyVisitor<'a, 'tcx> as rustc::hir::intravisit::Visitor<'tcx>>::visit_item\r\n  19: rustc_privacy::privacy_access_levels\r\n  20: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors<'tcx> for rustc::ty::query::queries::privacy_access_levels<'tcx>>::compute\r\n  21: rustc::ty::context::tls::with_context\r\n  22: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  23: rustc::ty::context::tls::with_related_context\r\n  24: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::force_query_with_job\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt<'a, 'gcx, 'tcx>>::get_query\r\n  26: rustc::util::common::time\r\n  27: rustc::ty::context::tls::enter_context\r\n  28: <std::thread::local::LocalKey<T>>::with\r\n  29: rustc::ty::context::TyCtxt::create_and_enter\r\n  30: rustc_driver::driver::compile_input\r\n  31: rustc_driver::run_compiler_with_pool\r\n  32: <scoped_tls::ScopedKey<T>>::set\r\n  33: rustc_driver::run_compiler\r\n  34: syntax::with_globals\r\n  35: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  36: rustc_driver::run\r\n  37: rustc_driver::main\r\n  38: std::rt::lang_start::{{closure}}\r\n  39: std::panicking::try::do_call\r\n             at libstd/rt.rs:59\r\n             at libstd/panicking.rs:310\r\n  40: __rust_maybe_catch_panic\r\n             at libpanic_unwind/lib.rs:102\r\n  41: std::rt::lang_start_internal\r\n             at libstd/panicking.rs:289\r\n             at libstd/panic.rs:398\r\n             at libstd/rt.rs:58\r\n  42: main\r\n  43: __libc_start_main\r\n  44: <unknown>\r\nquery stack during panic:\r\n#0 [privacy_access_levels] privacy access levels\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.32.0-nightly (ca79ecd69 2018-11-11) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nerror: Could not compile `rusttest`.\r\n\r\nCaused by:\r\n  process didn't exit successfully: `rustc --edition=2018 --crate-name rusttest src/lib.rs --color always --crate-type lib --emit=dep-info,link -C debuginfo=2 -C metadata=0e629ce91b3e30a4 -C extra-filename=-0e629ce91b3e30a4 --out-dir /home/allen/IdeaProjects/rusttest/target/debug/deps -C incremental=/home/allen/IdeaProjects/rusttest/target/debug/incremental -L dependency=/home/allen/IdeaProjects/rusttest/target/debug/deps` (exit code: 101)\r\n```\r\n\r\nIf I change the code to only use one lifetime parameter as follows, the ICE doesn't happen and the code compiles successfully:\r\n```rust\r\n#![feature(existential_type)]\r\n\r\nexistential type ExType<'a>: Clone;\r\n\r\nfn new_ex_type<'a>() -> ExType<'a> {\r\n    0usize\r\n}\r\n```\r\n\r\n`rustc --version --verbose` on my system yields:\r\n```\r\nrustc 1.32.0-nightly (ca79ecd69 2018-11-11)\r\nbinary: rustc\r\ncommit-hash: ca79ecd6940e30d4b2466bf378632efcdf5745c7\r\ncommit-date: 2018-11-11\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.32.0-nightly\r\nLLVM version: 8.0\r\n```", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55903/timeline", "performed_via_github_app": null, "state_reason": "completed"}