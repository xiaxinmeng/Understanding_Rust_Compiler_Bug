{"url": "https://api.github.com/repos/rust-lang/rust/issues/78737", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78737/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78737/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78737/events", "html_url": "https://github.com/rust-lang/rust/issues/78737", "id": 736168687, "node_id": "MDU6SXNzdWU3MzYxNjg2ODc=", "number": 78737, "title": "Rustc panic caused by invalid identifier in proc-macro", "user": {"login": "snorrwe", "id": 20288986, "node_id": "MDQ6VXNlcjIwMjg4OTg2", "avatar_url": "https://avatars.githubusercontent.com/u/20288986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snorrwe", "html_url": "https://github.com/snorrwe", "followers_url": "https://api.github.com/users/snorrwe/followers", "following_url": "https://api.github.com/users/snorrwe/following{/other_user}", "gists_url": "https://api.github.com/users/snorrwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/snorrwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snorrwe/subscriptions", "organizations_url": "https://api.github.com/users/snorrwe/orgs", "repos_url": "https://api.github.com/users/snorrwe/repos", "events_url": "https://api.github.com/users/snorrwe/events{/privacy}", "received_events_url": "https://api.github.com/users/snorrwe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2079070889, "node_id": "MDU6TGFiZWwyMDc5MDcwODg5", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-proc-macros", "name": "A-proc-macros", "color": "f7e101", "default": false, "description": "Area: Procedural macros"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-11-04T14:40:20Z", "updated_at": "2021-01-24T11:08:05Z", "closed_at": "2021-01-24T11:08:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\n### Brief\r\n\r\nThe panic is generated when I output a new struct in a proc macro that has an invalid identifier via the [Quote](https://docs.rs/quote/1.0.7/quote/) crate.\r\nIn this case the proc-macro will panic, and in turn rustc panics as well.\r\n\r\n[I setup up a repository to reproduce the issue](https://github.com/snorrwe/rustc-crash). \r\n\r\nI also set up GitHub Actions to test a couple variations [here](https://github.com/snorrwe/rustc-crash/runs/1353315892?check_suite_focus=true).\r\n_The panic only seems to happen on Windowns and MacOS_\r\n\r\n\r\n\r\n\r\n### Code\r\n\r\n```Rust\r\n#![crate_type = \"proc-macro\"]\r\n\r\nuse proc_macro::TokenStream;\r\nuse quote::quote;\r\n\r\n#[proc_macro_derive(Problematic)]\r\npub fn problematic(_input: TokenStream) -> TokenStream {\r\n    let rogue_ident = quote::format_ident!(\",\");\r\n    let result = quote! {\r\n        struct Aux {\r\n            #rogue_ident : i32\r\n        }\r\n    };\r\n    TokenStream::from(result)\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\n$ rustc --version --verbose\r\nrustc 1.47.0 (18bf6b4f0 2020-10-07)\r\nbinary: rustc\r\ncommit-hash: 18bf6b4f01a6feaf7259ba7cdae58031af1b7b39\r\ncommit-date: 2020-10-07\r\nhost: x86_64-pc-windows-msvc\r\nrelease: 1.47.0\r\nLLVM version: 11.0\r\n```\r\n\r\n### Error output\r\n\r\nSetting `RUST_BACKTRACE` to `1` produces no backtrace on Windows, but does procude backtrace on MacOS.\r\n\r\n```\r\nthread 'rustc' panicked at '`\",\"` is not a valid identifier', src\\librustc_expand\\proc_macro_server.rs:332:13\r\nstack backtrace:\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.47.0 (18bf6b4f0 2020-10-07) running on x86_64-pc-windows-msvc\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: proc-macro derive panicked\r\n --> boi\\src\\lib.rs:2:10\r\n  |\r\n2 | #[derive(proc_boi::Problematic)]\r\n  |          ^^^^^^^^^^^^^^^^^^^^^\r\n  |\r\n  = help: message: `\",\"` is not a valid identifier\r\n\r\nerror: aborting due to previous error\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nthread 'rustc' panicked at '`\",\"` is not a valid identifier', compiler/rustc_expand/src/proc_macro_server.rs:332:13\r\nstack backtrace:\r\n   0: _rust_begin_unwind\r\n   1: std::panicking::begin_panic_fmt\r\n   2: rustc_expand::proc_macro_server::Ident::new\r\n   3: <proc_macro::bridge::server::Dispatcher<proc_macro::bridge::server::MarkedTypes<S>> as proc_macro::bridge::server::DispatcherTrait>::dispatch\r\n   4: <proc_macro::bridge::closure::Closure<A,R> as core::convert::From<&mut F>>::from::call\r\n   5: proc_macro::bridge::closure::Closure<A,R>::call\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/closure.rs:27:18\r\n   6: proc_macro::bridge::client::Ident::new::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:244:25\r\n   7: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::with::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:336:47\r\n   8: proc_macro::bridge::client::BridgeState::with::{{closure}}::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:293:17\r\n   9: proc_macro::bridge::scoped_cell::ScopedCell<T>::replace\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/scoped_cell.rs:75:9\r\n  10: proc_macro::bridge::client::BridgeState::with::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:291:13\r\n  11: std::thread::local::LocalKey<T>::try_with\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/thread/local.rs:272:16\r\n  12: std::thread::local::LocalKey<T>::with\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/thread/local.rs:248:9\r\n  13: proc_macro::bridge::client::BridgeState::with\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:290:9\r\n  14: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::with\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:329:9\r\n  15: proc_macro::bridge::client::Ident::new\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:237:17\r\n  16: proc_macro2::imp::Ident::new\r\n             at /Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.24/src/wrapper.rs:668:50\r\n  17: proc_macro2::Ident::new\r\n             at /Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.24/src/lib.rs:895:21\r\n  18: quote::__private::mk_ident\r\n             at /Users/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-1.0.7/src/runtime.rs:336:17\r\n  19: proc_boi::problematic\r\n             at ./proc-boi/src/lib.rs:8:23\r\n  20: core::ops::function::FnOnce::call_once\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/core/src/ops/function.rs:227:5\r\n  21: proc_macro::bridge::client::Client<fn(proc_macro::TokenStream) .> proc_macro::TokenStream>::expand1::run::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:410:40\r\n  22: proc_macro::bridge::client::run_client::{{closure}}::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:377:26\r\n  23: proc_macro::bridge::scoped_cell::ScopedCell<T>::set::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/scoped_cell.rs:80:33\r\n  24: proc_macro::bridge::scoped_cell::ScopedCell<T>::replace\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/scoped_cell.rs:75:9\r\n  25: proc_macro::bridge::scoped_cell::ScopedCell<T>::set\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/scoped_cell.rs:80:9\r\n  26: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:325:35\r\n  27: std::thread::local::LocalKey<T>::try_with\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/thread/local.rs:272:16\r\n  28: std::thread::local::LocalKey<T>::with\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/thread/local.rs:248:9\r\n  29: proc_macro::bridge::client::<impl proc_macro::bridge::Bridge>::enter\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:325:9\r\n  30: proc_macro::bridge::client::run_client::{{closure}}\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:370:9\r\n  31: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/panic.rs:308:9\r\n  32: std::panicking::try::do_call\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/panicking.rs:381:40\r\n  33: ___rust_try\r\n  34: std::panicking::try\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/panicking.rs:345:19\r\n  35: std::panic::catch_unwind\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/std/src/panic.rs:382:14\r\n  36: proc_macro::bridge::client::run_client\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:369:5\r\n  37: proc_macro::bridge::client::Client<fn(proc_macro::TokenStream) .> proc_macro::TokenStream>::expand1::run\r\n             at /rustc/ffa2e7ae8fbf9badc035740db949b9dae271c29f/library/proc_macro/src/bridge/client.rs:410:13\r\n  38: proc_macro::bridge::server::run_server\r\n  39: <rustc_expand::proc_macro::ProcMacroDerive as rustc_expand::base::MultiItemModifier>::expand\r\n  40: rustc_expand::expand::MacroExpander::fully_expand_fragment\r\n  41: rustc_expand::expand::MacroExpander::expand_crate\r\n  42: rustc_interface::passes::configure_and_expand_inner\r\n  43: rustc_interface::passes::configure_and_expand::{{closure}}\r\n  44: rustc_data_structures::box_region::PinnedGenerator<I,A,R>::new\r\n  45: rustc_interface::passes::configure_and_expand\r\n  46: rustc_interface::queries::Queries::expansion\r\n  47: rustc_interface::queries::<impl rustc_interface::interface::Compiler>::enter\r\n  48: rustc_span::with_source_map\r\n  49: rustc_interface::interface::create_compiler_and_run\r\n  50: scoped_tls::ScopedKey<T>::set\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nerror: internal compiler error: unexpected panic\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.49.0-nightly (ffa2e7ae8 2020-10-24) running on x86_64-apple-darwin\r\n\r\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\nend of query stack\r\nerror: proc-macro derive panicked\r\n```\r\n\r\n</p>\r\n</details>", "closed_by": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78737/timeline", "performed_via_github_app": null, "state_reason": "completed"}