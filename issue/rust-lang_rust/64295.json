{"url": "https://api.github.com/repos/rust-lang/rust/issues/64295", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/64295/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/64295/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/64295/events", "html_url": "https://github.com/rust-lang/rust/issues/64295", "id": 490810890, "node_id": "MDU6SXNzdWU0OTA4MTA4OTA=", "number": 64295, "title": "Tracking issue for iter_order_by", "user": {"login": "KodrAus", "id": 6721458, "node_id": "MDQ6VXNlcjY3MjE0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6721458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KodrAus", "html_url": "https://github.com/KodrAus", "followers_url": "https://api.github.com/users/KodrAus/followers", "following_url": "https://api.github.com/users/KodrAus/following{/other_user}", "gists_url": "https://api.github.com/users/KodrAus/gists{/gist_id}", "starred_url": "https://api.github.com/users/KodrAus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KodrAus/subscriptions", "organizations_url": "https://api.github.com/users/KodrAus/orgs", "repos_url": "https://api.github.com/users/KodrAus/repos", "events_url": "https://api.github.com/users/KodrAus/events{/privacy}", "received_events_url": "https://api.github.com/users/KodrAus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668062, "node_id": "MDU6TGFiZWwyMTE2NjgwNjI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs-api", "name": "T-libs-api", "color": "bfd4f2", "default": false, "description": "Relevant to the library API team, which will review and decide on the PR/issue."}, {"id": 246778137, "node_id": "MDU6TGFiZWwyNDY3NzgxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/B-unstable", "name": "B-unstable", "color": "d304cb", "default": false, "description": "Implemented in the nightly compiler and unstable."}, {"id": 650846969, "node_id": "MDU6TGFiZWw2NTA4NDY5Njk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-tracking-issue", "name": "C-tracking-issue", "color": "f5f1fd", "default": false, "description": "Category: A tracking issue for an RFC or an unstable feature."}, {"id": 889209675, "node_id": "MDU6TGFiZWw4ODkyMDk2NzU=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-iterators", "name": "A-iterators", "color": "f7e101", "default": false, "description": "Area: Iterators"}, {"id": 2240305001, "node_id": "MDU6TGFiZWwyMjQwMzA1MDAx", "url": "https://api.github.com/repos/rust-lang/rust/labels/Libs-Tracked", "name": "Libs-Tracked", "color": "d4c5f9", "default": false, "description": "Libs issues that are tracked on the team's project board."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-08T21:52:37Z", "updated_at": "2022-07-05T18:19:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Landed in #62205\r\n\r\n# Public API\r\n\r\n```rust\r\npub mod core {\r\n    pub mod iter {\r\n        mod traits {\r\n            mod iterator {\r\n                pub trait Iterator {\r\n                    fn cmp_by<I, F>(mut self, other: I, mut cmp: F) -> Ordering\r\n                    where\r\n                        Self: Sized,\r\n                        I: IntoIterator,\r\n                        F: FnMut(Self::Item, I::Item) -> Ordering,\r\n                    {\r\n                    }\r\n                    fn partial_cmp_by<I, F>(\r\n                        mut self,\r\n                        other: I,\r\n                        mut partial_cmp: F,\r\n                    ) -> Option<Ordering>\r\n                    where\r\n                        Self: Sized,\r\n                        I: IntoIterator,\r\n                        F: FnMut(Self::Item, I::Item) -> Option<Ordering>,\r\n                    {\r\n                    }\r\n                    fn eq_by<I, F>(mut self, other: I, mut eq: F) -> bool\r\n                    where\r\n                        Self: Sized,\r\n                        I: IntoIterator,\r\n                        F: FnMut(Self::Item, I::Item) -> bool,\r\n                    {\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# Before stabilization:\r\n\r\n- [ ] Stabilization PR\r\n\r\n# Open questions\r\n\r\n- [ ] Should we use `size_hint` as an optimization for equality checking? That means buggy iterators may return incorrect results for `eq_by`. We could optimize for just a handful of `TrustedLen` iterators instead.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/64295/reactions", "total_count": 8, "+1": 8, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/64295/timeline", "performed_via_github_app": null, "state_reason": null}