{"url": "https://api.github.com/repos/rust-lang/rust/issues/26737", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/26737/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/26737/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/26737/events", "html_url": "https://github.com/rust-lang/rust/issues/26737", "id": 92658477, "node_id": "MDU6SXNzdWU5MjY1ODQ3Nw==", "number": 26737, "title": "{String,Vec}::from_raw_parts docs need to be much clearer about incorrectness", "user": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-02T14:57:16Z", "updated_at": "2015-07-03T04:04:54Z", "closed_at": "2015-07-03T04:04:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The docs for these are currently fairly meagre:\n\n> ```\n> unsafe fn from_raw_parts(buf: *mut u8, length: usize, capacity: usize) -> String\n> ```\n> \n> Creates a new String from a length, capacity, and pointer.\n> \n> This is unsafe because:\n> -    We call `Vec::from_raw_parts` to get a `Vec<u8>`;\n> -    We assume that the Vec contains valid UTF-8.\n>   \n>   unsafe fn from_raw_parts(ptr: *mut T, length: usize, capacity: usize) -> Vec<T>\n> \n> Creates a `Vec<T>` directly from the raw components of another vector.\n> \n> This is highly unsafe, due to the number of invariants that aren't checked.\n\nThey need to be more specific about the details, e.g.: \n- `ptr` needs to have been previously allocated via `String`/`Vec` (at least, it's highly likely to be incorrect if it wasn't)\n- `capacity` needs to be the capacity that the pointer was allocated with.\n\nViolating these may cause problems like corrupting the allocators internal datastructures.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/26737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/26737/timeline", "performed_via_github_app": null, "state_reason": "completed"}