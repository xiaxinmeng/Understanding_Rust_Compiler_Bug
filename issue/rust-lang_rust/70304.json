{"url": "https://api.github.com/repos/rust-lang/rust/issues/70304", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/70304/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/70304/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/70304/events", "html_url": "https://github.com/rust-lang/rust/issues/70304", "id": 586047601, "node_id": "MDU6SXNzdWU1ODYwNDc2MDE=", "number": 70304, "title": "GAT: open drop from non-ADT `[type error]`", "user": {"login": "SrTobi", "id": 4148534, "node_id": "MDQ6VXNlcjQxNDg1MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4148534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SrTobi", "html_url": "https://github.com/SrTobi", "followers_url": "https://api.github.com/users/SrTobi/followers", "following_url": "https://api.github.com/users/SrTobi/following{/other_user}", "gists_url": "https://api.github.com/users/SrTobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/SrTobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SrTobi/subscriptions", "organizations_url": "https://api.github.com/users/SrTobi/orgs", "repos_url": "https://api.github.com/users/SrTobi/repos", "events_url": "https://api.github.com/users/SrTobi/events{/privacy}", "received_events_url": "https://api.github.com/users/SrTobi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 46741598, "node_id": "MDU6TGFiZWw0Njc0MTU5OA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-needs-test", "name": "E-needs-test", "color": "02e10c", "default": false, "description": "Call for participation: writing correctness tests"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 1472563007, "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3", "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly", "name": "requires-nightly", "color": "76dcde", "default": false, "description": "This issue requires a nightly compiler in some way."}, {"id": 1485960423, "node_id": "MDU6TGFiZWwxNDg1OTYwNDIz", "url": "https://api.github.com/repos/rust-lang/rust/labels/F-generic_associated_types", "name": "F-generic_associated_types", "color": "f9c0cc", "default": false, "description": "`#![feature(generic_associated_types)]` a.k.a. GATs"}, {"id": 1615551553, "node_id": "MDU6TGFiZWwxNjE1NTUxNTUz", "url": "https://api.github.com/repos/rust-lang/rust/labels/glacier", "name": "glacier", "color": "a5e2ff", "default": false, "description": "ICE tracked in rust-lang/glacier"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-23T09:10:10Z", "updated_at": "2021-04-22T07:47:07Z", "closed_at": "2021-04-22T07:47:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\nThank you for finding an Internal Compiler Error! \ud83e\uddca  If possible, try to provide\r\na minimal verifiable example. You can read \"Rust Bug Minimization Patterns\" for\r\nhow to create smaller examples.\r\n\r\nhttp://blog.pnkfx.org/blog/2019/11/18/rust-bug-minimization-patterns/\r\n\r\n-->\r\n\r\nBasically same as #70303 but with different error location\r\n\r\n### Code\r\n\r\nOnly difference to #70303 is that `doc` in the test function is of type `impl Document` and not `DocumentImpl`.\r\n\r\n```rust\r\ntrait Document {\r\n    type Cursor<'a>: DocCursor<'a>;\r\n\r\n    fn cursor(&self) -> Self::Cursor<'_>;\r\n}\r\n\r\nstruct DocumentImpl {}\r\n\r\nimpl Document for DocumentImpl {\r\n    type Cursor<'a> = DocCursorImpl<'a>;\r\n\r\n    fn cursor(&self) -> Self::Cursor<'_> {\r\n        DocCursorImpl {\r\n            document: &self,\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\ntrait DocCursor<'a> {}\r\n\r\nstruct DocCursorImpl<'a> {\r\n    document: &'a DocumentImpl,\r\n}\r\n\r\nimpl<'a> DocCursor<'a> for DocCursorImpl<'a> {}\r\n\r\n\r\n\r\n\r\n\r\nstruct Lexer<'d, Cursor>\r\nwhere\r\n    Cursor: DocCursor<'d>,\r\n{\r\n    cursor: Cursor,\r\n    _phantom: std::marker::PhantomData<&'d ()>,\r\n}\r\n\r\n\r\nimpl<'d, Cursor> Lexer<'d, Cursor>\r\nwhere\r\n    Cursor: DocCursor<'d>,\r\n{\r\n    pub fn from<Doc>(document: &'d Doc) -> Lexer<'d, Cursor>\r\n    where\r\n        Doc: Document<Cursor = Cursor>,\r\n    {\r\n        Lexer {\r\n            cursor: document.cursor(),\r\n            _phantom: std::marker::PhantomData,\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nfn create_doc() -> impl Document {\r\n    DocumentImpl {}\r\n}\r\n\r\npub fn test() {\r\n    let doc = create_doc();\r\n    let lexer = Lexer::from(&doc);\r\n}\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.44.0-nightly (f509b26a7 2020-03-18)\r\nbinary: rustc\r\ncommit-hash: f509b26a7730d721ef87423a72b3fdf8724b4afa\r\ncommit-date: 2020-03-18\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.44.0-nightly\r\nLLVM version: 9.0\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: src/librustc_mir/util/elaborate_drops.rs:837:\r\nopen drop from non-ADT `[type error]`\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: src/librustc_mir/util/elaborate_drops.rs:837: open drop from non-ADT `[type error]`\r\n\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:880:9\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.44/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1069\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1427\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:218\r\n  10: rustc_driver::report_ice\r\n  11: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:515\r\n  12: std::panicking::begin_panic\r\n  13: rustc_errors::HandlerInner::bug\r\n  14: rustc_errors::Handler::bug\r\n  15: rustc::util::bug::opt_span_bug_fmt::{{closure}}\r\n  16: rustc::ty::context::tls::with_opt::{{closure}}\r\n  17: rustc::ty::context::tls::with_opt\r\n  18: rustc::util::bug::opt_span_bug_fmt\r\n  19: rustc::util::bug::bug_fmt\r\n  20: rustc_mir::util::elaborate_drops::DropCtxt<D>::elaborate_drop\r\n  21: rustc_mir::shim::make_shim\r\n  22: rustc::ty::query::__query_compute::mir_shims\r\n  23: rustc::ty::query::<impl rustc::ty::query::config::QueryAccessors for rustc::ty::query::queries::mir_shims>::compute\r\n  24: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  25: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  26: rustc::ty::<impl rustc::ty::context::TyCtxt>::instance_mir\r\n  27: rustc_mir::monomorphize::collector::collect_items_rec\r\n  28: rustc_mir::monomorphize::collector::collect_items_rec\r\n  29: rustc_mir::monomorphize::collector::collect_items_rec\r\n  30: rustc_session::utils::<impl rustc_session::session::Session>::time\r\n  31: rustc_mir::monomorphize::collector::collect_crate_mono_items\r\n  32: rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\r\n  33: rustc::dep_graph::graph::DepGraph::with_task_impl\r\n  34: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::force_query\r\n  35: rustc::ty::query::force_from_dep_node\r\n  36: rustc::dep_graph::graph::DepGraph::try_mark_previous_green\r\n  37: rustc::dep_graph::graph::DepGraph::try_mark_green\r\n  38: rustc::dep_graph::graph::DepGraph::try_mark_green_and_read\r\n  39: rustc::ty::query::plumbing::<impl rustc::ty::context::TyCtxt>::get_query\r\n  40: rustc_metadata::rmeta::encoder::EncodeContext::encode_crate_root\r\n  41: rustc::dep_graph::graph::DepGraph::with_ignore\r\n  42: rustc_metadata::rmeta::encoder::encode_metadata\r\n  43: rustc_metadata::rmeta::decoder::cstore_impl::<impl rustc::middle::cstore::CrateStore for rustc_metadata::creader::CStore>::encode_metadata\r\n  44: rustc::ty::context::TyCtxt::encode_metadata\r\n  45: rustc_interface::passes::start_codegen\r\n  46: rustc::ty::context::tls::enter_global\r\n  47: rustc_interface::queries::Queries::ongoing_codegen\r\n  48: rustc_interface::interface::run_compiler_in_existing_thread_pool\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\n\r\nnote: rustc 1.44.0-nightly (f509b26a7 2020-03-18) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic:\r\n#0 [mir_shims] generating MIR shim for `std::intrinsics::drop_in_place`\r\n#1 [collect_and_partition_mono_items] collect_and_partition_mono_items\r\n#2 [exported_symbols] exported_symbols\r\nend of query stack\r\nerror: aborting due to previous error\r\n\r\nerror: could not compile `langvil-core`.\r\n\r\nTo learn more, run the command again with --verbose.\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/70304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/70304/timeline", "performed_via_github_app": null, "state_reason": "completed"}