{"url": "https://api.github.com/repos/rust-lang/rust/issues/67720", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/67720/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/67720/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/67720/events", "html_url": "https://github.com/rust-lang/rust/issues/67720", "id": 543729424, "node_id": "MDU6SXNzdWU1NDM3Mjk0MjQ=", "number": 67720, "title": "Allow deny/forbid level lints in macros to cross crate boundaries", "user": {"login": "nvzqz", "id": 10367662, "node_id": "MDQ6VXNlcjEwMzY3NjYy", "avatar_url": "https://avatars.githubusercontent.com/u/10367662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvzqz", "html_url": "https://github.com/nvzqz", "followers_url": "https://api.github.com/users/nvzqz/followers", "following_url": "https://api.github.com/users/nvzqz/following{/other_user}", "gists_url": "https://api.github.com/users/nvzqz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvzqz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvzqz/subscriptions", "organizations_url": "https://api.github.com/users/nvzqz/orgs", "repos_url": "https://api.github.com/users/nvzqz/repos", "events_url": "https://api.github.com/users/nvzqz/events{/privacy}", "received_events_url": "https://api.github.com/users/nvzqz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 132910982, "node_id": "MDU6TGFiZWwxMzI5MTA5ODI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-macros", "name": "A-macros", "color": "f7e101", "default": false, "description": "Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"}, {"id": 211668019, "node_id": "MDU6TGFiZWwyMTE2NjgwMTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-lang", "name": "T-lang", "color": "bfd4f2", "default": false, "description": "Relevant to the language team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-30T04:41:13Z", "updated_at": "2019-12-30T11:03:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm attempting to add an `assert_ffi_safe!` macro to `static_assertions` by creating an `extern \"C\"` block with a function that references the input types and marking it with `#[forbid(improper_ctypes)]` (see https://github.com/nvzqz/static-assertions-rs/pull/31). However, while the macro works correctly if used within the same crate, it results in false positives when used externally. This is evidenced by `compile_fail` doc tests passing.\r\n\r\nI imagine that `rustc` lints are disabled when calling into a macro that is not defined within the calling crate so that they don't become a nuisance to consumers who have no control over the code within the macro. This is a case where ensuring that lints work across crate boundaries would be beneficial.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/67720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/67720/timeline", "performed_via_github_app": null, "state_reason": null}