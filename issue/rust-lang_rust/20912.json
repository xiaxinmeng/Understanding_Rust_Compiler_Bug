{"url": "https://api.github.com/repos/rust-lang/rust/issues/20912", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/20912/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/20912/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/20912/events", "html_url": "https://github.com/rust-lang/rust/issues/20912", "id": 53978776, "node_id": "MDU6SXNzdWU1Mzk3ODc3Ng==", "number": 20912, "title": "Allow \"extension\" of types from other modules", "user": {"login": "jethrogb", "id": 1132307, "node_id": "MDQ6VXNlcjExMzIzMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1132307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jethrogb", "html_url": "https://github.com/jethrogb", "followers_url": "https://api.github.com/users/jethrogb/followers", "following_url": "https://api.github.com/users/jethrogb/following{/other_user}", "gists_url": "https://api.github.com/users/jethrogb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jethrogb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jethrogb/subscriptions", "organizations_url": "https://api.github.com/users/jethrogb/orgs", "repos_url": "https://api.github.com/users/jethrogb/repos", "events_url": "https://api.github.com/users/jethrogb/events{/privacy}", "received_events_url": "https://api.github.com/users/jethrogb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-01-11T02:03:35Z", "updated_at": "2015-01-12T17:04:09Z", "closed_at": "2015-01-11T06:19:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'll start with some example code:\n\n``` rust\nuse std::intrinsics::cttz32;\nuse std::collections::{Bitv,BitvSet};\n\npub trait LowestBit\n{\n    fn lowest_bit(&self) -> Option<usize>;\n}\n\nimpl LowestBit for Bitv\n{\n    fn lowest_bit(&self) -> Option<usize>\n    {\n        for (idx,&word) in self.storage.iter().enumerate()\n        {\n            if (word==0) { continue }\n            return Some(idx*32+(unsafe {cttz32(word) as usize}));\n        }\n        return None;\n    }\n}\n\nfn main() {\n    let mut v=BitvSet::new();\n    v.insert(1242);\n    println!(\"{}\",v.get_ref().lowest_bit().unwrap());\n}\n```\n\nThis currently fails on the privacy of the storage member of Bitv:\n\n```\ntmp.rs:22:22: 22:34 error: field `storage` of struct `collections::bit::Bitv` is private\ntmp.rs:22       for (idx,&word) in self.storage.iter().enumerate()\n```\n\nI'm not sure if the code above should \"just work\", but I do believe there should be a way to say \"I know what I'm doing, just give me access to private members,\" or perhaps something along the line of \"protected\" members. In the example above, it would be impractical to reimplement Bitv just to add the lowest_bit function.\n", "closed_by": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/20912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/20912/timeline", "performed_via_github_app": null, "state_reason": "completed"}