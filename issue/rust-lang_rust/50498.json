{"url": "https://api.github.com/repos/rust-lang/rust/issues/50498", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/50498/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/50498/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/50498/events", "html_url": "https://github.com/rust-lang/rust/issues/50498", "id": 320775047, "node_id": "MDU6SXNzdWUzMjA3NzUwNDc=", "number": 50498, "title": "Warn when a user-defined trait is used on an std library type without full path", "user": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-05-07T11:50:34Z", "updated_at": "2018-10-02T14:15:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like rustc to warn me when I use a trait method on a std (or liballoc, core, ...) type without using the full trait path.\r\n\r\nThat is, if I implement my own trait for a `std` library type:\r\n\r\n```rust\r\ntrait Foo { fn bar(&self); }\r\n\r\nimpl Foo for Vec<u32> {\r\n  fn bar(&self) { }\r\n}\r\n\r\nfn main() {\r\n    let v = Vec::new();\r\n    v.bar(); // Warning\r\n    Foo::bar(&v); // OK\r\n}\r\n```\r\n\r\nThe motivation is that:\r\n\r\n* if the `std` library adds a new trait with a method called `foo` and implements it for `Vec<u32>` my code stops compiling due to an ambiguity error\r\n* if the `std` library adds an inherent method to `Vec<u32>` called `foo`that has the same signature as `Foo::foo`, my code continues to compile but might silently change behavior\r\n\r\n---\r\n\r\nI don't know whether this warning should apply exclusively to the std library or to types defined in external crates as well.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/50498/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/50498/timeline", "performed_via_github_app": null, "state_reason": null}