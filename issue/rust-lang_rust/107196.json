{"url": "https://api.github.com/repos/rust-lang/rust/issues/107196", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/107196/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/107196/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/107196/events", "html_url": "https://github.com/rust-lang/rust/issues/107196", "id": 1552123911, "node_id": "I_kwDOAAsO6M5cg4gH", "number": 107196, "title": "RangeXxx<&T> should implement RangeBounds<T> even if T is unsized", "user": {"login": "SOF3", "id": 19623715, "node_id": "MDQ6VXNlcjE5NjIzNzE1", "avatar_url": "https://avatars.githubusercontent.com/u/19623715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SOF3", "html_url": "https://github.com/SOF3", "followers_url": "https://api.github.com/users/SOF3/followers", "following_url": "https://api.github.com/users/SOF3/following{/other_user}", "gists_url": "https://api.github.com/users/SOF3/gists{/gist_id}", "starred_url": "https://api.github.com/users/SOF3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SOF3/subscriptions", "organizations_url": "https://api.github.com/users/SOF3/orgs", "repos_url": "https://api.github.com/users/SOF3/repos", "events_url": "https://api.github.com/users/SOF3/events{/privacy}", "received_events_url": "https://api.github.com/users/SOF3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2023-01-22T13:44:03Z", "updated_at": "2023-01-24T09:33:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!--\r\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\r\nalong with any information you feel relevant to replicating the bug.\r\n-->\r\n\r\nI tried this code:\r\n\r\n```rust\r\nuse std::collections::BTreeMap;\r\npub fn foo(map: &BTreeMap<String, i32>) -> impl Iterator<Item = (&String, &i32)> {\r\n    map.range::<str, _>(\"\"..\"\")\r\n}\r\n```\r\n\r\nI expected to see this happen: This should compile since `BTreeMap::range` is supposed to accept a `RangeBounds` with an unsized type parameter\r\n\r\nInstead, this happened: It does not compile with the error:\r\n```\r\nerror[[E0277]](https://doc.rust-lang.org/stable/error-index.html#E0277): the size for values of type `str` cannot be known at compilation time\r\n --> src/lib.rs:3:25\r\n  |\r\n3 |     map.range::<str, _>(\"\"..\"\")\r\n  |         -----           ^^^^^^ doesn't have a size known at compile-time\r\n  |         |\r\n  |         required by a bound introduced by this call\r\n  |\r\n  = help: the trait `Sized` is not implemented for `str`\r\n  = help: the following other types implement trait `RangeBounds<T>`:\r\n            std::ops::Range<&T>\r\n            std::ops::Range<T>\r\n  = note: required for `std::ops::Range<&str>` to implement `RangeBounds<str>`\r\nnote: required by a bound in `BTreeMap::<K, V, A>::range`\r\n```\r\n\r\nThis is because `Range<&str>` does not implement `RangeBounds<str>`, because the current `impl RangeBounds<str> for Range<&str>` is as follows:\r\n\r\n```rs\r\n#[stable(feature = \"collections_range\", since = \"1.28.0\")]\r\nimpl<T> RangeBounds<T> for Range<&T> {\r\n    fn start_bound(&self) -> Bound<&T> {\r\n        Included(self.start)\r\n    }\r\n    fn end_bound(&self) -> Bound<&T> {\r\n        Excluded(self.end)\r\n    }\r\n}\r\n```\r\n\r\nSimilarly, for other range structs except `(Bound, Bound)` and `RangeFull` (the latter of which does not have a type anyway), the type parameter is unnecessarily constrained to be sized:\r\n\r\n![image](https://user-images.githubusercontent.com/19623715/213918887-c1a36f2d-daac-4f21-8e12-61274a292c4b.png)\r\n\r\nThe implicit `Sized` bound on `T` for the `RangeXxx<&T>` cases appears to be unintentional judging from the fact that there are no comments explaining this decision.\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.66.1 (90743e729 2023-01-10)\r\nbinary: rustc\r\ncommit-hash: 90743e7298aca107ddaa0c202a4d3604e29bfeb6\r\ncommit-date: 2023-01-10\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.66.1\r\nLLVM version: 15.0.2\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\n<backtrace>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/107196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/107196/timeline", "performed_via_github_app": null, "state_reason": null}