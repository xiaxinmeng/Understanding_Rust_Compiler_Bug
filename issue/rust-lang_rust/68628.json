{"url": "https://api.github.com/repos/rust-lang/rust/issues/68628", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/68628/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/68628/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/68628/events", "html_url": "https://github.com/rust-lang/rust/issues/68628", "id": 556604841, "node_id": "MDU6SXNzdWU1NTY2MDQ4NDE=", "number": 68628, "title": "Wrong prompt when failed to pattern match boxed enum type", "user": {"login": "bachue", "id": 321962, "node_id": "MDQ6VXNlcjMyMTk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/321962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bachue", "html_url": "https://github.com/bachue", "followers_url": "https://api.github.com/users/bachue/followers", "following_url": "https://api.github.com/users/bachue/following{/other_user}", "gists_url": "https://api.github.com/users/bachue/gists{/gist_id}", "starred_url": "https://api.github.com/users/bachue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bachue/subscriptions", "organizations_url": "https://api.github.com/users/bachue/orgs", "repos_url": "https://api.github.com/users/bachue/repos", "events_url": "https://api.github.com/users/bachue/events{/privacy}", "received_events_url": "https://api.github.com/users/bachue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-29T02:47:35Z", "updated_at": "2020-01-29T10:51:48Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "For example:\r\n\r\n```rust\r\n#[allow(dead_code)]\r\nenum A {\r\n    V1(u8),\r\n    V2(u32),\r\n}\r\n\r\nfn main() {\r\n    let a = Some(Box::new(A::V1(1u8)));\r\n    \r\n    if let Some(b) = a.as_ref() {\r\n        if let A::V1(v) = b {\r\n            println!(\"{:?}\", v);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe rust 1.40 compiler will failed to compile this code and tell me:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:11:16\r\n   |\r\n11 |         if let A::V1(v) = b {\r\n   |                ^^^^^^^^   -\r\n   |                |          |\r\n   |                |          this match expression has type `std::boxed::Box<A>`\r\n   |                |          help: consider dereferencing the boxed value: `*b`\r\n   |                expected struct `std::boxed::Box`, found enum `A`\r\n   |\r\n   = note: expected type `std::boxed::Box<A>`\r\n              found type `A`\r\n```\r\n\r\nBut unfortunately it's wrong. If I replace `b` by `*b`, it will failed again and tell me:\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n  --> src/main.rs:11:16\r\n   |\r\n11 |         if let A::V1(v) = *b {\r\n   |                ^^^^^^^^   --\r\n   |                |          |\r\n   |                |          this match expression has type `std::boxed::Box<A>`\r\n   |                |          help: consider dereferencing the boxed value: `**b`\r\n   |                expected struct `std::boxed::Box`, found enum `A`\r\n   |\r\n   = note: expected type `std::boxed::Box<A>`\r\n              found type `A`\r\n``` \r\n\r\nAlthough the second prompt is correct and it works. But I think using `b.as_ref()` is the better idea.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/68628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/68628/timeline", "performed_via_github_app": null, "state_reason": null}