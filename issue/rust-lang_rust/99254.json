{"url": "https://api.github.com/repos/rust-lang/rust/issues/99254", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99254/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99254/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99254/events", "html_url": "https://github.com/rust-lang/rust/issues/99254", "id": 1305268953, "node_id": "I_kwDOAAsO6M5NzNLZ", "number": 99254, "title": "broken MIR in DefId", "user": {"login": "PerfumedLeftist", "id": 109313668, "node_id": "U_kgDOBoP-hA", "avatar_url": "https://avatars.githubusercontent.com/u/109313668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerfumedLeftist", "html_url": "https://github.com/PerfumedLeftist", "followers_url": "https://api.github.com/users/PerfumedLeftist/followers", "following_url": "https://api.github.com/users/PerfumedLeftist/following{/other_user}", "gists_url": "https://api.github.com/users/PerfumedLeftist/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerfumedLeftist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerfumedLeftist/subscriptions", "organizations_url": "https://api.github.com/users/PerfumedLeftist/orgs", "repos_url": "https://api.github.com/users/PerfumedLeftist/repos", "events_url": "https://api.github.com/users/PerfumedLeftist/events{/privacy}", "received_events_url": "https://api.github.com/users/PerfumedLeftist/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9618520, "node_id": "MDU6TGFiZWw5NjE4NTIw", "url": "https://api.github.com/repos/rust-lang/rust/labels/I-ICE", "name": "I-ICE", "color": "e10c02", "default": false, "description": "Issue: The compiler panicked, giving an Internal Compilation Error (ICE) \u2744\ufe0f"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-07-14T20:42:34Z", "updated_at": "2022-07-28T07:46:30Z", "closed_at": "2022-07-28T07:46:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Only other code I can think of is the part that invokes the function \"generate_function()\" but i dont thin that matters. I'm trying to have async functions in a struct, and trying to use a Pin<> in this way made it break\r\n\r\nThe purpose of this program is a Discord bot, which I'm trying to associate each Command (struct) with a function (async)\r\nMy deps are\r\n```\r\ntokio = { version = \"1.19.2\", features = [\"full\"]}\r\ndotenv = \"0.15.0\"\r\nenumn = \"0.1.4\"\r\ntokio-tungstenite = {version = \"0.17.1\", features = [\"native-tls\"]}\r\nurl = \"2.1.0\"\r\nreqwest = { version = \"0.11\", features = [\"json\"] }\r\nfutures-util = \"0.3.21\"\r\ntinyjson = \"2\"\r\n```\r\n\r\n### Code\r\n\r\n```Rust\r\nuse std::future::Future;\r\nuse std::pin::Pin;\r\n\r\ntype PinDynFut<Out> = Pin<Box<dyn Future<Output = Out> + Send + 'static>>;\r\n\r\nstruct Guild {\r\n    name: String,\r\n    id: String\r\n}\r\n\r\nstruct Invoker {\r\n    username: String,\r\n    discriminator: u16,\r\n}\r\n\r\nstruct Command {\r\n    name: String,\r\n    kind: u8,\r\n    description: String,\r\n    associated_function: Box<dyn Fn(Guild, Invoker, Option<Vec<HashMap<String, String>>>) -> PinDynFut<Vec<String>>>\r\n}\r\n\r\npub struct CommandsBuilder {\r\n    commands: Vec<Command>\r\n}\r\n\r\nimpl CommandsBuilder {\r\n    fn new() -> CommandsBuilder {\r\n        CommandsBuilder {\r\n            commands: vec![]\r\n        }\r\n    }\r\n\r\n    fn add(mut self: Self, name: String, kind: u8, description: String, associated_function: Box<dyn Fn(Guild, Invoker, Option<Vec<HashMap<String, String>>>) -> PinDynFut<Vec<String>>>) -> Self {\r\n        let command = Command {\r\n            name: name,\r\n            kind: kind,\r\n            description: description,\r\n            associated_function: associated_function\r\n        };\r\n\r\n        self.commands.push(command);\r\n        self\r\n    }\r\n}\r\n\r\nasync fn send_dog(guild: Guild, invoker: Invoker, args: Option<Vec<HashMap<String, String>>>) -> Vec<String> {\r\n    vec![\"Hello World!\".to_string()]\r\n}\r\n\r\npub async fn generate_commands() -> CommandsBuilder {\r\n    // Code\r\n    let commands: CommandsBuilder = CommandsBuilder::new()\r\n                        .add(\"dog\".to_string(), 1, \"Sends a picture of a cute dog\".to_string(), Box::new(send_dog));\r\n    commands\r\n}\r\n\r\n```\r\n\r\n\r\n### Meta\r\n<!--\r\nIf you're using the stable version of the compiler, you should also check if the\r\nbug also exists in the beta or nightly versions.\r\n-->\r\n\r\n`rustc --version --verbose`:\r\n```\r\nrustc 1.62.0 (a8314ef7d 2022-06-27)\r\nbinary: rustc\r\ncommit-hash: a8314ef7d0ec7b75c336af2c9857bfaf43002bfc\r\ncommit-date: 2022-06-27\r\nhost: x86_64-unknown-linux-gnu\r\nrelease: 1.62.0\r\nLLVM version: 14.0.5\r\n```\r\n\r\n### Error output\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:98 ~ ferrisbot[ea30]::actions::commands::generate_commands::{closure#0}) (NoSolution): could not prove Binder(TraitPredicate(<std::boxed::Box<fn(actions::commands::Guild, actions::commands::Invoker, std::option::Option<std::vec::Vec<std::collections::HashMap<std::string::String, std::string::String>>>) -> impl futures_util::Future<Output = std::vec::Vec<std::string::String>> {actions::commands::send_dog}> as std::ops::CoerceUnsized<std::boxed::Box<dyn std::ops::Fn(actions::commands::Guild, actions::commands::Invoker, std::option::Option<std::vec::Vec<std::collections::HashMap<std::string::String, std::string::String>>>) -> std::pin::Pin<std::boxed::Box<dyn futures_util::Future<Output = std::vec::Vec<std::string::String>> + std::marker::Send>>>>>, polarity:Positive), [])\r\n  --> src/actions/commands.rs:60:97\r\n   |\r\n60 |                         .add(\"dog\".to_string(), 1, \"Sends a picture of a cute dog\".to_string(), Box::new(send_dog));\r\n   |                                                                                                 ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at compiler/rustc_borrowck/src/type_check/canonical.rs:149:13\r\n```\r\n\r\n<!--\r\nInclude a backtrace in the code block by setting `RUST_BACKTRACE=1` in your\r\nenvironment. E.g. `RUST_BACKTRACE=1 cargo build`.\r\n-->\r\n<details><summary><strong>Backtrace</strong></summary>\r\n<p>\r\n\r\n```\r\nerror: internal compiler error: no errors encountered even though `delay_span_bug` issued\r\n\r\nerror: internal compiler error: broken MIR in DefId(0:98 ~ ferrisbot[ea30]::actions::commands::generate_commands::{closure#0}) (NoSolution): could not prove Binder(TraitPredicate(<std::boxed::Box<fn(actions::commands::Guild, actions::commands::Invoker, std::option::Option<std::vec::Vec<std::collections::HashMap<std::string::String, std::string::String>>>) -> impl futures_util::Future<Output = std::vec::Vec<std::string::String>> {actions::commands::send_dog}> as std::ops::CoerceUnsized<std::boxed::Box<dyn std::ops::Fn(actions::commands::Guild, actions::commands::Invoker, std::option::Option<std::vec::Vec<std::collections::HashMap<std::string::String, std::string::String>>>) -> std::pin::Pin<std::boxed::Box<dyn futures_util::Future<Output = std::vec::Vec<std::string::String>> + std::marker::Send>>>>>, polarity:Positive), [])\r\n  --> src/actions/commands.rs:60:97\r\n   |\r\n60 |                         .add(\"dog\".to_string(), 1, \"Sends a picture of a cute dog\".to_string(), Box::new(send_dog));\r\n   |                                                                                                 ^^^^^^^^^^^^^^^^^^\r\n   |\r\n   = note: delayed at compiler/rustc_borrowck/src/type_check/canonical.rs:149:13\r\n\r\nthread 'rustc' panicked at 'Box<dyn Any>', compiler/rustc_errors/src/lib.rs:1369:13\r\nstack backtrace:\r\n   0: std::panicking::begin_panic::<rustc_errors::ExplicitBug>\r\n   1: std::panic::panic_any::<rustc_errors::ExplicitBug>\r\n   2: <rustc_errors::HandlerInner as core::ops::drop::Drop>::drop\r\n   3: core::ptr::drop_in_place::<rustc_session::parse::ParseSess>\r\n   4: <alloc::rc::Rc<rustc_session::session::Session> as core::ops::drop::Drop>::drop\r\n   5: core::ptr::drop_in_place::<rustc_interface::interface::Compiler>\r\n   6: rustc_span::with_source_map::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_interface::interface::create_compiler_and_run<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#1}>\r\n   7: rustc_interface::interface::create_compiler_and_run::<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>\r\n   8: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_errors::ErrorGuaranteed>, rustc_driver::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_errors::ErrorGuaranteed>>\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\n\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md\r\n\r\nnote: rustc 1.62.0 (a8314ef7d 2022-06-27) running on x86_64-unknown-linux-gnu\r\n\r\nnote: compiler flags: --crate-type bin -C embed-bitcode=no -C debuginfo=2 -C incremental\r\n\r\nnote: some of the compiler flags provided by cargo are hidden\r\n\r\nquery stack during panic\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n", "closed_by": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/99254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99254/timeline", "performed_via_github_app": null, "state_reason": "completed"}