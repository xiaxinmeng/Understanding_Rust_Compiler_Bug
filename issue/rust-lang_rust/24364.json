{"url": "https://api.github.com/repos/rust-lang/rust/issues/24364", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/24364/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/24364/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/24364/events", "html_url": "https://github.com/rust-lang/rust/issues/24364", "id": 68011196, "node_id": "MDU6SXNzdWU2ODAxMTE5Ng==", "number": 24364, "title": "Regression from beta: closure may outlive the current function, but it borrows `...`, which is owned by the current function", "user": {"login": "tomaka", "id": 1412254, "node_id": "MDQ6VXNlcjE0MTIyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1412254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomaka", "html_url": "https://github.com/tomaka", "followers_url": "https://api.github.com/users/tomaka/followers", "following_url": "https://api.github.com/users/tomaka/following{/other_user}", "gists_url": "https://api.github.com/users/tomaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomaka/subscriptions", "organizations_url": "https://api.github.com/users/tomaka/orgs", "repos_url": "https://api.github.com/users/tomaka/repos", "events_url": "https://api.github.com/users/tomaka/events{/privacy}", "received_events_url": "https://api.github.com/users/tomaka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-13T05:29:22Z", "updated_at": "2015-08-19T17:35:48Z", "closed_at": "2015-08-19T17:35:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As reported in [this thread](http://internals.rust-lang.org/t/regression-report-beta-2015-04-03-vs-nightly-2015-04-10/1860/5), the two examples [here](https://github.com/tomaka/glium/tree/891b83655a3b6fc1a059ba7c9808e357b973b3e9/examples-disabled) no longer compile with the nightly but they _do_ compile with the beta (tested with the 2015-04-12 nightly).\n\n```\nexamples/displacement_mapping.rs:200:25: 237:6 error: closure may outlive the current function, but it borrows `opengl_texture`, which is owned by the current function [E0373]\nexamples/displacement_mapping.rs:200     support::start_loop(|| {\nexamples/displacement_mapping.rs:201         // building the uniforms\nexamples/displacement_mapping.rs:202         let uniforms = uniform! {\nexamples/displacement_mapping.rs:203             inner_level: 64.0f32,\nexamples/displacement_mapping.rs:204             outer_level: 64.0f32,\nexamples/displacement_mapping.rs:205             projection_matrix: camera.get_perspective(),\n                                     ...\nexamples/displacement_mapping.rs:212:30: 212:44 note: `opengl_texture` is borrowed here\nexamples/displacement_mapping.rs:212             height_texture: &opengl_texture,\n                                                                  ^~~~~~~~~~~~~~\n<glium macros>:1:1: 12:46 note: in expansion of uniform!\nexamples/displacement_mapping.rs:202:24: 215:11 note: expansion site\nexamples/displacement_mapping.rs:200:25: 237:6 help: to force the closure to take ownership of `opengl_texture` (and any other referenced variables), use the `move` keyword, as shown:\nexamples/displacement_mapping.rs:        support::start_loop(move || {\nexamples/displacement_mapping.rs:            // building the uniforms\nexamples/displacement_mapping.rs:            let uniforms = uniform! {\nexamples/displacement_mapping.rs:                inner_level: 64.0f32,\nexamples/displacement_mapping.rs:                outer_level: 64.0f32,\nexamples/displacement_mapping.rs:                projection_matrix: camera.get_perspective(),\n                                     ...\n```\n\nI didn't manage to reproduce on a small scale, so I'll explain a bit the code of `displacement_mapping.rs`:\n- At [line 32](https://github.com/tomaka/glium/blob/891b83655a3b6fc1a059ba7c9808e357b973b3e9/examples-disabled/displacement_mapping.rs#L32) we create a struct of type `CompressedTexture2d`.\n- The type `&'a CompressedTexture2d` implements the trait `IntoUniformValue<'a>`. This trait can turn the reference into a `UniformValue<'a>`.\n- [Line 200](https://github.com/tomaka/glium/blob/891b83655a3b6fc1a059ba7c9808e357b973b3e9/examples-disabled/displacement_mapping.rs#L200) we enter a closure. The `support::start_loop` function has this signature: `fn start_loop<F>(mut callback: F) where F: FnMut() -> Action`.\n- [Lines 202-215](https://github.com/tomaka/glium/blob/891b83655a3b6fc1a059ba7c9808e357b973b3e9/examples-disabled/displacement_mapping.rs#L202-L215) we borrow `&'a` the texture, call `into_uniform_value()` and store the `UniformValue<'a>` in a `Vec`.\n- [Lines 220-225](https://github.com/tomaka/glium/blob/891b83655a3b6fc1a059ba7c9808e357b973b3e9/examples-disabled/displacement_mapping.rs#L220-L225) uses `&uniforms` (only borrows it to see its content, doesn't do anything special with its lifetime).\n\nMore precisely, the `uniform!` macro invokation does the following:\n\n``` rust\n{\n    let uniforms = UniformsStorage::new(\"inner_level\", 64.0f32);\n    let uniforms = uniforms.add(\"outer_level\", 64.0f32);\n    ...\n    let uniforms = uniforms.add(\"height_texture\", &opengl_texture);\n    let uniforms = uniforms.add(\"elevation\", 0.3f32);\n    let uniforms = uniforms.add(\"color_texture\", &opengl_texture);\n    uniforms\n}\n```\n\nSee [the definition of `UniformsStorage` here](https://github.com/tomaka/glium/blob/891b83655a3b6fc1a059ba7c9808e357b973b3e9/src/uniforms/uniforms.rs).\n", "closed_by": {"login": "tomaka", "id": 1412254, "node_id": "MDQ6VXNlcjE0MTIyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1412254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomaka", "html_url": "https://github.com/tomaka", "followers_url": "https://api.github.com/users/tomaka/followers", "following_url": "https://api.github.com/users/tomaka/following{/other_user}", "gists_url": "https://api.github.com/users/tomaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomaka/subscriptions", "organizations_url": "https://api.github.com/users/tomaka/orgs", "repos_url": "https://api.github.com/users/tomaka/repos", "events_url": "https://api.github.com/users/tomaka/events{/privacy}", "received_events_url": "https://api.github.com/users/tomaka/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/24364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/24364/timeline", "performed_via_github_app": null, "state_reason": "completed"}