{"url": "https://api.github.com/repos/rust-lang/rust/issues/16114", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/16114/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/16114/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/16114/events", "html_url": "https://github.com/rust-lang/rust/issues/16114", "id": 39120869, "node_id": "MDU6SXNzdWUzOTEyMDg2OQ==", "number": 16114, "title": "Rename begin_unwind lang item and core function", "user": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36996, "node_id": "MDU6TGFiZWwzNjk5Ng==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-easy", "name": "E-easy", "color": "02e10c", "default": false, "description": "Call for participation: Experience needed to fix: Easy / not much (good first issue)"}, {"id": 67766349, "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor", "name": "E-mentor", "color": "02E10C", "default": false, "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-07-30T18:14:25Z", "updated_at": "2014-09-25T07:07:51Z", "closed_at": "2014-09-25T07:07:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The unwind code has had a long and storied life. Currently there are two naming conventions in use: `fail` and `begin_unwind`, the code for which is divided between `core::failure` and `rustrt::unwind`.\n\nIn the `rustrt` case, the naming is accurate because the runtime provides unwinding, but core, which contains two functions named `begin_unwind`, one of which is a lang item, provides no particular failure semantics, and ultimately the language definition will allow for different implementations of failure.\n\nThe four 'core' failure functions are:\n\n```\n// Compiler-emitted failure\n#[lang=\"fail_\"]\nfn fail_(expr_file_line: &(&'static str, &'static str, uint)) -> !;\n\n// Compiler-emitted index oob failure\n#[lang=\"fail_bounds_check\"]\nfn fail_bounds_check(file_line: &(&'static str, uint),\n                     index: uint, len: uint) -> !;\n\n// Library-emitted `fail!` calls inside the std facade\npub fn begin_unwind(fmt: &fmt::Arguments, file_line: &(&'static str, uint)) -> !;\n\n// The declaration of the lang item that actually implements failure.\n// All failure goes through this method which must be provided downsteam,\n// and is implemented in the 'std' crate.\nextern {\n    #[lang = \"begin_unwind\"]\n    fn begin_unwind(fmt: &fmt::Arguments, file: &'static str, line: uint) -> !;\n}\n```\n\nThe `begin_unwind` lang item and the function `core::failure::begin_unwind` should be renamed to be implementation-agnostic. Perhaps `fail_fmt` and `fail_impl`.\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/16114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/16114/timeline", "performed_via_github_app": null, "state_reason": "completed"}