{"url": "https://api.github.com/repos/rust-lang/rust/issues/101371", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/101371/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/101371/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/101371/events", "html_url": "https://github.com/rust-lang/rust/issues/101371", "id": 1360805290, "node_id": "I_kwDOAAsO6M5RHD2q", "number": 101371, "title": "Bad diagnostics when expression followed by call is instead parsed as statement followed by parenthesized value", "user": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-09-03T09:16:59Z", "updated_at": "2022-09-03T09:16:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following code: https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=424c13966bd147553adbb7c2359b73f1\r\n\r\n```rust\r\nfn foo(_: usize) {}\r\nfn bar(_: usize) {}\r\n\r\npub fn do_stuff(use_foo: bool, value: usize) {\r\n    if use_foo {\r\n        foo\r\n    } else {\r\n        bar\r\n    }(value)\r\n}\r\n```\r\n\r\nThe current (1.63.0 and nightly-2022-09-02) output is:\r\n\r\n```\r\nwarning: unnecessary parentheses around block return value\r\n --> src/lib.rs:9:6\r\n  |\r\n9 |     }(value)\r\n  |      ^     ^\r\n  |\r\n  = note: `#[warn(unused_parens)]` on by default\r\nhelp: remove these parentheses\r\n  |\r\n9 -     }(value)\r\n9 +     }value\r\n  |\r\n\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:6:9\r\n  |\r\n1 |   fn foo(_: usize) {}\r\n  |   ---------------- fn(usize) {foo} defined here\r\n...\r\n5 | /     if use_foo {\r\n6 | |         foo\r\n  | |         ^^^ expected `()`, found fn item\r\n7 | |     } else {\r\n8 | |         bar\r\n9 | |     }(value)\r\n  | |_____- expected this to be `()`\r\n  |\r\n  = note: expected unit type `()`\r\n               found fn item `fn(usize) {foo}`\r\nhelp: use parentheses to call this function\r\n  |\r\n6 |         foo(_)\r\n  |            +++\r\n\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:8:9\r\n  |\r\n2 |   fn bar(_: usize) {}\r\n  |   ---------------- fn(usize) {bar} defined here\r\n...\r\n5 | /     if use_foo {\r\n6 | |         foo\r\n7 | |     } else {\r\n8 | |         bar\r\n  | |         ^^^ expected `()`, found fn item\r\n9 | |     }(value)\r\n  | |_____- expected this to be `()`\r\n  |\r\n  = note: expected unit type `()`\r\n               found fn item `fn(usize) {bar}`\r\nhelp: use parentheses to call this function\r\n  |\r\n8 |         bar(_)\r\n  |            +++\r\n\r\nerror[E0308]: mismatched types\r\n --> src/lib.rs:9:6\r\n  |\r\n4 | pub fn do_stuff(use_foo: bool, value: usize) {\r\n  |                                              - help: try adding a return type: `-> usize`\r\n...\r\n9 |     }(value)\r\n  |      ^^^^^^^ expected `()`, found `usize`\r\n```\r\n\r\nIdeally the output should include a hint like this, as is already the case for binary operator expressions instead of call expressions (e.g. `if ... { ... } else { ... } + 3`):\r\n\r\n```\r\nhelp: parentheses are required to parse this as an expression\r\n  |\r\n5 ~     (if use_foo {\r\n6 |         foo\r\n7 |     } else {\r\n8 |         bar\r\n9 ~     })(value)\r\n  |\r\n```\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/101371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/101371/timeline", "performed_via_github_app": null, "state_reason": null}