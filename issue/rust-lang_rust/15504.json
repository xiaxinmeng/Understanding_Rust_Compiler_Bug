{"url": "https://api.github.com/repos/rust-lang/rust/issues/15504", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/15504/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/15504/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/15504/events", "html_url": "https://github.com/rust-lang/rust/issues/15504", "id": 37294962, "node_id": "MDU6SXNzdWUzNzI5NDk2Mg==", "number": 15504, "title": "`macro_rules` that \"captures\" outter variable fails to compile if used inside a function, but not if used inside a method", "user": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235146, "node_id": "MDU6TGFiZWwyMzUxNDY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-syntaxext", "name": "A-syntaxext", "color": "f7e101", "default": false, "description": "Area: Syntax extensions"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-07-07T18:14:45Z", "updated_at": "2014-07-10T22:33:18Z", "closed_at": "2014-07-10T22:33:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "STR:\n\n``` rust\n#![feature(macro_rules)]\n\nmacro_rules! check_len {\n    () => { xs.len() == 0 }\n}\n\nstruct Foo;\n\nimpl Foo {\n    fn bar(self, xs: Vec<uint>) -> bool {\n        // GOOD\n        check_len!()\n\n        // GOOD\n        //xs.len() == 0\n    }\n}\n\nfn baz(xs: Vec<uint>) -> bool {\n    // BAD\n    check_len!()\n\n    // GOOD\n    //xs.len() == 0\n}\n\nfn main() { }\n```\n\nOutput:\n\n```\n$ rustc foo.rs\nfoo.rs:4:13: 4:15 error: unresolved name `xs`.\nfoo.rs:4     () => { xs.len() == 0 }\n                     ^~\nfoo.rs:3:1: 5:2 note: in expansion of check_len!\nfoo.rs:21:5: 25:2 note: expansion site\nerror: aborting due to previous error\n```\n\nExpansion:\n\n```\n$ rustc --pretty expanded foo.rs\n#![feature(macro_rules)]\n#![feature(phase)]\n#![no_std]\n#![feature(globs)]\n#[phase(plugin, link)]\nextern crate std;\nextern crate native;\nuse std::prelude::*;\n\n\nstruct Foo;\n\nimpl Foo {\n    fn bar(self, xs: Vec<uint>) -> bool {\n\n        // GOOD\n        xs.len() == 0\n\n        // GOOD\n        //xs.len() == 0\n    }\n}\n\nfn baz(xs: Vec<uint>) -> bool {\n\n    // BAD\n    xs.len() == 0\n\n    // GOOD\n    //xs.len() == 0\n}\n\nfn main() { }\n```\n\nVersion:\n\n```\n$ rustc --version\nrustc 0.11.0 (4f120e6bafe971452adfede158a7957b00562a4e 2014-07-07 08:16:29 +0000)\n```\n\nP.S. I got the impression that we are moving towards macros that can't \"capture\" outter variables (like `xs` in this case) for \"hygienic\" reasons. Is that correct? And, if that's the case, may I ask what is this \"hygiene\" about? (Is a concept related to compilers (only)?)\n", "closed_by": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/15504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/15504/timeline", "performed_via_github_app": null, "state_reason": "completed"}