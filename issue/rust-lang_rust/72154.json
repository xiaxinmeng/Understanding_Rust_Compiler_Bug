{"url": "https://api.github.com/repos/rust-lang/rust/issues/72154", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/72154/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/72154/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/72154/events", "html_url": "https://github.com/rust-lang/rust/issues/72154", "id": 616976072, "node_id": "MDU6SXNzdWU2MTY5NzYwNzI=", "number": 72154, "title": "ManuallyDrop constructed with properly initialized data via MaybeUninit fails ASan", "user": {"login": "rjsberry", "id": 17755880, "node_id": "MDQ6VXNlcjE3NzU1ODgw", "avatar_url": "https://avatars.githubusercontent.com/u/17755880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjsberry", "html_url": "https://github.com/rjsberry", "followers_url": "https://api.github.com/users/rjsberry/followers", "following_url": "https://api.github.com/users/rjsberry/following{/other_user}", "gists_url": "https://api.github.com/users/rjsberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjsberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjsberry/subscriptions", "organizations_url": "https://api.github.com/users/rjsberry/orgs", "repos_url": "https://api.github.com/users/rjsberry/repos", "events_url": "https://api.github.com/users/rjsberry/events{/privacy}", "received_events_url": "https://api.github.com/users/rjsberry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630870359, "node_id": "MDU6TGFiZWw2MzA4NzAzNTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-sanitizers", "name": "A-sanitizers", "color": "f7e101", "default": false, "description": "Area: Sanitizers for correctness and code quality."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-12T21:35:05Z", "updated_at": "2020-05-17T01:31:12Z", "closed_at": "2020-05-17T01:31:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The minimum example I can get this down to is:\r\n\r\n```rust\r\nuse std::mem::{self, ManuallyDrop, MaybeUninit};\r\n\r\nfn main() {\r\n    let x: [usize; 1] = unsafe {\r\n        let mut x: [MaybeUninit<usize>; 1] = MaybeUninit::uninit().assume_init();\r\n        x[0] = MaybeUninit::new(0_usize);\r\n        mem::transmute(x)\r\n    };\r\n    let _ = ManuallyDrop::new(x);\r\n}\r\n```\r\n\r\n<details>\r\n<summary>ASan output</summary>\r\n<br>\r\n<pre>\r\n<code>\r\n$ RUSTFLAGS=\"-Z sanitizer=address\" cargo run --target x86_64-unknown-linux-gnu\r\n=================================================================\r\n==231==ERROR: AddressSanitizer: stack-use-after-scope on address 0x7fff9245bcc0 at pc 0x5590c6b16160 bp 0x7fff9245bbd0 sp 0x7fff9245b398\r\nWRITE of size 8 at 0x7fff9245bcc0 thread T0\r\n    #0 0x5590c6b1615f  (/code/target/x86_64-unknown-linux-gnu/debug/smoke+0x7415f)\r\n    #1 0x5590c6b360a4  (/code/target/x86_64-unknown-linux-gnu/debug/smoke+0x940a4)\r\n    #2 0x5590c6b36850  (/code/target/x86_64-unknown-linux-gnu/debug/smoke+0x94850)\r\n    #3 0x5590c6b3e707  (/code/target/x86_64-unknown-linux-gnu/debug/smoke+0x9c707)\r\n    #4 0x5590c6b367c4  (/code/target/x86_64-unknown-linux-gnu/debug/smoke+0x947c4)\r\n    #5 0x5590c6b36519  (/code/target/x86_64-unknown-linux-gnu/debug/smoke+0x94519)\r\n    #6 0x7f149d0c609a  (/lib/x86_64-linux-gnu/libc.so.6+0x2409a)\r\n    #7 0x5590c6aac299  (/code/target/x86_64-unknown-linux-gnu/debug/smoke+0xa299)\r\n\r\nAddress 0x7fff9245bcc0 is located in stack of thread T0 at offset 224 in frame\r\n    #0 0x5590c6b35bbf  (/code/target/x86_64-unknown-linux-gnu/debug/smoke+0x93bbf)\r\n\r\n  This frame has 20 object(s):\r\n    [32, 40) ''\r\n    [64, 72) 'slot.i.i'\r\n    [96, 104) ''\r\n    [128, 136) '_3.i'\r\n    [160, 168) ''\r\n    [192, 200) 'self.i'\r\n    [224, 232) '_2.i' <== Memory access at offset 224 is inside this variable\r\n    [256, 264) ''\r\n    [288, 296) ''\r\n    [320, 328) 'value.i'\r\n    [352, 360) ''\r\n    [384, 392) '' (line 9)\r\n    [416, 424) '' (line 5)\r\n    [448, 456) '' (line 5)\r\n    [480, 488) '_8' (line 9)\r\n    [512, 520) '_7' (line 9)\r\n    [544, 552) '_6' (line 7)\r\n    [576, 584) '_3' (line 5)\r\n    [608, 616) 'x1' (line 5)\r\n    [640, 648) 'x' (line 4)\r\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\r\n      (longjmp and C++ exceptions *are* supported)\r\nSUMMARY: AddressSanitizer: stack-use-after-scope (/code/target/x86_64-unknown-linux-gnu/debug/smoke+0x7415f) \r\nShadow bytes around the buggy address:\r\n  0x100072483740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100072483750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100072483760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x100072483770: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1\r\n  0x100072483780: f8 f2 f2 f2 00 f2 f2 f2 f8 f2 f2 f2 00 f2 f2 f2\r\n=>0x100072483790: f8 f2 f2 f2 00 f2 f2 f2[f8]f2 f2 f2 00 f2 f2 f2\r\n  0x1000724837a0: f8 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 f8 f2 f2 f2\r\n  0x1000724837b0: f8 f2 f2 f2 f8 f2 f2 f2 f8 f2 f2 f2 f8 f2 f2 f2\r\n  0x1000724837c0: f8 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f3 f3 f3\r\n  0x1000724837d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n  0x1000724837e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07 \r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n  Shadow gap:              cc\r\n==231==ABORTING\r\n</code>\r\n</pre>\r\n</details>\r\n\r\nWithout the `ManuallyDrop` it is fine. The same code with regular initialization (no `MaybeUninit`) does not cause ASan to fail.\r\n\r\nThe above was run with rustc 1.45.0-nightly (99cb9ccb9 2020-05-11).", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/72154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/72154/timeline", "performed_via_github_app": null, "state_reason": "completed"}