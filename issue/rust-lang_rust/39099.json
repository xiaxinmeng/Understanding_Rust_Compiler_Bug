{"url": "https://api.github.com/repos/rust-lang/rust/issues/39099", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/39099/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/39099/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/39099/events", "html_url": "https://github.com/rust-lang/rust/issues/39099", "id": 201063428, "node_id": "MDU6SXNzdWUyMDEwNjM0Mjg=", "number": 39099, "title": "OccupiedEntry::get returns references bound to the lifetime of the Entry, not the HashMap", "user": {"login": "khuey", "id": 325892, "node_id": "MDQ6VXNlcjMyNTg5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/325892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khuey", "html_url": "https://github.com/khuey", "followers_url": "https://api.github.com/users/khuey/followers", "following_url": "https://api.github.com/users/khuey/following{/other_user}", "gists_url": "https://api.github.com/users/khuey/gists{/gist_id}", "starred_url": "https://api.github.com/users/khuey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khuey/subscriptions", "organizations_url": "https://api.github.com/users/khuey/orgs", "repos_url": "https://api.github.com/users/khuey/repos", "events_url": "https://api.github.com/users/khuey/events{/privacy}", "received_events_url": "https://api.github.com/users/khuey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-16T16:24:11Z", "updated_at": "2017-01-16T16:58:15Z", "closed_at": "2017-01-16T16:58:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following toy code to implement a simple `HashMap`-based cache.\r\n\r\n```\r\nstruct Table {\r\n    table: HashMap<String, Option<u32>>,\r\n}\r\n\r\nimpl Table {\r\n    fn lookup(&mut self, s: String) -> Result<&u32> {\r\n        match self.table.entry(s) {\r\n            Entry::Occupied(o) => {\r\n                o.get().as_ref().ok_or_else(|| panic!())\r\n            },\r\n            Entry::Vacant(v) => {\r\n                // TODO: Calculate a value.\r\n                panic!();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe borrow checker will fail this.\r\n\r\n> rustc 1.14.0 (e8a012324 2016-12-16)\r\nerror: `o` does not live long enough\r\n  --> <anon>:13:17\r\n   |\r\n13 |                 o.get().as_ref().ok_or_else(|| panic!())\r\n   |                 ^ does not live long enough\r\n...\r\n19 |         }\r\n   |         - borrowed value only lives until here\r\n   |\r\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the block at 10:52...\r\n  --> <anon>:10:53\r\n   |\r\n10 |     fn lookup(&mut self, s: String) -> Result<&u32> {\r\n   |                                                     ^\r\n\r\nIt appears that `OccupiedEntry::get` is returning a reference to the value in the `HashMap` with the lifetime of the `Entry`, not the `HashMap`.  This seems like a bug to me.\r\n", "closed_by": {"login": "khuey", "id": 325892, "node_id": "MDQ6VXNlcjMyNTg5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/325892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khuey", "html_url": "https://github.com/khuey", "followers_url": "https://api.github.com/users/khuey/followers", "following_url": "https://api.github.com/users/khuey/following{/other_user}", "gists_url": "https://api.github.com/users/khuey/gists{/gist_id}", "starred_url": "https://api.github.com/users/khuey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khuey/subscriptions", "organizations_url": "https://api.github.com/users/khuey/orgs", "repos_url": "https://api.github.com/users/khuey/repos", "events_url": "https://api.github.com/users/khuey/events{/privacy}", "received_events_url": "https://api.github.com/users/khuey/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/39099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/39099/timeline", "performed_via_github_app": null, "state_reason": "completed"}