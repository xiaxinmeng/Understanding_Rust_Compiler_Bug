{"url": "https://api.github.com/repos/rust-lang/rust/issues/92890", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/92890/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/92890/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/92890/events", "html_url": "https://github.com/rust-lang/rust/issues/92890", "id": 1103405069, "node_id": "I_kwDOAAsO6M5BxKAN", "number": 92890, "title": "[ER] slice::all_equal", "user": {"login": "leonardo-m", "id": 22328461, "node_id": "MDQ6VXNlcjIyMzI4NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/22328461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-m", "html_url": "https://github.com/leonardo-m", "followers_url": "https://api.github.com/users/leonardo-m/followers", "following_url": "https://api.github.com/users/leonardo-m/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-m/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-m/orgs", "repos_url": "https://api.github.com/users/leonardo-m/repos", "events_url": "https://api.github.com/users/leonardo-m/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-14T10:11:53Z", "updated_at": "2023-02-15T17:39:27Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "A simple function that worth having is slice::all_equal, similar to slice::is_sorted:\r\n\r\n```rust\r\npub fn all_equal(&self) -> bool where T: PartialEq<T>;\r\npub all_equal_by<F>(&self, compare: F) -> bool where F: FnMut(&T, &T) -> bool;\r\n```\r\n\r\nThe function returns true if all the items of the slice are equal. if len(slice) < 2 it returns true.\r\n\r\nSimilar Iterator::all_equal / Iterator::all_equal_by functions could be added later.\r\n\r\nThe semantics is simple (for iterators the code gets a bit longer):\r\n\r\n```rust\r\nfn all_equal<T: PartialEq>(this: &[T]) -> bool {\r\n    this.array_windows().all(|[a, b]| a == b)\r\n}\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/92890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/92890/timeline", "performed_via_github_app": null, "state_reason": null}