{"url": "https://api.github.com/repos/rust-lang/rust/issues/55928", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/55928/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/55928/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/55928/events", "html_url": "https://github.com/rust-lang/rust/issues/55928", "id": 380321093, "node_id": "MDU6SXNzdWUzODAzMjEwOTM=", "number": 55928, "title": "Rust incorrectly infers the generic type if used with failure::ResultExt and the try macro.", "user": {"login": "marmistrz", "id": 2914938, "node_id": "MDQ6VXNlcjI5MTQ5Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/2914938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmistrz", "html_url": "https://github.com/marmistrz", "followers_url": "https://api.github.com/users/marmistrz/followers", "following_url": "https://api.github.com/users/marmistrz/following{/other_user}", "gists_url": "https://api.github.com/users/marmistrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmistrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmistrz/subscriptions", "organizations_url": "https://api.github.com/users/marmistrz/orgs", "repos_url": "https://api.github.com/users/marmistrz/repos", "events_url": "https://api.github.com/users/marmistrz/events{/privacy}", "received_events_url": "https://api.github.com/users/marmistrz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 13836860, "node_id": "MDU6TGFiZWwxMzgzNjg2MA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits", "name": "A-traits", "color": "f7e101", "default": false, "description": "Area: Trait system"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 604454086, "node_id": "MDU6TGFiZWw2MDQ0NTQwODY=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-inference", "name": "A-inference", "color": "f7e101", "default": false, "description": "Area: Type inference"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-13T16:47:12Z", "updated_at": "2023-01-28T14:01:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to compile the following code, the compiler will incorrectly infer the type as `()`.\r\nIt shouldn't happen, since the returned type is `Result<U, _>` and `context` doesn't change the generic value type in `Result.`\r\n\r\n```\r\nextern crate serde;\r\nextern crate failure;\r\nextern crate reqwest;\r\nuse serde::{Deserialize, Serialize};\r\nuse failure::{Fallible, ResultExt, format_err};\r\n\r\nfn post<T, U>(json: T) -> Fallible<U>\r\nwhere\r\n    T: Serialize,\r\n    for<'a> U: Deserialize<'a>,\r\n{\r\n    let client = reqwest::Client::new();\r\n    let url = \"http://someurl.com\";\r\n    let mut resp = client.post(url).json(&json).send()?;\r\n    let resp_content: Result<U, String> = resp.json().context(\"Bad JSON\")?;\r\n    resp_content.map_err(|e| format_err!(\"Provider replied: {:?}\", e))\r\n}\r\n\r\nfn run() -> Fallible<()> {\r\n    // works fine, the error is:\r\n    //      error[E0282]: type annotations needed\r\n    //let ret = post(\"foo\").expect(\"blah\");\r\n\r\n    // This incorrectly infers the type `()` instead of requiring type annotations. \r\n    // The compilation fails in the `println` line\r\n    //      error[E0277]: `()` doesn't implement `std::fmt::Display`\r\n    let ret = post(\"foo\").context(\"blah\")?;\r\n\r\n    // Here the typecheck succeeds\r\n    // let ret: String = post(\"foo\").context(\"blah\")?;\r\n    println!(\"{}\", ret);\r\n    Ok(())\r\n}\r\n\r\nfn main() {\r\n    run().unwrap();\r\n}\r\n```\r\n\r\nThe dependencies in `Cargo.toml`:\r\n```\r\n[dependencies]\r\nfailure = \"0.1\"\r\nserde = \"1.0\"\r\nreqwest = \"0.9\"\r\n```\r\n\r\nThis happens on both Rust 1.30.1 and 1.32.0-nightly (65204a97d 2018-11-12)\r\nIt is clearly a compiler bug: if both `()` and `String` are correct types, then the type inference should fail.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/55928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/55928/timeline", "performed_via_github_app": null, "state_reason": null}