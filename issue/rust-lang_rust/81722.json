{"url": "https://api.github.com/repos/rust-lang/rust/issues/81722", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/81722/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/81722/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/81722/events", "html_url": "https://github.com/rust-lang/rust/issues/81722", "id": 800620850, "node_id": "MDU6SXNzdWU4MDA2MjA4NTA=", "number": 81722, "title": "ASan/MSan should call `__sanitizer_unaligned_{load,store}` functions when performing unaligned reads/writes (TSan already calls equivalents)", "user": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 630870359, "node_id": "MDU6TGFiZWw2MzA4NzAzNTk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-sanitizers", "name": "A-sanitizers", "color": "f7e101", "default": false, "description": "Area: Sanitizers for correctness and code quality."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-02-03T19:15:15Z", "updated_at": "2021-02-08T08:01:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "There are special functions exposed by several of the sanitizers for performing unaligned loads and stores. The functions have names like [`__sanitizer_unaligned_{load,store}{16,32,64}`](https://github.com/llvm/llvm-project/blob/350fafabe9d3bda75e80bf077303eb5a09130b53/compiler-rt/include/sanitizer/common_interface_defs.h#L61-L98)\u00b9, and come with the runtimes of at least MSan/ASan/TSan, but not LSan.\r\n\r\nThe documentation for them notes:\r\n\r\n> Some of the sanitizers (for example ASan/TSan) could miss bugs that happen in unaligned loads/stores. To find such bugs reliably, you need to replace plain unaligned loads/stores with these calls.\r\n\r\nUnder `-Zsanitize=thread` we end up calling functions like __tsan_unaligned_read4 which turns out to be what tsan's implementations for these do anyway: https://github.com/llvm/llvm-project/blob/350fafabe9d3bda75e80bf077303eb5a09130b53/compiler-rt/lib/tsan/rtl/tsan_interface.cpp\r\n\r\nHowever, we don't do this for any other sanitizer. [ASan](https://github.com/llvm/llvm-project/blob/350fafabe9d3bda75e80bf077303eb5a09130b53/compiler-rt/lib/asan/asan_poisoning.cpp#L224\r\n) and [MSan](https://github.com/llvm/llvm-project/blob/350fafabe9d3bda75e80bf077303eb5a09130b53/compiler-rt/lib/msan/msan.cpp#L643) both provide implementations of these. I don't know how beneficial this is for MSan, but for ASan at least is mentioned in the header.\r\n\r\nUnless I'm mistaken, we should be doing this for MSan and ASan. The fact that we do it for TSan gives me hope that it can be added without too much effort. Alternatively, maybe the current behavior is intentional, and these are unneeded for our case for a reason that I'm not aware of.\r\n\r\nFor clarity, I haven't seen ASan miss issues because of this (and in truth have never gotten MSan working well), I just stumbled across it.\r\n\r\nAnyway, Godbolt for convenience: https://rust.godbolt.org/z/Ed4arK. Change `-Zsanitize=thread` to use `-Zsanitize=address` or `-Zsanitize=memory` to see what I mean.\r\n\r\n---\r\n\r\n\u00b9 This is included by the (more commonly used) headers `<sanitizer/[atml]san_interface.h>`. These are *definitely* public even though they begin with underscores.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/81722/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/81722/timeline", "performed_via_github_app": null, "state_reason": null}