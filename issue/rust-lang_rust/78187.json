{"url": "https://api.github.com/repos/rust-lang/rust/issues/78187", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/78187/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/78187/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/78187/events", "html_url": "https://github.com/rust-lang/rust/issues/78187", "id": 726549376, "node_id": "MDU6SXNzdWU3MjY1NDkzNzY=", "number": 78187, "title": "Lint on calling `to_owned` on a reference", "user": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 235137, "node_id": "MDU6TGFiZWwyMzUxMzc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-lint", "name": "A-lint", "color": "f7e101", "default": false, "description": "Area: Lints (warnings about flaws in source code) such as unused_mut."}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 630652267, "node_id": "MDU6TGFiZWw2MzA2NTIyNjc=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-feature-request", "name": "C-feature-request", "color": "f5f1fd", "default": false, "description": "Category: A feature request, i.e: not implemented / a PR."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-10-21T14:31:07Z", "updated_at": "2022-12-14T21:26:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The `ToOwned` trait has a blanket impl for `T: Clone`. Since references implement `Clone`, it's possible to call `&SomeNonCloneType.to_owned()` - this returns a new reference `&SomeNonCloneType`, *not* an owned `SomeNonCloneType`. This can result in a confusing error message:\r\n\r\n```rust\r\nstruct Foo;\r\n\r\nfn main() {\r\n    let a = &Foo;\r\n    let b: Foo = a.to_owned();\r\n}\r\n```\r\n\r\n```\r\nerror[E0308]: mismatched types\r\n --> src/main.rs:5:18\r\n  |\r\n5 |     let b: Foo = a.to_owned();\r\n  |            ---   ^^^^^^^^^^^^ expected struct `Foo`, found `&Foo`\r\n  |            |\r\n  |            expected due to this\r\n\r\n```\r\n\r\nHere, adding `#[derive(Clone)]` to `Foo` makes this code compile, but it's not at all obvious from looking at the error message.\r\n\r\nWe should lint on calling `val.to_owned()` or `val.clone()`, when `val` is a reference, and treated as the `Self` type (as opposed to being called on a reference to some non-reference type that implemented `Clone`). This is very likely a mistake, and in any case can be written more succinctly as `*val`", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/78187/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/78187/timeline", "performed_via_github_app": null, "state_reason": null}