{"url": "https://api.github.com/repos/rust-lang/rust/issues/76613", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/76613/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/76613/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/76613/events", "html_url": "https://github.com/rust-lang/rust/issues/76613", "id": 699739528, "node_id": "MDU6SXNzdWU2OTk3Mzk1Mjg=", "number": 76613, "title": "`Option::filter` doesn't act as expected", "user": {"login": "lebensterben", "id": 1222865, "node_id": "MDQ6VXNlcjEyMjI4NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1222865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebensterben", "html_url": "https://github.com/lebensterben", "followers_url": "https://api.github.com/users/lebensterben/followers", "following_url": "https://api.github.com/users/lebensterben/following{/other_user}", "gists_url": "https://api.github.com/users/lebensterben/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebensterben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebensterben/subscriptions", "organizations_url": "https://api.github.com/users/lebensterben/orgs", "repos_url": "https://api.github.com/users/lebensterben/repos", "events_url": "https://api.github.com/users/lebensterben/events{/privacy}", "received_events_url": "https://api.github.com/users/lebensterben/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-09-11T20:53:39Z", "updated_at": "2020-09-11T21:17:41Z", "closed_at": "2020-09-11T21:08:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried this code, which is also available in [Rust Playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5c4bfef9fe5d77949a5f6881e3b277ff):\r\n\r\n```rust\r\nlet u: Vec<Option<u8>> = vec![Some(0), Some(2), None];\r\nlet v: Vec<u8> = u.iter().filter(|_|true).map(|x|x.unwrap()).collect();\r\nprintln!(\"{:?}\", v);\r\n```\r\n\r\nI expect to get `vec![0, 2]`, because [the documentations](https://doc.rust-lang.org/stable/std/option/enum.Option.html#method.filter) says,\r\n> Returns None if the option is None, otherwise calls predicate with the wrapped value and returns:\r\n>\r\n> - Some(t) if predicate returns true (where t is the wrapped value), and\r\n> - None if predicate returns false.\r\nso any `None` should be dropped, regardless of the predicate.\r\n\r\nInstead, it panics for unwrapping a `None` value. So obviously this differs from the documentation.\r\n\r\n\r\n### Meta\r\n`rustc --version --verbose`:\r\n```\r\n1.46.0\r\n```\r\n\r\n<details><summary>Backtrace</summary>\r\n<p>\r\n\r\n```\r\nthread 'main' panicked at 'called `Option::unwrap()` on a `None` value', src/main.rs:3:56\r\nstack backtrace:\r\n   0: backtrace::backtrace::libunwind::trace\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86\r\n   1: backtrace::backtrace::trace_unsynchronized\r\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66\r\n   2: std::sys_common::backtrace::_print_fmt\r\n             at src/libstd/sys_common/backtrace.rs:78\r\n   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt\r\n             at src/libstd/sys_common/backtrace.rs:59\r\n   4: core::fmt::write\r\n             at src/libcore/fmt/mod.rs:1076\r\n   5: std::io::Write::write_fmt\r\n             at src/libstd/io/mod.rs:1537\r\n   6: std::sys_common::backtrace::_print\r\n             at src/libstd/sys_common/backtrace.rs:62\r\n   7: std::sys_common::backtrace::print\r\n             at src/libstd/sys_common/backtrace.rs:49\r\n   8: std::panicking::default_hook::{{closure}}\r\n             at src/libstd/panicking.rs:198\r\n   9: std::panicking::default_hook\r\n             at src/libstd/panicking.rs:217\r\n  10: std::panicking::rust_panic_with_hook\r\n             at src/libstd/panicking.rs:526\r\n  11: rust_begin_unwind\r\n             at src/libstd/panicking.rs:437\r\n  12: core::panicking::panic_fmt\r\n             at src/libcore/panicking.rs:85\r\n  13: core::panicking::panic\r\n             at src/libcore/panicking.rs:50\r\n  14: core::option::Option<T>::unwrap\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libcore/macros/mod.rs:10\r\n  15: playground::main::{{closure}}\r\n             at src/main.rs:3\r\n  16: core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libcore/ops/function.rs:286\r\n  17: core::option::Option<T>::map\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libcore/option.rs:453\r\n  18: <core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::next\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libcore/iter/adapters/mod.rs:852\r\n  19: alloc::vec::Vec<T>::extend_desugared\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/liballoc/vec.rs:2217\r\n  20: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/liballoc/vec.rs:2110\r\n  21: <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/liballoc/vec.rs:2105\r\n  22: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/liballoc/vec.rs:1995\r\n  23: core::iter::traits::iterator::Iterator::collect\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libcore/iter/traits/iterator.rs:1671\r\n  24: playground::main\r\n             at src/main.rs:3\r\n  25: std::rt::lang_start::{{closure}}\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/rt.rs:67\r\n  26: std::rt::lang_start_internal::{{closure}}\r\n             at src/libstd/rt.rs:52\r\n  27: std::panicking::try::do_call\r\n             at src/libstd/panicking.rs:348\r\n  28: std::panicking::try\r\n             at src/libstd/panicking.rs:325\r\n  29: std::panic::catch_unwind\r\n             at src/libstd/panic.rs:394\r\n  30: std::rt::lang_start_internal\r\n             at src/libstd/rt.rs:51\r\n  31: std::rt::lang_start\r\n             at /rustc/04488afe34512aa4c33566eb16d8c912a3ae04f9/src/libstd/rt.rs:67\r\n  32: main\r\n  33: __libc_start_main\r\n  34: _start\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n</p>\r\n</details>\r\n", "closed_by": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/76613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/76613/timeline", "performed_via_github_app": null, "state_reason": "completed"}