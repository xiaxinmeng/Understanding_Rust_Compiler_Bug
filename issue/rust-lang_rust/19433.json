{"url": "https://api.github.com/repos/rust-lang/rust/issues/19433", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/19433/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/19433/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/19433/events", "html_url": "https://github.com/rust-lang/rust/issues/19433", "id": 50480407, "node_id": "MDU6SXNzdWU1MDQ4MDQwNw==", "number": 19433, "title": "Borrow checking with loops, safe uninitailized variables, and conditional breaks.", "user": {"login": "Ericson2314", "id": 1055245, "node_id": "MDQ6VXNlcjEwNTUyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1055245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ericson2314", "html_url": "https://github.com/Ericson2314", "followers_url": "https://api.github.com/users/Ericson2314/followers", "following_url": "https://api.github.com/users/Ericson2314/following{/other_user}", "gists_url": "https://api.github.com/users/Ericson2314/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ericson2314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ericson2314/subscriptions", "organizations_url": "https://api.github.com/users/Ericson2314/orgs", "repos_url": "https://api.github.com/users/Ericson2314/repos", "events_url": "https://api.github.com/users/Ericson2314/events{/privacy}", "received_events_url": "https://api.github.com/users/Ericson2314/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37544, "node_id": "MDU6TGFiZWwzNzU0NA==", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-typesystem", "name": "A-typesystem", "color": "f7e101", "default": false, "description": "Area: The type system"}, {"id": 171502053, "node_id": "MDU6TGFiZWwxNzE1MDIwNTM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-borrow-checker", "name": "A-borrow-checker", "color": "f7e101", "default": false, "description": "Area: The borrow checker"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-01T01:56:04Z", "updated_at": "2016-11-29T22:21:51Z", "closed_at": "2016-11-29T19:41:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have some code that compiles like this:\n\n``` rust\npub struct ViewIter<'a> {\n  expected_seq: u32,\n  tagged_iter:  Peekable<&'a Tagged, dlist::Items<'a, Tagged>>,\n}\n\nimpl<'a> Iterator<u8> for ViewIter<'a>\n{\n  #[inline]\n  fn next(&mut self) -> Option<u8>\n  {\n    loop {\n      {\n        let next = match self.tagged_iter.peek() {\n          None    => return None,\n          Some(s) => s,\n        };\n\n        let cond = self.expected_seq == next.tail() ||\n          next.tail().is_clockwise(&self.expected_seq, &next.head());\n\n        if cond\n        {\n          let tagged = next;\n\n          let ret = Some(tagged.as_slice()[(self.expected_seq - tagged.tail()) as uint]);\n          self.expected_seq += 1;\n\n          return ret;\n        }\n      };\n\n      self.tagged_iter.next();\n    }\n  }\n}\n```\n\nI would like to change the method so it is instead\n\n``` rust\nimpl<'a> Iterator<u8> for ViewIter<'a>\n{\n  #[inline]\n  fn next(&mut self) -> Option<u8>\n  {\n    let tagged;\n    loop {\n      {\n        let next = match self.tagged_iter.peek() {\n          None    => return None,\n          Some(s) => s,\n        };\n\n        let cond = self.expected_seq == next.tail() ||\n          next.tail().is_clockwise(&self.expected_seq, &next.head());\n\n        if cond\n        {\n          tagged = next;\n          break;\n        }\n      };\n\n      self.tagged_iter.next();\n    }\n\n    let ret = Some(tagged.as_slice()[(self.expected_seq - tagged.tail()) as uint]);\n    self.expected_seq += 1;\n\n    ret\n  }\n}\n```\n\nBut the borrow checker rejects this. Not that if `if cond` is commented, it is accepted.\n\nI understand that the borrow checker is already doing a lot of magic regarding loops, conditional breaks, and uninitialized variables, but thought I'd report this in case I am hitting an unintended restriction.\n\n`head`, `tail`, `is_clockwise`, are invariant with respect to lifetimes. Everything else is I believe from the standard library or countravariant.\n", "closed_by": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/19433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/19433/timeline", "performed_via_github_app": null, "state_reason": "completed"}