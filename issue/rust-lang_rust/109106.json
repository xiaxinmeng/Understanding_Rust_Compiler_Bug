{"url": "https://api.github.com/repos/rust-lang/rust/issues/109106", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/109106/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/109106/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/109106/events", "html_url": "https://github.com/rust-lang/rust/issues/109106", "id": 1622400012, "node_id": "I_kwDOAAsO6M5gs9wM", "number": 109106, "title": "`std::fs` incorrect behavior when dealing with UNIX domain socket on Windows", "user": {"login": "fanzeyi", "id": 409951, "node_id": "MDQ6VXNlcjQwOTk1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/409951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzeyi", "html_url": "https://github.com/fanzeyi", "followers_url": "https://api.github.com/users/fanzeyi/followers", "following_url": "https://api.github.com/users/fanzeyi/following{/other_user}", "gists_url": "https://api.github.com/users/fanzeyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzeyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzeyi/subscriptions", "organizations_url": "https://api.github.com/users/fanzeyi/orgs", "repos_url": "https://api.github.com/users/fanzeyi/repos", "events_url": "https://api.github.com/users/fanzeyi/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzeyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 123109, "node_id": "MDU6TGFiZWwxMjMxMDk=", "url": "https://api.github.com/repos/rust-lang/rust/labels/O-windows", "name": "O-windows", "color": "6e6ec0", "default": false, "description": "Operating system: Windows"}, {"id": 289259951, "node_id": "MDU6TGFiZWwyODkyNTk5NTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/E-help-wanted", "name": "E-help-wanted", "color": "02E10C", "default": false, "description": "Call for participation: Help is requested to fix this issue."}, {"id": 650731663, "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug", "name": "C-bug", "color": "f5f1fd", "default": false, "description": "Category: This is a bug."}, {"id": 2011781731, "node_id": "MDU6TGFiZWwyMDExNzgxNzMx", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-libs", "name": "T-libs", "color": "bfd4f2", "default": false, "description": "Relevant to the library team, which will review and decide on the PR/issue."}, {"id": 2238437210, "node_id": "MDU6TGFiZWwyMjM4NDM3MjEw", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-io", "name": "A-io", "color": "f7e101", "default": false, "description": "Area: std::io, std::fs, std::net and std::path"}], "state": "closed", "locked": false, "assignee": {"login": "chaitanyav", "id": 75975, "node_id": "MDQ6VXNlcjc1OTc1", "avatar_url": "https://avatars.githubusercontent.com/u/75975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaitanyav", "html_url": "https://github.com/chaitanyav", "followers_url": "https://api.github.com/users/chaitanyav/followers", "following_url": "https://api.github.com/users/chaitanyav/following{/other_user}", "gists_url": "https://api.github.com/users/chaitanyav/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaitanyav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaitanyav/subscriptions", "organizations_url": "https://api.github.com/users/chaitanyav/orgs", "repos_url": "https://api.github.com/users/chaitanyav/repos", "events_url": "https://api.github.com/users/chaitanyav/events{/privacy}", "received_events_url": "https://api.github.com/users/chaitanyav/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chaitanyav", "id": 75975, "node_id": "MDQ6VXNlcjc1OTc1", "avatar_url": "https://avatars.githubusercontent.com/u/75975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaitanyav", "html_url": "https://github.com/chaitanyav", "followers_url": "https://api.github.com/users/chaitanyav/followers", "following_url": "https://api.github.com/users/chaitanyav/following{/other_user}", "gists_url": "https://api.github.com/users/chaitanyav/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaitanyav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaitanyav/subscriptions", "organizations_url": "https://api.github.com/users/chaitanyav/orgs", "repos_url": "https://api.github.com/users/chaitanyav/repos", "events_url": "https://api.github.com/users/chaitanyav/events{/privacy}", "received_events_url": "https://api.github.com/users/chaitanyav/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2023-03-13T22:52:22Z", "updated_at": "2023-03-18T06:37:09Z", "closed_at": "2023-03-18T06:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\nThank you for filing a bug report! \ud83d\udc1b Please provide a short summary of the bug,\nalong with any information you feel relevant to replicating the bug.\n-->\n\nI tried this code:\n\n```rust\nuse std::path::Path;\nuse std::env::args_os;\n\nfn main() {\n    let p = args_os().skip(1).next().expect(\"to have a path argument\");\n    let p: &Path = p.as_ref();\n\n    dbg!(p.display());\n    dbg!(p.exists());\n    dbg!(p.metadata());\n    dbg!(p.symlink_metadata());\n    dbg!(p.is_file());\n    dbg!(p.is_dir());\n    dbg!(p.is_symlink());\n}\n```\n\nI expected to see this happen: \n\nThe API should report the given path exists.\n\nInstead, this happened:\n\nWhen passed a path to a UNIX domain socket on Windows, I get:\n\n```\n[src\\main.rs:22] p.display() = \"<REDACTED>\\\\socket\"\n[src\\main.rs:23] p.exists() = false\n[src\\main.rs:24] p.metadata() = Err(\n    Os {\n        code: 1920,\n        kind: Uncategorized,\n        message: \"The file cannot be accessed by the system.\",\n    },\n)\n[src\\main.rs:25] p.symlink_metadata() = Ok(\n    Metadata {\n        file_type: FileType(\n            FileType {\n                attributes: 1056,\n                reparse_tag: 2147483683,\n            },\n        ),\n        is_dir: false,\n        is_file: true,\n        permissions: Permissions(\n            FilePermissions {\n                attrs: 1056,\n            },\n        ),\n        modified: Ok(\n            SystemTime {\n                intervals: 133232173107398736,\n            },\n        ),\n        accessed: Ok(\n            SystemTime {\n                intervals: 133232173107398736,\n            },\n        ),\n        created: Ok(\n            SystemTime {\n                intervals: 133172157242066860,\n            },\n        ),\n        ..\n    },\n)\n[src\\main.rs:26] p.is_file() = false\n[src\\main.rs:27] p.is_dir() = false\n[src\\main.rs:28] p.is_symlink() = false\n```\n\n\n### Meta\n<!--\nIf you're using the stable version of the compiler, you should also check if the\nbug also exists in the beta or nightly versions.\n-->\n\n`rustc --version --verbose`:\n```\nrustc --version --verbose\nrustc 1.68.0 (2c8cc3432 2023-03-06)\nbinary: rustc\ncommit-hash: 2c8cc343237b8f7d5a3c3703e3a87f2eb2c54a74\ncommit-date: 2023-03-06\nhost: x86_64-pc-windows-msvc\nrelease: 1.68.0\nLLVM version: 15.0.6\n```\n\n----\n\n## Analysis\n\nI think this is simply an unintended consequence of supporting symlinks on Windows. It is interesting that `symlink_metadata` seems to be producing a correct result here (IMO this metadata should be returned by `metadata()`).\n\nThe differences between `stat` (`metadata`) and `lstat` (`symlink_metadata`) is the `ReparsePoint` flag.\n\nhttps://github.com/rust-lang/rust/blob/8d4adad953edef2ef94b02e2bb1ed9b22bb1d975/library/std/src/sys/windows/fs.rs#L1152-L1158\n\nOn Windows, UNIX domain sockets are implemented as reparse points just like symlink. However Rust is only setting the `FILE_FLAG_OPEN_REPARSE_POINT` flag when we are testing for symlink. Without this flag `CreateFileW` is going to return the access error above.\n\nI think the issue is that, the standard library didn't consider that the possibility to have other type of files that are reparse points but not symlinks. \n\nI'm not sure what is the best fix for this, but this is kinda surprising.\n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"chaitanyav\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/109106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/109106/timeline", "performed_via_github_app": null, "state_reason": "completed"}