{"url": "https://api.github.com/repos/rust-lang/rust/issues/33941", "repository_url": "https://api.github.com/repos/rust-lang/rust", "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/33941/labels{/name}", "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/33941/comments", "events_url": "https://api.github.com/repos/rust-lang/rust/issues/33941/events", "html_url": "https://github.com/rust-lang/rust/issues/33941", "id": 157375379, "node_id": "MDU6SXNzdWUxNTczNzUzNzk=", "number": 33941, "title": "Error for `for _ in HashMap::new().iter().cloned() { }` doesn't provide enough context", "user": {"login": "niconii", "id": 10183419, "node_id": "MDQ6VXNlcjEwMTgzNDE5", "avatar_url": "https://avatars.githubusercontent.com/u/10183419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niconii", "html_url": "https://github.com/niconii", "followers_url": "https://api.github.com/users/niconii/followers", "following_url": "https://api.github.com/users/niconii/following{/other_user}", "gists_url": "https://api.github.com/users/niconii/gists{/gist_id}", "starred_url": "https://api.github.com/users/niconii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niconii/subscriptions", "organizations_url": "https://api.github.com/users/niconii/orgs", "repos_url": "https://api.github.com/users/niconii/repos", "events_url": "https://api.github.com/users/niconii/events{/privacy}", "received_events_url": "https://api.github.com/users/niconii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234902, "node_id": "MDU6TGFiZWwyMzQ5MDI=", "url": "https://api.github.com/repos/rust-lang/rust/labels/C-enhancement", "name": "C-enhancement", "color": "f5f1fd", "default": false, "description": "Category: An issue proposing an enhancement or a PR with one."}, {"id": 235791, "node_id": "MDU6TGFiZWwyMzU3OTE=", "url": "https://api.github.com/repos/rust-lang/rust/labels/A-diagnostics", "name": "A-diagnostics", "color": "f7e101", "default": false, "description": "Area: Messages for errors, warnings, and lints"}, {"id": 211668100, "node_id": "MDU6TGFiZWwyMTE2NjgxMDA=", "url": "https://api.github.com/repos/rust-lang/rust/labels/T-compiler", "name": "T-compiler", "color": "bfd4f2", "default": false, "description": "Relevant to the compiler team, which will review and decide on the PR/issue."}, {"id": 693665463, "node_id": "MDU6TGFiZWw2OTM2NjU0NjM=", "url": "https://api.github.com/repos/rust-lang/rust/labels/WG-diagnostics", "name": "WG-diagnostics", "color": "c2e0c6", "default": false, "description": "Working group: diagnostics"}, {"id": 1596121013, "node_id": "MDU6TGFiZWwxNTk2MTIxMDEz", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-confusing", "name": "D-confusing", "color": "c9f7a3", "default": false, "description": "Confusing diagnostic error that should be reworked"}, {"id": 1596122130, "node_id": "MDU6TGFiZWwxNTk2MTIyMTMw", "url": "https://api.github.com/repos/rust-lang/rust/labels/D-papercut", "name": "D-papercut", "color": "c9f7a3", "default": false, "description": "Diagnostic error that needs small tweaks"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-29T08:24:29Z", "updated_at": "2022-12-16T01:46:28Z", "closed_at": "2022-12-16T01:46:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Playpen](https://play.rust-lang.org/?gist=ad9cef83fedfb5006dfc5271827796f6&version=nightly&backtrace=0)\n\n``` rust\nuse std::collections::HashMap;\n\nfn main() {\n    for _ in HashMap::new().iter().cloned() { }\n}\n```\n\n`.cloned()` failing is normal since the iterator's items are `(&K, &V)` and `.cloned()` expects `&T`, but the number of errors is strange.\n\n```\nerror: type mismatch resolving `<std::collections::hash_map::Iter<'_, _, _> as std::iter::Iterator>::Item == &_`:\n expected tuple,\n    found &-ptr [--explain E0271]\n --> <anon>:4:36\n4 |>     for _ in HashMap::new().iter().cloned() { }\n  |>                                    ^^^^^^\n\nerror: type mismatch resolving `<std::collections::hash_map::Iter<'_, _, _> as std::iter::Iterator>::Item == &_`:\n expected tuple,\n    found &-ptr [--explain E0271]\n --> <anon>:4:5\n4 |>     for _ in HashMap::new().iter().cloned() { }\n  |>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Cloned<std::collections::hash_map::Iter<'_, _, _>>`\n\nerror: type mismatch resolving `<std::collections::hash_map::Iter<'_, _, _> as std::iter::Iterator>::Item == &_`:\n expected tuple,\n    found &-ptr [--explain E0271]\n --> <anon>:4:5\n4 |>     for _ in HashMap::new().iter().cloned() { }\n  |>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Cloned<std::collections::hash_map::Iter<'_, _, _>>`\n\nerror: type mismatch resolving `<std::collections::hash_map::Iter<'_, _, _> as std::iter::Iterator>::Item == &_`:\n expected tuple,\n    found &-ptr [--explain E0271]\n --> <anon>:4:5\n4 |>     for _ in HashMap::new().iter().cloned() { }\n  |>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Cloned<std::collections::hash_map::Iter<'_, _, _>>`\nnote: required by `std::iter::IntoIterator::into_iter`\n\nerror: type mismatch resolving `<std::collections::hash_map::Iter<'_, _, _> as std::iter::Iterator>::Item == &_`:\n expected tuple,\n    found &-ptr [--explain E0271]\n --> <anon>:4:5\n4 |>     for _ in HashMap::new().iter().cloned() { }\n  |>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Cloned<std::collections::hash_map::Iter<'_, _, _>>`\nnote: required by `std::iter::IntoIterator::into_iter`\n\nerror: type mismatch resolving `<std::collections::hash_map::Iter<'_, _, _> as std::iter::Iterator>::Item == &_`:\n expected tuple,\n    found &-ptr [--explain E0271]\n --> <anon>:4:5\n4 |>     for _ in HashMap::new().iter().cloned() { }\n  |>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Cloned<std::collections::hash_map::Iter<'_, _, _>>`\nnote: required because of the requirements on the impl of `std::iter::IntoIterator` for `std::iter::Cloned<std::collections::hash_map::Iter<'_, _, _>>`\n\nerror: type mismatch resolving `<std::collections::hash_map::Iter<'_, _, _> as std::iter::Iterator>::Item == &_`:\n expected tuple,\n    found &-ptr [--explain E0271]\n --> <anon>:4:5\n4 |>     for _ in HashMap::new().iter().cloned() { }\n  |>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Cloned<std::collections::hash_map::Iter<'_, _, _>>`\n\nerror: type mismatch resolving `<std::collections::hash_map::Iter<'_, _, _> as std::iter::Iterator>::Item == &_`:\n expected tuple,\n    found &-ptr [--explain E0271]\n --> <anon>:4:5\n4 |>     for _ in HashMap::new().iter().cloned() { }\n  |>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Cloned<std::collections::hash_map::Iter<'_, _, _>>`\nnote: required by `std::iter::Iterator::next`\n\nerror: type mismatch resolving `<std::collections::hash_map::Iter<'_, _, _> as std::iter::Iterator>::Item == &_`:\n expected tuple,\n    found &-ptr [--explain E0271]\n --> <anon>:4:5\n4 |>     for _ in HashMap::new().iter().cloned() { }\n  |>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: required because of the requirements on the impl of `std::iter::Iterator` for `std::iter::Cloned<std::collections::hash_map::Iter<'_, _, _>>`\n\nerror: aborting due to 9 previous errors\n```\n", "closed_by": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/rust-lang/rust/issues/33941/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/33941/timeline", "performed_via_github_app": null, "state_reason": "completed"}